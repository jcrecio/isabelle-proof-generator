{"file_name": "/home/qj213/afp-2021-10-22/thys/Tarskis_Geometry/Hyperbolic_Tarski.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Tarskis_Geometry", "problem_names": ["lemma M_symmatrix: \"symmatrix M\"", "lemma M_self_inverse: \"M ** M = mat 1\"", "lemma M_invertible: \"invertible M\"", "lemma polar_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"polar (proj2_abs v) = proj2_line_abs (M *v v)\"", "lemma pole_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"pole (proj2_line_abs v) = proj2_abs (M *v v)\"", "lemma polar_rep_non_zero: \"M *v proj2_rep p \\<noteq> 0\"", "lemma pole_polar: \"pole (polar p) = p\"", "lemma pole_rep_non_zero: \"M *v proj2_line_rep l \\<noteq> 0\"", "lemma polar_pole: \"polar (pole l) = l\"", "lemma polar_inj:\n  assumes \"polar p = polar q\"\n  shows \"p = q\"", "lemma conic_sgn_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))\"", "lemma sgn_conic_sgn: \"sgn (conic_sgn p) = conic_sgn p\"", "lemma S_K2_empty: \"S \\<inter> K2 = {}\"", "lemma K2_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"proj2_abs v \\<in> K2 \\<longleftrightarrow> v \\<bullet> (M *v v) < 0\"", "lemma K2_centre_non_zero: \"vector [0,0,1] \\<noteq> (0 :: real^3)\"", "lemma K2_centre_in_K2: \"K2_centre \\<in> K2\"", "lemma K2_imp_M_neg:\n  assumes \"v \\<noteq> 0\" and \"proj2_abs v \\<in> K2\"\n  shows \"v \\<bullet> (M *v v) < 0\"", "lemma M_neg_imp_z_squared_big:\n  assumes \"v \\<bullet> (M *v v) < 0\"\n  shows \"(v$3)\\<^sup>2 > (v$1)\\<^sup>2 + (v$2)\\<^sup>2\"", "lemma M_neg_imp_z_non_zero:\n  assumes \"v \\<bullet> (M *v v) < 0\"\n  shows \"v$3 \\<noteq> 0\"", "lemma M_neg_imp_K2:\n  assumes \"v \\<bullet> (M *v v) < 0\"\n  shows \"proj2_abs v \\<in> K2\"", "lemma M_reverse: \"a \\<bullet> (M *v b) = b \\<bullet> (M *v a)\"", "lemma S_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"proj2_abs v \\<in> S \\<longleftrightarrow> v \\<bullet> (M *v v) = 0\"", "lemma S_alt_def: \"p \\<in> S \\<longleftrightarrow> proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\"", "lemma incident_polar:\n  \"proj2_incident p (polar q) \\<longleftrightarrow> proj2_rep p \\<bullet> (M *v proj2_rep q) = 0\"", "lemma incident_own_polar_in_S: \"proj2_incident p (polar p) \\<longleftrightarrow> p \\<in> S\"", "lemma incident_polar_swap:\n  assumes \"proj2_incident p (polar q)\"\n  shows \"proj2_incident q (polar p)\"", "lemma incident_pole_polar:\n  assumes \"proj2_incident p l\"\n  shows \"proj2_incident (pole l) (polar p)\"", "lemma z_zero:\n  assumes \"(proj2_rep p)$3 = 0\"\n  shows \"proj2_incident p z_zero\"", "lemma z_zero_conic_sgn_1:\n  assumes \"proj2_incident p z_zero\"\n  shows \"conic_sgn p = 1\"", "lemma conic_sgn_not_1_z_non_zero:\n  assumes \"conic_sgn p \\<noteq> 1\"\n  shows \"z_non_zero p\"", "lemma z_zero_not_in_S:\n  assumes \"proj2_incident p z_zero\"\n  shows \"p \\<notin> S\"", "lemma line_incident_point_not_in_S: \"\\<exists> p. p \\<notin> S \\<and> proj2_incident p l\"", "lemma apply_cltn2_abs_abs_in_S:\n  assumes \"v \\<noteq> 0\" and \"invertible J\"\n  shows \"apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S\n  \\<longleftrightarrow> v \\<bullet> (J ** M ** transpose J *v v) = 0\"", "lemma apply_cltn2_right_abs_in_S:\n  assumes \"invertible J\"\n  shows \"apply_cltn2 p (cltn2_abs J) \\<in> S\n  \\<longleftrightarrow> (proj2_rep p) \\<bullet> (J ** M ** transpose J *v (proj2_rep p)) = 0\"", "lemma apply_cltn2_abs_in_S:\n  assumes \"v \\<noteq> 0\"\n  shows \"apply_cltn2 (proj2_abs v) C \\<in> S\n  \\<longleftrightarrow> v \\<bullet> (cltn2_rep C ** M ** transpose (cltn2_rep C) *v v) = 0\"", "lemma apply_cltn2_in_S:\n  \"apply_cltn2 p C \\<in> S\n  \\<longleftrightarrow> proj2_rep p \\<bullet> (cltn2_rep C ** M ** transpose (cltn2_rep C) *v proj2_rep p)\n  = 0\"", "lemma norm_M: \"(vector2_append1 v) \\<bullet> (M *v vector2_append1 v) = (norm v)\\<^sup>2 - 1\"", "lemmas compass_defs = east_def west_def north_def south_def", "lemma compass_non_zero:\n  shows \"vector [1,0,1] \\<noteq> (0 :: real^3)\"\n  and \"vector [-1,0,1] \\<noteq> (0 :: real^3)\"\n  and \"vector [0,1,1] \\<noteq> (0 :: real^3)\"\n  and \"vector [0,-1,1] \\<noteq> (0 :: real^3)\"\n  and \"vector [0,1,0] \\<noteq> (0 :: real^3)\"\n  and \"vector [1,0,0] \\<noteq> (0 :: real^3)\"", "lemma east_west_distinct: \"east \\<noteq> west\"", "lemma north_south_distinct: \"north \\<noteq> south\"", "lemma north_not_east_or_west: \"north \\<notin> {east, west}\"", "lemma compass_in_S:\n  shows \"east \\<in> S\" and \"west \\<in> S\" and \"north \\<in> S\" and \"south \\<in> S\"", "lemma east_west_tangents:\n  shows \"polar east = proj2_line_abs (vector [-1,0,1])\"\n  and \"polar west = proj2_line_abs (vector [1,0,1])\"", "lemma east_west_tangents_distinct: \"polar east \\<noteq> polar west\"", "lemma east_west_tangents_incident_far_north:\n  shows \"proj2_incident far_north (polar east)\"\n  and \"proj2_incident far_north (polar west)\"", "lemma east_west_tangents_far_north:\n  \"proj2_intersection (polar east) (polar west) = far_north\"", "lemma equator_meridian_distinct: \"equator \\<noteq> meridian\"", "lemma east_west_on_equator:\n  shows \"proj2_incident east equator\" and \"proj2_incident west equator\"", "lemma north_far_north_distinct: \"north \\<noteq> far_north\"", "lemma north_south_far_north_on_meridian:\n  shows \"proj2_incident north meridian\" and \"proj2_incident south meridian\"\n  and \"proj2_incident far_north meridian\"", "lemma K2_centre_on_equator_meridian:\n  shows \"proj2_incident K2_centre equator\"\n  and \"proj2_incident K2_centre meridian\"", "lemma on_equator_meridian_is_K2_centre:\n  assumes \"proj2_incident a equator\" and \"proj2_incident a meridian\"\n  shows \"a = K2_centre\"", "lemmas compass_reflect_defs = equator_reflect_def meridian_reflect_def\n  rep_equator_reflect_def rep_meridian_reflect_def", "lemma compass_reflect_self_inverse:\n  shows \"rep_equator_reflect ** rep_equator_reflect = mat 1\"\n  and \"rep_meridian_reflect ** rep_meridian_reflect = mat 1\"", "lemma compass_reflect_invertible:\n  shows \"invertible rep_equator_reflect\" and \"invertible rep_meridian_reflect\"", "lemma compass_reflect_compass:\n  shows \"apply_cltn2 east meridian_reflect = west\"\n  and \"apply_cltn2 west meridian_reflect = east\"\n  and \"apply_cltn2 north meridian_reflect = north\"\n  and \"apply_cltn2 south meridian_reflect = south\"\n  and \"apply_cltn2 K2_centre meridian_reflect = K2_centre\"\n  and \"apply_cltn2 east equator_reflect = east\"\n  and \"apply_cltn2 west equator_reflect = west\"\n  and \"apply_cltn2 north equator_reflect = south\"\n  and \"apply_cltn2 south equator_reflect = north\"\n  and \"apply_cltn2 K2_centre equator_reflect = K2_centre\"", "lemma on_equator_rep:\n  assumes \"z_non_zero a\" and \"proj2_incident a equator\"\n  shows \"\\<exists> x. a = proj2_abs (vector [x,0,1])\"", "lemma on_meridian_rep:\n  assumes \"z_non_zero a\" and \"proj2_incident a meridian\"\n  shows \"\\<exists> y. a = proj2_abs (vector [0,y,1])\"", "lemma norm_lt_1_iff_in_hyp2:\n  shows \"norm v < 1 \\<longleftrightarrow> proj2_pt v \\<in> hyp2\"", "lemma norm_eq_1_iff_in_S:\n  shows \"norm v = 1 \\<longleftrightarrow> proj2_pt v \\<in> S\"", "lemma norm_le_1_iff_in_hyp2_S:\n  \"norm v \\<le> 1 \\<longleftrightarrow> proj2_pt v \\<in> hyp2 \\<union> S\"", "lemma proj2_pt_hyp2_rep: \"proj2_pt (hyp2_rep p) = Rep_hyp2 p\"", "lemma hyp2_rep_abs:\n  assumes \"norm v < 1\"\n  shows \"hyp2_rep (hyp2_abs v) = v\"", "lemma hyp2_abs_rep: \"hyp2_abs (hyp2_rep p) = p\"", "lemma norm_hyp2_rep_lt_1: \"norm (hyp2_rep p) < 1\"", "lemma hyp2_S_z_non_zero:\n  assumes \"p \\<in> hyp2 \\<union> S\"\n  shows \"z_non_zero p\"", "lemma hyp2_S_not_equal:\n  assumes \"a \\<in> hyp2\" and \"p \\<in> S\"\n  shows \"a \\<noteq> p\"", "lemma hyp2_S_cart2_inj:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"cart2_pt p = cart2_pt q\"\n  shows \"p = q\"", "lemma on_equator_in_hyp2_rep:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a equator\"\n  shows \"\\<exists> x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x,0,1])\"", "lemma on_meridian_in_hyp2_rep:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a meridian\"\n  shows \"\\<exists> y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0,y,1])\"", "lemma cltn2_id_is_K2_isometry: \"is_K2_isometry cltn2_id\"", "lemma J_M_J_transpose_K2_isometry:\n  assumes \"k \\<noteq> 0\"\n  and \"repJ ** M ** transpose repJ = k *\\<^sub>R M\" (is \"?N = _\")\n  shows \"is_K2_isometry (cltn2_abs repJ)\" (is \"is_K2_isometry ?J\")", "lemma equator_reflect_K2_isometry:\n  shows \"is_K2_isometry equator_reflect\"", "lemma meridian_reflect_K2_isometry:\n  shows \"is_K2_isometry meridian_reflect\"", "lemma cltn2_compose_is_K2_isometry:\n  assumes \"is_K2_isometry H\" and \"is_K2_isometry J\"\n  shows \"is_K2_isometry (cltn2_compose H J)\"", "lemma cltn2_inverse_is_K2_isometry:\n  assumes \"is_K2_isometry J\"\n  shows \"is_K2_isometry (cltn2_inverse J)\"", "lemma K2_isometry_inverse_inv [simp]:\n  assumes \"is_K2_isometry J\"\n  shows \"inv\\<^bsub>(|carrier = Collect is_K2_isometry, mult = cltn2_compose, one = cltn2_id|)\\<^esub> J\n  = cltn2_inverse J\"", "lemma collinear_quadratic:\n  assumes \"t = i *\\<^sub>R a + r\"\n  shows \"t \\<bullet> (M *v t) =\n  (a \\<bullet> (M *v a)) * i\\<^sup>2 + 2 * (a \\<bullet> (M *v r)) * i + r \\<bullet> (M *v r)\"", "lemma S_quadratic':\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\"\n  shows \"proj2_abs (k *\\<^sub>R p + q) \\<in> S\n  \\<longleftrightarrow> p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k + q \\<bullet> (M *v q) = 0\"", "lemma S_quadratic:\n  assumes \"p \\<noteq> q\" and \"r = proj2_abs (k *\\<^sub>R proj2_rep p + proj2_rep q)\"\n  shows \"r \\<in> S\n  \\<longleftrightarrow> proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2\n      + proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k\n      + proj2_rep q \\<bullet> (M *v proj2_rep q)\n    = 0\"", "lemma quarter_discrim_invariant:\n  assumes \"t = i *\\<^sub>R a + r\"\n  shows \"quarter_discrim a t = quarter_discrim a r\"", "lemma quarter_discrim_positive:\n  assumes \"p \\<noteq> 0\"  and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_abs p \\<in> K2\"\n  shows \"quarter_discrim p q > 0\"", "lemma quarter_discrim_self_zero:\n  assumes \"proj2_abs a = proj2_abs b\"\n  shows \"quarter_discrim a b = 0\"", "lemmas S_intersection_coeffs_defs =\n  S_intersection_coeff1_def S_intersection_coeff2_def", "lemmas S_intersections_defs =\n  S_intersection1_def S_intersection2_def\n  S_intersection1_rep_def S_intersection2_rep_def", "lemma S_intersection_coeffs_distinct:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_abs p \\<in> K2\"\n  shows \"S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q\"", "lemma S_intersections_distinct:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_abs p \\<in> K2\"\n  shows \"S_intersection1 p q \\<noteq> S_intersection2 p q\"", "lemma S_intersections_in_S:\n  assumes \"p \\<noteq> 0\"  and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_abs p \\<in> K2\"\n  shows \"S_intersection1 p q \\<in> S\" and \"S_intersection2 p q \\<in> S\"", "lemma S_intersections_Col:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\"\n  shows \"proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\"\n  (is \"proj2_Col ?pp ?pq ?pr\")\n    and \"proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\"\n  (is \"proj2_Col ?pp ?pq ?ps\")", "lemma S_intersections_incident:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_incident (proj2_abs p) l\" and \"proj2_incident (proj2_abs q) l\"\n  shows \"proj2_incident (S_intersection1 p q) l\" (is \"proj2_incident ?pr l\")\n  and \"proj2_incident (S_intersection2 p q) l\" (is \"proj2_incident ?ps l\")", "lemma K2_line_intersect_twice:\n  assumes \"a \\<in> K2\" and \"a \\<noteq> r\"\n  shows \"\\<exists> s u. s \\<noteq> u \\<and> s \\<in> S \\<and> u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u\"", "lemma point_in_S_polar_is_tangent:\n  assumes \"p \\<in> S\" and \"q \\<in> S\" and \"proj2_incident q (polar p)\"\n  shows \"q = p\"", "lemma line_through_K2_intersect_S_twice:\n  assumes \"p \\<in> K2\" and \"proj2_incident p l\"\n  shows \"\\<exists> q r. q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\"", "lemma line_through_K2_intersect_S_again:\n  assumes \"p \\<in> K2\" and \"proj2_incident p l\"\n  shows \"\\<exists> r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\"", "lemma line_through_K2_intersect_S:\n  assumes \"p \\<in> K2\" and \"proj2_incident p l\"\n  shows \"\\<exists> r. r \\<in> S \\<and> proj2_incident r l\"", "lemma line_intersect_S_at_most_twice:\n  \"\\<exists> p q. \\<forall> r\\<in>S. proj2_incident r l \\<longrightarrow> r = p \\<or> r = q\"", "lemma card_line_intersect_S:\n  assumes \"T \\<subseteq> S\" and \"proj2_set_Col T\"\n  shows \"card T \\<le> 2\"", "lemma line_S_two_intersections_only:\n  assumes \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> S\"\n  and \"proj2_incident p l\" and \"proj2_incident q l\" and \"proj2_incident r l\"\n  shows \"r = p \\<or> r = q\"", "lemma line_through_K2_intersect_S_exactly_twice:\n  assumes \"p \\<in> K2\" and \"proj2_incident p l\"\n  shows \"\\<exists> q r. q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\n  \\<and> (\\<forall> s\\<in>S. proj2_incident s l \\<longrightarrow> s = q \\<or> s = r)\"", "lemma tangent_not_through_K2:\n  assumes \"p \\<in> S\" and \"q \\<in> K2\"\n  shows \"\\<not> proj2_incident q (polar p)\"", "lemma outside_exists_line_not_intersect_S:\n  assumes \"conic_sgn p = 1\"\n  shows \"\\<exists> l. proj2_incident p l \\<and> (\\<forall> q. proj2_incident q l \\<longrightarrow> q \\<notin> S)\"", "lemma lines_through_intersect_S_twice_in_K2:\n  assumes \"\\<forall> l. proj2_incident p l\n  \\<longrightarrow> (\\<exists> q r. q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l)\"\n  shows \"p \\<in> K2\"", "lemma line_through_hyp2_pole_not_in_hyp2:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a l\"\n  shows \"pole l \\<notin> hyp2\"", "lemma statement60_one_way:\n  assumes \"is_K2_isometry J\" and \"p \\<in> K2\"\n  shows \"apply_cltn2 p J \\<in> K2\" (is \"?p' \\<in> K2\")", "lemma is_K2_isometry_hyp2_S:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"apply_cltn2 p J \\<in> hyp2 \\<union> S\"", "lemma is_K2_isometry_z_non_zero:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"z_non_zero (apply_cltn2 p J)\"", "lemma cart2_append1_apply_cltn2:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"\\<exists> k. k \\<noteq> 0\n  \\<and> cart2_append1 p v* cltn2_rep J = k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\"", "lemma hyp2_cltn2_id [simp]: \"hyp2_cltn2 p cltn2_id = p\"", "lemma apply_cltn2_Rep_hyp2:\n  assumes \"is_K2_isometry J\"\n  shows \"apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2\"", "lemma Rep_hyp2_cltn2:\n  assumes \"is_K2_isometry J\"\n  shows \"Rep_hyp2 (hyp2_cltn2 p J) = apply_cltn2 (Rep_hyp2 p) J\"", "lemma hyp2_cltn2_compose:\n  assumes \"is_K2_isometry H\"\n  shows \"hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (cltn2_compose H J)\"", "lemma three_in_S_tangent_intersection_no_3_Col:\n  assumes \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> S\"\n  and \"p \\<noteq> q\" and \"r \\<notin> {p,q}\"\n  shows \"proj2_no_3_Col {proj2_intersection (polar p) (polar q),r,p,q}\"\n  (is \"proj2_no_3_Col {?s,r,p,q}\")", "lemma statement65_special_case:\n  assumes \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> S\" and \"p \\<noteq> q\" and \"r \\<notin> {p,q}\"\n  shows \"\\<exists> J. is_K2_isometry J\n  \\<and> apply_cltn2 east J = p\n  \\<and> apply_cltn2 west J = q\n  \\<and> apply_cltn2 north J = r\n  \\<and> apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\"", "lemma statement66_existence:\n  assumes \"a1 \\<in> K2\" and \"a2 \\<in> K2\" and \"p1 \\<in> S\" and \"p2 \\<in> S\"\n  shows \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2\"", "lemma K2_isometry_swap:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 a J = b \\<and> apply_cltn2 b J = a\"", "theorem hyp2_axiom1: \"\\<forall> a b. a b \\<congruent>\\<^sub>K b a\"", "theorem hyp2_axiom2: \"\\<forall> a b p q r s. a b \\<congruent>\\<^sub>K p q \\<and> a b \\<congruent>\\<^sub>K r s \\<longrightarrow> p q \\<congruent>\\<^sub>K r s\"", "theorem hyp2_axiom3: \"\\<forall> a b c. a b \\<congruent>\\<^sub>K c c \\<longrightarrow> a = b\"", "lemma S_at_edge:\n  assumes \"p \\<in> S\" and \"q \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\" and \"proj2_Col p q r\"\n  shows \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt q) (cart2_pt r)\n  \\<or> B\\<^sub>\\<real> (cart2_pt p) (cart2_pt r) (cart2_pt q)\"\n  (is \"B\\<^sub>\\<real> ?cp ?cq ?cr \\<or> _\")", "lemma hyp2_in_middle:\n  assumes \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> hyp2 \\<union> S\" and \"proj2_Col p q r\"\n  and \"p \\<noteq> q\"\n  shows \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt r) (cart2_pt q)\" (is \"B\\<^sub>\\<real> ?cp ?cr ?cq\")", "lemma hyp2_incident_in_middle:\n  assumes \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2 \\<union> S\"\n  and \"proj2_incident p l\" and \"proj2_incident q l\" and \"proj2_incident a l\"\n  shows \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt a) (cart2_pt q)\"", "lemma extend_to_S:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\"\n  shows \"\\<exists> r\\<in>S. B\\<^sub>\\<real> (cart2_pt p) (cart2_pt q) (cart2_pt r)\"\n  (is \"\\<exists> r\\<in>S. B\\<^sub>\\<real> ?cp ?cq (cart2_pt r)\")", "lemma endpoint_in_S:\n  assumes \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  shows \"endpoint_in_S a b \\<in> S\" (is \"?p \\<in> S\")\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt (endpoint_in_S a b))\"\n  (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")", "lemma endpoint_in_S_swap:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  shows \"endpoint_in_S a b \\<noteq> endpoint_in_S b a\" (is \"?p \\<noteq> ?q\")", "lemma endpoint_in_S_incident:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\"\n  shows \"proj2_incident (endpoint_in_S a b) l\" (is \"proj2_incident ?p l\")", "lemma endpoints_in_S_incident_unique:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\" and \"p \\<in> S\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\" and \"proj2_incident p l\"\n  shows \"p = endpoint_in_S a b \\<or> p = endpoint_in_S b a\"\n  (is \"p = ?q \\<or> p = ?r\")", "lemma endpoint_in_S_unique:\n  assumes \"a \\<noteq> b\" and  \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\" and \"p \\<in> S\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\" (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")\n  shows \"p = endpoint_in_S a b\" (is \"p = ?q\")", "lemma between_hyp2_S:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\" and \"k \\<ge> 0\" and \"k \\<le> 1\"\n  shows \"proj2_pt (k *\\<^sub>R (cart2_pt r) + (1 - k) *\\<^sub>R (cart2_pt p)) \\<in> hyp2 \\<union> S\"\n  (is \"proj2_pt ?cq \\<in> _\")", "lemma expansion_factor:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"expansion_factor p J \\<noteq> 0\"\n  and \"cart2_append1 p v* cltn2_rep J\n  = expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)\"", "lemma expansion_factor_linear_apply_cltn2:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\"\n  and \"is_K2_isometry J\"\n  and \"cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q\"\n  shows \"expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J)\n  = (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n  + ((1 - k) * expansion_factor q J) *\\<^sub>R cart2_append1 (apply_cltn2 q J)\"\n  (is \"?er *\\<^sub>R _ = (k * ?ep) *\\<^sub>R _ + ((1 - k) * ?eq) *\\<^sub>R _\")", "lemma expansion_factor_linear:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\"\n  and \"is_K2_isometry J\"\n  and \"cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q\"\n  shows \"expansion_factor r J\n  = k * expansion_factor p J + (1 - k) * expansion_factor q J\"\n  (is \"?er = k * ?ep + (1 - k) * ?eq\")", "lemma expansion_factor_sgn_invariant:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"sgn (expansion_factor p J) = sgn (expansion_factor q J)\"\n  (is \"sgn ?ep = sgn ?eq\")", "lemma statement_63:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\"\n  and \"is_K2_isometry J\" and \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt q) (cart2_pt r)\"\n  shows \"B\\<^sub>\\<real>\n  (cart2_pt (apply_cltn2 p J))\n  (cart2_pt (apply_cltn2 q J))\n  (cart2_pt (apply_cltn2 r J))\"", "theorem hyp2_axiom4: \"\\<forall> q a b c. \\<exists> x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c\"", "lemma hyp2_S_points_fix_line:\n  assumes \"a \\<in> hyp2\" and \"p \\<in> S\" and \"is_K2_isometry J\"\n  and \"apply_cltn2 a J = a\" (is \"?aJ = a\")\n  and \"apply_cltn2 p J = p\" (is \"?pJ = p\")\n  and \"proj2_incident a l\" and \"proj2_incident p l\" and \"proj2_incident b l\"\n  shows \"apply_cltn2 b J = b\" (is \"?bJ = b\")", "lemma K2_isometry_endpoint_in_S:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"apply_cltn2 (endpoint_in_S a b) J\n  = endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)\"\n  (is \"?pJ = endpoint_in_S ?aJ ?bJ\")", "lemma between_endpoint_in_S:\n  assumes \"a \\<noteq> b\" and \"b \\<noteq> c\"\n  and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\" and \"c \\<in> hyp2 \\<union> S\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt c)\" (is \"B\\<^sub>\\<real> ?ca ?cb ?cc\")\n  shows \"endpoint_in_S a b = endpoint_in_S b c\" (is \"?p = ?q\")", "lemma hyp2_extend_segment_unique:\n  assumes \"a \\<noteq> b\" and \"B\\<^sub>K a b c\" and \"B\\<^sub>K a b d\" and \"b c \\<congruent>\\<^sub>K b d\"\n  shows \"c = d\"", "lemma line_S_match_intersections:\n  assumes \"p \\<noteq> q\" and \"r \\<noteq> s\" and \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> S\" and \"s \\<in> S\"\n  and \"proj2_set_Col {p,q,r,s}\"\n  shows \"(p = r \\<and> q = s) \\<or> (q = r \\<and> p = s)\"", "lemma are_endpoints_in_S':\n  assumes \"p \\<noteq> q\" and \"a \\<noteq> b\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2 \\<union> S\"\n  and \"b \\<in> hyp2 \\<union> S\" and \"proj2_set_Col {p,q,a,b}\"\n  shows \"(p = endpoint_in_S a b \\<and> q = endpoint_in_S b a)\n  \\<or> (q = endpoint_in_S a b \\<and> p = endpoint_in_S b a)\"\n  (is \"(p = ?r \\<and> q = ?s) \\<or> (q = ?r \\<and> p = ?s)\")", "lemma are_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"are_endpoints_in_S p q a b\"\n  shows \"(p = endpoint_in_S a b \\<and> q = endpoint_in_S b a)\n  \\<or> (q = endpoint_in_S a b \\<and> p = endpoint_in_S b a)\"", "lemma S_intersections_endpoints_in_S:\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\" and \"proj2_abs a \\<noteq> proj2_abs b\" (is \"?pa \\<noteq> ?pb\")\n  and \"proj2_abs a \\<in> hyp2\" and \"proj2_abs b \\<in> hyp2 \\<union> S\"\n  shows \"(S_intersection1 a b = endpoint_in_S ?pa ?pb\n      \\<and> S_intersection2 a b = endpoint_in_S ?pb ?pa)\n    \\<or> (S_intersection2 a b = endpoint_in_S ?pa ?pb\n      \\<and> S_intersection1 a b = endpoint_in_S ?pb ?pa)\"\n  (is \"(?pp = ?pr \\<and> ?pq = ?ps) \\<or> (?pq = ?pr \\<and> ?pp = ?ps)\")", "lemma between_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  shows \"B\\<^sub>\\<real>\n  (cart2_pt (endpoint_in_S a b)) (cart2_pt a) (cart2_pt (endpoint_in_S b a))\"\n  (is \"B\\<^sub>\\<real> ?cp ?ca ?cq\")", "lemma S_hyp2_S_cart2_append1:\n  assumes \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2\"\n  and \"proj2_incident p l\" and \"proj2_incident q l\" and \"proj2_incident a l\"\n  shows \"\\<exists> k. k > 0 \\<and> k < 1\n  \\<and> cart2_append1 a = k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p\"", "lemma are_endpoints_in_S_swap_34:\n  assumes \"are_endpoints_in_S p q a b\"\n  shows \"are_endpoints_in_S p q b a\"", "lemma proj2_set_Col_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  shows \"proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}\"\n  (is \"proj2_set_Col {?p,?q,a,b}\")", "lemma endpoints_in_S_are_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\"\n  (is \"are_endpoints_in_S ?p ?q a b\")", "lemma endpoint_in_S_S_hyp2_distinct:\n  assumes \"p \\<in> S\" and \"a \\<in> hyp2 \\<union> S\" and \"p \\<noteq> a\"\n  shows \"endpoint_in_S p a \\<noteq> p\"", "lemma endpoint_in_S_S_strict_hyp2_distinct:\n  assumes \"p \\<in> S\" and \"a \\<in> hyp2\"\n  shows \"endpoint_in_S p a \\<noteq> p\"", "lemma end_and_opposite_are_endpoints_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"p \\<in> S\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\" and \"proj2_incident p l\"\n  shows \"are_endpoints_in_S p (endpoint_in_S p b) a b\"\n  (is \"are_endpoints_in_S p ?q a b\")", "lemma real_hyp2_B_hyp2_cltn2:\n  assumes \"is_K2_isometry J\" and \"B\\<^sub>K a b c\"\n  shows \"B\\<^sub>K (hyp2_cltn2 a J) (hyp2_cltn2 b J) (hyp2_cltn2 c J)\"\n  (is \"B\\<^sub>K ?aJ ?bJ ?cJ\")", "lemma real_hyp2_C_hyp2_cltn2:\n  assumes \"is_K2_isometry J\"\n  shows \"a b \\<congruent>\\<^sub>K (hyp2_cltn2 a J) (hyp2_cltn2 b J)\" (is \"a b \\<congruent>\\<^sub>K ?aJ ?bJ\")", "lemma M_perp_sym:\n  assumes \"M_perp l m\"\n  shows \"M_perp m l\"", "lemma M_perp_to_compass:\n  assumes \"M_perp l m\" and \"a \\<in> hyp2\" and \"proj2_incident a l\"\n  and \"b \\<in> hyp2\" and \"proj2_incident b m\"\n  shows \"\\<exists> J. is_K2_isometry J\n  \\<and> apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m\"", "lemma drop_perp_incident: \"proj2_incident p (drop_perp p l)\"", "lemma drop_perp_perp: \"M_perp l (drop_perp p l)\"", "lemma perp_foot_incident:\n  shows \"proj2_incident (perp_foot p l) l\"\n  and \"proj2_incident (perp_foot p l) (drop_perp p l)\"", "lemma M_perp_hyp2:\n  assumes \"M_perp l m\" and \"a \\<in> hyp2\" and \"proj2_incident a l\" and \"b \\<in> hyp2\"\n  and \"proj2_incident b m\" and \"proj2_incident c l\" and \"proj2_incident c m\"\n  shows \"c \\<in> hyp2\"", "lemma perp_foot_hyp2:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a l\" and \"b \\<in> hyp2\"\n  shows \"perp_foot b l \\<in> hyp2\"", "lemma perp_up_degenerate_in_S_incident:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a l\"\n  shows \"perp_up a l \\<in> S\" (is \"?p \\<in> S\")\n  and \"proj2_incident (perp_up a l) (drop_perp a l)\"", "lemma perp_up_non_degenerate_in_S_at_end:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  and \"\\<not> proj2_incident a l\"\n  shows \"perp_up a l \\<in> S\"\n  and \"B\\<^sub>\\<real> (cart2_pt (perp_foot a l)) (cart2_pt a) (cart2_pt (perp_up a l))\"", "lemma perp_up_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"perp_up a l \\<in> S\"", "lemma perp_up_incident:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"proj2_incident (perp_up a l) (drop_perp a l)\"\n  (is \"proj2_incident ?p ?m\")", "lemma drop_perp_same_line_pole_in_S:\n  assumes \"drop_perp p l = l\"\n  shows \"pole l \\<in> S\"", "lemma hyp2_drop_perp_not_same_line:\n  assumes \"a \\<in> hyp2\"\n  shows \"drop_perp a l \\<noteq> l\"", "lemma hyp2_incident_perp_foot_same_point:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a l\"\n  shows \"perp_foot a l = a\"", "lemma perp_up_at_end:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"B\\<^sub>\\<real> (cart2_pt (perp_foot a l)) (cart2_pt a) (cart2_pt (perp_up a l))\"", "lemma perp_down_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"perp_down a l \\<in> S\"", "lemma perp_down_incident:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"proj2_incident (perp_down a l) (drop_perp a l)\"", "lemma perp_up_down_distinct:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"perp_up a l \\<noteq> perp_down a l\"", "lemma perp_up_down_foot_are_endpoints_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a\"", "lemma perp_foot_opposite_endpoint_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"a \\<noteq> b\"\n  shows\n  \"endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b))\n  = endpoint_in_S b a\"\n  (is \"endpoint_in_S ?p ?d = endpoint_in_S b a\")", "lemma endpoints_in_S_perp_foot_are_endpoints_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"a \\<noteq> b\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\"\n  shows \"are_endpoints_in_S\n  (endpoint_in_S a b) (endpoint_in_S b a) a (perp_foot c l)\"", "lemma perp_foot_up_right_angle:\n  assumes \"p \\<in> S\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident p l\"\n  and \"proj2_incident b l\"\n  shows \"right_angle p (perp_foot a l) (perp_up a l)\"", "lemma M_perp_unique:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident a l\"\n  and \"proj2_incident b m\" and \"proj2_incident b n\" and \"M_perp l m\"\n  and \"M_perp l n\"\n  shows \"m = n\"", "lemma perp_foot_eq_implies_drop_perp_eq:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident a l\"\n  and \"perp_foot b l = perp_foot c l\"\n  shows \"drop_perp b l = drop_perp c l\"", "lemma right_angle_to_compass:\n  assumes \"right_angle p a q\"\n  shows \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 p J = east\n  \\<and> apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\"", "lemma right_angle_to_right_angle:\n  assumes \"right_angle p a q\" and \"right_angle r b s\"\n  shows \"\\<exists> J. is_K2_isometry J\n  \\<and> apply_cltn2 p J = r \\<and> apply_cltn2 a J = b \\<and> apply_cltn2 q J = s\"", "lemma exp_2dist_formula:\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\" and \"proj2_abs a \\<in> hyp2\" (is \"?pa \\<in> hyp2\")\n  and \"proj2_abs b \\<in> hyp2\" (is \"?pb \\<in> hyp2\")\n  shows \"exp_2dist (proj2_abs a) (proj2_abs b)\n    = (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n      / (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n  \\<or> exp_2dist (proj2_abs a) (proj2_abs b)\n    = (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n      / (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\"\n  (is \"?e2d = (?aMb + ?sqd) / (?aMb - ?sqd)\n    \\<or> ?e2d = (?aMb - ?sqd) / (?aMb + ?sqd)\")", "lemma cosh_dist_formula:\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\" and \"proj2_abs a \\<in> hyp2\" (is \"?pa \\<in> hyp2\")\n  and \"proj2_abs b \\<in> hyp2\" (is \"?pb \\<in> hyp2\")\n  shows \"cosh_dist (proj2_abs a) (proj2_abs b)\n  = \\<bar>a \\<bullet> (M *v b)\\<bar> / sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\"\n  (is \"cosh_dist ?pa ?pb = \\<bar>?aMb\\<bar> / sqrt (?aMa * ?bMb)\")", "lemma cosh_dist_perp_special_case:\n  assumes \"\\<bar>x\\<bar> < 1\" and \"\\<bar>y\\<bar> < 1\"\n  shows \"cosh_dist (proj2_abs (vector [x,0,1])) (proj2_abs (vector [0,y,1]))\n  = (cosh_dist K2_centre (proj2_abs (vector [x,0,1])))\n  * (cosh_dist K2_centre (proj2_abs (vector [0,y,1])))\"\n  (is \"cosh_dist ?pa ?pb = (cosh_dist ?po ?pa) * (cosh_dist ?po ?pb)\")", "lemma K2_isometry_cross_ratio_endpoints_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"is_K2_isometry J\" and \"a \\<noteq> b\"\n  shows \"cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n  (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J) (apply_cltn2 b J)\n  = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\"\n  (is \"cross_ratio ?pJ ?qJ ?aJ ?bJ = cross_ratio ?p ?q a b\")", "lemma K2_isometry_exp_2dist:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"is_K2_isometry J\"\n  shows \"exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b\"\n  (is \"exp_2dist ?aJ ?bJ = _\")", "lemma K2_isometry_cosh_dist:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"is_K2_isometry J\"\n  shows \"cosh_dist (apply_cltn2 a J) (apply_cltn2 b J) = cosh_dist a b\"", "lemma cosh_dist_perp:\n  assumes \"M_perp l m\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\"\n  and \"proj2_incident b m\" and \"proj2_incident c m\"\n  shows \"cosh_dist a c = cosh_dist b a * cosh_dist b c\"", "lemma are_endpoints_in_S_ordered_cross_ratio:\n  assumes \"are_endpoints_in_S p q a b\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\" (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")\n  shows \"cross_ratio p q a b \\<ge> 1\"", "lemma cross_ratio_S_S_hyp2_hyp2_positive:\n  assumes \"are_endpoints_in_S p q a b\"\n  shows \"cross_ratio p q a b > 0\"", "lemma cosh_dist_general:\n  assumes \"are_endpoints_in_S p q a b\"\n  shows \"cosh_dist a b\n  = (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\"", "lemma exp_2dist_positive:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"exp_2dist a b > 0\"", "lemma cosh_dist_at_least_1:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"cosh_dist a b \\<ge> 1\"", "lemma cosh_dist_positive:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"cosh_dist a b > 0\"", "lemma cosh_dist_perp_divide:\n  assumes \"M_perp l m\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\" and \"proj2_incident b m\"\n  and \"proj2_incident c m\"\n  shows \"cosh_dist b c = cosh_dist a c / cosh_dist b a\"", "lemma real_hyp2_C_cross_ratio_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"a b \\<congruent>\\<^sub>K c d\"\n  shows \"cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n  (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b)\n  = cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n  (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)\"\n  (is \"cross_ratio ?p ?q ?a' ?b' = cross_ratio ?r ?s ?c' ?d'\")", "lemma real_hyp2_C_exp_2dist:\n  assumes \"a b \\<congruent>\\<^sub>K c d\"\n  shows \"exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)\n  = exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)\"\n  (is \"exp_2dist ?a' ?b' = exp_2dist ?c' ?d'\")", "lemma real_hyp2_C_cosh_dist:\n  assumes \"a b \\<congruent>\\<^sub>K c d\"\n  shows \"cosh_dist (Rep_hyp2 a) (Rep_hyp2 b)\n  = cosh_dist (Rep_hyp2 c) (Rep_hyp2 d)\"", "lemma cross_ratio_in_terms_of_cosh_dist:\n  assumes \"are_endpoints_in_S p q a b\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\"\n  shows \"cross_ratio p q a b\n  = 2 * (cosh_dist a b)\\<^sup>2 + 2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) - 1\"\n  (is \"?pqab = 2 * ?ab\\<^sup>2 + 2 * ?ab * sqrt (?ab\\<^sup>2 - 1) - 1\")", "lemma are_endpoints_in_S_cross_ratio_correct:\n  assumes \"are_endpoints_in_S p q a b\"\n  shows \"cross_ratio_correct p q a b\"", "lemma endpoints_in_S_cross_ratio_correct:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\"", "lemma endpoints_in_S_perp_foot_cross_ratio_correct:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"a \\<noteq> b\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\"\n  shows \"cross_ratio_correct\n  (endpoint_in_S a b) (endpoint_in_S b a) a (perp_foot c l)\"\n  (is \"cross_ratio_correct ?p ?q a ?d\")", "lemma cosh_dist_unique:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"p \\<in> S\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\" (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt c) (cart2_pt p)\" (is \"B\\<^sub>\\<real> ?ca ?cc ?cp\")\n  and \"cosh_dist a b = cosh_dist a c\" (is \"?ab = ?ac\")\n  shows \"b = c\"", "lemma cosh_dist_swap:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"cosh_dist a b = cosh_dist b a\"", "lemma exp_2dist_1_equal:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"exp_2dist a b = 1\"\n  shows \"a = b\"", "lemma described_perp_foot_cross_ratio_formula:\n  assumes \"a \\<noteq> b\" and \"c \\<in> hyp2\" and \"are_endpoints_in_S p q a b\"\n  and \"proj2_incident p l\" and \"proj2_incident q l\" and \"M_perp l m\"\n  and \"proj2_incident d l\" and \"proj2_incident d m\" and \"proj2_incident c m\"\n  shows \"cross_ratio p q d a\n    = (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c)\n      / (cosh_dist a c * cross_ratio p q a b\n        - cosh_dist b c * sqrt (cross_ratio p q a b))\"\n  (is \"?pqda = (?bc * sqrt ?pqab - ?ac) / (?ac * ?pqab - ?bc * sqrt ?pqab)\")", "lemma perp_foot_cross_ratio_formula:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"a \\<noteq> b\"\n  shows \"cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n      (perp_foot c (proj2_line_through a b)) a\n    = (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c)\n      / (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))\"\n  (is \"cross_ratio ?p ?q ?d a\n    = (?bc * sqrt ?pqab - ?ac) / (?ac * ?pqab - ?bc * sqrt ?pqab)\")", "lemma statement69:\n  assumes \"a b \\<congruent>\\<^sub>K a' b'\" and \"b c \\<congruent>\\<^sub>K b' c'\" and \"a c \\<congruent>\\<^sub>K a' c'\"\n  shows \"\\<exists> J. is_K2_isometry J\n  \\<and> hyp2_cltn2 a J = a' \\<and> hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\"", "theorem hyp2_axiom5:\n  \"\\<forall> a b c d a' b' c' d'.\n  a \\<noteq> b \\<and> B\\<^sub>K a b c \\<and> B\\<^sub>K a' b' c' \\<and> a b \\<congruent>\\<^sub>K a' b' \\<and> b c \\<congruent>\\<^sub>K b' c'\n    \\<and> a d \\<congruent>\\<^sub>K a' d' \\<and> b d \\<congruent>\\<^sub>K b' d'\n  \\<longrightarrow> c d \\<congruent>\\<^sub>K c' d'\"", "theorem hyp2_axiom6: \"\\<forall> a b. B\\<^sub>K a b a \\<longrightarrow> a = b\"", "lemma between_inverse:\n  assumes \"B\\<^sub>\\<real> (hyp2_rep p) v (hyp2_rep q)\"\n  shows \"hyp2_rep (hyp2_abs v) = v\"", "lemma between_switch:\n  assumes \"B\\<^sub>\\<real> (hyp2_rep p) v (hyp2_rep q)\"\n  shows \"B\\<^sub>K p (hyp2_abs v) q\"", "theorem hyp2_axiom7:\n  \"\\<forall> a b c p q. B\\<^sub>K a p c \\<and> B\\<^sub>K b q c \\<longrightarrow> (\\<exists> x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a)\"", "theorem hyp2_axiom11:\n  \"\\<forall> X Y. (\\<exists> a. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y)\n  \\<longrightarrow> (\\<exists> b. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\"", "lemma hyp2_rep_abs_examples:\n  shows \"hyp2_rep (hyp2_abs 0) = 0\" (is \"hyp2_rep ?a = ?ca\")\n  and \"hyp2_rep (hyp2_abs (vector [1/2,0])) = vector [1/2,0]\"\n  (is \"hyp2_rep ?b = ?cb\")\n  and \"hyp2_rep (hyp2_abs (vector [0,1/2])) = vector [0,1/2]\"\n  (is \"hyp2_rep ?c = ?cc\")\n  and \"hyp2_rep (hyp2_abs (vector [1/4,1/4])) = vector [1/4,1/4]\"\n  (is \"hyp2_rep ?d = ?cd\")\n  and \"hyp2_rep (hyp2_abs (vector [1/2,1/2])) = vector [1/2,1/2]\"\n  (is \"hyp2_rep ?t = ?ct\")", "theorem hyp2_axiom8: \"\\<exists> a b c. \\<not> B\\<^sub>K a b c \\<and> \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b\"", "theorem hyp2_axiom9:\n  \"\\<forall> p q a b c. p \\<noteq> q \\<and> a p \\<congruent>\\<^sub>K a q \\<and> b p \\<congruent>\\<^sub>K b q \\<and> c p \\<congruent>\\<^sub>K c q\n  \\<longrightarrow> B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b\"", "theorem hyp2_axiom10_false:\n  shows \"\\<not> (\\<forall> a b c d t. B\\<^sub>K a d t \\<and> B\\<^sub>K b d c \\<and> a \\<noteq> d\n  \\<longrightarrow> (\\<exists> x y. B\\<^sub>K a b x \\<and> B\\<^sub>K a c y \\<and> B\\<^sub>K x t y))\"", "theorem hyp2_not_tarski: \"\\<not> (tarski real_hyp2_C real_hyp2_B)\""], "translations": [["", "lemma M_symmatrix: \"symmatrix M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symmatrix M", "unfolding symmatrix_def and transpose_def and M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] $\n        j $\n        i) =\n    vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]]", "by (simp add: vec_eq_iff forall_3 vector_3)"], ["", "lemma M_self_inverse: \"M ** M = mat 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M ** M = mat 1", "unfolding M_def and matrix_matrix_mult_def and mat_def and vector_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        \\<Sum>k\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n             [vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                 (\\<lambda>n x. 0) 1)]\n             (\\<lambda>n x. 0) 1) $\n          i $\n          k *\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n             [vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                 (\\<lambda>n x. 0) 1)]\n             (\\<lambda>n x. 0) 1) $\n          k $\n          j) =\n    (\\<chi>i j. if i = j then 1 else 0)", "by (simp add: sum_3 vec_eq_iff forall_3)"], ["", "lemma M_invertible: \"invertible M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible M", "unfolding invertible_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A'. M ** A' = mat 1 \\<and> A' ** M = mat 1", "using M_self_inverse"], ["proof (prove)\nusing this:\n  M ** M = mat 1\n\ngoal (1 subgoal):\n 1. \\<exists>A'. M ** A' = mat 1 \\<and> A' ** M = mat 1", "by auto"], ["", "definition polar :: \"proj2 \\<Rightarrow> proj2_line\" where\n  \"polar p \\<equiv> proj2_line_abs (M *v proj2_rep p)\""], ["", "definition pole :: \"proj2_line \\<Rightarrow> proj2\" where\n  \"pole l \\<equiv> proj2_abs (M *v proj2_line_rep l)\""], ["", "lemma polar_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"polar (proj2_abs v) = proj2_line_abs (M *v v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polar (proj2_abs v) = proj2_line_abs (M *v v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. polar (proj2_abs v) = proj2_line_abs (M *v v)", "from \\<open>v \\<noteq> 0\\<close> and proj2_rep_abs2"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k. k \\<noteq> 0 \\<and> proj2_rep (proj2_abs ?v) = k *\\<^sub>R ?v", "obtain k where \"k \\<noteq> 0\" and \"proj2_rep (proj2_abs v) = k *\\<^sub>R v\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k. k \\<noteq> 0 \\<and> proj2_rep (proj2_abs ?v) = k *\\<^sub>R ?v\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0;\n         proj2_rep (proj2_abs v) = k *\\<^sub>R v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  proj2_rep (proj2_abs v) = k *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. polar (proj2_abs v) = proj2_line_abs (M *v v)", "from \\<open>proj2_rep (proj2_abs v) = k *\\<^sub>R v\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep (proj2_abs v) = k *\\<^sub>R v", "have \"polar (proj2_abs v) = proj2_line_abs (k *\\<^sub>R (M *v v))\""], ["proof (prove)\nusing this:\n  proj2_rep (proj2_abs v) = k *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. polar (proj2_abs v) = proj2_line_abs (k *\\<^sub>R (M *v v))", "unfolding polar_def"], ["proof (prove)\nusing this:\n  proj2_rep (proj2_abs v) = k *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. proj2_line_abs (M *v proj2_rep (proj2_abs v)) =\n    proj2_line_abs (k *\\<^sub>R (M *v v))", "by (simp add: matrix_scaleR_vector_ac scaleR_matrix_vector_assoc)"], ["proof (state)\nthis:\n  polar (proj2_abs v) = proj2_line_abs (k *\\<^sub>R (M *v v))\n\ngoal (1 subgoal):\n 1. polar (proj2_abs v) = proj2_line_abs (M *v v)", "with \\<open>k \\<noteq> 0\\<close> and proj2_line_abs_mult"], ["proof (chain)\npicking this:\n  k \\<noteq> 0\n  ?k \\<noteq> 0 \\<Longrightarrow>\n  proj2_line_abs (?k *\\<^sub>R ?v) = proj2_line_abs ?v\n  polar (proj2_abs v) = proj2_line_abs (k *\\<^sub>R (M *v v))", "show \"polar (proj2_abs v) = proj2_line_abs (M *v v)\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  ?k \\<noteq> 0 \\<Longrightarrow>\n  proj2_line_abs (?k *\\<^sub>R ?v) = proj2_line_abs ?v\n  polar (proj2_abs v) = proj2_line_abs (k *\\<^sub>R (M *v v))\n\ngoal (1 subgoal):\n 1. polar (proj2_abs v) = proj2_line_abs (M *v v)", "by simp"], ["proof (state)\nthis:\n  polar (proj2_abs v) = proj2_line_abs (M *v v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pole_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"pole (proj2_line_abs v) = proj2_abs (M *v v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pole (proj2_line_abs v) = proj2_abs (M *v v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pole (proj2_line_abs v) = proj2_abs (M *v v)", "from \\<open>v \\<noteq> 0\\<close> and proj2_line_rep_abs"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k.\n     k \\<noteq> 0 \\<and> proj2_line_rep (proj2_line_abs ?v) = k *\\<^sub>R ?v", "obtain k where \"k \\<noteq> 0\" and \"proj2_line_rep (proj2_line_abs v) = k *\\<^sub>R v\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k.\n     k \\<noteq> 0 \\<and> proj2_line_rep (proj2_line_abs ?v) = k *\\<^sub>R ?v\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0;\n         proj2_line_rep (proj2_line_abs v) = k *\\<^sub>R v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  proj2_line_rep (proj2_line_abs v) = k *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. pole (proj2_line_abs v) = proj2_abs (M *v v)", "from \\<open>proj2_line_rep (proj2_line_abs v) = k *\\<^sub>R v\\<close>"], ["proof (chain)\npicking this:\n  proj2_line_rep (proj2_line_abs v) = k *\\<^sub>R v", "have \"pole (proj2_line_abs v) = proj2_abs (k *\\<^sub>R (M *v v))\""], ["proof (prove)\nusing this:\n  proj2_line_rep (proj2_line_abs v) = k *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. pole (proj2_line_abs v) = proj2_abs (k *\\<^sub>R (M *v v))", "unfolding pole_def"], ["proof (prove)\nusing this:\n  proj2_line_rep (proj2_line_abs v) = k *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. proj2_abs (M *v proj2_line_rep (proj2_line_abs v)) =\n    proj2_abs (k *\\<^sub>R (M *v v))", "by (simp add: matrix_scaleR_vector_ac scaleR_matrix_vector_assoc)"], ["proof (state)\nthis:\n  pole (proj2_line_abs v) = proj2_abs (k *\\<^sub>R (M *v v))\n\ngoal (1 subgoal):\n 1. pole (proj2_line_abs v) = proj2_abs (M *v v)", "with \\<open>k \\<noteq> 0\\<close> and proj2_abs_mult"], ["proof (chain)\npicking this:\n  k \\<noteq> 0\n  ?c \\<noteq> 0 \\<Longrightarrow> proj2_abs (?c *\\<^sub>R ?v) = proj2_abs ?v\n  pole (proj2_line_abs v) = proj2_abs (k *\\<^sub>R (M *v v))", "show \"pole (proj2_line_abs v) = proj2_abs (M *v v)\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  ?c \\<noteq> 0 \\<Longrightarrow> proj2_abs (?c *\\<^sub>R ?v) = proj2_abs ?v\n  pole (proj2_line_abs v) = proj2_abs (k *\\<^sub>R (M *v v))\n\ngoal (1 subgoal):\n 1. pole (proj2_line_abs v) = proj2_abs (M *v v)", "by simp"], ["proof (state)\nthis:\n  pole (proj2_line_abs v) = proj2_abs (M *v v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polar_rep_non_zero: \"M *v proj2_rep p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M *v proj2_rep p \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M *v proj2_rep p \\<noteq> 0", "have \"proj2_rep p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep p \\<noteq> 0", "by (rule proj2_rep_non_zero)"], ["proof (state)\nthis:\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. M *v proj2_rep p \\<noteq> 0", "with M_invertible"], ["proof (chain)\npicking this:\n  invertible M\n  proj2_rep p \\<noteq> 0", "show \"M *v proj2_rep p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  invertible M\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. M *v proj2_rep p \\<noteq> 0", "by (rule invertible_times_non_zero)"], ["proof (state)\nthis:\n  M *v proj2_rep p \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pole_polar: \"pole (polar p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pole (polar p) = p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pole (polar p) = p", "from polar_rep_non_zero"], ["proof (chain)\npicking this:\n  M *v proj2_rep ?p \\<noteq> 0", "have \"pole (polar p) = proj2_abs (M *v (M *v proj2_rep p))\""], ["proof (prove)\nusing this:\n  M *v proj2_rep ?p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pole (polar p) = proj2_abs (M *v (M *v proj2_rep p))", "unfolding polar_def"], ["proof (prove)\nusing this:\n  M *v proj2_rep ?p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. pole (proj2_line_abs (M *v proj2_rep p)) =\n    proj2_abs (M *v (M *v proj2_rep p))", "by (rule pole_abs)"], ["proof (state)\nthis:\n  pole (polar p) = proj2_abs (M *v (M *v proj2_rep p))\n\ngoal (1 subgoal):\n 1. pole (polar p) = p", "with M_self_inverse"], ["proof (chain)\npicking this:\n  M ** M = mat 1\n  pole (polar p) = proj2_abs (M *v (M *v proj2_rep p))", "show \"pole (polar p) = p\""], ["proof (prove)\nusing this:\n  M ** M = mat 1\n  pole (polar p) = proj2_abs (M *v (M *v proj2_rep p))\n\ngoal (1 subgoal):\n 1. pole (polar p) = p", "by (simp add: matrix_vector_mul_assoc proj2_abs_rep)"], ["proof (state)\nthis:\n  pole (polar p) = p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pole_rep_non_zero: \"M *v proj2_line_rep l \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M *v proj2_line_rep l \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M *v proj2_line_rep l \\<noteq> 0", "have \"proj2_line_rep l \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_line_rep l \\<noteq> 0", "by (rule proj2_line_rep_non_zero)"], ["proof (state)\nthis:\n  proj2_line_rep l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. M *v proj2_line_rep l \\<noteq> 0", "with M_invertible"], ["proof (chain)\npicking this:\n  invertible M\n  proj2_line_rep l \\<noteq> 0", "show \"M *v proj2_line_rep l \\<noteq> 0\""], ["proof (prove)\nusing this:\n  invertible M\n  proj2_line_rep l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. M *v proj2_line_rep l \\<noteq> 0", "by (rule invertible_times_non_zero)"], ["proof (state)\nthis:\n  M *v proj2_line_rep l \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polar_pole: \"polar (pole l) = l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polar (pole l) = l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. polar (pole l) = l", "from pole_rep_non_zero"], ["proof (chain)\npicking this:\n  M *v proj2_line_rep ?l \\<noteq> 0", "have \"polar (pole l) = proj2_line_abs (M *v (M *v proj2_line_rep l))\""], ["proof (prove)\nusing this:\n  M *v proj2_line_rep ?l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. polar (pole l) = proj2_line_abs (M *v (M *v proj2_line_rep l))", "unfolding pole_def"], ["proof (prove)\nusing this:\n  M *v proj2_line_rep ?l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. polar (proj2_abs (M *v proj2_line_rep l)) =\n    proj2_line_abs (M *v (M *v proj2_line_rep l))", "by (rule polar_abs)"], ["proof (state)\nthis:\n  polar (pole l) = proj2_line_abs (M *v (M *v proj2_line_rep l))\n\ngoal (1 subgoal):\n 1. polar (pole l) = l", "with M_self_inverse"], ["proof (chain)\npicking this:\n  M ** M = mat 1\n  polar (pole l) = proj2_line_abs (M *v (M *v proj2_line_rep l))", "show \"polar (pole l) = l\""], ["proof (prove)\nusing this:\n  M ** M = mat 1\n  polar (pole l) = proj2_line_abs (M *v (M *v proj2_line_rep l))\n\ngoal (1 subgoal):\n 1. polar (pole l) = l", "by (simp add: matrix_vector_mul_assoc proj2_line_abs_rep\n      matrix_vector_mul_lid)"], ["proof (state)\nthis:\n  polar (pole l) = l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polar_inj:\n  assumes \"polar p = polar q\"\n  shows \"p = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p = q", "from \\<open>polar p = polar q\\<close>"], ["proof (chain)\npicking this:\n  polar p = polar q", "have \"pole (polar p) = pole (polar q)\""], ["proof (prove)\nusing this:\n  polar p = polar q\n\ngoal (1 subgoal):\n 1. pole (polar p) = pole (polar q)", "by simp"], ["proof (state)\nthis:\n  pole (polar p) = pole (polar q)\n\ngoal (1 subgoal):\n 1. p = q", "thus \"p = q\""], ["proof (prove)\nusing this:\n  pole (polar p) = pole (polar q)\n\ngoal (1 subgoal):\n 1. p = q", "by (simp add: pole_polar)"], ["proof (state)\nthis:\n  p = q\n\ngoal:\nNo subgoals!", "qed"], ["", "definition conic_sgn :: \"proj2 \\<Rightarrow> real\" where\n  \"conic_sgn p \\<equiv> sgn (proj2_rep p \\<bullet> (M *v proj2_rep p))\""], ["", "lemma conic_sgn_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "from \\<open>v \\<noteq> 0\\<close> and proj2_rep_abs2"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k. k \\<noteq> 0 \\<and> proj2_rep (proj2_abs ?v) = k *\\<^sub>R ?v", "obtain j where \"j \\<noteq> 0\" and \"proj2_rep (proj2_abs v) = j *\\<^sub>R v\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k. k \\<noteq> 0 \\<and> proj2_rep (proj2_abs ?v) = k *\\<^sub>R ?v\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<noteq> 0;\n         proj2_rep (proj2_abs v) = j *\\<^sub>R v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<noteq> 0\n  proj2_rep (proj2_abs v) = j *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "from \\<open>proj2_rep (proj2_abs v) = j *\\<^sub>R v\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep (proj2_abs v) = j *\\<^sub>R v", "have \"conic_sgn (proj2_abs v) = sgn (j\\<^sup>2 * (v \\<bullet> (M *v v)))\""], ["proof (prove)\nusing this:\n  proj2_rep (proj2_abs v) = j *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (j\\<^sup>2 * (v \\<bullet> (M *v v)))", "unfolding conic_sgn_def"], ["proof (prove)\nusing this:\n  proj2_rep (proj2_abs v) = j *\\<^sub>R v\n\ngoal (1 subgoal):\n 1. sgn (proj2_rep (proj2_abs v) \\<bullet> (M *v proj2_rep (proj2_abs v))) =\n    sgn (j\\<^sup>2 * (v \\<bullet> (M *v v)))", "by (simp add:\n      matrix_scaleR_vector_ac\n      scaleR_matrix_vector_assoc [symmetric]\n      dot_scaleR_mult\n      power2_eq_square\n      algebra_simps)"], ["proof (state)\nthis:\n  conic_sgn (proj2_abs v) = sgn (j\\<^sup>2 * (v \\<bullet> (M *v v)))\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "also"], ["proof (state)\nthis:\n  conic_sgn (proj2_abs v) = sgn (j\\<^sup>2 * (v \\<bullet> (M *v v)))\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "have \"\\<dots> = sgn (j\\<^sup>2) * sgn (v \\<bullet> (M *v v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn (j\\<^sup>2 * (v \\<bullet> (M *v v))) =\n    sgn (j\\<^sup>2) * sgn (v \\<bullet> (M *v v))", "by (rule sgn_mult)"], ["proof (state)\nthis:\n  sgn (j\\<^sup>2 * (v \\<bullet> (M *v v))) =\n  sgn (j\\<^sup>2) * sgn (v \\<bullet> (M *v v))\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "also"], ["proof (state)\nthis:\n  sgn (j\\<^sup>2 * (v \\<bullet> (M *v v))) =\n  sgn (j\\<^sup>2) * sgn (v \\<bullet> (M *v v))\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "from \\<open>j \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  j \\<noteq> 0", "have \"\\<dots> = sgn (v \\<bullet> (M *v v))\""], ["proof (prove)\nusing this:\n  j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sgn (j\\<^sup>2) * sgn (v \\<bullet> (M *v v)) =\n    sgn (v \\<bullet> (M *v v))", "by (simp add: power2_eq_square sgn_mult)"], ["proof (state)\nthis:\n  sgn (j\\<^sup>2) * sgn (v \\<bullet> (M *v v)) = sgn (v \\<bullet> (M *v v))\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "finally"], ["proof (chain)\npicking this:\n  conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "show \"conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))\""], ["proof (prove)\nusing this:\n  conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))", "."], ["proof (state)\nthis:\n  conic_sgn (proj2_abs v) = sgn (v \\<bullet> (M *v v))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sgn_conic_sgn: \"sgn (conic_sgn p) = conic_sgn p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn (conic_sgn p) = conic_sgn p", "by (unfold conic_sgn_def) simp"], ["", "definition S :: \"proj2 set\" where\n  \"S \\<equiv> {p. conic_sgn p = 0}\""], ["", "definition K2 :: \"proj2 set\" where\n  \"K2 \\<equiv> {p. conic_sgn p < 0}\""], ["", "lemma S_K2_empty: \"S \\<inter> K2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<inter> K2 = {}", "unfolding S_def and K2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. conic_sgn p = 0} \\<inter> {p. conic_sgn p < 0} = {}", "by auto"], ["", "lemma K2_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"proj2_abs v \\<in> K2 \\<longleftrightarrow> v \\<bullet> (M *v v) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> K2) = (v \\<bullet> (M *v v) < 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> K2) = (v \\<bullet> (M *v v) < 0)", "have \"proj2_abs v \\<in> K2 \\<longleftrightarrow> conic_sgn (proj2_abs v) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> K2) = (conic_sgn (proj2_abs v) < 0)", "by (simp add: K2_def)"], ["proof (state)\nthis:\n  (proj2_abs v \\<in> K2) = (conic_sgn (proj2_abs v) < 0)\n\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> K2) = (v \\<bullet> (M *v v) < 0)", "with \\<open>v \\<noteq> 0\\<close> and conic_sgn_abs"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  conic_sgn (proj2_abs ?v) = sgn (?v \\<bullet> (M *v ?v))\n  (proj2_abs v \\<in> K2) = (conic_sgn (proj2_abs v) < 0)", "show \"proj2_abs v \\<in> K2 \\<longleftrightarrow> v \\<bullet> (M *v v) < 0\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  conic_sgn (proj2_abs ?v) = sgn (?v \\<bullet> (M *v ?v))\n  (proj2_abs v \\<in> K2) = (conic_sgn (proj2_abs v) < 0)\n\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> K2) = (v \\<bullet> (M *v v) < 0)", "by simp"], ["proof (state)\nthis:\n  (proj2_abs v \\<in> K2) = (v \\<bullet> (M *v v) < 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"K2_centre = proj2_abs (vector [0,0,1])\""], ["", "lemma K2_centre_non_zero: \"vector [0,0,1] \\<noteq> (0 :: real^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector [0, 0, 1] \\<noteq> 0", "by (unfold vector_def) (simp add: vec_eq_iff forall_3)"], ["", "lemma K2_centre_in_K2: \"K2_centre \\<in> K2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K2_centre \\<in> K2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. K2_centre \\<in> K2", "from K2_centre_non_zero and proj2_rep_abs2"], ["proof (chain)\npicking this:\n  vector [0, 0, 1] \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k. k \\<noteq> 0 \\<and> proj2_rep (proj2_abs ?v) = k *\\<^sub>R ?v", "obtain k where \"k \\<noteq> 0\" and \"proj2_rep K2_centre = k *\\<^sub>R vector [0,0,1]\""], ["proof (prove)\nusing this:\n  vector [0, 0, 1] \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k. k \\<noteq> 0 \\<and> proj2_rep (proj2_abs ?v) = k *\\<^sub>R ?v\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0;\n         proj2_rep K2_centre = k *\\<^sub>R vector [0, 0, 1]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold K2_centre_def) auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  proj2_rep K2_centre = k *\\<^sub>R vector [0, 0, 1]\n\ngoal (1 subgoal):\n 1. K2_centre \\<in> K2", "from \\<open>k \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  k \\<noteq> 0", "have \"0 < k\\<^sup>2\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < k\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < k\\<^sup>2\n\ngoal (1 subgoal):\n 1. K2_centre \\<in> K2", "with \\<open>proj2_rep K2_centre = k *\\<^sub>R vector [0,0,1]\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep K2_centre = k *\\<^sub>R vector [0, 0, 1]\n  0 < k\\<^sup>2", "show \"K2_centre \\<in> K2\""], ["proof (prove)\nusing this:\n  proj2_rep K2_centre = k *\\<^sub>R vector [0, 0, 1]\n  0 < k\\<^sup>2\n\ngoal (1 subgoal):\n 1. K2_centre \\<in> K2", "unfolding K2_def\n      and conic_sgn_def\n      and M_def\n      and matrix_vector_mult_def\n      and inner_vec_def\n      and vector_def"], ["proof (prove)\nusing this:\n  proj2_rep K2_centre =\n  k *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1] (\\<lambda>n x. 0)\n     1)\n  0 < k\\<^sup>2\n\ngoal (1 subgoal):\n 1. K2_centre\n    \\<in> {p. sgn (\\<Sum>i\\<in>UNIV.\n                     proj2_rep p $ i \\<bullet>\n                     (\\<chi>i.\n                         \\<Sum>j\\<in>UNIV.\n                           vec_lambda\n                            (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                              [vec_lambda\n                                (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                                  [1, 0, 0] (\\<lambda>n x. 0) 1),\n                               vec_lambda\n                                (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                                  [0, 1, 0] (\\<lambda>n x. 0) 1),\n                               vec_lambda\n                                (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                                  [0, 0, - 1] (\\<lambda>n x. 0) 1)]\n                              (\\<lambda>n x. 0) 1) $\n                           i $\n                           j *\n                           proj2_rep p $ j) $\n                     i)\n              < 0}", "by (simp add: vec_eq_iff sum_3 power2_eq_square)"], ["proof (state)\nthis:\n  K2_centre \\<in> K2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma K2_imp_M_neg:\n  assumes \"v \\<noteq> 0\" and \"proj2_abs v \\<in> K2\"\n  shows \"v \\<bullet> (M *v v) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<bullet> (M *v v) < 0", "using assms"], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  proj2_abs v \\<in> K2\n\ngoal (1 subgoal):\n 1. v \\<bullet> (M *v v) < 0", "by (simp add: K2_abs)"], ["", "lemma M_neg_imp_z_squared_big:\n  assumes \"v \\<bullet> (M *v v) < 0\"\n  shows \"(v$3)\\<^sup>2 > (v$1)\\<^sup>2 + (v$2)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2 < (v $ 3)\\<^sup>2", "using \\<open>v \\<bullet> (M *v v) < 0\\<close>"], ["proof (prove)\nusing this:\n  v \\<bullet> (M *v v) < 0\n\ngoal (1 subgoal):\n 1. (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2 < (v $ 3)\\<^sup>2", "unfolding matrix_vector_mult_def and M_def and vector_def"], ["proof (prove)\nusing this:\n  v \\<bullet>\n  (\\<chi>i.\n      \\<Sum>j\\<in>UNIV.\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        j *\n        v $ j)\n  < 0\n\ngoal (1 subgoal):\n 1. (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2 < (v $ 3)\\<^sup>2", "by (simp add: inner_vec_def sum_3 power2_eq_square)"], ["", "lemma M_neg_imp_z_non_zero:\n  assumes \"v \\<bullet> (M *v v) < 0\"\n  shows \"v$3 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v $ 3 \\<noteq> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v $ 3 \\<noteq> 0", "have \"(v$1)\\<^sup>2 + (v$2)\\<^sup>2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 \\<le> (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. v $ 3 \\<noteq> 0", "with M_neg_imp_z_squared_big [of v] and \\<open>v \\<bullet> (M *v v) < 0\\<close>"], ["proof (chain)\npicking this:\n  v \\<bullet> (M *v v) < 0 \\<Longrightarrow>\n  (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2 < (v $ 3)\\<^sup>2\n  v \\<bullet> (M *v v) < 0\n  0 \\<le> (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2", "have \"(v$3)\\<^sup>2 > 0\""], ["proof (prove)\nusing this:\n  v \\<bullet> (M *v v) < 0 \\<Longrightarrow>\n  (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2 < (v $ 3)\\<^sup>2\n  v \\<bullet> (M *v v) < 0\n  0 \\<le> (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (v $ 3)\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  0 < (v $ 3)\\<^sup>2\n\ngoal (1 subgoal):\n 1. v $ 3 \\<noteq> 0", "thus \"v$3 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < (v $ 3)\\<^sup>2\n\ngoal (1 subgoal):\n 1. v $ 3 \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  v $ 3 \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma M_neg_imp_K2:\n  assumes \"v \\<bullet> (M *v v) < 0\"\n  shows \"proj2_abs v \\<in> K2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_abs v \\<in> K2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_abs v \\<in> K2", "from \\<open>v \\<bullet> (M *v v) < 0\\<close>"], ["proof (chain)\npicking this:\n  v \\<bullet> (M *v v) < 0", "have \"v$3 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  v \\<bullet> (M *v v) < 0\n\ngoal (1 subgoal):\n 1. v $ 3 \\<noteq> 0", "by (rule M_neg_imp_z_non_zero)"], ["proof (state)\nthis:\n  v $ 3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_abs v \\<in> K2", "hence \"v \\<noteq> 0\""], ["proof (prove)\nusing this:\n  v $ 3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. v \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_abs v \\<in> K2", "with \\<open>v \\<bullet> (M *v v) < 0\\<close> and K2_abs"], ["proof (chain)\npicking this:\n  v \\<bullet> (M *v v) < 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  (proj2_abs ?v \\<in> K2) = (?v \\<bullet> (M *v ?v) < 0)\n  v \\<noteq> 0", "show \"proj2_abs v \\<in> K2\""], ["proof (prove)\nusing this:\n  v \\<bullet> (M *v v) < 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  (proj2_abs ?v \\<in> K2) = (?v \\<bullet> (M *v ?v) < 0)\n  v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_abs v \\<in> K2", "by simp"], ["proof (state)\nthis:\n  proj2_abs v \\<in> K2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma M_reverse: \"a \\<bullet> (M *v b) = b \\<bullet> (M *v a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<bullet> (M *v b) = b \\<bullet> (M *v a)", "unfolding matrix_vector_mult_def and M_def and vector_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<bullet>\n    (\\<chi>i.\n        \\<Sum>j\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n             [vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                 (\\<lambda>n x. 0) 1)]\n             (\\<lambda>n x. 0) 1) $\n          i $\n          j *\n          b $ j) =\n    b \\<bullet>\n    (\\<chi>i.\n        \\<Sum>j\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n             [vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                 (\\<lambda>n x. 0) 1)]\n             (\\<lambda>n x. 0) 1) $\n          i $\n          j *\n          a $ j)", "by (simp add: inner_vec_def sum_3)"], ["", "lemma S_abs:\n  assumes \"v \\<noteq> 0\"\n  shows \"proj2_abs v \\<in> S \\<longleftrightarrow> v \\<bullet> (M *v v) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> S) = (v \\<bullet> (M *v v) = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> S) = (v \\<bullet> (M *v v) = 0)", "have \"proj2_abs v \\<in> S \\<longleftrightarrow> conic_sgn (proj2_abs v) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> S) = (conic_sgn (proj2_abs v) = 0)", "unfolding S_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> {p. conic_sgn p = 0}) = (conic_sgn (proj2_abs v) = 0)", "by simp"], ["proof (state)\nthis:\n  (proj2_abs v \\<in> S) = (conic_sgn (proj2_abs v) = 0)\n\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> S) = (v \\<bullet> (M *v v) = 0)", "also"], ["proof (state)\nthis:\n  (proj2_abs v \\<in> S) = (conic_sgn (proj2_abs v) = 0)\n\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> S) = (v \\<bullet> (M *v v) = 0)", "from \\<open>v \\<noteq> 0\\<close> and conic_sgn_abs"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  conic_sgn (proj2_abs ?v) = sgn (?v \\<bullet> (M *v ?v))", "have \"\\<dots> \\<longleftrightarrow> sgn (v \\<bullet> (M *v v)) = 0\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  conic_sgn (proj2_abs ?v) = sgn (?v \\<bullet> (M *v ?v))\n\ngoal (1 subgoal):\n 1. (conic_sgn (proj2_abs v) = 0) = (sgn (v \\<bullet> (M *v v)) = 0)", "by simp"], ["proof (state)\nthis:\n  (conic_sgn (proj2_abs v) = 0) = (sgn (v \\<bullet> (M *v v)) = 0)\n\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> S) = (v \\<bullet> (M *v v) = 0)", "finally"], ["proof (chain)\npicking this:\n  (proj2_abs v \\<in> S) = (sgn (v \\<bullet> (M *v v)) = 0)", "show \"proj2_abs v \\<in> S \\<longleftrightarrow> v \\<bullet> (M *v v) = 0\""], ["proof (prove)\nusing this:\n  (proj2_abs v \\<in> S) = (sgn (v \\<bullet> (M *v v)) = 0)\n\ngoal (1 subgoal):\n 1. (proj2_abs v \\<in> S) = (v \\<bullet> (M *v v) = 0)", "by (simp add: sgn_0_0)"], ["proof (state)\nthis:\n  (proj2_abs v \\<in> S) = (v \\<bullet> (M *v v) = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_alt_def: \"p \\<in> S \\<longleftrightarrow> proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<in> S) = (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (p \\<in> S) = (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)", "have \"proj2_rep p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep p \\<noteq> 0", "by (rule proj2_rep_non_zero)"], ["proof (state)\nthis:\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (p \\<in> S) = (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)", "hence \"proj2_abs (proj2_rep p) \\<in> S \\<longleftrightarrow> proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\""], ["proof (prove)\nusing this:\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (proj2_abs (proj2_rep p) \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)", "by (rule S_abs)"], ["proof (state)\nthis:\n  (proj2_abs (proj2_rep p) \\<in> S) =\n  (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)\n\ngoal (1 subgoal):\n 1. (p \\<in> S) = (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)", "thus \"p \\<in> S \\<longleftrightarrow> proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\""], ["proof (prove)\nusing this:\n  (proj2_abs (proj2_rep p) \\<in> S) =\n  (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)\n\ngoal (1 subgoal):\n 1. (p \\<in> S) = (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)", "by (simp add: proj2_abs_rep)"], ["proof (state)\nthis:\n  (p \\<in> S) = (proj2_rep p \\<bullet> (M *v proj2_rep p) = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma incident_polar:\n  \"proj2_incident p (polar q) \\<longleftrightarrow> proj2_rep p \\<bullet> (M *v proj2_rep q) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident p (polar q) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep q) = 0)", "using polar_rep_non_zero"], ["proof (prove)\nusing this:\n  M *v proj2_rep ?p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_incident p (polar q) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep q) = 0)", "unfolding polar_def"], ["proof (prove)\nusing this:\n  M *v proj2_rep ?p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_incident p (proj2_line_abs (M *v proj2_rep q)) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep q) = 0)", "by (rule proj2_incident_right_abs)"], ["", "lemma incident_own_polar_in_S: \"proj2_incident p (polar p) \\<longleftrightarrow> p \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident p (polar p) = (p \\<in> S)", "using incident_polar and S_alt_def"], ["proof (prove)\nusing this:\n  proj2_incident ?p (polar ?q) =\n  (proj2_rep ?p \\<bullet> (M *v proj2_rep ?q) = 0)\n  (?p \\<in> S) = (proj2_rep ?p \\<bullet> (M *v proj2_rep ?p) = 0)\n\ngoal (1 subgoal):\n 1. proj2_incident p (polar p) = (p \\<in> S)", "by simp"], ["", "lemma incident_polar_swap:\n  assumes \"proj2_incident p (polar q)\"\n  shows \"proj2_incident q (polar p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident q (polar p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident q (polar p)", "from \\<open>proj2_incident p (polar q)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p (polar q)", "have \"proj2_rep p \\<bullet> (M *v proj2_rep q) = 0\""], ["proof (prove)\nusing this:\n  proj2_incident p (polar q)\n\ngoal (1 subgoal):\n 1. proj2_rep p \\<bullet> (M *v proj2_rep q) = 0", "by (unfold incident_polar)"], ["proof (state)\nthis:\n  proj2_rep p \\<bullet> (M *v proj2_rep q) = 0\n\ngoal (1 subgoal):\n 1. proj2_incident q (polar p)", "hence \"proj2_rep q \\<bullet> (M *v proj2_rep p) = 0\""], ["proof (prove)\nusing this:\n  proj2_rep p \\<bullet> (M *v proj2_rep q) = 0\n\ngoal (1 subgoal):\n 1. proj2_rep q \\<bullet> (M *v proj2_rep p) = 0", "by (simp add: M_reverse)"], ["proof (state)\nthis:\n  proj2_rep q \\<bullet> (M *v proj2_rep p) = 0\n\ngoal (1 subgoal):\n 1. proj2_incident q (polar p)", "thus \"proj2_incident q (polar p)\""], ["proof (prove)\nusing this:\n  proj2_rep q \\<bullet> (M *v proj2_rep p) = 0\n\ngoal (1 subgoal):\n 1. proj2_incident q (polar p)", "by (unfold incident_polar)"], ["proof (state)\nthis:\n  proj2_incident q (polar p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma incident_pole_polar:\n  assumes \"proj2_incident p l\"\n  shows \"proj2_incident (pole l) (polar p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (pole l) (polar p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident (pole l) (polar p)", "from \\<open>proj2_incident p l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l", "have \"proj2_incident p (polar (pole l))\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n\ngoal (1 subgoal):\n 1. proj2_incident p (polar (pole l))", "by (subst polar_pole)"], ["proof (state)\nthis:\n  proj2_incident p (polar (pole l))\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) (polar p)", "thus \"proj2_incident (pole l) (polar p)\""], ["proof (prove)\nusing this:\n  proj2_incident p (polar (pole l))\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) (polar p)", "by (rule incident_polar_swap)"], ["proof (state)\nthis:\n  proj2_incident (pole l) (polar p)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition z_zero :: \"proj2_line\" where\n  \"z_zero \\<equiv> proj2_line_abs (vector [0,0,1])\""], ["", "lemma z_zero:\n  assumes \"(proj2_rep p)$3 = 0\"\n  shows \"proj2_incident p z_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident p z_zero", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident p z_zero", "from K2_centre_non_zero and proj2_line_rep_abs"], ["proof (chain)\npicking this:\n  vector [0, 0, 1] \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k.\n     k \\<noteq> 0 \\<and> proj2_line_rep (proj2_line_abs ?v) = k *\\<^sub>R ?v", "obtain k where \"proj2_line_rep z_zero = k *\\<^sub>R vector [0,0,1]\""], ["proof (prove)\nusing this:\n  vector [0, 0, 1] \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>k.\n     k \\<noteq> 0 \\<and> proj2_line_rep (proj2_line_abs ?v) = k *\\<^sub>R ?v\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        proj2_line_rep z_zero =\n        k *\\<^sub>R vector [0, 0, 1] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold z_zero_def) auto"], ["proof (state)\nthis:\n  proj2_line_rep z_zero = k *\\<^sub>R vector [0, 0, 1]\n\ngoal (1 subgoal):\n 1. proj2_incident p z_zero", "with \\<open>(proj2_rep p)$3 = 0\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep p $ 3 = 0\n  proj2_line_rep z_zero = k *\\<^sub>R vector [0, 0, 1]", "show \"proj2_incident p z_zero\""], ["proof (prove)\nusing this:\n  proj2_rep p $ 3 = 0\n  proj2_line_rep z_zero = k *\\<^sub>R vector [0, 0, 1]\n\ngoal (1 subgoal):\n 1. proj2_incident p z_zero", "unfolding proj2_incident_def and inner_vec_def and vector_def"], ["proof (prove)\nusing this:\n  proj2_rep p $ 3 = 0\n  proj2_line_rep z_zero =\n  k *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1] (\\<lambda>n x. 0)\n     1)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>UNIV.\n       proj2_rep p $ i \\<bullet> proj2_line_rep z_zero $ i) =\n    0", "by (simp add: sum_3)"], ["proof (state)\nthis:\n  proj2_incident p z_zero\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma z_zero_conic_sgn_1:\n  assumes \"proj2_incident p z_zero\"\n  shows \"conic_sgn p = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "let ?v = \"proj2_rep p\""], ["proof (state)\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "have \"(vector [0,0,1] :: real^3) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector [0, 0, 1] \\<noteq> 0", "unfolding vector_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_lambda\n     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1]\n       (\\<lambda>n x. 0) 1) \\<noteq>\n    0", "by (simp add: vec_eq_iff)"], ["proof (state)\nthis:\n  vector [0, 0, 1] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "with \\<open>proj2_incident p z_zero\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p z_zero\n  vector [0, 0, 1] \\<noteq> 0", "have \"?v \\<bullet> vector [0,0,1] = 0\""], ["proof (prove)\nusing this:\n  proj2_incident p z_zero\n  vector [0, 0, 1] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_rep p \\<bullet> vector [0, 0, 1] = 0", "unfolding z_zero_def"], ["proof (prove)\nusing this:\n  proj2_incident p (proj2_line_abs (vector [0, 0, 1]))\n  vector [0, 0, 1] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_rep p \\<bullet> vector [0, 0, 1] = 0", "by (simp add: proj2_incident_right_abs)"], ["proof (state)\nthis:\n  proj2_rep p \\<bullet> vector [0, 0, 1] = 0\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "hence \"?v$3 = 0\""], ["proof (prove)\nusing this:\n  proj2_rep p \\<bullet> vector [0, 0, 1] = 0\n\ngoal (1 subgoal):\n 1. proj2_rep p $ 3 = 0", "unfolding inner_vec_def and vector_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV.\n     proj2_rep p $ i \\<bullet>\n     vec_lambda\n      (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1]\n        (\\<lambda>n x. 0) 1) $\n     i) =\n  0\n\ngoal (1 subgoal):\n 1. proj2_rep p $ 3 = 0", "by (simp add: sum_3)"], ["proof (state)\nthis:\n  proj2_rep p $ 3 = 0\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "hence \"?v \\<bullet> (M *v ?v) = (?v$1)\\<^sup>2 + (?v$2)\\<^sup>2\""], ["proof (prove)\nusing this:\n  proj2_rep p $ 3 = 0\n\ngoal (1 subgoal):\n 1. proj2_rep p \\<bullet> (M *v proj2_rep p) =\n    (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2", "unfolding inner_vec_def\n      and power2_eq_square\n      and matrix_vector_mult_def\n      and M_def\n      and vector_def\n      and sum_3"], ["proof (prove)\nusing this:\n  proj2_rep p $ 3 = 0\n\ngoal (1 subgoal):\n 1. proj2_rep p $ 1 \\<bullet>\n    (\\<chi>i.\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        1 *\n        proj2_rep p $ 1 +\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        2 *\n        proj2_rep p $ 2 +\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        3 *\n        proj2_rep p $ 3) $\n    1 +\n    proj2_rep p $ 2 \\<bullet>\n    (\\<chi>i.\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        1 *\n        proj2_rep p $ 1 +\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        2 *\n        proj2_rep p $ 2 +\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        3 *\n        proj2_rep p $ 3) $\n    2 +\n    proj2_rep p $ 3 \\<bullet>\n    (\\<chi>i.\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        1 *\n        proj2_rep p $ 1 +\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        2 *\n        proj2_rep p $ 2 +\n        vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n           [vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n               (\\<lambda>n x. 0) 1),\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n               (\\<lambda>n x. 0) 1)]\n           (\\<lambda>n x. 0) 1) $\n        i $\n        3 *\n        proj2_rep p $ 3) $\n    3 =\n    proj2_rep p $ 1 * proj2_rep p $ 1 + proj2_rep p $ 2 * proj2_rep p $ 2", "by simp"], ["proof (state)\nthis:\n  proj2_rep p \\<bullet> (M *v proj2_rep p) =\n  (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "have \"?v \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep p \\<noteq> 0", "by (rule proj2_rep_non_zero)"], ["proof (state)\nthis:\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "with \\<open>?v$3 = 0\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep p $ 3 = 0\n  proj2_rep p \\<noteq> 0", "have \"?v$1 \\<noteq> 0 \\<or> ?v$2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  proj2_rep p $ 3 = 0\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_rep p $ 1 \\<noteq> 0 \\<or> proj2_rep p $ 2 \\<noteq> 0", "by (simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  proj2_rep p $ 1 \\<noteq> 0 \\<or> proj2_rep p $ 2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "hence \"(?v$1)\\<^sup>2 > 0 \\<or> (?v$2)\\<^sup>2 > 0\""], ["proof (prove)\nusing this:\n  proj2_rep p $ 1 \\<noteq> 0 \\<or> proj2_rep p $ 2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < (proj2_rep p $ 1)\\<^sup>2 \\<or> 0 < (proj2_rep p $ 2)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < (proj2_rep p $ 1)\\<^sup>2 \\<or> 0 < (proj2_rep p $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "with add_sign_intros [of \"(?v$1)\\<^sup>2\" \"(?v$2)\\<^sup>2\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 < (proj2_rep p $ 1)\\<^sup>2;\n   0 \\<le> (proj2_rep p $ 2)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> 0 < (proj2_rep p $ 1)\\<^sup>2 +\n                        (proj2_rep p $ 2)\\<^sup>2\n  \\<lbrakk>0 < (proj2_rep p $ 1)\\<^sup>2;\n   0 < (proj2_rep p $ 2)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> 0 < (proj2_rep p $ 1)\\<^sup>2 +\n                        (proj2_rep p $ 2)\\<^sup>2\n  \\<lbrakk>0 \\<le> (proj2_rep p $ 1)\\<^sup>2;\n   0 < (proj2_rep p $ 2)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> 0 < (proj2_rep p $ 1)\\<^sup>2 +\n                        (proj2_rep p $ 2)\\<^sup>2\n  \\<lbrakk>0 \\<le> (proj2_rep p $ 1)\\<^sup>2;\n   0 \\<le> (proj2_rep p $ 2)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> (proj2_rep p $ 1)\\<^sup>2 +\n                            (proj2_rep p $ 2)\\<^sup>2\n  \\<lbrakk>(proj2_rep p $ 1)\\<^sup>2 < 0;\n   (proj2_rep p $ 2)\\<^sup>2 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n                    < 0\n  \\<lbrakk>(proj2_rep p $ 1)\\<^sup>2 < 0;\n   (proj2_rep p $ 2)\\<^sup>2 < 0\\<rbrakk>\n  \\<Longrightarrow> (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n                    < 0\n  \\<lbrakk>(proj2_rep p $ 1)\\<^sup>2 \\<le> 0;\n   (proj2_rep p $ 2)\\<^sup>2 < 0\\<rbrakk>\n  \\<Longrightarrow> (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n                    < 0\n  \\<lbrakk>(proj2_rep p $ 1)\\<^sup>2 \\<le> 0;\n   (proj2_rep p $ 2)\\<^sup>2 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n                    \\<le> 0\n  0 < (proj2_rep p $ 1)\\<^sup>2 \\<or> 0 < (proj2_rep p $ 2)\\<^sup>2", "have \"(?v$1)\\<^sup>2 + (?v$2)\\<^sup>2 > 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < (proj2_rep p $ 1)\\<^sup>2;\n   0 \\<le> (proj2_rep p $ 2)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> 0 < (proj2_rep p $ 1)\\<^sup>2 +\n                        (proj2_rep p $ 2)\\<^sup>2\n  \\<lbrakk>0 < (proj2_rep p $ 1)\\<^sup>2;\n   0 < (proj2_rep p $ 2)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> 0 < (proj2_rep p $ 1)\\<^sup>2 +\n                        (proj2_rep p $ 2)\\<^sup>2\n  \\<lbrakk>0 \\<le> (proj2_rep p $ 1)\\<^sup>2;\n   0 < (proj2_rep p $ 2)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> 0 < (proj2_rep p $ 1)\\<^sup>2 +\n                        (proj2_rep p $ 2)\\<^sup>2\n  \\<lbrakk>0 \\<le> (proj2_rep p $ 1)\\<^sup>2;\n   0 \\<le> (proj2_rep p $ 2)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> (proj2_rep p $ 1)\\<^sup>2 +\n                            (proj2_rep p $ 2)\\<^sup>2\n  \\<lbrakk>(proj2_rep p $ 1)\\<^sup>2 < 0;\n   (proj2_rep p $ 2)\\<^sup>2 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n                    < 0\n  \\<lbrakk>(proj2_rep p $ 1)\\<^sup>2 < 0;\n   (proj2_rep p $ 2)\\<^sup>2 < 0\\<rbrakk>\n  \\<Longrightarrow> (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n                    < 0\n  \\<lbrakk>(proj2_rep p $ 1)\\<^sup>2 \\<le> 0;\n   (proj2_rep p $ 2)\\<^sup>2 < 0\\<rbrakk>\n  \\<Longrightarrow> (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n                    < 0\n  \\<lbrakk>(proj2_rep p $ 1)\\<^sup>2 \\<le> 0;\n   (proj2_rep p $ 2)\\<^sup>2 \\<le> 0\\<rbrakk>\n  \\<Longrightarrow> (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n                    \\<le> 0\n  0 < (proj2_rep p $ 1)\\<^sup>2 \\<or> 0 < (proj2_rep p $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  0 < (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "with \\<open>?v \\<bullet> (M *v ?v) = (?v$1)\\<^sup>2 + (?v$2)\\<^sup>2\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep p \\<bullet> (M *v proj2_rep p) =\n  (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n  0 < (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2", "have \"?v \\<bullet> (M *v ?v) > 0\""], ["proof (prove)\nusing this:\n  proj2_rep p \\<bullet> (M *v proj2_rep p) =\n  (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n  0 < (proj2_rep p $ 1)\\<^sup>2 + (proj2_rep p $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < proj2_rep p \\<bullet> (M *v proj2_rep p)", "by simp"], ["proof (state)\nthis:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p)\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "thus \"conic_sgn p = 1\""], ["proof (prove)\nusing this:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p)\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "unfolding conic_sgn_def"], ["proof (prove)\nusing this:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p)\n\ngoal (1 subgoal):\n 1. sgn (proj2_rep p \\<bullet> (M *v proj2_rep p)) = 1", "by simp"], ["proof (state)\nthis:\n  conic_sgn p = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conic_sgn_not_1_z_non_zero:\n  assumes \"conic_sgn p \\<noteq> 1\"\n  shows \"z_non_zero p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z_non_zero p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z_non_zero p", "from \\<open>conic_sgn p \\<noteq> 1\\<close>"], ["proof (chain)\npicking this:\n  conic_sgn p \\<noteq> 1", "have \"\\<not> proj2_incident p z_zero\""], ["proof (prove)\nusing this:\n  conic_sgn p \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident p z_zero", "by (auto simp add: z_zero_conic_sgn_1)"], ["proof (state)\nthis:\n  \\<not> proj2_incident p z_zero\n\ngoal (1 subgoal):\n 1. z_non_zero p", "thus \"z_non_zero p\""], ["proof (prove)\nusing this:\n  \\<not> proj2_incident p z_zero\n\ngoal (1 subgoal):\n 1. z_non_zero p", "by (auto simp add: z_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma z_zero_not_in_S:\n  assumes \"proj2_incident p z_zero\"\n  shows \"p \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<notin> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<notin> S", "from \\<open>proj2_incident p z_zero\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p z_zero", "have \"conic_sgn p = 1\""], ["proof (prove)\nusing this:\n  proj2_incident p z_zero\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "by (rule z_zero_conic_sgn_1)"], ["proof (state)\nthis:\n  conic_sgn p = 1\n\ngoal (1 subgoal):\n 1. p \\<notin> S", "thus \"p \\<notin> S\""], ["proof (prove)\nusing this:\n  conic_sgn p = 1\n\ngoal (1 subgoal):\n 1. p \\<notin> S", "unfolding S_def"], ["proof (prove)\nusing this:\n  conic_sgn p = 1\n\ngoal (1 subgoal):\n 1. p \\<notin> {p. conic_sgn p = 0}", "by simp"], ["proof (state)\nthis:\n  p \\<notin> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_incident_point_not_in_S: \"\\<exists> p. p \\<notin> S \\<and> proj2_incident p l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. p \\<notin> S \\<and> proj2_incident p l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p. p \\<notin> S \\<and> proj2_incident p l", "let ?p = \"proj2_intersection l z_zero\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p. p \\<notin> S \\<and> proj2_incident p l", "have \"proj2_incident ?p l\" and \"proj2_incident ?p z_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_intersection l z_zero) l &&&\n    proj2_incident (proj2_intersection l z_zero) z_zero", "by (rule proj2_intersection_incident)+"], ["proof (state)\nthis:\n  proj2_incident (proj2_intersection l z_zero) l\n  proj2_incident (proj2_intersection l z_zero) z_zero\n\ngoal (1 subgoal):\n 1. \\<exists>p. p \\<notin> S \\<and> proj2_incident p l", "from \\<open>proj2_incident ?p z_zero\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_intersection l z_zero) z_zero", "have \"?p \\<notin> S\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_intersection l z_zero) z_zero\n\ngoal (1 subgoal):\n 1. proj2_intersection l z_zero \\<notin> S", "by (rule z_zero_not_in_S)"], ["proof (state)\nthis:\n  proj2_intersection l z_zero \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<exists>p. p \\<notin> S \\<and> proj2_incident p l", "with \\<open>proj2_incident ?p l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_intersection l z_zero) l\n  proj2_intersection l z_zero \\<notin> S", "show \"\\<exists> p. p \\<notin> S \\<and> proj2_incident p l\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_intersection l z_zero) l\n  proj2_intersection l z_zero \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<exists>p. p \\<notin> S \\<and> proj2_incident p l", "by auto"], ["proof (state)\nthis:\n  \\<exists>p. p \\<notin> S \\<and> proj2_incident p l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma apply_cltn2_abs_abs_in_S:\n  assumes \"v \\<noteq> 0\" and \"invertible J\"\n  shows \"apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S\n  \\<longleftrightarrow> v \\<bullet> (J ** M ** transpose J *v v) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n    (v \\<bullet> (J ** M ** Finite_Cartesian_Product.transpose J *v v) = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n    (v \\<bullet> (J ** M ** Finite_Cartesian_Product.transpose J *v v) = 0)", "from \\<open>v \\<noteq> 0\\<close> and \\<open>invertible J\\<close>"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\n  invertible J", "have \"v v* J \\<noteq> 0\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  invertible J\n\ngoal (1 subgoal):\n 1. v v* J \\<noteq> 0", "by (rule non_zero_mult_invertible_non_zero)"], ["proof (state)\nthis:\n  v v* J \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n    (v \\<bullet> (J ** M ** Finite_Cartesian_Product.transpose J *v v) = 0)", "from \\<open>v \\<noteq> 0\\<close> and \\<open>invertible J\\<close>"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\n  invertible J", "have \"apply_cltn2 (proj2_abs v) (cltn2_abs J) = proj2_abs (v v* J)\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  invertible J\n\ngoal (1 subgoal):\n 1. apply_cltn2 (proj2_abs v) (cltn2_abs J) = proj2_abs (v v* J)", "by (rule apply_cltn2_abs)"], ["proof (state)\nthis:\n  apply_cltn2 (proj2_abs v) (cltn2_abs J) = proj2_abs (v v* J)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n    (v \\<bullet> (J ** M ** Finite_Cartesian_Product.transpose J *v v) = 0)", "also"], ["proof (state)\nthis:\n  apply_cltn2 (proj2_abs v) (cltn2_abs J) = proj2_abs (v v* J)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n    (v \\<bullet> (J ** M ** Finite_Cartesian_Product.transpose J *v v) = 0)", "from \\<open>v v* J \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  v v* J \\<noteq> 0", "have \"\\<dots> \\<in> S \\<longleftrightarrow> (v v* J) \\<bullet> (M *v (v v* J)) = 0\""], ["proof (prove)\nusing this:\n  v v* J \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (proj2_abs (v v* J) \\<in> S) = ((v v* J) \\<bullet> (M *v (v v* J)) = 0)", "by (rule S_abs)"], ["proof (state)\nthis:\n  (proj2_abs (v v* J) \\<in> S) = ((v v* J) \\<bullet> (M *v (v v* J)) = 0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n    (v \\<bullet> (J ** M ** Finite_Cartesian_Product.transpose J *v v) = 0)", "finally"], ["proof (chain)\npicking this:\n  (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n  ((v v* J) \\<bullet> (M *v (v v* J)) = 0)", "show \"apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S\n    \\<longleftrightarrow> v \\<bullet> (J ** M ** transpose J *v v) = 0\""], ["proof (prove)\nusing this:\n  (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n  ((v v* J) \\<bullet> (M *v (v v* J)) = 0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n    (v \\<bullet> (J ** M ** Finite_Cartesian_Product.transpose J *v v) = 0)", "by (simp add: dot_lmul_matrix matrix_vector_mul_assoc [symmetric])"], ["proof (state)\nthis:\n  (apply_cltn2 (proj2_abs v) (cltn2_abs J) \\<in> S) =\n  (v \\<bullet> (J ** M ** Finite_Cartesian_Product.transpose J *v v) = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma apply_cltn2_right_abs_in_S:\n  assumes \"invertible J\"\n  shows \"apply_cltn2 p (cltn2_abs J) \\<in> S\n  \\<longleftrightarrow> (proj2_rep p) \\<bullet> (J ** M ** transpose J *v (proj2_rep p)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_cltn2 p (cltn2_abs J) \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n     0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (apply_cltn2 p (cltn2_abs J) \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n     0)", "have \"proj2_rep p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep p \\<noteq> 0", "by (rule proj2_rep_non_zero)"], ["proof (state)\nthis:\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p (cltn2_abs J) \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n     0)", "with \\<open>invertible J\\<close>"], ["proof (chain)\npicking this:\n  invertible J\n  proj2_rep p \\<noteq> 0", "have \"apply_cltn2 (proj2_abs (proj2_rep p)) (cltn2_abs J) \\<in> S\n    \\<longleftrightarrow> proj2_rep p \\<bullet> (J ** M ** transpose J *v proj2_rep p) = 0\""], ["proof (prove)\nusing this:\n  invertible J\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs (proj2_rep p)) (cltn2_abs J) \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n     0)", "by (simp add: apply_cltn2_abs_abs_in_S)"], ["proof (state)\nthis:\n  (apply_cltn2 (proj2_abs (proj2_rep p)) (cltn2_abs J) \\<in> S) =\n  (proj2_rep p \\<bullet>\n   (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n   0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p (cltn2_abs J) \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n     0)", "thus \"apply_cltn2 p (cltn2_abs J) \\<in> S\n    \\<longleftrightarrow> proj2_rep p \\<bullet> (J ** M ** transpose J *v proj2_rep p) = 0\""], ["proof (prove)\nusing this:\n  (apply_cltn2 (proj2_abs (proj2_rep p)) (cltn2_abs J) \\<in> S) =\n  (proj2_rep p \\<bullet>\n   (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n   0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p (cltn2_abs J) \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n     0)", "by (simp add: proj2_abs_rep)"], ["proof (state)\nthis:\n  (apply_cltn2 p (cltn2_abs J) \\<in> S) =\n  (proj2_rep p \\<bullet>\n   (J ** M ** Finite_Cartesian_Product.transpose J *v proj2_rep p) =\n   0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma apply_cltn2_abs_in_S:\n  assumes \"v \\<noteq> 0\"\n  shows \"apply_cltn2 (proj2_abs v) C \\<in> S\n  \\<longleftrightarrow> v \\<bullet> (cltn2_rep C ** M ** transpose (cltn2_rep C) *v v) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) C \\<in> S) =\n    (v \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      v) =\n     0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) C \\<in> S) =\n    (v \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      v) =\n     0)", "have \"invertible (cltn2_rep C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (cltn2_rep C)", "by (rule cltn2_rep_invertible)"], ["proof (state)\nthis:\n  invertible (cltn2_rep C)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) C \\<in> S) =\n    (v \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      v) =\n     0)", "with \\<open>v \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\n  invertible (cltn2_rep C)", "have \"apply_cltn2 (proj2_abs v) (cltn2_abs (cltn2_rep C)) \\<in> S\n    \\<longleftrightarrow> v \\<bullet> (cltn2_rep C ** M ** transpose (cltn2_rep C) *v v) = 0\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n  invertible (cltn2_rep C)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) (cltn2_abs (cltn2_rep C)) \\<in> S) =\n    (v \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      v) =\n     0)", "by (rule apply_cltn2_abs_abs_in_S)"], ["proof (state)\nthis:\n  (apply_cltn2 (proj2_abs v) (cltn2_abs (cltn2_rep C)) \\<in> S) =\n  (v \\<bullet>\n   (cltn2_rep C ** M ** Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n    v) =\n   0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) C \\<in> S) =\n    (v \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      v) =\n     0)", "thus \"apply_cltn2 (proj2_abs v) C \\<in> S\n    \\<longleftrightarrow> v \\<bullet> (cltn2_rep C ** M ** transpose (cltn2_rep C) *v v) = 0\""], ["proof (prove)\nusing this:\n  (apply_cltn2 (proj2_abs v) (cltn2_abs (cltn2_rep C)) \\<in> S) =\n  (v \\<bullet>\n   (cltn2_rep C ** M ** Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n    v) =\n   0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs v) C \\<in> S) =\n    (v \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      v) =\n     0)", "by (simp add: cltn2_abs_rep)"], ["proof (state)\nthis:\n  (apply_cltn2 (proj2_abs v) C \\<in> S) =\n  (v \\<bullet>\n   (cltn2_rep C ** M ** Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n    v) =\n   0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma apply_cltn2_in_S:\n  \"apply_cltn2 p C \\<in> S\n  \\<longleftrightarrow> proj2_rep p \\<bullet> (cltn2_rep C ** M ** transpose (cltn2_rep C) *v proj2_rep p)\n  = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (apply_cltn2 p C \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      proj2_rep p) =\n     0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (apply_cltn2 p C \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      proj2_rep p) =\n     0)", "have \"proj2_rep p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep p \\<noteq> 0", "by (rule proj2_rep_non_zero)"], ["proof (state)\nthis:\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p C \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      proj2_rep p) =\n     0)", "hence \"apply_cltn2 (proj2_abs (proj2_rep p)) C \\<in> S\n    \\<longleftrightarrow> proj2_rep p \\<bullet> (cltn2_rep C ** M ** transpose (cltn2_rep C) *v proj2_rep p)\n    = 0\""], ["proof (prove)\nusing this:\n  proj2_rep p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (apply_cltn2 (proj2_abs (proj2_rep p)) C \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      proj2_rep p) =\n     0)", "by (rule apply_cltn2_abs_in_S)"], ["proof (state)\nthis:\n  (apply_cltn2 (proj2_abs (proj2_rep p)) C \\<in> S) =\n  (proj2_rep p \\<bullet>\n   (cltn2_rep C ** M ** Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n    proj2_rep p) =\n   0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p C \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      proj2_rep p) =\n     0)", "thus \"apply_cltn2 p C \\<in> S\n    \\<longleftrightarrow> proj2_rep p \\<bullet> (cltn2_rep C ** M ** transpose (cltn2_rep C) *v proj2_rep p)\n    = 0\""], ["proof (prove)\nusing this:\n  (apply_cltn2 (proj2_abs (proj2_rep p)) C \\<in> S) =\n  (proj2_rep p \\<bullet>\n   (cltn2_rep C ** M ** Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n    proj2_rep p) =\n   0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p C \\<in> S) =\n    (proj2_rep p \\<bullet>\n     (cltn2_rep C ** M **\n      Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n      proj2_rep p) =\n     0)", "by (simp add: proj2_abs_rep)"], ["proof (state)\nthis:\n  (apply_cltn2 p C \\<in> S) =\n  (proj2_rep p \\<bullet>\n   (cltn2_rep C ** M ** Finite_Cartesian_Product.transpose (cltn2_rep C) *v\n    proj2_rep p) =\n   0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_M: \"(vector2_append1 v) \\<bullet> (M *v vector2_append1 v) = (norm v)\\<^sup>2 - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector2_append1 v \\<bullet> (M *v vector2_append1 v) =\n    (norm v)\\<^sup>2 - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vector2_append1 v \\<bullet> (M *v vector2_append1 v) =\n    (norm v)\\<^sup>2 - 1", "have \"(norm v)\\<^sup>2 = (v$1)\\<^sup>2 + (v$2)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm v)\\<^sup>2 = (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2", "unfolding norm_vec_def\n      and L2_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (sqrt (\\<Sum>i\\<in>UNIV. (norm (v $ i))\\<^sup>2))\\<^sup>2 =\n    (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2", "by (simp add: sum_2)"], ["proof (state)\nthis:\n  (norm v)\\<^sup>2 = (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. vector2_append1 v \\<bullet> (M *v vector2_append1 v) =\n    (norm v)\\<^sup>2 - 1", "thus \"(vector2_append1 v) \\<bullet> (M *v vector2_append1 v) = (norm v)\\<^sup>2 - 1\""], ["proof (prove)\nusing this:\n  (norm v)\\<^sup>2 = (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. vector2_append1 v \\<bullet> (M *v vector2_append1 v) =\n    (norm v)\\<^sup>2 - 1", "unfolding vector2_append1_def\n      and inner_vec_def\n      and matrix_vector_mult_def\n      and vector_def\n      and M_def\n      and power2_norm_eq_inner"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV. v $ i \\<bullet> v $ i) =\n  (v $ 1)\\<^sup>2 + (v $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>UNIV.\n       vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [v $ 1, v $ 2, 1]\n          (\\<lambda>n x. 0) 1) $\n       i \\<bullet>\n       (\\<chi>i.\n           \\<Sum>j\\<in>UNIV.\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                [vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                    (\\<lambda>n x. 0) 1)]\n                (\\<lambda>n x. 0) 1) $\n             i $\n             j *\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [v $ 1, v $ 2, 1]\n                (\\<lambda>n x. 0) 1) $\n             j) $\n       i) =\n    (\\<Sum>i\\<in>UNIV. v $ i \\<bullet> v $ i) - 1", "by (simp add: sum_3 power2_eq_square)"], ["proof (state)\nthis:\n  vector2_append1 v \\<bullet> (M *v vector2_append1 v) =\n  (norm v)\\<^sup>2 - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Some specific points and lines of the projective plane\\<close>"], ["", "definition \"east = proj2_abs (vector [1,0,1])\""], ["", "definition \"west = proj2_abs (vector [-1,0,1])\""], ["", "definition \"north = proj2_abs (vector [0,1,1])\""], ["", "definition \"south = proj2_abs (vector [0,-1,1])\""], ["", "definition \"far_north = proj2_abs (vector [0,1,0])\""], ["", "lemmas compass_defs = east_def west_def north_def south_def"], ["", "lemma compass_non_zero:\n  shows \"vector [1,0,1] \\<noteq> (0 :: real^3)\"\n  and \"vector [-1,0,1] \\<noteq> (0 :: real^3)\"\n  and \"vector [0,1,1] \\<noteq> (0 :: real^3)\"\n  and \"vector [0,-1,1] \\<noteq> (0 :: real^3)\"\n  and \"vector [0,1,0] \\<noteq> (0 :: real^3)\"\n  and \"vector [1,0,0] \\<noteq> (0 :: real^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vector [1, 0, 1] \\<noteq> 0 &&&\n     vector [- 1, 0, 1] \\<noteq> 0 &&& vector [0, 1, 1] \\<noteq> 0) &&&\n    vector [0, - 1, 1] \\<noteq> 0 &&&\n    vector [0, 1, 0] \\<noteq> 0 &&& vector [1, 0, 0] \\<noteq> 0", "unfolding vector_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (vec_lambda\n      (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 1]\n        (\\<lambda>n x. 0) 1) \\<noteq>\n     0 &&&\n     vec_lambda\n      (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [- 1, 0, 1]\n        (\\<lambda>n x. 0) 1) \\<noteq>\n     0 &&&\n     vec_lambda\n      (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 1]\n        (\\<lambda>n x. 0) 1) \\<noteq>\n     0) &&&\n    vec_lambda\n     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, - 1, 1]\n       (\\<lambda>n x. 0) 1) \\<noteq>\n    0 &&&\n    vec_lambda\n     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n       (\\<lambda>n x. 0) 1) \\<noteq>\n    0 &&&\n    vec_lambda\n     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n       (\\<lambda>n x. 0) 1) \\<noteq>\n    0", "by (simp_all add: vec_eq_iff forall_3)"], ["", "lemma east_west_distinct: \"east \\<noteq> west\""], ["proof (prove)\ngoal (1 subgoal):\n 1. east \\<noteq> west", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. east = west \\<Longrightarrow> False", "assume \"east = west\""], ["proof (state)\nthis:\n  east = west\n\ngoal (1 subgoal):\n 1. east = west \\<Longrightarrow> False", "with compass_non_zero\n    and proj2_abs_abs_mult [of \"vector [1,0,1]\" \"vector [-1,0,1]\"]"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs (vector [1, 0, 1]) = proj2_abs (vector [- 1, 0, 1]);\n   vector [- 1, 0, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       vector [1, 0, 1] = c *\\<^sub>R vector [- 1, 0, 1]\n  east = west", "obtain k where \"(vector [1,0,1] :: real^3) = k *\\<^sub>R vector [-1,0,1]\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs (vector [1, 0, 1]) = proj2_abs (vector [- 1, 0, 1]);\n   vector [- 1, 0, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       vector [1, 0, 1] = c *\\<^sub>R vector [- 1, 0, 1]\n  east = west\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        vector [1, 0, 1] = k *\\<^sub>R vector [- 1, 0, 1] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding compass_defs"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs (vector [1, 0, 1]) = proj2_abs (vector [- 1, 0, 1]);\n   vector [- 1, 0, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       vector [1, 0, 1] = c *\\<^sub>R vector [- 1, 0, 1]\n  proj2_abs (vector [1, 0, 1]) = proj2_abs (vector [- 1, 0, 1])\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        vector [1, 0, 1] = k *\\<^sub>R vector [- 1, 0, 1] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  vector [1, 0, 1] = k *\\<^sub>R vector [- 1, 0, 1]\n\ngoal (1 subgoal):\n 1. east = west \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] = k *\\<^sub>R vector [- 1, 0, 1]\n\ngoal (1 subgoal):\n 1. False", "unfolding vector_def"], ["proof (prove)\nusing this:\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 1] (\\<lambda>n x. 0)\n     1) =\n  k *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [- 1, 0, 1]\n     (\\<lambda>n x. 0) 1)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma north_south_distinct: \"north \\<noteq> south\""], ["proof (prove)\ngoal (1 subgoal):\n 1. north \\<noteq> south", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. north = south \\<Longrightarrow> False", "assume \"north = south\""], ["proof (state)\nthis:\n  north = south\n\ngoal (1 subgoal):\n 1. north = south \\<Longrightarrow> False", "with compass_non_zero\n    and proj2_abs_abs_mult [of \"vector [0,1,1]\" \"vector [0,-1,1]\"]"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs (vector [0, 1, 1]) = proj2_abs (vector [0, - 1, 1]);\n   vector [0, - 1, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       vector [0, 1, 1] = c *\\<^sub>R vector [0, - 1, 1]\n  north = south", "obtain k where \"(vector [0,1,1] :: real^3) = k *\\<^sub>R vector [0,-1,1]\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs (vector [0, 1, 1]) = proj2_abs (vector [0, - 1, 1]);\n   vector [0, - 1, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       vector [0, 1, 1] = c *\\<^sub>R vector [0, - 1, 1]\n  north = south\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        vector [0, 1, 1] = k *\\<^sub>R vector [0, - 1, 1] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding compass_defs"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs (vector [0, 1, 1]) = proj2_abs (vector [0, - 1, 1]);\n   vector [0, - 1, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       vector [0, 1, 1] = c *\\<^sub>R vector [0, - 1, 1]\n  proj2_abs (vector [0, 1, 1]) = proj2_abs (vector [0, - 1, 1])\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        vector [0, 1, 1] = k *\\<^sub>R vector [0, - 1, 1] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  vector [0, 1, 1] = k *\\<^sub>R vector [0, - 1, 1]\n\ngoal (1 subgoal):\n 1. north = south \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  vector [0, 1, 1] = k *\\<^sub>R vector [0, - 1, 1]\n\ngoal (1 subgoal):\n 1. False", "unfolding vector_def"], ["proof (prove)\nusing this:\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 1] (\\<lambda>n x. 0)\n     1) =\n  k *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, - 1, 1]\n     (\\<lambda>n x. 0) 1)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma north_not_east_or_west: \"north \\<notin> {east, west}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. north \\<notin> {east, west}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. north \\<in> {east, west} \\<Longrightarrow> False", "assume \"north \\<in> {east, west}\""], ["proof (state)\nthis:\n  north \\<in> {east, west}\n\ngoal (1 subgoal):\n 1. north \\<in> {east, west} \\<Longrightarrow> False", "hence \"east = north \\<or> west = north\""], ["proof (prove)\nusing this:\n  north \\<in> {east, west}\n\ngoal (1 subgoal):\n 1. east = north \\<or> west = north", "by auto"], ["proof (state)\nthis:\n  east = north \\<or> west = north\n\ngoal (1 subgoal):\n 1. north \\<in> {east, west} \\<Longrightarrow> False", "with compass_non_zero\n    and proj2_abs_abs_mult [of _ \"vector [0,1,1]\"]"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs ?v = proj2_abs (vector [0, 1, 1]);\n   vector [0, 1, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c. ?v = c *\\<^sub>R vector [0, 1, 1]\n  east = north \\<or> west = north", "obtain k where \"(vector [1,0,1] :: real^3) = k *\\<^sub>R vector [0,1,1]\n    \\<or> (vector [-1,0,1] :: real^3) = k *\\<^sub>R vector [0,1,1]\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs ?v = proj2_abs (vector [0, 1, 1]);\n   vector [0, 1, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c. ?v = c *\\<^sub>R vector [0, 1, 1]\n  east = north \\<or> west = north\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        vector [1, 0, 1] = k *\\<^sub>R vector [0, 1, 1] \\<or>\n        vector [- 1, 0, 1] = k *\\<^sub>R vector [0, 1, 1] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding compass_defs"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs ?v = proj2_abs (vector [0, 1, 1]);\n   vector [0, 1, 1] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c. ?v = c *\\<^sub>R vector [0, 1, 1]\n  proj2_abs (vector [1, 0, 1]) = proj2_abs (vector [0, 1, 1]) \\<or>\n  proj2_abs (vector [- 1, 0, 1]) = proj2_abs (vector [0, 1, 1])\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        vector [1, 0, 1] = k *\\<^sub>R vector [0, 1, 1] \\<or>\n        vector [- 1, 0, 1] = k *\\<^sub>R vector [0, 1, 1] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  vector [1, 0, 1] = k *\\<^sub>R vector [0, 1, 1] \\<or>\n  vector [- 1, 0, 1] = k *\\<^sub>R vector [0, 1, 1]\n\ngoal (1 subgoal):\n 1. north \\<in> {east, west} \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] = k *\\<^sub>R vector [0, 1, 1] \\<or>\n  vector [- 1, 0, 1] = k *\\<^sub>R vector [0, 1, 1]\n\ngoal (1 subgoal):\n 1. False", "unfolding vector_def"], ["proof (prove)\nusing this:\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 1] (\\<lambda>n x. 0)\n     1) =\n  k *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 1] (\\<lambda>n x. 0)\n     1) \\<or>\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [- 1, 0, 1]\n     (\\<lambda>n x. 0) 1) =\n  k *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 1] (\\<lambda>n x. 0)\n     1)\n\ngoal (1 subgoal):\n 1. False", "by (simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma compass_in_S:\n  shows \"east \\<in> S\" and \"west \\<in> S\" and \"north \\<in> S\" and \"south \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (east \\<in> S &&& west \\<in> S) &&& north \\<in> S &&& south \\<in> S", "using compass_non_zero and S_abs"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  (proj2_abs ?v \\<in> S) = (?v \\<bullet> (M *v ?v) = 0)\n\ngoal (1 subgoal):\n 1. (east \\<in> S &&& west \\<in> S) &&& north \\<in> S &&& south \\<in> S", "unfolding compass_defs\n    and M_def\n    and inner_vec_def\n    and matrix_vector_mult_def\n    and vector_def"], ["proof (prove)\nusing this:\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 1] (\\<lambda>n x. 0)\n     1) \\<noteq>\n  0\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [- 1, 0, 1]\n     (\\<lambda>n x. 0) 1) \\<noteq>\n  0\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 1] (\\<lambda>n x. 0)\n     1) \\<noteq>\n  0\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, - 1, 1]\n     (\\<lambda>n x. 0) 1) \\<noteq>\n  0\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0] (\\<lambda>n x. 0)\n     1) \\<noteq>\n  0\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0] (\\<lambda>n x. 0)\n     1) \\<noteq>\n  0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  (proj2_abs ?v \\<in> S) =\n  ((\\<Sum>i\\<in>UNIV.\n      ?v $ i \\<bullet>\n      (\\<chi>i.\n          \\<Sum>j\\<in>UNIV.\n            vec_lambda\n             (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n               [vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                   (\\<lambda>n x. 0) 1),\n                vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                   (\\<lambda>n x. 0) 1),\n                vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                   (\\<lambda>n x. 0) 1)]\n               (\\<lambda>n x. 0) 1) $\n            i $\n            j *\n            ?v $ j) $\n      i) =\n   0)\n\ngoal (1 subgoal):\n 1. (proj2_abs\n      (vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 1]\n          (\\<lambda>n x. 0) 1))\n     \\<in> S &&&\n     proj2_abs\n      (vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [- 1, 0, 1]\n          (\\<lambda>n x. 0) 1))\n     \\<in> S) &&&\n    proj2_abs\n     (vec_lambda\n       (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 1]\n         (\\<lambda>n x. 0) 1))\n    \\<in> S &&&\n    proj2_abs\n     (vec_lambda\n       (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, - 1, 1]\n         (\\<lambda>n x. 0) 1))\n    \\<in> S", "by (simp_all add: sum_3)"], ["", "lemma east_west_tangents:\n  shows \"polar east = proj2_line_abs (vector [-1,0,1])\"\n  and \"polar west = proj2_line_abs (vector [1,0,1])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polar east = proj2_line_abs (vector [- 1, 0, 1]) &&&\n    polar west = proj2_line_abs (vector [1, 0, 1])", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. polar east = proj2_line_abs (vector [- 1, 0, 1])\n 2. polar west = proj2_line_abs (vector [1, 0, 1])", "have \"M *v vector [1,0,1] = (-1) *\\<^sub>R vector [-1,0,1]\"\n    and \"M *v vector [-1,0,1] = (-1) *\\<^sub>R vector [1,0,1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M *v vector [1, 0, 1] = - 1 *\\<^sub>R vector [- 1, 0, 1] &&&\n    M *v vector [- 1, 0, 1] = - 1 *\\<^sub>R vector [1, 0, 1]", "unfolding M_def and matrix_vector_mult_def and vector_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        \\<Sum>j\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n             [vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                 (\\<lambda>n x. 0) 1)]\n             (\\<lambda>n x. 0) 1) $\n          i $\n          j *\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 1]\n             (\\<lambda>n x. 0) 1) $\n          j) =\n    - 1 *\\<^sub>R\n    vec_lambda\n     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [- 1, 0, 1]\n       (\\<lambda>n x. 0) 1) &&&\n    (\\<chi>i.\n        \\<Sum>j\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n             [vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                 (\\<lambda>n x. 0) 1)]\n             (\\<lambda>n x. 0) 1) $\n          i $\n          j *\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [- 1, 0, 1]\n             (\\<lambda>n x. 0) 1) $\n          j) =\n    - 1 *\\<^sub>R\n    vec_lambda\n     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 1]\n       (\\<lambda>n x. 0) 1)", "by (simp_all add: vec_eq_iff sum_3)"], ["proof (state)\nthis:\n  M *v vector [1, 0, 1] = - 1 *\\<^sub>R vector [- 1, 0, 1]\n  M *v vector [- 1, 0, 1] = - 1 *\\<^sub>R vector [1, 0, 1]\n\ngoal (2 subgoals):\n 1. polar east = proj2_line_abs (vector [- 1, 0, 1])\n 2. polar west = proj2_line_abs (vector [1, 0, 1])", "with compass_non_zero and polar_abs"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  polar (proj2_abs ?v) = proj2_line_abs (M *v ?v)\n  M *v vector [1, 0, 1] = - 1 *\\<^sub>R vector [- 1, 0, 1]\n  M *v vector [- 1, 0, 1] = - 1 *\\<^sub>R vector [1, 0, 1]", "have \"polar east = proj2_line_abs ((-1) *\\<^sub>R vector [-1,0,1])\"\n    and \"polar west = proj2_line_abs ((-1) *\\<^sub>R vector [1,0,1])\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  polar (proj2_abs ?v) = proj2_line_abs (M *v ?v)\n  M *v vector [1, 0, 1] = - 1 *\\<^sub>R vector [- 1, 0, 1]\n  M *v vector [- 1, 0, 1] = - 1 *\\<^sub>R vector [1, 0, 1]\n\ngoal (1 subgoal):\n 1. polar east = proj2_line_abs (- 1 *\\<^sub>R vector [- 1, 0, 1]) &&&\n    polar west = proj2_line_abs (- 1 *\\<^sub>R vector [1, 0, 1])", "unfolding compass_defs"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  ?v \\<noteq> 0 \\<Longrightarrow>\n  polar (proj2_abs ?v) = proj2_line_abs (M *v ?v)\n  M *v vector [1, 0, 1] = - 1 *\\<^sub>R vector [- 1, 0, 1]\n  M *v vector [- 1, 0, 1] = - 1 *\\<^sub>R vector [1, 0, 1]\n\ngoal (1 subgoal):\n 1. polar (proj2_abs (vector [1, 0, 1])) =\n    proj2_line_abs (- 1 *\\<^sub>R vector [- 1, 0, 1]) &&&\n    polar (proj2_abs (vector [- 1, 0, 1])) =\n    proj2_line_abs (- 1 *\\<^sub>R vector [1, 0, 1])", "by simp_all"], ["proof (state)\nthis:\n  polar east = proj2_line_abs (- 1 *\\<^sub>R vector [- 1, 0, 1])\n  polar west = proj2_line_abs (- 1 *\\<^sub>R vector [1, 0, 1])\n\ngoal (2 subgoals):\n 1. polar east = proj2_line_abs (vector [- 1, 0, 1])\n 2. polar west = proj2_line_abs (vector [1, 0, 1])", "with proj2_line_abs_mult [of \"-1\"]"], ["proof (chain)\npicking this:\n  - 1 \\<noteq> 0 \\<Longrightarrow>\n  proj2_line_abs (- 1 *\\<^sub>R ?v) = proj2_line_abs ?v\n  polar east = proj2_line_abs (- 1 *\\<^sub>R vector [- 1, 0, 1])\n  polar west = proj2_line_abs (- 1 *\\<^sub>R vector [1, 0, 1])", "show \"polar east = proj2_line_abs (vector [-1,0,1])\"\n    and \"polar west = proj2_line_abs (vector [1,0,1])\""], ["proof (prove)\nusing this:\n  - 1 \\<noteq> 0 \\<Longrightarrow>\n  proj2_line_abs (- 1 *\\<^sub>R ?v) = proj2_line_abs ?v\n  polar east = proj2_line_abs (- 1 *\\<^sub>R vector [- 1, 0, 1])\n  polar west = proj2_line_abs (- 1 *\\<^sub>R vector [1, 0, 1])\n\ngoal (1 subgoal):\n 1. polar east = proj2_line_abs (vector [- 1, 0, 1]) &&&\n    polar west = proj2_line_abs (vector [1, 0, 1])", "by simp_all"], ["proof (state)\nthis:\n  polar east = proj2_line_abs (vector [- 1, 0, 1])\n  polar west = proj2_line_abs (vector [1, 0, 1])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma east_west_tangents_distinct: \"polar east \\<noteq> polar west\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polar east \\<noteq> polar west", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. polar east = polar west \\<Longrightarrow> False", "assume \"polar east = polar west\""], ["proof (state)\nthis:\n  polar east = polar west\n\ngoal (1 subgoal):\n 1. polar east = polar west \\<Longrightarrow> False", "hence \"east = west\""], ["proof (prove)\nusing this:\n  polar east = polar west\n\ngoal (1 subgoal):\n 1. east = west", "by (rule polar_inj)"], ["proof (state)\nthis:\n  east = west\n\ngoal (1 subgoal):\n 1. polar east = polar west \\<Longrightarrow> False", "with east_west_distinct"], ["proof (chain)\npicking this:\n  east \\<noteq> west\n  east = west", "show False"], ["proof (prove)\nusing this:\n  east \\<noteq> west\n  east = west\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma east_west_tangents_incident_far_north:\n  shows \"proj2_incident far_north (polar east)\"\n  and \"proj2_incident far_north (polar west)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident far_north (polar east) &&&\n    proj2_incident far_north (polar west)", "using compass_non_zero and proj2_incident_abs"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>?v \\<noteq> 0; ?w \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> proj2_incident (proj2_abs ?v) (proj2_line_abs ?w) =\n                    (?v \\<bullet> ?w = 0)\n\ngoal (1 subgoal):\n 1. proj2_incident far_north (polar east) &&&\n    proj2_incident far_north (polar west)", "unfolding far_north_def and east_west_tangents and inner_vec_def"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>?v \\<noteq> 0; ?w \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> proj2_incident (proj2_abs ?v) (proj2_line_abs ?w) =\n                    ((\\<Sum>i\\<in>UNIV. ?v $ i \\<bullet> ?w $ i) = 0)\n\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs (vector [0, 1, 0]))\n     (proj2_line_abs (vector [- 1, 0, 1])) &&&\n    proj2_incident (proj2_abs (vector [0, 1, 0]))\n     (proj2_line_abs (vector [1, 0, 1]))", "by (simp_all add: sum_3 vector_3)"], ["", "lemma east_west_tangents_far_north:\n  \"proj2_intersection (polar east) (polar west) = far_north\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_intersection (polar east) (polar west) = far_north", "using east_west_tangents_distinct and east_west_tangents_incident_far_north"], ["proof (prove)\nusing this:\n  polar east \\<noteq> polar west\n  proj2_incident far_north (polar east)\n  proj2_incident far_north (polar west)\n\ngoal (1 subgoal):\n 1. proj2_intersection (polar east) (polar west) = far_north", "by (rule proj2_intersection_unique [symmetric])"], ["", "instantiation proj2 :: zero\nbegin"], ["", "definition proj2_zero_def: \"0 = proj2_pt 0\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(proj2, zero_class)", ".."], ["", "end"], ["", "definition \"equator \\<equiv> proj2_line_abs (vector [0,1,0])\""], ["", "definition \"meridian \\<equiv> proj2_line_abs (vector [1,0,0])\""], ["", "lemma equator_meridian_distinct: \"equator \\<noteq> meridian\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equator \\<noteq> meridian", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. equator = meridian \\<Longrightarrow> False", "assume \"equator = meridian\""], ["proof (state)\nthis:\n  equator = meridian\n\ngoal (1 subgoal):\n 1. equator = meridian \\<Longrightarrow> False", "with compass_non_zero\n    and proj2_line_abs_abs_mult [of \"vector [0,1,0]\" \"vector [1,0,0]\"]"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_line_abs (vector [0, 1, 0]) =\n           proj2_line_abs (vector [1, 0, 0]);\n   vector [1, 0, 0] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k.\n                       vector [0, 1, 0] = k *\\<^sub>R vector [1, 0, 0]\n  equator = meridian", "obtain k where \"(vector [0,1,0] :: real^3) = k *\\<^sub>R vector [1,0,0]\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_line_abs (vector [0, 1, 0]) =\n           proj2_line_abs (vector [1, 0, 0]);\n   vector [1, 0, 0] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k.\n                       vector [0, 1, 0] = k *\\<^sub>R vector [1, 0, 0]\n  equator = meridian\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        vector [0, 1, 0] = k *\\<^sub>R vector [1, 0, 0] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold equator_def meridian_def) auto"], ["proof (state)\nthis:\n  vector [0, 1, 0] = k *\\<^sub>R vector [1, 0, 0]\n\ngoal (1 subgoal):\n 1. equator = meridian \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  vector [0, 1, 0] = k *\\<^sub>R vector [1, 0, 0]\n\ngoal (1 subgoal):\n 1. False", "by (unfold vector_def) (auto simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma east_west_on_equator:\n  shows \"proj2_incident east equator\" and \"proj2_incident west equator\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident east equator &&& proj2_incident west equator", "unfolding east_def and west_def and equator_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs (vector [1, 0, 1]))\n     (proj2_line_abs (vector [0, 1, 0])) &&&\n    proj2_incident (proj2_abs (vector [- 1, 0, 1]))\n     (proj2_line_abs (vector [0, 1, 0]))", "using compass_non_zero"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs (vector [1, 0, 1]))\n     (proj2_line_abs (vector [0, 1, 0])) &&&\n    proj2_incident (proj2_abs (vector [- 1, 0, 1]))\n     (proj2_line_abs (vector [0, 1, 0]))", "by (simp_all add: proj2_incident_abs inner_vec_def vector_def sum_3)"], ["", "lemma north_far_north_distinct: \"north \\<noteq> far_north\""], ["proof (prove)\ngoal (1 subgoal):\n 1. north \\<noteq> far_north", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. north = far_north \\<Longrightarrow> False", "assume \"north = far_north\""], ["proof (state)\nthis:\n  north = far_north\n\ngoal (1 subgoal):\n 1. north = far_north \\<Longrightarrow> False", "with compass_non_zero\n    and proj2_abs_abs_mult [of \"vector [0,1,1]\" \"vector [0,1,0]\"]"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs (vector [0, 1, 1]) = proj2_abs (vector [0, 1, 0]);\n   vector [0, 1, 0] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       vector [0, 1, 1] = c *\\<^sub>R vector [0, 1, 0]\n  north = far_north", "obtain k where \"(vector [0,1,1] :: real^3) = k *\\<^sub>R vector [0,1,0]\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  \\<lbrakk>proj2_abs (vector [0, 1, 1]) = proj2_abs (vector [0, 1, 0]);\n   vector [0, 1, 0] \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c.\n                       vector [0, 1, 1] = c *\\<^sub>R vector [0, 1, 0]\n  north = far_north\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        vector [0, 1, 1] = k *\\<^sub>R vector [0, 1, 0] \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (unfold north_def far_north_def) auto"], ["proof (state)\nthis:\n  vector [0, 1, 1] = k *\\<^sub>R vector [0, 1, 0]\n\ngoal (1 subgoal):\n 1. north = far_north \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  vector [0, 1, 1] = k *\\<^sub>R vector [0, 1, 0]\n\ngoal (1 subgoal):\n 1. False", "unfolding vector_def"], ["proof (prove)\nusing this:\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 1] (\\<lambda>n x. 0)\n     1) =\n  k *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0] (\\<lambda>n x. 0)\n     1)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma north_south_far_north_on_meridian:\n  shows \"proj2_incident north meridian\" and \"proj2_incident south meridian\"\n  and \"proj2_incident far_north meridian\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident north meridian &&&\n    proj2_incident south meridian &&& proj2_incident far_north meridian", "unfolding compass_defs and far_north_def and meridian_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs (vector [0, 1, 1]))\n     (proj2_line_abs (vector [1, 0, 0])) &&&\n    proj2_incident (proj2_abs (vector [0, - 1, 1]))\n     (proj2_line_abs (vector [1, 0, 0])) &&&\n    proj2_incident (proj2_abs (vector [0, 1, 0]))\n     (proj2_line_abs (vector [1, 0, 0]))", "using compass_non_zero"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs (vector [0, 1, 1]))\n     (proj2_line_abs (vector [1, 0, 0])) &&&\n    proj2_incident (proj2_abs (vector [0, - 1, 1]))\n     (proj2_line_abs (vector [1, 0, 0])) &&&\n    proj2_incident (proj2_abs (vector [0, 1, 0]))\n     (proj2_line_abs (vector [1, 0, 0]))", "by (simp_all add: proj2_incident_abs inner_vec_def vector_def sum_3)"], ["", "lemma K2_centre_on_equator_meridian:\n  shows \"proj2_incident K2_centre equator\"\n  and \"proj2_incident K2_centre meridian\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident K2_centre equator &&& proj2_incident K2_centre meridian", "unfolding K2_centre_def and equator_def and meridian_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs (vector [0, 0, 1]))\n     (proj2_line_abs (vector [0, 1, 0])) &&&\n    proj2_incident (proj2_abs (vector [0, 0, 1]))\n     (proj2_line_abs (vector [1, 0, 0]))", "using K2_centre_non_zero and compass_non_zero"], ["proof (prove)\nusing this:\n  vector [0, 0, 1] \\<noteq> 0\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs (vector [0, 0, 1]))\n     (proj2_line_abs (vector [0, 1, 0])) &&&\n    proj2_incident (proj2_abs (vector [0, 0, 1]))\n     (proj2_line_abs (vector [1, 0, 0]))", "by (simp_all add: proj2_incident_abs inner_vec_def vector_def sum_3)"], ["", "lemma on_equator_meridian_is_K2_centre:\n  assumes \"proj2_incident a equator\" and \"proj2_incident a meridian\"\n  shows \"a = K2_centre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = K2_centre", "using assms and K2_centre_on_equator_meridian and equator_meridian_distinct\n    and proj2_incident_unique"], ["proof (prove)\nusing this:\n  proj2_incident a equator\n  proj2_incident a meridian\n  proj2_incident K2_centre equator\n  proj2_incident K2_centre meridian\n  equator \\<noteq> meridian\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n\ngoal (1 subgoal):\n 1. a = K2_centre", "by auto"], ["", "definition \"rep_equator_reflect \\<equiv> vector [\n  vector [1, 0,0],\n  vector [0,-1,0],\n  vector [0, 0,1]] :: real^3^3\""], ["", "definition \"rep_meridian_reflect \\<equiv> vector [\n  vector [-1,0,0],\n  vector [ 0,1,0],\n  vector [ 0,0,1]] :: real^3^3\""], ["", "definition \"equator_reflect \\<equiv> cltn2_abs rep_equator_reflect\""], ["", "definition \"meridian_reflect \\<equiv> cltn2_abs rep_meridian_reflect\""], ["", "lemmas compass_reflect_defs = equator_reflect_def meridian_reflect_def\n  rep_equator_reflect_def rep_meridian_reflect_def"], ["", "lemma compass_reflect_self_inverse:\n  shows \"rep_equator_reflect ** rep_equator_reflect = mat 1\"\n  and \"rep_meridian_reflect ** rep_meridian_reflect = mat 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep_equator_reflect ** rep_equator_reflect = mat 1 &&&\n    rep_meridian_reflect ** rep_meridian_reflect = mat 1", "unfolding compass_reflect_defs matrix_matrix_mult_def mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        \\<Sum>k\\<in>UNIV.\n          vector [vector [1, 0, 0], vector [0, - 1, 0], vector [0, 0, 1]] $\n          i $\n          k *\n          vector [vector [1, 0, 0], vector [0, - 1, 0], vector [0, 0, 1]] $\n          k $\n          j) =\n    (\\<chi>i j. if i = j then 1 else 0) &&&\n    (\\<chi>i j.\n        \\<Sum>k\\<in>UNIV.\n          vector [vector [- 1, 0, 0], vector [0, 1, 0], vector [0, 0, 1]] $\n          i $\n          k *\n          vector [vector [- 1, 0, 0], vector [0, 1, 0], vector [0, 0, 1]] $\n          k $\n          j) =\n    (\\<chi>i j. if i = j then 1 else 0)", "by (simp_all add: vec_eq_iff forall_3 sum_3 vector_3)"], ["", "lemma compass_reflect_invertible:\n  shows \"invertible rep_equator_reflect\" and \"invertible rep_meridian_reflect\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible rep_equator_reflect &&& invertible rep_meridian_reflect", "unfolding invertible_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       rep_equator_reflect ** A' = mat 1 \\<and>\n       A' ** rep_equator_reflect = mat 1 &&&\n    \\<exists>A'.\n       rep_meridian_reflect ** A' = mat 1 \\<and>\n       A' ** rep_meridian_reflect = mat 1", "using compass_reflect_self_inverse"], ["proof (prove)\nusing this:\n  rep_equator_reflect ** rep_equator_reflect = mat 1\n  rep_meridian_reflect ** rep_meridian_reflect = mat 1\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       rep_equator_reflect ** A' = mat 1 \\<and>\n       A' ** rep_equator_reflect = mat 1 &&&\n    \\<exists>A'.\n       rep_meridian_reflect ** A' = mat 1 \\<and>\n       A' ** rep_meridian_reflect = mat 1", "by auto"], ["", "lemma compass_reflect_compass:\n  shows \"apply_cltn2 east meridian_reflect = west\"\n  and \"apply_cltn2 west meridian_reflect = east\"\n  and \"apply_cltn2 north meridian_reflect = north\"\n  and \"apply_cltn2 south meridian_reflect = south\"\n  and \"apply_cltn2 K2_centre meridian_reflect = K2_centre\"\n  and \"apply_cltn2 east equator_reflect = east\"\n  and \"apply_cltn2 west equator_reflect = west\"\n  and \"apply_cltn2 north equator_reflect = south\"\n  and \"apply_cltn2 south equator_reflect = north\"\n  and \"apply_cltn2 K2_centre equator_reflect = K2_centre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((apply_cltn2 east meridian_reflect = west &&&\n      apply_cltn2 west meridian_reflect = east) &&&\n     apply_cltn2 north meridian_reflect = north &&&\n     apply_cltn2 south meridian_reflect = south &&&\n     apply_cltn2 K2_centre meridian_reflect = K2_centre) &&&\n    (apply_cltn2 east equator_reflect = east &&&\n     apply_cltn2 west equator_reflect = west) &&&\n    apply_cltn2 north equator_reflect = south &&&\n    apply_cltn2 south equator_reflect = north &&&\n    apply_cltn2 K2_centre equator_reflect = K2_centre", "proof -"], ["proof (state)\ngoal (10 subgoals):\n 1. apply_cltn2 east meridian_reflect = west\n 2. apply_cltn2 west meridian_reflect = east\n 3. apply_cltn2 north meridian_reflect = north\n 4. apply_cltn2 south meridian_reflect = south\n 5. apply_cltn2 K2_centre meridian_reflect = K2_centre\n 6. apply_cltn2 east equator_reflect = east\n 7. apply_cltn2 west equator_reflect = west\n 8. apply_cltn2 north equator_reflect = south\n 9. apply_cltn2 south equator_reflect = north\n 10. apply_cltn2 K2_centre equator_reflect = K2_centre", "have \"(vector [1,0,1] :: real^3) v* rep_meridian_reflect = vector [-1,0,1]\"\n    and \"(vector [-1,0,1] :: real^3) v* rep_meridian_reflect = vector [1,0,1]\"\n    and \"(vector [0,1,1] :: real^3) v* rep_meridian_reflect = vector [0,1,1]\"\n    and \"(vector [0,-1,1] :: real^3) v* rep_meridian_reflect = vector [0,-1,1]\"\n    and \"(vector [0,0,1] :: real^3) v* rep_meridian_reflect = vector [0,0,1]\"\n    and \"(vector [1,0,1] :: real^3) v* rep_equator_reflect = vector [1,0,1]\"\n    and \"(vector [-1,0,1] :: real^3) v* rep_equator_reflect = vector [-1,0,1]\"\n    and \"(vector [0,1,1] :: real^3) v* rep_equator_reflect = vector [0,-1,1]\"\n    and \"(vector [0,-1,1] :: real^3) v* rep_equator_reflect = vector [0,1,1]\"\n    and \"(vector [0,0,1] :: real^3) v* rep_equator_reflect = vector [0,0,1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((vector [1, 0, 1] v* rep_meridian_reflect = vector [- 1, 0, 1] &&&\n      vector [- 1, 0, 1] v* rep_meridian_reflect = vector [1, 0, 1]) &&&\n     vector [0, 1, 1] v* rep_meridian_reflect = vector [0, 1, 1] &&&\n     vector [0, - 1, 1] v* rep_meridian_reflect = vector [0, - 1, 1] &&&\n     vector [0, 0, 1] v* rep_meridian_reflect = vector [0, 0, 1]) &&&\n    (vector [1, 0, 1] v* rep_equator_reflect = vector [1, 0, 1] &&&\n     vector [- 1, 0, 1] v* rep_equator_reflect = vector [- 1, 0, 1]) &&&\n    vector [0, 1, 1] v* rep_equator_reflect = vector [0, - 1, 1] &&&\n    vector [0, - 1, 1] v* rep_equator_reflect = vector [0, 1, 1] &&&\n    vector [0, 0, 1] v* rep_equator_reflect = vector [0, 0, 1]", "unfolding rep_meridian_reflect_def and rep_equator_reflect_def\n      and vector_matrix_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<chi>j.\n          \\<Sum>i\\<in>UNIV.\n            vector\n             [vector [- 1, 0, 0], vector [0, 1, 0], vector [0, 0, 1]] $\n            i $\n            j *\n            vector [1, 0, 1] $ i) =\n      vector [- 1, 0, 1] &&&\n      (\\<chi>j.\n          \\<Sum>i\\<in>UNIV.\n            vector\n             [vector [- 1, 0, 0], vector [0, 1, 0], vector [0, 0, 1]] $\n            i $\n            j *\n            vector [- 1, 0, 1] $ i) =\n      vector [1, 0, 1]) &&&\n     (\\<chi>j.\n         \\<Sum>i\\<in>UNIV.\n           vector [vector [- 1, 0, 0], vector [0, 1, 0], vector [0, 0, 1]] $\n           i $\n           j *\n           vector [0, 1, 1] $ i) =\n     vector [0, 1, 1] &&&\n     (\\<chi>j.\n         \\<Sum>i\\<in>UNIV.\n           vector [vector [- 1, 0, 0], vector [0, 1, 0], vector [0, 0, 1]] $\n           i $\n           j *\n           vector [0, - 1, 1] $ i) =\n     vector [0, - 1, 1] &&&\n     (\\<chi>j.\n         \\<Sum>i\\<in>UNIV.\n           vector [vector [- 1, 0, 0], vector [0, 1, 0], vector [0, 0, 1]] $\n           i $\n           j *\n           vector [0, 0, 1] $ i) =\n     vector [0, 0, 1]) &&&\n    ((\\<chi>j.\n         \\<Sum>i\\<in>UNIV.\n           vector [vector [1, 0, 0], vector [0, - 1, 0], vector [0, 0, 1]] $\n           i $\n           j *\n           vector [1, 0, 1] $ i) =\n     vector [1, 0, 1] &&&\n     (\\<chi>j.\n         \\<Sum>i\\<in>UNIV.\n           vector [vector [1, 0, 0], vector [0, - 1, 0], vector [0, 0, 1]] $\n           i $\n           j *\n           vector [- 1, 0, 1] $ i) =\n     vector [- 1, 0, 1]) &&&\n    (\\<chi>j.\n        \\<Sum>i\\<in>UNIV.\n          vector [vector [1, 0, 0], vector [0, - 1, 0], vector [0, 0, 1]] $\n          i $\n          j *\n          vector [0, 1, 1] $ i) =\n    vector [0, - 1, 1] &&&\n    (\\<chi>j.\n        \\<Sum>i\\<in>UNIV.\n          vector [vector [1, 0, 0], vector [0, - 1, 0], vector [0, 0, 1]] $\n          i $\n          j *\n          vector [0, - 1, 1] $ i) =\n    vector [0, 1, 1] &&&\n    (\\<chi>j.\n        \\<Sum>i\\<in>UNIV.\n          vector [vector [1, 0, 0], vector [0, - 1, 0], vector [0, 0, 1]] $\n          i $\n          j *\n          vector [0, 0, 1] $ i) =\n    vector [0, 0, 1]", "by (simp_all add: vec_eq_iff forall_3 vector_3 sum_3)"], ["proof (state)\nthis:\n  vector [1, 0, 1] v* rep_meridian_reflect = vector [- 1, 0, 1]\n  vector [- 1, 0, 1] v* rep_meridian_reflect = vector [1, 0, 1]\n  vector [0, 1, 1] v* rep_meridian_reflect = vector [0, 1, 1]\n  vector [0, - 1, 1] v* rep_meridian_reflect = vector [0, - 1, 1]\n  vector [0, 0, 1] v* rep_meridian_reflect = vector [0, 0, 1]\n  vector [1, 0, 1] v* rep_equator_reflect = vector [1, 0, 1]\n  vector [- 1, 0, 1] v* rep_equator_reflect = vector [- 1, 0, 1]\n  vector [0, 1, 1] v* rep_equator_reflect = vector [0, - 1, 1]\n  vector [0, - 1, 1] v* rep_equator_reflect = vector [0, 1, 1]\n  vector [0, 0, 1] v* rep_equator_reflect = vector [0, 0, 1]\n\ngoal (10 subgoals):\n 1. apply_cltn2 east meridian_reflect = west\n 2. apply_cltn2 west meridian_reflect = east\n 3. apply_cltn2 north meridian_reflect = north\n 4. apply_cltn2 south meridian_reflect = south\n 5. apply_cltn2 K2_centre meridian_reflect = K2_centre\n 6. apply_cltn2 east equator_reflect = east\n 7. apply_cltn2 west equator_reflect = west\n 8. apply_cltn2 north equator_reflect = south\n 9. apply_cltn2 south equator_reflect = north\n 10. apply_cltn2 K2_centre equator_reflect = K2_centre", "with compass_reflect_invertible and compass_non_zero and K2_centre_non_zero"], ["proof (chain)\npicking this:\n  invertible rep_equator_reflect\n  invertible rep_meridian_reflect\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  vector [0, 0, 1] \\<noteq> 0\n  vector [1, 0, 1] v* rep_meridian_reflect = vector [- 1, 0, 1]\n  vector [- 1, 0, 1] v* rep_meridian_reflect = vector [1, 0, 1]\n  vector [0, 1, 1] v* rep_meridian_reflect = vector [0, 1, 1]\n  vector [0, - 1, 1] v* rep_meridian_reflect = vector [0, - 1, 1]\n  vector [0, 0, 1] v* rep_meridian_reflect = vector [0, 0, 1]\n  vector [1, 0, 1] v* rep_equator_reflect = vector [1, 0, 1]\n  vector [- 1, 0, 1] v* rep_equator_reflect = vector [- 1, 0, 1]\n  vector [0, 1, 1] v* rep_equator_reflect = vector [0, - 1, 1]\n  vector [0, - 1, 1] v* rep_equator_reflect = vector [0, 1, 1]\n  vector [0, 0, 1] v* rep_equator_reflect = vector [0, 0, 1]", "show \"apply_cltn2 east meridian_reflect = west\"\n    and \"apply_cltn2 west meridian_reflect = east\"\n    and \"apply_cltn2 north meridian_reflect = north\"\n    and \"apply_cltn2 south meridian_reflect = south\"\n    and \"apply_cltn2 K2_centre meridian_reflect = K2_centre\"\n    and \"apply_cltn2 east equator_reflect = east\"\n    and \"apply_cltn2 west equator_reflect = west\"\n    and \"apply_cltn2 north equator_reflect = south\"\n    and \"apply_cltn2 south equator_reflect = north\"\n    and \"apply_cltn2 K2_centre equator_reflect = K2_centre\""], ["proof (prove)\nusing this:\n  invertible rep_equator_reflect\n  invertible rep_meridian_reflect\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  vector [0, 0, 1] \\<noteq> 0\n  vector [1, 0, 1] v* rep_meridian_reflect = vector [- 1, 0, 1]\n  vector [- 1, 0, 1] v* rep_meridian_reflect = vector [1, 0, 1]\n  vector [0, 1, 1] v* rep_meridian_reflect = vector [0, 1, 1]\n  vector [0, - 1, 1] v* rep_meridian_reflect = vector [0, - 1, 1]\n  vector [0, 0, 1] v* rep_meridian_reflect = vector [0, 0, 1]\n  vector [1, 0, 1] v* rep_equator_reflect = vector [1, 0, 1]\n  vector [- 1, 0, 1] v* rep_equator_reflect = vector [- 1, 0, 1]\n  vector [0, 1, 1] v* rep_equator_reflect = vector [0, - 1, 1]\n  vector [0, - 1, 1] v* rep_equator_reflect = vector [0, 1, 1]\n  vector [0, 0, 1] v* rep_equator_reflect = vector [0, 0, 1]\n\ngoal (1 subgoal):\n 1. ((apply_cltn2 east meridian_reflect = west &&&\n      apply_cltn2 west meridian_reflect = east) &&&\n     apply_cltn2 north meridian_reflect = north &&&\n     apply_cltn2 south meridian_reflect = south &&&\n     apply_cltn2 K2_centre meridian_reflect = K2_centre) &&&\n    (apply_cltn2 east equator_reflect = east &&&\n     apply_cltn2 west equator_reflect = west) &&&\n    apply_cltn2 north equator_reflect = south &&&\n    apply_cltn2 south equator_reflect = north &&&\n    apply_cltn2 K2_centre equator_reflect = K2_centre", "unfolding compass_defs and K2_centre_def\n      and meridian_reflect_def and equator_reflect_def"], ["proof (prove)\nusing this:\n  invertible rep_equator_reflect\n  invertible rep_meridian_reflect\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  vector [0, 0, 1] \\<noteq> 0\n  vector [1, 0, 1] v* rep_meridian_reflect = vector [- 1, 0, 1]\n  vector [- 1, 0, 1] v* rep_meridian_reflect = vector [1, 0, 1]\n  vector [0, 1, 1] v* rep_meridian_reflect = vector [0, 1, 1]\n  vector [0, - 1, 1] v* rep_meridian_reflect = vector [0, - 1, 1]\n  vector [0, 0, 1] v* rep_meridian_reflect = vector [0, 0, 1]\n  vector [1, 0, 1] v* rep_equator_reflect = vector [1, 0, 1]\n  vector [- 1, 0, 1] v* rep_equator_reflect = vector [- 1, 0, 1]\n  vector [0, 1, 1] v* rep_equator_reflect = vector [0, - 1, 1]\n  vector [0, - 1, 1] v* rep_equator_reflect = vector [0, 1, 1]\n  vector [0, 0, 1] v* rep_equator_reflect = vector [0, 0, 1]\n\ngoal (1 subgoal):\n 1. ((apply_cltn2 (proj2_abs (vector [1, 0, 1]))\n       (cltn2_abs rep_meridian_reflect) =\n      proj2_abs (vector [- 1, 0, 1]) &&&\n      apply_cltn2 (proj2_abs (vector [- 1, 0, 1]))\n       (cltn2_abs rep_meridian_reflect) =\n      proj2_abs (vector [1, 0, 1])) &&&\n     apply_cltn2 (proj2_abs (vector [0, 1, 1]))\n      (cltn2_abs rep_meridian_reflect) =\n     proj2_abs (vector [0, 1, 1]) &&&\n     apply_cltn2 (proj2_abs (vector [0, - 1, 1]))\n      (cltn2_abs rep_meridian_reflect) =\n     proj2_abs (vector [0, - 1, 1]) &&&\n     apply_cltn2 (proj2_abs (vector [0, 0, 1]))\n      (cltn2_abs rep_meridian_reflect) =\n     proj2_abs (vector [0, 0, 1])) &&&\n    (apply_cltn2 (proj2_abs (vector [1, 0, 1]))\n      (cltn2_abs rep_equator_reflect) =\n     proj2_abs (vector [1, 0, 1]) &&&\n     apply_cltn2 (proj2_abs (vector [- 1, 0, 1]))\n      (cltn2_abs rep_equator_reflect) =\n     proj2_abs (vector [- 1, 0, 1])) &&&\n    apply_cltn2 (proj2_abs (vector [0, 1, 1]))\n     (cltn2_abs rep_equator_reflect) =\n    proj2_abs (vector [0, - 1, 1]) &&&\n    apply_cltn2 (proj2_abs (vector [0, - 1, 1]))\n     (cltn2_abs rep_equator_reflect) =\n    proj2_abs (vector [0, 1, 1]) &&&\n    apply_cltn2 (proj2_abs (vector [0, 0, 1]))\n     (cltn2_abs rep_equator_reflect) =\n    proj2_abs (vector [0, 0, 1])", "by (simp_all add: apply_cltn2_abs)"], ["proof (state)\nthis:\n  apply_cltn2 east meridian_reflect = west\n  apply_cltn2 west meridian_reflect = east\n  apply_cltn2 north meridian_reflect = north\n  apply_cltn2 south meridian_reflect = south\n  apply_cltn2 K2_centre meridian_reflect = K2_centre\n  apply_cltn2 east equator_reflect = east\n  apply_cltn2 west equator_reflect = west\n  apply_cltn2 north equator_reflect = south\n  apply_cltn2 south equator_reflect = north\n  apply_cltn2 K2_centre equator_reflect = K2_centre\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma on_equator_rep:\n  assumes \"z_non_zero a\" and \"proj2_incident a equator\"\n  shows \"\\<exists> x. a = proj2_abs (vector [x,0,1])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "let ?ra = \"proj2_rep a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "let ?ca1 = \"cart2_append1 a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "let ?x = \"?ca1$1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "from compass_non_zero and \\<open>proj2_incident a equator\\<close>"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  proj2_incident a equator", "have \"?ra \\<bullet> vector [0,1,0] = 0\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  proj2_incident a equator\n\ngoal (1 subgoal):\n 1. proj2_rep a \\<bullet> vector [0, 1, 0] = 0", "by (unfold equator_def) (simp add: proj2_incident_right_abs)"], ["proof (state)\nthis:\n  proj2_rep a \\<bullet> vector [0, 1, 0] = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "hence \"?ra$2 = 0\""], ["proof (prove)\nusing this:\n  proj2_rep a \\<bullet> vector [0, 1, 0] = 0\n\ngoal (1 subgoal):\n 1. proj2_rep a $ 2 = 0", "by (unfold inner_vec_def vector_def) (simp add: sum_3)"], ["proof (state)\nthis:\n  proj2_rep a $ 2 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "hence \"?ca1$2 = 0\""], ["proof (prove)\nusing this:\n  proj2_rep a $ 2 = 0\n\ngoal (1 subgoal):\n 1. cart2_append1 a $ 2 = 0", "by (unfold cart2_append1_def) simp"], ["proof (state)\nthis:\n  cart2_append1 a $ 2 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "moreover"], ["proof (state)\nthis:\n  cart2_append1 a $ 2 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "from \\<open>z_non_zero a\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero a", "have \"?ca1$3 = 1\""], ["proof (prove)\nusing this:\n  z_non_zero a\n\ngoal (1 subgoal):\n 1. cart2_append1 a $ 3 = 1", "by (rule cart2_append1_z)"], ["proof (state)\nthis:\n  cart2_append1 a $ 3 = 1\n\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "ultimately"], ["proof (chain)\npicking this:\n  cart2_append1 a $ 2 = 0\n  cart2_append1 a $ 3 = 1", "have \"?ca1 = vector [?x,0,1]\""], ["proof (prove)\nusing this:\n  cart2_append1 a $ 2 = 0\n  cart2_append1 a $ 3 = 1\n\ngoal (1 subgoal):\n 1. cart2_append1 a = vector [cart2_append1 a $ 1, 0, 1]", "by (unfold vector_def) (simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  cart2_append1 a = vector [cart2_append1 a $ 1, 0, 1]\n\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "with \\<open>z_non_zero a\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero a\n  cart2_append1 a = vector [cart2_append1 a $ 1, 0, 1]", "have \"proj2_abs (vector [?x,0,1]) = a\""], ["proof (prove)\nusing this:\n  z_non_zero a\n  cart2_append1 a = vector [cart2_append1 a $ 1, 0, 1]\n\ngoal (1 subgoal):\n 1. proj2_abs (vector [cart2_append1 a $ 1, 0, 1]) = a", "by (simp add: proj2_abs_cart2_append1)"], ["proof (state)\nthis:\n  proj2_abs (vector [cart2_append1 a $ 1, 0, 1]) = a\n\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "thus \"\\<exists> x. a = proj2_abs (vector [x,0,1])\""], ["proof (prove)\nusing this:\n  proj2_abs (vector [cart2_append1 a $ 1, 0, 1]) = a\n\ngoal (1 subgoal):\n 1. \\<exists>x. a = proj2_abs (vector [x, 0, 1])", "by (simp add: exI [of _ ?x])"], ["proof (state)\nthis:\n  \\<exists>x. a = proj2_abs (vector [x, 0, 1])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma on_meridian_rep:\n  assumes \"z_non_zero a\" and \"proj2_incident a meridian\"\n  shows \"\\<exists> y. a = proj2_abs (vector [0,y,1])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "let ?ra = \"proj2_rep a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "let ?ca1 = \"cart2_append1 a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "let ?y = \"?ca1$2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "from compass_non_zero and \\<open>proj2_incident a meridian\\<close>"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  proj2_incident a meridian", "have \"?ra \\<bullet> vector [1,0,0] = 0\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  proj2_incident a meridian\n\ngoal (1 subgoal):\n 1. proj2_rep a \\<bullet> vector [1, 0, 0] = 0", "by (unfold meridian_def) (simp add: proj2_incident_right_abs)"], ["proof (state)\nthis:\n  proj2_rep a \\<bullet> vector [1, 0, 0] = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "hence \"?ra$1 = 0\""], ["proof (prove)\nusing this:\n  proj2_rep a \\<bullet> vector [1, 0, 0] = 0\n\ngoal (1 subgoal):\n 1. proj2_rep a $ 1 = 0", "by (unfold inner_vec_def vector_def) (simp add: sum_3)"], ["proof (state)\nthis:\n  proj2_rep a $ 1 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "hence \"?ca1$1 = 0\""], ["proof (prove)\nusing this:\n  proj2_rep a $ 1 = 0\n\ngoal (1 subgoal):\n 1. cart2_append1 a $ 1 = 0", "by (unfold cart2_append1_def) simp"], ["proof (state)\nthis:\n  cart2_append1 a $ 1 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "moreover"], ["proof (state)\nthis:\n  cart2_append1 a $ 1 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "from \\<open>z_non_zero a\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero a", "have \"?ca1$3 = 1\""], ["proof (prove)\nusing this:\n  z_non_zero a\n\ngoal (1 subgoal):\n 1. cart2_append1 a $ 3 = 1", "by (rule cart2_append1_z)"], ["proof (state)\nthis:\n  cart2_append1 a $ 3 = 1\n\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "ultimately"], ["proof (chain)\npicking this:\n  cart2_append1 a $ 1 = 0\n  cart2_append1 a $ 3 = 1", "have \"?ca1 = vector [0,?y,1]\""], ["proof (prove)\nusing this:\n  cart2_append1 a $ 1 = 0\n  cart2_append1 a $ 3 = 1\n\ngoal (1 subgoal):\n 1. cart2_append1 a = vector [0, cart2_append1 a $ 2, 1]", "by (unfold vector_def) (simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  cart2_append1 a = vector [0, cart2_append1 a $ 2, 1]\n\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "with \\<open>z_non_zero a\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero a\n  cart2_append1 a = vector [0, cart2_append1 a $ 2, 1]", "have \"proj2_abs (vector [0,?y,1]) = a\""], ["proof (prove)\nusing this:\n  z_non_zero a\n  cart2_append1 a = vector [0, cart2_append1 a $ 2, 1]\n\ngoal (1 subgoal):\n 1. proj2_abs (vector [0, cart2_append1 a $ 2, 1]) = a", "by (simp add: proj2_abs_cart2_append1)"], ["proof (state)\nthis:\n  proj2_abs (vector [0, cart2_append1 a $ 2, 1]) = a\n\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "thus \"\\<exists> y. a = proj2_abs (vector [0,y,1])\""], ["proof (prove)\nusing this:\n  proj2_abs (vector [0, cart2_append1 a $ 2, 1]) = a\n\ngoal (1 subgoal):\n 1. \\<exists>y. a = proj2_abs (vector [0, y, 1])", "by (simp add: exI [of _ ?y])"], ["proof (state)\nthis:\n  \\<exists>y. a = proj2_abs (vector [0, y, 1])\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Definition of the Klein--Beltrami model of the hyperbolic plane\\<close>"], ["", "abbreviation \"hyp2 == K2\""], ["", "typedef hyp2 = K2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> hyp2", "using K2_centre_in_K2"], ["proof (prove)\nusing this:\n  K2_centre \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> hyp2", "by auto"], ["", "definition hyp2_rep :: \"hyp2 \\<Rightarrow> real^2\" where\n  \"hyp2_rep p \\<equiv> cart2_pt (Rep_hyp2 p)\""], ["", "definition hyp2_abs :: \"real^2 \\<Rightarrow> hyp2\" where\n  \"hyp2_abs v = Abs_hyp2 (proj2_pt v)\""], ["", "lemma norm_lt_1_iff_in_hyp2:\n  shows \"norm v < 1 \\<longleftrightarrow> proj2_pt v \\<in> hyp2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_pt v \\<in> hyp2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_pt v \\<in> hyp2)", "let ?v' = \"vector2_append1 v\""], ["proof (state)\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_pt v \\<in> hyp2)", "have \"?v' \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector2_append1 v \\<noteq> 0", "by (rule vector2_append1_non_zero)"], ["proof (state)\nthis:\n  vector2_append1 v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_pt v \\<in> hyp2)", "from real_less_rsqrt [of \"norm v\" 1]\n    and abs_square_less_1 [of \"norm v\"]"], ["proof (chain)\npicking this:\n  (norm v)\\<^sup>2 < 1 \\<Longrightarrow> norm v < sqrt 1\n  ((norm v)\\<^sup>2 < 1) = (\\<bar>norm v\\<bar> < 1)", "have \"norm v < 1 \\<longleftrightarrow> (norm v)\\<^sup>2 < 1\""], ["proof (prove)\nusing this:\n  (norm v)\\<^sup>2 < 1 \\<Longrightarrow> norm v < sqrt 1\n  ((norm v)\\<^sup>2 < 1) = (\\<bar>norm v\\<bar> < 1)\n\ngoal (1 subgoal):\n 1. (norm v < 1) = ((norm v)\\<^sup>2 < 1)", "by auto"], ["proof (state)\nthis:\n  (norm v < 1) = ((norm v)\\<^sup>2 < 1)\n\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_pt v \\<in> hyp2)", "hence \"norm v < 1 \\<longleftrightarrow> ?v' \\<bullet> (M *v ?v') < 0\""], ["proof (prove)\nusing this:\n  (norm v < 1) = ((norm v)\\<^sup>2 < 1)\n\ngoal (1 subgoal):\n 1. (norm v < 1) =\n    (vector2_append1 v \\<bullet> (M *v vector2_append1 v) < 0)", "by (simp add: norm_M)"], ["proof (state)\nthis:\n  (norm v < 1) = (vector2_append1 v \\<bullet> (M *v vector2_append1 v) < 0)\n\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_pt v \\<in> hyp2)", "with \\<open>?v' \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  vector2_append1 v \\<noteq> 0\n  (norm v < 1) = (vector2_append1 v \\<bullet> (M *v vector2_append1 v) < 0)", "have \"norm v < 1 \\<longleftrightarrow> proj2_abs ?v' \\<in> K2\""], ["proof (prove)\nusing this:\n  vector2_append1 v \\<noteq> 0\n  (norm v < 1) = (vector2_append1 v \\<bullet> (M *v vector2_append1 v) < 0)\n\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_abs (vector2_append1 v) \\<in> hyp2)", "by (subst K2_abs)"], ["proof (state)\nthis:\n  (norm v < 1) = (proj2_abs (vector2_append1 v) \\<in> hyp2)\n\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_pt v \\<in> hyp2)", "thus \"norm v < 1 \\<longleftrightarrow> proj2_pt v \\<in> hyp2\""], ["proof (prove)\nusing this:\n  (norm v < 1) = (proj2_abs (vector2_append1 v) \\<in> hyp2)\n\ngoal (1 subgoal):\n 1. (norm v < 1) = (proj2_pt v \\<in> hyp2)", "by (unfold proj2_pt_def)"], ["proof (state)\nthis:\n  (norm v < 1) = (proj2_pt v \\<in> hyp2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_eq_1_iff_in_S:\n  shows \"norm v = 1 \\<longleftrightarrow> proj2_pt v \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_pt v \\<in> S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_pt v \\<in> S)", "let ?v' = \"vector2_append1 v\""], ["proof (state)\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_pt v \\<in> S)", "have \"?v' \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector2_append1 v \\<noteq> 0", "by (rule vector2_append1_non_zero)"], ["proof (state)\nthis:\n  vector2_append1 v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_pt v \\<in> S)", "from real_sqrt_unique [of \"norm v\" 1]"], ["proof (chain)\npicking this:\n  \\<lbrakk>(norm v)\\<^sup>2 = 1; 0 \\<le> norm v\\<rbrakk>\n  \\<Longrightarrow> sqrt 1 = norm v", "have \"norm v = 1 \\<longleftrightarrow> (norm v)\\<^sup>2 = 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(norm v)\\<^sup>2 = 1; 0 \\<le> norm v\\<rbrakk>\n  \\<Longrightarrow> sqrt 1 = norm v\n\ngoal (1 subgoal):\n 1. (norm v = 1) = ((norm v)\\<^sup>2 = 1)", "by auto"], ["proof (state)\nthis:\n  (norm v = 1) = ((norm v)\\<^sup>2 = 1)\n\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_pt v \\<in> S)", "hence \"norm v = 1 \\<longleftrightarrow> ?v' \\<bullet> (M *v ?v') = 0\""], ["proof (prove)\nusing this:\n  (norm v = 1) = ((norm v)\\<^sup>2 = 1)\n\ngoal (1 subgoal):\n 1. (norm v = 1) =\n    (vector2_append1 v \\<bullet> (M *v vector2_append1 v) = 0)", "by (simp add: norm_M)"], ["proof (state)\nthis:\n  (norm v = 1) = (vector2_append1 v \\<bullet> (M *v vector2_append1 v) = 0)\n\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_pt v \\<in> S)", "with \\<open>?v' \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  vector2_append1 v \\<noteq> 0\n  (norm v = 1) = (vector2_append1 v \\<bullet> (M *v vector2_append1 v) = 0)", "have \"norm v = 1 \\<longleftrightarrow> proj2_abs ?v' \\<in> S\""], ["proof (prove)\nusing this:\n  vector2_append1 v \\<noteq> 0\n  (norm v = 1) = (vector2_append1 v \\<bullet> (M *v vector2_append1 v) = 0)\n\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_abs (vector2_append1 v) \\<in> S)", "by (subst S_abs)"], ["proof (state)\nthis:\n  (norm v = 1) = (proj2_abs (vector2_append1 v) \\<in> S)\n\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_pt v \\<in> S)", "thus \"norm v = 1 \\<longleftrightarrow> proj2_pt v \\<in> S\""], ["proof (prove)\nusing this:\n  (norm v = 1) = (proj2_abs (vector2_append1 v) \\<in> S)\n\ngoal (1 subgoal):\n 1. (norm v = 1) = (proj2_pt v \\<in> S)", "by (unfold proj2_pt_def)"], ["proof (state)\nthis:\n  (norm v = 1) = (proj2_pt v \\<in> S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma norm_le_1_iff_in_hyp2_S:\n  \"norm v \\<le> 1 \\<longleftrightarrow> proj2_pt v \\<in> hyp2 \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm v \\<le> 1) = (proj2_pt v \\<in> hyp2 \\<union> S)", "using norm_lt_1_iff_in_hyp2 [of v] and norm_eq_1_iff_in_S [of v]"], ["proof (prove)\nusing this:\n  (norm v < 1) = (proj2_pt v \\<in> hyp2)\n  (norm v = 1) = (proj2_pt v \\<in> S)\n\ngoal (1 subgoal):\n 1. (norm v \\<le> 1) = (proj2_pt v \\<in> hyp2 \\<union> S)", "by auto"], ["", "lemma proj2_pt_hyp2_rep: \"proj2_pt (hyp2_rep p) = Rep_hyp2 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "let ?p' = \"Rep_hyp2 p\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "let ?v = \"proj2_rep ?p'\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "have \"?v \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep (Rep_hyp2 p) \\<noteq> 0", "by (rule proj2_rep_non_zero)"], ["proof (state)\nthis:\n  proj2_rep (Rep_hyp2 p) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "have \"proj2_abs ?v = ?p'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_abs (proj2_rep (Rep_hyp2 p)) = Rep_hyp2 p", "by (rule proj2_abs_rep)"], ["proof (state)\nthis:\n  proj2_abs (proj2_rep (Rep_hyp2 p)) = Rep_hyp2 p\n\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "have \"?p' \\<in> hyp2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_hyp2 p \\<in> hyp2", "by (rule Rep_hyp2)"], ["proof (state)\nthis:\n  Rep_hyp2 p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "with \\<open>?v \\<noteq> 0\\<close> and \\<open>proj2_abs ?v = ?p'\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep (Rep_hyp2 p) \\<noteq> 0\n  proj2_abs (proj2_rep (Rep_hyp2 p)) = Rep_hyp2 p\n  Rep_hyp2 p \\<in> hyp2", "have \"?v \\<bullet> (M *v ?v) < 0\""], ["proof (prove)\nusing this:\n  proj2_rep (Rep_hyp2 p) \\<noteq> 0\n  proj2_abs (proj2_rep (Rep_hyp2 p)) = Rep_hyp2 p\n  Rep_hyp2 p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. proj2_rep (Rep_hyp2 p) \\<bullet> (M *v proj2_rep (Rep_hyp2 p)) < 0", "by (simp add: K2_imp_M_neg)"], ["proof (state)\nthis:\n  proj2_rep (Rep_hyp2 p) \\<bullet> (M *v proj2_rep (Rep_hyp2 p)) < 0\n\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "hence \"?v$3 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  proj2_rep (Rep_hyp2 p) \\<bullet> (M *v proj2_rep (Rep_hyp2 p)) < 0\n\ngoal (1 subgoal):\n 1. z_non_zero (Rep_hyp2 p)", "by (rule M_neg_imp_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero (Rep_hyp2 p)\n\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "hence \"proj2_pt (cart2_pt ?p') = ?p'\""], ["proof (prove)\nusing this:\n  z_non_zero (Rep_hyp2 p)\n\ngoal (1 subgoal):\n 1. proj2_pt (cart2_pt (Rep_hyp2 p)) = Rep_hyp2 p", "by (rule proj2_cart2)"], ["proof (state)\nthis:\n  proj2_pt (cart2_pt (Rep_hyp2 p)) = Rep_hyp2 p\n\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "thus \"proj2_pt (hyp2_rep p) = ?p'\""], ["proof (prove)\nusing this:\n  proj2_pt (cart2_pt (Rep_hyp2 p)) = Rep_hyp2 p\n\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "by (unfold hyp2_rep_def)"], ["proof (state)\nthis:\n  proj2_pt (hyp2_rep p) = Rep_hyp2 p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_rep_abs:\n  assumes \"norm v < 1\"\n  shows \"hyp2_rep (hyp2_abs v) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "from \\<open>norm v < 1\\<close>"], ["proof (chain)\npicking this:\n  norm v < 1", "have \"proj2_pt v \\<in> hyp2\""], ["proof (prove)\nusing this:\n  norm v < 1\n\ngoal (1 subgoal):\n 1. proj2_pt v \\<in> hyp2", "by (simp add: norm_lt_1_iff_in_hyp2)"], ["proof (state)\nthis:\n  proj2_pt v \\<in> hyp2\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "hence \"Rep_hyp2 (Abs_hyp2 (proj2_pt v)) = proj2_pt v\""], ["proof (prove)\nusing this:\n  proj2_pt v \\<in> hyp2\n\ngoal (1 subgoal):\n 1. Rep_hyp2 (Abs_hyp2 (proj2_pt v)) = proj2_pt v", "by (simp add: Abs_hyp2_inverse)"], ["proof (state)\nthis:\n  Rep_hyp2 (Abs_hyp2 (proj2_pt v)) = proj2_pt v\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "hence \"hyp2_rep (hyp2_abs v) = cart2_pt (proj2_pt v)\""], ["proof (prove)\nusing this:\n  Rep_hyp2 (Abs_hyp2 (proj2_pt v)) = proj2_pt v\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = cart2_pt (proj2_pt v)", "by (unfold hyp2_rep_def hyp2_abs_def) simp"], ["proof (state)\nthis:\n  hyp2_rep (hyp2_abs v) = cart2_pt (proj2_pt v)\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "thus \"hyp2_rep (hyp2_abs v) = v\""], ["proof (prove)\nusing this:\n  hyp2_rep (hyp2_abs v) = cart2_pt (proj2_pt v)\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "by (simp add: cart2_proj2)"], ["proof (state)\nthis:\n  hyp2_rep (hyp2_abs v) = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_abs_rep: \"hyp2_abs (hyp2_rep p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_abs (hyp2_rep p) = p", "by (unfold hyp2_abs_def) (simp add: proj2_pt_hyp2_rep Rep_hyp2_inverse)"], ["", "lemma norm_hyp2_rep_lt_1: \"norm (hyp2_rep p) < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (hyp2_rep p) < 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. norm (hyp2_rep p) < 1", "have \"proj2_pt (hyp2_rep p) = Rep_hyp2 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) = Rep_hyp2 p", "by (rule proj2_pt_hyp2_rep)"], ["proof (state)\nthis:\n  proj2_pt (hyp2_rep p) = Rep_hyp2 p\n\ngoal (1 subgoal):\n 1. norm (hyp2_rep p) < 1", "hence \"proj2_pt (hyp2_rep p) \\<in> hyp2\""], ["proof (prove)\nusing this:\n  proj2_pt (hyp2_rep p) = Rep_hyp2 p\n\ngoal (1 subgoal):\n 1. proj2_pt (hyp2_rep p) \\<in> hyp2", "by (simp add: Rep_hyp2)"], ["proof (state)\nthis:\n  proj2_pt (hyp2_rep p) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. norm (hyp2_rep p) < 1", "thus \"norm (hyp2_rep p) < 1\""], ["proof (prove)\nusing this:\n  proj2_pt (hyp2_rep p) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. norm (hyp2_rep p) < 1", "by (simp add: norm_lt_1_iff_in_hyp2)"], ["proof (state)\nthis:\n  norm (hyp2_rep p) < 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_S_z_non_zero:\n  assumes \"p \\<in> hyp2 \\<union> S\"\n  shows \"z_non_zero p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z_non_zero p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z_non_zero p", "from \\<open>p \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S", "have \"conic_sgn p \\<le> 0\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<le> 0", "by (unfold K2_def S_def) auto"], ["proof (state)\nthis:\n  conic_sgn p \\<le> 0\n\ngoal (1 subgoal):\n 1. z_non_zero p", "hence \"conic_sgn p \\<noteq> 1\""], ["proof (prove)\nusing this:\n  conic_sgn p \\<le> 0\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 1", "by simp"], ["proof (state)\nthis:\n  conic_sgn p \\<noteq> 1\n\ngoal (1 subgoal):\n 1. z_non_zero p", "thus \"z_non_zero p\""], ["proof (prove)\nusing this:\n  conic_sgn p \\<noteq> 1\n\ngoal (1 subgoal):\n 1. z_non_zero p", "by (rule conic_sgn_not_1_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_S_not_equal:\n  assumes \"a \\<in> hyp2\" and \"p \\<in> S\"\n  shows \"a \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> p", "using assms and S_K2_empty"], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  p \\<in> S\n  S \\<inter> hyp2 = {}\n\ngoal (1 subgoal):\n 1. a \\<noteq> p", "by auto"], ["", "lemma hyp2_S_cart2_inj:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"cart2_pt p = cart2_pt q\"\n  shows \"p = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p = q", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S", "have \"z_non_zero p\" and \"z_non_zero q\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. z_non_zero p &&& z_non_zero q", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n  z_non_zero q\n\ngoal (1 subgoal):\n 1. p = q", "hence \"proj2_pt (cart2_pt p) = p\" and \"proj2_pt (cart2_pt q) = q\""], ["proof (prove)\nusing this:\n  z_non_zero p\n  z_non_zero q\n\ngoal (1 subgoal):\n 1. proj2_pt (cart2_pt p) = p &&& proj2_pt (cart2_pt q) = q", "by (simp_all add: proj2_cart2)"], ["proof (state)\nthis:\n  proj2_pt (cart2_pt p) = p\n  proj2_pt (cart2_pt q) = q\n\ngoal (1 subgoal):\n 1. p = q", "from \\<open>cart2_pt p = cart2_pt q\\<close>"], ["proof (chain)\npicking this:\n  cart2_pt p = cart2_pt q", "have \"proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)\""], ["proof (prove)\nusing this:\n  cart2_pt p = cart2_pt q\n\ngoal (1 subgoal):\n 1. proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)", "by simp"], ["proof (state)\nthis:\n  proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)\n\ngoal (1 subgoal):\n 1. p = q", "with \\<open>proj2_pt (cart2_pt p) = p\\<close> [symmetric] and \\<open>proj2_pt (cart2_pt q) = q\\<close>"], ["proof (chain)\npicking this:\n  p = proj2_pt (cart2_pt p)\n  proj2_pt (cart2_pt q) = q\n  proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)", "show \"p = q\""], ["proof (prove)\nusing this:\n  p = proj2_pt (cart2_pt p)\n  proj2_pt (cart2_pt q) = q\n  proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)\n\ngoal (1 subgoal):\n 1. p = q", "by simp"], ["proof (state)\nthis:\n  p = q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma on_equator_in_hyp2_rep:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a equator\"\n  shows \"\\<exists> x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x,0,1])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "from \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2", "have \"z_non_zero a\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. z_non_zero a", "by (simp add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero a\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "with \\<open>proj2_incident a equator\\<close> and on_equator_rep"], ["proof (chain)\npicking this:\n  proj2_incident a equator\n  \\<lbrakk>z_non_zero ?a; proj2_incident ?a equator\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. ?a = proj2_abs (vector [x, 0, 1])\n  z_non_zero a", "obtain x where \"a = proj2_abs (vector [x,0,1])\" (is \"a = proj2_abs ?v\")"], ["proof (prove)\nusing this:\n  proj2_incident a equator\n  \\<lbrakk>z_non_zero ?a; proj2_incident ?a equator\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x. ?a = proj2_abs (vector [x, 0, 1])\n  z_non_zero a\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        a = proj2_abs (vector [x, 0, 1]) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = proj2_abs (vector [x, 0, 1])\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "have \"?v \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector [x, 0, 1] \\<noteq> 0", "by (simp add: vec_eq_iff forall_3 vector_3)"], ["proof (state)\nthis:\n  vector [x, 0, 1] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "with \\<open>a \\<in> hyp2\\<close> and \\<open>a = proj2_abs ?v\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  a = proj2_abs (vector [x, 0, 1])\n  vector [x, 0, 1] \\<noteq> 0", "have \"?v \\<bullet> (M *v ?v) < 0\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  a = proj2_abs (vector [x, 0, 1])\n  vector [x, 0, 1] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) < 0", "by (simp add: K2_abs)"], ["proof (state)\nthis:\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) < 0\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "hence \"x\\<^sup>2 < 1\""], ["proof (prove)\nusing this:\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) < 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>2 < 1", "unfolding M_def matrix_vector_mult_def inner_vec_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV.\n     vector [x, 0, 1] $ i \\<bullet>\n     (\\<chi>i.\n         \\<Sum>j\\<in>UNIV.\n           vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] $\n           i $\n           j *\n           vector [x, 0, 1] $ j) $\n     i)\n  < 0\n\ngoal (1 subgoal):\n 1. x\\<^sup>2 < 1", "by (simp add: sum_3 vector_3 power2_eq_square)"], ["proof (state)\nthis:\n  x\\<^sup>2 < 1\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "with real_sqrt_abs [of x] and real_sqrt_less_iff [of \"x\\<^sup>2\" 1]"], ["proof (chain)\npicking this:\n  sqrt (x\\<^sup>2) = \\<bar>x\\<bar>\n  (sqrt (x\\<^sup>2) < sqrt 1) = (x\\<^sup>2 < 1)\n  x\\<^sup>2 < 1", "have \"\\<bar>x\\<bar> < 1\""], ["proof (prove)\nusing this:\n  sqrt (x\\<^sup>2) = \\<bar>x\\<bar>\n  (sqrt (x\\<^sup>2) < sqrt 1) = (x\\<^sup>2 < 1)\n  x\\<^sup>2 < 1\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> < 1", "by simp"], ["proof (state)\nthis:\n  \\<bar>x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "with \\<open>a = proj2_abs ?v\\<close>"], ["proof (chain)\npicking this:\n  a = proj2_abs (vector [x, 0, 1])\n  \\<bar>x\\<bar> < 1", "show \"\\<exists> x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x,0,1])\""], ["proof (prove)\nusing this:\n  a = proj2_abs (vector [x, 0, 1])\n  \\<bar>x\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])", "by (simp add: exI [of _ x])"], ["proof (state)\nthis:\n  \\<exists>x. \\<bar>x\\<bar> < 1 \\<and> a = proj2_abs (vector [x, 0, 1])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma on_meridian_in_hyp2_rep:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a meridian\"\n  shows \"\\<exists> y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0,y,1])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "from \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2", "have \"z_non_zero a\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. z_non_zero a", "by (simp add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero a\n\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "with \\<open>proj2_incident a meridian\\<close> and on_meridian_rep"], ["proof (chain)\npicking this:\n  proj2_incident a meridian\n  \\<lbrakk>z_non_zero ?a; proj2_incident ?a meridian\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y. ?a = proj2_abs (vector [0, y, 1])\n  z_non_zero a", "obtain y where \"a = proj2_abs (vector [0,y,1])\" (is \"a = proj2_abs ?v\")"], ["proof (prove)\nusing this:\n  proj2_incident a meridian\n  \\<lbrakk>z_non_zero ?a; proj2_incident ?a meridian\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y. ?a = proj2_abs (vector [0, y, 1])\n  z_non_zero a\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        a = proj2_abs (vector [0, y, 1]) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = proj2_abs (vector [0, y, 1])\n\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "have \"?v \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector [0, y, 1] \\<noteq> 0", "by (simp add: vec_eq_iff forall_3 vector_3)"], ["proof (state)\nthis:\n  vector [0, y, 1] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "with \\<open>a \\<in> hyp2\\<close> and \\<open>a = proj2_abs ?v\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  a = proj2_abs (vector [0, y, 1])\n  vector [0, y, 1] \\<noteq> 0", "have \"?v \\<bullet> (M *v ?v) < 0\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  a = proj2_abs (vector [0, y, 1])\n  vector [0, y, 1] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) < 0", "by (simp add: K2_abs)"], ["proof (state)\nthis:\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) < 0\n\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "hence \"y\\<^sup>2 < 1\""], ["proof (prove)\nusing this:\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) < 0\n\ngoal (1 subgoal):\n 1. y\\<^sup>2 < 1", "unfolding M_def matrix_vector_mult_def inner_vec_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV.\n     vector [0, y, 1] $ i \\<bullet>\n     (\\<chi>i.\n         \\<Sum>j\\<in>UNIV.\n           vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] $\n           i $\n           j *\n           vector [0, y, 1] $ j) $\n     i)\n  < 0\n\ngoal (1 subgoal):\n 1. y\\<^sup>2 < 1", "by (simp add: sum_3 vector_3 power2_eq_square)"], ["proof (state)\nthis:\n  y\\<^sup>2 < 1\n\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "with real_sqrt_abs [of y] and real_sqrt_less_iff [of \"y\\<^sup>2\" 1]"], ["proof (chain)\npicking this:\n  sqrt (y\\<^sup>2) = \\<bar>y\\<bar>\n  (sqrt (y\\<^sup>2) < sqrt 1) = (y\\<^sup>2 < 1)\n  y\\<^sup>2 < 1", "have \"\\<bar>y\\<bar> < 1\""], ["proof (prove)\nusing this:\n  sqrt (y\\<^sup>2) = \\<bar>y\\<bar>\n  (sqrt (y\\<^sup>2) < sqrt 1) = (y\\<^sup>2 < 1)\n  y\\<^sup>2 < 1\n\ngoal (1 subgoal):\n 1. \\<bar>y\\<bar> < 1", "by simp"], ["proof (state)\nthis:\n  \\<bar>y\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "with \\<open>a = proj2_abs ?v\\<close>"], ["proof (chain)\npicking this:\n  a = proj2_abs (vector [0, y, 1])\n  \\<bar>y\\<bar> < 1", "show \"\\<exists> y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0,y,1])\""], ["proof (prove)\nusing this:\n  a = proj2_abs (vector [0, y, 1])\n  \\<bar>y\\<bar> < 1\n\ngoal (1 subgoal):\n 1. \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])", "by (simp add: exI [of _ y])"], ["proof (state)\nthis:\n  \\<exists>y. \\<bar>y\\<bar> < 1 \\<and> a = proj2_abs (vector [0, y, 1])\n\ngoal:\nNo subgoals!", "qed"], ["", "definition hyp2_cltn2 :: \"hyp2 \\<Rightarrow> cltn2 \\<Rightarrow> hyp2\" where\n  \"hyp2_cltn2 p A \\<equiv> Abs_hyp2 (apply_cltn2 (Rep_hyp2 p) A)\""], ["", "definition is_K2_isometry :: \"cltn2 \\<Rightarrow> bool\" where\n  \"is_K2_isometry J \\<equiv> (\\<forall> p. apply_cltn2 p J \\<in> S \\<longleftrightarrow> p \\<in> S)\""], ["", "lemma cltn2_id_is_K2_isometry: \"is_K2_isometry cltn2_id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_K2_isometry cltn2_id", "unfolding is_K2_isometry_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p. (apply_cltn2 p cltn2_id \\<in> S) = (p \\<in> S)", "by simp"], ["", "lemma J_M_J_transpose_K2_isometry:\n  assumes \"k \\<noteq> 0\"\n  and \"repJ ** M ** transpose repJ = k *\\<^sub>R M\" (is \"?N = _\")\n  shows \"is_K2_isometry (cltn2_abs repJ)\" (is \"is_K2_isometry ?J\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_abs repJ)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_abs repJ)", "from \\<open>?N = k *\\<^sub>R M\\<close>"], ["proof (chain)\npicking this:\n  repJ ** M ** Finite_Cartesian_Product.transpose repJ = k *\\<^sub>R M", "have \"?N ** ((1/k) *\\<^sub>R M) = mat 1\""], ["proof (prove)\nusing this:\n  repJ ** M ** Finite_Cartesian_Product.transpose repJ = k *\\<^sub>R M\n\ngoal (1 subgoal):\n 1. repJ ** M ** Finite_Cartesian_Product.transpose repJ **\n    (1 / k) *\\<^sub>R M =\n    mat 1", "by (simp add: matrix_scalar_ac \\<open>k \\<noteq> 0\\<close> M_self_inverse)"], ["proof (state)\nthis:\n  repJ ** M ** Finite_Cartesian_Product.transpose repJ **\n  (1 / k) *\\<^sub>R M =\n  mat 1\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_abs repJ)", "with right_invertible_iff_invertible [of repJ]"], ["proof (chain)\npicking this:\n  (\\<exists>N. repJ ** N = mat 1) = invertible repJ\n  repJ ** M ** Finite_Cartesian_Product.transpose repJ **\n  (1 / k) *\\<^sub>R M =\n  mat 1", "have \"invertible repJ\""], ["proof (prove)\nusing this:\n  (\\<exists>N. repJ ** N = mat 1) = invertible repJ\n  repJ ** M ** Finite_Cartesian_Product.transpose repJ **\n  (1 / k) *\\<^sub>R M =\n  mat 1\n\ngoal (1 subgoal):\n 1. invertible repJ", "by (simp add: matrix_mul_assoc\n      exI [of _ \"M ** transpose repJ ** ((1/k) *\\<^sub>R M)\"])"], ["proof (state)\nthis:\n  invertible repJ\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_abs repJ)", "have \"\\<forall> t. apply_cltn2 t ?J \\<in> S \\<longleftrightarrow> t \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "fix t :: proj2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "have \"proj2_rep t \\<bullet> ((k *\\<^sub>R M) *v proj2_rep t)\n      = k * (proj2_rep t \\<bullet> (M *v proj2_rep t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep t \\<bullet> (k *\\<^sub>R M *v proj2_rep t) =\n    k * (proj2_rep t \\<bullet> (M *v proj2_rep t))", "by (simp add: scaleR_matrix_vector_assoc [symmetric]  dot_scaleR_mult)"], ["proof (state)\nthis:\n  proj2_rep t \\<bullet> (k *\\<^sub>R M *v proj2_rep t) =\n  k * (proj2_rep t \\<bullet> (M *v proj2_rep t))\n\ngoal (1 subgoal):\n 1. \\<And>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "with \\<open>?N = k *\\<^sub>R M\\<close>"], ["proof (chain)\npicking this:\n  repJ ** M ** Finite_Cartesian_Product.transpose repJ = k *\\<^sub>R M\n  proj2_rep t \\<bullet> (k *\\<^sub>R M *v proj2_rep t) =\n  k * (proj2_rep t \\<bullet> (M *v proj2_rep t))", "have \"proj2_rep t \\<bullet> (?N *v proj2_rep t)\n      = k * (proj2_rep t \\<bullet> (M *v proj2_rep t))\""], ["proof (prove)\nusing this:\n  repJ ** M ** Finite_Cartesian_Product.transpose repJ = k *\\<^sub>R M\n  proj2_rep t \\<bullet> (k *\\<^sub>R M *v proj2_rep t) =\n  k * (proj2_rep t \\<bullet> (M *v proj2_rep t))\n\ngoal (1 subgoal):\n 1. proj2_rep t \\<bullet>\n    (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n    k * (proj2_rep t \\<bullet> (M *v proj2_rep t))", "by simp"], ["proof (state)\nthis:\n  proj2_rep t \\<bullet>\n  (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n  k * (proj2_rep t \\<bullet> (M *v proj2_rep t))\n\ngoal (1 subgoal):\n 1. \\<And>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "hence \"proj2_rep t \\<bullet> (?N *v proj2_rep t) = 0\n      \\<longleftrightarrow> k * (proj2_rep t \\<bullet> (M *v proj2_rep t)) = 0\""], ["proof (prove)\nusing this:\n  proj2_rep t \\<bullet>\n  (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n  k * (proj2_rep t \\<bullet> (M *v proj2_rep t))\n\ngoal (1 subgoal):\n 1. (proj2_rep t \\<bullet>\n     (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n     0) =\n    (k * (proj2_rep t \\<bullet> (M *v proj2_rep t)) = 0)", "by simp"], ["proof (state)\nthis:\n  (proj2_rep t \\<bullet>\n   (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n   0) =\n  (k * (proj2_rep t \\<bullet> (M *v proj2_rep t)) = 0)\n\ngoal (1 subgoal):\n 1. \\<And>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "with \\<open>k \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  k \\<noteq> 0\n  (proj2_rep t \\<bullet>\n   (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n   0) =\n  (k * (proj2_rep t \\<bullet> (M *v proj2_rep t)) = 0)", "have \"proj2_rep t \\<bullet> (?N *v proj2_rep t) = 0\n      \\<longleftrightarrow> proj2_rep t \\<bullet> (M *v proj2_rep t) = 0\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  (proj2_rep t \\<bullet>\n   (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n   0) =\n  (k * (proj2_rep t \\<bullet> (M *v proj2_rep t)) = 0)\n\ngoal (1 subgoal):\n 1. (proj2_rep t \\<bullet>\n     (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n     0) =\n    (proj2_rep t \\<bullet> (M *v proj2_rep t) = 0)", "by simp"], ["proof (state)\nthis:\n  (proj2_rep t \\<bullet>\n   (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n   0) =\n  (proj2_rep t \\<bullet> (M *v proj2_rep t) = 0)\n\ngoal (1 subgoal):\n 1. \\<And>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "with \\<open>invertible repJ\\<close>"], ["proof (chain)\npicking this:\n  invertible repJ\n  (proj2_rep t \\<bullet>\n   (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n   0) =\n  (proj2_rep t \\<bullet> (M *v proj2_rep t) = 0)", "have \"apply_cltn2 t ?J \\<in> S \\<longleftrightarrow> proj2_rep t \\<bullet> (M *v proj2_rep t) = 0\""], ["proof (prove)\nusing this:\n  invertible repJ\n  (proj2_rep t \\<bullet>\n   (repJ ** M ** Finite_Cartesian_Product.transpose repJ *v proj2_rep t) =\n   0) =\n  (proj2_rep t \\<bullet> (M *v proj2_rep t) = 0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) =\n    (proj2_rep t \\<bullet> (M *v proj2_rep t) = 0)", "by (simp add: apply_cltn2_right_abs_in_S)"], ["proof (state)\nthis:\n  (apply_cltn2 t (cltn2_abs repJ) \\<in> S) =\n  (proj2_rep t \\<bullet> (M *v proj2_rep t) = 0)\n\ngoal (1 subgoal):\n 1. \\<And>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "thus \"apply_cltn2 t ?J \\<in> S \\<longleftrightarrow> t \\<in> S\""], ["proof (prove)\nusing this:\n  (apply_cltn2 t (cltn2_abs repJ) \\<in> S) =\n  (proj2_rep t \\<bullet> (M *v proj2_rep t) = 0)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)", "by (unfold S_alt_def)"], ["proof (state)\nthis:\n  (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_abs repJ)", "thus \"is_K2_isometry ?J\""], ["proof (prove)\nusing this:\n  \\<forall>t. (apply_cltn2 t (cltn2_abs repJ) \\<in> S) = (t \\<in> S)\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_abs repJ)", "by (unfold is_K2_isometry_def)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_abs repJ)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma equator_reflect_K2_isometry:\n  shows \"is_K2_isometry equator_reflect\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_K2_isometry equator_reflect", "unfolding compass_reflect_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_K2_isometry\n     (cltn2_abs\n       (vector [vector [1, 0, 0], vector [0, - 1, 0], vector [0, 0, 1]]))", "by (rule J_M_J_transpose_K2_isometry [of 1])\n     (simp_all add: M_def matrix_matrix_mult_def transpose_def\n       vec_eq_iff forall_3 sum_3 vector_3)"], ["", "lemma meridian_reflect_K2_isometry:\n  shows \"is_K2_isometry meridian_reflect\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_K2_isometry meridian_reflect", "unfolding compass_reflect_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_K2_isometry\n     (cltn2_abs\n       (vector [vector [- 1, 0, 0], vector [0, 1, 0], vector [0, 0, 1]]))", "by (rule J_M_J_transpose_K2_isometry [of 1])\n     (simp_all add: M_def matrix_matrix_mult_def transpose_def\n       vec_eq_iff forall_3 sum_3 vector_3)"], ["", "lemma cltn2_compose_is_K2_isometry:\n  assumes \"is_K2_isometry H\" and \"is_K2_isometry J\"\n  shows \"is_K2_isometry (cltn2_compose H J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_compose H J)", "using \\<open>is_K2_isometry H\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (prove)\nusing this:\n  is_K2_isometry H\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_compose H J)", "unfolding is_K2_isometry_def"], ["proof (prove)\nusing this:\n  \\<forall>p. (apply_cltn2 p H \\<in> S) = (p \\<in> S)\n  \\<forall>p. (apply_cltn2 p J \\<in> S) = (p \\<in> S)\n\ngoal (1 subgoal):\n 1. \\<forall>p. (apply_cltn2 p (cltn2_compose H J) \\<in> S) = (p \\<in> S)", "by (simp add: cltn2.act_act [simplified, symmetric])"], ["", "lemma cltn2_inverse_is_K2_isometry:\n  assumes \"is_K2_isometry J\"\n  shows \"is_K2_isometry (cltn2_inverse J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "have \"apply_cltn2 p (cltn2_inverse J) \\<in> S\n      \\<longleftrightarrow> apply_cltn2 (apply_cltn2 p (cltn2_inverse J)) J \\<in> S\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p (cltn2_inverse J) \\<in> S) =\n    (apply_cltn2 (apply_cltn2 p (cltn2_inverse J)) J \\<in> S)", "unfolding is_K2_isometry_def"], ["proof (prove)\nusing this:\n  \\<forall>p. (apply_cltn2 p J \\<in> S) = (p \\<in> S)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p (cltn2_inverse J) \\<in> S) =\n    (apply_cltn2 (apply_cltn2 p (cltn2_inverse J)) J \\<in> S)", "by simp"], ["proof (state)\nthis:\n  (apply_cltn2 p (cltn2_inverse J) \\<in> S) =\n  (apply_cltn2 (apply_cltn2 p (cltn2_inverse J)) J \\<in> S)\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "hence \"apply_cltn2 p (cltn2_inverse J) \\<in> S \\<longleftrightarrow> p \\<in> S\""], ["proof (prove)\nusing this:\n  (apply_cltn2 p (cltn2_inverse J) \\<in> S) =\n  (apply_cltn2 (apply_cltn2 p (cltn2_inverse J)) J \\<in> S)\n\ngoal (1 subgoal):\n 1. (apply_cltn2 p (cltn2_inverse J) \\<in> S) = (p \\<in> S)", "by (simp add: cltn2.act_inv_act [simplified])"], ["proof (state)\nthis:\n  (apply_cltn2 p (cltn2_inverse J) \\<in> S) = (p \\<in> S)\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "}"], ["proof (state)\nthis:\n  (apply_cltn2 ?p2 (cltn2_inverse J) \\<in> S) = (?p2 \\<in> S)\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "thus \"is_K2_isometry (cltn2_inverse J)\""], ["proof (prove)\nusing this:\n  (apply_cltn2 ?p2 (cltn2_inverse J) \\<in> S) = (?p2 \\<in> S)\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "unfolding is_K2_isometry_def"], ["proof (prove)\nusing this:\n  (apply_cltn2 ?p2 (cltn2_inverse J) \\<in> S) = (?p2 \\<in> S)\n\ngoal (1 subgoal):\n 1. \\<forall>p. (apply_cltn2 p (cltn2_inverse J) \\<in> S) = (p \\<in> S)", ".."], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_inverse J)\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation K2_isometry_subgroup: subgroup\n  \"Collect is_K2_isometry\"\n  \"(|carrier = UNIV, mult = cltn2_compose, one = cltn2_id|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (Collect is_K2_isometry)\n     \\<lparr>carrier = UNIV, monoid.mult = cltn2_compose,\n        one = cltn2_id\\<rparr>", "unfolding subgroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Collect is_K2_isometry\n     \\<subseteq> carrier\n                  \\<lparr>carrier = UNIV, monoid.mult = cltn2_compose,\n                     one = cltn2_id\\<rparr> \\<and>\n     (\\<forall>x y.\n         x \\<in> Collect is_K2_isometry \\<longrightarrow>\n         y \\<in> Collect is_K2_isometry \\<longrightarrow>\n         x \\<otimes>\\<^bsub>\\<lparr>carrier = UNIV, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n         y\n         \\<in> Collect is_K2_isometry)) \\<and>\n    \\<one>\\<^bsub>\\<lparr>carrier = UNIV, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n    \\<in> Collect is_K2_isometry \\<and>\n    (\\<forall>x.\n        x \\<in> Collect is_K2_isometry \\<longrightarrow>\n        inv\\<^bsub>\\<lparr>carrier = UNIV, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> x\n        \\<in> Collect is_K2_isometry)", "by (simp add:\n    cltn2_id_is_K2_isometry\n    cltn2_compose_is_K2_isometry\n    cltn2_inverse_is_K2_isometry)"], ["", "interpretation K2_isometry: group\n  \"(|carrier = Collect is_K2_isometry, mult = cltn2_compose, one = cltn2_id|)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group\n     \\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose,\n        one = cltn2_id\\<rparr>", "using cltn2.is_group and K2_isometry_subgroup.subgroup_is_group"], ["proof (prove)\nusing this:\n  Group.group\n   \\<lparr>carrier = UNIV, monoid.mult = cltn2_compose,\n      one = cltn2_id\\<rparr>\n  Group.group\n   \\<lparr>carrier = UNIV, monoid.mult = cltn2_compose,\n      one = cltn2_id\\<rparr> \\<Longrightarrow>\n  Group.group\n   (\\<lparr>carrier = UNIV, monoid.mult = cltn2_compose,\n       one = cltn2_id\\<rparr>\n    \\<lparr>carrier := Collect is_K2_isometry\\<rparr>)\n\ngoal (1 subgoal):\n 1. Group.group\n     \\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose,\n        one = cltn2_id\\<rparr>", "by simp"], ["", "lemma K2_isometry_inverse_inv [simp]:\n  assumes \"is_K2_isometry J\"\n  shows \"inv\\<^bsub>(|carrier = Collect is_K2_isometry, mult = cltn2_compose, one = cltn2_id|)\\<^esub> J\n  = cltn2_inverse J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> J =\n    cltn2_inverse J", "using cltn2_left_inverse\n    and \\<open>is_K2_isometry J\\<close>\n    and cltn2_inverse_is_K2_isometry\n    and K2_isometry.inv_equality"], ["proof (prove)\nusing this:\n  cltn2_compose (cltn2_inverse ?A) ?A = cltn2_id\n  is_K2_isometry J\n  is_K2_isometry ?J \\<Longrightarrow> is_K2_isometry (cltn2_inverse ?J)\n  \\<lbrakk>?y \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n           ?x =\n           \\<one>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>;\n   ?x \\<in> carrier\n             \\<lparr>carrier = Collect is_K2_isometry,\n                monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>;\n   ?y \\<in> carrier\n             \\<lparr>carrier = Collect is_K2_isometry,\n                monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> ?x =\n                    ?y\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> J =\n    cltn2_inverse J", "by simp"], ["", "definition real_hyp2_C :: \"[hyp2, hyp2, hyp2, hyp2] \\<Rightarrow> bool\"\n  (\"_ _ \\<congruent>\\<^sub>K _ _\" [99,99,99,99] 50) where\n  \"p q \\<congruent>\\<^sub>K r s \\<equiv>\n    (\\<exists> A. is_K2_isometry A \\<and> hyp2_cltn2 p A = r \\<and> hyp2_cltn2 q A = s)\""], ["", "definition real_hyp2_B :: \"[hyp2, hyp2, hyp2] \\<Rightarrow> bool\"\n(\"B\\<^sub>K _ _ _\" [99,99,99] 50) where\n  \"B\\<^sub>K p q r \\<equiv> B\\<^sub>\\<real> (hyp2_rep p) (hyp2_rep q) (hyp2_rep r)\""], ["", "subsection \\<open>$K$-isometries map the interior of the conic to itself\\<close>"], ["", "lemma collinear_quadratic:\n  assumes \"t = i *\\<^sub>R a + r\"\n  shows \"t \\<bullet> (M *v t) =\n  (a \\<bullet> (M *v a)) * i\\<^sup>2 + 2 * (a \\<bullet> (M *v r)) * i + r \\<bullet> (M *v r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<bullet> (M *v t) =\n    a \\<bullet> (M *v a) * i\\<^sup>2 + 2 * (a \\<bullet> (M *v r)) * i +\n    r \\<bullet> (M *v r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<bullet> (M *v t) =\n    a \\<bullet> (M *v a) * i\\<^sup>2 + 2 * (a \\<bullet> (M *v r)) * i +\n    r \\<bullet> (M *v r)", "from M_reverse"], ["proof (chain)\npicking this:\n  ?a \\<bullet> (M *v ?b) = ?b \\<bullet> (M *v ?a)", "have \"i * (a \\<bullet> (M *v r)) = i * (r \\<bullet> (M *v a))\""], ["proof (prove)\nusing this:\n  ?a \\<bullet> (M *v ?b) = ?b \\<bullet> (M *v ?a)\n\ngoal (1 subgoal):\n 1. i * (a \\<bullet> (M *v r)) = i * (r \\<bullet> (M *v a))", "by simp"], ["proof (state)\nthis:\n  i * (a \\<bullet> (M *v r)) = i * (r \\<bullet> (M *v a))\n\ngoal (1 subgoal):\n 1. t \\<bullet> (M *v t) =\n    a \\<bullet> (M *v a) * i\\<^sup>2 + 2 * (a \\<bullet> (M *v r)) * i +\n    r \\<bullet> (M *v r)", "with \\<open>t = i *\\<^sub>R a + r\\<close>"], ["proof (chain)\npicking this:\n  t = i *\\<^sub>R a + r\n  i * (a \\<bullet> (M *v r)) = i * (r \\<bullet> (M *v a))", "show \"t \\<bullet> (M *v t) =\n    (a \\<bullet> (M *v a)) * i\\<^sup>2 + 2 * (a \\<bullet> (M *v r)) * i + r \\<bullet> (M *v r)\""], ["proof (prove)\nusing this:\n  t = i *\\<^sub>R a + r\n  i * (a \\<bullet> (M *v r)) = i * (r \\<bullet> (M *v a))\n\ngoal (1 subgoal):\n 1. t \\<bullet> (M *v t) =\n    a \\<bullet> (M *v a) * i\\<^sup>2 + 2 * (a \\<bullet> (M *v r)) * i +\n    r \\<bullet> (M *v r)", "by (simp add:\n      inner_add_left\n      matrix_vector_right_distrib\n      inner_add_right\n      matrix_scaleR_vector_ac\n      inner_scaleR_right\n      scaleR_matrix_vector_assoc [symmetric]\n      M_reverse\n      power2_eq_square\n      algebra_simps)"], ["proof (state)\nthis:\n  t \\<bullet> (M *v t) =\n  a \\<bullet> (M *v a) * i\\<^sup>2 + 2 * (a \\<bullet> (M *v r)) * i +\n  r \\<bullet> (M *v r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_quadratic':\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\"\n  shows \"proj2_abs (k *\\<^sub>R p + q) \\<in> S\n  \\<longleftrightarrow> p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k + q \\<bullet> (M *v q) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n    (p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k +\n     q \\<bullet> (M *v q) =\n     0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n    (p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k +\n     q \\<bullet> (M *v q) =\n     0)", "let ?r = \"k *\\<^sub>R p + q\""], ["proof (state)\ngoal (1 subgoal):\n 1. (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n    (p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k +\n     q \\<bullet> (M *v q) =\n     0)", "from \\<open>p \\<noteq> 0\\<close> and \\<open>q \\<noteq> 0\\<close> and \\<open>proj2_abs p \\<noteq> proj2_abs q\\<close>\n    and dependent_proj2_abs [of p q k 1]"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0; k \\<noteq> 0 \\<or> 1 \\<noteq> 0;\n   k *\\<^sub>R p + 1 *\\<^sub>R q = 0\\<rbrakk>\n  \\<Longrightarrow> proj2_abs p = proj2_abs q", "have \"?r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0; k \\<noteq> 0 \\<or> 1 \\<noteq> 0;\n   k *\\<^sub>R p + 1 *\\<^sub>R q = 0\\<rbrakk>\n  \\<Longrightarrow> proj2_abs p = proj2_abs q\n\ngoal (1 subgoal):\n 1. k *\\<^sub>R p + q \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  k *\\<^sub>R p + q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n    (p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k +\n     q \\<bullet> (M *v q) =\n     0)", "hence \"proj2_abs ?r \\<in> S \\<longleftrightarrow> ?r \\<bullet> (M *v ?r) = 0\""], ["proof (prove)\nusing this:\n  k *\\<^sub>R p + q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n    ((k *\\<^sub>R p + q) \\<bullet> (M *v (k *\\<^sub>R p + q)) = 0)", "by (rule S_abs)"], ["proof (state)\nthis:\n  (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n  ((k *\\<^sub>R p + q) \\<bullet> (M *v (k *\\<^sub>R p + q)) = 0)\n\ngoal (1 subgoal):\n 1. (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n    (p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k +\n     q \\<bullet> (M *v q) =\n     0)", "with collinear_quadratic [of ?r k p q]"], ["proof (chain)\npicking this:\n  k *\\<^sub>R p + q = k *\\<^sub>R p + q \\<Longrightarrow>\n  (k *\\<^sub>R p + q) \\<bullet> (M *v (k *\\<^sub>R p + q)) =\n  p \\<bullet> (M *v p) * k\\<^sup>2 + 2 * (p \\<bullet> (M *v q)) * k +\n  q \\<bullet> (M *v q)\n  (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n  ((k *\\<^sub>R p + q) \\<bullet> (M *v (k *\\<^sub>R p + q)) = 0)", "show \"proj2_abs ?r \\<in> S\n    \\<longleftrightarrow> p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k + q \\<bullet> (M *v q) = 0\""], ["proof (prove)\nusing this:\n  k *\\<^sub>R p + q = k *\\<^sub>R p + q \\<Longrightarrow>\n  (k *\\<^sub>R p + q) \\<bullet> (M *v (k *\\<^sub>R p + q)) =\n  p \\<bullet> (M *v p) * k\\<^sup>2 + 2 * (p \\<bullet> (M *v q)) * k +\n  q \\<bullet> (M *v q)\n  (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n  ((k *\\<^sub>R p + q) \\<bullet> (M *v (k *\\<^sub>R p + q)) = 0)\n\ngoal (1 subgoal):\n 1. (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n    (p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k +\n     q \\<bullet> (M *v q) =\n     0)", "by (simp add: dot_lmul_matrix [symmetric] algebra_simps)"], ["proof (state)\nthis:\n  (proj2_abs (k *\\<^sub>R p + q) \\<in> S) =\n  (p \\<bullet> (M *v p) * k\\<^sup>2 + p \\<bullet> (M *v q) * 2 * k +\n   q \\<bullet> (M *v q) =\n   0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_quadratic:\n  assumes \"p \\<noteq> q\" and \"r = proj2_abs (k *\\<^sub>R proj2_rep p + proj2_rep q)\"\n  shows \"r \\<in> S\n  \\<longleftrightarrow> proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2\n      + proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k\n      + proj2_rep q \\<bullet> (M *v proj2_rep q)\n    = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n     proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n     proj2_rep q \\<bullet> (M *v proj2_rep q) =\n     0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (r \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n     proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n     proj2_rep q \\<bullet> (M *v proj2_rep q) =\n     0)", "let ?u = \"proj2_rep p\""], ["proof (state)\ngoal (1 subgoal):\n 1. (r \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n     proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n     proj2_rep q \\<bullet> (M *v proj2_rep q) =\n     0)", "let ?v = \"proj2_rep q\""], ["proof (state)\ngoal (1 subgoal):\n 1. (r \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n     proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n     proj2_rep q \\<bullet> (M *v proj2_rep q) =\n     0)", "let ?w = \"k *\\<^sub>R ?u + ?v\""], ["proof (state)\ngoal (1 subgoal):\n 1. (r \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n     proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n     proj2_rep q \\<bullet> (M *v proj2_rep q) =\n     0)", "have \"?u \\<noteq> 0\" and \"?v \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep p \\<noteq> 0 &&& proj2_rep q \\<noteq> 0", "by (rule proj2_rep_non_zero)+"], ["proof (state)\nthis:\n  proj2_rep p \\<noteq> 0\n  proj2_rep q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (r \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n     proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n     proj2_rep q \\<bullet> (M *v proj2_rep q) =\n     0)", "from \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q", "have \"proj2_abs ?u \\<noteq> proj2_abs ?v\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. proj2_abs (proj2_rep p) \\<noteq> proj2_abs (proj2_rep q)", "by (simp add: proj2_abs_rep)"], ["proof (state)\nthis:\n  proj2_abs (proj2_rep p) \\<noteq> proj2_abs (proj2_rep q)\n\ngoal (1 subgoal):\n 1. (r \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n     proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n     proj2_rep q \\<bullet> (M *v proj2_rep q) =\n     0)", "with \\<open>?u \\<noteq> 0\\<close> and \\<open>?v \\<noteq> 0\\<close> and \\<open>r = proj2_abs ?w\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep p \\<noteq> 0\n  proj2_rep q \\<noteq> 0\n  r = proj2_abs (k *\\<^sub>R proj2_rep p + proj2_rep q)\n  proj2_abs (proj2_rep p) \\<noteq> proj2_abs (proj2_rep q)", "show \"r \\<in> S\n    \\<longleftrightarrow> ?u \\<bullet> (M *v ?u) * k\\<^sup>2 + ?u \\<bullet> (M *v ?v) * 2 * k + ?v \\<bullet> (M *v ?v) = 0\""], ["proof (prove)\nusing this:\n  proj2_rep p \\<noteq> 0\n  proj2_rep q \\<noteq> 0\n  r = proj2_abs (k *\\<^sub>R proj2_rep p + proj2_rep q)\n  proj2_abs (proj2_rep p) \\<noteq> proj2_abs (proj2_rep q)\n\ngoal (1 subgoal):\n 1. (r \\<in> S) =\n    (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n     proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n     proj2_rep q \\<bullet> (M *v proj2_rep q) =\n     0)", "by (simp add: S_quadratic')"], ["proof (state)\nthis:\n  (r \\<in> S) =\n  (proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n   proj2_rep p \\<bullet> (M *v proj2_rep q) * 2 * k +\n   proj2_rep q \\<bullet> (M *v proj2_rep q) =\n   0)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition quarter_discrim :: \"real^3 \\<Rightarrow> real^3 \\<Rightarrow> real\" where\n  \"quarter_discrim p q \\<equiv> (p \\<bullet> (M *v q))\\<^sup>2 - p \\<bullet> (M *v p) * (q \\<bullet> (M *v q))\""], ["", "lemma quarter_discrim_invariant:\n  assumes \"t = i *\\<^sub>R a + r\"\n  shows \"quarter_discrim a t = quarter_discrim a r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quarter_discrim a t = quarter_discrim a r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. quarter_discrim a t = quarter_discrim a r", "from \\<open>t = i *\\<^sub>R a + r\\<close>"], ["proof (chain)\npicking this:\n  t = i *\\<^sub>R a + r", "have \"a \\<bullet> (M *v t) = i * (a \\<bullet> (M *v a)) + a \\<bullet> (M *v r)\""], ["proof (prove)\nusing this:\n  t = i *\\<^sub>R a + r\n\ngoal (1 subgoal):\n 1. a \\<bullet> (M *v t) = i * (a \\<bullet> (M *v a)) + a \\<bullet> (M *v r)", "by (simp add:\n      matrix_vector_right_distrib\n      inner_add_right\n      matrix_scaleR_vector_ac\n      scaleR_matrix_vector_assoc [symmetric])"], ["proof (state)\nthis:\n  a \\<bullet> (M *v t) = i * (a \\<bullet> (M *v a)) + a \\<bullet> (M *v r)\n\ngoal (1 subgoal):\n 1. quarter_discrim a t = quarter_discrim a r", "hence \"(a \\<bullet> (M *v t))\\<^sup>2 =\n    (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n    2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n    (a \\<bullet> (M *v r))\\<^sup>2\""], ["proof (prove)\nusing this:\n  a \\<bullet> (M *v t) = i * (a \\<bullet> (M *v a)) + a \\<bullet> (M *v r)\n\ngoal (1 subgoal):\n 1. (a \\<bullet> (M *v t))\\<^sup>2 =\n    (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n    2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n    (a \\<bullet> (M *v r))\\<^sup>2", "by (simp add: power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  (a \\<bullet> (M *v t))\\<^sup>2 =\n  (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n  2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n  (a \\<bullet> (M *v r))\\<^sup>2\n\ngoal (1 subgoal):\n 1. quarter_discrim a t = quarter_discrim a r", "moreover"], ["proof (state)\nthis:\n  (a \\<bullet> (M *v t))\\<^sup>2 =\n  (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n  2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n  (a \\<bullet> (M *v r))\\<^sup>2\n\ngoal (1 subgoal):\n 1. quarter_discrim a t = quarter_discrim a r", "from collinear_quadratic and \\<open>t = i *\\<^sub>R a + r\\<close>"], ["proof (chain)\npicking this:\n  ?t = ?i *\\<^sub>R ?a + ?r \\<Longrightarrow>\n  ?t \\<bullet> (M *v ?t) =\n  ?a \\<bullet> (M *v ?a) * ?i\\<^sup>2 + 2 * (?a \\<bullet> (M *v ?r)) * ?i +\n  ?r \\<bullet> (M *v ?r)\n  t = i *\\<^sub>R a + r", "have \"a \\<bullet> (M *v a) * (t \\<bullet> (M *v t)) =\n    (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n    2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n    a \\<bullet> (M *v a) * (r \\<bullet> (M *v r))\""], ["proof (prove)\nusing this:\n  ?t = ?i *\\<^sub>R ?a + ?r \\<Longrightarrow>\n  ?t \\<bullet> (M *v ?t) =\n  ?a \\<bullet> (M *v ?a) * ?i\\<^sup>2 + 2 * (?a \\<bullet> (M *v ?r)) * ?i +\n  ?r \\<bullet> (M *v ?r)\n  t = i *\\<^sub>R a + r\n\ngoal (1 subgoal):\n 1. a \\<bullet> (M *v a) * (t \\<bullet> (M *v t)) =\n    (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n    2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n    a \\<bullet> (M *v a) * (r \\<bullet> (M *v r))", "by (simp add: power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  a \\<bullet> (M *v a) * (t \\<bullet> (M *v t)) =\n  (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n  2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n  a \\<bullet> (M *v a) * (r \\<bullet> (M *v r))\n\ngoal (1 subgoal):\n 1. quarter_discrim a t = quarter_discrim a r", "ultimately"], ["proof (chain)\npicking this:\n  (a \\<bullet> (M *v t))\\<^sup>2 =\n  (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n  2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n  (a \\<bullet> (M *v r))\\<^sup>2\n  a \\<bullet> (M *v a) * (t \\<bullet> (M *v t)) =\n  (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n  2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n  a \\<bullet> (M *v a) * (r \\<bullet> (M *v r))", "show \"quarter_discrim a t = quarter_discrim a r\""], ["proof (prove)\nusing this:\n  (a \\<bullet> (M *v t))\\<^sup>2 =\n  (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n  2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n  (a \\<bullet> (M *v r))\\<^sup>2\n  a \\<bullet> (M *v a) * (t \\<bullet> (M *v t)) =\n  (a \\<bullet> (M *v a))\\<^sup>2 * i\\<^sup>2 +\n  2 * (a \\<bullet> (M *v a)) * (a \\<bullet> (M *v r)) * i +\n  a \\<bullet> (M *v a) * (r \\<bullet> (M *v r))\n\ngoal (1 subgoal):\n 1. quarter_discrim a t = quarter_discrim a r", "by (unfold quarter_discrim_def, simp)"], ["proof (state)\nthis:\n  quarter_discrim a t = quarter_discrim a r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quarter_discrim_positive:\n  assumes \"p \\<noteq> 0\"  and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_abs p \\<in> K2\"\n  shows \"quarter_discrim p q > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "let ?i = \"-q$3/p$3\""], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "let ?t = \"?i *\\<^sub>R p + q\""], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "from \\<open>p \\<noteq> 0\\<close> and \\<open>?pp \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  proj2_abs p \\<in> hyp2", "have \"p \\<bullet> (M *v p) < 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  proj2_abs p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. p \\<bullet> (M *v p) < 0", "by (subst K2_abs [symmetric])"], ["proof (state)\nthis:\n  p \\<bullet> (M *v p) < 0\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "hence \"p$3 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<bullet> (M *v p) < 0\n\ngoal (1 subgoal):\n 1. p $ 3 \\<noteq> 0", "by (rule M_neg_imp_z_non_zero)"], ["proof (state)\nthis:\n  p $ 3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "hence \"?t$3 = 0\""], ["proof (prove)\nusing this:\n  p $ 3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 3 = 0", "by simp"], ["proof (state)\nthis:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 3 = 0\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "hence \"?t \\<bullet> (M *v ?t) = (?t$1)\\<^sup>2 + (?t$2)\\<^sup>2\""], ["proof (prove)\nusing this:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 3 = 0\n\ngoal (1 subgoal):\n 1. ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n    (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)) =\n    (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n    (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2", "unfolding matrix_vector_mult_def and M_def and vector_def"], ["proof (prove)\nusing this:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 3 = 0\n\ngoal (1 subgoal):\n 1. ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n    (\\<chi>i.\n        \\<Sum>j\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n             [vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                 (\\<lambda>n x. 0) 1),\n              vec_lambda\n               (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                 (\\<lambda>n x. 0) 1)]\n             (\\<lambda>n x. 0) 1) $\n          i $\n          j *\n          ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ j) =\n    (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n    (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2", "by (simp add: inner_vec_def sum_3 power2_eq_square)"], ["proof (state)\nthis:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n  (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)) =\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "from \\<open>p$3 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p $ 3 \\<noteq> 0", "have \"p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p $ 3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. p \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "with \\<open>q \\<noteq> 0\\<close> and \\<open>?pp \\<noteq> ?pq\\<close> and dependent_proj2_abs [of p q ?i 1]"], ["proof (chain)\npicking this:\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0;\n   - q $ 3 / p $ 3 \\<noteq> 0 \\<or> 1 \\<noteq> 0;\n   (- q $ 3 / p $ 3) *\\<^sub>R p + 1 *\\<^sub>R q = 0\\<rbrakk>\n  \\<Longrightarrow> proj2_abs p = proj2_abs q\n  p \\<noteq> 0", "have \"?t \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0;\n   - q $ 3 / p $ 3 \\<noteq> 0 \\<or> 1 \\<noteq> 0;\n   (- q $ 3 / p $ 3) *\\<^sub>R p + 1 *\\<^sub>R q = 0\\<rbrakk>\n  \\<Longrightarrow> proj2_abs p = proj2_abs q\n  p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (- q $ 3 / p $ 3) *\\<^sub>R p + q \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  (- q $ 3 / p $ 3) *\\<^sub>R p + q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "with \\<open>?t$3 = 0\\<close>"], ["proof (chain)\npicking this:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 3 = 0\n  (- q $ 3 / p $ 3) *\\<^sub>R p + q \\<noteq> 0", "have \"?t$1 \\<noteq> 0 \\<or> ?t$2 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 3 = 0\n  (- q $ 3 / p $ 3) *\\<^sub>R p + q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1 \\<noteq> 0 \\<or>\n    ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2 \\<noteq> 0", "by (simp add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1 \\<noteq> 0 \\<or>\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "hence \"(?t$1)\\<^sup>2 > 0 \\<or> (?t$2)\\<^sup>2 > 0\""], ["proof (prove)\nusing this:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1 \\<noteq> 0 \\<or>\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 \\<or>\n    0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 \\<or>\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "moreover"], ["proof (state)\nthis:\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 \\<or>\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "have \"(?t$2)\\<^sup>2 \\<ge> 0\" and \"(?t$1)\\<^sup>2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2 &&&\n    0 \\<le> (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2", "by simp_all"], ["proof (state)\nthis:\n  0 \\<le> (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n  0 \\<le> (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "ultimately"], ["proof (chain)\npicking this:\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 \\<or>\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n  0 \\<le> (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n  0 \\<le> (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2", "have \"(?t$1)\\<^sup>2 + (?t$2)\\<^sup>2 > 0\""], ["proof (prove)\nusing this:\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 \\<or>\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n  0 \\<le> (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n  0 \\<le> (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n        (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n      (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "with \\<open>?t \\<bullet> (M *v ?t) = (?t$1)\\<^sup>2 + (?t$2)\\<^sup>2\\<close>"], ["proof (chain)\npicking this:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n  (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)) =\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n      (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2", "have \"?t \\<bullet> (M *v ?t) > 0\""], ["proof (prove)\nusing this:\n  ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n  (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)) =\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n  0 < (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 1)\\<^sup>2 +\n      (((- q $ 3 / p $ 3) *\\<^sub>R p + q) $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n        (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q))", "by simp"], ["proof (state)\nthis:\n  0 < ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n      (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q))\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "with mult_neg_pos [of \"p \\<bullet> (M *v p)\"] and \\<open>p \\<bullet> (M *v p) < 0\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>p \\<bullet> (M *v p) < 0; 0 < ?b\\<rbrakk>\n  \\<Longrightarrow> p \\<bullet> (M *v p) * ?b < 0\n  p \\<bullet> (M *v p) < 0\n  0 < ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n      (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q))", "have \"p \\<bullet> (M *v p) * (?t \\<bullet> (M *v ?t)) < 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>p \\<bullet> (M *v p) < 0; 0 < ?b\\<rbrakk>\n  \\<Longrightarrow> p \\<bullet> (M *v p) * ?b < 0\n  p \\<bullet> (M *v p) < 0\n  0 < ((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n      (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q))\n\ngoal (1 subgoal):\n 1. p \\<bullet> (M *v p) *\n    (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n     (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\n    < 0", "by simp"], ["proof (state)\nthis:\n  p \\<bullet> (M *v p) *\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n   (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\n  < 0\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "moreover"], ["proof (state)\nthis:\n  p \\<bullet> (M *v p) *\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n   (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\n  < 0\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "have \"(p \\<bullet> (M *v ?t))\\<^sup>2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (p \\<bullet> (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 \\<le> (p \\<bullet> (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "ultimately"], ["proof (chain)\npicking this:\n  p \\<bullet> (M *v p) *\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n   (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\n  < 0\n  0 \\<le> (p \\<bullet> (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\\<^sup>2", "have \"(p \\<bullet> (M *v ?t))\\<^sup>2 - p \\<bullet> (M *v p) * (?t \\<bullet> (M *v ?t)) > 0\""], ["proof (prove)\nusing this:\n  p \\<bullet> (M *v p) *\n  (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n   (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\n  < 0\n  0 \\<le> (p \\<bullet> (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (p \\<bullet> (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\\<^sup>2 -\n        p \\<bullet> (M *v p) *\n        (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n         (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))", "by arith"], ["proof (state)\nthis:\n  0 < (p \\<bullet> (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\\<^sup>2 -\n      p \\<bullet> (M *v p) *\n      (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n       (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "with quarter_discrim_invariant [of ?t ?i p q]"], ["proof (chain)\npicking this:\n  (- q $ 3 / p $ 3) *\\<^sub>R p + q =\n  (- q $ 3 / p $ 3) *\\<^sub>R p + q \\<Longrightarrow>\n  quarter_discrim p ((- q $ 3 / p $ 3) *\\<^sub>R p + q) =\n  quarter_discrim p q\n  0 < (p \\<bullet> (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\\<^sup>2 -\n      p \\<bullet> (M *v p) *\n      (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n       (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))", "show \"quarter_discrim p q > 0\""], ["proof (prove)\nusing this:\n  (- q $ 3 / p $ 3) *\\<^sub>R p + q =\n  (- q $ 3 / p $ 3) *\\<^sub>R p + q \\<Longrightarrow>\n  quarter_discrim p ((- q $ 3 / p $ 3) *\\<^sub>R p + q) =\n  quarter_discrim p q\n  0 < (p \\<bullet> (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\\<^sup>2 -\n      p \\<bullet> (M *v p) *\n      (((- q $ 3 / p $ 3) *\\<^sub>R p + q) \\<bullet>\n       (M *v ((- q $ 3 / p $ 3) *\\<^sub>R p + q)))\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "by (unfold quarter_discrim_def, simp)"], ["proof (state)\nthis:\n  0 < quarter_discrim p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quarter_discrim_self_zero:\n  assumes \"proj2_abs a = proj2_abs b\"\n  shows \"quarter_discrim a b = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quarter_discrim a b = 0", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> quarter_discrim a b = 0\n 2. \\<not> ?P \\<Longrightarrow> quarter_discrim a b = 0", "assume \"b = 0\""], ["proof (state)\nthis:\n  b = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> quarter_discrim a b = 0\n 2. \\<not> ?P \\<Longrightarrow> quarter_discrim a b = 0", "thus \"quarter_discrim a b = 0\""], ["proof (prove)\nusing this:\n  b = 0\n\ngoal (1 subgoal):\n 1. quarter_discrim a b = 0", "by (unfold quarter_discrim_def, simp)"], ["proof (state)\nthis:\n  quarter_discrim a b = 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> quarter_discrim a b = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> quarter_discrim a b = 0", "assume \"b \\<noteq> 0\""], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> quarter_discrim a b = 0", "with \\<open>proj2_abs a = proj2_abs b\\<close> and proj2_abs_abs_mult"], ["proof (chain)\npicking this:\n  proj2_abs a = proj2_abs b\n  \\<lbrakk>proj2_abs ?v = proj2_abs ?w; ?w \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c. ?v = c *\\<^sub>R ?w\n  b \\<noteq> 0", "obtain k where \"a = k *\\<^sub>R b\""], ["proof (prove)\nusing this:\n  proj2_abs a = proj2_abs b\n  \\<lbrakk>proj2_abs ?v = proj2_abs ?w; ?w \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c. ?v = c *\\<^sub>R ?w\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k. a = k *\\<^sub>R b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = k *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> quarter_discrim a b = 0", "thus \"quarter_discrim a b = 0\""], ["proof (prove)\nusing this:\n  a = k *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. quarter_discrim a b = 0", "unfolding quarter_discrim_def"], ["proof (prove)\nusing this:\n  a = k *\\<^sub>R b\n\ngoal (1 subgoal):\n 1. (a \\<bullet> (M *v b))\\<^sup>2 -\n    a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)) =\n    0", "by (simp add: power2_eq_square\n      matrix_scaleR_vector_ac\n      scaleR_matrix_vector_assoc [symmetric])"], ["proof (state)\nthis:\n  quarter_discrim a b = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "definition S_intersection_coeff1 :: \"real^3 \\<Rightarrow> real^3 \\<Rightarrow> real\" where\n  \"S_intersection_coeff1 p q\n  \\<equiv> (-p \\<bullet> (M *v q) + sqrt (quarter_discrim p q)) / (p \\<bullet> (M *v p))\""], ["", "definition S_intersection_coeff2 :: \"real^3 \\<Rightarrow> real^3 \\<Rightarrow> real\" where\n  \"S_intersection_coeff2 p q\n  \\<equiv> (-p \\<bullet> (M *v q) - sqrt (quarter_discrim p q)) / (p \\<bullet> (M *v p))\""], ["", "definition S_intersection1_rep :: \"real^3 \\<Rightarrow> real^3 \\<Rightarrow> real^3\" where\n  \"S_intersection1_rep p q \\<equiv> (S_intersection_coeff1 p q) *\\<^sub>R p + q\""], ["", "definition S_intersection2_rep :: \"real^3 \\<Rightarrow> real^3 \\<Rightarrow> real^3\" where\n  \"S_intersection2_rep p q \\<equiv> (S_intersection_coeff2 p q) *\\<^sub>R p + q\""], ["", "definition S_intersection1 :: \"real^3 \\<Rightarrow> real^3 \\<Rightarrow> proj2\" where\n  \"S_intersection1 p q \\<equiv> proj2_abs (S_intersection1_rep p q)\""], ["", "definition S_intersection2 :: \"real^3 \\<Rightarrow> real^3 \\<Rightarrow> proj2\" where\n  \"S_intersection2 p q \\<equiv> proj2_abs (S_intersection2_rep p q)\""], ["", "lemmas S_intersection_coeffs_defs =\n  S_intersection_coeff1_def S_intersection_coeff2_def"], ["", "lemmas S_intersections_defs =\n  S_intersection1_def S_intersection2_def\n  S_intersection1_rep_def S_intersection2_rep_def"], ["", "lemma S_intersection_coeffs_distinct:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_abs p \\<in> K2\"\n  shows \"S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q", "from \\<open>p \\<noteq> 0\\<close> and \\<open>?pp \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  proj2_abs p \\<in> hyp2", "have \"p \\<bullet> (M *v p) < 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  proj2_abs p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. p \\<bullet> (M *v p) < 0", "by (subst K2_abs [symmetric])"], ["proof (state)\nthis:\n  p \\<bullet> (M *v p) < 0\n\ngoal (1 subgoal):\n 1. S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q", "from assms"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  proj2_abs p \\<in> hyp2", "have \"quarter_discrim p q > 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  proj2_abs p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "by (rule quarter_discrim_positive)"], ["proof (state)\nthis:\n  0 < quarter_discrim p q\n\ngoal (1 subgoal):\n 1. S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q", "with \\<open>p \\<bullet> (M *v p) < 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<bullet> (M *v p) < 0\n  0 < quarter_discrim p q", "show \"S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q\""], ["proof (prove)\nusing this:\n  p \\<bullet> (M *v p) < 0\n  0 < quarter_discrim p q\n\ngoal (1 subgoal):\n 1. S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q", "by (unfold S_intersection_coeffs_defs, simp)"], ["proof (state)\nthis:\n  S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_intersections_distinct:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_abs p \\<in> K2\"\n  shows \"S_intersection1 p q \\<noteq> S_intersection2 p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S_intersection1 p q \\<noteq> S_intersection2 p q", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. S_intersection1 p q \\<noteq> S_intersection2 p q", "from \\<open>p \\<noteq> 0\\<close> and \\<open>q \\<noteq> 0\\<close> and \\<open>?pp \\<noteq> ?pq\\<close> and \\<open>?pp \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  proj2_abs p \\<in> hyp2", "have \"S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  proj2_abs p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q", "by (rule S_intersection_coeffs_distinct)"], ["proof (state)\nthis:\n  S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q\n\ngoal (1 subgoal):\n 1. S_intersection1 p q \\<noteq> S_intersection2 p q", "with \\<open>p \\<noteq> 0\\<close> and \\<open>q \\<noteq> 0\\<close> and \\<open>?pp \\<noteq> ?pq\\<close> and proj2_Col_coeff_unique'"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  \\<lbrakk>?a \\<noteq> 0; ?r \\<noteq> 0; proj2_abs ?a \\<noteq> proj2_abs ?r;\n   proj2_abs (?i *\\<^sub>R ?a + ?r) =\n   proj2_abs (?j *\\<^sub>R ?a + ?r)\\<rbrakk>\n  \\<Longrightarrow> ?i = ?j\n  S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q", "show \"S_intersection1 p q \\<noteq> S_intersection2 p q\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  \\<lbrakk>?a \\<noteq> 0; ?r \\<noteq> 0; proj2_abs ?a \\<noteq> proj2_abs ?r;\n   proj2_abs (?i *\\<^sub>R ?a + ?r) =\n   proj2_abs (?j *\\<^sub>R ?a + ?r)\\<rbrakk>\n  \\<Longrightarrow> ?i = ?j\n  S_intersection_coeff1 p q \\<noteq> S_intersection_coeff2 p q\n\ngoal (1 subgoal):\n 1. S_intersection1 p q \\<noteq> S_intersection2 p q", "by (unfold S_intersections_defs, auto)"], ["proof (state)\nthis:\n  S_intersection1 p q \\<noteq> S_intersection2 p q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_intersections_in_S:\n  assumes \"p \\<noteq> 0\"  and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_abs p \\<in> K2\"\n  shows \"S_intersection1 p q \\<in> S\" and \"S_intersection2 p q \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S_intersection1 p q \\<in> S &&& S_intersection2 p q \\<in> S", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "let ?j = \"S_intersection_coeff1 p q\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "let ?k = \"S_intersection_coeff2 p q\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "let ?a = \"p \\<bullet> (M *v p)\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "let ?b = \"2 * (p \\<bullet> (M *v q))\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "let ?c = \"q \\<bullet> (M *v q)\""], ["proof (state)\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "from \\<open>p \\<noteq> 0\\<close> and \\<open>?pp \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  proj2_abs p \\<in> hyp2", "have \"?a < 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  proj2_abs p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. p \\<bullet> (M *v p) < 0", "by (subst K2_abs [symmetric])"], ["proof (state)\nthis:\n  p \\<bullet> (M *v p) < 0\n\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "have qd: \"discrim ?a ?b ?c = 4 * quarter_discrim p q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n     (q \\<bullet> (M *v q)) =\n    4 * quarter_discrim p q", "unfolding discrim_def quarter_discrim_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * (p \\<bullet> (M *v q)))\\<^sup>2 -\n    4 * (p \\<bullet> (M *v p)) * (q \\<bullet> (M *v q)) =\n    4 *\n    ((p \\<bullet> (M *v q))\\<^sup>2 -\n     p \\<bullet> (M *v p) * (q \\<bullet> (M *v q)))", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n   (q \\<bullet> (M *v q)) =\n  4 * quarter_discrim p q\n\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "with times_divide_times_eq [of\n    2 2 \"sqrt (quarter_discrim p q) - p \\<bullet> (M *v q)\" ?a]\n    and times_divide_times_eq [of\n    2 2 \"-p \\<bullet> (M *v q) - sqrt (quarter_discrim p q)\" ?a]\n    and real_sqrt_mult and real_sqrt_abs [of 2]"], ["proof (chain)\npicking this:\n  2 / 2 *\n  ((sqrt (quarter_discrim p q) - p \\<bullet> (M *v q)) /\n   (p \\<bullet> (M *v p))) =\n  2 * (sqrt (quarter_discrim p q) - p \\<bullet> (M *v q)) /\n  (2 * (p \\<bullet> (M *v p)))\n  2 / 2 *\n  ((- p \\<bullet> (M *v q) - sqrt (quarter_discrim p q)) /\n   (p \\<bullet> (M *v p))) =\n  2 * (- p \\<bullet> (M *v q) - sqrt (quarter_discrim p q)) /\n  (2 * (p \\<bullet> (M *v p)))\n  sqrt (?x * ?y) = sqrt ?x * sqrt ?y\n  sqrt (2\\<^sup>2) = \\<bar>2\\<bar>\n  discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n   (q \\<bullet> (M *v q)) =\n  4 * quarter_discrim p q", "have \"?j = (-?b + sqrt (discrim ?a ?b ?c)) / (2 * ?a)\"\n    and \"?k = (-?b - sqrt (discrim ?a ?b ?c)) / (2 * ?a)\""], ["proof (prove)\nusing this:\n  2 / 2 *\n  ((sqrt (quarter_discrim p q) - p \\<bullet> (M *v q)) /\n   (p \\<bullet> (M *v p))) =\n  2 * (sqrt (quarter_discrim p q) - p \\<bullet> (M *v q)) /\n  (2 * (p \\<bullet> (M *v p)))\n  2 / 2 *\n  ((- p \\<bullet> (M *v q) - sqrt (quarter_discrim p q)) /\n   (p \\<bullet> (M *v p))) =\n  2 * (- p \\<bullet> (M *v q) - sqrt (quarter_discrim p q)) /\n  (2 * (p \\<bullet> (M *v p)))\n  sqrt (?x * ?y) = sqrt ?x * sqrt ?y\n  sqrt (2\\<^sup>2) = \\<bar>2\\<bar>\n  discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n   (q \\<bullet> (M *v q)) =\n  4 * quarter_discrim p q\n\ngoal (1 subgoal):\n 1. S_intersection_coeff1 p q =\n    (- (2 * (p \\<bullet> (M *v q))) +\n     sqrt\n      (discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n        (q \\<bullet> (M *v q)))) /\n    (2 * (p \\<bullet> (M *v p))) &&&\n    S_intersection_coeff2 p q =\n    (- (2 * (p \\<bullet> (M *v q))) -\n     sqrt\n      (discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n        (q \\<bullet> (M *v q)))) /\n    (2 * (p \\<bullet> (M *v p)))", "by (unfold S_intersection_coeffs_defs, simp_all add: algebra_simps)"], ["proof (state)\nthis:\n  S_intersection_coeff1 p q =\n  (- (2 * (p \\<bullet> (M *v q))) +\n   sqrt\n    (discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n      (q \\<bullet> (M *v q)))) /\n  (2 * (p \\<bullet> (M *v p)))\n  S_intersection_coeff2 p q =\n  (- (2 * (p \\<bullet> (M *v q))) -\n   sqrt\n    (discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n      (q \\<bullet> (M *v q)))) /\n  (2 * (p \\<bullet> (M *v p)))\n\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "from assms"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  proj2_abs p \\<in> hyp2", "have \"quarter_discrim p q > 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  proj2_abs p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim p q", "by (rule quarter_discrim_positive)"], ["proof (state)\nthis:\n  0 < quarter_discrim p q\n\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "with qd"], ["proof (chain)\npicking this:\n  discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n   (q \\<bullet> (M *v q)) =\n  4 * quarter_discrim p q\n  0 < quarter_discrim p q", "have \"discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q))) (q \\<bullet> (M *v q)) > 0\""], ["proof (prove)\nusing this:\n  discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n   (q \\<bullet> (M *v q)) =\n  4 * quarter_discrim p q\n  0 < quarter_discrim p q\n\ngoal (1 subgoal):\n 1. 0 < discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n         (q \\<bullet> (M *v q))", "by simp"], ["proof (state)\nthis:\n  0 < discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n       (q \\<bullet> (M *v q))\n\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "with \\<open>?j = (-?b + sqrt (discrim ?a ?b ?c)) / (2 * ?a)\\<close>\n    and \\<open>?k = (-?b - sqrt (discrim ?a ?b ?c)) / (2 * ?a)\\<close>\n    and \\<open>?a < 0\\<close> and discriminant_nonneg [of ?a ?b ?c ?j]\n    and discriminant_nonneg [of ?a ?b ?c ?k]"], ["proof (chain)\npicking this:\n  S_intersection_coeff1 p q =\n  (- (2 * (p \\<bullet> (M *v q))) +\n   sqrt\n    (discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n      (q \\<bullet> (M *v q)))) /\n  (2 * (p \\<bullet> (M *v p)))\n  S_intersection_coeff2 p q =\n  (- (2 * (p \\<bullet> (M *v q))) -\n   sqrt\n    (discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n      (q \\<bullet> (M *v q)))) /\n  (2 * (p \\<bullet> (M *v p)))\n  p \\<bullet> (M *v p) < 0\n  \\<lbrakk>p \\<bullet> (M *v p) \\<noteq> 0;\n   0 \\<le> discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n            (q \\<bullet> (M *v q))\\<rbrakk>\n  \\<Longrightarrow> (p \\<bullet> (M *v p) *\n                     (S_intersection_coeff1 p q)\\<^sup>2 +\n                     2 * (p \\<bullet> (M *v q)) *\n                     S_intersection_coeff1 p q +\n                     q \\<bullet> (M *v q) =\n                     0) =\n                    (S_intersection_coeff1 p q =\n                     (- (2 * (p \\<bullet> (M *v q))) +\n                      sqrt\n                       (discrim (p \\<bullet> (M *v p))\n                         (2 * (p \\<bullet> (M *v q)))\n                         (q \\<bullet> (M *v q)))) /\n                     (2 * (p \\<bullet> (M *v p))) \\<or>\n                     S_intersection_coeff1 p q =\n                     (- (2 * (p \\<bullet> (M *v q))) -\n                      sqrt\n                       (discrim (p \\<bullet> (M *v p))\n                         (2 * (p \\<bullet> (M *v q)))\n                         (q \\<bullet> (M *v q)))) /\n                     (2 * (p \\<bullet> (M *v p))))\n  \\<lbrakk>p \\<bullet> (M *v p) \\<noteq> 0;\n   0 \\<le> discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n            (q \\<bullet> (M *v q))\\<rbrakk>\n  \\<Longrightarrow> (p \\<bullet> (M *v p) *\n                     (S_intersection_coeff2 p q)\\<^sup>2 +\n                     2 * (p \\<bullet> (M *v q)) *\n                     S_intersection_coeff2 p q +\n                     q \\<bullet> (M *v q) =\n                     0) =\n                    (S_intersection_coeff2 p q =\n                     (- (2 * (p \\<bullet> (M *v q))) +\n                      sqrt\n                       (discrim (p \\<bullet> (M *v p))\n                         (2 * (p \\<bullet> (M *v q)))\n                         (q \\<bullet> (M *v q)))) /\n                     (2 * (p \\<bullet> (M *v p))) \\<or>\n                     S_intersection_coeff2 p q =\n                     (- (2 * (p \\<bullet> (M *v q))) -\n                      sqrt\n                       (discrim (p \\<bullet> (M *v p))\n                         (2 * (p \\<bullet> (M *v q)))\n                         (q \\<bullet> (M *v q)))) /\n                     (2 * (p \\<bullet> (M *v p))))\n  0 < discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n       (q \\<bullet> (M *v q))", "have \"p \\<bullet> (M *v p) * ?j\\<^sup>2 + 2 * (p \\<bullet> (M *v q)) * ?j + q \\<bullet> (M *v q) = 0\"\n    and \"p \\<bullet> (M *v p) * ?k\\<^sup>2 + 2 * (p \\<bullet> (M *v q)) * ?k + q \\<bullet> (M *v q) = 0\""], ["proof (prove)\nusing this:\n  S_intersection_coeff1 p q =\n  (- (2 * (p \\<bullet> (M *v q))) +\n   sqrt\n    (discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n      (q \\<bullet> (M *v q)))) /\n  (2 * (p \\<bullet> (M *v p)))\n  S_intersection_coeff2 p q =\n  (- (2 * (p \\<bullet> (M *v q))) -\n   sqrt\n    (discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n      (q \\<bullet> (M *v q)))) /\n  (2 * (p \\<bullet> (M *v p)))\n  p \\<bullet> (M *v p) < 0\n  \\<lbrakk>p \\<bullet> (M *v p) \\<noteq> 0;\n   0 \\<le> discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n            (q \\<bullet> (M *v q))\\<rbrakk>\n  \\<Longrightarrow> (p \\<bullet> (M *v p) *\n                     (S_intersection_coeff1 p q)\\<^sup>2 +\n                     2 * (p \\<bullet> (M *v q)) *\n                     S_intersection_coeff1 p q +\n                     q \\<bullet> (M *v q) =\n                     0) =\n                    (S_intersection_coeff1 p q =\n                     (- (2 * (p \\<bullet> (M *v q))) +\n                      sqrt\n                       (discrim (p \\<bullet> (M *v p))\n                         (2 * (p \\<bullet> (M *v q)))\n                         (q \\<bullet> (M *v q)))) /\n                     (2 * (p \\<bullet> (M *v p))) \\<or>\n                     S_intersection_coeff1 p q =\n                     (- (2 * (p \\<bullet> (M *v q))) -\n                      sqrt\n                       (discrim (p \\<bullet> (M *v p))\n                         (2 * (p \\<bullet> (M *v q)))\n                         (q \\<bullet> (M *v q)))) /\n                     (2 * (p \\<bullet> (M *v p))))\n  \\<lbrakk>p \\<bullet> (M *v p) \\<noteq> 0;\n   0 \\<le> discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n            (q \\<bullet> (M *v q))\\<rbrakk>\n  \\<Longrightarrow> (p \\<bullet> (M *v p) *\n                     (S_intersection_coeff2 p q)\\<^sup>2 +\n                     2 * (p \\<bullet> (M *v q)) *\n                     S_intersection_coeff2 p q +\n                     q \\<bullet> (M *v q) =\n                     0) =\n                    (S_intersection_coeff2 p q =\n                     (- (2 * (p \\<bullet> (M *v q))) +\n                      sqrt\n                       (discrim (p \\<bullet> (M *v p))\n                         (2 * (p \\<bullet> (M *v q)))\n                         (q \\<bullet> (M *v q)))) /\n                     (2 * (p \\<bullet> (M *v p))) \\<or>\n                     S_intersection_coeff2 p q =\n                     (- (2 * (p \\<bullet> (M *v q))) -\n                      sqrt\n                       (discrim (p \\<bullet> (M *v p))\n                         (2 * (p \\<bullet> (M *v q)))\n                         (q \\<bullet> (M *v q)))) /\n                     (2 * (p \\<bullet> (M *v p))))\n  0 < discrim (p \\<bullet> (M *v p)) (2 * (p \\<bullet> (M *v q)))\n       (q \\<bullet> (M *v q))\n\ngoal (1 subgoal):\n 1. p \\<bullet> (M *v p) * (S_intersection_coeff1 p q)\\<^sup>2 +\n    2 * (p \\<bullet> (M *v q)) * S_intersection_coeff1 p q +\n    q \\<bullet> (M *v q) =\n    0 &&&\n    p \\<bullet> (M *v p) * (S_intersection_coeff2 p q)\\<^sup>2 +\n    2 * (p \\<bullet> (M *v q)) * S_intersection_coeff2 p q +\n    q \\<bullet> (M *v q) =\n    0", "by (unfold S_intersection_coeffs_defs, auto)"], ["proof (state)\nthis:\n  p \\<bullet> (M *v p) * (S_intersection_coeff1 p q)\\<^sup>2 +\n  2 * (p \\<bullet> (M *v q)) * S_intersection_coeff1 p q +\n  q \\<bullet> (M *v q) =\n  0\n  p \\<bullet> (M *v p) * (S_intersection_coeff2 p q)\\<^sup>2 +\n  2 * (p \\<bullet> (M *v q)) * S_intersection_coeff2 p q +\n  q \\<bullet> (M *v q) =\n  0\n\ngoal (2 subgoals):\n 1. S_intersection1 p q \\<in> S\n 2. S_intersection2 p q \\<in> S", "with \\<open>p \\<noteq> 0\\<close> and \\<open>q \\<noteq> 0\\<close> and \\<open>?pp \\<noteq> ?pq\\<close> and S_quadratic'"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  \\<lbrakk>?p \\<noteq> 0; ?q \\<noteq> 0;\n   proj2_abs ?p \\<noteq> proj2_abs ?q\\<rbrakk>\n  \\<Longrightarrow> (proj2_abs (?k *\\<^sub>R ?p + ?q) \\<in> S) =\n                    (?p \\<bullet> (M *v ?p) * ?k\\<^sup>2 +\n                     ?p \\<bullet> (M *v ?q) * 2 * ?k +\n                     ?q \\<bullet> (M *v ?q) =\n                     0)\n  p \\<bullet> (M *v p) * (S_intersection_coeff1 p q)\\<^sup>2 +\n  2 * (p \\<bullet> (M *v q)) * S_intersection_coeff1 p q +\n  q \\<bullet> (M *v q) =\n  0\n  p \\<bullet> (M *v p) * (S_intersection_coeff2 p q)\\<^sup>2 +\n  2 * (p \\<bullet> (M *v q)) * S_intersection_coeff2 p q +\n  q \\<bullet> (M *v q) =\n  0", "show \"S_intersection1 p q \\<in> S\" and \"S_intersection2 p q \\<in> S\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  proj2_abs p \\<noteq> proj2_abs q\n  \\<lbrakk>?p \\<noteq> 0; ?q \\<noteq> 0;\n   proj2_abs ?p \\<noteq> proj2_abs ?q\\<rbrakk>\n  \\<Longrightarrow> (proj2_abs (?k *\\<^sub>R ?p + ?q) \\<in> S) =\n                    (?p \\<bullet> (M *v ?p) * ?k\\<^sup>2 +\n                     ?p \\<bullet> (M *v ?q) * 2 * ?k +\n                     ?q \\<bullet> (M *v ?q) =\n                     0)\n  p \\<bullet> (M *v p) * (S_intersection_coeff1 p q)\\<^sup>2 +\n  2 * (p \\<bullet> (M *v q)) * S_intersection_coeff1 p q +\n  q \\<bullet> (M *v q) =\n  0\n  p \\<bullet> (M *v p) * (S_intersection_coeff2 p q)\\<^sup>2 +\n  2 * (p \\<bullet> (M *v q)) * S_intersection_coeff2 p q +\n  q \\<bullet> (M *v q) =\n  0\n\ngoal (1 subgoal):\n 1. S_intersection1 p q \\<in> S &&& S_intersection2 p q \\<in> S", "by (unfold S_intersections_defs, simp_all)"], ["proof (state)\nthis:\n  S_intersection1 p q \\<in> S\n  S_intersection2 p q \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_intersections_Col:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\"\n  shows \"proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\"\n  (is \"proj2_Col ?pp ?pq ?pr\")\n    and \"proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\"\n  (is \"proj2_Col ?pp ?pq ?ps\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q) &&&\n    proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "assume \"?pp = ?pq\""], ["proof (state)\nthis:\n  proj2_abs p = proj2_abs q\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "hence \"proj2_Col ?pp ?pq ?pr\" and \"proj2_Col ?pp ?pq ?ps\""], ["proof (prove)\nusing this:\n  proj2_abs p = proj2_abs q\n\ngoal (1 subgoal):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q) &&&\n    proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "by (simp_all add: proj2_Col_coincide)"], ["proof (state)\nthis:\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "}"], ["proof (state)\nthis:\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "moreover"], ["proof (state)\nthis:\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "{"], ["proof (state)\nthis:\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "assume \"?pp \\<noteq> ?pq\""], ["proof (state)\nthis:\n  proj2_abs p \\<noteq> proj2_abs q\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "with \\<open>p \\<noteq> 0\\<close> and \\<open>q \\<noteq> 0\\<close> and dependent_proj2_abs [of p q _ 1]"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0; ?i \\<noteq> 0 \\<or> 1 \\<noteq> 0;\n   ?i *\\<^sub>R p + 1 *\\<^sub>R q = 0\\<rbrakk>\n  \\<Longrightarrow> proj2_abs p = proj2_abs q\n  proj2_abs p \\<noteq> proj2_abs q", "have \"S_intersection1_rep p q \\<noteq> 0\" (is \"?r \\<noteq> 0\")\n      and \"S_intersection2_rep p q \\<noteq> 0\" (is \"?s \\<noteq> 0\")"], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0; ?i \\<noteq> 0 \\<or> 1 \\<noteq> 0;\n   ?i *\\<^sub>R p + 1 *\\<^sub>R q = 0\\<rbrakk>\n  \\<Longrightarrow> proj2_abs p = proj2_abs q\n  proj2_abs p \\<noteq> proj2_abs q\n\ngoal (1 subgoal):\n 1. S_intersection1_rep p q \\<noteq> 0 &&&\n    S_intersection2_rep p q \\<noteq> 0", "by (unfold S_intersection1_rep_def S_intersection2_rep_def, auto)"], ["proof (state)\nthis:\n  S_intersection1_rep p q \\<noteq> 0\n  S_intersection2_rep p q \\<noteq> 0\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "with \\<open>p \\<noteq> 0\\<close> and \\<open>q \\<noteq> 0\\<close>\n      and proj2_Col_abs [of p q ?r \"S_intersection_coeff1 p q\" 1 \"-1\"]\n      and proj2_Col_abs [of p q ?s \"S_intersection_coeff2 p q\" 1 \"-1\"]"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0; S_intersection1_rep p q \\<noteq> 0;\n   S_intersection_coeff1 p q \\<noteq> 0 \\<or>\n   1 \\<noteq> 0 \\<or> - 1 \\<noteq> 0;\n   S_intersection_coeff1 p q *\\<^sub>R p + 1 *\\<^sub>R q +\n   - 1 *\\<^sub>R S_intersection1_rep p q =\n   0\\<rbrakk>\n  \\<Longrightarrow> proj2_Col (proj2_abs p) (proj2_abs q)\n                     (proj2_abs (S_intersection1_rep p q))\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0; S_intersection2_rep p q \\<noteq> 0;\n   S_intersection_coeff2 p q \\<noteq> 0 \\<or>\n   1 \\<noteq> 0 \\<or> - 1 \\<noteq> 0;\n   S_intersection_coeff2 p q *\\<^sub>R p + 1 *\\<^sub>R q +\n   - 1 *\\<^sub>R S_intersection2_rep p q =\n   0\\<rbrakk>\n  \\<Longrightarrow> proj2_Col (proj2_abs p) (proj2_abs q)\n                     (proj2_abs (S_intersection2_rep p q))\n  S_intersection1_rep p q \\<noteq> 0\n  S_intersection2_rep p q \\<noteq> 0", "have \"proj2_Col ?pp ?pq ?pr\" and \"proj2_Col ?pp ?pq ?ps\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0; S_intersection1_rep p q \\<noteq> 0;\n   S_intersection_coeff1 p q \\<noteq> 0 \\<or>\n   1 \\<noteq> 0 \\<or> - 1 \\<noteq> 0;\n   S_intersection_coeff1 p q *\\<^sub>R p + 1 *\\<^sub>R q +\n   - 1 *\\<^sub>R S_intersection1_rep p q =\n   0\\<rbrakk>\n  \\<Longrightarrow> proj2_Col (proj2_abs p) (proj2_abs q)\n                     (proj2_abs (S_intersection1_rep p q))\n  \\<lbrakk>p \\<noteq> 0; q \\<noteq> 0; S_intersection2_rep p q \\<noteq> 0;\n   S_intersection_coeff2 p q \\<noteq> 0 \\<or>\n   1 \\<noteq> 0 \\<or> - 1 \\<noteq> 0;\n   S_intersection_coeff2 p q *\\<^sub>R p + 1 *\\<^sub>R q +\n   - 1 *\\<^sub>R S_intersection2_rep p q =\n   0\\<rbrakk>\n  \\<Longrightarrow> proj2_Col (proj2_abs p) (proj2_abs q)\n                     (proj2_abs (S_intersection2_rep p q))\n  S_intersection1_rep p q \\<noteq> 0\n  S_intersection2_rep p q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q) &&&\n    proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "by (unfold S_intersections_defs, simp_all)"], ["proof (state)\nthis:\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "}"], ["proof (state)\nthis:\n  proj2_abs p \\<noteq> proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_abs p \\<noteq> proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (2 subgoals):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n 2. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "ultimately"], ["proof (chain)\npicking this:\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n  proj2_abs p \\<noteq> proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_abs p \\<noteq> proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "show \"proj2_Col ?pp ?pq ?pr\" and \"proj2_Col ?pp ?pq ?ps\""], ["proof (prove)\nusing this:\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_abs p = proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n  proj2_abs p \\<noteq> proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_abs p \\<noteq> proj2_abs q \\<Longrightarrow>\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (1 subgoal):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q) &&&\n    proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "by fast+"], ["proof (state)\nthis:\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_intersections_incident:\n  assumes \"p \\<noteq> 0\" and \"q \\<noteq> 0\" and \"proj2_abs p \\<noteq> proj2_abs q\" (is \"?pp \\<noteq> ?pq\")\n  and \"proj2_incident (proj2_abs p) l\" and \"proj2_incident (proj2_abs q) l\"\n  shows \"proj2_incident (S_intersection1 p q) l\" (is \"proj2_incident ?pr l\")\n  and \"proj2_incident (S_intersection2 p q) l\" (is \"proj2_incident ?ps l\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (S_intersection1 p q) l &&&\n    proj2_incident (S_intersection2 p q) l", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. proj2_incident (S_intersection1 p q) l\n 2. proj2_incident (S_intersection2 p q) l", "from \\<open>p \\<noteq> 0\\<close> and \\<open>q \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  q \\<noteq> 0", "have \"proj2_Col ?pp ?pq ?pr\" and \"proj2_Col ?pp ?pq ?ps\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q) &&&\n    proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "by (rule S_intersections_Col)+"], ["proof (state)\nthis:\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (2 subgoals):\n 1. proj2_incident (S_intersection1 p q) l\n 2. proj2_incident (S_intersection2 p q) l", "with \\<open>?pp \\<noteq> ?pq\\<close> and \\<open>proj2_incident ?pp l\\<close> and \\<open>proj2_incident ?pq l\\<close>\n    and proj2_incident_iff_Col"], ["proof (chain)\npicking this:\n  proj2_abs p \\<noteq> proj2_abs q\n  proj2_incident (proj2_abs p) l\n  proj2_incident (proj2_abs q) l\n  \\<lbrakk>?p \\<noteq> ?q; proj2_incident ?p ?l;\n   proj2_incident ?q ?l\\<rbrakk>\n  \\<Longrightarrow> proj2_incident ?r ?l = proj2_Col ?p ?q ?r\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)", "show \"proj2_incident ?pr l\" and \"proj2_incident ?ps l\""], ["proof (prove)\nusing this:\n  proj2_abs p \\<noteq> proj2_abs q\n  proj2_incident (proj2_abs p) l\n  proj2_incident (proj2_abs q) l\n  \\<lbrakk>?p \\<noteq> ?q; proj2_incident ?p ?l;\n   proj2_incident ?q ?l\\<rbrakk>\n  \\<Longrightarrow> proj2_incident ?r ?l = proj2_Col ?p ?q ?r\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection1 p q)\n  proj2_Col (proj2_abs p) (proj2_abs q) (S_intersection2 p q)\n\ngoal (1 subgoal):\n 1. proj2_incident (S_intersection1 p q) l &&&\n    proj2_incident (S_intersection2 p q) l", "by fast+"], ["proof (state)\nthis:\n  proj2_incident (S_intersection1 p q) l\n  proj2_incident (S_intersection2 p q) l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma K2_line_intersect_twice:\n  assumes \"a \\<in> K2\" and \"a \\<noteq> r\"\n  shows \"\\<exists> s u. s \\<noteq> u \\<and> s \\<in> S \\<and> u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "let ?a' = \"proj2_rep a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "let ?r' = \"proj2_rep r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "from proj2_rep_non_zero"], ["proof (chain)\npicking this:\n  proj2_rep ?x \\<noteq> 0", "have \"?a' \\<noteq> 0\" and \"?r' \\<noteq> 0\""], ["proof (prove)\nusing this:\n  proj2_rep ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_rep a \\<noteq> 0 &&& proj2_rep r \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  proj2_rep a \\<noteq> 0\n  proj2_rep r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "from \\<open>?a' \\<noteq> 0\\<close> and K2_imp_M_neg and proj2_abs_rep and \\<open>a \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep a \\<noteq> 0\n  \\<lbrakk>?v \\<noteq> 0; proj2_abs ?v \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> ?v \\<bullet> (M *v ?v) < 0\n  proj2_abs (proj2_rep ?x) = ?x\n  a \\<in> hyp2", "have \"?a' \\<bullet> (M *v ?a') < 0\""], ["proof (prove)\nusing this:\n  proj2_rep a \\<noteq> 0\n  \\<lbrakk>?v \\<noteq> 0; proj2_abs ?v \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> ?v \\<bullet> (M *v ?v) < 0\n  proj2_abs (proj2_rep ?x) = ?x\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. proj2_rep a \\<bullet> (M *v proj2_rep a) < 0", "by simp"], ["proof (state)\nthis:\n  proj2_rep a \\<bullet> (M *v proj2_rep a) < 0\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "from \\<open>a \\<noteq> r\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> r", "have \"proj2_abs ?a' \\<noteq> proj2_abs ?r'\""], ["proof (prove)\nusing this:\n  a \\<noteq> r\n\ngoal (1 subgoal):\n 1. proj2_abs (proj2_rep a) \\<noteq> proj2_abs (proj2_rep r)", "by (simp add: proj2_abs_rep)"], ["proof (state)\nthis:\n  proj2_abs (proj2_rep a) \\<noteq> proj2_abs (proj2_rep r)\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "from \\<open>a \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2", "have \"proj2_abs ?a' \\<in> K2\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. proj2_abs (proj2_rep a) \\<in> hyp2", "by (simp add: proj2_abs_rep)"], ["proof (state)\nthis:\n  proj2_abs (proj2_rep a) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "with \\<open>?a' \\<noteq> 0\\<close> and \\<open>?r' \\<noteq> 0\\<close> and \\<open>proj2_abs ?a' \\<noteq> proj2_abs ?r'\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep a \\<noteq> 0\n  proj2_rep r \\<noteq> 0\n  proj2_abs (proj2_rep a) \\<noteq> proj2_abs (proj2_rep r)\n  proj2_abs (proj2_rep a) \\<in> hyp2", "have \"S_intersection1 ?a' ?r' \\<noteq> S_intersection2 ?a' ?r'\" (is \"?s \\<noteq> ?u\")"], ["proof (prove)\nusing this:\n  proj2_rep a \\<noteq> 0\n  proj2_rep r \\<noteq> 0\n  proj2_abs (proj2_rep a) \\<noteq> proj2_abs (proj2_rep r)\n  proj2_abs (proj2_rep a) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. S_intersection1 (proj2_rep a) (proj2_rep r) \\<noteq>\n    S_intersection2 (proj2_rep a) (proj2_rep r)", "by (rule S_intersections_distinct)"], ["proof (state)\nthis:\n  S_intersection1 (proj2_rep a) (proj2_rep r) \\<noteq>\n  S_intersection2 (proj2_rep a) (proj2_rep r)\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "from \\<open>?a' \\<noteq> 0\\<close> and \\<open>?r' \\<noteq> 0\\<close> and \\<open>proj2_abs ?a' \\<noteq> proj2_abs ?r'\\<close>\n    and \\<open>proj2_abs ?a' \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep a \\<noteq> 0\n  proj2_rep r \\<noteq> 0\n  proj2_abs (proj2_rep a) \\<noteq> proj2_abs (proj2_rep r)\n  proj2_abs (proj2_rep a) \\<in> hyp2", "have \"?s \\<in> S\" and \"?u \\<in> S\""], ["proof (prove)\nusing this:\n  proj2_rep a \\<noteq> 0\n  proj2_rep r \\<noteq> 0\n  proj2_abs (proj2_rep a) \\<noteq> proj2_abs (proj2_rep r)\n  proj2_abs (proj2_rep a) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. S_intersection1 (proj2_rep a) (proj2_rep r) \\<in> S &&&\n    S_intersection2 (proj2_rep a) (proj2_rep r) \\<in> S", "by (rule S_intersections_in_S)+"], ["proof (state)\nthis:\n  S_intersection1 (proj2_rep a) (proj2_rep r) \\<in> S\n  S_intersection2 (proj2_rep a) (proj2_rep r) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "from \\<open>?a' \\<noteq> 0\\<close> and \\<open>?r' \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep a \\<noteq> 0\n  proj2_rep r \\<noteq> 0", "have \"proj2_Col (proj2_abs ?a') (proj2_abs ?r') ?s\"\n    and \"proj2_Col (proj2_abs ?a') (proj2_abs ?r') ?u\""], ["proof (prove)\nusing this:\n  proj2_rep a \\<noteq> 0\n  proj2_rep r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_Col (proj2_abs (proj2_rep a)) (proj2_abs (proj2_rep r))\n     (S_intersection1 (proj2_rep a) (proj2_rep r)) &&&\n    proj2_Col (proj2_abs (proj2_rep a)) (proj2_abs (proj2_rep r))\n     (S_intersection2 (proj2_rep a) (proj2_rep r))", "by (rule S_intersections_Col)+"], ["proof (state)\nthis:\n  proj2_Col (proj2_abs (proj2_rep a)) (proj2_abs (proj2_rep r))\n   (S_intersection1 (proj2_rep a) (proj2_rep r))\n  proj2_Col (proj2_abs (proj2_rep a)) (proj2_abs (proj2_rep r))\n   (S_intersection2 (proj2_rep a) (proj2_rep r))\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "hence \"proj2_Col a r ?s\" and \"proj2_Col a r ?u\""], ["proof (prove)\nusing this:\n  proj2_Col (proj2_abs (proj2_rep a)) (proj2_abs (proj2_rep r))\n   (S_intersection1 (proj2_rep a) (proj2_rep r))\n  proj2_Col (proj2_abs (proj2_rep a)) (proj2_abs (proj2_rep r))\n   (S_intersection2 (proj2_rep a) (proj2_rep r))\n\ngoal (1 subgoal):\n 1. proj2_Col a r (S_intersection1 (proj2_rep a) (proj2_rep r)) &&&\n    proj2_Col a r (S_intersection2 (proj2_rep a) (proj2_rep r))", "by (simp_all add: proj2_abs_rep)"], ["proof (state)\nthis:\n  proj2_Col a r (S_intersection1 (proj2_rep a) (proj2_rep r))\n  proj2_Col a r (S_intersection2 (proj2_rep a) (proj2_rep r))\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "with \\<open>?s \\<noteq> ?u\\<close> and \\<open>?s \\<in> S\\<close> and \\<open>?u \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  S_intersection1 (proj2_rep a) (proj2_rep r) \\<noteq>\n  S_intersection2 (proj2_rep a) (proj2_rep r)\n  S_intersection1 (proj2_rep a) (proj2_rep r) \\<in> S\n  S_intersection2 (proj2_rep a) (proj2_rep r) \\<in> S\n  proj2_Col a r (S_intersection1 (proj2_rep a) (proj2_rep r))\n  proj2_Col a r (S_intersection2 (proj2_rep a) (proj2_rep r))", "show \"\\<exists> s u. s \\<noteq> u \\<and> s \\<in> S \\<and> u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u\""], ["proof (prove)\nusing this:\n  S_intersection1 (proj2_rep a) (proj2_rep r) \\<noteq>\n  S_intersection2 (proj2_rep a) (proj2_rep r)\n  S_intersection1 (proj2_rep a) (proj2_rep r) \\<in> S\n  S_intersection2 (proj2_rep a) (proj2_rep r) \\<in> S\n  proj2_Col a r (S_intersection1 (proj2_rep a) (proj2_rep r))\n  proj2_Col a r (S_intersection2 (proj2_rep a) (proj2_rep r))\n\ngoal (1 subgoal):\n 1. \\<exists>s u.\n       s \\<noteq> u \\<and>\n       s \\<in> S \\<and>\n       u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u", "by auto"], ["proof (state)\nthis:\n  \\<exists>s u.\n     s \\<noteq> u \\<and>\n     s \\<in> S \\<and>\n     u \\<in> S \\<and> proj2_Col a r s \\<and> proj2_Col a r u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma point_in_S_polar_is_tangent:\n  assumes \"p \\<in> S\" and \"q \\<in> S\" and \"proj2_incident q (polar p)\"\n  shows \"q = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. q = p", "from \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S", "have \"proj2_incident p (polar p)\""], ["proof (prove)\nusing this:\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_incident p (polar p)", "by (subst incident_own_polar_in_S)"], ["proof (state)\nthis:\n  proj2_incident p (polar p)\n\ngoal (1 subgoal):\n 1. q = p", "from line_incident_point_not_in_S"], ["proof (chain)\npicking this:\n  \\<exists>p. p \\<notin> S \\<and> proj2_incident p ?l", "obtain r where \"r \\<notin> S\" and \"proj2_incident r (polar p)\""], ["proof (prove)\nusing this:\n  \\<exists>p. p \\<notin> S \\<and> proj2_incident p ?l\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<notin> S; proj2_incident r (polar p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r \\<notin> S\n  proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. q = p", "let ?u = \"proj2_rep r\""], ["proof (state)\ngoal (1 subgoal):\n 1. q = p", "let ?v = \"proj2_rep p\""], ["proof (state)\ngoal (1 subgoal):\n 1. q = p", "from \\<open>r \\<notin> S\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  r \\<notin> S\n  p \\<in> S\n  q \\<in> S", "have \"r \\<noteq> p\" and \"q \\<noteq> r\""], ["proof (prove)\nusing this:\n  r \\<notin> S\n  p \\<in> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. r \\<noteq> p &&& q \\<noteq> r", "by auto"], ["proof (state)\nthis:\n  r \\<noteq> p\n  q \\<noteq> r\n\ngoal (1 subgoal):\n 1. q = p", "with \\<open>proj2_incident p (polar p)\\<close>\n    and \\<open>proj2_incident q (polar p)\\<close>\n    and \\<open>proj2_incident r (polar p)\\<close>\n    and proj2_incident_iff [of r p \"polar p\" q]"], ["proof (chain)\npicking this:\n  proj2_incident p (polar p)\n  proj2_incident q (polar p)\n  proj2_incident r (polar p)\n  \\<lbrakk>r \\<noteq> p; proj2_incident r (polar p);\n   proj2_incident p (polar p)\\<rbrakk>\n  \\<Longrightarrow> proj2_incident q (polar p) =\n                    (q = r \\<or>\n                     (\\<exists>k.\n                         q =\n                         proj2_abs (k *\\<^sub>R proj2_rep r + proj2_rep p)))\n  r \\<noteq> p\n  q \\<noteq> r", "obtain k where \"q = proj2_abs (k *\\<^sub>R ?u + ?v)\""], ["proof (prove)\nusing this:\n  proj2_incident p (polar p)\n  proj2_incident q (polar p)\n  proj2_incident r (polar p)\n  \\<lbrakk>r \\<noteq> p; proj2_incident r (polar p);\n   proj2_incident p (polar p)\\<rbrakk>\n  \\<Longrightarrow> proj2_incident q (polar p) =\n                    (q = r \\<or>\n                     (\\<exists>k.\n                         q =\n                         proj2_abs (k *\\<^sub>R proj2_rep r + proj2_rep p)))\n  r \\<noteq> p\n  q \\<noteq> r\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        q =\n        proj2_abs (k *\\<^sub>R proj2_rep r + proj2_rep p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q = proj2_abs (k *\\<^sub>R proj2_rep r + proj2_rep p)\n\ngoal (1 subgoal):\n 1. q = p", "with \\<open>r \\<noteq> p\\<close> and \\<open>q \\<in> S\\<close> and S_quadratic"], ["proof (chain)\npicking this:\n  r \\<noteq> p\n  q \\<in> S\n  \\<lbrakk>?p \\<noteq> ?q;\n   ?r = proj2_abs (?k *\\<^sub>R proj2_rep ?p + proj2_rep ?q)\\<rbrakk>\n  \\<Longrightarrow> (?r \\<in> S) =\n                    (proj2_rep ?p \\<bullet> (M *v proj2_rep ?p) *\n                     ?k\\<^sup>2 +\n                     proj2_rep ?p \\<bullet> (M *v proj2_rep ?q) * 2 * ?k +\n                     proj2_rep ?q \\<bullet> (M *v proj2_rep ?q) =\n                     0)\n  q = proj2_abs (k *\\<^sub>R proj2_rep r + proj2_rep p)", "have \"?u \\<bullet> (M *v ?u) * k\\<^sup>2 + ?u \\<bullet> (M *v ?v) * 2 * k + ?v \\<bullet> (M *v ?v) = 0\""], ["proof (prove)\nusing this:\n  r \\<noteq> p\n  q \\<in> S\n  \\<lbrakk>?p \\<noteq> ?q;\n   ?r = proj2_abs (?k *\\<^sub>R proj2_rep ?p + proj2_rep ?q)\\<rbrakk>\n  \\<Longrightarrow> (?r \\<in> S) =\n                    (proj2_rep ?p \\<bullet> (M *v proj2_rep ?p) *\n                     ?k\\<^sup>2 +\n                     proj2_rep ?p \\<bullet> (M *v proj2_rep ?q) * 2 * ?k +\n                     proj2_rep ?q \\<bullet> (M *v proj2_rep ?q) =\n                     0)\n  q = proj2_abs (k *\\<^sub>R proj2_rep r + proj2_rep p)\n\ngoal (1 subgoal):\n 1. proj2_rep r \\<bullet> (M *v proj2_rep r) * k\\<^sup>2 +\n    proj2_rep r \\<bullet> (M *v proj2_rep p) * 2 * k +\n    proj2_rep p \\<bullet> (M *v proj2_rep p) =\n    0", "by simp"], ["proof (state)\nthis:\n  proj2_rep r \\<bullet> (M *v proj2_rep r) * k\\<^sup>2 +\n  proj2_rep r \\<bullet> (M *v proj2_rep p) * 2 * k +\n  proj2_rep p \\<bullet> (M *v proj2_rep p) =\n  0\n\ngoal (1 subgoal):\n 1. q = p", "moreover"], ["proof (state)\nthis:\n  proj2_rep r \\<bullet> (M *v proj2_rep r) * k\\<^sup>2 +\n  proj2_rep r \\<bullet> (M *v proj2_rep p) * 2 * k +\n  proj2_rep p \\<bullet> (M *v proj2_rep p) =\n  0\n\ngoal (1 subgoal):\n 1. q = p", "from \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S", "have \"?v \\<bullet> (M *v ?v) = 0\""], ["proof (prove)\nusing this:\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_rep p \\<bullet> (M *v proj2_rep p) = 0", "by (unfold S_alt_def)"], ["proof (state)\nthis:\n  proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\n\ngoal (1 subgoal):\n 1. q = p", "moreover"], ["proof (state)\nthis:\n  proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\n\ngoal (1 subgoal):\n 1. q = p", "from \\<open>proj2_incident r (polar p)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident r (polar p)", "have \"?u \\<bullet> (M *v ?v) = 0\""], ["proof (prove)\nusing this:\n  proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. proj2_rep r \\<bullet> (M *v proj2_rep p) = 0", "by (unfold incident_polar)"], ["proof (state)\nthis:\n  proj2_rep r \\<bullet> (M *v proj2_rep p) = 0\n\ngoal (1 subgoal):\n 1. q = p", "moreover"], ["proof (state)\nthis:\n  proj2_rep r \\<bullet> (M *v proj2_rep p) = 0\n\ngoal (1 subgoal):\n 1. q = p", "from \\<open>r \\<notin> S\\<close>"], ["proof (chain)\npicking this:\n  r \\<notin> S", "have \"?u \\<bullet> (M *v ?u) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  r \\<notin> S\n\ngoal (1 subgoal):\n 1. proj2_rep r \\<bullet> (M *v proj2_rep r) \\<noteq> 0", "by (unfold S_alt_def)"], ["proof (state)\nthis:\n  proj2_rep r \\<bullet> (M *v proj2_rep r) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q = p", "ultimately"], ["proof (chain)\npicking this:\n  proj2_rep r \\<bullet> (M *v proj2_rep r) * k\\<^sup>2 +\n  proj2_rep r \\<bullet> (M *v proj2_rep p) * 2 * k +\n  proj2_rep p \\<bullet> (M *v proj2_rep p) =\n  0\n  proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\n  proj2_rep r \\<bullet> (M *v proj2_rep p) = 0\n  proj2_rep r \\<bullet> (M *v proj2_rep r) \\<noteq> 0", "have \"k = 0\""], ["proof (prove)\nusing this:\n  proj2_rep r \\<bullet> (M *v proj2_rep r) * k\\<^sup>2 +\n  proj2_rep r \\<bullet> (M *v proj2_rep p) * 2 * k +\n  proj2_rep p \\<bullet> (M *v proj2_rep p) =\n  0\n  proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\n  proj2_rep r \\<bullet> (M *v proj2_rep p) = 0\n  proj2_rep r \\<bullet> (M *v proj2_rep r) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k = 0", "by simp"], ["proof (state)\nthis:\n  k = 0\n\ngoal (1 subgoal):\n 1. q = p", "with \\<open>q = proj2_abs (k *\\<^sub>R ?u + ?v)\\<close>"], ["proof (chain)\npicking this:\n  q = proj2_abs (k *\\<^sub>R proj2_rep r + proj2_rep p)\n  k = 0", "show \"q = p\""], ["proof (prove)\nusing this:\n  q = proj2_abs (k *\\<^sub>R proj2_rep r + proj2_rep p)\n  k = 0\n\ngoal (1 subgoal):\n 1. q = p", "by (simp add: proj2_abs_rep)"], ["proof (state)\nthis:\n  q = p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_through_K2_intersect_S_twice:\n  assumes \"p \\<in> K2\" and \"proj2_incident p l\"\n  shows \"\\<exists> q r. q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "from proj2_another_point_on_line"], ["proof (chain)\npicking this:\n  \\<exists>q. q \\<noteq> ?p \\<and> proj2_incident q ?l", "obtain s where \"s \\<noteq> p\" and \"proj2_incident s l\""], ["proof (prove)\nusing this:\n  \\<exists>q. q \\<noteq> ?p \\<and> proj2_incident q ?l\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<noteq> p; proj2_incident s l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> p\n  proj2_incident s l\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "from \\<open>p \\<in> K2\\<close> and \\<open>s \\<noteq> p\\<close> and K2_line_intersect_twice [of p s]"], ["proof (chain)\npicking this:\n  p \\<in> hyp2\n  s \\<noteq> p\n  \\<lbrakk>p \\<in> hyp2; p \\<noteq> s\\<rbrakk>\n  \\<Longrightarrow> \\<exists>sa u.\n                       sa \\<noteq> u \\<and>\n                       sa \\<in> S \\<and>\n                       u \\<in> S \\<and>\n                       proj2_Col p s sa \\<and> proj2_Col p s u", "obtain q and r where \"q \\<noteq> r\" and \"q \\<in> S\" and \"r \\<in> S\"\n    and \"proj2_Col p s q\" and \"proj2_Col p s r\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2\n  s \\<noteq> p\n  \\<lbrakk>p \\<in> hyp2; p \\<noteq> s\\<rbrakk>\n  \\<Longrightarrow> \\<exists>sa u.\n                       sa \\<noteq> u \\<and>\n                       sa \\<in> S \\<and>\n                       u \\<in> S \\<and>\n                       proj2_Col p s sa \\<and> proj2_Col p s u\n\ngoal (1 subgoal):\n 1. (\\<And>q r.\n        \\<lbrakk>q \\<noteq> r; q \\<in> S; r \\<in> S; proj2_Col p s q;\n         proj2_Col p s r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_Col p s q\n  proj2_Col p s r\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "with \\<open>s \\<noteq> p\\<close> and \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident s l\\<close>\n    and proj2_incident_iff_Col [of p s]"], ["proof (chain)\npicking this:\n  s \\<noteq> p\n  proj2_incident p l\n  proj2_incident s l\n  \\<lbrakk>p \\<noteq> s; proj2_incident p ?l; proj2_incident s ?l\\<rbrakk>\n  \\<Longrightarrow> proj2_incident ?r ?l = proj2_Col p s ?r\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_Col p s q\n  proj2_Col p s r", "have \"proj2_incident q l\" and \"proj2_incident r l\""], ["proof (prove)\nusing this:\n  s \\<noteq> p\n  proj2_incident p l\n  proj2_incident s l\n  \\<lbrakk>p \\<noteq> s; proj2_incident p ?l; proj2_incident s ?l\\<rbrakk>\n  \\<Longrightarrow> proj2_incident ?r ?l = proj2_Col p s ?r\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_Col p s q\n  proj2_Col p s r\n\ngoal (1 subgoal):\n 1. proj2_incident q l &&& proj2_incident r l", "by fast+"], ["proof (state)\nthis:\n  proj2_incident q l\n  proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "with \\<open>q \\<noteq> r\\<close> and \\<open>q \\<in> S\\<close> and \\<open>r \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_incident q l\n  proj2_incident r l", "show \"\\<exists> q r. q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\""], ["proof (prove)\nusing this:\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_incident q l\n  proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "by auto"], ["proof (state)\nthis:\n  \\<exists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_through_K2_intersect_S_again:\n  assumes \"p \\<in> K2\" and \"proj2_incident p l\"\n  shows \"\\<exists> r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "from \\<open>p \\<in> K2\\<close> and \\<open>proj2_incident p l\\<close>\n    and line_through_K2_intersect_S_twice [of p l]"], ["proof (chain)\npicking this:\n  p \\<in> hyp2\n  proj2_incident p l\n  \\<lbrakk>p \\<in> hyp2; proj2_incident p l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q l \\<and> proj2_incident r l", "obtain s and t where \"s \\<noteq> t\" and \"s \\<in> S\" and \"t \\<in> S\"\n    and \"proj2_incident s l\" and \"proj2_incident t l\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2\n  proj2_incident p l\n  \\<lbrakk>p \\<in> hyp2; proj2_incident p l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q l \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        \\<lbrakk>s \\<noteq> t; s \\<in> S; t \\<in> S; proj2_incident s l;\n         proj2_incident t l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> t\n  s \\<in> S\n  t \\<in> S\n  proj2_incident s l\n  proj2_incident t l\n\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "show \"\\<exists> r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "assume \"t = q\""], ["proof (state)\nthis:\n  t = q\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "with \\<open>s \\<noteq> t\\<close> and \\<open>s \\<in> S\\<close> and \\<open>proj2_incident s l\\<close>"], ["proof (chain)\npicking this:\n  s \\<noteq> t\n  s \\<in> S\n  proj2_incident s l\n  t = q", "have \"s \\<noteq> q \\<and> s \\<in> S \\<and> proj2_incident s l\""], ["proof (prove)\nusing this:\n  s \\<noteq> t\n  s \\<in> S\n  proj2_incident s l\n  t = q\n\ngoal (1 subgoal):\n 1. s \\<noteq> q \\<and> s \\<in> S \\<and> proj2_incident s l", "by simp"], ["proof (state)\nthis:\n  s \\<noteq> q \\<and> s \\<in> S \\<and> proj2_incident s l\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "thus \"\\<exists> r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\""], ["proof (prove)\nusing this:\n  s \\<noteq> q \\<and> s \\<in> S \\<and> proj2_incident s l\n\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", ".."], ["proof (state)\nthis:\n  \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. t \\<noteq> q \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> q \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "assume \"t \\<noteq> q\""], ["proof (state)\nthis:\n  t \\<noteq> q\n\ngoal (1 subgoal):\n 1. t \\<noteq> q \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "with \\<open>t \\<in> S\\<close> and \\<open>proj2_incident t l\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> S\n  proj2_incident t l\n  t \\<noteq> q", "have \"t \\<noteq> q \\<and> t \\<in> S \\<and> proj2_incident t l\""], ["proof (prove)\nusing this:\n  t \\<in> S\n  proj2_incident t l\n  t \\<noteq> q\n\ngoal (1 subgoal):\n 1. t \\<noteq> q \\<and> t \\<in> S \\<and> proj2_incident t l", "by simp"], ["proof (state)\nthis:\n  t \\<noteq> q \\<and> t \\<in> S \\<and> proj2_incident t l\n\ngoal (1 subgoal):\n 1. t \\<noteq> q \\<Longrightarrow>\n    \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", "thus \"\\<exists> r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\""], ["proof (prove)\nusing this:\n  t \\<noteq> q \\<and> t \\<in> S \\<and> proj2_incident t l\n\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l", ".."], ["proof (state)\nthis:\n  \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>r. r \\<noteq> q \\<and> r \\<in> S \\<and> proj2_incident r l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_through_K2_intersect_S:\n  assumes \"p \\<in> K2\" and \"proj2_incident p l\"\n  shows \"\\<exists> r. r \\<in> S \\<and> proj2_incident r l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<in> S \\<and> proj2_incident r l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<in> S \\<and> proj2_incident r l", "from assms"], ["proof (chain)\npicking this:\n  p \\<in> hyp2\n  proj2_incident p l", "have \"\\<exists> r. r \\<noteq> p \\<and> r \\<in> S \\<and> proj2_incident r l\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2\n  proj2_incident p l\n\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<noteq> p \\<and> r \\<in> S \\<and> proj2_incident r l", "by (rule line_through_K2_intersect_S_again)"], ["proof (state)\nthis:\n  \\<exists>r. r \\<noteq> p \\<and> r \\<in> S \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<in> S \\<and> proj2_incident r l", "thus \"\\<exists> r. r \\<in> S \\<and> proj2_incident r l\""], ["proof (prove)\nusing this:\n  \\<exists>r. r \\<noteq> p \\<and> r \\<in> S \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<in> S \\<and> proj2_incident r l", "by auto"], ["proof (state)\nthis:\n  \\<exists>r. r \\<in> S \\<and> proj2_incident r l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_intersect_S_at_most_twice:\n  \"\\<exists> p q. \\<forall> r\\<in>S. proj2_incident r l \\<longrightarrow> r = p \\<or> r = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "from line_incident_point_not_in_S"], ["proof (chain)\npicking this:\n  \\<exists>p. p \\<notin> S \\<and> proj2_incident p ?l", "obtain s where \"s \\<notin> S\" and \"proj2_incident s l\""], ["proof (prove)\nusing this:\n  \\<exists>p. p \\<notin> S \\<and> proj2_incident p ?l\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<notin> S; proj2_incident s l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> S\n  proj2_incident s l\n\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?v = \"proj2_rep s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "from proj2_another_point_on_line"], ["proof (chain)\npicking this:\n  \\<exists>q. q \\<noteq> ?p \\<and> proj2_incident q ?l", "obtain t where \"t \\<noteq> s\" and \"proj2_incident t l\""], ["proof (prove)\nusing this:\n  \\<exists>q. q \\<noteq> ?p \\<and> proj2_incident q ?l\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<noteq> s; proj2_incident t l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<noteq> s\n  proj2_incident t l\n\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?w = \"proj2_rep t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "have \"?v \\<noteq> 0\" and \"?w \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_rep s \\<noteq> 0 &&& proj2_rep t \\<noteq> 0", "by (rule proj2_rep_non_zero)+"], ["proof (state)\nthis:\n  proj2_rep s \\<noteq> 0\n  proj2_rep t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?a = \"?v \\<bullet> (M *v ?v)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?b = \"2 * (?v \\<bullet> (M *v ?w))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?c = \"?w \\<bullet> (M *v ?w)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "from \\<open>s \\<notin> S\\<close>"], ["proof (chain)\npicking this:\n  s \\<notin> S", "have \"?a \\<noteq> 0\""], ["proof (prove)\nusing this:\n  s \\<notin> S\n\ngoal (1 subgoal):\n 1. proj2_rep s \\<bullet> (M *v proj2_rep s) \\<noteq> 0", "unfolding S_def and conic_sgn_def"], ["proof (prove)\nusing this:\n  s \\<notin> {p. sgn (proj2_rep p \\<bullet> (M *v proj2_rep p)) = 0}\n\ngoal (1 subgoal):\n 1. proj2_rep s \\<bullet> (M *v proj2_rep s) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  proj2_rep s \\<bullet> (M *v proj2_rep s) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?j = \"(-?b + sqrt (discrim ?a ?b ?c)) / (2 * ?a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?k = \"(-?b - sqrt (discrim ?a ?b ?c)) / (2 * ?a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?p = \"proj2_abs (?j *\\<^sub>R ?v + ?w)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "let ?q = \"proj2_abs (?k *\\<^sub>R ?v + ?w)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "have \"\\<forall> r\\<in>S. proj2_incident r l \\<longrightarrow> r = ?p \\<or> r = ?q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>S.\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "assume \"r \\<in> S\""], ["proof (state)\nthis:\n  r \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "with \\<open>s \\<notin> S\\<close>"], ["proof (chain)\npicking this:\n  s \\<notin> S\n  r \\<in> S", "have \"r \\<noteq> s\""], ["proof (prove)\nusing this:\n  s \\<notin> S\n  r \\<in> S\n\ngoal (1 subgoal):\n 1. r \\<noteq> s", "by auto"], ["proof (state)\nthis:\n  r \\<noteq> s\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "{"], ["proof (state)\nthis:\n  r \\<noteq> s\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "assume \"proj2_incident r l\""], ["proof (state)\nthis:\n  proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "with \\<open>t \\<noteq> s\\<close> and \\<open>r \\<noteq> s\\<close> and \\<open>proj2_incident s l\\<close> and \\<open>proj2_incident t l\\<close>\n        and proj2_incident_iff [of s t l r]"], ["proof (chain)\npicking this:\n  t \\<noteq> s\n  r \\<noteq> s\n  proj2_incident s l\n  proj2_incident t l\n  \\<lbrakk>s \\<noteq> t; proj2_incident s l; proj2_incident t l\\<rbrakk>\n  \\<Longrightarrow> proj2_incident r l =\n                    (r = s \\<or>\n                     (\\<exists>k.\n                         r =\n                         proj2_abs (k *\\<^sub>R proj2_rep s + proj2_rep t)))\n  proj2_incident r l", "obtain i where \"r = proj2_abs (i *\\<^sub>R ?v + ?w)\""], ["proof (prove)\nusing this:\n  t \\<noteq> s\n  r \\<noteq> s\n  proj2_incident s l\n  proj2_incident t l\n  \\<lbrakk>s \\<noteq> t; proj2_incident s l; proj2_incident t l\\<rbrakk>\n  \\<Longrightarrow> proj2_incident r l =\n                    (r = s \\<or>\n                     (\\<exists>k.\n                         r =\n                         proj2_abs (k *\\<^sub>R proj2_rep s + proj2_rep t)))\n  proj2_incident r l\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        r =\n        proj2_abs (i *\\<^sub>R proj2_rep s + proj2_rep t) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = proj2_abs (i *\\<^sub>R proj2_rep s + proj2_rep t)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "with \\<open>r \\<in> S\\<close> and \\<open>t \\<noteq> s\\<close> and S_quadratic"], ["proof (chain)\npicking this:\n  r \\<in> S\n  t \\<noteq> s\n  \\<lbrakk>?p \\<noteq> ?q;\n   ?r = proj2_abs (?k *\\<^sub>R proj2_rep ?p + proj2_rep ?q)\\<rbrakk>\n  \\<Longrightarrow> (?r \\<in> S) =\n                    (proj2_rep ?p \\<bullet> (M *v proj2_rep ?p) *\n                     ?k\\<^sup>2 +\n                     proj2_rep ?p \\<bullet> (M *v proj2_rep ?q) * 2 * ?k +\n                     proj2_rep ?q \\<bullet> (M *v proj2_rep ?q) =\n                     0)\n  r = proj2_abs (i *\\<^sub>R proj2_rep s + proj2_rep t)", "have \"?a * i\\<^sup>2 + ?b * i + ?c = 0\""], ["proof (prove)\nusing this:\n  r \\<in> S\n  t \\<noteq> s\n  \\<lbrakk>?p \\<noteq> ?q;\n   ?r = proj2_abs (?k *\\<^sub>R proj2_rep ?p + proj2_rep ?q)\\<rbrakk>\n  \\<Longrightarrow> (?r \\<in> S) =\n                    (proj2_rep ?p \\<bullet> (M *v proj2_rep ?p) *\n                     ?k\\<^sup>2 +\n                     proj2_rep ?p \\<bullet> (M *v proj2_rep ?q) * 2 * ?k +\n                     proj2_rep ?q \\<bullet> (M *v proj2_rep ?q) =\n                     0)\n  r = proj2_abs (i *\\<^sub>R proj2_rep s + proj2_rep t)\n\ngoal (1 subgoal):\n 1. proj2_rep s \\<bullet> (M *v proj2_rep s) * i\\<^sup>2 +\n    2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)) * i +\n    proj2_rep t \\<bullet> (M *v proj2_rep t) =\n    0", "by simp"], ["proof (state)\nthis:\n  proj2_rep s \\<bullet> (M *v proj2_rep s) * i\\<^sup>2 +\n  2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)) * i +\n  proj2_rep t \\<bullet> (M *v proj2_rep t) =\n  0\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "with \\<open>?a \\<noteq> 0\\<close> and discriminant_iff"], ["proof (chain)\npicking this:\n  proj2_rep s \\<bullet> (M *v proj2_rep s) \\<noteq> 0\n  ?a \\<noteq> 0 \\<Longrightarrow>\n  (?a * ?x\\<^sup>2 + ?b * ?x + ?c = 0) =\n  (0 \\<le> discrim ?a ?b ?c \\<and>\n   (?x = (- ?b + sqrt (discrim ?a ?b ?c)) / (2 * ?a) \\<or>\n    ?x = (- ?b - sqrt (discrim ?a ?b ?c)) / (2 * ?a)))\n  proj2_rep s \\<bullet> (M *v proj2_rep s) * i\\<^sup>2 +\n  2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)) * i +\n  proj2_rep t \\<bullet> (M *v proj2_rep t) =\n  0", "have \"i = ?j \\<or> i = ?k\""], ["proof (prove)\nusing this:\n  proj2_rep s \\<bullet> (M *v proj2_rep s) \\<noteq> 0\n  ?a \\<noteq> 0 \\<Longrightarrow>\n  (?a * ?x\\<^sup>2 + ?b * ?x + ?c = 0) =\n  (0 \\<le> discrim ?a ?b ?c \\<and>\n   (?x = (- ?b + sqrt (discrim ?a ?b ?c)) / (2 * ?a) \\<or>\n    ?x = (- ?b - sqrt (discrim ?a ?b ?c)) / (2 * ?a)))\n  proj2_rep s \\<bullet> (M *v proj2_rep s) * i\\<^sup>2 +\n  2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)) * i +\n  proj2_rep t \\<bullet> (M *v proj2_rep t) =\n  0\n\ngoal (1 subgoal):\n 1. i =\n    (- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n     sqrt\n      (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n        (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n        (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n    (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s))) \\<or>\n    i =\n    (- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n     sqrt\n      (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n        (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n        (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n    (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))", "by simp"], ["proof (state)\nthis:\n  i =\n  (- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n   sqrt\n    (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n      (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n      (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n  (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s))) \\<or>\n  i =\n  (- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n   sqrt\n    (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n      (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n      (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n  (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "with \\<open>r = proj2_abs (i *\\<^sub>R ?v + ?w)\\<close>"], ["proof (chain)\npicking this:\n  r = proj2_abs (i *\\<^sub>R proj2_rep s + proj2_rep t)\n  i =\n  (- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n   sqrt\n    (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n      (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n      (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n  (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s))) \\<or>\n  i =\n  (- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n   sqrt\n    (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n      (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n      (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n  (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))", "have \"r = ?p \\<or> r = ?q\""], ["proof (prove)\nusing this:\n  r = proj2_abs (i *\\<^sub>R proj2_rep s + proj2_rep t)\n  i =\n  (- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n   sqrt\n    (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n      (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n      (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n  (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s))) \\<or>\n  i =\n  (- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n   sqrt\n    (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n      (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n      (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n  (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))\n\ngoal (1 subgoal):\n 1. r =\n    proj2_abs\n     (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n        sqrt\n         (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n           (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n           (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n       (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n      proj2_rep s +\n      proj2_rep t) \\<or>\n    r =\n    proj2_abs\n     (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n        sqrt\n         (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n           (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n           (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n       (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n      proj2_rep s +\n      proj2_rep t)", "by auto"], ["proof (state)\nthis:\n  r =\n  proj2_abs\n   (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n      sqrt\n       (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n         (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n         (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n     (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n    proj2_rep s +\n    proj2_rep t) \\<or>\n  r =\n  proj2_abs\n   (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n      sqrt\n       (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n         (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n         (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n     (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n    proj2_rep s +\n    proj2_rep t)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "}"], ["proof (state)\nthis:\n  proj2_incident r l \\<Longrightarrow>\n  r =\n  proj2_abs\n   (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n      sqrt\n       (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n         (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n         (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n     (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n    proj2_rep s +\n    proj2_rep t) \\<or>\n  r =\n  proj2_abs\n   (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n      sqrt\n       (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n         (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n         (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n     (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n    proj2_rep s +\n    proj2_rep t)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> S \\<Longrightarrow>\n       proj2_incident r l \\<longrightarrow>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t) \\<or>\n       r =\n       proj2_abs\n        (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n           sqrt\n            (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n              (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n              (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n          (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n         proj2_rep s +\n         proj2_rep t)", "thus \"proj2_incident r l \\<longrightarrow> r = ?p \\<or> r = ?q\""], ["proof (prove)\nusing this:\n  proj2_incident r l \\<Longrightarrow>\n  r =\n  proj2_abs\n   (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n      sqrt\n       (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n         (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n         (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n     (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n    proj2_rep s +\n    proj2_rep t) \\<or>\n  r =\n  proj2_abs\n   (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n      sqrt\n       (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n         (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n         (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n     (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n    proj2_rep s +\n    proj2_rep t)\n\ngoal (1 subgoal):\n 1. proj2_incident r l \\<longrightarrow>\n    r =\n    proj2_abs\n     (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n        sqrt\n         (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n           (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n           (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n       (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n      proj2_rep s +\n      proj2_rep t) \\<or>\n    r =\n    proj2_abs\n     (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n        sqrt\n         (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n           (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n           (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n       (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n      proj2_rep s +\n      proj2_rep t)", ".."], ["proof (state)\nthis:\n  proj2_incident r l \\<longrightarrow>\n  r =\n  proj2_abs\n   (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n      sqrt\n       (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n         (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n         (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n     (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n    proj2_rep s +\n    proj2_rep t) \\<or>\n  r =\n  proj2_abs\n   (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n      sqrt\n       (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n         (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n         (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n     (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n    proj2_rep s +\n    proj2_rep t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>S.\n     proj2_incident r l \\<longrightarrow>\n     r =\n     proj2_abs\n      (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n         sqrt\n          (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n            (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n            (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n        (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n       proj2_rep s +\n       proj2_rep t) \\<or>\n     r =\n     proj2_abs\n      (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n         sqrt\n          (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n            (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n            (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n        (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n       proj2_rep s +\n       proj2_rep t)\n\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "thus \"\\<exists> p q. \\<forall> r\\<in>S. proj2_incident r l \\<longrightarrow> r = p \\<or> r = q\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>S.\n     proj2_incident r l \\<longrightarrow>\n     r =\n     proj2_abs\n      (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) +\n         sqrt\n          (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n            (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n            (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n        (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n       proj2_rep s +\n       proj2_rep t) \\<or>\n     r =\n     proj2_abs\n      (((- (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t))) -\n         sqrt\n          (discrim (proj2_rep s \\<bullet> (M *v proj2_rep s))\n            (2 * (proj2_rep s \\<bullet> (M *v proj2_rep t)))\n            (proj2_rep t \\<bullet> (M *v proj2_rep t)))) /\n        (2 * (proj2_rep s \\<bullet> (M *v proj2_rep s)))) *\\<^sub>R\n       proj2_rep s +\n       proj2_rep t)\n\ngoal (1 subgoal):\n 1. \\<exists>p q.\n       \\<forall>r\\<in>S.\n          proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "by auto"], ["proof (state)\nthis:\n  \\<exists>p q.\n     \\<forall>r\\<in>S.\n        proj2_incident r l \\<longrightarrow> r = p \\<or> r = q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_line_intersect_S:\n  assumes \"T \\<subseteq> S\" and \"proj2_set_Col T\"\n  shows \"card T \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card T \\<le> 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card T \\<le> 2", "from \\<open>proj2_set_Col T\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col T", "obtain l where \"\\<forall> p\\<in>T. proj2_incident p l\""], ["proof (prove)\nusing this:\n  proj2_set_Col T\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<forall>p\\<in>T. proj2_incident p l \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding proj2_set_Col_def"], ["proof (prove)\nusing this:\n  \\<exists>l. \\<forall>p\\<in>T. proj2_incident p l\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<forall>p\\<in>T. proj2_incident p l \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>p\\<in>T. proj2_incident p l\n\ngoal (1 subgoal):\n 1. card T \\<le> 2", "from line_intersect_S_at_most_twice [of l]"], ["proof (chain)\npicking this:\n  \\<exists>p q.\n     \\<forall>r\\<in>S.\n        proj2_incident r l \\<longrightarrow> r = p \\<or> r = q", "obtain b and c where \"\\<forall> a\\<in>S. proj2_incident a l \\<longrightarrow> a = b \\<or> a = c\""], ["proof (prove)\nusing this:\n  \\<exists>p q.\n     \\<forall>r\\<in>S.\n        proj2_incident r l \\<longrightarrow> r = p \\<or> r = q\n\ngoal (1 subgoal):\n 1. (\\<And>b c.\n        \\<forall>a\\<in>S.\n           proj2_incident a l \\<longrightarrow>\n           a = b \\<or> a = c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<in>S. proj2_incident a l \\<longrightarrow> a = b \\<or> a = c\n\ngoal (1 subgoal):\n 1. card T \\<le> 2", "with \\<open>\\<forall> p\\<in>T. proj2_incident p l\\<close> and \\<open>T \\<subseteq> S\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>p\\<in>T. proj2_incident p l\n  T \\<subseteq> S\n  \\<forall>a\\<in>S. proj2_incident a l \\<longrightarrow> a = b \\<or> a = c", "have \"T \\<subseteq> {b,c}\""], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>T. proj2_incident p l\n  T \\<subseteq> S\n  \\<forall>a\\<in>S. proj2_incident a l \\<longrightarrow> a = b \\<or> a = c\n\ngoal (1 subgoal):\n 1. T \\<subseteq> {b, c}", "by auto"], ["proof (state)\nthis:\n  T \\<subseteq> {b, c}\n\ngoal (1 subgoal):\n 1. card T \\<le> 2", "hence \"card T \\<le> card {b,c}\""], ["proof (prove)\nusing this:\n  T \\<subseteq> {b, c}\n\ngoal (1 subgoal):\n 1. card T \\<le> card {b, c}", "by (simp add: card_mono)"], ["proof (state)\nthis:\n  card T \\<le> card {b, c}\n\ngoal (1 subgoal):\n 1. card T \\<le> 2", "also"], ["proof (state)\nthis:\n  card T \\<le> card {b, c}\n\ngoal (1 subgoal):\n 1. card T \\<le> 2", "from card_suc_ge_insert [of b \"{c}\"]"], ["proof (chain)\npicking this:\n  card {b, c} \\<le> card {c} + 1", "have \"\\<dots> \\<le> 2\""], ["proof (prove)\nusing this:\n  card {b, c} \\<le> card {c} + 1\n\ngoal (1 subgoal):\n 1. card {b, c} \\<le> 2", "by simp"], ["proof (state)\nthis:\n  card {b, c} \\<le> 2\n\ngoal (1 subgoal):\n 1. card T \\<le> 2", "finally"], ["proof (chain)\npicking this:\n  card T \\<le> 2", "show \"card T \\<le> 2\""], ["proof (prove)\nusing this:\n  card T \\<le> 2\n\ngoal (1 subgoal):\n 1. card T \\<le> 2", "."], ["proof (state)\nthis:\n  card T \\<le> 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_S_two_intersections_only:\n  assumes \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> S\"\n  and \"proj2_incident p l\" and \"proj2_incident q l\" and \"proj2_incident r l\"\n  shows \"r = p \\<or> r = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = p \\<or> r = q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r = p \\<or> r = q", "from \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q", "have \"card {p,q} = 2\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. card {p, q} = 2", "by simp"], ["proof (state)\nthis:\n  card {p, q} = 2\n\ngoal (1 subgoal):\n 1. r = p \\<or> r = q", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>r \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S", "have \"{r,p,q} \\<subseteq> S\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n\ngoal (1 subgoal):\n 1. {r, p, q} \\<subseteq> S", "by simp_all"], ["proof (state)\nthis:\n  {r, p, q} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. r = p \\<or> r = q", "from \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close> and \\<open>proj2_incident r l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident r l", "have \"proj2_set_Col {r,p,q}\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident r l\n\ngoal (1 subgoal):\n 1. proj2_set_Col {r, p, q}", "by (unfold proj2_set_Col_def) (simp add: exI [of _ l])"], ["proof (state)\nthis:\n  proj2_set_Col {r, p, q}\n\ngoal (1 subgoal):\n 1. r = p \\<or> r = q", "with \\<open>{r,p,q} \\<subseteq> S\\<close>"], ["proof (chain)\npicking this:\n  {r, p, q} \\<subseteq> S\n  proj2_set_Col {r, p, q}", "have \"card {r,p,q} \\<le> 2\""], ["proof (prove)\nusing this:\n  {r, p, q} \\<subseteq> S\n  proj2_set_Col {r, p, q}\n\ngoal (1 subgoal):\n 1. card {r, p, q} \\<le> 2", "by (rule card_line_intersect_S)"], ["proof (state)\nthis:\n  card {r, p, q} \\<le> 2\n\ngoal (1 subgoal):\n 1. r = p \\<or> r = q", "show \"r = p \\<or> r = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = p \\<or> r = q", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (r = p \\<or> r = q) \\<Longrightarrow> False", "assume \"\\<not> (r = p \\<or> r = q)\""], ["proof (state)\nthis:\n  \\<not> (r = p \\<or> r = q)\n\ngoal (1 subgoal):\n 1. \\<not> (r = p \\<or> r = q) \\<Longrightarrow> False", "hence \"r \\<notin> {p,q}\""], ["proof (prove)\nusing this:\n  \\<not> (r = p \\<or> r = q)\n\ngoal (1 subgoal):\n 1. r \\<notin> {p, q}", "by simp"], ["proof (state)\nthis:\n  r \\<notin> {p, q}\n\ngoal (1 subgoal):\n 1. \\<not> (r = p \\<or> r = q) \\<Longrightarrow> False", "with \\<open>card {p,q} = 2\\<close> and card_insert_disjoint [of \"{p,q}\" r]"], ["proof (chain)\npicking this:\n  card {p, q} = 2\n  \\<lbrakk>finite {p, q}; r \\<notin> {p, q}\\<rbrakk>\n  \\<Longrightarrow> card {r, p, q} = Suc (card {p, q})\n  r \\<notin> {p, q}", "have \"card {r,p,q} = 3\""], ["proof (prove)\nusing this:\n  card {p, q} = 2\n  \\<lbrakk>finite {p, q}; r \\<notin> {p, q}\\<rbrakk>\n  \\<Longrightarrow> card {r, p, q} = Suc (card {p, q})\n  r \\<notin> {p, q}\n\ngoal (1 subgoal):\n 1. card {r, p, q} = 3", "by simp"], ["proof (state)\nthis:\n  card {r, p, q} = 3\n\ngoal (1 subgoal):\n 1. \\<not> (r = p \\<or> r = q) \\<Longrightarrow> False", "with \\<open>card {r,p,q} \\<le> 2\\<close>"], ["proof (chain)\npicking this:\n  card {r, p, q} \\<le> 2\n  card {r, p, q} = 3", "show False"], ["proof (prove)\nusing this:\n  card {r, p, q} \\<le> 2\n  card {r, p, q} = 3\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r = p \\<or> r = q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_through_K2_intersect_S_exactly_twice:\n  assumes \"p \\<in> K2\" and \"proj2_incident p l\"\n  shows \"\\<exists> q r. q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\n  \\<and> (\\<forall> s\\<in>S. proj2_incident s l \\<longrightarrow> s = q \\<or> s = r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q l \\<and>\n       proj2_incident r l \\<and>\n       (\\<forall>s\\<in>S.\n           proj2_incident s l \\<longrightarrow> s = q \\<or> s = r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q l \\<and>\n       proj2_incident r l \\<and>\n       (\\<forall>s\\<in>S.\n           proj2_incident s l \\<longrightarrow> s = q \\<or> s = r)", "from \\<open>p \\<in> K2\\<close> and \\<open>proj2_incident p l\\<close>\n    and line_through_K2_intersect_S_twice [of p l]"], ["proof (chain)\npicking this:\n  p \\<in> hyp2\n  proj2_incident p l\n  \\<lbrakk>p \\<in> hyp2; proj2_incident p l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q l \\<and> proj2_incident r l", "obtain q and r where \"q \\<noteq> r\" and \"q \\<in> S\" and \"r \\<in> S\"\n    and \"proj2_incident q l\" and \"proj2_incident r l\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2\n  proj2_incident p l\n  \\<lbrakk>p \\<in> hyp2; proj2_incident p l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q l \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. (\\<And>q r.\n        \\<lbrakk>q \\<noteq> r; q \\<in> S; r \\<in> S; proj2_incident q l;\n         proj2_incident r l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_incident q l\n  proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q l \\<and>\n       proj2_incident r l \\<and>\n       (\\<forall>s\\<in>S.\n           proj2_incident s l \\<longrightarrow> s = q \\<or> s = r)", "with line_S_two_intersections_only"], ["proof (chain)\npicking this:\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> S; ?q \\<in> S; ?r \\<in> S;\n   proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?r ?l\\<rbrakk>\n  \\<Longrightarrow> ?r = ?p \\<or> ?r = ?q\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_incident q l\n  proj2_incident r l", "show \"\\<exists> q r. q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\n    \\<and> (\\<forall> s\\<in>S. proj2_incident s l \\<longrightarrow> s = q \\<or> s = r)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> S; ?q \\<in> S; ?r \\<in> S;\n   proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?r ?l\\<rbrakk>\n  \\<Longrightarrow> ?r = ?p \\<or> ?r = ?q\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_incident q l\n  proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q l \\<and>\n       proj2_incident r l \\<and>\n       (\\<forall>s\\<in>S.\n           proj2_incident s l \\<longrightarrow> s = q \\<or> s = r)", "by blast"], ["proof (state)\nthis:\n  \\<exists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and>\n     proj2_incident q l \\<and>\n     proj2_incident r l \\<and>\n     (\\<forall>s\\<in>S.\n         proj2_incident s l \\<longrightarrow> s = q \\<or> s = r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tangent_not_through_K2:\n  assumes \"p \\<in> S\" and \"q \\<in> K2\"\n  shows \"\\<not> proj2_incident q (polar p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> proj2_incident q (polar p)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident q (polar p) \\<Longrightarrow> False", "assume \"proj2_incident q (polar p)\""], ["proof (state)\nthis:\n  proj2_incident q (polar p)\n\ngoal (1 subgoal):\n 1. proj2_incident q (polar p) \\<Longrightarrow> False", "with \\<open>q \\<in> K2\\<close> and line_through_K2_intersect_S_again [of q \"polar p\" p]"], ["proof (chain)\npicking this:\n  q \\<in> hyp2\n  \\<lbrakk>q \\<in> hyp2; proj2_incident q (polar p)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       r \\<noteq> p \\<and>\n                       r \\<in> S \\<and> proj2_incident r (polar p)\n  proj2_incident q (polar p)", "obtain r where \"r \\<noteq> p\" and \"r \\<in> S\" and \"proj2_incident r (polar p)\""], ["proof (prove)\nusing this:\n  q \\<in> hyp2\n  \\<lbrakk>q \\<in> hyp2; proj2_incident q (polar p)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       r \\<noteq> p \\<and>\n                       r \\<in> S \\<and> proj2_incident r (polar p)\n  proj2_incident q (polar p)\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<noteq> p; r \\<in> S;\n         proj2_incident r (polar p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r \\<noteq> p\n  r \\<in> S\n  proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. proj2_incident q (polar p) \\<Longrightarrow> False", "from \\<open>p \\<in> S\\<close> and \\<open>r \\<in> S\\<close> and \\<open>proj2_incident r (polar p)\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  r \\<in> S\n  proj2_incident r (polar p)", "have \"r = p\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  r \\<in> S\n  proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. r = p", "by (rule point_in_S_polar_is_tangent)"], ["proof (state)\nthis:\n  r = p\n\ngoal (1 subgoal):\n 1. proj2_incident q (polar p) \\<Longrightarrow> False", "with \\<open>r \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  r \\<noteq> p\n  r = p", "show False"], ["proof (prove)\nusing this:\n  r \\<noteq> p\n  r = p\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma outside_exists_line_not_intersect_S:\n  assumes \"conic_sgn p = 1\"\n  shows \"\\<exists> l. proj2_incident p l \\<and> (\\<forall> q. proj2_incident q l \\<longrightarrow> q \\<notin> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "let ?r = \"proj2_intersection (polar p) z_zero\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "have \"proj2_incident ?r (polar p)\" and \"proj2_incident ?r z_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_intersection (polar p) z_zero) (polar p) &&&\n    proj2_incident (proj2_intersection (polar p) z_zero) z_zero", "by (rule proj2_intersection_incident)+"], ["proof (state)\nthis:\n  proj2_incident (proj2_intersection (polar p) z_zero) (polar p)\n  proj2_incident (proj2_intersection (polar p) z_zero) z_zero\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "from \\<open>proj2_incident ?r z_zero\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_intersection (polar p) z_zero) z_zero", "have \"conic_sgn ?r = 1\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_intersection (polar p) z_zero) z_zero\n\ngoal (1 subgoal):\n 1. conic_sgn (proj2_intersection (polar p) z_zero) = 1", "by (rule z_zero_conic_sgn_1)"], ["proof (state)\nthis:\n  conic_sgn (proj2_intersection (polar p) z_zero) = 1\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "with \\<open>conic_sgn p = 1\\<close>"], ["proof (chain)\npicking this:\n  conic_sgn p = 1\n  conic_sgn (proj2_intersection (polar p) z_zero) = 1", "have \"proj2_rep p \\<bullet> (M *v proj2_rep p) > 0\"\n    and \"proj2_rep ?r \\<bullet> (M *v proj2_rep ?r) > 0\""], ["proof (prove)\nusing this:\n  conic_sgn p = 1\n  conic_sgn (proj2_intersection (polar p) z_zero) = 1\n\ngoal (1 subgoal):\n 1. 0 < proj2_rep p \\<bullet> (M *v proj2_rep p) &&&\n    0 < proj2_rep (proj2_intersection (polar p) z_zero) \\<bullet>\n        (M *v proj2_rep (proj2_intersection (polar p) z_zero))", "by (unfold conic_sgn_def) (simp_all add: sgn_1_pos)"], ["proof (state)\nthis:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p)\n  0 < proj2_rep (proj2_intersection (polar p) z_zero) \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "from \\<open>proj2_incident ?r (polar p)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_intersection (polar p) z_zero) (polar p)", "have \"proj2_incident p (polar ?r)\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_intersection (polar p) z_zero) (polar p)\n\ngoal (1 subgoal):\n 1. proj2_incident p (polar (proj2_intersection (polar p) z_zero))", "by (rule incident_polar_swap)"], ["proof (state)\nthis:\n  proj2_incident p (polar (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "hence \"proj2_rep p \\<bullet> (M *v proj2_rep ?r) = 0\""], ["proof (prove)\nusing this:\n  proj2_incident p (polar (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. proj2_rep p \\<bullet>\n    (M *v proj2_rep (proj2_intersection (polar p) z_zero)) =\n    0", "by (simp add: incident_polar)"], ["proof (state)\nthis:\n  proj2_rep p \\<bullet>\n  (M *v proj2_rep (proj2_intersection (polar p) z_zero)) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "have \"p \\<noteq> ?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> proj2_intersection (polar p) z_zero", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. p = proj2_intersection (polar p) z_zero \\<Longrightarrow> False", "assume \"p = ?r\""], ["proof (state)\nthis:\n  p = proj2_intersection (polar p) z_zero\n\ngoal (1 subgoal):\n 1. p = proj2_intersection (polar p) z_zero \\<Longrightarrow> False", "with \\<open>proj2_incident ?r (polar p)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_intersection (polar p) z_zero) (polar p)\n  p = proj2_intersection (polar p) z_zero", "have \"proj2_incident p (polar p)\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_intersection (polar p) z_zero) (polar p)\n  p = proj2_intersection (polar p) z_zero\n\ngoal (1 subgoal):\n 1. proj2_incident p (polar p)", "by simp"], ["proof (state)\nthis:\n  proj2_incident p (polar p)\n\ngoal (1 subgoal):\n 1. p = proj2_intersection (polar p) z_zero \\<Longrightarrow> False", "hence \"proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\""], ["proof (prove)\nusing this:\n  proj2_incident p (polar p)\n\ngoal (1 subgoal):\n 1. proj2_rep p \\<bullet> (M *v proj2_rep p) = 0", "by (simp add: incident_polar)"], ["proof (state)\nthis:\n  proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\n\ngoal (1 subgoal):\n 1. p = proj2_intersection (polar p) z_zero \\<Longrightarrow> False", "with \\<open>proj2_rep p \\<bullet> (M *v proj2_rep p) > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p)\n  proj2_rep p \\<bullet> (M *v proj2_rep p) = 0", "show False"], ["proof (prove)\nusing this:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p)\n  proj2_rep p \\<bullet> (M *v proj2_rep p) = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<noteq> proj2_intersection (polar p) z_zero\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "let ?l = \"proj2_line_through p ?r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "have \"proj2_incident p ?l\" and \"proj2_incident ?r ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident p\n     (proj2_line_through p (proj2_intersection (polar p) z_zero)) &&&\n    proj2_incident (proj2_intersection (polar p) z_zero)\n     (proj2_line_through p (proj2_intersection (polar p) z_zero))", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident p\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n  proj2_incident (proj2_intersection (polar p) z_zero)\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "have \"\\<forall> q. proj2_incident q ?l \\<longrightarrow> q \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>q.\n       proj2_incident q\n        (proj2_line_through p\n          (proj2_intersection (polar p) z_zero)) \\<longrightarrow>\n       q \\<notin> S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       proj2_incident q\n        (proj2_line_through p\n          (proj2_intersection (polar p) z_zero)) \\<longrightarrow>\n       q \\<notin> S", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       proj2_incident q\n        (proj2_line_through p\n          (proj2_intersection (polar p) z_zero)) \\<longrightarrow>\n       q \\<notin> S", "show \"proj2_incident q ?l \\<longrightarrow> q \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident q\n     (proj2_line_through p\n       (proj2_intersection (polar p) z_zero)) \\<longrightarrow>\n    q \\<notin> S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident q\n     (proj2_line_through p\n       (proj2_intersection (polar p) z_zero)) \\<Longrightarrow>\n    q \\<notin> S", "assume \"proj2_incident q ?l\""], ["proof (state)\nthis:\n  proj2_incident q\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. proj2_incident q\n     (proj2_line_through p\n       (proj2_intersection (polar p) z_zero)) \\<Longrightarrow>\n    q \\<notin> S", "with \\<open>p \\<noteq> ?r\\<close> and \\<open>proj2_incident p ?l\\<close> and \\<open>proj2_incident ?r ?l\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> proj2_intersection (polar p) z_zero\n  proj2_incident p\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n  proj2_incident (proj2_intersection (polar p) z_zero)\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n  proj2_incident q\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))", "have \"q = p \\<or> (\\<exists> k. q = proj2_abs (k *\\<^sub>R proj2_rep p + proj2_rep ?r))\""], ["proof (prove)\nusing this:\n  p \\<noteq> proj2_intersection (polar p) z_zero\n  proj2_incident p\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n  proj2_incident (proj2_intersection (polar p) z_zero)\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n  proj2_incident q\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. q = p \\<or>\n    (\\<exists>k.\n        q =\n        proj2_abs\n         (k *\\<^sub>R proj2_rep p +\n          proj2_rep (proj2_intersection (polar p) z_zero)))", "by (simp add: proj2_incident_iff [of p ?r ?l q])"], ["proof (state)\nthis:\n  q = p \\<or>\n  (\\<exists>k.\n      q =\n      proj2_abs\n       (k *\\<^sub>R proj2_rep p +\n        proj2_rep (proj2_intersection (polar p) z_zero)))\n\ngoal (1 subgoal):\n 1. proj2_incident q\n     (proj2_line_through p\n       (proj2_intersection (polar p) z_zero)) \\<Longrightarrow>\n    q \\<notin> S", "show \"q \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<notin> S", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> q \\<notin> S\n 2. \\<not> ?P \\<Longrightarrow> q \\<notin> S", "assume \"q = p\""], ["proof (state)\nthis:\n  q = p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> q \\<notin> S\n 2. \\<not> ?P \\<Longrightarrow> q \\<notin> S", "with \\<open>conic_sgn p = 1\\<close>"], ["proof (chain)\npicking this:\n  conic_sgn p = 1\n  q = p", "show \"q \\<notin> S\""], ["proof (prove)\nusing this:\n  conic_sgn p = 1\n  q = p\n\ngoal (1 subgoal):\n 1. q \\<notin> S", "by (unfold S_def) simp"], ["proof (state)\nthis:\n  q \\<notin> S\n\ngoal (1 subgoal):\n 1. q \\<noteq> p \\<Longrightarrow> q \\<notin> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> p \\<Longrightarrow> q \\<notin> S", "assume \"q \\<noteq> p\""], ["proof (state)\nthis:\n  q \\<noteq> p\n\ngoal (1 subgoal):\n 1. q \\<noteq> p \\<Longrightarrow> q \\<notin> S", "with \\<open>q = p \\<or> (\\<exists> k. q = proj2_abs (k *\\<^sub>R proj2_rep p + proj2_rep ?r))\\<close>"], ["proof (chain)\npicking this:\n  q = p \\<or>\n  (\\<exists>k.\n      q =\n      proj2_abs\n       (k *\\<^sub>R proj2_rep p +\n        proj2_rep (proj2_intersection (polar p) z_zero)))\n  q \\<noteq> p", "obtain k where \"q = proj2_abs (k *\\<^sub>R proj2_rep p + proj2_rep ?r)\""], ["proof (prove)\nusing this:\n  q = p \\<or>\n  (\\<exists>k.\n      q =\n      proj2_abs\n       (k *\\<^sub>R proj2_rep p +\n        proj2_rep (proj2_intersection (polar p) z_zero)))\n  q \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        q =\n        proj2_abs\n         (k *\\<^sub>R proj2_rep p +\n          proj2_rep (proj2_intersection (polar p) z_zero)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q =\n  proj2_abs\n   (k *\\<^sub>R proj2_rep p +\n    proj2_rep (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. q \\<noteq> p \\<Longrightarrow> q \\<notin> S", "from \\<open>proj2_rep p \\<bullet> (M *v proj2_rep p) > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p)", "have \"proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p)\n\ngoal (1 subgoal):\n 1. 0 \\<le> proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 \\<le> proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2\n\ngoal (1 subgoal):\n 1. q \\<noteq> p \\<Longrightarrow> q \\<notin> S", "with \\<open>proj2_rep p \\<bullet> (M *v proj2_rep ?r) = 0\\<close>\n          and \\<open>proj2_rep ?r \\<bullet> (M *v proj2_rep ?r) > 0\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep p \\<bullet>\n  (M *v proj2_rep (proj2_intersection (polar p) z_zero)) =\n  0\n  0 < proj2_rep (proj2_intersection (polar p) z_zero) \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero))\n  0 \\<le> proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2", "have \"proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2\n          + proj2_rep p \\<bullet> (M *v proj2_rep ?r) * 2 * k\n          + proj2_rep ?r \\<bullet> (M *v proj2_rep ?r)\n          > 0\""], ["proof (prove)\nusing this:\n  proj2_rep p \\<bullet>\n  (M *v proj2_rep (proj2_intersection (polar p) z_zero)) =\n  0\n  0 < proj2_rep (proj2_intersection (polar p) z_zero) \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero))\n  0 \\<le> proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n        proj2_rep p \\<bullet>\n        (M *v proj2_rep (proj2_intersection (polar p) z_zero)) *\n        2 *\n        k +\n        proj2_rep (proj2_intersection (polar p) z_zero) \\<bullet>\n        (M *v proj2_rep (proj2_intersection (polar p) z_zero))", "by simp"], ["proof (state)\nthis:\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n      proj2_rep p \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero)) *\n      2 *\n      k +\n      proj2_rep (proj2_intersection (polar p) z_zero) \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. q \\<noteq> p \\<Longrightarrow> q \\<notin> S", "with \\<open>p \\<noteq> ?r\\<close> and \\<open>q = proj2_abs (k *\\<^sub>R proj2_rep p + proj2_rep ?r)\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> proj2_intersection (polar p) z_zero\n  q =\n  proj2_abs\n   (k *\\<^sub>R proj2_rep p +\n    proj2_rep (proj2_intersection (polar p) z_zero))\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n      proj2_rep p \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero)) *\n      2 *\n      k +\n      proj2_rep (proj2_intersection (polar p) z_zero) \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero))", "show \"q \\<notin> S\""], ["proof (prove)\nusing this:\n  p \\<noteq> proj2_intersection (polar p) z_zero\n  q =\n  proj2_abs\n   (k *\\<^sub>R proj2_rep p +\n    proj2_rep (proj2_intersection (polar p) z_zero))\n  0 < proj2_rep p \\<bullet> (M *v proj2_rep p) * k\\<^sup>2 +\n      proj2_rep p \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero)) *\n      2 *\n      k +\n      proj2_rep (proj2_intersection (polar p) z_zero) \\<bullet>\n      (M *v proj2_rep (proj2_intersection (polar p) z_zero))\n\ngoal (1 subgoal):\n 1. q \\<notin> S", "by (simp add: S_quadratic)"], ["proof (state)\nthis:\n  q \\<notin> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  q \\<notin> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj2_incident q\n   (proj2_line_through p\n     (proj2_intersection (polar p) z_zero)) \\<longrightarrow>\n  q \\<notin> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>q.\n     proj2_incident q\n      (proj2_line_through p\n        (proj2_intersection (polar p) z_zero)) \\<longrightarrow>\n     q \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "with \\<open>proj2_incident p ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n  \\<forall>q.\n     proj2_incident q\n      (proj2_line_through p\n        (proj2_intersection (polar p) z_zero)) \\<longrightarrow>\n     q \\<notin> S", "show \"\\<exists> l. proj2_incident p l \\<and> (\\<forall> q. proj2_incident q l \\<longrightarrow> q \\<notin> S)\""], ["proof (prove)\nusing this:\n  proj2_incident p\n   (proj2_line_through p (proj2_intersection (polar p) z_zero))\n  \\<forall>q.\n     proj2_incident q\n      (proj2_line_through p\n        (proj2_intersection (polar p) z_zero)) \\<longrightarrow>\n     q \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident p l \\<and>\n       (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)", "by (simp add: exI [of _ ?l])"], ["proof (state)\nthis:\n  \\<exists>l.\n     proj2_incident p l \\<and>\n     (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lines_through_intersect_S_twice_in_K2:\n  assumes \"\\<forall> l. proj2_incident p l\n  \\<longrightarrow> (\\<exists> q r. q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l)\"\n  shows \"p \\<in> K2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> hyp2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> False", "assume \"p \\<notin> K2\""], ["proof (state)\nthis:\n  p \\<notin> hyp2\n\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> False", "hence \"conic_sgn p \\<ge> 0\""], ["proof (prove)\nusing this:\n  p \\<notin> hyp2\n\ngoal (1 subgoal):\n 1. 0 \\<le> conic_sgn p", "by (unfold K2_def) simp"], ["proof (state)\nthis:\n  0 \\<le> conic_sgn p\n\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> False", "have \"\\<not> (\\<forall> l. proj2_incident p l \\<longrightarrow> (\\<exists> q r.\n    q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "assume \"conic_sgn p = 0\""], ["proof (state)\nthis:\n  conic_sgn p = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "hence \"p \\<in> S\""], ["proof (prove)\nusing this:\n  conic_sgn p = 0\n\ngoal (1 subgoal):\n 1. p \\<in> S", "unfolding S_def"], ["proof (prove)\nusing this:\n  conic_sgn p = 0\n\ngoal (1 subgoal):\n 1. p \\<in> {p. conic_sgn p = 0}", ".."], ["proof (state)\nthis:\n  p \\<in> S\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "hence \"proj2_incident p (polar p)\""], ["proof (prove)\nusing this:\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_incident p (polar p)", "by (simp add: incident_own_polar_in_S)"], ["proof (state)\nthis:\n  proj2_incident p (polar p)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "let ?l = \"polar p\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "have \"\\<not> (\\<exists> q r.\n      q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q ?l \\<and> proj2_incident r ?l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q (polar p) \\<and> proj2_incident r (polar p)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q (polar p) \\<and>\n       proj2_incident r (polar p) \\<Longrightarrow>\n    False", "assume \"\\<exists> q r.\n        q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q ?l \\<and> proj2_incident r ?l\""], ["proof (state)\nthis:\n  \\<exists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and>\n     proj2_incident q (polar p) \\<and> proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q (polar p) \\<and>\n       proj2_incident r (polar p) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and>\n     proj2_incident q (polar p) \\<and> proj2_incident r (polar p)", "obtain q and r where \"q \\<noteq> r\" and \"q \\<in> S\" and \"r \\<in> S\"\n        and \"proj2_incident q ?l\" and \"proj2_incident r ?l\""], ["proof (prove)\nusing this:\n  \\<exists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and>\n     proj2_incident q (polar p) \\<and> proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. (\\<And>q r.\n        \\<lbrakk>q \\<noteq> r; q \\<in> S; r \\<in> S;\n         proj2_incident q (polar p); proj2_incident r (polar p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_incident q (polar p)\n  proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q (polar p) \\<and>\n       proj2_incident r (polar p) \\<Longrightarrow>\n    False", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>proj2_incident q ?l\\<close>\n        and \\<open>r \\<in> S\\<close> and \\<open>proj2_incident r ?l\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  proj2_incident q (polar p)\n  r \\<in> S\n  proj2_incident r (polar p)", "have \"q = p\" and \"r = p\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  proj2_incident q (polar p)\n  r \\<in> S\n  proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. q = p &&& r = p", "by (simp add: point_in_S_polar_is_tangent)+"], ["proof (state)\nthis:\n  q = p\n  r = p\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q (polar p) \\<and>\n       proj2_incident r (polar p) \\<Longrightarrow>\n    False", "with \\<open>q \\<noteq> r\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> r\n  q = p\n  r = p", "show False"], ["proof (prove)\nusing this:\n  q \\<noteq> r\n  q = p\n  r = p\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and>\n     proj2_incident q (polar p) \\<and> proj2_incident r (polar p)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "with \\<open>proj2_incident p ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p (polar p)\n  \\<nexists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and>\n     proj2_incident q (polar p) \\<and> proj2_incident r (polar p)", "show \"\\<not> (\\<forall> l. proj2_incident p l \\<longrightarrow> (\\<exists> q r.\n      q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l))\""], ["proof (prove)\nusing this:\n  proj2_incident p (polar p)\n  \\<nexists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and>\n     proj2_incident q (polar p) \\<and> proj2_incident r (polar p)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>l.\n             proj2_incident p l \\<longrightarrow>\n             (\\<exists>q r.\n                 q \\<noteq> r \\<and>\n                 q \\<in> S \\<and>\n                 r \\<in> S \\<and>\n                 proj2_incident q l \\<and> proj2_incident r l))\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 0 \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 0 \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "assume \"conic_sgn p \\<noteq> 0\""], ["proof (state)\nthis:\n  conic_sgn p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 0 \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "with \\<open>conic_sgn p \\<ge> 0\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> conic_sgn p\n  conic_sgn p \\<noteq> 0", "have \"conic_sgn p > 0\""], ["proof (prove)\nusing this:\n  0 \\<le> conic_sgn p\n  conic_sgn p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < conic_sgn p", "by simp"], ["proof (state)\nthis:\n  0 < conic_sgn p\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 0 \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "hence \"sgn (conic_sgn p) = 1\""], ["proof (prove)\nusing this:\n  0 < conic_sgn p\n\ngoal (1 subgoal):\n 1. sgn (conic_sgn p) = 1", "by simp"], ["proof (state)\nthis:\n  sgn (conic_sgn p) = 1\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 0 \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "hence \"conic_sgn p = 1\""], ["proof (prove)\nusing this:\n  sgn (conic_sgn p) = 1\n\ngoal (1 subgoal):\n 1. conic_sgn p = 1", "by (simp add: sgn_conic_sgn)"], ["proof (state)\nthis:\n  conic_sgn p = 1\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 0 \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "with outside_exists_line_not_intersect_S"], ["proof (chain)\npicking this:\n  conic_sgn ?p = 1 \\<Longrightarrow>\n  \\<exists>l.\n     proj2_incident ?p l \\<and>\n     (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)\n  conic_sgn p = 1", "obtain l where \"proj2_incident p l\" and \"\\<forall> q. proj2_incident q l \\<longrightarrow> q \\<notin> S\""], ["proof (prove)\nusing this:\n  conic_sgn ?p = 1 \\<Longrightarrow>\n  \\<exists>l.\n     proj2_incident ?p l \\<and>\n     (\\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S)\n  conic_sgn p = 1\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>proj2_incident p l;\n         \\<forall>q.\n            proj2_incident q l \\<longrightarrow> q \\<notin> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  proj2_incident p l\n  \\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 0 \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "have \"\\<not> (\\<exists> q r.\n      q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q l \\<and> proj2_incident r l \\<Longrightarrow>\n    False", "assume \"\\<exists> q r.\n        q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\""], ["proof (state)\nthis:\n  \\<exists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q l \\<and> proj2_incident r l \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "obtain q where \"q \\<in> S\" and \"proj2_incident q l\""], ["proof (prove)\nusing this:\n  \\<exists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> S; proj2_incident q l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<in> S\n  proj2_incident q l\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q l \\<and> proj2_incident r l \\<Longrightarrow>\n    False", "from \\<open>proj2_incident q l\\<close> and \\<open>\\<forall> q. proj2_incident q l \\<longrightarrow> q \\<notin> S\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident q l\n  \\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S", "have \"q \\<notin> S\""], ["proof (prove)\nusing this:\n  proj2_incident q l\n  \\<forall>q. proj2_incident q l \\<longrightarrow> q \\<notin> S\n\ngoal (1 subgoal):\n 1. q \\<notin> S", "by simp"], ["proof (state)\nthis:\n  q \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<exists>q r.\n       q \\<noteq> r \\<and>\n       q \\<in> S \\<and>\n       r \\<in> S \\<and>\n       proj2_incident q l \\<and> proj2_incident r l \\<Longrightarrow>\n    False", "with \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> S\n  q \\<notin> S", "show False"], ["proof (prove)\nusing this:\n  q \\<in> S\n  q \\<notin> S\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. conic_sgn p \\<noteq> 0 \\<Longrightarrow>\n    \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "with \\<open>proj2_incident p l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  \\<nexists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l", "show \"\\<not> (\\<forall> l. proj2_incident p l \\<longrightarrow> (\\<exists> q r.\n      q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l))\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  \\<nexists>q r.\n     q \\<noteq> r \\<and>\n     q \\<in> S \\<and>\n     r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>l.\n               proj2_incident p l \\<longrightarrow>\n               (\\<exists>q r.\n                   q \\<noteq> r \\<and>\n                   q \\<in> S \\<and>\n                   r \\<in> S \\<and>\n                   proj2_incident q l \\<and> proj2_incident r l))", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>l.\n             proj2_incident p l \\<longrightarrow>\n             (\\<exists>q r.\n                 q \\<noteq> r \\<and>\n                 q \\<in> S \\<and>\n                 r \\<in> S \\<and>\n                 proj2_incident q l \\<and> proj2_incident r l))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<forall>l.\n             proj2_incident p l \\<longrightarrow>\n             (\\<exists>q r.\n                 q \\<noteq> r \\<and>\n                 q \\<in> S \\<and>\n                 r \\<in> S \\<and>\n                 proj2_incident q l \\<and> proj2_incident r l))\n\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> False", "with \\<open>\\<forall> l. proj2_incident p l \\<longrightarrow> (\\<exists> q r.\n    q \\<noteq> r \\<and> q \\<in> S \\<and> r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l.\n     proj2_incident p l \\<longrightarrow>\n     (\\<exists>q r.\n         q \\<noteq> r \\<and>\n         q \\<in> S \\<and>\n         r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l)\n  \\<not> (\\<forall>l.\n             proj2_incident p l \\<longrightarrow>\n             (\\<exists>q r.\n                 q \\<noteq> r \\<and>\n                 q \\<in> S \\<and>\n                 r \\<in> S \\<and>\n                 proj2_incident q l \\<and> proj2_incident r l))", "show False"], ["proof (prove)\nusing this:\n  \\<forall>l.\n     proj2_incident p l \\<longrightarrow>\n     (\\<exists>q r.\n         q \\<noteq> r \\<and>\n         q \\<in> S \\<and>\n         r \\<in> S \\<and> proj2_incident q l \\<and> proj2_incident r l)\n  \\<not> (\\<forall>l.\n             proj2_incident p l \\<longrightarrow>\n             (\\<exists>q r.\n                 q \\<noteq> r \\<and>\n                 q \\<in> S \\<and>\n                 r \\<in> S \\<and>\n                 proj2_incident q l \\<and> proj2_incident r l))\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_through_hyp2_pole_not_in_hyp2:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a l\"\n  shows \"pole l \\<notin> hyp2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pole l \\<notin> hyp2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pole l \\<notin> hyp2", "from assms and line_through_K2_intersect_S"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l\n  \\<lbrakk>?p \\<in> hyp2; proj2_incident ?p ?l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r. r \\<in> S \\<and> proj2_incident r ?l", "obtain p where \"p \\<in> S\" and \"proj2_incident p l\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n  \\<lbrakk>?p \\<in> hyp2; proj2_incident ?p ?l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r. r \\<in> S \\<and> proj2_incident r ?l\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> S; proj2_incident p l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<in> S\n  proj2_incident p l\n\ngoal (1 subgoal):\n 1. pole l \\<notin> hyp2", "from \\<open>proj2_incident p l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l", "have \"proj2_incident (pole l) (polar p)\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) (polar p)", "by (rule incident_pole_polar)"], ["proof (state)\nthis:\n  proj2_incident (pole l) (polar p)\n\ngoal (1 subgoal):\n 1. pole l \\<notin> hyp2", "with \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  proj2_incident (pole l) (polar p)", "show \"pole l \\<notin> hyp2\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  proj2_incident (pole l) (polar p)\n\ngoal (1 subgoal):\n 1. pole l \\<notin> hyp2", "by (auto simp add: tangent_not_through_K2)"], ["proof (state)\nthis:\n  pole l \\<notin> hyp2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma statement60_one_way:\n  assumes \"is_K2_isometry J\" and \"p \\<in> K2\"\n  shows \"apply_cltn2 p J \\<in> K2\" (is \"?p' \\<in> K2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2", "let ?J' = \"cltn2_inverse J\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2", "have \"\\<forall> l'. proj2_incident ?p' l' \\<longrightarrow> (\\<exists> q' r'.\n    q' \\<noteq> r' \\<and> q' \\<in> S \\<and> r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l'.\n       proj2_incident (apply_cltn2 p J) l' \\<longrightarrow>\n       (\\<exists>q' r'.\n           q' \\<noteq> r' \\<and>\n           q' \\<in> S \\<and>\n           r' \\<in> S \\<and>\n           proj2_incident q' l' \\<and> proj2_incident r' l')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l'.\n       proj2_incident (apply_cltn2 p J) l' \\<longrightarrow>\n       (\\<exists>q' r'.\n           q' \\<noteq> r' \\<and>\n           q' \\<in> S \\<and>\n           r' \\<in> S \\<and>\n           proj2_incident q' l' \\<and> proj2_incident r' l')", "fix l'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l'.\n       proj2_incident (apply_cltn2 p J) l' \\<longrightarrow>\n       (\\<exists>q' r'.\n           q' \\<noteq> r' \\<and>\n           q' \\<in> S \\<and>\n           r' \\<in> S \\<and>\n           proj2_incident q' l' \\<and> proj2_incident r' l')", "let ?l = \"apply_cltn2_line l' ?J'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l'.\n       proj2_incident (apply_cltn2 p J) l' \\<longrightarrow>\n       (\\<exists>q' r'.\n           q' \\<noteq> r' \\<and>\n           q' \\<in> S \\<and>\n           r' \\<in> S \\<and>\n           proj2_incident q' l' \\<and> proj2_incident r' l')", "show \"proj2_incident ?p' l' \\<longrightarrow> (\\<exists> q' r'.\n      q' \\<noteq> r' \\<and> q' \\<in> S \\<and> r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<longrightarrow>\n    (\\<exists>q' r'.\n        q' \\<noteq> r' \\<and>\n        q' \\<in> S \\<and>\n        r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "assume \"proj2_incident ?p' l'\""], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 p J) l'\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "hence \"proj2_incident p ?l\""], ["proof (prove)\nusing this:\n  proj2_incident (apply_cltn2 p J) l'\n\ngoal (1 subgoal):\n 1. proj2_incident p (apply_cltn2_line l' (cltn2_inverse J))", "by (simp add: apply_cltn2_incident [of p l' ?J']\n          cltn2.inv_inv [simplified])"], ["proof (state)\nthis:\n  proj2_incident p (apply_cltn2_line l' (cltn2_inverse J))\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "with \\<open>p \\<in> K2\\<close> and line_through_K2_intersect_S_twice [of p ?l]"], ["proof (chain)\npicking this:\n  p \\<in> hyp2\n  \\<lbrakk>p \\<in> hyp2;\n   proj2_incident p (apply_cltn2_line l' (cltn2_inverse J))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q\n                        (apply_cltn2_line l' (cltn2_inverse J)) \\<and>\n                       proj2_incident r\n                        (apply_cltn2_line l' (cltn2_inverse J))\n  proj2_incident p (apply_cltn2_line l' (cltn2_inverse J))", "obtain q and r where \"q \\<noteq> r\" and \"q \\<in> S\" and \"r \\<in> S\"\n        and \"proj2_incident q ?l\" and \"proj2_incident r ?l\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2\n  \\<lbrakk>p \\<in> hyp2;\n   proj2_incident p (apply_cltn2_line l' (cltn2_inverse J))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q\n                        (apply_cltn2_line l' (cltn2_inverse J)) \\<and>\n                       proj2_incident r\n                        (apply_cltn2_line l' (cltn2_inverse J))\n  proj2_incident p (apply_cltn2_line l' (cltn2_inverse J))\n\ngoal (1 subgoal):\n 1. (\\<And>q r.\n        \\<lbrakk>q \\<noteq> r; q \\<in> S; r \\<in> S;\n         proj2_incident q (apply_cltn2_line l' (cltn2_inverse J));\n         proj2_incident r (apply_cltn2_line l' (cltn2_inverse J))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> r\n  q \\<in> S\n  r \\<in> S\n  proj2_incident q (apply_cltn2_line l' (cltn2_inverse J))\n  proj2_incident r (apply_cltn2_line l' (cltn2_inverse J))\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "let ?q' = \"apply_cltn2 q J\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "let ?r' = \"apply_cltn2 r J\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "from \\<open>q \\<noteq> r\\<close> and apply_cltn2_injective [of q J r]"], ["proof (chain)\npicking this:\n  q \\<noteq> r\n  apply_cltn2 q J = apply_cltn2 r J \\<Longrightarrow> q = r", "have \"?q' \\<noteq> ?r'\""], ["proof (prove)\nusing this:\n  q \\<noteq> r\n  apply_cltn2 q J = apply_cltn2 r J \\<Longrightarrow> q = r\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<noteq> apply_cltn2 r J", "by auto"], ["proof (state)\nthis:\n  apply_cltn2 q J \\<noteq> apply_cltn2 r J\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "from \\<open>q \\<in> S\\<close> and \\<open>r \\<in> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> S\n  r \\<in> S\n  is_K2_isometry J", "have \"?q' \\<in> S\" and \"?r' \\<in> S\""], ["proof (prove)\nusing this:\n  q \\<in> S\n  r \\<in> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<in> S &&& apply_cltn2 r J \\<in> S", "by (unfold is_K2_isometry_def) simp_all"], ["proof (state)\nthis:\n  apply_cltn2 q J \\<in> S\n  apply_cltn2 r J \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "from \\<open>proj2_incident q ?l\\<close> and \\<open>proj2_incident r ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident q (apply_cltn2_line l' (cltn2_inverse J))\n  proj2_incident r (apply_cltn2_line l' (cltn2_inverse J))", "have \"proj2_incident ?q' l'\" and \"proj2_incident ?r' l'\""], ["proof (prove)\nusing this:\n  proj2_incident q (apply_cltn2_line l' (cltn2_inverse J))\n  proj2_incident r (apply_cltn2_line l' (cltn2_inverse J))\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 q J) l' &&&\n    proj2_incident (apply_cltn2 r J) l'", "by (simp_all add: apply_cltn2_incident [of _ l' ?J']\n          cltn2.inv_inv [simplified])"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 q J) l'\n  proj2_incident (apply_cltn2 r J) l'\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 p J) l' \\<Longrightarrow>\n    \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "with \\<open>?q' \\<noteq> ?r'\\<close> and \\<open>?q' \\<in> S\\<close> and \\<open>?r' \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 q J \\<noteq> apply_cltn2 r J\n  apply_cltn2 q J \\<in> S\n  apply_cltn2 r J \\<in> S\n  proj2_incident (apply_cltn2 q J) l'\n  proj2_incident (apply_cltn2 r J) l'", "show \"\\<exists> q' r'.\n        q' \\<noteq> r' \\<and> q' \\<in> S \\<and> r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'\""], ["proof (prove)\nusing this:\n  apply_cltn2 q J \\<noteq> apply_cltn2 r J\n  apply_cltn2 q J \\<in> S\n  apply_cltn2 r J \\<in> S\n  proj2_incident (apply_cltn2 q J) l'\n  proj2_incident (apply_cltn2 r J) l'\n\ngoal (1 subgoal):\n 1. \\<exists>q' r'.\n       q' \\<noteq> r' \\<and>\n       q' \\<in> S \\<and>\n       r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'", "by auto"], ["proof (state)\nthis:\n  \\<exists>q' r'.\n     q' \\<noteq> r' \\<and>\n     q' \\<in> S \\<and>\n     r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 p J) l' \\<longrightarrow>\n  (\\<exists>q' r'.\n      q' \\<noteq> r' \\<and>\n      q' \\<in> S \\<and>\n      r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l'.\n     proj2_incident (apply_cltn2 p J) l' \\<longrightarrow>\n     (\\<exists>q' r'.\n         q' \\<noteq> r' \\<and>\n         q' \\<in> S \\<and>\n         r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l')\n\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2", "thus \"?p' \\<in> K2\""], ["proof (prove)\nusing this:\n  \\<forall>l'.\n     proj2_incident (apply_cltn2 p J) l' \\<longrightarrow>\n     (\\<exists>q' r'.\n         q' \\<noteq> r' \\<and>\n         q' \\<in> S \\<and>\n         r' \\<in> S \\<and> proj2_incident q' l' \\<and> proj2_incident r' l')\n\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2", "by (rule lines_through_intersect_S_twice_in_K2)"], ["proof (state)\nthis:\n  apply_cltn2 p J \\<in> hyp2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_K2_isometry_hyp2_S:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"apply_cltn2 p J \\<in> hyp2 \\<union> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2 \\<union> S", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S\n 2. \\<not> ?P \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S", "assume \"p \\<in> hyp2\""], ["proof (state)\nthis:\n  p \\<in> hyp2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S\n 2. \\<not> ?P \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S", "with \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  p \\<in> hyp2", "have \"apply_cltn2 p J \\<in> hyp2\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2", "by (rule statement60_one_way)"], ["proof (state)\nthis:\n  apply_cltn2 p J \\<in> hyp2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S\n 2. \\<not> ?P \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S", "thus \"apply_cltn2 p J \\<in> hyp2 \\<union> S\""], ["proof (prove)\nusing this:\n  apply_cltn2 p J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2 \\<union> S", ".."], ["proof (state)\nthis:\n  apply_cltn2 p J \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S", "assume \"p \\<notin> hyp2\""], ["proof (state)\nthis:\n  p \\<notin> hyp2\n\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S", "with \\<open>p \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  p \\<notin> hyp2", "have \"p \\<in> S\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  p \\<notin> hyp2\n\ngoal (1 subgoal):\n 1. p \\<in> S", "by simp"], ["proof (state)\nthis:\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S", "with \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  p \\<in> S", "have \"apply_cltn2 p J \\<in> S\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> S", "by (unfold is_K2_isometry_def) simp"], ["proof (state)\nthis:\n  apply_cltn2 p J \\<in> S\n\ngoal (1 subgoal):\n 1. p \\<notin> hyp2 \\<Longrightarrow> apply_cltn2 p J \\<in> hyp2 \\<union> S", "thus \"apply_cltn2 p J \\<in> hyp2 \\<union> S\""], ["proof (prove)\nusing this:\n  apply_cltn2 p J \\<in> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2 \\<union> S", ".."], ["proof (state)\nthis:\n  apply_cltn2 p J \\<in> hyp2 \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_K2_isometry_z_non_zero:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"z_non_zero (apply_cltn2 p J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z_non_zero (apply_cltn2 p J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z_non_zero (apply_cltn2 p J)", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  is_K2_isometry J", "have \"apply_cltn2 p J \\<in> hyp2 \\<union> S\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 p J \\<in> hyp2 \\<union> S", "by (rule is_K2_isometry_hyp2_S)"], ["proof (state)\nthis:\n  apply_cltn2 p J \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. z_non_zero (apply_cltn2 p J)", "thus \"z_non_zero (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  apply_cltn2 p J \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. z_non_zero (apply_cltn2 p J)", "by (rule hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero (apply_cltn2 p J)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cart2_append1_apply_cltn2:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"\\<exists> k. k \\<noteq> 0\n  \\<and> cart2_append1 p v* cltn2_rep J = k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "have \"cart2_append1 p v* cltn2_rep J\n    = (1 / (proj2_rep p)$3) *\\<^sub>R (proj2_rep p v* cltn2_rep J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cart2_append1 p v* cltn2_rep J =\n    (1 / proj2_rep p $ 3) *\\<^sub>R (proj2_rep p v* cltn2_rep J)", "by (unfold cart2_append1_def) (simp add: scaleR_vector_matrix_assoc)"], ["proof (state)\nthis:\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3) *\\<^sub>R (proj2_rep p v* cltn2_rep J)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from \\<open>p \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S", "have \"(proj2_rep p)$3 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. z_non_zero p", "by (rule hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from apply_cltn2_imp_mult [of p J]"], ["proof (chain)\npicking this:\n  apply_cltn2 p J = ?q \\<Longrightarrow>\n  \\<exists>k.\n     k \\<noteq> 0 \\<and>\n     proj2_rep p v* cltn2_rep J = k *\\<^sub>R proj2_rep ?q", "obtain j where \"j \\<noteq> 0\"\n    and \"proj2_rep p v* cltn2_rep J = j *\\<^sub>R proj2_rep (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  apply_cltn2 p J = ?q \\<Longrightarrow>\n  \\<exists>k.\n     k \\<noteq> 0 \\<and>\n     proj2_rep p v* cltn2_rep J = k *\\<^sub>R proj2_rep ?q\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<noteq> 0;\n         proj2_rep p v* cltn2_rep J =\n         j *\\<^sub>R proj2_rep (apply_cltn2 p J)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  j \\<noteq> 0\n  proj2_rep p v* cltn2_rep J = j *\\<^sub>R proj2_rep (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  is_K2_isometry J", "have \"z_non_zero (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. z_non_zero (apply_cltn2 p J)", "by (rule is_K2_isometry_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "hence \"proj2_rep (apply_cltn2 p J)\n    = (proj2_rep (apply_cltn2 p J))$3 *\\<^sub>R cart2_append1 (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  z_non_zero (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. proj2_rep (apply_cltn2 p J) =\n    proj2_rep (apply_cltn2 p J) $ 3 *\\<^sub>R\n    cart2_append1 (apply_cltn2 p J)", "by (rule proj2_rep_cart2_append1)"], ["proof (state)\nthis:\n  proj2_rep (apply_cltn2 p J) =\n  proj2_rep (apply_cltn2 p J) $ 3 *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "let ?k = \"1 / (proj2_rep p)$3 * j * (proj2_rep (apply_cltn2 p J))$3\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from \\<open>(proj2_rep p)$3 \\<noteq> 0\\<close> and \\<open>j \\<noteq> 0\\<close>\n    and \\<open>(proj2_rep (apply_cltn2 p J))$3 \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero p\n  j \\<noteq> 0\n  z_non_zero (apply_cltn2 p J)", "have \"?k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z_non_zero p\n  j \\<noteq> 0\n  z_non_zero (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. 1 / proj2_rep p $ 3 * j * proj2_rep (apply_cltn2 p J) $ 3 \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  1 / proj2_rep p $ 3 * j * proj2_rep (apply_cltn2 p J) $ 3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from \\<open>cart2_append1 p v* cltn2_rep J\n    = (1 / (proj2_rep p)$3) *\\<^sub>R (proj2_rep p v* cltn2_rep J)\\<close>\n    and \\<open>proj2_rep p v* cltn2_rep J = j *\\<^sub>R proj2_rep (apply_cltn2 p J)\\<close>"], ["proof (chain)\npicking this:\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3) *\\<^sub>R (proj2_rep p v* cltn2_rep J)\n  proj2_rep p v* cltn2_rep J = j *\\<^sub>R proj2_rep (apply_cltn2 p J)", "have \"cart2_append1 p v* cltn2_rep J\n    = (1 / (proj2_rep p)$ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3) *\\<^sub>R (proj2_rep p v* cltn2_rep J)\n  proj2_rep p v* cltn2_rep J = j *\\<^sub>R proj2_rep (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. cart2_append1 p v* cltn2_rep J =\n    (1 / proj2_rep p $ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J)", "by simp"], ["proof (state)\nthis:\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from \\<open>proj2_rep (apply_cltn2 p J)\n    = (proj2_rep (apply_cltn2 p J))$3 *\\<^sub>R cart2_append1 (apply_cltn2 p J)\\<close>"], ["proof (chain)\npicking this:\n  proj2_rep (apply_cltn2 p J) =\n  proj2_rep (apply_cltn2 p J) $ 3 *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "have \"(1 / (proj2_rep p)$3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J)\n    = (1 / (proj2_rep p)$3 * j) *\\<^sub>R ((proj2_rep (apply_cltn2 p J))$3\n    *\\<^sub>R cart2_append1 (apply_cltn2 p J))\""], ["proof (prove)\nusing this:\n  proj2_rep (apply_cltn2 p J) =\n  proj2_rep (apply_cltn2 p J) $ 3 *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. (1 / proj2_rep p $ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J) =\n    (1 / proj2_rep p $ 3 * j) *\\<^sub>R\n    proj2_rep (apply_cltn2 p J) $ 3 *\\<^sub>R\n    cart2_append1 (apply_cltn2 p J)", "by simp"], ["proof (state)\nthis:\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J) =\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R\n  proj2_rep (apply_cltn2 p J) $ 3 *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "with \\<open>cart2_append1 p v* cltn2_rep J\n    = (1 / (proj2_rep p)$ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J)\\<close>"], ["proof (chain)\npicking this:\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J)\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J) =\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R\n  proj2_rep (apply_cltn2 p J) $ 3 *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "have \"cart2_append1 p v* cltn2_rep J = ?k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J)\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R proj2_rep (apply_cltn2 p J) =\n  (1 / proj2_rep p $ 3 * j) *\\<^sub>R\n  proj2_rep (apply_cltn2 p J) $ 3 *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. cart2_append1 p v* cltn2_rep J =\n    (1 / proj2_rep p $ 3 * j * proj2_rep (apply_cltn2 p J) $ 3) *\\<^sub>R\n    cart2_append1 (apply_cltn2 p J)", "by simp"], ["proof (state)\nthis:\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3 * j * proj2_rep (apply_cltn2 p J) $ 3) *\\<^sub>R\n  cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "with \\<open>?k \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  1 / proj2_rep p $ 3 * j * proj2_rep (apply_cltn2 p J) $ 3 \\<noteq> 0\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3 * j * proj2_rep (apply_cltn2 p J) $ 3) *\\<^sub>R\n  cart2_append1 (apply_cltn2 p J)", "show \"\\<exists> k. k \\<noteq> 0\n    \\<and> cart2_append1 p v* cltn2_rep J = k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  1 / proj2_rep p $ 3 * j * proj2_rep (apply_cltn2 p J) $ 3 \\<noteq> 0\n  cart2_append1 p v* cltn2_rep J =\n  (1 / proj2_rep p $ 3 * j * proj2_rep (apply_cltn2 p J) $ 3) *\\<^sub>R\n  cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       k \\<noteq> 0 \\<and>\n       cart2_append1 p v* cltn2_rep J =\n       k *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "by (simp add: exI [of _ ?k])"], ["proof (state)\nthis:\n  \\<exists>k.\n     k \\<noteq> 0 \\<and>\n     cart2_append1 p v* cltn2_rep J =\n     k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The $K$-isometries form a group action\\<close>"], ["", "lemma hyp2_cltn2_id [simp]: \"hyp2_cltn2 p cltn2_id = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_cltn2 p cltn2_id = p", "by (unfold hyp2_cltn2_def) (simp add: Rep_hyp2_inverse)"], ["", "lemma apply_cltn2_Rep_hyp2:\n  assumes \"is_K2_isometry J\"\n  shows \"apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2", "from \\<open>is_K2_isometry J\\<close> and Rep_hyp2 [of p]"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  Rep_hyp2 p \\<in> hyp2", "show \"apply_cltn2 (Rep_hyp2 p) J \\<in> K2\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  Rep_hyp2 p \\<in> hyp2\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2", "by (rule statement60_one_way)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Rep_hyp2_cltn2:\n  assumes \"is_K2_isometry J\"\n  shows \"Rep_hyp2 (hyp2_cltn2 p J) = apply_cltn2 (Rep_hyp2 p) J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_hyp2 (hyp2_cltn2 p J) = apply_cltn2 (Rep_hyp2 p) J", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Rep_hyp2 (hyp2_cltn2 p J) = apply_cltn2 (Rep_hyp2 p) J", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "have \"apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2", "by (rule apply_cltn2_Rep_hyp2)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. Rep_hyp2 (hyp2_cltn2 p J) = apply_cltn2 (Rep_hyp2 p) J", "thus \"Rep_hyp2 (hyp2_cltn2 p J) = apply_cltn2 (Rep_hyp2 p) J\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 p) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. Rep_hyp2 (hyp2_cltn2 p J) = apply_cltn2 (Rep_hyp2 p) J", "by (unfold hyp2_cltn2_def) (rule Abs_hyp2_inverse)"], ["proof (state)\nthis:\n  Rep_hyp2 (hyp2_cltn2 p J) = apply_cltn2 (Rep_hyp2 p) J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_cltn2_compose:\n  assumes \"is_K2_isometry H\"\n  shows \"hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (cltn2_compose H J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (cltn2_compose H J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (cltn2_compose H J)", "from \\<open>is_K2_isometry H\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry H", "have \"apply_cltn2 (Rep_hyp2 p) H \\<in> hyp2\""], ["proof (prove)\nusing this:\n  is_K2_isometry H\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 p) H \\<in> hyp2", "by (rule apply_cltn2_Rep_hyp2)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 p) H \\<in> hyp2\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (cltn2_compose H J)", "thus \"hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (cltn2_compose H J)\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 p) H \\<in> hyp2\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (cltn2_compose H J)", "by (unfold hyp2_cltn2_def) (simp add: Abs_hyp2_inverse apply_cltn2_compose)"], ["proof (state)\nthis:\n  hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (cltn2_compose H J)\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation K2_isometry: action\n  \"(|carrier = Collect is_K2_isometry, mult = cltn2_compose, one = cltn2_id|)\"\n  hyp2_cltn2"], ["proof (prove)\ngoal (1 subgoal):\n 1. action\n     \\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose,\n        one = cltn2_id\\<rparr>\n     hyp2_cltn2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       hyp2_cltn2 b\n        \\<one>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> =\n       b\n 2. \\<And>g h b.\n       g \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<and>\n       h \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<longrightarrow>\n       hyp2_cltn2 (hyp2_cltn2 b g) h =\n       hyp2_cltn2 b\n        (g \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n         h)", "let ?G =\n    \"(|carrier = Collect is_K2_isometry, mult = cltn2_compose, one = cltn2_id|)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       hyp2_cltn2 b\n        \\<one>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> =\n       b\n 2. \\<And>g h b.\n       g \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<and>\n       h \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<longrightarrow>\n       hyp2_cltn2 (hyp2_cltn2 b g) h =\n       hyp2_cltn2 b\n        (g \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n         h)", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       hyp2_cltn2 b\n        \\<one>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> =\n       b\n 2. \\<And>g h b.\n       g \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<and>\n       h \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<longrightarrow>\n       hyp2_cltn2 (hyp2_cltn2 b g) h =\n       hyp2_cltn2 b\n        (g \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n         h)", "show \"hyp2_cltn2 p \\<one>\\<^bsub>?G\\<^esub> = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_cltn2 p\n     \\<one>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> =\n    p", "by (unfold hyp2_cltn2_def) (simp add: Rep_hyp2_inverse)"], ["proof (state)\nthis:\n  hyp2_cltn2 p\n   \\<one>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> =\n  p\n\ngoal (1 subgoal):\n 1. \\<And>g h b.\n       g \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<and>\n       h \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<longrightarrow>\n       hyp2_cltn2 (hyp2_cltn2 b g) h =\n       hyp2_cltn2 b\n        (g \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n         h)", "fix H J"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g h b.\n       g \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<and>\n       h \\<in> carrier\n                \\<lparr>carrier = Collect is_K2_isometry,\n                   monoid.mult = cltn2_compose,\n                   one = cltn2_id\\<rparr> \\<longrightarrow>\n       hyp2_cltn2 (hyp2_cltn2 b g) h =\n       hyp2_cltn2 b\n        (g \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n         h)", "show \"H \\<in> carrier ?G \\<and> J \\<in> carrier ?G\n    \\<longrightarrow> hyp2_cltn2 (hyp2_cltn2 p H) J = hyp2_cltn2 p (H \\<otimes>\\<^bsub>?G\\<^esub> J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> carrier\n             \\<lparr>carrier = Collect is_K2_isometry,\n                monoid.mult = cltn2_compose, one = cltn2_id\\<rparr> \\<and>\n    J \\<in> carrier\n             \\<lparr>carrier = Collect is_K2_isometry,\n                monoid.mult = cltn2_compose,\n                one = cltn2_id\\<rparr> \\<longrightarrow>\n    hyp2_cltn2 (hyp2_cltn2 p H) J =\n    hyp2_cltn2 p\n     (H \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n      J)", "by (simp add: hyp2_cltn2_compose)"], ["proof (state)\nthis:\n  H \\<in> carrier\n           \\<lparr>carrier = Collect is_K2_isometry,\n              monoid.mult = cltn2_compose, one = cltn2_id\\<rparr> \\<and>\n  J \\<in> carrier\n           \\<lparr>carrier = Collect is_K2_isometry,\n              monoid.mult = cltn2_compose,\n              one = cltn2_id\\<rparr> \\<longrightarrow>\n  hyp2_cltn2 (hyp2_cltn2 p H) J =\n  hyp2_cltn2 p\n   (H \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n    J)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The Klein--Beltrami model satisfies Tarski's first three axioms\\<close>"], ["", "lemma three_in_S_tangent_intersection_no_3_Col:\n  assumes \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> S\"\n  and \"p \\<noteq> q\" and \"r \\<notin> {p,q}\"\n  shows \"proj2_no_3_Col {proj2_intersection (polar p) (polar q),r,p,q}\"\n  (is \"proj2_no_3_Col {?s,r,p,q}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "let ?T = \"{?s,r,p,q}\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "from \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q", "have \"card {p,q} = 2\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. card {p, q} = 2", "by simp"], ["proof (state)\nthis:\n  card {p, q} = 2\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "with \\<open>r \\<notin> {p,q}\\<close>"], ["proof (chain)\npicking this:\n  r \\<notin> {p, q}\n  card {p, q} = 2", "have \"card {r,p,q} = 3\""], ["proof (prove)\nusing this:\n  r \\<notin> {p, q}\n  card {p, q} = 2\n\ngoal (1 subgoal):\n 1. card {r, p, q} = 3", "by simp"], ["proof (state)\nthis:\n  card {r, p, q} = 3\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>r \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S", "have \"{r,p,q} \\<subseteq> S\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n\ngoal (1 subgoal):\n 1. {r, p, q} \\<subseteq> S", "by simp"], ["proof (state)\nthis:\n  {r, p, q} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "have \"proj2_incident ?s (polar p)\" and \"proj2_incident ?s (polar q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_intersection (polar p) (polar q)) (polar p) &&&\n    proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)", "by (rule proj2_intersection_incident)+"], ["proof (state)\nthis:\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "have \"?s \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_intersection (polar p) (polar q) \\<notin> S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_intersection (polar p) (polar q) \\<in> S \\<Longrightarrow> False", "assume \"?s \\<in> S\""], ["proof (state)\nthis:\n  proj2_intersection (polar p) (polar q) \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_intersection (polar p) (polar q) \\<in> S \\<Longrightarrow> False", "with \\<open>p \\<in> S\\<close> and \\<open>proj2_incident ?s (polar p)\\<close>\n      and \\<open>q \\<in> S\\<close> and \\<open>proj2_incident ?s (polar q)\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p)\n  q \\<in> S\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)\n  proj2_intersection (polar p) (polar q) \\<in> S", "have \"?s = p\" and \"?s = q\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p)\n  q \\<in> S\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)\n  proj2_intersection (polar p) (polar q) \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_intersection (polar p) (polar q) = p &&&\n    proj2_intersection (polar p) (polar q) = q", "by (simp_all add: point_in_S_polar_is_tangent)"], ["proof (state)\nthis:\n  proj2_intersection (polar p) (polar q) = p\n  proj2_intersection (polar p) (polar q) = q\n\ngoal (1 subgoal):\n 1. proj2_intersection (polar p) (polar q) \\<in> S \\<Longrightarrow> False", "hence \"p = q\""], ["proof (prove)\nusing this:\n  proj2_intersection (polar p) (polar q) = p\n  proj2_intersection (polar p) (polar q) = q\n\ngoal (1 subgoal):\n 1. p = q", "by simp"], ["proof (state)\nthis:\n  p = q\n\ngoal (1 subgoal):\n 1. proj2_intersection (polar p) (polar q) \\<in> S \\<Longrightarrow> False", "with \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  p = q", "show False"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p = q\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proj2_intersection (polar p) (polar q) \\<notin> S\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "with \\<open>{r,p,q} \\<subseteq> S\\<close>"], ["proof (chain)\npicking this:\n  {r, p, q} \\<subseteq> S\n  proj2_intersection (polar p) (polar q) \\<notin> S", "have \"?s \\<notin> {r,p,q}\""], ["proof (prove)\nusing this:\n  {r, p, q} \\<subseteq> S\n  proj2_intersection (polar p) (polar q) \\<notin> S\n\ngoal (1 subgoal):\n 1. proj2_intersection (polar p) (polar q) \\<notin> {r, p, q}", "by auto"], ["proof (state)\nthis:\n  proj2_intersection (polar p) (polar q) \\<notin> {r, p, q}\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "with \\<open>card {r,p,q} = 3\\<close>"], ["proof (chain)\npicking this:\n  card {r, p, q} = 3\n  proj2_intersection (polar p) (polar q) \\<notin> {r, p, q}", "have \"card {?s,r,p,q} = 4\""], ["proof (prove)\nusing this:\n  card {r, p, q} = 3\n  proj2_intersection (polar p) (polar q) \\<notin> {r, p, q}\n\ngoal (1 subgoal):\n 1. card {proj2_intersection (polar p) (polar q), r, p, q} = 4", "by simp"], ["proof (state)\nthis:\n  card {proj2_intersection (polar p) (polar q), r, p, q} = 4\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "have \"\\<forall> t\\<in>?T. \\<not> proj2_set_Col (?T - {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>{proj2_intersection (polar p) (polar q), r, p, q}.\n       \\<not> proj2_set_Col\n               ({proj2_intersection (polar p) (polar q), r, p, q} - {t})", "proof standard+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> {proj2_intersection (polar p) (polar q), r, p, q};\n        proj2_set_Col\n         ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\\<rbrakk>\n       \\<Longrightarrow> False", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> {proj2_intersection (polar p) (polar q), r, p, q};\n        proj2_set_Col\n         ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"t \\<in> ?T\""], ["proof (state)\nthis:\n  t \\<in> {proj2_intersection (polar p) (polar q), r, p, q}\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> {proj2_intersection (polar p) (polar q), r, p, q};\n        proj2_set_Col\n         ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"proj2_set_Col (?T - {t})\""], ["proof (state)\nthis:\n  proj2_set_Col ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> {proj2_intersection (polar p) (polar q), r, p, q};\n        proj2_set_Col\n         ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  proj2_set_Col ({proj2_intersection (polar p) (polar q), r, p, q} - {t})", "obtain l where \"\\<forall> a \\<in> (?T - {t}). proj2_incident a l\""], ["proof (prove)\nusing this:\n  proj2_set_Col ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} -\n                       {t}.\n           proj2_incident a l \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding proj2_set_Col_def"], ["proof (prove)\nusing this:\n  \\<exists>l.\n     \\<forall>p\\<in>{proj2_intersection (polar p) (polar q), r, p, q} - {t}.\n        proj2_incident p l\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} -\n                       {t}.\n           proj2_incident a l \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} - {t}.\n     proj2_incident a l\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> {proj2_intersection (polar p) (polar q), r, p, q};\n        proj2_set_Col\n         ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>proj2_set_Col (?T - {t})\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col ({proj2_intersection (polar p) (polar q), r, p, q} - {t})", "have \"proj2_set_Col (S \\<inter> (?T - {t}))\""], ["proof (prove)\nusing this:\n  proj2_set_Col ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n\ngoal (1 subgoal):\n 1. proj2_set_Col\n     (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))", "by (simp add: proj2_subset_Col [of \"(S \\<inter> (?T - {t}))\" \"?T - {t}\"])"], ["proof (state)\nthis:\n  proj2_set_Col\n   (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> {proj2_intersection (polar p) (polar q), r, p, q};\n        proj2_set_Col\n         ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"card (S \\<inter> (?T - {t})) \\<le> 2\""], ["proof (prove)\nusing this:\n  proj2_set_Col\n   (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n\ngoal (1 subgoal):\n 1. card\n     (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n    \\<le> 2", "by (simp add: card_line_intersect_S)"], ["proof (state)\nthis:\n  card\n   (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n  \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> {proj2_intersection (polar p) (polar q), r, p, q};\n        proj2_set_Col\n         ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\\<rbrakk>\n       \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume \"t = ?s\""], ["proof (state)\nthis:\n  t = proj2_intersection (polar p) (polar q)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with \\<open>?s \\<notin> {r,p,q}\\<close>"], ["proof (chain)\npicking this:\n  proj2_intersection (polar p) (polar q) \\<notin> {r, p, q}\n  t = proj2_intersection (polar p) (polar q)", "have \"?T - {t} = {r,p,q}\""], ["proof (prove)\nusing this:\n  proj2_intersection (polar p) (polar q) \\<notin> {r, p, q}\n  t = proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. {proj2_intersection (polar p) (polar q), r, p, q} - {t} = {r, p, q}", "by simp"], ["proof (state)\nthis:\n  {proj2_intersection (polar p) (polar q), r, p, q} - {t} = {r, p, q}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with \\<open>{r,p,q} \\<subseteq> S\\<close>"], ["proof (chain)\npicking this:\n  {r, p, q} \\<subseteq> S\n  {proj2_intersection (polar p) (polar q), r, p, q} - {t} = {r, p, q}", "have \"S \\<inter> (?T - {t}) = {r,p,q}\""], ["proof (prove)\nusing this:\n  {r, p, q} \\<subseteq> S\n  {proj2_intersection (polar p) (polar q), r, p, q} - {t} = {r, p, q}\n\ngoal (1 subgoal):\n 1. S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}) =\n    {r, p, q}", "by simp"], ["proof (state)\nthis:\n  S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}) =\n  {r, p, q}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with \\<open>card {r,p,q} = 3\\<close> and \\<open>card (S \\<inter> (?T - {t})) \\<le> 2\\<close>"], ["proof (chain)\npicking this:\n  card {r, p, q} = 3\n  card\n   (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n  \\<le> 2\n  S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}) =\n  {r, p, q}", "show False"], ["proof (prove)\nusing this:\n  card {r, p, q} = 3\n  card\n   (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n  \\<le> 2\n  S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}) =\n  {r, p, q}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "assume \"t \\<noteq> ?s\""], ["proof (state)\nthis:\n  t \\<noteq> proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "hence \"?s \\<in> ?T - {t}\""], ["proof (prove)\nusing this:\n  t \\<noteq> proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. proj2_intersection (polar p) (polar q)\n    \\<in> {proj2_intersection (polar p) (polar q), r, p, q} - {t}", "by simp"], ["proof (state)\nthis:\n  proj2_intersection (polar p) (polar q)\n  \\<in> {proj2_intersection (polar p) (polar q), r, p, q} - {t}\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with \\<open>\\<forall> a \\<in> (?T - {t}). proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} - {t}.\n     proj2_incident a l\n  proj2_intersection (polar p) (polar q)\n  \\<in> {proj2_intersection (polar p) (polar q), r, p, q} - {t}", "have \"proj2_incident ?s l\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} - {t}.\n     proj2_incident a l\n  proj2_intersection (polar p) (polar q)\n  \\<in> {proj2_intersection (polar p) (polar q), r, p, q} - {t}\n\ngoal (1 subgoal):\n 1. proj2_incident (proj2_intersection (polar p) (polar q)) l", ".."], ["proof (state)\nthis:\n  proj2_incident (proj2_intersection (polar p) (polar q)) l\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "from \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q", "have \"{p,q} \\<inter> ?T - {t} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. {p, q} \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n    {t} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {p, q} \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n  {t} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  {p, q} \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n  {t} \\<noteq>\n  {}", "obtain d where \"d \\<in> {p,q}\" and \"d \\<in> ?T - {t}\""], ["proof (prove)\nusing this:\n  {p, q} \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n  {t} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        \\<lbrakk>d \\<in> {p, q};\n         d \\<in> {proj2_intersection (polar p) (polar q), r, p, q} -\n                 {t}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  d \\<in> {p, q}\n  d \\<in> {proj2_intersection (polar p) (polar q), r, p, q} - {t}\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "from \\<open>d \\<in> ?T - {t}\\<close> and \\<open>\\<forall> a \\<in> (?T - {t}). proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  d \\<in> {proj2_intersection (polar p) (polar q), r, p, q} - {t}\n  \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} - {t}.\n     proj2_incident a l", "have \"proj2_incident d l\""], ["proof (prove)\nusing this:\n  d \\<in> {proj2_intersection (polar p) (polar q), r, p, q} - {t}\n  \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} - {t}.\n     proj2_incident a l\n\ngoal (1 subgoal):\n 1. proj2_incident d l", "by simp"], ["proof (state)\nthis:\n  proj2_incident d l\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "from \\<open>d \\<in> {p,q}\\<close>\n        and \\<open>proj2_incident ?s (polar p)\\<close>\n        and \\<open>proj2_incident ?s (polar q)\\<close>"], ["proof (chain)\npicking this:\n  d \\<in> {p, q}\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)", "have \"proj2_incident ?s (polar d)\""], ["proof (prove)\nusing this:\n  d \\<in> {p, q}\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)\n\ngoal (1 subgoal):\n 1. proj2_incident (proj2_intersection (polar p) (polar q)) (polar d)", "by auto"], ["proof (state)\nthis:\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar d)\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "from \\<open>d \\<in> {p,q}\\<close> and \\<open>{r,p,q} \\<subseteq> S\\<close>"], ["proof (chain)\npicking this:\n  d \\<in> {p, q}\n  {r, p, q} \\<subseteq> S", "have \"d \\<in> S\""], ["proof (prove)\nusing this:\n  d \\<in> {p, q}\n  {r, p, q} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. d \\<in> S", "by auto"], ["proof (state)\nthis:\n  d \\<in> S\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "hence \"proj2_incident d (polar d)\""], ["proof (prove)\nusing this:\n  d \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_incident d (polar d)", "by (unfold incident_own_polar_in_S)"], ["proof (state)\nthis:\n  proj2_incident d (polar d)\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "from \\<open>d \\<in> S\\<close> and \\<open>?s \\<notin> S\\<close>"], ["proof (chain)\npicking this:\n  d \\<in> S\n  proj2_intersection (polar p) (polar q) \\<notin> S", "have \"d \\<noteq> ?s\""], ["proof (prove)\nusing this:\n  d \\<in> S\n  proj2_intersection (polar p) (polar q) \\<notin> S\n\ngoal (1 subgoal):\n 1. d \\<noteq> proj2_intersection (polar p) (polar q)", "by auto"], ["proof (state)\nthis:\n  d \\<noteq> proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with \\<open>proj2_incident ?s l\\<close>\n        and \\<open>proj2_incident d l\\<close>\n        and \\<open>proj2_incident ?s (polar d)\\<close>\n        and \\<open>proj2_incident d (polar d)\\<close>\n        and proj2_incident_unique"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_intersection (polar p) (polar q)) l\n  proj2_incident d l\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar d)\n  proj2_incident d (polar d)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  d \\<noteq> proj2_intersection (polar p) (polar q)", "have \"l = polar d\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_intersection (polar p) (polar q)) l\n  proj2_incident d l\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar d)\n  proj2_incident d (polar d)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  d \\<noteq> proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. l = polar d", "by auto"], ["proof (state)\nthis:\n  l = polar d\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with \\<open>d \\<in> S\\<close> and point_in_S_polar_is_tangent"], ["proof (chain)\npicking this:\n  d \\<in> S\n  \\<lbrakk>?p \\<in> S; ?q \\<in> S; proj2_incident ?q (polar ?p)\\<rbrakk>\n  \\<Longrightarrow> ?q = ?p\n  l = polar d", "have \"\\<forall> a\\<in>S. proj2_incident a l \\<longrightarrow> a = d\""], ["proof (prove)\nusing this:\n  d \\<in> S\n  \\<lbrakk>?p \\<in> S; ?q \\<in> S; proj2_incident ?q (polar ?p)\\<rbrakk>\n  \\<Longrightarrow> ?q = ?p\n  l = polar d\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>S. proj2_incident a l \\<longrightarrow> a = d", "by simp"], ["proof (state)\nthis:\n  \\<forall>a\\<in>S. proj2_incident a l \\<longrightarrow> a = d\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with \\<open>\\<forall> a \\<in> (?T - {t}). proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} - {t}.\n     proj2_incident a l\n  \\<forall>a\\<in>S. proj2_incident a l \\<longrightarrow> a = d", "have \"S \\<inter> (?T - {t}) \\<subseteq> {d}\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>{proj2_intersection (polar p) (polar q), r, p, q} - {t}.\n     proj2_incident a l\n  \\<forall>a\\<in>S. proj2_incident a l \\<longrightarrow> a = d\n\ngoal (1 subgoal):\n 1. S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n    \\<subseteq> {d}", "by auto"], ["proof (state)\nthis:\n  S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n  \\<subseteq> {d}\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with card_mono [of \"{d}\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>finite {d}; ?A \\<subseteq> {d}\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card {d}\n  S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n  \\<subseteq> {d}", "have \"card (S \\<inter> (?T - {t})) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {d}; ?A \\<subseteq> {d}\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card {d}\n  S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n  \\<subseteq> {d}\n\ngoal (1 subgoal):\n 1. card\n     (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n    \\<le> 1", "by simp"], ["proof (state)\nthis:\n  card\n   (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "hence \"card ((S \\<inter> ?T) - {t}) \\<le> 1\""], ["proof (prove)\nusing this:\n  card\n   (S \\<inter> ({proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. card\n     (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} - {t})\n    \\<le> 1", "by (simp add: Int_Diff)"], ["proof (state)\nthis:\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} - {t})\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "have \"S \\<inter> ?T \\<subseteq> insert t ((S \\<inter> ?T) - {t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}\n    \\<subseteq> insert t\n                 (S \\<inter>\n                  {proj2_intersection (polar p) (polar q), r, p, q} -\n                  {t})", "by auto"], ["proof (state)\nthis:\n  S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}\n  \\<subseteq> insert t\n               (S \\<inter>\n                {proj2_intersection (polar p) (polar q), r, p, q} -\n                {t})\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with card_suc_ge_insert [of t \"(S \\<inter> ?T) - {t}\"]\n        and card_mono [of \"insert t ((S \\<inter> ?T) - {t})\" \"S \\<inter> ?T\"]"], ["proof (chain)\npicking this:\n  card\n   (insert t\n     (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n  \\<le> card\n         (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n          {t}) +\n        1\n  \\<lbrakk>finite\n            (insert t\n              (S \\<inter>\n               {proj2_intersection (polar p) (polar q), r, p, q} -\n               {t}));\n   S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}\n   \\<subseteq> insert t\n                (S \\<inter>\n                 {proj2_intersection (polar p) (polar q), r, p, q} -\n                 {t})\\<rbrakk>\n  \\<Longrightarrow> card\n                     (S \\<inter>\n                      {proj2_intersection (polar p) (polar q), r, p, q})\n                    \\<le> card\n                           (insert t\n                             (S \\<inter>\n                              {proj2_intersection (polar p) (polar q), r, p,\n                               q} -\n                              {t}))\n  S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}\n  \\<subseteq> insert t\n               (S \\<inter>\n                {proj2_intersection (polar p) (polar q), r, p, q} -\n                {t})", "have \"card (S \\<inter> ?T) \\<le> card ((S \\<inter> ?T) - {t}) + 1\""], ["proof (prove)\nusing this:\n  card\n   (insert t\n     (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} - {t}))\n  \\<le> card\n         (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n          {t}) +\n        1\n  \\<lbrakk>finite\n            (insert t\n              (S \\<inter>\n               {proj2_intersection (polar p) (polar q), r, p, q} -\n               {t}));\n   S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}\n   \\<subseteq> insert t\n                (S \\<inter>\n                 {proj2_intersection (polar p) (polar q), r, p, q} -\n                 {t})\\<rbrakk>\n  \\<Longrightarrow> card\n                     (S \\<inter>\n                      {proj2_intersection (polar p) (polar q), r, p, q})\n                    \\<le> card\n                           (insert t\n                             (S \\<inter>\n                              {proj2_intersection (polar p) (polar q), r, p,\n                               q} -\n                              {t}))\n  S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}\n  \\<subseteq> insert t\n               (S \\<inter>\n                {proj2_intersection (polar p) (polar q), r, p, q} -\n                {t})\n\ngoal (1 subgoal):\n 1. card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n    \\<le> card\n           (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n            {t}) +\n          1", "by simp"], ["proof (state)\nthis:\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n  \\<le> card\n         (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n          {t}) +\n        1\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with \\<open>card ((S \\<inter> ?T) - {t}) \\<le> 1\\<close>"], ["proof (chain)\npicking this:\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} - {t})\n  \\<le> 1\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n  \\<le> card\n         (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n          {t}) +\n        1", "have \"card (S \\<inter> ?T) \\<le> 2\""], ["proof (prove)\nusing this:\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} - {t})\n  \\<le> 1\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n  \\<le> card\n         (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q} -\n          {t}) +\n        1\n\ngoal (1 subgoal):\n 1. card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n    \\<le> 2", "by simp"], ["proof (state)\nthis:\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n  \\<le> 2\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "from \\<open>{r,p,q} \\<subseteq> S\\<close>"], ["proof (chain)\npicking this:\n  {r, p, q} \\<subseteq> S", "have \"{r,p,q} \\<subseteq> S \\<inter> ?T\""], ["proof (prove)\nusing this:\n  {r, p, q} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. {r, p, q}\n    \\<subseteq> S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}", "by simp"], ["proof (state)\nthis:\n  {r, p, q}\n  \\<subseteq> S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with \\<open>card {r,p,q} = 3\\<close> and card_mono [of \"S \\<inter> ?T\" \"{r,p,q}\"]"], ["proof (chain)\npicking this:\n  card {r, p, q} = 3\n  \\<lbrakk>finite\n            (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q});\n   {r, p, q}\n   \\<subseteq> S \\<inter>\n               {proj2_intersection (polar p) (polar q), r, p, q}\\<rbrakk>\n  \\<Longrightarrow> card {r, p, q}\n                    \\<le> card\n                           (S \\<inter>\n                            {proj2_intersection (polar p) (polar q), r, p,\n                             q})\n  {r, p, q}\n  \\<subseteq> S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}", "have \"card (S \\<inter> ?T) \\<ge> 3\""], ["proof (prove)\nusing this:\n  card {r, p, q} = 3\n  \\<lbrakk>finite\n            (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q});\n   {r, p, q}\n   \\<subseteq> S \\<inter>\n               {proj2_intersection (polar p) (polar q), r, p, q}\\<rbrakk>\n  \\<Longrightarrow> card {r, p, q}\n                    \\<le> card\n                           (S \\<inter>\n                            {proj2_intersection (polar p) (polar q), r, p,\n                             q})\n  {r, p, q}\n  \\<subseteq> S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q}\n\ngoal (1 subgoal):\n 1. 3 \\<le> card\n             (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})", "by simp"], ["proof (state)\nthis:\n  3 \\<le> card\n           (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n\ngoal (1 subgoal):\n 1. t \\<noteq> proj2_intersection (polar p) (polar q) \\<Longrightarrow>\n    False", "with \\<open>card (S \\<inter> ?T) \\<le> 2\\<close>"], ["proof (chain)\npicking this:\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n  \\<le> 2\n  3 \\<le> card\n           (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})", "show False"], ["proof (prove)\nusing this:\n  card (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n  \\<le> 2\n  3 \\<le> card\n           (S \\<inter> {proj2_intersection (polar p) (polar q), r, p, q})\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t\\<in>{proj2_intersection (polar p) (polar q), r, p, q}.\n     \\<not> proj2_set_Col\n             ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "with \\<open>card ?T = 4\\<close>"], ["proof (chain)\npicking this:\n  card {proj2_intersection (polar p) (polar q), r, p, q} = 4\n  \\<forall>t\\<in>{proj2_intersection (polar p) (polar q), r, p, q}.\n     \\<not> proj2_set_Col\n             ({proj2_intersection (polar p) (polar q), r, p, q} - {t})", "show \"proj2_no_3_Col ?T\""], ["proof (prove)\nusing this:\n  card {proj2_intersection (polar p) (polar q), r, p, q} = 4\n  \\<forall>t\\<in>{proj2_intersection (polar p) (polar q), r, p, q}.\n     \\<not> proj2_set_Col\n             ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}", "unfolding proj2_no_3_Col_def"], ["proof (prove)\nusing this:\n  card {proj2_intersection (polar p) (polar q), r, p, q} = 4\n  \\<forall>t\\<in>{proj2_intersection (polar p) (polar q), r, p, q}.\n     \\<not> proj2_set_Col\n             ({proj2_intersection (polar p) (polar q), r, p, q} - {t})\n\ngoal (1 subgoal):\n 1. card {proj2_intersection (polar p) (polar q), r, p, q} = 4 \\<and>\n    (\\<forall>pa\\<in>{proj2_intersection (polar p) (polar q), r, p, q}.\n        \\<not> proj2_set_Col\n                ({proj2_intersection (polar p) (polar q), r, p, q} - {pa}))", ".."], ["proof (state)\nthis:\n  proj2_no_3_Col {proj2_intersection (polar p) (polar q), r, p, q}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma statement65_special_case:\n  assumes \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> S\" and \"p \\<noteq> q\" and \"r \\<notin> {p,q}\"\n  shows \"\\<exists> J. is_K2_isometry J\n  \\<and> apply_cltn2 east J = p\n  \\<and> apply_cltn2 west J = q\n  \\<and> apply_cltn2 north J = r\n  \\<and> apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "let ?s = \"proj2_intersection (polar p) (polar q)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "let ?t = \"vector [vector [?s,r,p,q], vector [far_north, north, east, west]]\n    :: proj2^4^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "have \"range (($) (?t$1)) = {?s, r, p, q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           1)) =\n    {proj2_intersection (polar p) (polar q), r, p, q}", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>UNIV.\n           y =\n           vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           1 $\n           x} =\n    {proj2_intersection (polar p) (polar q), r, p, q}", "by (auto simp add: UNIV_4 vector_4)"], ["proof (state)\nthis:\n  range\n   (($) (vector\n          [vector [proj2_intersection (polar p) (polar q), r, p, q],\n           vector [far_north, north, east, west]] $\n         1)) =\n  {proj2_intersection (polar p) (polar q), r, p, q}\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>r \\<in> S\\<close> and \\<open>p \\<noteq> q\\<close> and \\<open>r \\<notin> {p,q}\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n  p \\<noteq> q\n  r \\<notin> {p, q}\n  range\n   (($) (vector\n          [vector [proj2_intersection (polar p) (polar q), r, p, q],\n           vector [far_north, north, east, west]] $\n         1)) =\n  {proj2_intersection (polar p) (polar q), r, p, q}", "have \"proj2_no_3_Col (range (($) (?t$1)))\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n  p \\<noteq> q\n  r \\<notin> {p, q}\n  range\n   (($) (vector\n          [vector [proj2_intersection (polar p) (polar q), r, p, q],\n           vector [far_north, north, east, west]] $\n         1)) =\n  {proj2_intersection (polar p) (polar q), r, p, q}\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col\n     (range\n       (($) (vector\n              [vector [proj2_intersection (polar p) (polar q), r, p, q],\n               vector [far_north, north, east, west]] $\n             1)))", "by (simp add: three_in_S_tangent_intersection_no_3_Col)"], ["proof (state)\nthis:\n  proj2_no_3_Col\n   (range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           1)))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "moreover"], ["proof (state)\nthis:\n  proj2_no_3_Col\n   (range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           1)))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "have \"range (($) (?t$2)) = {far_north, north, east, west}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           2)) =\n    {far_north, north, east, west}", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>UNIV.\n           y =\n           vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           2 $\n           x} =\n    {far_north, north, east, west}", "by (auto simp add: UNIV_4 vector_4)"], ["proof (state)\nthis:\n  range\n   (($) (vector\n          [vector [proj2_intersection (polar p) (polar q), r, p, q],\n           vector [far_north, north, east, west]] $\n         2)) =\n  {far_north, north, east, west}\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with compass_in_S and east_west_distinct and north_not_east_or_west\n     and east_west_tangents_far_north\n     and three_in_S_tangent_intersection_no_3_Col [of east west north]"], ["proof (chain)\npicking this:\n  east \\<in> S\n  west \\<in> S\n  north \\<in> S\n  south \\<in> S\n  east \\<noteq> west\n  north \\<notin> {east, west}\n  proj2_intersection (polar east) (polar west) = far_north\n  \\<lbrakk>east \\<in> S; west \\<in> S; north \\<in> S; east \\<noteq> west;\n   north \\<notin> {east, west}\\<rbrakk>\n  \\<Longrightarrow> proj2_no_3_Col\n                     {proj2_intersection (polar east) (polar west), north,\n                      east, west}\n  range\n   (($) (vector\n          [vector [proj2_intersection (polar p) (polar q), r, p, q],\n           vector [far_north, north, east, west]] $\n         2)) =\n  {far_north, north, east, west}", "have \"proj2_no_3_Col (range (($) (?t$2)))\""], ["proof (prove)\nusing this:\n  east \\<in> S\n  west \\<in> S\n  north \\<in> S\n  south \\<in> S\n  east \\<noteq> west\n  north \\<notin> {east, west}\n  proj2_intersection (polar east) (polar west) = far_north\n  \\<lbrakk>east \\<in> S; west \\<in> S; north \\<in> S; east \\<noteq> west;\n   north \\<notin> {east, west}\\<rbrakk>\n  \\<Longrightarrow> proj2_no_3_Col\n                     {proj2_intersection (polar east) (polar west), north,\n                      east, west}\n  range\n   (($) (vector\n          [vector [proj2_intersection (polar p) (polar q), r, p, q],\n           vector [far_north, north, east, west]] $\n         2)) =\n  {far_north, north, east, west}\n\ngoal (1 subgoal):\n 1. proj2_no_3_Col\n     (range\n       (($) (vector\n              [vector [proj2_intersection (polar p) (polar q), r, p, q],\n               vector [far_north, north, east, west]] $\n             2)))", "by simp"], ["proof (state)\nthis:\n  proj2_no_3_Col\n   (range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           2)))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "ultimately"], ["proof (chain)\npicking this:\n  proj2_no_3_Col\n   (range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           1)))\n  proj2_no_3_Col\n   (range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           2)))", "have \"\\<forall> i. proj2_no_3_Col (range (($) (?t$i)))\""], ["proof (prove)\nusing this:\n  proj2_no_3_Col\n   (range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           1)))\n  proj2_no_3_Col\n   (range\n     (($) (vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           2)))\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       proj2_no_3_Col\n        (range\n          (($) (vector\n                 [vector [proj2_intersection (polar p) (polar q), r, p, q],\n                  vector [far_north, north, east, west]] $\n                i)))", "by (simp add: forall_2)"], ["proof (state)\nthis:\n  \\<forall>i.\n     proj2_no_3_Col\n      (range\n        (($) (vector\n               [vector [proj2_intersection (polar p) (polar q), r, p, q],\n                vector [far_north, north, east, west]] $\n              i)))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"\\<exists> J. \\<forall> j. apply_cltn2 (?t$0$j) J = ?t$1$j\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_no_3_Col\n      (range\n        (($) (vector\n               [vector [proj2_intersection (polar p) (polar q), r, p, q],\n                vector [far_north, north, east, west]] $\n              i)))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       \\<forall>j.\n          apply_cltn2\n           (vector\n             [vector [proj2_intersection (polar p) (polar q), r, p, q],\n              vector [far_north, north, east, west]] $\n            0 $\n            j)\n           J =\n          vector\n           [vector [proj2_intersection (polar p) (polar q), r, p, q],\n            vector [far_north, north, east, west]] $\n          1 $\n          j", "by (rule statement53_existence)"], ["proof (state)\nthis:\n  \\<exists>J.\n     \\<forall>j.\n        apply_cltn2\n         (vector\n           [vector [proj2_intersection (polar p) (polar q), r, p, q],\n            vector [far_north, north, east, west]] $\n          0 $\n          j)\n         J =\n        vector\n         [vector [proj2_intersection (polar p) (polar q), r, p, q],\n          vector [far_north, north, east, west]] $\n        1 $\n        j\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "moreover"], ["proof (state)\nthis:\n  \\<exists>J.\n     \\<forall>j.\n        apply_cltn2\n         (vector\n           [vector [proj2_intersection (polar p) (polar q), r, p, q],\n            vector [far_north, north, east, west]] $\n          0 $\n          j)\n         J =\n        vector\n         [vector [proj2_intersection (polar p) (polar q), r, p, q],\n          vector [far_north, north, east, west]] $\n        1 $\n        j\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "have \"0 = (2::2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = 2", "by simp"], ["proof (state)\nthis:\n  0 = 2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>J.\n     \\<forall>j.\n        apply_cltn2\n         (vector\n           [vector [proj2_intersection (polar p) (polar q), r, p, q],\n            vector [far_north, north, east, west]] $\n          0 $\n          j)\n         J =\n        vector\n         [vector [proj2_intersection (polar p) (polar q), r, p, q],\n          vector [far_north, north, east, west]] $\n        1 $\n        j\n  0 = 2", "obtain J where \"\\<forall> j. apply_cltn2 (?t$2$j) J = ?t$1$j\""], ["proof (prove)\nusing this:\n  \\<exists>J.\n     \\<forall>j.\n        apply_cltn2\n         (vector\n           [vector [proj2_intersection (polar p) (polar q), r, p, q],\n            vector [far_north, north, east, west]] $\n          0 $\n          j)\n         J =\n        vector\n         [vector [proj2_intersection (polar p) (polar q), r, p, q],\n          vector [far_north, north, east, west]] $\n        1 $\n        j\n  0 = 2\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<forall>j.\n           apply_cltn2\n            (vector\n              [vector [proj2_intersection (polar p) (polar q), r, p, q],\n               vector [far_north, north, east, west]] $\n             2 $\n             j)\n            J =\n           vector\n            [vector [proj2_intersection (polar p) (polar q), r, p, q],\n             vector [far_north, north, east, west]] $\n           1 $\n           j \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>j.\n     apply_cltn2\n      (vector\n        [vector [proj2_intersection (polar p) (polar q), r, p, q],\n         vector [far_north, north, east, west]] $\n       2 $\n       j)\n      J =\n     vector\n      [vector [proj2_intersection (polar p) (polar q), r, p, q],\n       vector [far_north, north, east, west]] $\n     1 $\n     j\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"apply_cltn2 (?t$2$1) J = ?t$1$1\"\n     and \"apply_cltn2 (?t$2$2) J = ?t$1$2\"\n     and \"apply_cltn2 (?t$2$3) J = ?t$1$3\"\n     and \"apply_cltn2 (?t$2$4) J = ?t$1$4\""], ["proof (prove)\nusing this:\n  \\<forall>j.\n     apply_cltn2\n      (vector\n        [vector [proj2_intersection (polar p) (polar q), r, p, q],\n         vector [far_north, north, east, west]] $\n       2 $\n       j)\n      J =\n     vector\n      [vector [proj2_intersection (polar p) (polar q), r, p, q],\n       vector [far_north, north, east, west]] $\n     1 $\n     j\n\ngoal (1 subgoal):\n 1. (apply_cltn2\n      (vector\n        [vector [proj2_intersection (polar p) (polar q), r, p, q],\n         vector [far_north, north, east, west]] $\n       2 $\n       1)\n      J =\n     vector\n      [vector [proj2_intersection (polar p) (polar q), r, p, q],\n       vector [far_north, north, east, west]] $\n     1 $\n     1 &&&\n     apply_cltn2\n      (vector\n        [vector [proj2_intersection (polar p) (polar q), r, p, q],\n         vector [far_north, north, east, west]] $\n       2 $\n       2)\n      J =\n     vector\n      [vector [proj2_intersection (polar p) (polar q), r, p, q],\n       vector [far_north, north, east, west]] $\n     1 $\n     2) &&&\n    apply_cltn2\n     (vector\n       [vector [proj2_intersection (polar p) (polar q), r, p, q],\n        vector [far_north, north, east, west]] $\n      2 $\n      3)\n     J =\n    vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    1 $\n    3 &&&\n    apply_cltn2\n     (vector\n       [vector [proj2_intersection (polar p) (polar q), r, p, q],\n        vector [far_north, north, east, west]] $\n      2 $\n      4)\n     J =\n    vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    1 $\n    4", "by simp_all"], ["proof (state)\nthis:\n  apply_cltn2\n   (vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    2 $\n    1)\n   J =\n  vector\n   [vector [proj2_intersection (polar p) (polar q), r, p, q],\n    vector [far_north, north, east, west]] $\n  1 $\n  1\n  apply_cltn2\n   (vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    2 $\n    2)\n   J =\n  vector\n   [vector [proj2_intersection (polar p) (polar q), r, p, q],\n    vector [far_north, north, east, west]] $\n  1 $\n  2\n  apply_cltn2\n   (vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    2 $\n    3)\n   J =\n  vector\n   [vector [proj2_intersection (polar p) (polar q), r, p, q],\n    vector [far_north, north, east, west]] $\n  1 $\n  3\n  apply_cltn2\n   (vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    2 $\n    4)\n   J =\n  vector\n   [vector [proj2_intersection (polar p) (polar q), r, p, q],\n    vector [far_north, north, east, west]] $\n  1 $\n  4\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"apply_cltn2 east J = p\"\n     and \"apply_cltn2 west J = q\"\n     and \"apply_cltn2 north J = r\"\n     and \"apply_cltn2 far_north J = ?s\""], ["proof (prove)\nusing this:\n  apply_cltn2\n   (vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    2 $\n    1)\n   J =\n  vector\n   [vector [proj2_intersection (polar p) (polar q), r, p, q],\n    vector [far_north, north, east, west]] $\n  1 $\n  1\n  apply_cltn2\n   (vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    2 $\n    2)\n   J =\n  vector\n   [vector [proj2_intersection (polar p) (polar q), r, p, q],\n    vector [far_north, north, east, west]] $\n  1 $\n  2\n  apply_cltn2\n   (vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    2 $\n    3)\n   J =\n  vector\n   [vector [proj2_intersection (polar p) (polar q), r, p, q],\n    vector [far_north, north, east, west]] $\n  1 $\n  3\n  apply_cltn2\n   (vector\n     [vector [proj2_intersection (polar p) (polar q), r, p, q],\n      vector [far_north, north, east, west]] $\n    2 $\n    4)\n   J =\n  vector\n   [vector [proj2_intersection (polar p) (polar q), r, p, q],\n    vector [far_north, north, east, west]] $\n  1 $\n  4\n\ngoal (1 subgoal):\n 1. (apply_cltn2 east J = p &&& apply_cltn2 west J = q) &&&\n    apply_cltn2 north J = r &&&\n    apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "by (simp_all add: vector_2 vector_4)"], ["proof (state)\nthis:\n  apply_cltn2 east J = p\n  apply_cltn2 west J = q\n  apply_cltn2 north J = r\n  apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with compass_non_zero"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 east J = p\n  apply_cltn2 west J = q\n  apply_cltn2 north J = r\n  apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "have \"p = proj2_abs (vector [1,0,1] v* cltn2_rep J)\"\n     and \"q = proj2_abs (vector [-1,0,1] v* cltn2_rep J)\"\n     and \"r = proj2_abs (vector [0,1,1] v* cltn2_rep J)\"\n     and \"?s = proj2_abs (vector [0,1,0] v* cltn2_rep J)\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 east J = p\n  apply_cltn2 west J = q\n  apply_cltn2 north J = r\n  apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. (p = proj2_abs (vector [1, 0, 1] v* cltn2_rep J) &&&\n     q = proj2_abs (vector [- 1, 0, 1] v* cltn2_rep J)) &&&\n    r = proj2_abs (vector [0, 1, 1] v* cltn2_rep J) &&&\n    proj2_intersection (polar p) (polar q) =\n    proj2_abs (vector [0, 1, 0] v* cltn2_rep J)", "unfolding compass_defs and far_north_def"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 (proj2_abs (vector [1, 0, 1])) J = p\n  apply_cltn2 (proj2_abs (vector [- 1, 0, 1])) J = q\n  apply_cltn2 (proj2_abs (vector [0, 1, 1])) J = r\n  apply_cltn2 (proj2_abs (vector [0, 1, 0])) J =\n  proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. (p = proj2_abs (vector [1, 0, 1] v* cltn2_rep J) &&&\n     q = proj2_abs (vector [- 1, 0, 1] v* cltn2_rep J)) &&&\n    r = proj2_abs (vector [0, 1, 1] v* cltn2_rep J) &&&\n    proj2_intersection (polar p) (polar q) =\n    proj2_abs (vector [0, 1, 0] v* cltn2_rep J)", "by (simp_all add: apply_cltn2_left_abs)"], ["proof (state)\nthis:\n  p = proj2_abs (vector [1, 0, 1] v* cltn2_rep J)\n  q = proj2_abs (vector [- 1, 0, 1] v* cltn2_rep J)\n  r = proj2_abs (vector [0, 1, 1] v* cltn2_rep J)\n  proj2_intersection (polar p) (polar q) =\n  proj2_abs (vector [0, 1, 0] v* cltn2_rep J)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "let ?N = \"cltn2_rep J ** M ** transpose (cltn2_rep J)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "from M_symmatrix"], ["proof (chain)\npicking this:\n  symmatrix M", "have \"symmatrix ?N\""], ["proof (prove)\nusing this:\n  symmatrix M\n\ngoal (1 subgoal):\n 1. symmatrix\n     (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J))", "by (rule symmatrix_preserve)"], ["proof (state)\nthis:\n  symmatrix\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N$2$1 = ?N$1$2\" and \"?N$3$1 = ?N$1$3\" and \"?N$3$2 = ?N$2$3\""], ["proof (prove)\nusing this:\n  symmatrix\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J))\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 =\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    2 &&&\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    1 =\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 &&&\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    2 =\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3", "unfolding symmatrix_def and transpose_def"], ["proof (prove)\nusing this:\n  (\\<chi>i j.\n      (cltn2_rep J ** M ** (\\<chi>i j. cltn2_rep J $ j $ i)) $ j $ i) =\n  cltn2_rep J ** M ** (\\<chi>i j. cltn2_rep J $ j $ i)\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** (\\<chi>i j. cltn2_rep J $ j $ i)) $ 2 $ 1 =\n    (cltn2_rep J ** M ** (\\<chi>i j. cltn2_rep J $ j $ i)) $ 1 $ 2 &&&\n    (cltn2_rep J ** M ** (\\<chi>i j. cltn2_rep J $ j $ i)) $ 3 $ 1 =\n    (cltn2_rep J ** M ** (\\<chi>i j. cltn2_rep J $ j $ i)) $ 1 $ 3 &&&\n    (cltn2_rep J ** M ** (\\<chi>i j. cltn2_rep J $ j $ i)) $ 3 $ 2 =\n    (cltn2_rep J ** M ** (\\<chi>i j. cltn2_rep J $ j $ i)) $ 2 $ 3", "by (simp_all add: vec_eq_iff)"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  2\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "from compass_non_zero and \\<open>apply_cltn2 east J = p\\<close> and \\<open>p \\<in> S\\<close>\n     and apply_cltn2_abs_in_S [of \"vector [1,0,1]\" J]"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 east J = p\n  p \\<in> S\n  vector [1, 0, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [1, 0, 1])) J \\<in> S) =\n  (vector [1, 0, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [1, 0, 1]) =\n   0)", "have \"(vector [1,0,1] :: real^3) \\<bullet> (?N *v vector [1,0,1]) = 0\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 east J = p\n  p \\<in> S\n  vector [1, 0, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [1, 0, 1])) J \\<in> S) =\n  (vector [1, 0, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [1, 0, 1]) =\n   0)\n\ngoal (1 subgoal):\n 1. vector [1, 0, 1] \\<bullet>\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n     vector [1, 0, 1]) =\n    0", "unfolding east_def"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 (proj2_abs (vector [1, 0, 1])) J = p\n  p \\<in> S\n  vector [1, 0, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [1, 0, 1])) J \\<in> S) =\n  (vector [1, 0, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [1, 0, 1]) =\n   0)\n\ngoal (1 subgoal):\n 1. vector [1, 0, 1] \\<bullet>\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n     vector [1, 0, 1]) =\n    0", "by simp"], ["proof (state)\nthis:\n  vector [1, 0, 1] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [1, 0, 1]) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N$1$1 + ?N$1$3 + ?N$3$1 + ?N$3$3 = 0\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [1, 0, 1]) =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "unfolding inner_vec_def and matrix_vector_mult_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV.\n     vector [1, 0, 1] $ i \\<bullet>\n     (\\<chi>i.\n         \\<Sum>j\\<in>UNIV.\n           (cltn2_rep J ** M **\n            Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n           i $\n           j *\n           vector [1, 0, 1] $ j) $\n     i) =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "by (simp add: sum_3 vector_3)"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N$3$1 = ?N$1$3\\<close>"], ["proof (chain)\npicking this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0", "have \"?N$1$1 + 2 * (?N$1$3) + ?N$3$3 = 0\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 +\n    2 *\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "from compass_non_zero and \\<open>apply_cltn2 west J = q\\<close> and \\<open>q \\<in> S\\<close>\n     and apply_cltn2_abs_in_S [of \"vector [-1,0,1]\" J]"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 west J = q\n  q \\<in> S\n  vector [- 1, 0, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [- 1, 0, 1])) J \\<in> S) =\n  (vector [- 1, 0, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [- 1, 0, 1]) =\n   0)", "have \"(vector [-1,0,1] :: real^3) \\<bullet> (?N *v vector [-1,0,1]) = 0\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 west J = q\n  q \\<in> S\n  vector [- 1, 0, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [- 1, 0, 1])) J \\<in> S) =\n  (vector [- 1, 0, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [- 1, 0, 1]) =\n   0)\n\ngoal (1 subgoal):\n 1. vector [- 1, 0, 1] \\<bullet>\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n     vector [- 1, 0, 1]) =\n    0", "unfolding west_def"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 (proj2_abs (vector [- 1, 0, 1])) J = q\n  q \\<in> S\n  vector [- 1, 0, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [- 1, 0, 1])) J \\<in> S) =\n  (vector [- 1, 0, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [- 1, 0, 1]) =\n   0)\n\ngoal (1 subgoal):\n 1. vector [- 1, 0, 1] \\<bullet>\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n     vector [- 1, 0, 1]) =\n    0", "by simp"], ["proof (state)\nthis:\n  vector [- 1, 0, 1] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [- 1, 0, 1]) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N$1$1 - ?N$1$3 - ?N$3$1 + ?N$3$3 = 0\""], ["proof (prove)\nusing this:\n  vector [- 1, 0, 1] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [- 1, 0, 1]) =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 -\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 -\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "unfolding inner_vec_def and matrix_vector_mult_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV.\n     vector [- 1, 0, 1] $ i \\<bullet>\n     (\\<chi>i.\n         \\<Sum>j\\<in>UNIV.\n           (cltn2_rep J ** M **\n            Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n           i $\n           j *\n           vector [- 1, 0, 1] $ j) $\n     i) =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 -\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 -\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "by (simp add: sum_3 vector_3)"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 -\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 -\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N$3$1 = ?N$1$3\\<close>"], ["proof (chain)\npicking this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 -\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 -\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0", "have \"?N$1$1 - 2 * (?N$1$3) + ?N$3$3 = 0\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 -\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 -\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 -\n    2 *\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 -\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N$1$1 + 2 * (?N$1$3) + ?N$3$3 = 0\\<close>"], ["proof (chain)\npicking this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 -\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0", "have \"?N$1$1 + 2 * (?N$1$3) + ?N$3$3 = ?N$1$1 - 2 * (?N$1$3) + ?N$3$3\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 -\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 +\n    2 *\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 -\n    2 *\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 -\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N$1$3 = 0\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 -\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    3 =\n    0", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N$1$1 + 2 * (?N$1$3) + ?N$3$3 = 0\\<close>"], ["proof (chain)\npicking this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0", "have \"?N$3$3 = - (?N$1$1)\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    - (cltn2_rep J ** M **\n       Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n      1 $\n      1", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "from compass_non_zero and \\<open>apply_cltn2 north J = r\\<close> and \\<open>r \\<in> S\\<close>\n     and apply_cltn2_abs_in_S [of \"vector [0,1,1]\" J]"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 north J = r\n  r \\<in> S\n  vector [0, 1, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [0, 1, 1])) J \\<in> S) =\n  (vector [0, 1, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [0, 1, 1]) =\n   0)", "have \"(vector [0,1,1] :: real^3) \\<bullet> (?N *v vector [0,1,1]) = 0\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 north J = r\n  r \\<in> S\n  vector [0, 1, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [0, 1, 1])) J \\<in> S) =\n  (vector [0, 1, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [0, 1, 1]) =\n   0)\n\ngoal (1 subgoal):\n 1. vector [0, 1, 1] \\<bullet>\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n     vector [0, 1, 1]) =\n    0", "unfolding north_def"], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n  apply_cltn2 (proj2_abs (vector [0, 1, 1])) J = r\n  r \\<in> S\n  vector [0, 1, 1] \\<noteq> 0 \\<Longrightarrow>\n  (apply_cltn2 (proj2_abs (vector [0, 1, 1])) J \\<in> S) =\n  (vector [0, 1, 1] \\<bullet>\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n    vector [0, 1, 1]) =\n   0)\n\ngoal (1 subgoal):\n 1. vector [0, 1, 1] \\<bullet>\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n     vector [0, 1, 1]) =\n    0", "by simp"], ["proof (state)\nthis:\n  vector [0, 1, 1] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [0, 1, 1]) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N$2$2 + ?N$2$3 + ?N$3$2 + ?N$3$3 = 0\""], ["proof (prove)\nusing this:\n  vector [0, 1, 1] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [0, 1, 1]) =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    2 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    2 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "unfolding inner_vec_def and matrix_vector_mult_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV.\n     vector [0, 1, 1] $ i \\<bullet>\n     (\\<chi>i.\n         \\<Sum>j\\<in>UNIV.\n           (cltn2_rep J ** M **\n            Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n           i $\n           j *\n           vector [0, 1, 1] $ j) $\n     i) =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    2 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    2 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "by (simp add: sum_3 vector_3)"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N$3$2 = ?N$2$3\\<close>"], ["proof (chain)\npicking this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0", "have \"?N$2$2 + 2 * (?N$2$3) + ?N$3$3 = 0\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    2 +\n    2 *\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    3 $\n    3 =\n    0", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "have \"proj2_incident ?s (polar p)\" and \"proj2_incident ?s (polar q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_intersection (polar p) (polar q)) (polar p) &&&\n    proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)", "by (rule proj2_intersection_incident)+"], ["proof (state)\nthis:\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "from compass_non_zero"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0", "have \"vector [1,0,1] v* cltn2_rep J \\<noteq> 0\"\n     and \"vector [-1,0,1] v* cltn2_rep J \\<noteq> 0\"\n     and \"vector [0,1,0] v* cltn2_rep J \\<noteq> 0\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] \\<noteq> 0\n  vector [- 1, 0, 1] \\<noteq> 0\n  vector [0, 1, 1] \\<noteq> 0\n  vector [0, - 1, 1] \\<noteq> 0\n  vector [0, 1, 0] \\<noteq> 0\n  vector [1, 0, 0] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. vector [1, 0, 1] v* cltn2_rep J \\<noteq> 0 &&&\n    vector [- 1, 0, 1] v* cltn2_rep J \\<noteq> 0 &&&\n    vector [0, 1, 0] v* cltn2_rep J \\<noteq> 0", "by (simp_all add: non_zero_mult_rep_non_zero)"], ["proof (state)\nthis:\n  vector [1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  vector [- 1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  vector [0, 1, 0] v* cltn2_rep J \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "from \\<open>vector [1,0,1] v* cltn2_rep J \\<noteq> 0\\<close>\n     and \\<open>vector [-1,0,1] v* cltn2_rep J \\<noteq> 0\\<close>\n     and \\<open>p = proj2_abs (vector [1,0,1] v* cltn2_rep J)\\<close>\n     and \\<open>q = proj2_abs (vector [-1,0,1] v* cltn2_rep J)\\<close>"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  vector [- 1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  p = proj2_abs (vector [1, 0, 1] v* cltn2_rep J)\n  q = proj2_abs (vector [- 1, 0, 1] v* cltn2_rep J)", "have \"polar p = proj2_line_abs (M *v (vector [1,0,1] v* cltn2_rep J))\"\n     and \"polar q = proj2_line_abs (M *v (vector [-1,0,1] v* cltn2_rep J))\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  vector [- 1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  p = proj2_abs (vector [1, 0, 1] v* cltn2_rep J)\n  q = proj2_abs (vector [- 1, 0, 1] v* cltn2_rep J)\n\ngoal (1 subgoal):\n 1. polar p = proj2_line_abs (M *v (vector [1, 0, 1] v* cltn2_rep J)) &&&\n    polar q = proj2_line_abs (M *v (vector [- 1, 0, 1] v* cltn2_rep J))", "by (simp_all add: polar_abs)"], ["proof (state)\nthis:\n  polar p = proj2_line_abs (M *v (vector [1, 0, 1] v* cltn2_rep J))\n  polar q = proj2_line_abs (M *v (vector [- 1, 0, 1] v* cltn2_rep J))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "from \\<open>vector [1,0,1] v* cltn2_rep J \\<noteq> 0\\<close>\n     and \\<open>vector [-1,0,1] v* cltn2_rep J \\<noteq> 0\\<close>\n     and M_invertible"], ["proof (chain)\npicking this:\n  vector [1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  vector [- 1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  invertible M", "have \"M *v (vector [1,0,1] v* cltn2_rep J) \\<noteq> 0\"\n     and \"M *v (vector [-1,0,1] v* cltn2_rep J) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  vector [1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  vector [- 1, 0, 1] v* cltn2_rep J \\<noteq> 0\n  invertible M\n\ngoal (1 subgoal):\n 1. M *v (vector [1, 0, 1] v* cltn2_rep J) \\<noteq> 0 &&&\n    M *v (vector [- 1, 0, 1] v* cltn2_rep J) \\<noteq> 0", "by (simp_all add: invertible_times_non_zero)"], ["proof (state)\nthis:\n  M *v (vector [1, 0, 1] v* cltn2_rep J) \\<noteq> 0\n  M *v (vector [- 1, 0, 1] v* cltn2_rep J) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>vector [0,1,0] v* cltn2_rep J \\<noteq> 0\\<close>\n     and \\<open>polar p = proj2_line_abs (M *v (vector [1,0,1] v* cltn2_rep J))\\<close>\n     and \\<open>polar q = proj2_line_abs (M *v (vector [-1,0,1] v* cltn2_rep J))\\<close>\n     and \\<open>?s = proj2_abs (vector [0,1,0] v* cltn2_rep J)\\<close>"], ["proof (chain)\npicking this:\n  vector [0, 1, 0] v* cltn2_rep J \\<noteq> 0\n  polar p = proj2_line_abs (M *v (vector [1, 0, 1] v* cltn2_rep J))\n  polar q = proj2_line_abs (M *v (vector [- 1, 0, 1] v* cltn2_rep J))\n  proj2_intersection (polar p) (polar q) =\n  proj2_abs (vector [0, 1, 0] v* cltn2_rep J)\n  M *v (vector [1, 0, 1] v* cltn2_rep J) \\<noteq> 0\n  M *v (vector [- 1, 0, 1] v* cltn2_rep J) \\<noteq> 0", "have \"proj2_incident ?s (polar p)\n     \\<longleftrightarrow> (vector [0,1,0] v* cltn2_rep J)\n     \\<bullet> (M *v (vector [1,0,1] v* cltn2_rep J)) = 0\"\n     and \"proj2_incident ?s (polar q)\n     \\<longleftrightarrow> (vector [0,1,0] v* cltn2_rep J)\n     \\<bullet> (M *v (vector [-1,0,1] v* cltn2_rep J)) = 0\""], ["proof (prove)\nusing this:\n  vector [0, 1, 0] v* cltn2_rep J \\<noteq> 0\n  polar p = proj2_line_abs (M *v (vector [1, 0, 1] v* cltn2_rep J))\n  polar q = proj2_line_abs (M *v (vector [- 1, 0, 1] v* cltn2_rep J))\n  proj2_intersection (polar p) (polar q) =\n  proj2_abs (vector [0, 1, 0] v* cltn2_rep J)\n  M *v (vector [1, 0, 1] v* cltn2_rep J) \\<noteq> 0\n  M *v (vector [- 1, 0, 1] v* cltn2_rep J) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. proj2_incident (proj2_intersection (polar p) (polar q)) (polar p) =\n    ((vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n     (M *v (vector [1, 0, 1] v* cltn2_rep J)) =\n     0) &&&\n    proj2_incident (proj2_intersection (polar p) (polar q)) (polar q) =\n    ((vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n     (M *v (vector [- 1, 0, 1] v* cltn2_rep J)) =\n     0)", "by (simp_all add: proj2_incident_abs)"], ["proof (state)\nthis:\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p) =\n  ((vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n   (M *v (vector [1, 0, 1] v* cltn2_rep J)) =\n   0)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q) =\n  ((vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n   (M *v (vector [- 1, 0, 1] v* cltn2_rep J)) =\n   0)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>proj2_incident ?s (polar p)\\<close> and \\<open>proj2_incident ?s (polar q)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p) =\n  ((vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n   (M *v (vector [1, 0, 1] v* cltn2_rep J)) =\n   0)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q) =\n  ((vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n   (M *v (vector [- 1, 0, 1] v* cltn2_rep J)) =\n   0)", "have \"(vector [0,1,0] v* cltn2_rep J)\n     \\<bullet> (M *v (vector [1,0,1] v* cltn2_rep J)) = 0\"\n     and \"(vector [0,1,0] v* cltn2_rep J)\n     \\<bullet> (M *v (vector [-1,0,1] v* cltn2_rep J)) = 0\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar p) =\n  ((vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n   (M *v (vector [1, 0, 1] v* cltn2_rep J)) =\n   0)\n  proj2_incident (proj2_intersection (polar p) (polar q)) (polar q) =\n  ((vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n   (M *v (vector [- 1, 0, 1] v* cltn2_rep J)) =\n   0)\n\ngoal (1 subgoal):\n 1. (vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n    (M *v (vector [1, 0, 1] v* cltn2_rep J)) =\n    0 &&&\n    (vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n    (M *v (vector [- 1, 0, 1] v* cltn2_rep J)) =\n    0", "by simp_all"], ["proof (state)\nthis:\n  (vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n  (M *v (vector [1, 0, 1] v* cltn2_rep J)) =\n  0\n  (vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n  (M *v (vector [- 1, 0, 1] v* cltn2_rep J)) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"vector [0,1,0] \\<bullet> (?N *v vector [1,0,1]) = 0\"\n     and \"vector [0,1,0] \\<bullet> (?N *v vector [-1,0,1]) = 0\""], ["proof (prove)\nusing this:\n  (vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n  (M *v (vector [1, 0, 1] v* cltn2_rep J)) =\n  0\n  (vector [0, 1, 0] v* cltn2_rep J) \\<bullet>\n  (M *v (vector [- 1, 0, 1] v* cltn2_rep J)) =\n  0\n\ngoal (1 subgoal):\n 1. vector [0, 1, 0] \\<bullet>\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n     vector [1, 0, 1]) =\n    0 &&&\n    vector [0, 1, 0] \\<bullet>\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n     vector [- 1, 0, 1]) =\n    0", "by (simp_all add: dot_lmul_matrix matrix_vector_mul_assoc [symmetric])"], ["proof (state)\nthis:\n  vector [0, 1, 0] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [1, 0, 1]) =\n  0\n  vector [0, 1, 0] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [- 1, 0, 1]) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N$2$1 + ?N$2$3 = 0\" and \"-(?N$2$1) + ?N$2$3 = 0\""], ["proof (prove)\nusing this:\n  vector [0, 1, 0] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [1, 0, 1]) =\n  0\n  vector [0, 1, 0] \\<bullet>\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) *v\n   vector [- 1, 0, 1]) =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 =\n    0 &&&\n    - (cltn2_rep J ** M **\n       Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n      2 $\n      1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 =\n    0", "unfolding inner_vec_def and matrix_vector_mult_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>UNIV.\n     vector [0, 1, 0] $ i \\<bullet>\n     (\\<chi>i.\n         \\<Sum>j\\<in>UNIV.\n           (cltn2_rep J ** M **\n            Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n           i $\n           j *\n           vector [1, 0, 1] $ j) $\n     i) =\n  0\n  (\\<Sum>i\\<in>UNIV.\n     vector [0, 1, 0] $ i \\<bullet>\n     (\\<chi>i.\n         \\<Sum>j\\<in>UNIV.\n           (cltn2_rep J ** M **\n            Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n           i $\n           j *\n           vector [- 1, 0, 1] $ j) $\n     i) =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 =\n    0 &&&\n    - (cltn2_rep J ** M **\n       Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n      2 $\n      1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 =\n    0", "by (simp_all add: sum_3 vector_3)"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N$2$1 + ?N$2$3 = -(?N$2$1) + ?N$2$3\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 =\n    - (cltn2_rep J ** M **\n       Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n      2 $\n      1 +\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N$2$1 = 0\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    1 =\n    0", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N$2$1 + ?N$2$3 = 0\\<close>"], ["proof (chain)\npicking this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  0", "have \"?N$2$3 = 0\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    3 =\n    0", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N$2$2 + 2 * (?N$2$3) + ?N$3$3 = 0\\<close> and \\<open>?N$3$3 = -(?N$1$1)\\<close>"], ["proof (chain)\npicking this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0", "have \"?N$2$2 = ?N$1$1\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 +\n  2 *\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 +\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    2 $\n    2 =\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1", "by simp"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N$1$3 = 0\\<close> and \\<open>?N$2$1 = ?N$1$2\\<close> and \\<open>?N$1$3 = 0\\<close>\n     and \\<open>?N$2$1 = 0\\<close> and \\<open>?N$2$2 = ?N$1$1\\<close> and \\<open>?N$2$3 = 0\\<close>\n     and \\<open>?N$3$1 = ?N$1$3\\<close> and \\<open>?N$3$2 = ?N$2$3\\<close> and \\<open>?N$3$3 = -(?N$1$1)\\<close>"], ["proof (chain)\npicking this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  2\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1", "have \"?N = (?N$1$1) *\\<^sub>R M\""], ["proof (prove)\nusing this:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  2\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  - (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1\n\ngoal (1 subgoal):\n 1. cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) =\n    (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 *\\<^sub>R\n    M", "unfolding M_def"], ["proof (prove)\nusing this:\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  2\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3 =\n  0\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  1 =\n  0\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 =\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3 =\n  0\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  1 =\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  3\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  2 =\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  3\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  3 $\n  3 =\n  - (cltn2_rep J **\n     vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n     Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  2 $\n  2 =\n  (cltn2_rep J **\n   vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n   Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1\n\ngoal (1 subgoal):\n 1. cltn2_rep J **\n    vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n    Finite_Cartesian_Product.transpose (cltn2_rep J) =\n    (cltn2_rep J **\n     vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]] **\n     Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 *\\<^sub>R\n    vector [vector [1, 0, 0], vector [0, 1, 0], vector [0, 0, - 1]]", "by (simp add: vec_eq_iff vector_3 forall_3)"], ["proof (state)\nthis:\n  cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 *\\<^sub>R\n  M\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "have \"invertible (cltn2_rep J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible (cltn2_rep J)", "by (rule cltn2_rep_invertible)"], ["proof (state)\nthis:\n  invertible (cltn2_rep J)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with M_invertible"], ["proof (chain)\npicking this:\n  invertible M\n  invertible (cltn2_rep J)", "have \"invertible ?N\""], ["proof (prove)\nusing this:\n  invertible M\n  invertible (cltn2_rep J)\n\ngoal (1 subgoal):\n 1. invertible\n     (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J))", "by (simp add: invertible_mult transpose_invertible)"], ["proof (state)\nthis:\n  invertible\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"?N \\<noteq> 0\""], ["proof (prove)\nusing this:\n  invertible\n   (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J))\n\ngoal (1 subgoal):\n 1. cltn2_rep J ** M **\n    Finite_Cartesian_Product.transpose (cltn2_rep J) \\<noteq>\n    0", "by (auto simp add: zero_not_invertible)"], ["proof (state)\nthis:\n  cltn2_rep J ** M **\n  Finite_Cartesian_Product.transpose (cltn2_rep J) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N = (?N$1$1) *\\<^sub>R M\\<close>"], ["proof (chain)\npicking this:\n  cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 *\\<^sub>R\n  M\n  cltn2_rep J ** M **\n  Finite_Cartesian_Product.transpose (cltn2_rep J) \\<noteq>\n  0", "have \"?N$1$1 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 *\\<^sub>R\n  M\n  cltn2_rep J ** M **\n  Finite_Cartesian_Product.transpose (cltn2_rep J) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n    1 $\n    1 \\<noteq>\n    0", "by auto"], ["proof (state)\nthis:\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>?N = (?N$1$1) *\\<^sub>R M\\<close>"], ["proof (chain)\npicking this:\n  cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 *\\<^sub>R\n  M\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 \\<noteq>\n  0", "have \"is_K2_isometry (cltn2_abs (cltn2_rep J))\""], ["proof (prove)\nusing this:\n  cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J) =\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 *\\<^sub>R\n  M\n  (cltn2_rep J ** M ** Finite_Cartesian_Product.transpose (cltn2_rep J)) $\n  1 $\n  1 \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_abs (cltn2_rep J))", "by (simp add: J_M_J_transpose_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_abs (cltn2_rep J))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "hence \"is_K2_isometry J\""], ["proof (prove)\nusing this:\n  is_K2_isometry (cltn2_abs (cltn2_rep J))\n\ngoal (1 subgoal):\n 1. is_K2_isometry J", "by (simp add: cltn2_abs_rep)"], ["proof (state)\nthis:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "with \\<open>apply_cltn2 east J = p\\<close>\n     and \\<open>apply_cltn2 west J = q\\<close>\n     and \\<open>apply_cltn2 north J = r\\<close>\n     and \\<open>apply_cltn2 far_north J = ?s\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 east J = p\n  apply_cltn2 west J = q\n  apply_cltn2 north J = r\n  apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\n  is_K2_isometry J", "show \"\\<exists> J. is_K2_isometry J\n     \\<and> apply_cltn2 east J = p\n     \\<and> apply_cltn2 west J = q\n     \\<and> apply_cltn2 north J = r\n     \\<and> apply_cltn2 far_north J = ?s\""], ["proof (prove)\nusing this:\n  apply_cltn2 east J = p\n  apply_cltn2 west J = q\n  apply_cltn2 north J = r\n  apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 east J = p \\<and>\n       apply_cltn2 west J = q \\<and>\n       apply_cltn2 north J = r \\<and>\n       apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)", "by auto"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 east J = p \\<and>\n     apply_cltn2 west J = q \\<and>\n     apply_cltn2 north J = r \\<and>\n     apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma statement66_existence:\n  assumes \"a1 \\<in> K2\" and \"a2 \\<in> K2\" and \"p1 \\<in> S\" and \"p2 \\<in> S\"\n  shows \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?a = \"vector [a1,a2] :: proj2^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>a1 \\<in> K2\\<close> and \\<open>a2 \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  a1 \\<in> hyp2\n  a2 \\<in> hyp2", "have \"\\<forall> i. ?a$i \\<in> K2\""], ["proof (prove)\nusing this:\n  a1 \\<in> hyp2\n  a2 \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<forall>i. vector [a1, a2] $ i \\<in> hyp2", "by (simp add: forall_2)"], ["proof (state)\nthis:\n  \\<forall>i. vector [a1, a2] $ i \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?p = \"vector [p1,p2] :: proj2^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>p1 \\<in> S\\<close> and \\<open>p2 \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p1 \\<in> S\n  p2 \\<in> S", "have \"\\<forall> i. ?p$i \\<in> S\""], ["proof (prove)\nusing this:\n  p1 \\<in> S\n  p2 \\<in> S\n\ngoal (1 subgoal):\n 1. \\<forall>i. vector [p1, p2] $ i \\<in> S", "by (simp add: forall_2)"], ["proof (state)\nthis:\n  \\<forall>i. vector [p1, p2] $ i \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?l = \"\\<chi> i. proj2_line_through (?a$i) (?p$i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "have \"\\<forall> i. proj2_incident (?a$i) (?l$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       proj2_incident (vector [a1, a2] $ i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "by (simp add: proj2_line_through_incident)"], ["proof (state)\nthis:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "hence \"proj2_incident (?a$1) (?l$1)\" and \"proj2_incident (?a$2) (?l$2)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. proj2_incident (vector [a1, a2] $ 1)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      1) &&&\n    proj2_incident (vector [a1, a2] $ 2)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      2)", "by fast+"], ["proof (state)\nthis:\n  proj2_incident (vector [a1, a2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n  proj2_incident (vector [a1, a2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "have \"\\<forall> i. proj2_incident (?p$i) (?l$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       proj2_incident (vector [p1, p2] $ i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "by (simp add: proj2_line_through_incident)"], ["proof (state)\nthis:\n  \\<forall>i.\n     proj2_incident (vector [p1, p2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "hence \"proj2_incident (?p$1) (?l$1)\" and \"proj2_incident (?p$2) (?l$2)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_incident (vector [p1, p2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. proj2_incident (vector [p1, p2] $ 1)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      1) &&&\n    proj2_incident (vector [p1, p2] $ 2)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      2)", "by fast+"], ["proof (state)\nthis:\n  proj2_incident (vector [p1, p2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n  proj2_incident (vector [p1, p2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?q = \"\\<chi> i. \\<some> qi. qi \\<noteq> ?p$i \\<and> qi \\<in> S \\<and> proj2_incident qi (?l$i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "have \"\\<forall> i. ?q$i \\<noteq> ?p$i \\<and> ?q$i \\<in> S \\<and> proj2_incident (?q$i) (?l$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<noteq>\n       vector [p1, p2] $ i \\<and>\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME qi.\n                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                qi \\<in> S \\<and>\n                proj2_incident qi\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       (vector [p1, p2] $ i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<noteq>\n       vector [p1, p2] $ i \\<and>\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME qi.\n                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                qi \\<in> S \\<and>\n                proj2_incident qi\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       (vector [p1, p2] $ i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<noteq>\n       vector [p1, p2] $ i \\<and>\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME qi.\n                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                qi \\<in> S \\<and>\n                proj2_incident qi\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       (vector [p1, p2] $ i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "from \\<open>\\<forall> i. ?a$i \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i. vector [a1, a2] $ i \\<in> hyp2", "have \"?a$i \\<in> K2\""], ["proof (prove)\nusing this:\n  \\<forall>i. vector [a1, a2] $ i \\<in> hyp2\n\ngoal (1 subgoal):\n 1. vector [a1, a2] $ i \\<in> hyp2", ".."], ["proof (state)\nthis:\n  vector [a1, a2] $ i \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<noteq>\n       vector [p1, p2] $ i \\<and>\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME qi.\n                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                qi \\<in> S \\<and>\n                proj2_incident qi\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       (vector [p1, p2] $ i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "from \\<open>\\<forall> i. proj2_incident (?a$i) (?l$i)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)", "have \"proj2_incident (?a$i) (?l$i)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. proj2_incident (vector [a1, a2] $ i)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      i)", ".."], ["proof (state)\nthis:\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<noteq>\n       vector [p1, p2] $ i \\<and>\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME qi.\n                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                qi \\<in> S \\<and>\n                proj2_incident qi\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       (vector [p1, p2] $ i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "with \\<open>?a$i \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  vector [a1, a2] $ i \\<in> hyp2\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    i)", "have \"\\<exists> qi. qi \\<noteq> ?p$i \\<and> qi \\<in> S \\<and> proj2_incident qi (?l$i)\""], ["proof (prove)\nusing this:\n  vector [a1, a2] $ i \\<in> hyp2\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    i)\n\ngoal (1 subgoal):\n 1. \\<exists>qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "by (rule line_through_K2_intersect_S_again)"], ["proof (state)\nthis:\n  \\<exists>qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<noteq>\n       vector [p1, p2] $ i \\<and>\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME qi.\n                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                qi \\<in> S \\<and>\n                proj2_incident qi\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       (vector [p1, p2] $ i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)", "with someI_ex [of \"\\<lambda> qi. qi \\<noteq> ?p$i \\<and> qi \\<in> S \\<and> proj2_incident qi (?l$i)\"]"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<noteq> vector [p1, p2] $ i \\<and>\n     x \\<in> S \\<and>\n     proj2_incident x\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i) \\<Longrightarrow>\n  (SOME x.\n      x \\<noteq> vector [p1, p2] $ i \\<and>\n      x \\<in> S \\<and>\n      proj2_incident x\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) \\<noteq>\n  vector [p1, p2] $ i \\<and>\n  (SOME x.\n      x \\<noteq> vector [p1, p2] $ i \\<and>\n      x \\<in> S \\<and>\n      proj2_incident x\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i))\n  \\<in> S \\<and>\n  proj2_incident\n   (SOME x.\n       x \\<noteq> vector [p1, p2] $ i \\<and>\n       x \\<in> S \\<and>\n       proj2_incident x\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    i)\n  \\<exists>qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)", "show \"?q$i \\<noteq> ?p$i \\<and> ?q$i \\<in> S \\<and> proj2_incident (?q$i) (?l$i)\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<noteq> vector [p1, p2] $ i \\<and>\n     x \\<in> S \\<and>\n     proj2_incident x\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i) \\<Longrightarrow>\n  (SOME x.\n      x \\<noteq> vector [p1, p2] $ i \\<and>\n      x \\<in> S \\<and>\n      proj2_incident x\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) \\<noteq>\n  vector [p1, p2] $ i \\<and>\n  (SOME x.\n      x \\<noteq> vector [p1, p2] $ i \\<and>\n      x \\<in> S \\<and>\n      proj2_incident x\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i))\n  \\<in> S \\<and>\n  proj2_incident\n   (SOME x.\n       x \\<noteq> vector [p1, p2] $ i \\<and>\n       x \\<in> S \\<and>\n       proj2_incident x\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    i)\n  \\<exists>qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i \\<noteq>\n    vector [p1, p2] $ i \\<and>\n    (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i\n    \\<in> S \\<and>\n    proj2_incident\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      i)", "by simp"], ["proof (state)\nthis:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<noteq>\n  vector [p1, p2] $ i \\<and>\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S \\<and>\n  proj2_incident\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<noteq>\n     vector [p1, p2] $ i \\<and>\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "hence \"?q$1 \\<noteq> ?p$1\" and \"proj2_incident (?q$1) (?l$1)\"\n    and \"proj2_incident (?q$2) (?l$2)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<noteq>\n     vector [p1, p2] $ i \\<and>\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1 \\<noteq>\n    vector [p1, p2] $ 1 &&&\n    proj2_incident\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      1)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      1) &&&\n    proj2_incident\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      2)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      2)", "by fast+"], ["proof (state)\nthis:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  1 \\<noteq>\n  vector [p1, p2] $ 1\n  proj2_incident\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?r = \"\\<chi> i. proj2_intersection (polar (?q$i)) (polar (?p$i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?m = \"\\<chi> i. proj2_line_through (?a$i) (?r$i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "have \"\\<forall> i. proj2_incident (?a$i) (?m$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       proj2_incident (vector [a1, a2] $ i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "by (simp add: proj2_line_through_incident)"], ["proof (state)\nthis:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "hence \"proj2_incident (?a$1) (?m$1)\" and \"proj2_incident (?a$2) (?m$2)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. proj2_incident (vector [a1, a2] $ 1)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      1) &&&\n    proj2_incident (vector [a1, a2] $ 2)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      2)", "by fast+"], ["proof (state)\nthis:\n  proj2_incident (vector [a1, a2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n  proj2_incident (vector [a1, a2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "have \"\\<forall> i. proj2_incident (?r$i) (?m$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       proj2_incident\n        ((\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "by (simp add: proj2_line_through_incident)"], ["proof (state)\nthis:\n  \\<forall>i.\n     proj2_incident\n      ((\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "hence \"proj2_incident (?r$1) (?m$1)\" and \"proj2_incident (?r$2) (?m$2)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_incident\n      ((\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. proj2_incident\n     ((\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      1)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      1) &&&\n    proj2_incident\n     ((\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      2)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      2)", "by fast+"], ["proof (state)\nthis:\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?s = \"\\<chi> i. \\<some> si. si \\<noteq> ?r$i \\<and> si \\<in> S \\<and> proj2_incident si (?m$i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "have \"\\<forall> i. ?s$i \\<noteq> ?r$i \\<and> ?s$i \\<in> S \\<and> proj2_incident (?s$i) (?m$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME si.\n                si \\<noteq>\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i \\<and>\n                si \\<in> S \\<and>\n                proj2_incident si\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME si.\n                si \\<noteq>\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i \\<and>\n                si \\<in> S \\<and>\n                proj2_incident si\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME si.\n                si \\<noteq>\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i \\<and>\n                si \\<in> S \\<and>\n                proj2_incident si\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "from \\<open>\\<forall> i. ?a$i \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i. vector [a1, a2] $ i \\<in> hyp2", "have \"?a$i \\<in> K2\""], ["proof (prove)\nusing this:\n  \\<forall>i. vector [a1, a2] $ i \\<in> hyp2\n\ngoal (1 subgoal):\n 1. vector [a1, a2] $ i \\<in> hyp2", ".."], ["proof (state)\nthis:\n  vector [a1, a2] $ i \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME si.\n                si \\<noteq>\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i \\<and>\n                si \\<in> S \\<and>\n                proj2_incident si\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "from \\<open>\\<forall> i. proj2_incident (?a$i) (?m$i)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)", "have \"proj2_incident (?a$i) (?m$i)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. proj2_incident (vector [a1, a2] $ i)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      i)", ".."], ["proof (state)\nthis:\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME si.\n                si \\<noteq>\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i \\<and>\n                si \\<in> S \\<and>\n                proj2_incident si\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "with \\<open>?a$i \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  vector [a1, a2] $ i \\<in> hyp2\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)", "have \"\\<exists> si. si \\<noteq> ?r$i \\<and> si \\<in> S \\<and> proj2_incident si (?m$i)\""], ["proof (prove)\nusing this:\n  vector [a1, a2] $ i \\<in> hyp2\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n\ngoal (1 subgoal):\n 1. \\<exists>si.\n       si \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       si \\<in> S \\<and>\n       proj2_incident si\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "by (rule line_through_K2_intersect_S_again)"], ["proof (state)\nthis:\n  \\<exists>si.\n     si \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     si \\<in> S \\<and>\n     proj2_incident si\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i\n       \\<in> S \\<and>\n       proj2_incident\n        ((\\<chi>i.\n             SOME si.\n                si \\<noteq>\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i \\<and>\n                si \\<in> S \\<and>\n                proj2_incident si\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i)) $\n         i)\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i)", "with someI_ex [of \"\\<lambda> si. si \\<noteq> ?r$i \\<and> si \\<in> S \\<and> proj2_incident si (?m$i)\"]"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     x \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     x \\<in> S \\<and>\n     proj2_incident x\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i) \\<Longrightarrow>\n  (SOME x.\n      x \\<noteq>\n      (\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      i \\<and>\n      x \\<in> S \\<and>\n      proj2_incident x\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             ((\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i)) $\n        i)) \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i \\<and>\n  (SOME x.\n      x \\<noteq>\n      (\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      i \\<and>\n      x \\<in> S \\<and>\n      proj2_incident x\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             ((\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i)) $\n        i))\n  \\<in> S \\<and>\n  proj2_incident\n   (SOME x.\n       x \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       x \\<in> S \\<and>\n       proj2_incident x\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  \\<exists>si.\n     si \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     si \\<in> S \\<and>\n     proj2_incident si\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)", "show \"?s$i \\<noteq> ?r$i \\<and> ?s$i \\<in> S \\<and> proj2_incident (?s$i) (?m$i)\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     x \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     x \\<in> S \\<and>\n     proj2_incident x\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i) \\<Longrightarrow>\n  (SOME x.\n      x \\<noteq>\n      (\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      i \\<and>\n      x \\<in> S \\<and>\n      proj2_incident x\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             ((\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i)) $\n        i)) \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i \\<and>\n  (SOME x.\n      x \\<noteq>\n      (\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      i \\<and>\n      x \\<in> S \\<and>\n      proj2_incident x\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             ((\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i)) $\n        i))\n  \\<in> S \\<and>\n  proj2_incident\n   (SOME x.\n       x \\<noteq>\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i \\<and>\n       x \\<in> S \\<and>\n       proj2_incident x\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  \\<exists>si.\n     si \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     si \\<in> S \\<and>\n     proj2_incident si\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i \\<noteq>\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i \\<and>\n    (\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i\n    \\<in> S \\<and>\n    proj2_incident\n     ((\\<chi>i.\n          SOME si.\n             si \\<noteq>\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i \\<and>\n             si \\<in> S \\<and>\n             proj2_incident si\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    ((\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i)) $\n               i)) $\n      i)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      i)", "by simp"], ["proof (state)\nthis:\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i \\<and>\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i\n  \\<in> S \\<and>\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "hence \"?s$1 \\<noteq> ?r$1\" and \"proj2_incident (?s$1) (?m$1)\"\n    and \"proj2_incident (?s$2) (?m$2)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1 \\<noteq>\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1 &&&\n    proj2_incident\n     ((\\<chi>i.\n          SOME si.\n             si \\<noteq>\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i \\<and>\n             si \\<in> S \\<and>\n             proj2_incident si\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    ((\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i)) $\n               i)) $\n      1)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      1) &&&\n    proj2_incident\n     ((\\<chi>i.\n          SOME si.\n             si \\<noteq>\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i \\<and>\n             si \\<in> S \\<and>\n             proj2_incident si\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    ((\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i)) $\n               i)) $\n      2)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      2)", "by fast+"], ["proof (state)\nthis:\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  1 \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  1\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "have \"\\<forall> i . \\<forall> u. proj2_incident u (?m$i) \\<longrightarrow> \\<not> (u = ?p$i \\<or> u = ?q$i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i u.\n       proj2_incident u\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              ((\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i)) $\n         i) \\<longrightarrow>\n       \\<not> (u = vector [p1, p2] $ i \\<or>\n               u =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i)", "proof standard+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "fix i :: 2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "fix u :: proj2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"proj2_incident u (?m$i)\""], ["proof (state)\nthis:\n  proj2_incident u\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"u = ?p$i \\<or> u = ?q$i\""], ["proof (state)\nthis:\n  u = vector [p1, p2] $ i \\<or>\n  u =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>\\<forall> i. ?p$i \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i. vector [p1, p2] $ i \\<in> S", "have \"?p$i \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>i. vector [p1, p2] $ i \\<in> S\n\ngoal (1 subgoal):\n 1. vector [p1, p2] $ i \\<in> S", ".."], ["proof (state)\nthis:\n  vector [p1, p2] $ i \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>\\<forall> i. ?q$i \\<noteq> ?p$i \\<and> ?q$i \\<in> S \\<and> proj2_incident (?q$i) (?l$i)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<noteq>\n     vector [p1, p2] $ i \\<and>\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)", "have \"?q$i \\<noteq> ?p$i\" and \"?q$i \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<noteq>\n     vector [p1, p2] $ i \\<and>\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i \\<noteq>\n    vector [p1, p2] $ i &&&\n    (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i\n    \\<in> S", "by simp_all"], ["proof (state)\nthis:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<noteq>\n  vector [p1, p2] $ i\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>?p$i \\<in> S\\<close> and \\<open>?q$i \\<in> S\\<close> and \\<open>u = ?p$i \\<or> u = ?q$i\\<close>"], ["proof (chain)\npicking this:\n  vector [p1, p2] $ i \\<in> S\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S\n  u = vector [p1, p2] $ i \\<or>\n  u =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i", "have \"u \\<in> S\""], ["proof (prove)\nusing this:\n  vector [p1, p2] $ i \\<in> S\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S\n  u = vector [p1, p2] $ i \\<or>\n  u =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n\ngoal (1 subgoal):\n 1. u \\<in> S", "by auto"], ["proof (state)\nthis:\n  u \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"proj2_incident u (polar u)\""], ["proof (prove)\nusing this:\n  u \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_incident u (polar u)", "by (simp add: incident_own_polar_in_S)"], ["proof (state)\nthis:\n  proj2_incident u (polar u)\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "have \"proj2_incident (?r$i) (polar (?p$i))\"\n      and \"proj2_incident (?r$i) (polar (?q$i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident\n     ((\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      i)\n     (polar (vector [p1, p2] $ i)) &&&\n    proj2_incident\n     ((\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      i)\n     (polar\n       ((\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i))", "by (simp_all add: proj2_intersection_incident)"], ["proof (state)\nthis:\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar (vector [p1, p2] $ i))\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i))\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>u = ?p$i \\<or> u = ?q$i\\<close>"], ["proof (chain)\npicking this:\n  u = vector [p1, p2] $ i \\<or>\n  u =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar (vector [p1, p2] $ i))\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i))", "have \"proj2_incident (?r$i) (polar u)\""], ["proof (prove)\nusing this:\n  u = vector [p1, p2] $ i \\<or>\n  u =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar (vector [p1, p2] $ i))\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i))\n\ngoal (1 subgoal):\n 1. proj2_incident\n     ((\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      i)\n     (polar u)", "by auto"], ["proof (state)\nthis:\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar u)\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>\\<forall> i. proj2_incident (?r$i) (?m$i)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     proj2_incident\n      ((\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)", "have \"proj2_incident (?r$i) (?m$i)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_incident\n      ((\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. proj2_incident\n     ((\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      i)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      i)", ".."], ["proof (state)\nthis:\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>\\<forall> i. proj2_incident (?a$i) (?m$i)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)", "have \"proj2_incident (?a$i) (?m$i)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     proj2_incident (vector [a1, a2] $ i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. proj2_incident (vector [a1, a2] $ i)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      i)", ".."], ["proof (state)\nthis:\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>\\<forall> i. ?a$i \\<in> K2\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i. vector [a1, a2] $ i \\<in> hyp2", "have \"?a$i \\<in> K2\""], ["proof (prove)\nusing this:\n  \\<forall>i. vector [a1, a2] $ i \\<in> hyp2\n\ngoal (1 subgoal):\n 1. vector [a1, a2] $ i \\<in> hyp2", ".."], ["proof (state)\nthis:\n  vector [a1, a2] $ i \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "have \"u \\<noteq> ?r$i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq>\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u =\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i \\<Longrightarrow>\n    False", "assume \"u = ?r$i\""], ["proof (state)\nthis:\n  u =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i\n\ngoal (1 subgoal):\n 1. u =\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i \\<Longrightarrow>\n    False", "with \\<open>proj2_incident (?r$i) (polar (?p$i))\\<close>\n        and \\<open>proj2_incident (?r$i) (polar (?q$i))\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar (vector [p1, p2] $ i))\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i))\n  u =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i", "have \"proj2_incident u (polar (?p$i))\"\n        and \"proj2_incident u (polar (?q$i))\""], ["proof (prove)\nusing this:\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar (vector [p1, p2] $ i))\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i))\n  u =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i\n\ngoal (1 subgoal):\n 1. proj2_incident u (polar (vector [p1, p2] $ i)) &&&\n    proj2_incident u\n     (polar\n       ((\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i))", "by simp_all"], ["proof (state)\nthis:\n  proj2_incident u (polar (vector [p1, p2] $ i))\n  proj2_incident u\n   (polar\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i))\n\ngoal (1 subgoal):\n 1. u =\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i \\<Longrightarrow>\n    False", "with \\<open>u \\<in> S\\<close> and \\<open>?p$i \\<in> S\\<close> and \\<open>?q$i \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  u \\<in> S\n  vector [p1, p2] $ i \\<in> S\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S\n  proj2_incident u (polar (vector [p1, p2] $ i))\n  proj2_incident u\n   (polar\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i))", "have \"u = ?p$i\" and \"u = ?q$i\""], ["proof (prove)\nusing this:\n  u \\<in> S\n  vector [p1, p2] $ i \\<in> S\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S\n  proj2_incident u (polar (vector [p1, p2] $ i))\n  proj2_incident u\n   (polar\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      i))\n\ngoal (1 subgoal):\n 1. u = vector [p1, p2] $ i &&&\n    u =\n    (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i", "by (simp_all add: point_in_S_polar_is_tangent)"], ["proof (state)\nthis:\n  u = vector [p1, p2] $ i\n  u =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n\ngoal (1 subgoal):\n 1. u =\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i \\<Longrightarrow>\n    False", "with \\<open>?q$i \\<noteq> ?p$i\\<close>"], ["proof (chain)\npicking this:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<noteq>\n  vector [p1, p2] $ i\n  u = vector [p1, p2] $ i\n  u =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i", "show False"], ["proof (prove)\nusing this:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<noteq>\n  vector [p1, p2] $ i\n  u = vector [p1, p2] $ i\n  u =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>proj2_incident (u) (polar u)\\<close>\n      and \\<open>proj2_incident (?r$i) (polar u)\\<close>\n      and \\<open>proj2_incident u (?m$i)\\<close>\n      and \\<open>proj2_incident (?r$i) (?m$i)\\<close>\n      and proj2_incident_unique"], ["proof (chain)\npicking this:\n  proj2_incident u (polar u)\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar u)\n  proj2_incident u\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  u \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i", "have \"?m$i = polar u\""], ["proof (prove)\nusing this:\n  proj2_incident u (polar u)\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   (polar u)\n  proj2_incident u\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  u \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i =\n    polar u", "by auto"], ["proof (state)\nthis:\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  i =\n  polar u\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>proj2_incident (?a$i) (?m$i)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  i =\n  polar u", "have \"proj2_incident (?a$i) (polar u)\""], ["proof (prove)\nusing this:\n  proj2_incident (vector [a1, a2] $ i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  i =\n  polar u\n\ngoal (1 subgoal):\n 1. proj2_incident (vector [a1, a2] $ i) (polar u)", "by simp"], ["proof (state)\nthis:\n  proj2_incident (vector [a1, a2] $ i) (polar u)\n\ngoal (1 subgoal):\n 1. \\<And>i u.\n       \\<lbrakk>proj2_incident u\n                 ((\\<chi>i.\n                      proj2_line_through (vector [a1, a2] $ i)\n                       ((\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i)) $\n                  i);\n        u = vector [p1, p2] $ i \\<or>\n        u =\n        (\\<chi>i.\n            SOME qi.\n               qi \\<noteq> vector [p1, p2] $ i \\<and>\n               qi \\<in> S \\<and>\n               proj2_incident qi\n                ((\\<chi>i.\n                     proj2_line_through (vector [a1, a2] $ i)\n                      (vector [p1, p2] $ i)) $\n                 i)) $\n        i\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>u \\<in> S\\<close> and \\<open>?a$i \\<in> K2\\<close> and tangent_not_through_K2"], ["proof (chain)\npicking this:\n  u \\<in> S\n  vector [a1, a2] $ i \\<in> hyp2\n  \\<lbrakk>?p \\<in> S; ?q \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> \\<not> proj2_incident ?q (polar ?p)\n  proj2_incident (vector [a1, a2] $ i) (polar u)", "show False"], ["proof (prove)\nusing this:\n  u \\<in> S\n  vector [a1, a2] $ i \\<in> hyp2\n  \\<lbrakk>?p \\<in> S; ?q \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> \\<not> proj2_incident ?q (polar ?p)\n  proj2_incident (vector [a1, a2] $ i) (polar u)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i u.\n     proj2_incident u\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i) \\<longrightarrow>\n     \\<not> (u = vector [p1, p2] $ i \\<or>\n             u =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?H = \"\\<chi> i. \\<some> Hi. is_K2_isometry Hi\n    \\<and> apply_cltn2 east Hi = ?q$i\n    \\<and> apply_cltn2 west Hi = ?p$i\n    \\<and> apply_cltn2 north Hi = ?s$i\n    \\<and> apply_cltn2 far_north Hi = ?r$i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "have \"\\<forall> i. is_K2_isometry (?H$i)\n    \\<and> apply_cltn2 east (?H$i) = ?q$i\n    \\<and> apply_cltn2 west (?H$i) = ?p$i\n    \\<and> apply_cltn2 north (?H$i) = ?s$i\n    \\<and> apply_cltn2 far_north (?H$i) = ?r$i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       is_K2_isometry\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) \\<and>\n       apply_cltn2 east\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       vector [p1, p2] $ i \\<and>\n       apply_cltn2 north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_K2_isometry\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) \\<and>\n       apply_cltn2 east\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       vector [p1, p2] $ i \\<and>\n       apply_cltn2 north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "fix i :: 2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_K2_isometry\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) \\<and>\n       apply_cltn2 east\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       vector [p1, p2] $ i \\<and>\n       apply_cltn2 north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "from \\<open>\\<forall> i. ?p$i \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i. vector [p1, p2] $ i \\<in> S", "have \"?p$i \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>i. vector [p1, p2] $ i \\<in> S\n\ngoal (1 subgoal):\n 1. vector [p1, p2] $ i \\<in> S", ".."], ["proof (state)\nthis:\n  vector [p1, p2] $ i \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_K2_isometry\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) \\<and>\n       apply_cltn2 east\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       vector [p1, p2] $ i \\<and>\n       apply_cltn2 north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "from \\<open>\\<forall> i. ?q$i \\<noteq> ?p$i \\<and> ?q$i \\<in> S \\<and> proj2_incident (?q$i) (?l$i)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<noteq>\n     vector [p1, p2] $ i \\<and>\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)", "have \"?q$i \\<noteq> ?p$i\" and \"?q$i \\<in> S\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<noteq>\n     vector [p1, p2] $ i \\<and>\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i \\<noteq>\n    vector [p1, p2] $ i &&&\n    (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i\n    \\<in> S", "by simp_all"], ["proof (state)\nthis:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<noteq>\n  vector [p1, p2] $ i\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_K2_isometry\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) \\<and>\n       apply_cltn2 east\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       vector [p1, p2] $ i \\<and>\n       apply_cltn2 north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "from \\<open>\\<forall> i. ?s$i \\<noteq> ?r$i \\<and> ?s$i \\<in> S \\<and> proj2_incident (?s$i) (?m$i)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)", "have \"?s$i \\<in> S\" and \"proj2_incident (?s$i) (?m$i)\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<noteq>\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<and>\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i\n     \\<in> S \\<and>\n     proj2_incident\n      ((\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i)\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i\n    \\<in> S &&&\n    proj2_incident\n     ((\\<chi>i.\n          SOME si.\n             si \\<noteq>\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i \\<and>\n             si \\<in> S \\<and>\n             proj2_incident si\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    ((\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i)) $\n               i)) $\n      i)\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      i)", "by simp_all"], ["proof (state)\nthis:\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i\n  \\<in> S\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_K2_isometry\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) \\<and>\n       apply_cltn2 east\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       vector [p1, p2] $ i \\<and>\n       apply_cltn2 north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "from \\<open>proj2_incident (?s$i) (?m$i)\\<close>\n      and \\<open>\\<forall> i. \\<forall> u.  proj2_incident u (?m$i) \\<longrightarrow> \\<not> (u = ?p$i \\<or> u = ?q$i)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  \\<forall>i u.\n     proj2_incident u\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i) \\<longrightarrow>\n     \\<not> (u = vector [p1, p2] $ i \\<or>\n             u =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i)", "have \"?s$i \\<notin> {?q$i, ?p$i}\""], ["proof (prove)\nusing this:\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    i)\n  \\<forall>i u.\n     proj2_incident u\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i) \\<longrightarrow>\n     \\<not> (u = vector [p1, p2] $ i \\<or>\n             u =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i\n    \\<notin> {(\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i,\n              vector [p1, p2] $ i}", "by fast"], ["proof (state)\nthis:\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i\n  \\<notin> {(\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i,\n            vector [p1, p2] $ i}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_K2_isometry\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) \\<and>\n       apply_cltn2 east\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       vector [p1, p2] $ i \\<and>\n       apply_cltn2 north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "with \\<open>?q$i \\<in> S\\<close> and \\<open>?p$i \\<in> S\\<close> and \\<open>?s$i \\<in> S\\<close> and \\<open>?q$i \\<noteq> ?p$i\\<close>"], ["proof (chain)\npicking this:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S\n  vector [p1, p2] $ i \\<in> S\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i\n  \\<in> S\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<noteq>\n  vector [p1, p2] $ i\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i\n  \\<notin> {(\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i,\n            vector [p1, p2] $ i}", "have \"\\<exists> Hi. is_K2_isometry Hi\n      \\<and> apply_cltn2 east Hi = ?q$i\n      \\<and> apply_cltn2 west Hi = ?p$i\n      \\<and> apply_cltn2 north Hi = ?s$i\n      \\<and> apply_cltn2 far_north Hi = ?r$i\""], ["proof (prove)\nusing this:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i\n  \\<in> S\n  vector [p1, p2] $ i \\<in> S\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i\n  \\<in> S\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<noteq>\n  vector [p1, p2] $ i\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i\n  \\<notin> {(\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i,\n            vector [p1, p2] $ i}\n\ngoal (1 subgoal):\n 1. \\<exists>Hi.\n       is_K2_isometry Hi \\<and>\n       apply_cltn2 east Hi =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north Hi =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north Hi =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "by (simp add: statement65_special_case)"], ["proof (state)\nthis:\n  \\<exists>Hi.\n     is_K2_isometry Hi \\<and>\n     apply_cltn2 east Hi =\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n     apply_cltn2 north Hi =\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 far_north Hi =\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_K2_isometry\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) \\<and>\n       apply_cltn2 east\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       vector [p1, p2] $ i \\<and>\n       apply_cltn2 north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north\n        ((\\<chi>i.\n             SOME Hi.\n                is_K2_isometry Hi \\<and>\n                apply_cltn2 east Hi =\n                (\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                apply_cltn2 north Hi =\n                (\\<chi>i.\n                    SOME si.\n                       si \\<noteq>\n                       (\\<chi>i.\n                           proj2_intersection\n                            (polar\n                              ((\\<chi>i.\n                                   SOME qi.\nqi \\<noteq> vector [p1, p2] $ i \\<and>\nqi \\<in> S \\<and>\nproj2_incident qi\n ((\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  i)) $\n                               i))\n                            (polar (vector [p1, p2] $ i))) $\n                       i \\<and>\n                       si \\<in> S \\<and>\n                       proj2_incident si\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              ((\\<chi>i.\n                                   proj2_intersection\n                                    (polar\n((\\<chi>i.\n     SOME qi.\n        qi \\<noteq> vector [p1, p2] $ i \\<and>\n        qi \\<in> S \\<and>\n        proj2_incident qi\n         ((\\<chi>i.\n              proj2_line_through (vector [a1, a2] $ i)\n               (vector [p1, p2] $ i)) $\n          i)) $\n i))\n                                    (polar (vector [p1, p2] $ i))) $\n                               i)) $\n                         i)) $\n                i \\<and>\n                apply_cltn2 far_north Hi =\n                (\\<chi>i.\n                    proj2_intersection\n                     (polar\n                       ((\\<chi>i.\n                            SOME qi.\n                               qi \\<noteq> vector [p1, p2] $ i \\<and>\n                               qi \\<in> S \\<and>\n                               proj2_incident qi\n                                ((\\<chi>i.\n                                     proj2_line_through\n(vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                 i)) $\n                        i))\n                     (polar (vector [p1, p2] $ i))) $\n                i) $\n         i) =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i", "with someI_ex [of \"\\<lambda> Hi. is_K2_isometry Hi\n      \\<and> apply_cltn2 east Hi = ?q$i\n      \\<and> apply_cltn2 west Hi = ?p$i\n      \\<and> apply_cltn2 north Hi = ?s$i\n      \\<and> apply_cltn2 far_north Hi = ?r$i\"]"], ["proof (chain)\npicking this:\n  \\<exists>x.\n     is_K2_isometry x \\<and>\n     apply_cltn2 east x =\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n     apply_cltn2 north x =\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 far_north x =\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<Longrightarrow>\n  is_K2_isometry\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) \\<and>\n  apply_cltn2 east\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<and>\n  apply_cltn2 west\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) =\n  vector [p1, p2] $ i \\<and>\n  apply_cltn2 north\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i \\<and>\n  apply_cltn2 far_north\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i\n  \\<exists>Hi.\n     is_K2_isometry Hi \\<and>\n     apply_cltn2 east Hi =\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n     apply_cltn2 north Hi =\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 far_north Hi =\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i", "show \"is_K2_isometry (?H$i)\n      \\<and> apply_cltn2 east (?H$i) = ?q$i\n      \\<and> apply_cltn2 west (?H$i) = ?p$i\n      \\<and> apply_cltn2 north (?H$i) = ?s$i\n      \\<and> apply_cltn2 far_north (?H$i) = ?r$i\""], ["proof (prove)\nusing this:\n  \\<exists>x.\n     is_K2_isometry x \\<and>\n     apply_cltn2 east x =\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n     apply_cltn2 north x =\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 far_north x =\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i \\<Longrightarrow>\n  is_K2_isometry\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) \\<and>\n  apply_cltn2 east\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<and>\n  apply_cltn2 west\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) =\n  vector [p1, p2] $ i \\<and>\n  apply_cltn2 north\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i \\<and>\n  apply_cltn2 far_north\n   (SOME x.\n       is_K2_isometry x \\<and>\n       apply_cltn2 east x =\n       (\\<chi>i.\n           SOME qi.\n              qi \\<noteq> vector [p1, p2] $ i \\<and>\n              qi \\<in> S \\<and>\n              proj2_incident qi\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     (vector [p1, p2] $ i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 west x = vector [p1, p2] $ i \\<and>\n       apply_cltn2 north x =\n       (\\<chi>i.\n           SOME si.\n              si \\<noteq>\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i \\<and>\n              si \\<in> S \\<and>\n              proj2_incident si\n               ((\\<chi>i.\n                    proj2_line_through (vector [a1, a2] $ i)\n                     ((\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i)) $\n                i)) $\n       i \\<and>\n       apply_cltn2 far_north x =\n       (\\<chi>i.\n           proj2_intersection\n            (polar\n              ((\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i))\n            (polar (vector [p1, p2] $ i))) $\n       i) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i\n  \\<exists>Hi.\n     is_K2_isometry Hi \\<and>\n     apply_cltn2 east Hi =\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n     apply_cltn2 north Hi =\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 far_north Hi =\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i\n\ngoal (1 subgoal):\n 1. is_K2_isometry\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      i) \\<and>\n    apply_cltn2 east\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      i) =\n    (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i \\<and>\n    apply_cltn2 west\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      i) =\n    vector [p1, p2] $ i \\<and>\n    apply_cltn2 north\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      i) =\n    (\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    i \\<and>\n    apply_cltn2 far_north\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      i) =\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    i", "by simp"], ["proof (state)\nthis:\n  is_K2_isometry\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    i) \\<and>\n  apply_cltn2 east\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    i) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i \\<and>\n  apply_cltn2 west\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    i) =\n  vector [p1, p2] $ i \\<and>\n  apply_cltn2 north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    i) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  i \\<and>\n  apply_cltn2 far_north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    i) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i.\n     is_K2_isometry\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) \\<and>\n     apply_cltn2 east\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) =\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 west\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) =\n     vector [p1, p2] $ i \\<and>\n     apply_cltn2 north\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) =\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 far_north\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) =\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "hence \"is_K2_isometry (?H$1)\"\n    and \"apply_cltn2 east (?H$1) = ?q$1\"\n    and \"apply_cltn2 west (?H$1) = ?p$1\"\n    and \"apply_cltn2 north (?H$1) = ?s$1\"\n    and \"apply_cltn2 far_north (?H$1) = ?r$1\"\n    and  \"is_K2_isometry (?H$2)\"\n    and \"apply_cltn2 east (?H$2) = ?q$2\"\n    and \"apply_cltn2 west (?H$2) = ?p$2\"\n    and \"apply_cltn2 north (?H$2) = ?s$2\"\n    and \"apply_cltn2 far_north (?H$2) = ?r$2\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     is_K2_isometry\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) \\<and>\n     apply_cltn2 east\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) =\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 west\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) =\n     vector [p1, p2] $ i \\<and>\n     apply_cltn2 north\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) =\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     i \\<and>\n     apply_cltn2 far_north\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       i) =\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     i\n\ngoal (1 subgoal):\n 1. ((is_K2_isometry\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1) &&&\n      apply_cltn2 east\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1) =\n      (\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      1) &&&\n     apply_cltn2 west\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       1) =\n     vector [p1, p2] $ 1 &&&\n     apply_cltn2 north\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       1) =\n     (\\<chi>i.\n         SOME si.\n            si \\<noteq>\n            (\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i \\<and>\n            si \\<in> S \\<and>\n            proj2_incident si\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   ((\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i)) $\n              i)) $\n     1 &&&\n     apply_cltn2 far_north\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       1) =\n     (\\<chi>i.\n         proj2_intersection\n          (polar\n            ((\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i))\n          (polar (vector [p1, p2] $ i))) $\n     1) &&&\n    (is_K2_isometry\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       2) &&&\n     apply_cltn2 east\n      ((\\<chi>i.\n           SOME Hi.\n              is_K2_isometry Hi \\<and>\n              apply_cltn2 east Hi =\n              (\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n              apply_cltn2 north Hi =\n              (\\<chi>i.\n                  SOME si.\n                     si \\<noteq>\n                     (\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i \\<and>\n                     si \\<in> S \\<and>\n                     proj2_incident si\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            ((\\<chi>i.\n                                 proj2_intersection\n                                  (polar\n                                    ((\\<chi>i.\n   SOME qi.\n      qi \\<noteq> vector [p1, p2] $ i \\<and>\n      qi \\<in> S \\<and>\n      proj2_incident qi\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        i)) $\n                                     i))\n                                  (polar (vector [p1, p2] $ i))) $\n                             i)) $\n                       i)) $\n              i \\<and>\n              apply_cltn2 far_north Hi =\n              (\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i) $\n       2) =\n     (\\<chi>i.\n         SOME qi.\n            qi \\<noteq> vector [p1, p2] $ i \\<and>\n            qi \\<in> S \\<and>\n            proj2_incident qi\n             ((\\<chi>i.\n                  proj2_line_through (vector [a1, a2] $ i)\n                   (vector [p1, p2] $ i)) $\n              i)) $\n     2) &&&\n    apply_cltn2 west\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2) =\n    vector [p1, p2] $ 2 &&&\n    apply_cltn2 north\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2) =\n    (\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    2 &&&\n    apply_cltn2 far_north\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2) =\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    2", "by fast+"], ["proof (state)\nthis:\n  is_K2_isometry\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1)\n  apply_cltn2 east\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  1\n  apply_cltn2 west\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  vector [p1, p2] $ 1\n  apply_cltn2 north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  1\n  apply_cltn2 far_north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  1\n  is_K2_isometry\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2)\n  apply_cltn2 east\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  2\n  apply_cltn2 west\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  vector [p1, p2] $ 2\n  apply_cltn2 north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  2\n  apply_cltn2 far_north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "let ?J = \"cltn2_compose (cltn2_inverse (?H$1)) (?H$2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>is_K2_isometry (?H$1)\\<close> and \\<open>is_K2_isometry (?H$2)\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1)\n  is_K2_isometry\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2)", "have \"is_K2_isometry ?J\""], ["proof (prove)\nusing this:\n  is_K2_isometry\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1)\n  is_K2_isometry\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2)\n\ngoal (1 subgoal):\n 1. is_K2_isometry\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2))", "by (simp only: cltn2_inverse_is_K2_isometry cltn2_compose_is_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>apply_cltn2 west (?H$1) = ?p$1\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 west\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  vector [p1, p2] $ 1", "have \"apply_cltn2 p1 (cltn2_inverse (?H$1)) = west\""], ["proof (prove)\nusing this:\n  apply_cltn2 west\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  vector [p1, p2] $ 1\n\ngoal (1 subgoal):\n 1. apply_cltn2 p1\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1)) =\n    west", "by (simp add: cltn2.act_inv_iff [simplified])"], ["proof (state)\nthis:\n  apply_cltn2 p1\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  west\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>apply_cltn2 west (?H$2) = ?p$2\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 west\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  vector [p1, p2] $ 2\n  apply_cltn2 p1\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  west", "have \"apply_cltn2 p1 ?J = p2\""], ["proof (prove)\nusing this:\n  apply_cltn2 west\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  vector [p1, p2] $ 2\n  apply_cltn2 p1\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  west\n\ngoal (1 subgoal):\n 1. apply_cltn2 p1\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)) =\n    p2", "by (simp add: cltn2.act_act [simplified, symmetric])"], ["proof (state)\nthis:\n  apply_cltn2 p1\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  p2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>apply_cltn2 east (?H$1) = ?q$1\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 east\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  1", "have \"apply_cltn2 (?q$1) (cltn2_inverse (?H$1)) = east\""], ["proof (prove)\nusing this:\n  apply_cltn2 east\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  1\n\ngoal (1 subgoal):\n 1. apply_cltn2\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      1)\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1)) =\n    east", "by (simp add: cltn2.act_inv_iff [simplified])"], ["proof (state)\nthis:\n  apply_cltn2\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  east\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>apply_cltn2 east (?H$2) = ?q$2\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 east\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  2\n  apply_cltn2\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  east", "have \"apply_cltn2 (?q$1) ?J = ?q$2\""], ["proof (prove)\nusing this:\n  apply_cltn2 east\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  2\n  apply_cltn2\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  east\n\ngoal (1 subgoal):\n 1. apply_cltn2\n     ((\\<chi>i.\n          SOME qi.\n             qi \\<noteq> vector [p1, p2] $ i \\<and>\n             qi \\<in> S \\<and>\n             proj2_incident qi\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    (vector [p1, p2] $ i)) $\n               i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)) =\n    (\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    2", "by (simp add: cltn2.act_act [simplified, symmetric])"], ["proof (state)\nthis:\n  apply_cltn2\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>?q$1 \\<noteq> ?p$1\\<close> and \\<open>apply_cltn2 p1 ?J = p2\\<close>\n    and \\<open>proj2_incident (?p$1) (?l$1)\\<close>\n    and \\<open>proj2_incident (?q$1) (?l$1)\\<close>\n    and \\<open>proj2_incident (?p$2) (?l$2)\\<close>\n    and \\<open>proj2_incident (?q$2) (?l$2)\\<close>"], ["proof (chain)\npicking this:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  1 \\<noteq>\n  vector [p1, p2] $ 1\n  apply_cltn2 p1\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  p2\n  proj2_incident (vector [p1, p2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n  proj2_incident (vector [p1, p2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  proj2_incident\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  apply_cltn2\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  2", "have \"apply_cltn2_line (?l$1) ?J = (?l$2)\""], ["proof (prove)\nusing this:\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  1 \\<noteq>\n  vector [p1, p2] $ 1\n  apply_cltn2 p1\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  p2\n  proj2_incident (vector [p1, p2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n  proj2_incident (vector [p1, p2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  proj2_incident\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  apply_cltn2\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  2\n\ngoal (1 subgoal):\n 1. apply_cltn2_line\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)) =\n    (\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2", "by (simp add: apply_cltn2_line_unique)"], ["proof (state)\nthis:\n  apply_cltn2_line\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "moreover"], ["proof (state)\nthis:\n  apply_cltn2_line\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>proj2_incident (?a$1) (?l$1)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (vector [a1, a2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)", "have \"proj2_incident (apply_cltn2 (?a$1) ?J) (apply_cltn2_line (?l$1) ?J)\""], ["proof (prove)\nusing this:\n  proj2_incident (vector [a1, a2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n\ngoal (1 subgoal):\n 1. proj2_incident\n     (apply_cltn2 (vector [a1, a2] $ 1)\n       (cltn2_compose\n         (cltn2_inverse\n           ((\\<chi>i.\n                SOME Hi.\n                   is_K2_isometry Hi \\<and>\n                   apply_cltn2 east Hi =\n                   (\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                   apply_cltn2 north Hi =\n                   (\\<chi>i.\n                       SOME si.\n                          si \\<noteq>\n                          (\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i \\<and>\n                          si \\<in> S \\<and>\n                          proj2_incident si\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 ((\\<chi>i.\nproj2_intersection\n (polar\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i))\n (polar (vector [p1, p2] $ i))) $\n                                  i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 far_north Hi =\n                   (\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i) $\n            1))\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          2)))\n     (apply_cltn2_line\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             (vector [p1, p2] $ i)) $\n        1)\n       (cltn2_compose\n         (cltn2_inverse\n           ((\\<chi>i.\n                SOME Hi.\n                   is_K2_isometry Hi \\<and>\n                   apply_cltn2 east Hi =\n                   (\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                   apply_cltn2 north Hi =\n                   (\\<chi>i.\n                       SOME si.\n                          si \\<noteq>\n                          (\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i \\<and>\n                          si \\<in> S \\<and>\n                          proj2_incident si\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 ((\\<chi>i.\nproj2_intersection\n (polar\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i))\n (polar (vector [p1, p2] $ i))) $\n                                  i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 far_north Hi =\n                   (\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i) $\n            1))\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          2)))", "by simp"], ["proof (state)\nthis:\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   (apply_cltn2_line\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "ultimately"], ["proof (chain)\npicking this:\n  apply_cltn2_line\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  2\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   (apply_cltn2_line\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))", "have \"proj2_incident (apply_cltn2 (?a$1) ?J) (?l$2)\""], ["proof (prove)\nusing this:\n  apply_cltn2_line\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  2\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   (apply_cltn2_line\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n\ngoal (1 subgoal):\n 1. proj2_incident\n     (apply_cltn2 (vector [a1, a2] $ 1)\n       (cltn2_compose\n         (cltn2_inverse\n           ((\\<chi>i.\n                SOME Hi.\n                   is_K2_isometry Hi \\<and>\n                   apply_cltn2 east Hi =\n                   (\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                   apply_cltn2 north Hi =\n                   (\\<chi>i.\n                       SOME si.\n                          si \\<noteq>\n                          (\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i \\<and>\n                          si \\<in> S \\<and>\n                          proj2_incident si\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 ((\\<chi>i.\nproj2_intersection\n (polar\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i))\n (polar (vector [p1, p2] $ i))) $\n                                  i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 far_north Hi =\n                   (\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i) $\n            1))\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          2)))\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n      2)", "by simp"], ["proof (state)\nthis:\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>apply_cltn2 north (?H$1) = ?s$1\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  1", "have \"apply_cltn2 (?s$1) (cltn2_inverse (?H$1)) = north\""], ["proof (prove)\nusing this:\n  apply_cltn2 north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  1\n\ngoal (1 subgoal):\n 1. apply_cltn2\n     ((\\<chi>i.\n          SOME si.\n             si \\<noteq>\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i \\<and>\n             si \\<in> S \\<and>\n             proj2_incident si\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    ((\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i)) $\n               i)) $\n      1)\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1)) =\n    north", "by (simp add: cltn2.act_inv_iff [simplified])"], ["proof (state)\nthis:\n  apply_cltn2\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  north\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>apply_cltn2 north (?H$2) = ?s$2\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  2\n  apply_cltn2\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  north", "have \"apply_cltn2 (?s$1) ?J = ?s$2\""], ["proof (prove)\nusing this:\n  apply_cltn2 north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  2\n  apply_cltn2\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  north\n\ngoal (1 subgoal):\n 1. apply_cltn2\n     ((\\<chi>i.\n          SOME si.\n             si \\<noteq>\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i \\<and>\n             si \\<in> S \\<and>\n             proj2_incident si\n              ((\\<chi>i.\n                   proj2_line_through (vector [a1, a2] $ i)\n                    ((\\<chi>i.\n                         proj2_intersection\n                          (polar\n                            ((\\<chi>i.\n                                 SOME qi.\n                                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                    qi \\<in> S \\<and>\n                                    proj2_incident qi\n                                     ((\\<chi>i.\n    proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\ni)) $\n                             i))\n                          (polar (vector [p1, p2] $ i))) $\n                     i)) $\n               i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)) =\n    (\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    2", "by (simp add: cltn2.act_act [simplified, symmetric])"], ["proof (state)\nthis:\n  apply_cltn2\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>apply_cltn2 far_north (?H$1) = ?r$1\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 far_north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  1", "have \"apply_cltn2 (?r$1) (cltn2_inverse (?H$1)) = far_north\""], ["proof (prove)\nusing this:\n  apply_cltn2 far_north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    1) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  1\n\ngoal (1 subgoal):\n 1. apply_cltn2\n     ((\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      1)\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1)) =\n    far_north", "by (simp add: cltn2.act_inv_iff [simplified])"], ["proof (state)\nthis:\n  apply_cltn2\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  far_north\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>apply_cltn2 far_north (?H$2) = ?r$2\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 far_north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  2\n  apply_cltn2\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  far_north", "have \"apply_cltn2 (?r$1) ?J = ?r$2\""], ["proof (prove)\nusing this:\n  apply_cltn2 far_north\n   ((\\<chi>i.\n        SOME Hi.\n           is_K2_isometry Hi \\<and>\n           apply_cltn2 east Hi =\n           (\\<chi>i.\n               SOME qi.\n                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                  qi \\<in> S \\<and>\n                  proj2_incident qi\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         (vector [p1, p2] $ i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n           apply_cltn2 north Hi =\n           (\\<chi>i.\n               SOME si.\n                  si \\<noteq>\n                  (\\<chi>i.\n                      proj2_intersection\n                       (polar\n                         ((\\<chi>i.\n                              SOME qi.\n                                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                 qi \\<in> S \\<and>\n                                 proj2_incident qi\n                                  ((\\<chi>i.\n proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                   i)) $\n                          i))\n                       (polar (vector [p1, p2] $ i))) $\n                  i \\<and>\n                  si \\<in> S \\<and>\n                  proj2_incident si\n                   ((\\<chi>i.\n                        proj2_line_through (vector [a1, a2] $ i)\n                         ((\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i)) $\n                    i)) $\n           i \\<and>\n           apply_cltn2 far_north Hi =\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i) $\n    2) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  2\n  apply_cltn2\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   (cltn2_inverse\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      1)) =\n  far_north\n\ngoal (1 subgoal):\n 1. apply_cltn2\n     ((\\<chi>i.\n          proj2_intersection\n           (polar\n             ((\\<chi>i.\n                  SOME qi.\n                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                     qi \\<in> S \\<and>\n                     proj2_incident qi\n                      ((\\<chi>i.\n                           proj2_line_through (vector [a1, a2] $ i)\n                            (vector [p1, p2] $ i)) $\n                       i)) $\n              i))\n           (polar (vector [p1, p2] $ i))) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)) =\n    (\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    2", "by (simp add: cltn2.act_act [simplified, symmetric])"], ["proof (state)\nthis:\n  apply_cltn2\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>?s$1 \\<noteq> ?r$1\\<close> and \\<open>apply_cltn2 (?s$1) ?J = (?s$2)\\<close>\n    and \\<open>proj2_incident (?r$1) (?m$1)\\<close>\n    and \\<open>proj2_incident (?s$1) (?m$1)\\<close>\n    and \\<open>proj2_incident (?r$2) (?m$2)\\<close>\n    and \\<open>proj2_incident (?s$2) (?m$2)\\<close>"], ["proof (chain)\npicking this:\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  1 \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  1\n  apply_cltn2\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  2\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n  apply_cltn2\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  2", "have \"apply_cltn2_line (?m$1) ?J = (?m$2)\""], ["proof (prove)\nusing this:\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  1 \\<noteq>\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  1\n  apply_cltn2\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      SOME si.\n         si \\<noteq>\n         (\\<chi>i.\n             proj2_intersection\n              (polar\n                ((\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i))\n              (polar (vector [p1, p2] $ i))) $\n         i \\<and>\n         si \\<in> S \\<and>\n         proj2_incident si\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           i)) $\n  2\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n  proj2_incident\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n  proj2_incident\n   ((\\<chi>i.\n        SOME si.\n           si \\<noteq>\n           (\\<chi>i.\n               proj2_intersection\n                (polar\n                  ((\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i))\n                (polar (vector [p1, p2] $ i))) $\n           i \\<and>\n           si \\<in> S \\<and>\n           proj2_incident si\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             i)) $\n    2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n  apply_cltn2\n   ((\\<chi>i.\n        proj2_intersection\n         (polar\n           ((\\<chi>i.\n                SOME qi.\n                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                   qi \\<in> S \\<and>\n                   proj2_incident qi\n                    ((\\<chi>i.\n                         proj2_line_through (vector [a1, a2] $ i)\n                          (vector [p1, p2] $ i)) $\n                     i)) $\n            i))\n         (polar (vector [p1, p2] $ i))) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_intersection\n       (polar\n         ((\\<chi>i.\n              SOME qi.\n                 qi \\<noteq> vector [p1, p2] $ i \\<and>\n                 qi \\<in> S \\<and>\n                 proj2_incident qi\n                  ((\\<chi>i.\n                       proj2_line_through (vector [a1, a2] $ i)\n                        (vector [p1, p2] $ i)) $\n                   i)) $\n          i))\n       (polar (vector [p1, p2] $ i))) $\n  2\n\ngoal (1 subgoal):\n 1. apply_cltn2_line\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)) =\n    (\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2", "by (simp add: apply_cltn2_line_unique)"], ["proof (state)\nthis:\n  apply_cltn2_line\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "moreover"], ["proof (state)\nthis:\n  apply_cltn2_line\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>proj2_incident (?a$1) (?m$1)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (vector [a1, a2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)", "have \"proj2_incident (apply_cltn2 (?a$1) ?J) (apply_cltn2_line (?m$1) ?J)\""], ["proof (prove)\nusing this:\n  proj2_incident (vector [a1, a2] $ 1)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n\ngoal (1 subgoal):\n 1. proj2_incident\n     (apply_cltn2 (vector [a1, a2] $ 1)\n       (cltn2_compose\n         (cltn2_inverse\n           ((\\<chi>i.\n                SOME Hi.\n                   is_K2_isometry Hi \\<and>\n                   apply_cltn2 east Hi =\n                   (\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                   apply_cltn2 north Hi =\n                   (\\<chi>i.\n                       SOME si.\n                          si \\<noteq>\n                          (\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i \\<and>\n                          si \\<in> S \\<and>\n                          proj2_incident si\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 ((\\<chi>i.\nproj2_intersection\n (polar\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i))\n (polar (vector [p1, p2] $ i))) $\n                                  i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 far_north Hi =\n                   (\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i) $\n            1))\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          2)))\n     (apply_cltn2_line\n       ((\\<chi>i.\n            proj2_line_through (vector [a1, a2] $ i)\n             ((\\<chi>i.\n                  proj2_intersection\n                   (polar\n                     ((\\<chi>i.\n                          SOME qi.\n                             qi \\<noteq> vector [p1, p2] $ i \\<and>\n                             qi \\<in> S \\<and>\n                             proj2_incident qi\n                              ((\\<chi>i.\n                                   proj2_line_through (vector [a1, a2] $ i)\n                                    (vector [p1, p2] $ i)) $\n                               i)) $\n                      i))\n                   (polar (vector [p1, p2] $ i))) $\n              i)) $\n        1)\n       (cltn2_compose\n         (cltn2_inverse\n           ((\\<chi>i.\n                SOME Hi.\n                   is_K2_isometry Hi \\<and>\n                   apply_cltn2 east Hi =\n                   (\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                   apply_cltn2 north Hi =\n                   (\\<chi>i.\n                       SOME si.\n                          si \\<noteq>\n                          (\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i \\<and>\n                          si \\<in> S \\<and>\n                          proj2_incident si\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 ((\\<chi>i.\nproj2_intersection\n (polar\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i))\n (polar (vector [p1, p2] $ i))) $\n                                  i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 far_north Hi =\n                   (\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i) $\n            1))\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          2)))", "by simp"], ["proof (state)\nthis:\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   (apply_cltn2_line\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "ultimately"], ["proof (chain)\npicking this:\n  apply_cltn2_line\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  2\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   (apply_cltn2_line\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))", "have \"proj2_incident (apply_cltn2 (?a$1) ?J) (?m$2)\""], ["proof (prove)\nusing this:\n  apply_cltn2_line\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    1)\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  2\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   (apply_cltn2_line\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n\ngoal (1 subgoal):\n 1. proj2_incident\n     (apply_cltn2 (vector [a1, a2] $ 1)\n       (cltn2_compose\n         (cltn2_inverse\n           ((\\<chi>i.\n                SOME Hi.\n                   is_K2_isometry Hi \\<and>\n                   apply_cltn2 east Hi =\n                   (\\<chi>i.\n                       SOME qi.\n                          qi \\<noteq> vector [p1, p2] $ i \\<and>\n                          qi \\<in> S \\<and>\n                          proj2_incident qi\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 (vector [p1, p2] $ i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                   apply_cltn2 north Hi =\n                   (\\<chi>i.\n                       SOME si.\n                          si \\<noteq>\n                          (\\<chi>i.\n                              proj2_intersection\n                               (polar\n                                 ((\\<chi>i.\nSOME qi.\n   qi \\<noteq> vector [p1, p2] $ i \\<and>\n   qi \\<in> S \\<and>\n   proj2_incident qi\n    ((\\<chi>i.\n         proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n     i)) $\n                                  i))\n                               (polar (vector [p1, p2] $ i))) $\n                          i \\<and>\n                          si \\<in> S \\<and>\n                          proj2_incident si\n                           ((\\<chi>i.\n                                proj2_line_through (vector [a1, a2] $ i)\n                                 ((\\<chi>i.\nproj2_intersection\n (polar\n   ((\\<chi>i.\n        SOME qi.\n           qi \\<noteq> vector [p1, p2] $ i \\<and>\n           qi \\<in> S \\<and>\n           proj2_incident qi\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  (vector [p1, p2] $ i)) $\n             i)) $\n    i))\n (polar (vector [p1, p2] $ i))) $\n                                  i)) $\n                            i)) $\n                   i \\<and>\n                   apply_cltn2 far_north Hi =\n                   (\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i) $\n            1))\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          2)))\n     ((\\<chi>i.\n          proj2_line_through (vector [a1, a2] $ i)\n           ((\\<chi>i.\n                proj2_intersection\n                 (polar\n                   ((\\<chi>i.\n                        SOME qi.\n                           qi \\<noteq> vector [p1, p2] $ i \\<and>\n                           qi \\<in> S \\<and>\n                           proj2_incident qi\n                            ((\\<chi>i.\n                                 proj2_line_through (vector [a1, a2] $ i)\n                                  (vector [p1, p2] $ i)) $\n                             i)) $\n                    i))\n                 (polar (vector [p1, p2] $ i))) $\n            i)) $\n      2)", "by simp"], ["proof (state)\nthis:\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "from \\<open>\\<forall> i. \\<forall> u. proj2_incident u (?m$i) \\<longrightarrow> \\<not> (u = ?p$i \\<or> u = ?q$i)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i u.\n     proj2_incident u\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i) \\<longrightarrow>\n     \\<not> (u = vector [p1, p2] $ i \\<or>\n             u =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i)", "have \"\\<not> proj2_incident (?p$2) (?m$2)\""], ["proof (prove)\nusing this:\n  \\<forall>i u.\n     proj2_incident u\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i)\n            ((\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i)) $\n       i) \\<longrightarrow>\n     \\<not> (u = vector [p1, p2] $ i \\<or>\n             u =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i)\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident (vector [p1, p2] $ 2)\n            ((\\<chi>i.\n                 proj2_line_through (vector [a1, a2] $ i)\n                  ((\\<chi>i.\n                       proj2_intersection\n                        (polar\n                          ((\\<chi>i.\n                               SOME qi.\n                                  qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                  qi \\<in> S \\<and>\n                                  proj2_incident qi\n                                   ((\\<chi>i.\n  proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                    i)) $\n                           i))\n                        (polar (vector [p1, p2] $ i))) $\n                   i)) $\n             2)", "by fast"], ["proof (state)\nthis:\n  \\<not> proj2_incident (vector [p1, p2] $ 2)\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           2)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>proj2_incident (?p$2) (?l$2)\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (vector [p1, p2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  \\<not> proj2_incident (vector [p1, p2] $ 2)\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           2)", "have \"?m$2 \\<noteq> ?l$2\""], ["proof (prove)\nusing this:\n  proj2_incident (vector [p1, p2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  \\<not> proj2_incident (vector [p1, p2] $ 2)\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                ((\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i)) $\n           2)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2 \\<noteq>\n    (\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2", "by auto"], ["proof (state)\nthis:\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  2 \\<noteq>\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>proj2_incident (?a$2) (?l$2)\\<close>\n    and \\<open>proj2_incident (?a$2) (?m$2)\\<close>\n    and \\<open>proj2_incident (apply_cltn2 (?a$1) ?J) (?l$2)\\<close>\n    and \\<open>proj2_incident (apply_cltn2 (?a$1) ?J) (?m$2)\\<close>\n    and proj2_incident_unique"], ["proof (chain)\npicking this:\n  proj2_incident (vector [a1, a2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  proj2_incident (vector [a1, a2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  2 \\<noteq>\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  2", "have \"apply_cltn2 a1 ?J = a2\""], ["proof (prove)\nusing this:\n  proj2_incident (vector [a1, a2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  proj2_incident (vector [a1, a2] $ 2)\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n    2)\n  proj2_incident\n   (apply_cltn2 (vector [a1, a2] $ 1)\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)))\n   ((\\<chi>i.\n        proj2_line_through (vector [a1, a2] $ i)\n         ((\\<chi>i.\n              proj2_intersection\n               (polar\n                 ((\\<chi>i.\n                      SOME qi.\n                         qi \\<noteq> vector [p1, p2] $ i \\<and>\n                         qi \\<in> S \\<and>\n                         proj2_incident qi\n                          ((\\<chi>i.\n                               proj2_line_through (vector [a1, a2] $ i)\n                                (vector [p1, p2] $ i)) $\n                           i)) $\n                  i))\n               (polar (vector [p1, p2] $ i))) $\n          i)) $\n    2)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i)\n       ((\\<chi>i.\n            proj2_intersection\n             (polar\n               ((\\<chi>i.\n                    SOME qi.\n                       qi \\<noteq> vector [p1, p2] $ i \\<and>\n                       qi \\<in> S \\<and>\n                       proj2_incident qi\n                        ((\\<chi>i.\n                             proj2_line_through (vector [a1, a2] $ i)\n                              (vector [p1, p2] $ i)) $\n                         i)) $\n                i))\n             (polar (vector [p1, p2] $ i))) $\n        i)) $\n  2 \\<noteq>\n  (\\<chi>i.\n      proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n  2\n\ngoal (1 subgoal):\n 1. apply_cltn2 a1\n     (cltn2_compose\n       (cltn2_inverse\n         ((\\<chi>i.\n              SOME Hi.\n                 is_K2_isometry Hi \\<and>\n                 apply_cltn2 east Hi =\n                 (\\<chi>i.\n                     SOME qi.\n                        qi \\<noteq> vector [p1, p2] $ i \\<and>\n                        qi \\<in> S \\<and>\n                        proj2_incident qi\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               (vector [p1, p2] $ i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n                 apply_cltn2 north Hi =\n                 (\\<chi>i.\n                     SOME si.\n                        si \\<noteq>\n                        (\\<chi>i.\n                            proj2_intersection\n                             (polar\n                               ((\\<chi>i.\n                                    SOME qi.\n qi \\<noteq> vector [p1, p2] $ i \\<and>\n qi \\<in> S \\<and>\n proj2_incident qi\n  ((\\<chi>i.\n       proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n   i)) $\n                                i))\n                             (polar (vector [p1, p2] $ i))) $\n                        i \\<and>\n                        si \\<in> S \\<and>\n                        proj2_incident si\n                         ((\\<chi>i.\n                              proj2_line_through (vector [a1, a2] $ i)\n                               ((\\<chi>i.\n                                    proj2_intersection\n                                     (polar\n ((\\<chi>i.\n      SOME qi.\n         qi \\<noteq> vector [p1, p2] $ i \\<and>\n         qi \\<in> S \\<and>\n         proj2_incident qi\n          ((\\<chi>i.\n               proj2_line_through (vector [a1, a2] $ i)\n                (vector [p1, p2] $ i)) $\n           i)) $\n  i))\n                                     (polar (vector [p1, p2] $ i))) $\n                                i)) $\n                          i)) $\n                 i \\<and>\n                 apply_cltn2 far_north Hi =\n                 (\\<chi>i.\n                     proj2_intersection\n                      (polar\n                        ((\\<chi>i.\n                             SOME qi.\n                                qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                qi \\<in> S \\<and>\n                                proj2_incident qi\n                                 ((\\<chi>i.\nproj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                  i)) $\n                         i))\n                      (polar (vector [p1, p2] $ i))) $\n                 i) $\n          1))\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        2)) =\n    a2", "by auto"], ["proof (state)\nthis:\n  apply_cltn2 a1\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  a2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "with \\<open>is_K2_isometry ?J\\<close> and \\<open>apply_cltn2 p1 ?J = p2\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2))\n  apply_cltn2 p1\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  p2\n  apply_cltn2 a1\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  a2", "show \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2\""], ["proof (prove)\nusing this:\n  is_K2_isometry\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2))\n  apply_cltn2 p1\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  p2\n  apply_cltn2 a1\n   (cltn2_compose\n     (cltn2_inverse\n       ((\\<chi>i.\n            SOME Hi.\n               is_K2_isometry Hi \\<and>\n               apply_cltn2 east Hi =\n               (\\<chi>i.\n                   SOME qi.\n                      qi \\<noteq> vector [p1, p2] $ i \\<and>\n                      qi \\<in> S \\<and>\n                      proj2_incident qi\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             (vector [p1, p2] $ i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n               apply_cltn2 north Hi =\n               (\\<chi>i.\n                   SOME si.\n                      si \\<noteq>\n                      (\\<chi>i.\n                          proj2_intersection\n                           (polar\n                             ((\\<chi>i.\n                                  SOME qi.\n                                     qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                     qi \\<in> S \\<and>\n                                     proj2_incident qi\n((\\<chi>i. proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n i)) $\n                              i))\n                           (polar (vector [p1, p2] $ i))) $\n                      i \\<and>\n                      si \\<in> S \\<and>\n                      proj2_incident si\n                       ((\\<chi>i.\n                            proj2_line_through (vector [a1, a2] $ i)\n                             ((\\<chi>i.\n                                  proj2_intersection\n                                   (polar\n                                     ((\\<chi>i.\n    SOME qi.\n       qi \\<noteq> vector [p1, p2] $ i \\<and>\n       qi \\<in> S \\<and>\n       proj2_incident qi\n        ((\\<chi>i.\n             proj2_line_through (vector [a1, a2] $ i)\n              (vector [p1, p2] $ i)) $\n         i)) $\ni))\n                                   (polar (vector [p1, p2] $ i))) $\n                              i)) $\n                        i)) $\n               i \\<and>\n               apply_cltn2 far_north Hi =\n               (\\<chi>i.\n                   proj2_intersection\n                    (polar\n                      ((\\<chi>i.\n                           SOME qi.\n                              qi \\<noteq> vector [p1, p2] $ i \\<and>\n                              qi \\<in> S \\<and>\n                              proj2_incident qi\n                               ((\\<chi>i.\n                                    proj2_line_through (vector [a1, a2] $ i)\n                                     (vector [p1, p2] $ i)) $\n                                i)) $\n                       i))\n                    (polar (vector [p1, p2] $ i))) $\n               i) $\n        1))\n     ((\\<chi>i.\n          SOME Hi.\n             is_K2_isometry Hi \\<and>\n             apply_cltn2 east Hi =\n             (\\<chi>i.\n                 SOME qi.\n                    qi \\<noteq> vector [p1, p2] $ i \\<and>\n                    qi \\<in> S \\<and>\n                    proj2_incident qi\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           (vector [p1, p2] $ i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 west Hi = vector [p1, p2] $ i \\<and>\n             apply_cltn2 north Hi =\n             (\\<chi>i.\n                 SOME si.\n                    si \\<noteq>\n                    (\\<chi>i.\n                        proj2_intersection\n                         (polar\n                           ((\\<chi>i.\n                                SOME qi.\n                                   qi \\<noteq> vector [p1, p2] $ i \\<and>\n                                   qi \\<in> S \\<and>\n                                   proj2_incident qi\n                                    ((\\<chi>i.\n   proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n                                     i)) $\n                            i))\n                         (polar (vector [p1, p2] $ i))) $\n                    i \\<and>\n                    si \\<in> S \\<and>\n                    proj2_incident si\n                     ((\\<chi>i.\n                          proj2_line_through (vector [a1, a2] $ i)\n                           ((\\<chi>i.\n                                proj2_intersection\n                                 (polar\n                                   ((\\<chi>i.\n  SOME qi.\n     qi \\<noteq> vector [p1, p2] $ i \\<and>\n     qi \\<in> S \\<and>\n     proj2_incident qi\n      ((\\<chi>i.\n           proj2_line_through (vector [a1, a2] $ i) (vector [p1, p2] $ i)) $\n       i)) $\n                                    i))\n                                 (polar (vector [p1, p2] $ i))) $\n                            i)) $\n                      i)) $\n             i \\<and>\n             apply_cltn2 far_north Hi =\n             (\\<chi>i.\n                 proj2_intersection\n                  (polar\n                    ((\\<chi>i.\n                         SOME qi.\n                            qi \\<noteq> vector [p1, p2] $ i \\<and>\n                            qi \\<in> S \\<and>\n                            proj2_incident qi\n                             ((\\<chi>i.\n                                  proj2_line_through (vector [a1, a2] $ i)\n                                   (vector [p1, p2] $ i)) $\n                              i)) $\n                     i))\n                  (polar (vector [p1, p2] $ i))) $\n             i) $\n      2)) =\n  a2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2", "by auto"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 a1 J = a2 \\<and> apply_cltn2 p1 J = p2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma K2_isometry_swap:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 a J = b \\<and> apply_cltn2 b J = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"a \\<in> K2\" and \"b \\<in> K2\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. a \\<in> hyp2 &&& b \\<in> hyp2", "by simp_all"], ["proof (state)\nthis:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "let ?l = \"proj2_line_through a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "have \"proj2_incident a ?l\" and \"proj2_incident b ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident a (proj2_line_through a b) &&&\n    proj2_incident b (proj2_line_through a b)", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "from \\<open>a \\<in> K2\\<close> and \\<open>proj2_incident a ?l\\<close>\n    and line_through_K2_intersect_S_exactly_twice [of a ?l]"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  \\<lbrakk>a \\<in> hyp2; proj2_incident a (proj2_line_through a b)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q (proj2_line_through a b) \\<and>\n                       proj2_incident r (proj2_line_through a b) \\<and>\n                       (\\<forall>s\\<in>S.\n                           proj2_incident s\n                            (proj2_line_through a b) \\<longrightarrow>\n                           s = q \\<or> s = r)", "obtain p and q where \"p \\<noteq> q\"\n    and \"p \\<in> S\" and \"q \\<in> S\"\n    and \"proj2_incident p ?l\" and \"proj2_incident q ?l\"\n    and \"\\<forall> r\\<in>S. proj2_incident r ?l \\<longrightarrow> r = p \\<or> r = q\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  \\<lbrakk>a \\<in> hyp2; proj2_incident a (proj2_line_through a b)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q (proj2_line_through a b) \\<and>\n                       proj2_incident r (proj2_line_through a b) \\<and>\n                       (\\<forall>s\\<in>S.\n                           proj2_incident s\n                            (proj2_line_through a b) \\<longrightarrow>\n                           s = q \\<or> s = r)\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>p \\<noteq> q; p \\<in> S; q \\<in> S;\n         proj2_incident p (proj2_line_through a b);\n         proj2_incident q (proj2_line_through a b);\n         \\<forall>r\\<in>S.\n            proj2_incident r (proj2_line_through a b) \\<longrightarrow>\n            r = p \\<or> r = q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  proj2_incident p (proj2_line_through a b)\n  proj2_incident q (proj2_line_through a b)\n  \\<forall>r\\<in>S.\n     proj2_incident r (proj2_line_through a b) \\<longrightarrow>\n     r = p \\<or> r = q\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "from \\<open>a \\<in> K2\\<close> and \\<open>b \\<in> K2\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>\n    and statement66_existence [of a b p q]"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S\n  \\<lbrakk>a \\<in> hyp2; b \\<in> hyp2; p \\<in> S; q \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 a J = b \\<and> apply_cltn2 p J = q", "obtain J where \"is_K2_isometry J\" and \"apply_cltn2 a J = b\"\n    and \"apply_cltn2 p J = q\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S\n  \\<lbrakk>a \\<in> hyp2; b \\<in> hyp2; p \\<in> S; q \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 a J = b \\<and> apply_cltn2 p J = q\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; apply_cltn2 a J = b;\n         apply_cltn2 p J = q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  apply_cltn2 a J = b\n  apply_cltn2 p J = q\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "from \\<open>apply_cltn2 a J = b\\<close> and \\<open>apply_cltn2 p J = q\\<close>\n    and \\<open>proj2_incident b ?l\\<close> and \\<open>proj2_incident q ?l\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 a J = b\n  apply_cltn2 p J = q\n  proj2_incident b (proj2_line_through a b)\n  proj2_incident q (proj2_line_through a b)", "have \"proj2_incident (apply_cltn2 a J) ?l\"\n    and \"proj2_incident (apply_cltn2 p J) ?l\""], ["proof (prove)\nusing this:\n  apply_cltn2 a J = b\n  apply_cltn2 p J = q\n  proj2_incident b (proj2_line_through a b)\n  proj2_incident q (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 a J) (proj2_line_through a b) &&&\n    proj2_incident (apply_cltn2 p J) (proj2_line_through a b)", "by simp_all"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 a J) (proj2_line_through a b)\n  proj2_incident (apply_cltn2 p J) (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "from \\<open>a \\<in> K2\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  p \\<in> S", "have \"a \\<noteq> p\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> p", "unfolding S_def and K2_def"], ["proof (prove)\nusing this:\n  a \\<in> {p. conic_sgn p < 0}\n  p \\<in> {p. conic_sgn p = 0}\n\ngoal (1 subgoal):\n 1. a \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  a \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "with \\<open>proj2_incident a ?l\\<close>\n    and \\<open>proj2_incident p ?l\\<close>\n    and \\<open>proj2_incident (apply_cltn2 a J) ?l\\<close>\n    and \\<open>proj2_incident (apply_cltn2 p J) ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident p (proj2_line_through a b)\n  proj2_incident (apply_cltn2 a J) (proj2_line_through a b)\n  proj2_incident (apply_cltn2 p J) (proj2_line_through a b)\n  a \\<noteq> p", "have \"apply_cltn2_line ?l J = ?l\""], ["proof (prove)\nusing this:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident p (proj2_line_through a b)\n  proj2_incident (apply_cltn2 a J) (proj2_line_through a b)\n  proj2_incident (apply_cltn2 p J) (proj2_line_through a b)\n  a \\<noteq> p\n\ngoal (1 subgoal):\n 1. apply_cltn2_line (proj2_line_through a b) J = proj2_line_through a b", "by (simp add: apply_cltn2_line_unique)"], ["proof (state)\nthis:\n  apply_cltn2_line (proj2_line_through a b) J = proj2_line_through a b\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "with \\<open>proj2_incident q ?l\\<close> and apply_cltn2_preserve_incident [of q J ?l]"], ["proof (chain)\npicking this:\n  proj2_incident q (proj2_line_through a b)\n  proj2_incident (apply_cltn2 q J)\n   (apply_cltn2_line (proj2_line_through a b) J) =\n  proj2_incident q (proj2_line_through a b)\n  apply_cltn2_line (proj2_line_through a b) J = proj2_line_through a b", "have \"proj2_incident (apply_cltn2 q J) ?l\""], ["proof (prove)\nusing this:\n  proj2_incident q (proj2_line_through a b)\n  proj2_incident (apply_cltn2 q J)\n   (apply_cltn2_line (proj2_line_through a b) J) =\n  proj2_incident q (proj2_line_through a b)\n  apply_cltn2_line (proj2_line_through a b) J = proj2_line_through a b\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 q J) (proj2_line_through a b)", "by simp"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 q J) (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "from \\<open>q \\<in> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> S\n  is_K2_isometry J", "have \"apply_cltn2 q J \\<in> S\""], ["proof (prove)\nusing this:\n  q \\<in> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<in> S", "by (unfold is_K2_isometry_def) simp"], ["proof (state)\nthis:\n  apply_cltn2 q J \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "with \\<open>proj2_incident (apply_cltn2 q J) ?l\\<close>\n    and \\<open>\\<forall> r\\<in>S. proj2_incident r ?l \\<longrightarrow> r = p \\<or> r = q\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (apply_cltn2 q J) (proj2_line_through a b)\n  \\<forall>r\\<in>S.\n     proj2_incident r (proj2_line_through a b) \\<longrightarrow>\n     r = p \\<or> r = q\n  apply_cltn2 q J \\<in> S", "have \"apply_cltn2 q J = p \\<or> apply_cltn2 q J = q\""], ["proof (prove)\nusing this:\n  proj2_incident (apply_cltn2 q J) (proj2_line_through a b)\n  \\<forall>r\\<in>S.\n     proj2_incident r (proj2_line_through a b) \\<longrightarrow>\n     r = p \\<or> r = q\n  apply_cltn2 q J \\<in> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J = p \\<or> apply_cltn2 q J = q", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 q J = p \\<or> apply_cltn2 q J = q\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "have \"apply_cltn2 q J \\<noteq> q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<noteq> q", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 q J = q \\<Longrightarrow> False", "assume \"apply_cltn2 q J = q\""], ["proof (state)\nthis:\n  apply_cltn2 q J = q\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J = q \\<Longrightarrow> False", "with \\<open>apply_cltn2 p J = q\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 p J = q\n  apply_cltn2 q J = q", "have \"apply_cltn2 p J = apply_cltn2 q J\""], ["proof (prove)\nusing this:\n  apply_cltn2 p J = q\n  apply_cltn2 q J = q\n\ngoal (1 subgoal):\n 1. apply_cltn2 p J = apply_cltn2 q J", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 p J = apply_cltn2 q J\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J = q \\<Longrightarrow> False", "hence \"p = q\""], ["proof (prove)\nusing this:\n  apply_cltn2 p J = apply_cltn2 q J\n\ngoal (1 subgoal):\n 1. p = q", "by (rule apply_cltn2_injective [of p J q])"], ["proof (state)\nthis:\n  p = q\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J = q \\<Longrightarrow> False", "with \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  p = q", "show False"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p = q\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  apply_cltn2 q J \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "with \\<open>apply_cltn2 q J = p \\<or> apply_cltn2 q J = q\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 q J = p \\<or> apply_cltn2 q J = q\n  apply_cltn2 q J \\<noteq> q", "have \"apply_cltn2 q J = p\""], ["proof (prove)\nusing this:\n  apply_cltn2 q J = p \\<or> apply_cltn2 q J = q\n  apply_cltn2 q J \\<noteq> q\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J = p", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 q J = p\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "with \\<open>p \\<noteq> q\\<close>\n    and \\<open>apply_cltn2 p J = q\\<close>\n    and \\<open>proj2_incident p ?l\\<close>\n    and \\<open>proj2_incident q ?l\\<close>\n    and \\<open>proj2_incident a ?l\\<close>\n    and statement55"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  apply_cltn2 p J = q\n  proj2_incident p (proj2_line_through a b)\n  proj2_incident q (proj2_line_through a b)\n  proj2_incident a (proj2_line_through a b)\n  \\<lbrakk>?p \\<noteq> ?q; apply_cltn2 ?p ?C = ?q; apply_cltn2 ?q ?C = ?p;\n   proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?r ?l\\<rbrakk>\n  \\<Longrightarrow> apply_cltn2 (apply_cltn2 ?r ?C) ?C = ?r\n  apply_cltn2 q J = p", "have \"apply_cltn2 (apply_cltn2 a J) J = a\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  apply_cltn2 p J = q\n  proj2_incident p (proj2_line_through a b)\n  proj2_incident q (proj2_line_through a b)\n  proj2_incident a (proj2_line_through a b)\n  \\<lbrakk>?p \\<noteq> ?q; apply_cltn2 ?p ?C = ?q; apply_cltn2 ?q ?C = ?p;\n   proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?r ?l\\<rbrakk>\n  \\<Longrightarrow> apply_cltn2 (apply_cltn2 ?r ?C) ?C = ?r\n  apply_cltn2 q J = p\n\ngoal (1 subgoal):\n 1. apply_cltn2 (apply_cltn2 a J) J = a", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 (apply_cltn2 a J) J = a\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "with \\<open>apply_cltn2 a J = b\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 a J = b\n  apply_cltn2 (apply_cltn2 a J) J = a", "have \"apply_cltn2 b J = a\""], ["proof (prove)\nusing this:\n  apply_cltn2 a J = b\n  apply_cltn2 (apply_cltn2 a J) J = a\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = a", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 b J = a\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "with \\<open>is_K2_isometry J\\<close> and \\<open>apply_cltn2 a J = b\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  apply_cltn2 a J = b\n  apply_cltn2 b J = a", "show \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 a J = b \\<and> apply_cltn2 b J = a\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  apply_cltn2 a J = b\n  apply_cltn2 b J = a\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 b J = a", "by (simp add: exI [of _ J])"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and> apply_cltn2 a J = b \\<and> apply_cltn2 b J = a\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom1: \"\\<forall> a b. a b \\<congruent>\\<^sub>K b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b. a b \\<congruent>\\<^sub>K b a", "proof standard+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a b \\<congruent>\\<^sub>K b a", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a b \\<congruent>\\<^sub>K b a", "let ?a' = \"Rep_hyp2 a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a b \\<congruent>\\<^sub>K b a", "let ?b' = \"Rep_hyp2 b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a b \\<congruent>\\<^sub>K b a", "from Rep_hyp2 and K2_isometry_swap [of ?a' ?b']"], ["proof (chain)\npicking this:\n  Rep_hyp2 ?x \\<in> hyp2\n  \\<lbrakk>Rep_hyp2 a \\<in> hyp2; Rep_hyp2 b \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 b \\<and>\n                       apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a", "obtain J where \"is_K2_isometry J\" and \"apply_cltn2 ?a' J = ?b'\"\n    and \"apply_cltn2 ?b' J = ?a'\""], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n  \\<lbrakk>Rep_hyp2 a \\<in> hyp2; Rep_hyp2 b \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 b \\<and>\n                       apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 b;\n         apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 b\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n\ngoal (1 subgoal):\n 1. \\<And>a b. a b \\<congruent>\\<^sub>K b a", "from \\<open>apply_cltn2 ?a' J = ?b'\\<close> and \\<open>apply_cltn2 ?b' J = ?a'\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 b\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a", "have \"hyp2_cltn2 a J = b\" and \"hyp2_cltn2 b J = a\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 b\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 a J = b &&& hyp2_cltn2 b J = a", "unfolding hyp2_cltn2_def"], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 b\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n\ngoal (1 subgoal):\n 1. Abs_hyp2 (apply_cltn2 (Rep_hyp2 a) J) = b &&&\n    Abs_hyp2 (apply_cltn2 (Rep_hyp2 b) J) = a", "by (simp_all add: Rep_hyp2_inverse)"], ["proof (state)\nthis:\n  hyp2_cltn2 a J = b\n  hyp2_cltn2 b J = a\n\ngoal (1 subgoal):\n 1. \\<And>a b. a b \\<congruent>\\<^sub>K b a", "with \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  hyp2_cltn2 a J = b\n  hyp2_cltn2 b J = a", "show \"a b \\<congruent>\\<^sub>K b a\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  hyp2_cltn2 a J = b\n  hyp2_cltn2 b J = a\n\ngoal (1 subgoal):\n 1. a b \\<congruent>\\<^sub>K b a", "by (unfold real_hyp2_C_def) (simp add: exI [of _ J])"], ["proof (state)\nthis:\n  a b \\<congruent>\\<^sub>K b a\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom2: \"\\<forall> a b p q r s. a b \\<congruent>\\<^sub>K p q \\<and> a b \\<congruent>\\<^sub>K r s \\<longrightarrow> p q \\<congruent>\\<^sub>K r s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "proof standard+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "fix a b p q r s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "assume \"a b \\<congruent>\\<^sub>K p q \\<and> a b \\<congruent>\\<^sub>K r s\""], ["proof (state)\nthis:\n  a b \\<congruent>\\<^sub>K p q \\<and> a b \\<congruent>\\<^sub>K r s\n\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "then"], ["proof (chain)\npicking this:\n  a b \\<congruent>\\<^sub>K p q \\<and> a b \\<congruent>\\<^sub>K r s", "obtain G and H where \"is_K2_isometry G\" and \"is_K2_isometry H\"\n    and \"hyp2_cltn2 a G = p\" and \"hyp2_cltn2 b G = q\"\n   and \"hyp2_cltn2 a H = r\" and \"hyp2_cltn2 b H = s\""], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K p q \\<and> a b \\<congruent>\\<^sub>K r s\n\ngoal (1 subgoal):\n 1. (\\<And>G H.\n        \\<lbrakk>is_K2_isometry G; is_K2_isometry H; hyp2_cltn2 a G = p;\n         hyp2_cltn2 b G = q; hyp2_cltn2 a H = r; hyp2_cltn2 b H = s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_hyp2_C_def) auto"], ["proof (state)\nthis:\n  is_K2_isometry G\n  is_K2_isometry H\n  hyp2_cltn2 a G = p\n  hyp2_cltn2 b G = q\n  hyp2_cltn2 a H = r\n  hyp2_cltn2 b H = s\n\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "let ?J = \"cltn2_compose (cltn2_inverse G) H\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "from \\<open>is_K2_isometry G\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry G", "have \"is_K2_isometry (cltn2_inverse G)\""], ["proof (prove)\nusing this:\n  is_K2_isometry G\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse G)", "by (rule cltn2_inverse_is_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_inverse G)\n\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "with \\<open>is_K2_isometry H\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry H\n  is_K2_isometry (cltn2_inverse G)", "have \"is_K2_isometry ?J\""], ["proof (prove)\nusing this:\n  is_K2_isometry H\n  is_K2_isometry (cltn2_inverse G)\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_compose (cltn2_inverse G) H)", "by (simp only: cltn2_compose_is_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_compose (cltn2_inverse G) H)\n\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "from \\<open>is_K2_isometry G\\<close> and \\<open>hyp2_cltn2 a G = p\\<close> and \\<open>hyp2_cltn2 b G = q\\<close>\n    and K2_isometry.act_inv_iff"], ["proof (chain)\npicking this:\n  is_K2_isometry G\n  hyp2_cltn2 a G = p\n  hyp2_cltn2 b G = q\n  ?g \\<in> carrier\n            \\<lparr>carrier = Collect is_K2_isometry,\n               monoid.mult = cltn2_compose,\n               one = cltn2_id\\<rparr> \\<Longrightarrow>\n  (hyp2_cltn2 ?b\n    (inv\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> ?g) =\n   ?c) =\n  (?b = hyp2_cltn2 ?c ?g)", "have \"hyp2_cltn2 p (cltn2_inverse G) = a\"\n    and \"hyp2_cltn2 q (cltn2_inverse G) = b\""], ["proof (prove)\nusing this:\n  is_K2_isometry G\n  hyp2_cltn2 a G = p\n  hyp2_cltn2 b G = q\n  ?g \\<in> carrier\n            \\<lparr>carrier = Collect is_K2_isometry,\n               monoid.mult = cltn2_compose,\n               one = cltn2_id\\<rparr> \\<Longrightarrow>\n  (hyp2_cltn2 ?b\n    (inv\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub> ?g) =\n   ?c) =\n  (?b = hyp2_cltn2 ?c ?g)\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 p (cltn2_inverse G) = a &&&\n    hyp2_cltn2 q (cltn2_inverse G) = b", "by simp_all"], ["proof (state)\nthis:\n  hyp2_cltn2 p (cltn2_inverse G) = a\n  hyp2_cltn2 q (cltn2_inverse G) = b\n\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "with \\<open>hyp2_cltn2 a H = r\\<close> and \\<open>hyp2_cltn2 b H = s\\<close>\n    and \\<open>is_K2_isometry (cltn2_inverse G)\\<close> and \\<open>is_K2_isometry H\\<close>\n    and K2_isometry.act_act [symmetric]"], ["proof (chain)\npicking this:\n  hyp2_cltn2 a H = r\n  hyp2_cltn2 b H = s\n  is_K2_isometry (cltn2_inverse G)\n  is_K2_isometry H\n  \\<lbrakk>?g \\<in> carrier\n                     \\<lparr>carrier = Collect is_K2_isometry,\n                        monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>;\n   ?h \\<in> carrier\n             \\<lparr>carrier = Collect is_K2_isometry,\n                monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> hyp2_cltn2 ?b\n                     (?g \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n                      ?h) =\n                    hyp2_cltn2 (hyp2_cltn2 ?b ?g) ?h\n  hyp2_cltn2 p (cltn2_inverse G) = a\n  hyp2_cltn2 q (cltn2_inverse G) = b", "have \"hyp2_cltn2 p ?J = r\" and \"hyp2_cltn2 q ?J = s\""], ["proof (prove)\nusing this:\n  hyp2_cltn2 a H = r\n  hyp2_cltn2 b H = s\n  is_K2_isometry (cltn2_inverse G)\n  is_K2_isometry H\n  \\<lbrakk>?g \\<in> carrier\n                     \\<lparr>carrier = Collect is_K2_isometry,\n                        monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>;\n   ?h \\<in> carrier\n             \\<lparr>carrier = Collect is_K2_isometry,\n                monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> hyp2_cltn2 ?b\n                     (?g \\<otimes>\\<^bsub>\\<lparr>carrier = Collect is_K2_isometry, monoid.mult = cltn2_compose, one = cltn2_id\\<rparr>\\<^esub>\n                      ?h) =\n                    hyp2_cltn2 (hyp2_cltn2 ?b ?g) ?h\n  hyp2_cltn2 p (cltn2_inverse G) = a\n  hyp2_cltn2 q (cltn2_inverse G) = b\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 p (cltn2_compose (cltn2_inverse G) H) = r &&&\n    hyp2_cltn2 q (cltn2_compose (cltn2_inverse G) H) = s", "by simp_all"], ["proof (state)\nthis:\n  hyp2_cltn2 p (cltn2_compose (cltn2_inverse G) H) = r\n  hyp2_cltn2 q (cltn2_compose (cltn2_inverse G) H) = s\n\ngoal (1 subgoal):\n 1. \\<And>a b p q r s.\n       a b \\<congruent>\\<^sub>K p q \\<and>\n       a b \\<congruent>\\<^sub>K r s \\<Longrightarrow>\n       p q \\<congruent>\\<^sub>K r s", "with \\<open>is_K2_isometry ?J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry (cltn2_compose (cltn2_inverse G) H)\n  hyp2_cltn2 p (cltn2_compose (cltn2_inverse G) H) = r\n  hyp2_cltn2 q (cltn2_compose (cltn2_inverse G) H) = s", "show \"p q \\<congruent>\\<^sub>K r s\""], ["proof (prove)\nusing this:\n  is_K2_isometry (cltn2_compose (cltn2_inverse G) H)\n  hyp2_cltn2 p (cltn2_compose (cltn2_inverse G) H) = r\n  hyp2_cltn2 q (cltn2_compose (cltn2_inverse G) H) = s\n\ngoal (1 subgoal):\n 1. p q \\<congruent>\\<^sub>K r s", "by (unfold real_hyp2_C_def) (simp add: exI [of _ ?J])"], ["proof (state)\nthis:\n  p q \\<congruent>\\<^sub>K r s\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom3: \"\\<forall> a b c. a b \\<congruent>\\<^sub>K c c \\<longrightarrow> a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b c. a b \\<congruent>\\<^sub>K c c \\<longrightarrow> a = b", "proof standard+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c. a b \\<congruent>\\<^sub>K c c \\<Longrightarrow> a = b", "fix a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c. a b \\<congruent>\\<^sub>K c c \\<Longrightarrow> a = b", "assume \"a b \\<congruent>\\<^sub>K c c\""], ["proof (state)\nthis:\n  a b \\<congruent>\\<^sub>K c c\n\ngoal (1 subgoal):\n 1. \\<And>a b c. a b \\<congruent>\\<^sub>K c c \\<Longrightarrow> a = b", "then"], ["proof (chain)\npicking this:\n  a b \\<congruent>\\<^sub>K c c", "obtain J where \"is_K2_isometry J\"\n    and \"hyp2_cltn2 a J = c\" and \"hyp2_cltn2 b J = c\""], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K c c\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; hyp2_cltn2 a J = c;\n         hyp2_cltn2 b J = c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_hyp2_C_def) auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  hyp2_cltn2 a J = c\n  hyp2_cltn2 b J = c\n\ngoal (1 subgoal):\n 1. \\<And>a b c. a b \\<congruent>\\<^sub>K c c \\<Longrightarrow> a = b", "from \\<open>hyp2_cltn2 a J = c\\<close> and \\<open>hyp2_cltn2 b J = c\\<close>"], ["proof (chain)\npicking this:\n  hyp2_cltn2 a J = c\n  hyp2_cltn2 b J = c", "have \"hyp2_cltn2 a J = hyp2_cltn2 b J\""], ["proof (prove)\nusing this:\n  hyp2_cltn2 a J = c\n  hyp2_cltn2 b J = c\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 a J = hyp2_cltn2 b J", "by simp"], ["proof (state)\nthis:\n  hyp2_cltn2 a J = hyp2_cltn2 b J\n\ngoal (1 subgoal):\n 1. \\<And>a b c. a b \\<congruent>\\<^sub>K c c \\<Longrightarrow> a = b", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "have \"apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\"\n    and \"apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2 &&&\n    apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2", "by (rule apply_cltn2_Rep_hyp2)+"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<And>a b c. a b \\<congruent>\\<^sub>K c c \\<Longrightarrow> a = b", "with \\<open>hyp2_cltn2 a J = hyp2_cltn2 b J\\<close>"], ["proof (chain)\npicking this:\n  hyp2_cltn2 a J = hyp2_cltn2 b J\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2", "have \"apply_cltn2 (Rep_hyp2 a) J = apply_cltn2 (Rep_hyp2 b) J\""], ["proof (prove)\nusing this:\n  hyp2_cltn2 a J = hyp2_cltn2 b J\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 a) J = apply_cltn2 (Rep_hyp2 b) J", "by (unfold hyp2_cltn2_def) (simp add: Abs_hyp2_inject)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 a) J = apply_cltn2 (Rep_hyp2 b) J\n\ngoal (1 subgoal):\n 1. \\<And>a b c. a b \\<congruent>\\<^sub>K c c \\<Longrightarrow> a = b", "hence \"Rep_hyp2 a = Rep_hyp2 b\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 a) J = apply_cltn2 (Rep_hyp2 b) J\n\ngoal (1 subgoal):\n 1. Rep_hyp2 a = Rep_hyp2 b", "by (rule apply_cltn2_injective)"], ["proof (state)\nthis:\n  Rep_hyp2 a = Rep_hyp2 b\n\ngoal (1 subgoal):\n 1. \\<And>a b c. a b \\<congruent>\\<^sub>K c c \\<Longrightarrow> a = b", "thus \"a = b\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a = Rep_hyp2 b\n\ngoal (1 subgoal):\n 1. a = b", "by (simp add: Rep_hyp2_inject)"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation hyp2: tarski_first3 real_hyp2_C"], ["proof (prove)\ngoal (1 subgoal):\n 1. tarski_first3 real_hyp2_C", "using hyp2_axiom1 and hyp2_axiom2 and hyp2_axiom3"], ["proof (prove)\nusing this:\n  \\<forall>a b. a b \\<congruent>\\<^sub>K b a\n  \\<forall>a b p q r s.\n     a b \\<congruent>\\<^sub>K p q \\<and>\n     a b \\<congruent>\\<^sub>K r s \\<longrightarrow>\n     p q \\<congruent>\\<^sub>K r s\n  \\<forall>a b c. a b \\<congruent>\\<^sub>K c c \\<longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. tarski_first3 real_hyp2_C", "by unfold_locales"], ["", "subsection \\<open>Some lemmas about betweenness\\<close>"], ["", "lemma S_at_edge:\n  assumes \"p \\<in> S\" and \"q \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\" and \"proj2_Col p q r\"\n  shows \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt q) (cart2_pt r)\n  \\<or> B\\<^sub>\\<real> (cart2_pt p) (cart2_pt r) (cart2_pt q)\"\n  (is \"B\\<^sub>\\<real> ?cp ?cq ?cr \\<or> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S", "have \"z_non_zero p\" and \"z_non_zero q\" and \"z_non_zero r\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. z_non_zero p &&& z_non_zero q &&& z_non_zero r", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n  z_non_zero q\n  z_non_zero r\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>proj2_Col p q r\\<close>"], ["proof (chain)\npicking this:\n  proj2_Col p q r\n  z_non_zero p\n  z_non_zero q\n  z_non_zero r", "have \"real_euclid.Col ?cp ?cq ?cr\""], ["proof (prove)\nusing this:\n  proj2_Col p q r\n  z_non_zero p\n  z_non_zero q\n  z_non_zero r\n\ngoal (1 subgoal):\n 1. real_euclid.Col (cart2_pt p) (cart2_pt q) (cart2_pt r)", "by (simp add: proj2_Col_iff_euclid_cart2)"], ["proof (state)\nthis:\n  real_euclid.Col (cart2_pt p) (cart2_pt q) (cart2_pt r)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>z_non_zero p\\<close> and \\<open>z_non_zero q\\<close> and \\<open>z_non_zero r\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero p\n  z_non_zero q\n  z_non_zero r\n  real_euclid.Col (cart2_pt p) (cart2_pt q) (cart2_pt r)", "have \"proj2_pt ?cp = p\" and \"proj2_pt ?cq = q\" and \"proj2_pt ?cr = r\""], ["proof (prove)\nusing this:\n  z_non_zero p\n  z_non_zero q\n  z_non_zero r\n  real_euclid.Col (cart2_pt p) (cart2_pt q) (cart2_pt r)\n\ngoal (1 subgoal):\n 1. proj2_pt (cart2_pt p) = p &&&\n    proj2_pt (cart2_pt q) = q &&& proj2_pt (cart2_pt r) = r", "by (simp_all add: proj2_cart2)"], ["proof (state)\nthis:\n  proj2_pt (cart2_pt p) = p\n  proj2_pt (cart2_pt q) = q\n  proj2_pt (cart2_pt r) = r\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "from \\<open>proj2_pt ?cp = p\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  proj2_pt (cart2_pt p) = p\n  p \\<in> S", "have \"norm ?cp = 1\""], ["proof (prove)\nusing this:\n  proj2_pt (cart2_pt p) = p\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. norm (cart2_pt p) = 1", "by (simp add: norm_eq_1_iff_in_S)"], ["proof (state)\nthis:\n  norm (cart2_pt p) = 1\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "from \\<open>proj2_pt ?cq = q\\<close> and \\<open>proj2_pt ?cr = r\\<close>\n    and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  proj2_pt (cart2_pt q) = q\n  proj2_pt (cart2_pt r) = r\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S", "have \"norm ?cq \\<le> 1\" and \"norm ?cr \\<le> 1\""], ["proof (prove)\nusing this:\n  proj2_pt (cart2_pt q) = q\n  proj2_pt (cart2_pt r) = r\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. norm (cart2_pt q) \\<le> 1 &&& norm (cart2_pt r) \\<le> 1", "by (simp_all add: norm_le_1_iff_in_hyp2_S)"], ["proof (state)\nthis:\n  norm (cart2_pt q) \\<le> 1\n  norm (cart2_pt r) \\<le> 1\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "show \"B\\<^sub>\\<real> ?cp ?cq ?cr \\<or> B\\<^sub>\\<real> ?cp ?cr ?cq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "assume \"B\\<^sub>\\<real> ?cr ?cp ?cq\""], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt r cart2_pt p cart2_pt q\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "then"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt r cart2_pt p cart2_pt q", "obtain k where \"k \\<ge> 0\" and \"k \\<le> 1\"\n      and \"?cp - ?cr = k *\\<^sub>R (?cq - ?cr)\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt r cart2_pt p cart2_pt q\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 \\<le> k; k \\<le> 1;\n         cart2_pt p - cart2_pt r =\n         k *\\<^sub>R (cart2_pt q - cart2_pt r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_euclid_B_def) auto"], ["proof (state)\nthis:\n  0 \\<le> k\n  k \\<le> 1\n  cart2_pt p - cart2_pt r = k *\\<^sub>R (cart2_pt q - cart2_pt r)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "from \\<open>?cp - ?cr = k *\\<^sub>R (?cq - ?cr)\\<close>"], ["proof (chain)\npicking this:\n  cart2_pt p - cart2_pt r = k *\\<^sub>R (cart2_pt q - cart2_pt r)", "have \"?cp = k *\\<^sub>R ?cq + (1 - k) *\\<^sub>R ?cr\""], ["proof (prove)\nusing this:\n  cart2_pt p - cart2_pt r = k *\\<^sub>R (cart2_pt q - cart2_pt r)\n\ngoal (1 subgoal):\n 1. cart2_pt p = k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  cart2_pt p = k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>norm ?cp = 1\\<close>"], ["proof (chain)\npicking this:\n  norm (cart2_pt p) = 1\n  cart2_pt p = k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r", "have \"norm (k *\\<^sub>R ?cq + (1 - k) *\\<^sub>R ?cr) = 1\""], ["proof (prove)\nusing this:\n  norm (cart2_pt p) = 1\n  cart2_pt p = k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r\n\ngoal (1 subgoal):\n 1. norm (k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r) = 1", "by simp"], ["proof (state)\nthis:\n  norm (k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r) = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with norm_triangle_ineq [of \"k *\\<^sub>R ?cq\" \"(1 - k) *\\<^sub>R ?cr\"]"], ["proof (chain)\npicking this:\n  norm (k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r)\n  \\<le> norm (k *\\<^sub>R cart2_pt q) + norm ((1 - k) *\\<^sub>R cart2_pt r)\n  norm (k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r) = 1", "have \"norm (k *\\<^sub>R ?cq) + norm ((1 - k) *\\<^sub>R ?cr) \\<ge> 1\""], ["proof (prove)\nusing this:\n  norm (k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r)\n  \\<le> norm (k *\\<^sub>R cart2_pt q) + norm ((1 - k) *\\<^sub>R cart2_pt r)\n  norm (k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r) = 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> norm (k *\\<^sub>R cart2_pt q) +\n            norm ((1 - k) *\\<^sub>R cart2_pt r)", "by simp"], ["proof (state)\nthis:\n  1 \\<le> norm (k *\\<^sub>R cart2_pt q) +\n          norm ((1 - k) *\\<^sub>R cart2_pt r)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "from \\<open>k \\<ge> 0\\<close> and \\<open>k \\<le> 1\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> k\n  k \\<le> 1", "have \"norm (k *\\<^sub>R ?cq) + norm ((1 - k) *\\<^sub>R ?cr)\n      = k * norm ?cq + (1 - k) * norm ?cr\""], ["proof (prove)\nusing this:\n  0 \\<le> k\n  k \\<le> 1\n\ngoal (1 subgoal):\n 1. norm (k *\\<^sub>R cart2_pt q) + norm ((1 - k) *\\<^sub>R cart2_pt r) =\n    k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r)", "by simp"], ["proof (state)\nthis:\n  norm (k *\\<^sub>R cart2_pt q) + norm ((1 - k) *\\<^sub>R cart2_pt r) =\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>norm (k *\\<^sub>R ?cq) + norm ((1 - k) *\\<^sub>R ?cr) \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> norm (k *\\<^sub>R cart2_pt q) +\n          norm ((1 - k) *\\<^sub>R cart2_pt r)\n  norm (k *\\<^sub>R cart2_pt q) + norm ((1 - k) *\\<^sub>R cart2_pt r) =\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r)", "have \"k * norm ?cq + (1 - k) * norm ?cr \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> norm (k *\\<^sub>R cart2_pt q) +\n          norm ((1 - k) *\\<^sub>R cart2_pt r)\n  norm (k *\\<^sub>R cart2_pt q) + norm ((1 - k) *\\<^sub>R cart2_pt r) =\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r)\n\ngoal (1 subgoal):\n 1. 1 \\<le> k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r)", "by simp"], ["proof (state)\nthis:\n  1 \\<le> k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "from \\<open>norm ?cq \\<le> 1\\<close> and \\<open>k \\<ge> 0\\<close> and mult_mono [of k k \"norm ?cq\" 1]"], ["proof (chain)\npicking this:\n  norm (cart2_pt q) \\<le> 1\n  0 \\<le> k\n  \\<lbrakk>k \\<le> k; norm (cart2_pt q) \\<le> 1; 0 \\<le> k;\n   0 \\<le> norm (cart2_pt q)\\<rbrakk>\n  \\<Longrightarrow> k * norm (cart2_pt q) \\<le> k * 1", "have \"k * norm ?cq \\<le> k\""], ["proof (prove)\nusing this:\n  norm (cart2_pt q) \\<le> 1\n  0 \\<le> k\n  \\<lbrakk>k \\<le> k; norm (cart2_pt q) \\<le> 1; 0 \\<le> k;\n   0 \\<le> norm (cart2_pt q)\\<rbrakk>\n  \\<Longrightarrow> k * norm (cart2_pt q) \\<le> k * 1\n\ngoal (1 subgoal):\n 1. k * norm (cart2_pt q) \\<le> k", "by simp"], ["proof (state)\nthis:\n  k * norm (cart2_pt q) \\<le> k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "from \\<open>norm ?cr \\<le> 1\\<close> and \\<open>k \\<le> 1\\<close>\n      and mult_mono [of \"1 - k\" \"1 - k\" \"norm ?cr\" 1]"], ["proof (chain)\npicking this:\n  norm (cart2_pt r) \\<le> 1\n  k \\<le> 1\n  \\<lbrakk>1 - k \\<le> 1 - k; norm (cart2_pt r) \\<le> 1; 0 \\<le> 1 - k;\n   0 \\<le> norm (cart2_pt r)\\<rbrakk>\n  \\<Longrightarrow> (1 - k) * norm (cart2_pt r) \\<le> (1 - k) * 1", "have \"(1 - k) * norm ?cr \\<le> 1 - k\""], ["proof (prove)\nusing this:\n  norm (cart2_pt r) \\<le> 1\n  k \\<le> 1\n  \\<lbrakk>1 - k \\<le> 1 - k; norm (cart2_pt r) \\<le> 1; 0 \\<le> 1 - k;\n   0 \\<le> norm (cart2_pt r)\\<rbrakk>\n  \\<Longrightarrow> (1 - k) * norm (cart2_pt r) \\<le> (1 - k) * 1\n\ngoal (1 subgoal):\n 1. (1 - k) * norm (cart2_pt r) \\<le> 1 - k", "by simp"], ["proof (state)\nthis:\n  (1 - k) * norm (cart2_pt r) \\<le> 1 - k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>k * norm ?cq \\<le> k\\<close>"], ["proof (chain)\npicking this:\n  k * norm (cart2_pt q) \\<le> k\n  (1 - k) * norm (cart2_pt r) \\<le> 1 - k", "have \"k * norm ?cq + (1 - k) * norm ?cr \\<le> 1\""], ["proof (prove)\nusing this:\n  k * norm (cart2_pt q) \\<le> k\n  (1 - k) * norm (cart2_pt r) \\<le> 1 - k\n\ngoal (1 subgoal):\n 1. k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) \\<le> 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>k * norm ?cq + (1 - k) * norm ?cr \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r)\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) \\<le> 1", "have \"k * norm ?cq + (1 - k) * norm ?cr = 1\""], ["proof (prove)\nusing this:\n  1 \\<le> k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r)\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) \\<le> 1\n\ngoal (1 subgoal):\n 1. k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) = 1", "by simp"], ["proof (state)\nthis:\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>k * norm ?cq \\<le> k\\<close>"], ["proof (chain)\npicking this:\n  k * norm (cart2_pt q) \\<le> k\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) = 1", "have \"(1 - k) * norm ?cr \\<ge> 1 - k\""], ["proof (prove)\nusing this:\n  k * norm (cart2_pt q) \\<le> k\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) = 1\n\ngoal (1 subgoal):\n 1. 1 - k \\<le> (1 - k) * norm (cart2_pt r)", "by simp"], ["proof (state)\nthis:\n  1 - k \\<le> (1 - k) * norm (cart2_pt r)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>(1 - k) * norm ?cr \\<le> 1 - k\\<close>"], ["proof (chain)\npicking this:\n  (1 - k) * norm (cart2_pt r) \\<le> 1 - k\n  1 - k \\<le> (1 - k) * norm (cart2_pt r)", "have \"(1 - k) * norm ?cr = 1 - k\""], ["proof (prove)\nusing this:\n  (1 - k) * norm (cart2_pt r) \\<le> 1 - k\n  1 - k \\<le> (1 - k) * norm (cart2_pt r)\n\ngoal (1 subgoal):\n 1. (1 - k) * norm (cart2_pt r) = 1 - k", "by simp"], ["proof (state)\nthis:\n  (1 - k) * norm (cart2_pt r) = 1 - k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>k * norm ?cq + (1 - k) * norm ?cr = 1\\<close>"], ["proof (chain)\npicking this:\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) = 1\n  (1 - k) * norm (cart2_pt r) = 1 - k", "have \"k * norm ?cq = k\""], ["proof (prove)\nusing this:\n  k * norm (cart2_pt q) + (1 - k) * norm (cart2_pt r) = 1\n  (1 - k) * norm (cart2_pt r) = 1 - k\n\ngoal (1 subgoal):\n 1. k * norm (cart2_pt q) = k", "by simp"], ["proof (state)\nthis:\n  k * norm (cart2_pt q) = k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "have \"?cp = ?cq \\<or> ?cq = ?cr \\<or> ?cr = ?cp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p\n 2. \\<not> ?P \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "assume \"k = 0 \\<or> k = 1\""], ["proof (state)\nthis:\n  k = 0 \\<or> k = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p\n 2. \\<not> ?P \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "with \\<open>?cp = k *\\<^sub>R ?cq + (1 - k) *\\<^sub>R ?cr\\<close>"], ["proof (chain)\npicking this:\n  cart2_pt p = k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r\n  k = 0 \\<or> k = 1", "show \"?cp = ?cq \\<or> ?cq = ?cr \\<or> ?cr = ?cp\""], ["proof (prove)\nusing this:\n  cart2_pt p = k *\\<^sub>R cart2_pt q + (1 - k) *\\<^sub>R cart2_pt r\n  k = 0 \\<or> k = 1\n\ngoal (1 subgoal):\n 1. cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "by auto"], ["proof (state)\nthis:\n  cart2_pt p = cart2_pt q \\<or>\n  cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "assume \"\\<not> (k = 0 \\<or> k = 1)\""], ["proof (state)\nthis:\n  \\<not> (k = 0 \\<or> k = 1)\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "hence \"k \\<noteq> 0\" and \"k \\<noteq> 1\""], ["proof (prove)\nusing this:\n  \\<not> (k = 0 \\<or> k = 1)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 &&& k \\<noteq> 1", "by simp_all"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  k \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "with \\<open>k * norm ?cq = k\\<close> and \\<open>(1 - k) * norm ?cr = 1 - k\\<close>"], ["proof (chain)\npicking this:\n  k * norm (cart2_pt q) = k\n  (1 - k) * norm (cart2_pt r) = 1 - k\n  k \\<noteq> 0\n  k \\<noteq> 1", "have \"norm ?cq = 1\" and \"norm ?cr = 1\""], ["proof (prove)\nusing this:\n  k * norm (cart2_pt q) = k\n  (1 - k) * norm (cart2_pt r) = 1 - k\n  k \\<noteq> 0\n  k \\<noteq> 1\n\ngoal (1 subgoal):\n 1. norm (cart2_pt q) = 1 &&& norm (cart2_pt r) = 1", "by simp_all"], ["proof (state)\nthis:\n  norm (cart2_pt q) = 1\n  norm (cart2_pt r) = 1\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "with \\<open>proj2_pt ?cq = q\\<close> and \\<open>proj2_pt ?cr = r\\<close>"], ["proof (chain)\npicking this:\n  proj2_pt (cart2_pt q) = q\n  proj2_pt (cart2_pt r) = r\n  norm (cart2_pt q) = 1\n  norm (cart2_pt r) = 1", "have \"q \\<in> S\" and \"r \\<in> S\""], ["proof (prove)\nusing this:\n  proj2_pt (cart2_pt q) = q\n  proj2_pt (cart2_pt r) = r\n  norm (cart2_pt q) = 1\n  norm (cart2_pt r) = 1\n\ngoal (1 subgoal):\n 1. q \\<in> S &&& r \\<in> S", "by (simp_all add: norm_eq_1_iff_in_S)"], ["proof (state)\nthis:\n  q \\<in> S\n  r \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "with \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S", "have \"{p,q,r} \\<subseteq> S\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n\ngoal (1 subgoal):\n 1. {p, q, r} \\<subseteq> S", "by simp"], ["proof (state)\nthis:\n  {p, q, r} \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "from \\<open>proj2_Col p q r\\<close>"], ["proof (chain)\npicking this:\n  proj2_Col p q r", "have \"proj2_set_Col {p,q,r}\""], ["proof (prove)\nusing this:\n  proj2_Col p q r\n\ngoal (1 subgoal):\n 1. proj2_set_Col {p, q, r}", "by (simp add: proj2_Col_iff_set_Col)"], ["proof (state)\nthis:\n  proj2_set_Col {p, q, r}\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "with \\<open>{p,q,r} \\<subseteq> S\\<close>"], ["proof (chain)\npicking this:\n  {p, q, r} \\<subseteq> S\n  proj2_set_Col {p, q, r}", "have \"card {p,q,r} \\<le> 2\""], ["proof (prove)\nusing this:\n  {p, q, r} \\<subseteq> S\n  proj2_set_Col {p, q, r}\n\ngoal (1 subgoal):\n 1. card {p, q, r} \\<le> 2", "by (rule card_line_intersect_S)"], ["proof (state)\nthis:\n  card {p, q, r} \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "have \"p = q \\<or> q = r \\<or> r = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = q \\<or> q = r \\<or> r = p", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (p = q \\<or> q = r \\<or> r = p) \\<Longrightarrow> False", "assume \"\\<not> (p = q \\<or> q = r \\<or> r = p)\""], ["proof (state)\nthis:\n  \\<not> (p = q \\<or> q = r \\<or> r = p)\n\ngoal (1 subgoal):\n 1. \\<not> (p = q \\<or> q = r \\<or> r = p) \\<Longrightarrow> False", "hence \"p \\<noteq> q\" and \"q \\<noteq> r\" and \"r \\<noteq> p\""], ["proof (prove)\nusing this:\n  \\<not> (p = q \\<or> q = r \\<or> r = p)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q &&& q \\<noteq> r &&& r \\<noteq> p", "by simp_all"], ["proof (state)\nthis:\n  p \\<noteq> q\n  q \\<noteq> r\n  r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<not> (p = q \\<or> q = r \\<or> r = p) \\<Longrightarrow> False", "from \\<open>q \\<noteq> r\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> r", "have \"card {q,r} = 2\""], ["proof (prove)\nusing this:\n  q \\<noteq> r\n\ngoal (1 subgoal):\n 1. card {q, r} = 2", "by simp"], ["proof (state)\nthis:\n  card {q, r} = 2\n\ngoal (1 subgoal):\n 1. \\<not> (p = q \\<or> q = r \\<or> r = p) \\<Longrightarrow> False", "with \\<open>p \\<noteq> q\\<close> and \\<open>r \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  r \\<noteq> p\n  card {q, r} = 2", "have \"card {p,q,r} = 3\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  r \\<noteq> p\n  card {q, r} = 2\n\ngoal (1 subgoal):\n 1. card {p, q, r} = 3", "by simp"], ["proof (state)\nthis:\n  card {p, q, r} = 3\n\ngoal (1 subgoal):\n 1. \\<not> (p = q \\<or> q = r \\<or> r = p) \\<Longrightarrow> False", "with \\<open>card {p,q,r} \\<le> 2\\<close>"], ["proof (chain)\npicking this:\n  card {p, q, r} \\<le> 2\n  card {p, q, r} = 3", "show False"], ["proof (prove)\nusing this:\n  card {p, q, r} \\<le> 2\n  card {p, q, r} = 3\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p = q \\<or> q = r \\<or> r = p\n\ngoal (1 subgoal):\n 1. \\<not> (k = 0 \\<or> k = 1) \\<Longrightarrow>\n    cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "thus \"?cp = ?cq \\<or> ?cq = ?cr \\<or> ?cr = ?cp\""], ["proof (prove)\nusing this:\n  p = q \\<or> q = r \\<or> r = p\n\ngoal (1 subgoal):\n 1. cart2_pt p = cart2_pt q \\<or>\n    cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p", "by auto"], ["proof (state)\nthis:\n  cart2_pt p = cart2_pt q \\<or>\n  cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cart2_pt p = cart2_pt q \\<or>\n  cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "thus \"B\\<^sub>\\<real> ?cp ?cq ?cr \\<or> B\\<^sub>\\<real> ?cp ?cr ?cq\""], ["proof (prove)\nusing this:\n  cart2_pt p = cart2_pt q \\<or>\n  cart2_pt q = cart2_pt r \\<or> cart2_pt r = cart2_pt p\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "by (auto simp add: real_euclid.th3_1 real_euclid.th3_2)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            r cart2_pt p cart2_pt q \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            r cart2_pt p cart2_pt q \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "assume \"\\<not> B\\<^sub>\\<real> ?cr ?cp ?cq\""], ["proof (state)\nthis:\n  \\<not> B\\<^sub>\\<real> cart2_pt r cart2_pt p cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            r cart2_pt p cart2_pt q \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "with \\<open>real_euclid.Col ?cp ?cq ?cr\\<close>"], ["proof (chain)\npicking this:\n  real_euclid.Col (cart2_pt p) (cart2_pt q) (cart2_pt r)\n  \\<not> B\\<^sub>\\<real> cart2_pt r cart2_pt p cart2_pt q", "show \"B\\<^sub>\\<real> ?cp ?cq ?cr \\<or> B\\<^sub>\\<real> ?cp ?cr ?cq\""], ["proof (prove)\nusing this:\n  real_euclid.Col (cart2_pt p) (cart2_pt q) (cart2_pt r)\n  \\<not> B\\<^sub>\\<real> cart2_pt r cart2_pt p cart2_pt q\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "unfolding real_euclid.Col_def"], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p \\<or>\n  B\\<^sub>\\<real> cart2_pt r cart2_pt p cart2_pt q\n  \\<not> B\\<^sub>\\<real> cart2_pt r cart2_pt p cart2_pt q\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "by (auto simp add: real_euclid.th3_1 real_euclid.th3_2)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_in_middle:\n  assumes \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> hyp2 \\<union> S\" and \"proj2_Col p q r\"\n  and \"p \\<noteq> q\"\n  shows \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt r) (cart2_pt q)\" (is \"B\\<^sub>\\<real> ?cp ?cr ?cq\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "assume \"\\<not> B\\<^sub>\\<real> ?cp ?cr ?cq\""], ["proof (state)\nthis:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "hence \"\\<not> B\\<^sub>\\<real> ?cq ?cr ?cp\""], ["proof (prove)\nusing this:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p", "by (auto simp add: real_euclid.th3_2 [of ?cq ?cr ?cp])"], ["proof (state)\nthis:\n  \\<not> B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close> and \\<open>proj2_Col p q r\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> hyp2 \\<union> S\n  proj2_Col p q r", "have \"B\\<^sub>\\<real> ?cp ?cq ?cr \\<or> B\\<^sub>\\<real> ?cp ?cr ?cq\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> hyp2 \\<union> S\n  proj2_Col p q r\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "by (simp add: S_at_edge)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "with \\<open>\\<not> B\\<^sub>\\<real> ?cp ?cr ?cq\\<close>"], ["proof (chain)\npicking this:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q", "have \"B\\<^sub>\\<real> ?cp ?cq ?cr\""], ["proof (prove)\nusing this:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt r cart2_pt q\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "from \\<open>proj2_Col p q r\\<close> and proj2_Col_permute"], ["proof (chain)\npicking this:\n  proj2_Col p q r\n  proj2_Col ?a ?b ?c \\<Longrightarrow> proj2_Col ?a ?c ?b\n  proj2_Col ?a ?b ?c \\<Longrightarrow> proj2_Col ?b ?a ?c", "have \"proj2_Col q p r\""], ["proof (prove)\nusing this:\n  proj2_Col p q r\n  proj2_Col ?a ?b ?c \\<Longrightarrow> proj2_Col ?a ?c ?b\n  proj2_Col ?a ?b ?c \\<Longrightarrow> proj2_Col ?b ?a ?c\n\ngoal (1 subgoal):\n 1. proj2_Col q p r", "by fast"], ["proof (state)\nthis:\n  proj2_Col q p r\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "with \\<open>q \\<in> S\\<close> and \\<open>p \\<in> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> S\n  p \\<in> S\n  r \\<in> hyp2 \\<union> S\n  proj2_Col q p r", "have \"B\\<^sub>\\<real> ?cq ?cp ?cr \\<or> B\\<^sub>\\<real> ?cq ?cr ?cp\""], ["proof (prove)\nusing this:\n  q \\<in> S\n  p \\<in> S\n  r \\<in> hyp2 \\<union> S\n  proj2_Col q p r\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt r \\<or>\n    B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p", "by (simp add: S_at_edge)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "with \\<open>\\<not> B\\<^sub>\\<real> ?cq ?cr ?cp\\<close>"], ["proof (chain)\npicking this:\n  \\<not> B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p", "have \"B\\<^sub>\\<real> ?cq ?cp ?cr\""], ["proof (prove)\nusing this:\n  \\<not> B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt r \\<or>\n  B\\<^sub>\\<real> cart2_pt q cart2_pt r cart2_pt p\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt r", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt r\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "with \\<open>B\\<^sub>\\<real> ?cp ?cq ?cr\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt r", "have \"?cp = ?cq\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt r\n\ngoal (1 subgoal):\n 1. cart2_pt p = cart2_pt q", "by (rule real_euclid.th3_4)"], ["proof (state)\nthis:\n  cart2_pt p = cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "hence \"proj2_pt ?cp = proj2_pt ?cq\""], ["proof (prove)\nusing this:\n  cart2_pt p = cart2_pt q\n\ngoal (1 subgoal):\n 1. proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)", "by simp"], ["proof (state)\nthis:\n  proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S", "have \"z_non_zero p\" and \"z_non_zero q\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. z_non_zero p &&& z_non_zero q", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n  z_non_zero q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "hence \"proj2_pt ?cp = p\" and \"proj2_pt ?cq = q\""], ["proof (prove)\nusing this:\n  z_non_zero p\n  z_non_zero q\n\ngoal (1 subgoal):\n 1. proj2_pt (cart2_pt p) = p &&& proj2_pt (cart2_pt q) = q", "by (simp_all add: proj2_cart2)"], ["proof (state)\nthis:\n  proj2_pt (cart2_pt p) = p\n  proj2_pt (cart2_pt q) = q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "with \\<open>proj2_pt ?cp = proj2_pt ?cq\\<close>"], ["proof (chain)\npicking this:\n  proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)\n  proj2_pt (cart2_pt p) = p\n  proj2_pt (cart2_pt q) = q", "have \"p = q\""], ["proof (prove)\nusing this:\n  proj2_pt (cart2_pt p) = proj2_pt (cart2_pt q)\n  proj2_pt (cart2_pt p) = p\n  proj2_pt (cart2_pt q) = q\n\ngoal (1 subgoal):\n 1. p = q", "by simp"], ["proof (state)\nthis:\n  p = q\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt r cart2_pt q \\<Longrightarrow>\n    False", "with \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  p = q", "show False"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p = q\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_incident_in_middle:\n  assumes \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2 \\<union> S\"\n  and \"proj2_incident p l\" and \"proj2_incident q l\" and \"proj2_incident a l\"\n  shows \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt a) (cart2_pt q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q", "from \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close> and \\<open>proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l", "have \"proj2_Col p q a\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. proj2_Col p q a", "by (rule proj2_incident_Col)"], ["proof (state)\nthis:\n  proj2_Col p q a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and this and \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2 \\<union> S\n  proj2_Col p q a\n  p \\<noteq> q", "show \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt a) (cart2_pt q)\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2 \\<union> S\n  proj2_Col p q a\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q", "by (rule hyp2_in_middle)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma extend_to_S:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\"\n  shows \"\\<exists> r\\<in>S. B\\<^sub>\\<real> (cart2_pt p) (cart2_pt q) (cart2_pt r)\"\n  (is \"\\<exists> r\\<in>S. B\\<^sub>\\<real> ?cp ?cq (cart2_pt r)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "assume \"q \\<in> S\""], ["proof (state)\nthis:\n  q \\<in> S\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "have \"B\\<^sub>\\<real> ?cp ?cq ?cq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt q", "by (rule real_euclid.th3_1)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt q\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "with \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> S\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt q", "show \"\\<exists> r\\<in>S. B\\<^sub>\\<real> ?cp ?cq (cart2_pt r)\""], ["proof (prove)\nusing this:\n  q \\<in> S\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "by auto"], ["proof (state)\nthis:\n  \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "assume \"q \\<notin> S\""], ["proof (state)\nthis:\n  q \\<notin> S\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "with \\<open>q \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> hyp2 \\<union> S\n  q \\<notin> S", "have \"q \\<in> K2\""], ["proof (prove)\nusing this:\n  q \\<in> hyp2 \\<union> S\n  q \\<notin> S\n\ngoal (1 subgoal):\n 1. q \\<in> hyp2", "by simp"], ["proof (state)\nthis:\n  q \\<in> hyp2\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "let ?l = \"proj2_line_through p q\""], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "have \"proj2_incident p ?l\" and \"proj2_incident q ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident p (proj2_line_through p q) &&&\n    proj2_incident q (proj2_line_through p q)", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident p (proj2_line_through p q)\n  proj2_incident q (proj2_line_through p q)\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "from \\<open>q \\<in> K2\\<close> and \\<open>proj2_incident q ?l\\<close>\n    and line_through_K2_intersect_S_twice [of q ?l]"], ["proof (chain)\npicking this:\n  q \\<in> hyp2\n  proj2_incident q (proj2_line_through p q)\n  \\<lbrakk>q \\<in> hyp2; proj2_incident q (proj2_line_through p q)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>qa r.\n                       qa \\<noteq> r \\<and>\n                       qa \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident qa (proj2_line_through p q) \\<and>\n                       proj2_incident r (proj2_line_through p q)", "obtain s and t where \"s \\<noteq> t\" and \"s \\<in> S\" and \"t \\<in> S\"\n    and \"proj2_incident s ?l\" and \"proj2_incident t ?l\""], ["proof (prove)\nusing this:\n  q \\<in> hyp2\n  proj2_incident q (proj2_line_through p q)\n  \\<lbrakk>q \\<in> hyp2; proj2_incident q (proj2_line_through p q)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>qa r.\n                       qa \\<noteq> r \\<and>\n                       qa \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident qa (proj2_line_through p q) \\<and>\n                       proj2_incident r (proj2_line_through p q)\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        \\<lbrakk>s \\<noteq> t; s \\<in> S; t \\<in> S;\n         proj2_incident s (proj2_line_through p q);\n         proj2_incident t (proj2_line_through p q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> t\n  s \\<in> S\n  t \\<in> S\n  proj2_incident s (proj2_line_through p q)\n  proj2_incident t (proj2_line_through p q)\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "let ?cs = \"cart2_pt s\""], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "let ?ct = \"cart2_pt t\""], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "from \\<open>proj2_incident s ?l\\<close>\n    and \\<open>proj2_incident t ?l\\<close>\n    and \\<open>proj2_incident p ?l\\<close>\n    and \\<open>proj2_incident q ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident s (proj2_line_through p q)\n  proj2_incident t (proj2_line_through p q)\n  proj2_incident p (proj2_line_through p q)\n  proj2_incident q (proj2_line_through p q)", "have \"proj2_Col s p q\" and \"proj2_Col t p q\" and \"proj2_Col s t q\""], ["proof (prove)\nusing this:\n  proj2_incident s (proj2_line_through p q)\n  proj2_incident t (proj2_line_through p q)\n  proj2_incident p (proj2_line_through p q)\n  proj2_incident q (proj2_line_through p q)\n\ngoal (1 subgoal):\n 1. proj2_Col s p q &&& proj2_Col t p q &&& proj2_Col s t q", "by (simp_all add: proj2_incident_Col)"], ["proof (state)\nthis:\n  proj2_Col s p q\n  proj2_Col t p q\n  proj2_Col s t q\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "from \\<open>proj2_Col s p q\\<close> and \\<open>proj2_Col t p q\\<close>\n    and \\<open>s \\<in> S\\<close> and \\<open>t \\<in> S\\<close> and \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  proj2_Col s p q\n  proj2_Col t p q\n  s \\<in> S\n  t \\<in> S\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S", "have \"B\\<^sub>\\<real> ?cs ?cp ?cq \\<or> B\\<^sub>\\<real> ?cs ?cq ?cp\" and \"B\\<^sub>\\<real> ?ct ?cp ?cq \\<or> B\\<^sub>\\<real> ?ct ?cq ?cp\""], ["proof (prove)\nusing this:\n  proj2_Col s p q\n  proj2_Col t p q\n  s \\<in> S\n  t \\<in> S\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt s cart2_pt p cart2_pt q \\<or>\n    B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt p &&&\n    B\\<^sub>\\<real> cart2_pt t cart2_pt p cart2_pt q \\<or>\n    B\\<^sub>\\<real> cart2_pt t cart2_pt q cart2_pt p", "by (simp_all add: S_at_edge)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt s cart2_pt p cart2_pt q \\<or>\n  B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt p\n  B\\<^sub>\\<real> cart2_pt t cart2_pt p cart2_pt q \\<or>\n  B\\<^sub>\\<real> cart2_pt t cart2_pt q cart2_pt p\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "with real_euclid.th3_2"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> ?a ?b ?c \\<Longrightarrow> B\\<^sub>\\<real> ?c ?b ?a\n  B\\<^sub>\\<real> cart2_pt s cart2_pt p cart2_pt q \\<or>\n  B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt p\n  B\\<^sub>\\<real> cart2_pt t cart2_pt p cart2_pt q \\<or>\n  B\\<^sub>\\<real> cart2_pt t cart2_pt q cart2_pt p", "have \"B\\<^sub>\\<real> ?cq ?cp ?cs \\<or> B\\<^sub>\\<real> ?cp ?cq ?cs\" and \"B\\<^sub>\\<real> ?cq ?cp ?ct \\<or> B\\<^sub>\\<real> ?cp ?cq ?ct\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> ?a ?b ?c \\<Longrightarrow> B\\<^sub>\\<real> ?c ?b ?a\n  B\\<^sub>\\<real> cart2_pt s cart2_pt p cart2_pt q \\<or>\n  B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt p\n  B\\<^sub>\\<real> cart2_pt t cart2_pt p cart2_pt q \\<or>\n  B\\<^sub>\\<real> cart2_pt t cart2_pt q cart2_pt p\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s &&&\n    B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt t \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t", "by fast+"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt t \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "from \\<open>s \\<in> S\\<close> and \\<open>t \\<in> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>proj2_Col s t q\\<close> and \\<open>s \\<noteq> t\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  t \\<in> S\n  q \\<in> hyp2 \\<union> S\n  proj2_Col s t q\n  s \\<noteq> t", "have \"B\\<^sub>\\<real> ?cs ?cq ?ct\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  t \\<in> S\n  q \\<in> hyp2 \\<union> S\n  proj2_Col s t q\n  s \\<noteq> t\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt t", "by (rule hyp2_in_middle)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt t\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "hence \"B\\<^sub>\\<real> ?ct ?cq ?cs\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt t\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt t cart2_pt q cart2_pt s", "by (rule real_euclid.th3_2)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt t cart2_pt q cart2_pt s\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "have \"B\\<^sub>\\<real> ?cp ?cq ?cs \\<or> B\\<^sub>\\<real> ?cp ?cq ?ct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "assume \"\\<not> (B\\<^sub>\\<real> ?cp ?cq ?cs \\<or> B\\<^sub>\\<real> ?cp ?cq ?ct)\""], ["proof (state)\nthis:\n  \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n          B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t)\n\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "hence \"\\<not> B\\<^sub>\\<real> ?cp ?cq ?cs\" and \"\\<not> B\\<^sub>\\<real> ?cp ?cq ?ct\""], ["proof (prove)\nusing this:\n  \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n          B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t)\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s &&&\n    \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t", "by simp_all"], ["proof (state)\nthis:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t\n\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "with \\<open>B\\<^sub>\\<real> ?cq ?cp ?cs \\<or> B\\<^sub>\\<real> ?cp ?cq ?cs\\<close>\n      and \\<open>B\\<^sub>\\<real> ?cq ?cp ?ct \\<or> B\\<^sub>\\<real> ?cp ?cq ?ct\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt t \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t", "have \"B\\<^sub>\\<real> ?cq ?cp ?cs\" and \"B\\<^sub>\\<real> ?cq ?cp ?ct\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt t \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s &&&\n    B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt t", "by simp_all"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt t\n\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "from \\<open>\\<not> B\\<^sub>\\<real> ?cp ?cq ?cs\\<close> and \\<open>B\\<^sub>\\<real> ?cq ?cp ?cs\\<close>"], ["proof (chain)\npicking this:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s", "have \"?cp \\<noteq> ?cq\""], ["proof (prove)\nusing this:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s\n\ngoal (1 subgoal):\n 1. cart2_pt p \\<noteq> cart2_pt q", "by auto"], ["proof (state)\nthis:\n  cart2_pt p \\<noteq> cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "with \\<open>B\\<^sub>\\<real> ?cq ?cp ?cs\\<close> and \\<open>B\\<^sub>\\<real> ?cq ?cp ?ct\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt t\n  cart2_pt p \\<noteq> cart2_pt q", "have \"B\\<^sub>\\<real> ?cq ?cs ?ct \\<or> B\\<^sub>\\<real> ?cq ?ct ?cs\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt p cart2_pt t\n  cart2_pt p \\<noteq> cart2_pt q\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt q cart2_pt s cart2_pt t \\<or>\n    B\\<^sub>\\<real> cart2_pt q cart2_pt t cart2_pt s", "by (simp add: real_euclid_th5_1 [of ?cq ?cp ?cs ?ct])"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt q cart2_pt s cart2_pt t \\<or>\n  B\\<^sub>\\<real> cart2_pt q cart2_pt t cart2_pt s\n\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "with \\<open>B\\<^sub>\\<real> ?cs ?cq ?ct\\<close> and \\<open>B\\<^sub>\\<real> ?ct ?cq ?cs\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt t\n  B\\<^sub>\\<real> cart2_pt t cart2_pt q cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt s cart2_pt t \\<or>\n  B\\<^sub>\\<real> cart2_pt q cart2_pt t cart2_pt s", "have \"?cq = ?cs \\<or> ?cq = ?ct\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt s cart2_pt q cart2_pt t\n  B\\<^sub>\\<real> cart2_pt t cart2_pt q cart2_pt s\n  B\\<^sub>\\<real> cart2_pt q cart2_pt s cart2_pt t \\<or>\n  B\\<^sub>\\<real> cart2_pt q cart2_pt t cart2_pt s\n\ngoal (1 subgoal):\n 1. cart2_pt q = cart2_pt s \\<or> cart2_pt q = cart2_pt t", "by (auto simp add: real_euclid.th3_4)"], ["proof (state)\nthis:\n  cart2_pt q = cart2_pt s \\<or> cart2_pt q = cart2_pt t\n\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "with \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>s \\<in> S\\<close> and \\<open>t \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> hyp2 \\<union> S\n  s \\<in> S\n  t \\<in> S\n  cart2_pt q = cart2_pt s \\<or> cart2_pt q = cart2_pt t", "have \"q = s \\<or> q = t\""], ["proof (prove)\nusing this:\n  q \\<in> hyp2 \\<union> S\n  s \\<in> S\n  t \\<in> S\n  cart2_pt q = cart2_pt s \\<or> cart2_pt q = cart2_pt t\n\ngoal (1 subgoal):\n 1. q = s \\<or> q = t", "by (auto simp add: hyp2_S_cart2_inj)"], ["proof (state)\nthis:\n  q = s \\<or> q = t\n\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "with \\<open>s \\<in> S\\<close> and \\<open>t \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  t \\<in> S\n  q = s \\<or> q = t", "have \"q \\<in> S\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  t \\<in> S\n  q = s \\<or> q = t\n\ngoal (1 subgoal):\n 1. q \\<in> S", "by auto"], ["proof (state)\nthis:\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> (B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n            B\\<^sub>\\<real> cart2_pt\n                             p cart2_pt q cart2_pt t) \\<Longrightarrow>\n    False", "with \\<open>q \\<notin> S\\<close>"], ["proof (chain)\npicking this:\n  q \\<notin> S\n  q \\<in> S", "show False"], ["proof (prove)\nusing this:\n  q \\<notin> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t\n\ngoal (1 subgoal):\n 1. q \\<notin> S \\<Longrightarrow>\n    \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "with \\<open>s \\<in> S\\<close> and \\<open>t \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  t \\<in> S\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t", "show \"\\<exists> r\\<in>S. B\\<^sub>\\<real> ?cp ?cq (cart2_pt r)\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  t \\<in> S\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt s \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt t\n\ngoal (1 subgoal):\n 1. \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "by auto"], ["proof (state)\nthis:\n  \\<exists>r\\<in>S. B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n\ngoal:\nNo subgoals!", "qed"], ["", "definition endpoint_in_S :: \"proj2 \\<Rightarrow> proj2 \\<Rightarrow> proj2\" where\n  \"endpoint_in_S a b\n  \\<equiv> \\<some> p. p\\<in>S \\<and> B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\""], ["", "lemma endpoint_in_S:\n  assumes \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  shows \"endpoint_in_S a b \\<in> S\" (is \"?p \\<in> S\")\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt (endpoint_in_S a b))\"\n  (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. endpoint_in_S a b \\<in> S\n 2. B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and extend_to_S"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r\\<in>S.\n                       B\\<^sub>\\<real> cart2_pt ?p cart2_pt ?q cart2_pt r", "have \"\\<exists> p. p \\<in> S \\<and> B\\<^sub>\\<real> ?ca ?cb (cart2_pt p)\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r\\<in>S.\n                       B\\<^sub>\\<real> cart2_pt ?p cart2_pt ?q cart2_pt r\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       p \\<in> S \\<and> B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p", "by auto"], ["proof (state)\nthis:\n  \\<exists>p.\n     p \\<in> S \\<and> B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n\ngoal (2 subgoals):\n 1. endpoint_in_S a b \\<in> S\n 2. B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "hence \"?p \\<in> S \\<and> B\\<^sub>\\<real> ?ca ?cb ?cp\""], ["proof (prove)\nusing this:\n  \\<exists>p.\n     p \\<in> S \\<and> B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S \\<and>\n    B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "by (unfold endpoint_in_S_def) (rule someI_ex)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S \\<and>\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n\ngoal (2 subgoals):\n 1. endpoint_in_S a b \\<in> S\n 2. B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "thus \"?p \\<in> S\" and \"B\\<^sub>\\<real> ?ca ?cb ?cp\""], ["proof (prove)\nusing this:\n  endpoint_in_S a b \\<in> S \\<and>\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "by simp_all"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoint_in_S_swap:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  shows \"endpoint_in_S a b \\<noteq> endpoint_in_S b a\" (is \"?p \\<noteq> ?q\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<noteq> endpoint_in_S b a", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "let ?ca = \"cart2_pt a\""], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "let ?cb = \"cart2_pt b\""], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "let ?cp = \"cart2_pt ?p\""], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "let ?cq = \"cart2_pt ?q\""], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S", "have \"B\\<^sub>\\<real> ?ca ?cb ?cp\" and \"B\\<^sub>\\<real> ?cb ?ca ?cq\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b) &&&\n    B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S b a)", "by (simp_all add: endpoint_in_S)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S b a)\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "assume \"?p = ?q\""], ["proof (state)\nthis:\n  endpoint_in_S a b = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "with \\<open>B\\<^sub>\\<real> ?cb ?ca ?cq\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S b a)\n  endpoint_in_S a b = endpoint_in_S b a", "have \"B\\<^sub>\\<real> ?cb ?ca ?cp\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S b a)\n  endpoint_in_S a b = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S a b)", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "with \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S a b)", "have \"?ca = ?cb\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. cart2_pt a = cart2_pt b", "by (rule real_euclid.th3_4)"], ["proof (state)\nthis:\n  cart2_pt a = cart2_pt b\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "with \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  cart2_pt a = cart2_pt b", "have \"a = b\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  cart2_pt a = cart2_pt b\n\ngoal (1 subgoal):\n 1. a = b", "by (rule hyp2_S_cart2_inj)"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b a \\<Longrightarrow> False", "with \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a = b", "show False"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a = b\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoint_in_S_incident:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\"\n  shows \"proj2_incident (endpoint_in_S a b) l\" (is \"proj2_incident ?p l\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) l", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S", "have \"?p \\<in> S\" and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt ?p)\"\n    (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")"], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "by (rule endpoint_in_S)+"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) l", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>?p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  endpoint_in_S a b \\<in> S", "have \"z_non_zero a\" and \"z_non_zero b\" and \"z_non_zero ?p\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  endpoint_in_S a b \\<in> S\n\ngoal (1 subgoal):\n 1. z_non_zero a &&& z_non_zero b &&& z_non_zero (endpoint_in_S a b)", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) l", "from \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "have \"real_euclid.Col ?ca ?cb ?cp\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. real_euclid.Col (cart2_pt a) (cart2_pt b) (cart2_pt (endpoint_in_S a b))", "unfolding real_euclid.Col_def"], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b) \\<or>\n    B\\<^sub>\\<real> cart2_pt b cart2_pt (endpoint_in_S a b) cart2_pt a \\<or>\n    B\\<^sub>\\<real> cart2_pt (endpoint_in_S a b) cart2_pt a cart2_pt b", ".."], ["proof (state)\nthis:\n  real_euclid.Col (cart2_pt a) (cart2_pt b) (cart2_pt (endpoint_in_S a b))\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) l", "with \\<open>z_non_zero a\\<close> and \\<open>z_non_zero b\\<close> and \\<open>z_non_zero ?p\\<close> and \\<open>a \\<noteq> b\\<close>\n    and \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero (endpoint_in_S a b)\n  a \\<noteq> b\n  proj2_incident a l\n  proj2_incident b l\n  real_euclid.Col (cart2_pt a) (cart2_pt b) (cart2_pt (endpoint_in_S a b))", "show \"proj2_incident ?p l\""], ["proof (prove)\nusing this:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero (endpoint_in_S a b)\n  a \\<noteq> b\n  proj2_incident a l\n  proj2_incident b l\n  real_euclid.Col (cart2_pt a) (cart2_pt b) (cart2_pt (endpoint_in_S a b))\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) l", "by (rule euclid_Col_cart2_incident)"], ["proof (state)\nthis:\n  proj2_incident (endpoint_in_S a b) l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoints_in_S_incident_unique:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\" and \"p \\<in> S\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\" and \"proj2_incident p l\"\n  shows \"p = endpoint_in_S a b \\<or> p = endpoint_in_S b a\"\n  (is \"p = ?q \\<or> p = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<or> p = endpoint_in_S b a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<or> p = endpoint_in_S b a", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S", "have \"?q \\<noteq> ?r\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<noteq> endpoint_in_S b a", "by (rule endpoint_in_S_swap)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<or> p = endpoint_in_S b a", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S", "have \"?q \\<in> S\" and \"?r \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S &&& endpoint_in_S b a \\<in> S", "by (simp_all add: endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<or> p = endpoint_in_S b a", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>\n    and \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  proj2_incident a l\n  proj2_incident b l", "have \"proj2_incident ?q l\" and \"proj2_incident ?r l\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  proj2_incident a l\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) l &&&\n    proj2_incident (endpoint_in_S b a) l", "by (simp_all add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (endpoint_in_S a b) l\n  proj2_incident (endpoint_in_S b a) l\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<or> p = endpoint_in_S b a", "with \\<open>?q \\<noteq> ?r\\<close> and \\<open>?q \\<in> S\\<close> and \\<open>?r \\<in> S\\<close> and \\<open>p \\<in> S\\<close> and \\<open>proj2_incident p l\\<close>"], ["proof (chain)\npicking this:\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n  p \\<in> S\n  proj2_incident p l\n  proj2_incident (endpoint_in_S a b) l\n  proj2_incident (endpoint_in_S b a) l", "show \"p = ?q \\<or> p = ?r\""], ["proof (prove)\nusing this:\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n  p \\<in> S\n  proj2_incident p l\n  proj2_incident (endpoint_in_S a b) l\n  proj2_incident (endpoint_in_S b a) l\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<or> p = endpoint_in_S b a", "by (simp add: line_S_two_intersections_only)"], ["proof (state)\nthis:\n  p = endpoint_in_S a b \\<or> p = endpoint_in_S b a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoint_in_S_unique:\n  assumes \"a \\<noteq> b\" and  \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\" and \"p \\<in> S\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\" (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")\n  shows \"p = endpoint_in_S a b\" (is \"p = ?q\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  p \\<in> S", "have \"z_non_zero a\" and \"z_non_zero b\" and \"z_non_zero p\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. z_non_zero a &&& z_non_zero b &&& z_non_zero p", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero p\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "with \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close> and euclid_B_cart2_common_line [of a b p]"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  \\<lbrakk>z_non_zero a; z_non_zero b; z_non_zero p;\n   B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l.\n                       proj2_incident a l \\<and>\n                       proj2_incident b l \\<and> proj2_incident p l\n  z_non_zero a\n  z_non_zero b\n  z_non_zero p", "obtain l where\n    \"proj2_incident a l\" and \"proj2_incident b l\" and \"proj2_incident p l\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  \\<lbrakk>z_non_zero a; z_non_zero b; z_non_zero p;\n   B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l.\n                       proj2_incident a l \\<and>\n                       proj2_incident b l \\<and> proj2_incident p l\n  z_non_zero a\n  z_non_zero b\n  z_non_zero p\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>proj2_incident a l; proj2_incident b l;\n         proj2_incident p l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident p l\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "with \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  p \\<in> S\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident p l", "have \"p = ?q \\<or> p = endpoint_in_S b a\" (is \"p = ?q \\<or> p = ?r\")"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  p \\<in> S\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident p l\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<or> p = endpoint_in_S b a", "by (rule endpoints_in_S_incident_unique)"], ["proof (state)\nthis:\n  p = endpoint_in_S a b \\<or> p = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "assume \"p \\<noteq> ?q\""], ["proof (state)\nthis:\n  p \\<noteq> endpoint_in_S a b\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "with \\<open>p = ?q \\<or> p = ?r\\<close>"], ["proof (chain)\npicking this:\n  p = endpoint_in_S a b \\<or> p = endpoint_in_S b a\n  p \\<noteq> endpoint_in_S a b", "have \"p = ?r\""], ["proof (prove)\nusing this:\n  p = endpoint_in_S a b \\<or> p = endpoint_in_S b a\n  p \\<noteq> endpoint_in_S a b\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S b a", "by simp"], ["proof (state)\nthis:\n  p = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "with \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2 \\<union> S\n  a \\<in> hyp2 \\<union> S\n  p = endpoint_in_S b a", "have \"B\\<^sub>\\<real> ?cb ?ca ?cp\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2 \\<union> S\n  a \\<in> hyp2 \\<union> S\n  p = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt p", "by (simp add: endpoint_in_S)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt p\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "with \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt p", "have \"?ca = ?cb\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt p\n\ngoal (1 subgoal):\n 1. cart2_pt a = cart2_pt b", "by (rule real_euclid.th3_4)"], ["proof (state)\nthis:\n  cart2_pt a = cart2_pt b\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "with \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  cart2_pt a = cart2_pt b", "have \"a = b\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  cart2_pt a = cart2_pt b\n\ngoal (1 subgoal):\n 1. a = b", "by (rule hyp2_S_cart2_inj)"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S a b \\<Longrightarrow> False", "with \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a = b", "show False"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a = b\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma between_hyp2_S:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\" and \"k \\<ge> 0\" and \"k \\<le> 1\"\n  shows \"proj2_pt (k *\\<^sub>R (cart2_pt r) + (1 - k) *\\<^sub>R (cart2_pt p)) \\<in> hyp2 \\<union> S\"\n  (is \"proj2_pt ?cq \\<in> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "let ?cp = \"cart2_pt p\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "let ?cr = \"cart2_pt r\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "let ?q = \"proj2_pt ?cq\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S", "have \"z_non_zero p\" and \"z_non_zero r\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. z_non_zero p &&& z_non_zero r", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n  z_non_zero r\n\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "hence \"proj2_pt ?cp = p\" and \"proj2_pt ?cr = r\""], ["proof (prove)\nusing this:\n  z_non_zero p\n  z_non_zero r\n\ngoal (1 subgoal):\n 1. proj2_pt (cart2_pt p) = p &&& proj2_pt (cart2_pt r) = r", "by (simp_all add: proj2_cart2)"], ["proof (state)\nthis:\n  proj2_pt (cart2_pt p) = p\n  proj2_pt (cart2_pt r) = r\n\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "with \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  proj2_pt (cart2_pt p) = p\n  proj2_pt (cart2_pt r) = r", "have \"norm ?cp \\<le> 1\" and \"norm ?cr \\<le> 1\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  proj2_pt (cart2_pt p) = p\n  proj2_pt (cart2_pt r) = r\n\ngoal (1 subgoal):\n 1. norm (cart2_pt p) \\<le> 1 &&& norm (cart2_pt r) \\<le> 1", "by (simp_all add: norm_le_1_iff_in_hyp2_S)"], ["proof (state)\nthis:\n  norm (cart2_pt p) \\<le> 1\n  norm (cart2_pt r) \\<le> 1\n\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "from \\<open>k \\<ge> 0\\<close> and \\<open>k \\<le> 1\\<close>\n    and norm_triangle_ineq [of \"k *\\<^sub>R ?cr\" \"(1 - k) *\\<^sub>R ?cp\"]"], ["proof (chain)\npicking this:\n  0 \\<le> k\n  k \\<le> 1\n  norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n  \\<le> norm (k *\\<^sub>R cart2_pt r) + norm ((1 - k) *\\<^sub>R cart2_pt p)", "have \"norm ?cq \\<le> k * norm ?cr + (1 - k) * norm ?cp\""], ["proof (prove)\nusing this:\n  0 \\<le> k\n  k \\<le> 1\n  norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n  \\<le> norm (k *\\<^sub>R cart2_pt r) + norm ((1 - k) *\\<^sub>R cart2_pt p)\n\ngoal (1 subgoal):\n 1. norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<le> k * norm (cart2_pt r) + (1 - k) * norm (cart2_pt p)", "by simp"], ["proof (state)\nthis:\n  norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n  \\<le> k * norm (cart2_pt r) + (1 - k) * norm (cart2_pt p)\n\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "from \\<open>k \\<ge> 0\\<close> and \\<open>norm ?cr \\<le> 1\\<close> and mult_mono [of k k \"norm ?cr\" 1]"], ["proof (chain)\npicking this:\n  0 \\<le> k\n  norm (cart2_pt r) \\<le> 1\n  \\<lbrakk>k \\<le> k; norm (cart2_pt r) \\<le> 1; 0 \\<le> k;\n   0 \\<le> norm (cart2_pt r)\\<rbrakk>\n  \\<Longrightarrow> k * norm (cart2_pt r) \\<le> k * 1", "have \"k * norm ?cr \\<le> k\""], ["proof (prove)\nusing this:\n  0 \\<le> k\n  norm (cart2_pt r) \\<le> 1\n  \\<lbrakk>k \\<le> k; norm (cart2_pt r) \\<le> 1; 0 \\<le> k;\n   0 \\<le> norm (cart2_pt r)\\<rbrakk>\n  \\<Longrightarrow> k * norm (cart2_pt r) \\<le> k * 1\n\ngoal (1 subgoal):\n 1. k * norm (cart2_pt r) \\<le> k", "by simp"], ["proof (state)\nthis:\n  k * norm (cart2_pt r) \\<le> k\n\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "from \\<open>k \\<le> 1\\<close> and \\<open>norm ?cp \\<le> 1\\<close>\n    and mult_mono [of \"1 - k\" \"1 - k\" \"norm ?cp\" 1]"], ["proof (chain)\npicking this:\n  k \\<le> 1\n  norm (cart2_pt p) \\<le> 1\n  \\<lbrakk>1 - k \\<le> 1 - k; norm (cart2_pt p) \\<le> 1; 0 \\<le> 1 - k;\n   0 \\<le> norm (cart2_pt p)\\<rbrakk>\n  \\<Longrightarrow> (1 - k) * norm (cart2_pt p) \\<le> (1 - k) * 1", "have \"(1 - k) * norm ?cp \\<le> 1 - k\""], ["proof (prove)\nusing this:\n  k \\<le> 1\n  norm (cart2_pt p) \\<le> 1\n  \\<lbrakk>1 - k \\<le> 1 - k; norm (cart2_pt p) \\<le> 1; 0 \\<le> 1 - k;\n   0 \\<le> norm (cart2_pt p)\\<rbrakk>\n  \\<Longrightarrow> (1 - k) * norm (cart2_pt p) \\<le> (1 - k) * 1\n\ngoal (1 subgoal):\n 1. (1 - k) * norm (cart2_pt p) \\<le> 1 - k", "by simp"], ["proof (state)\nthis:\n  (1 - k) * norm (cart2_pt p) \\<le> 1 - k\n\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "with \\<open>norm ?cq \\<le> k * norm ?cr + (1 - k) * norm ?cp\\<close> and \\<open>k * norm ?cr \\<le> k\\<close>"], ["proof (chain)\npicking this:\n  norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n  \\<le> k * norm (cart2_pt r) + (1 - k) * norm (cart2_pt p)\n  k * norm (cart2_pt r) \\<le> k\n  (1 - k) * norm (cart2_pt p) \\<le> 1 - k", "have \"norm ?cq \\<le> 1\""], ["proof (prove)\nusing this:\n  norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n  \\<le> k * norm (cart2_pt r) + (1 - k) * norm (cart2_pt p)\n  k * norm (cart2_pt r) \\<le> k\n  (1 - k) * norm (cart2_pt p) \\<le> 1 - k\n\ngoal (1 subgoal):\n 1. norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p) \\<le> 1\n\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "thus \"?q \\<in> hyp2 \\<union> S\""], ["proof (prove)\nusing this:\n  norm (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p) \\<le> 1\n\ngoal (1 subgoal):\n 1. proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n    \\<in> hyp2 \\<union> S", "by (simp add: norm_le_1_iff_in_hyp2_S)"], ["proof (state)\nthis:\n  proj2_pt (k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p)\n  \\<in> hyp2 \\<union> S\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The Klein--Beltrami model satisfies axiom 4\\<close>"], ["", "definition expansion_factor :: \"proj2 \\<Rightarrow> cltn2 \\<Rightarrow> real\" where\n  \"expansion_factor p J \\<equiv> (cart2_append1 p v* cltn2_rep J)$3\""], ["", "lemma expansion_factor:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"expansion_factor p J \\<noteq> 0\"\n  and \"cart2_append1 p v* cltn2_rep J\n  = expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expansion_factor p J \\<noteq> 0 &&&\n    cart2_append1 p v* cltn2_rep J =\n    expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. expansion_factor p J \\<noteq> 0\n 2. cart2_append1 p v* cltn2_rep J =\n    expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  is_K2_isometry J", "have \"z_non_zero (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. z_non_zero (apply_cltn2 p J)", "by (rule is_K2_isometry_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero (apply_cltn2 p J)\n\ngoal (2 subgoals):\n 1. expansion_factor p J \\<noteq> 0\n 2. cart2_append1 p v* cltn2_rep J =\n    expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>\n  and cart2_append1_apply_cltn2"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; is_K2_isometry ?J\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k.\n                       k \\<noteq> 0 \\<and>\n                       cart2_append1 ?p v* cltn2_rep ?J =\n                       k *\\<^sub>R cart2_append1 (apply_cltn2 ?p ?J)", "obtain k where \"k \\<noteq> 0\"\n    and \"cart2_append1 p v* cltn2_rep J = k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; is_K2_isometry ?J\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k.\n                       k \\<noteq> 0 \\<and>\n                       cart2_append1 ?p v* cltn2_rep ?J =\n                       k *\\<^sub>R cart2_append1 (apply_cltn2 ?p ?J)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<noteq> 0;\n         cart2_append1 p v* cltn2_rep J =\n         k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n  cart2_append1 p v* cltn2_rep J =\n  k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal (2 subgoals):\n 1. expansion_factor p J \\<noteq> 0\n 2. cart2_append1 p v* cltn2_rep J =\n    expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "from \\<open>cart2_append1 p v* cltn2_rep J = k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\\<close>\n    and \\<open>z_non_zero (apply_cltn2 p J)\\<close>"], ["proof (chain)\npicking this:\n  cart2_append1 p v* cltn2_rep J =\n  k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n  z_non_zero (apply_cltn2 p J)", "have \"expansion_factor p J = k\""], ["proof (prove)\nusing this:\n  cart2_append1 p v* cltn2_rep J =\n  k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n  z_non_zero (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. expansion_factor p J = k", "by (unfold expansion_factor_def) (simp add: cart2_append1_z)"], ["proof (state)\nthis:\n  expansion_factor p J = k\n\ngoal (2 subgoals):\n 1. expansion_factor p J \\<noteq> 0\n 2. cart2_append1 p v* cltn2_rep J =\n    expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "with \\<open>k \\<noteq> 0\\<close>\n    and \\<open>cart2_append1 p v* cltn2_rep J = k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\\<close>"], ["proof (chain)\npicking this:\n  k \\<noteq> 0\n  cart2_append1 p v* cltn2_rep J =\n  k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n  expansion_factor p J = k", "show \"expansion_factor p J \\<noteq> 0\"\n    and \"cart2_append1 p v* cltn2_rep J\n    = expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  cart2_append1 p v* cltn2_rep J =\n  k *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n  expansion_factor p J = k\n\ngoal (1 subgoal):\n 1. expansion_factor p J \\<noteq> 0 &&&\n    cart2_append1 p v* cltn2_rep J =\n    expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)", "by simp_all"], ["proof (state)\nthis:\n  expansion_factor p J \\<noteq> 0\n  cart2_append1 p v* cltn2_rep J =\n  expansion_factor p J *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expansion_factor_linear_apply_cltn2:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\"\n  and \"is_K2_isometry J\"\n  and \"cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q\"\n  shows \"expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J)\n  = (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n  + ((1 - k) * expansion_factor q J) *\\<^sub>R cart2_append1 (apply_cltn2 q J)\"\n  (is \"?er *\\<^sub>R _ = (k * ?ep) *\\<^sub>R _ + ((1 - k) * ?eq) *\\<^sub>R _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "let ?cp = \"cart2_pt p\""], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "let ?cq = \"cart2_pt q\""], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "let ?cr = \"cart2_pt r\""], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "let ?cp1 = \"cart2_append1 p\""], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "let ?cq1 = \"cart2_append1 q\""], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "let ?cr1 = \"cart2_append1 r\""], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "let ?repJ = \"cltn2_rep J\""], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S", "have \"z_non_zero p\" and \"z_non_zero q\" and \"z_non_zero r\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. z_non_zero p &&& z_non_zero q &&& z_non_zero r", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n  z_non_zero q\n  z_non_zero r\n\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "from \\<open>?cr = k *\\<^sub>R ?cp + (1 - k) *\\<^sub>R ?cq\\<close>"], ["proof (chain)\npicking this:\n  cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q", "have \"vector2_append1 ?cr\n    = k *\\<^sub>R vector2_append1 ?cp + (1 - k) *\\<^sub>R vector2_append1 ?cq\""], ["proof (prove)\nusing this:\n  cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q\n\ngoal (1 subgoal):\n 1. vector2_append1 (cart2_pt r) =\n    k *\\<^sub>R vector2_append1 (cart2_pt p) +\n    (1 - k) *\\<^sub>R vector2_append1 (cart2_pt q)", "by (unfold vector2_append1_def vector_def) (simp add: vec_eq_iff)"], ["proof (state)\nthis:\n  vector2_append1 (cart2_pt r) =\n  k *\\<^sub>R vector2_append1 (cart2_pt p) +\n  (1 - k) *\\<^sub>R vector2_append1 (cart2_pt q)\n\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "with \\<open>z_non_zero p\\<close> and \\<open>z_non_zero q\\<close> and \\<open>z_non_zero r\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero p\n  z_non_zero q\n  z_non_zero r\n  vector2_append1 (cart2_pt r) =\n  k *\\<^sub>R vector2_append1 (cart2_pt p) +\n  (1 - k) *\\<^sub>R vector2_append1 (cart2_pt q)", "have \"?cr1 = k *\\<^sub>R ?cp1 + (1 - k) *\\<^sub>R ?cq1\""], ["proof (prove)\nusing this:\n  z_non_zero p\n  z_non_zero q\n  z_non_zero r\n  vector2_append1 (cart2_pt r) =\n  k *\\<^sub>R vector2_append1 (cart2_pt p) +\n  (1 - k) *\\<^sub>R vector2_append1 (cart2_pt q)\n\ngoal (1 subgoal):\n 1. cart2_append1 r =\n    k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q", "by (simp add: cart2_append1)"], ["proof (state)\nthis:\n  cart2_append1 r =\n  k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q\n\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "hence \"?cr1 v* ?repJ = k *\\<^sub>R (?cp1 v* ?repJ) + (1 - k) *\\<^sub>R (?cq1 v* ?repJ)\""], ["proof (prove)\nusing this:\n  cart2_append1 r =\n  k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q\n\ngoal (1 subgoal):\n 1. cart2_append1 r v* cltn2_rep J =\n    k *\\<^sub>R (cart2_append1 p v* cltn2_rep J) +\n    (1 - k) *\\<^sub>R (cart2_append1 q v* cltn2_rep J)", "by (simp add: vector_matrix_left_distrib scaleR_vector_matrix_assoc [symmetric])"], ["proof (state)\nthis:\n  cart2_append1 r v* cltn2_rep J =\n  k *\\<^sub>R (cart2_append1 p v* cltn2_rep J) +\n  (1 - k) *\\<^sub>R (cart2_append1 q v* cltn2_rep J)\n\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "with \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>\n    and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_append1 r v* cltn2_rep J =\n  k *\\<^sub>R (cart2_append1 p v* cltn2_rep J) +\n  (1 - k) *\\<^sub>R (cart2_append1 q v* cltn2_rep J)", "show \"?er *\\<^sub>R cart2_append1 (apply_cltn2 r J)\n    = (k * ?ep) *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n    + ((1 - k) * ?eq) *\\<^sub>R cart2_append1 (apply_cltn2 q J)\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_append1 r v* cltn2_rep J =\n  k *\\<^sub>R (cart2_append1 p v* cltn2_rep J) +\n  (1 - k) *\\<^sub>R (cart2_append1 q v* cltn2_rep J)\n\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "by (simp add: expansion_factor)"], ["proof (state)\nthis:\n  expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n  (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n  ((1 - k) * expansion_factor q J) *\\<^sub>R cart2_append1 (apply_cltn2 q J)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expansion_factor_linear:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\"\n  and \"is_K2_isometry J\"\n  and \"cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q\"\n  shows \"expansion_factor r J\n  = k * expansion_factor p J + (1 - k) * expansion_factor q J\"\n  (is \"?er = k * ?ep + (1 - k) * ?eq\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. expansion_factor r J =\n    k * expansion_factor p J + (1 - k) * expansion_factor q J", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. expansion_factor r J =\n    k * expansion_factor p J + (1 - k) * expansion_factor q J", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>\n    and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J", "have \"z_non_zero (apply_cltn2 p J)\"\n    and \"z_non_zero (apply_cltn2 q J)\"\n    and \"z_non_zero (apply_cltn2 r J)\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. z_non_zero (apply_cltn2 p J) &&&\n    z_non_zero (apply_cltn2 q J) &&& z_non_zero (apply_cltn2 r J)", "by (simp_all add: is_K2_isometry_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero (apply_cltn2 p J)\n  z_non_zero (apply_cltn2 q J)\n  z_non_zero (apply_cltn2 r J)\n\ngoal (1 subgoal):\n 1. expansion_factor r J =\n    k * expansion_factor p J + (1 - k) * expansion_factor q J", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>\n    and \\<open>is_K2_isometry J\\<close>\n    and \\<open>cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q", "have \"?er *\\<^sub>R cart2_append1 (apply_cltn2 r J)\n    = (k * ?ep) *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n    + ((1 - k) * ?eq) *\\<^sub>R cart2_append1 (apply_cltn2 q J)\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_pt r = k *\\<^sub>R cart2_pt p + (1 - k) *\\<^sub>R cart2_pt q\n\ngoal (1 subgoal):\n 1. expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n    (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n    ((1 - k) * expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 q J)", "by (rule expansion_factor_linear_apply_cltn2)"], ["proof (state)\nthis:\n  expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n  (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n  ((1 - k) * expansion_factor q J) *\\<^sub>R cart2_append1 (apply_cltn2 q J)\n\ngoal (1 subgoal):\n 1. expansion_factor r J =\n    k * expansion_factor p J + (1 - k) * expansion_factor q J", "hence \"(?er *\\<^sub>R cart2_append1 (apply_cltn2 r J))$3\n    = ((k * ?ep) *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n    + ((1 - k) * ?eq) *\\<^sub>R cart2_append1 (apply_cltn2 q J))$3\""], ["proof (prove)\nusing this:\n  expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J) =\n  (k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n  ((1 - k) * expansion_factor q J) *\\<^sub>R cart2_append1 (apply_cltn2 q J)\n\ngoal (1 subgoal):\n 1. (expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J)) $ 3 =\n    ((k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n     ((1 - k) * expansion_factor q J) *\\<^sub>R\n     cart2_append1 (apply_cltn2 q J)) $\n    3", "by simp"], ["proof (state)\nthis:\n  (expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J)) $ 3 =\n  ((k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n   ((1 - k) * expansion_factor q J) *\\<^sub>R\n   cart2_append1 (apply_cltn2 q J)) $\n  3\n\ngoal (1 subgoal):\n 1. expansion_factor r J =\n    k * expansion_factor p J + (1 - k) * expansion_factor q J", "with \\<open>z_non_zero (apply_cltn2 p J)\\<close>\n    and \\<open>z_non_zero (apply_cltn2 q J)\\<close>\n    and \\<open>z_non_zero (apply_cltn2 r J)\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero (apply_cltn2 p J)\n  z_non_zero (apply_cltn2 q J)\n  z_non_zero (apply_cltn2 r J)\n  (expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J)) $ 3 =\n  ((k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n   ((1 - k) * expansion_factor q J) *\\<^sub>R\n   cart2_append1 (apply_cltn2 q J)) $\n  3", "show \"?er = k * ?ep + (1 - k) * ?eq\""], ["proof (prove)\nusing this:\n  z_non_zero (apply_cltn2 p J)\n  z_non_zero (apply_cltn2 q J)\n  z_non_zero (apply_cltn2 r J)\n  (expansion_factor r J *\\<^sub>R cart2_append1 (apply_cltn2 r J)) $ 3 =\n  ((k * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J) +\n   ((1 - k) * expansion_factor q J) *\\<^sub>R\n   cart2_append1 (apply_cltn2 q J)) $\n  3\n\ngoal (1 subgoal):\n 1. expansion_factor r J =\n    k * expansion_factor p J + (1 - k) * expansion_factor q J", "by (simp add: cart2_append1_z)"], ["proof (state)\nthis:\n  expansion_factor r J =\n  k * expansion_factor p J + (1 - k) * expansion_factor q J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expansion_factor_sgn_invariant:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"sgn (expansion_factor p J) = sgn (expansion_factor q J)\"\n  (is \"sgn ?ep = sgn ?eq\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) = sgn (expansion_factor q J)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "assume \"sgn ?ep \\<noteq> sgn ?eq\""], ["proof (state)\nthis:\n  sgn (expansion_factor p J) \\<noteq> sgn (expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J", "have \"?ep \\<noteq> 0\" and \"?eq \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. expansion_factor p J \\<noteq> 0 &&& expansion_factor q J \\<noteq> 0", "by (simp_all add: expansion_factor)"], ["proof (state)\nthis:\n  expansion_factor p J \\<noteq> 0\n  expansion_factor q J \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "hence \"sgn ?ep \\<in> {-1,1}\" and \"sgn ?eq \\<in> {-1,1}\""], ["proof (prove)\nusing this:\n  expansion_factor p J \\<noteq> 0\n  expansion_factor q J \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<in> {- 1, 1} &&&\n    sgn (expansion_factor q J) \\<in> {- 1, 1}", "by (simp_all add: sgn_real_def)"], ["proof (state)\nthis:\n  sgn (expansion_factor p J) \\<in> {- 1, 1}\n  sgn (expansion_factor q J) \\<in> {- 1, 1}\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "with \\<open>sgn ?ep \\<noteq> sgn ?eq\\<close>"], ["proof (chain)\npicking this:\n  sgn (expansion_factor p J) \\<noteq> sgn (expansion_factor q J)\n  sgn (expansion_factor p J) \\<in> {- 1, 1}\n  sgn (expansion_factor q J) \\<in> {- 1, 1}", "have \"sgn ?ep = - sgn ?eq\""], ["proof (prove)\nusing this:\n  sgn (expansion_factor p J) \\<noteq> sgn (expansion_factor q J)\n  sgn (expansion_factor p J) \\<in> {- 1, 1}\n  sgn (expansion_factor q J) \\<in> {- 1, 1}\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) = - sgn (expansion_factor q J)", "by auto"], ["proof (state)\nthis:\n  sgn (expansion_factor p J) = - sgn (expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "hence \"sgn ?ep = sgn (-?eq)\""], ["proof (prove)\nusing this:\n  sgn (expansion_factor p J) = - sgn (expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) = sgn (- expansion_factor q J)", "by (subst sgn_minus)"], ["proof (state)\nthis:\n  sgn (expansion_factor p J) = sgn (- expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "with sgn_plus [of ?ep \"-?eq\"]"], ["proof (chain)\npicking this:\n  sgn (expansion_factor p J) =\n  sgn (- expansion_factor q J) \\<Longrightarrow>\n  sgn (expansion_factor p J + - expansion_factor q J) =\n  sgn (expansion_factor p J)\n  sgn (expansion_factor p J) = sgn (- expansion_factor q J)", "have \"sgn (?ep - ?eq) = sgn ?ep\""], ["proof (prove)\nusing this:\n  sgn (expansion_factor p J) =\n  sgn (- expansion_factor q J) \\<Longrightarrow>\n  sgn (expansion_factor p J + - expansion_factor q J) =\n  sgn (expansion_factor p J)\n  sgn (expansion_factor p J) = sgn (- expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J - expansion_factor q J) =\n    sgn (expansion_factor p J)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (expansion_factor p J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "with \\<open>sgn ?ep \\<in> {-1,1}\\<close>"], ["proof (chain)\npicking this:\n  sgn (expansion_factor p J) \\<in> {- 1, 1}\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (expansion_factor p J)", "have \"?ep - ?eq \\<noteq> 0\""], ["proof (prove)\nusing this:\n  sgn (expansion_factor p J) \\<in> {- 1, 1}\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (expansion_factor p J)\n\ngoal (1 subgoal):\n 1. expansion_factor p J - expansion_factor q J \\<noteq> 0", "by (auto simp add: sgn_real_def)"], ["proof (state)\nthis:\n  expansion_factor p J - expansion_factor q J \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "let ?k = \"-?eq / (?ep - ?eq)\""], ["proof (state)\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "from \\<open>sgn (?ep - ?eq) = sgn ?ep\\<close> and \\<open>sgn ?ep = sgn (-?eq)\\<close>"], ["proof (chain)\npicking this:\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (expansion_factor p J)\n  sgn (expansion_factor p J) = sgn (- expansion_factor q J)", "have \"sgn (?ep - ?eq) = sgn (-?eq)\""], ["proof (prove)\nusing this:\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (expansion_factor p J)\n  sgn (expansion_factor p J) = sgn (- expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J - expansion_factor q J) =\n    sgn (- expansion_factor q J)", "by simp"], ["proof (state)\nthis:\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (- expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "with \\<open>?ep - ?eq \\<noteq> 0\\<close> and sgn_div [of \"?ep - ?eq\" \"-?eq\"]"], ["proof (chain)\npicking this:\n  expansion_factor p J - expansion_factor q J \\<noteq> 0\n  \\<lbrakk>expansion_factor p J - expansion_factor q J \\<noteq> 0;\n   sgn (- expansion_factor q J) =\n   sgn (expansion_factor p J - expansion_factor q J)\\<rbrakk>\n  \\<Longrightarrow> 0 < - expansion_factor q J /\n                        (expansion_factor p J - expansion_factor q J)\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (- expansion_factor q J)", "have \"?k > 0\""], ["proof (prove)\nusing this:\n  expansion_factor p J - expansion_factor q J \\<noteq> 0\n  \\<lbrakk>expansion_factor p J - expansion_factor q J \\<noteq> 0;\n   sgn (- expansion_factor q J) =\n   sgn (expansion_factor p J - expansion_factor q J)\\<rbrakk>\n  \\<Longrightarrow> 0 < - expansion_factor q J /\n                        (expansion_factor p J - expansion_factor q J)\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (- expansion_factor q J)\n\ngoal (1 subgoal):\n 1. 0 < - expansion_factor q J /\n        (expansion_factor p J - expansion_factor q J)", "by simp"], ["proof (state)\nthis:\n  0 < - expansion_factor q J / (expansion_factor p J - expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "from \\<open>?ep - ?eq \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  expansion_factor p J - expansion_factor q J \\<noteq> 0", "have \"1 - ?k = ?ep / (?ep - ?eq)\""], ["proof (prove)\nusing this:\n  expansion_factor p J - expansion_factor q J \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 -\n    - expansion_factor q J / (expansion_factor p J - expansion_factor q J) =\n    expansion_factor p J / (expansion_factor p J - expansion_factor q J)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 -\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) =\n  expansion_factor p J / (expansion_factor p J - expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "with \\<open>sgn (?ep - ?eq) = sgn ?ep\\<close> and \\<open>?ep - ?eq \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (expansion_factor p J)\n  expansion_factor p J - expansion_factor q J \\<noteq> 0\n  1 -\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) =\n  expansion_factor p J / (expansion_factor p J - expansion_factor q J)", "have \"1 - ?k > 0\""], ["proof (prove)\nusing this:\n  sgn (expansion_factor p J - expansion_factor q J) =\n  sgn (expansion_factor p J)\n  expansion_factor p J - expansion_factor q J \\<noteq> 0\n  1 -\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) =\n  expansion_factor p J / (expansion_factor p J - expansion_factor q J)\n\ngoal (1 subgoal):\n 1. 0 < 1 -\n        - expansion_factor q J /\n        (expansion_factor p J - expansion_factor q J)", "by (simp add: sgn_div)"], ["proof (state)\nthis:\n  0 < 1 -\n      - expansion_factor q J / (expansion_factor p J - expansion_factor q J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "hence \"?k < 1\""], ["proof (prove)\nusing this:\n  0 < 1 -\n      - expansion_factor q J / (expansion_factor p J - expansion_factor q J)\n\ngoal (1 subgoal):\n 1. - expansion_factor q J / (expansion_factor p J - expansion_factor q J)\n    < 1", "by simp"], ["proof (state)\nthis:\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) < 1\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "let ?cp = \"cart2_pt p\""], ["proof (state)\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "let ?cq = \"cart2_pt q\""], ["proof (state)\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "let ?cr = \"?k *\\<^sub>R ?cp + (1 - ?k) *\\<^sub>R ?cq\""], ["proof (state)\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "let ?r = \"proj2_pt ?cr\""], ["proof (state)\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "let ?er = \"expansion_factor ?r J\""], ["proof (state)\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "have \"cart2_pt ?r = ?cr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cart2_pt\n     (proj2_pt\n       ((- expansion_factor q J /\n         (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n        cart2_pt p +\n        (1 -\n         - expansion_factor q J /\n         (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n        cart2_pt q)) =\n    (- expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt p +\n    (1 -\n     - expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt q", "by (rule cart2_proj2)"], ["proof (state)\nthis:\n  cart2_pt\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q)) =\n  (- expansion_factor q J /\n   (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n  cart2_pt p +\n  (1 -\n   - expansion_factor q J /\n   (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n  cart2_pt q\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>?k > 0\\<close> and \\<open>?k < 1\\<close>\n    and between_hyp2_S [of q p ?k]"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  0 < - expansion_factor q J / (expansion_factor p J - expansion_factor q J)\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) < 1\n  \\<lbrakk>q \\<in> hyp2 \\<union> S; p \\<in> hyp2 \\<union> S;\n   0 \\<le> - expansion_factor q J /\n           (expansion_factor p J - expansion_factor q J);\n   - expansion_factor q J / (expansion_factor p J - expansion_factor q J)\n   \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> proj2_pt\n                     ((- expansion_factor q J /\n                       (expansion_factor p J -\n                        expansion_factor q J)) *\\<^sub>R\n                      cart2_pt p +\n                      (1 -\n                       - expansion_factor q J /\n                       (expansion_factor p J -\n                        expansion_factor q J)) *\\<^sub>R\n                      cart2_pt q)\n                    \\<in> hyp2 \\<union> S", "have \"?r \\<in> hyp2 \\<union> S\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  0 < - expansion_factor q J / (expansion_factor p J - expansion_factor q J)\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) < 1\n  \\<lbrakk>q \\<in> hyp2 \\<union> S; p \\<in> hyp2 \\<union> S;\n   0 \\<le> - expansion_factor q J /\n           (expansion_factor p J - expansion_factor q J);\n   - expansion_factor q J / (expansion_factor p J - expansion_factor q J)\n   \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> proj2_pt\n                     ((- expansion_factor q J /\n                       (expansion_factor p J -\n                        expansion_factor q J)) *\\<^sub>R\n                      cart2_pt p +\n                      (1 -\n                       - expansion_factor q J /\n                       (expansion_factor p J -\n                        expansion_factor q J)) *\\<^sub>R\n                      cart2_pt q)\n                    \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q)\n    \\<in> hyp2 \\<union> S", "by simp"], ["proof (state)\nthis:\n  proj2_pt\n   ((- expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt p +\n    (1 -\n     - expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt q)\n  \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "with \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>\n    and \\<open>cart2_pt ?r = ?cr\\<close>\n    and expansion_factor_linear [of p q ?r J ?k]"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_pt\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q)) =\n  (- expansion_factor q J /\n   (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n  cart2_pt p +\n  (1 -\n   - expansion_factor q J /\n   (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n  cart2_pt q\n  \\<lbrakk>p \\<in> hyp2 \\<union> S; q \\<in> hyp2 \\<union> S;\n   proj2_pt\n    ((- expansion_factor q J /\n      (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n     cart2_pt p +\n     (1 -\n      - expansion_factor q J /\n      (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n     cart2_pt q)\n   \\<in> hyp2 \\<union> S;\n   is_K2_isometry J;\n   cart2_pt\n    (proj2_pt\n      ((- expansion_factor q J /\n        (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n       cart2_pt p +\n       (1 -\n        - expansion_factor q J /\n        (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n       cart2_pt q)) =\n   (- expansion_factor q J /\n    (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n   cart2_pt p +\n   (1 -\n    - expansion_factor q J /\n    (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n   cart2_pt q\\<rbrakk>\n  \\<Longrightarrow> expansion_factor\n                     (proj2_pt\n                       ((- expansion_factor q J /\n                         (expansion_factor p J -\n                          expansion_factor q J)) *\\<^sub>R\n                        cart2_pt p +\n                        (1 -\n                         - expansion_factor q J /\n                         (expansion_factor p J -\n                          expansion_factor q J)) *\\<^sub>R\n                        cart2_pt q))\n                     J =\n                    - expansion_factor q J /\n                    (expansion_factor p J - expansion_factor q J) *\n                    expansion_factor p J +\n                    (1 -\n                     - expansion_factor q J /\n                     (expansion_factor p J - expansion_factor q J)) *\n                    expansion_factor q J\n  proj2_pt\n   ((- expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt p +\n    (1 -\n     - expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt q)\n  \\<in> hyp2 \\<union> S", "have \"?er = ?k * ?ep + (1 - ?k) * ?eq\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_pt\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q)) =\n  (- expansion_factor q J /\n   (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n  cart2_pt p +\n  (1 -\n   - expansion_factor q J /\n   (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n  cart2_pt q\n  \\<lbrakk>p \\<in> hyp2 \\<union> S; q \\<in> hyp2 \\<union> S;\n   proj2_pt\n    ((- expansion_factor q J /\n      (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n     cart2_pt p +\n     (1 -\n      - expansion_factor q J /\n      (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n     cart2_pt q)\n   \\<in> hyp2 \\<union> S;\n   is_K2_isometry J;\n   cart2_pt\n    (proj2_pt\n      ((- expansion_factor q J /\n        (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n       cart2_pt p +\n       (1 -\n        - expansion_factor q J /\n        (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n       cart2_pt q)) =\n   (- expansion_factor q J /\n    (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n   cart2_pt p +\n   (1 -\n    - expansion_factor q J /\n    (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n   cart2_pt q\\<rbrakk>\n  \\<Longrightarrow> expansion_factor\n                     (proj2_pt\n                       ((- expansion_factor q J /\n                         (expansion_factor p J -\n                          expansion_factor q J)) *\\<^sub>R\n                        cart2_pt p +\n                        (1 -\n                         - expansion_factor q J /\n                         (expansion_factor p J -\n                          expansion_factor q J)) *\\<^sub>R\n                        cart2_pt q))\n                     J =\n                    - expansion_factor q J /\n                    (expansion_factor p J - expansion_factor q J) *\n                    expansion_factor p J +\n                    (1 -\n                     - expansion_factor q J /\n                     (expansion_factor p J - expansion_factor q J)) *\n                    expansion_factor q J\n  proj2_pt\n   ((- expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt p +\n    (1 -\n     - expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt q)\n  \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. expansion_factor\n     (proj2_pt\n       ((- expansion_factor q J /\n         (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n        cart2_pt p +\n        (1 -\n         - expansion_factor q J /\n         (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n        cart2_pt q))\n     J =\n    - expansion_factor q J / (expansion_factor p J - expansion_factor q J) *\n    expansion_factor p J +\n    (1 -\n     - expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\n    expansion_factor q J", "by simp"], ["proof (state)\nthis:\n  expansion_factor\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q))\n   J =\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) *\n  expansion_factor p J +\n  (1 -\n   - expansion_factor q J / (expansion_factor p J - expansion_factor q J)) *\n  expansion_factor q J\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "with \\<open>?ep - ?eq \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  expansion_factor p J - expansion_factor q J \\<noteq> 0\n  expansion_factor\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q))\n   J =\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) *\n  expansion_factor p J +\n  (1 -\n   - expansion_factor q J / (expansion_factor p J - expansion_factor q J)) *\n  expansion_factor q J", "have \"?er = 0\""], ["proof (prove)\nusing this:\n  expansion_factor p J - expansion_factor q J \\<noteq> 0\n  expansion_factor\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q))\n   J =\n  - expansion_factor q J / (expansion_factor p J - expansion_factor q J) *\n  expansion_factor p J +\n  (1 -\n   - expansion_factor q J / (expansion_factor p J - expansion_factor q J)) *\n  expansion_factor q J\n\ngoal (1 subgoal):\n 1. expansion_factor\n     (proj2_pt\n       ((- expansion_factor q J /\n         (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n        cart2_pt p +\n        (1 -\n         - expansion_factor q J /\n         (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n        cart2_pt q))\n     J =\n    0", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  expansion_factor\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q))\n   J =\n  0\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) \\<noteq>\n    sgn (expansion_factor q J) \\<Longrightarrow>\n    False", "with \\<open>?r \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  proj2_pt\n   ((- expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt p +\n    (1 -\n     - expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt q)\n  \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  expansion_factor\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q))\n   J =\n  0", "show False"], ["proof (prove)\nusing this:\n  proj2_pt\n   ((- expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt p +\n    (1 -\n     - expansion_factor q J /\n     (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n    cart2_pt q)\n  \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  expansion_factor\n   (proj2_pt\n     ((- expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt p +\n      (1 -\n       - expansion_factor q J /\n       (expansion_factor p J - expansion_factor q J)) *\\<^sub>R\n      cart2_pt q))\n   J =\n  0\n\ngoal (1 subgoal):\n 1. False", "by (simp add: expansion_factor)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma statement_63:\n  assumes \"p \\<in> hyp2 \\<union> S\" and \"q \\<in> hyp2 \\<union> S\" and \"r \\<in> hyp2 \\<union> S\"\n  and \"is_K2_isometry J\" and \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt q) (cart2_pt r)\"\n  shows \"B\\<^sub>\\<real>\n  (cart2_pt (apply_cltn2 p J))\n  (cart2_pt (apply_cltn2 q J))\n  (cart2_pt (apply_cltn2 r J))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?cp = \"cart2_pt p\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?cq = \"cart2_pt q\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?cr = \"cart2_pt r\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?ep = \"expansion_factor p J\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?eq = \"expansion_factor q J\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?er = \"expansion_factor r J\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "from \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J", "have \"?eq \\<noteq> 0\""], ["proof (prove)\nusing this:\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. expansion_factor q J \\<noteq> 0", "by (rule expansion_factor)"], ["proof (state)\nthis:\n  expansion_factor q J \\<noteq> 0\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>\n    and \\<open>is_K2_isometry J\\<close> and expansion_factor_sgn_invariant"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S;\n   is_K2_isometry ?J\\<rbrakk>\n  \\<Longrightarrow> sgn (expansion_factor ?p ?J) =\n                    sgn (expansion_factor ?q ?J)", "have \"sgn ?ep = sgn ?eq\" and \"sgn ?er = sgn ?eq\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S;\n   is_K2_isometry ?J\\<rbrakk>\n  \\<Longrightarrow> sgn (expansion_factor ?p ?J) =\n                    sgn (expansion_factor ?q ?J)\n\ngoal (1 subgoal):\n 1. sgn (expansion_factor p J) = sgn (expansion_factor q J) &&&\n    sgn (expansion_factor r J) = sgn (expansion_factor q J)", "by fast+"], ["proof (state)\nthis:\n  sgn (expansion_factor p J) = sgn (expansion_factor q J)\n  sgn (expansion_factor r J) = sgn (expansion_factor q J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "with \\<open>?eq \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  expansion_factor q J \\<noteq> 0\n  sgn (expansion_factor p J) = sgn (expansion_factor q J)\n  sgn (expansion_factor r J) = sgn (expansion_factor q J)", "have \"?ep / ?eq > 0\" and \"?er / ?eq > 0\""], ["proof (prove)\nusing this:\n  expansion_factor q J \\<noteq> 0\n  sgn (expansion_factor p J) = sgn (expansion_factor q J)\n  sgn (expansion_factor r J) = sgn (expansion_factor q J)\n\ngoal (1 subgoal):\n 1. 0 < expansion_factor p J / expansion_factor q J &&&\n    0 < expansion_factor r J / expansion_factor q J", "by (simp_all add: sgn_div)"], ["proof (state)\nthis:\n  0 < expansion_factor p J / expansion_factor q J\n  0 < expansion_factor r J / expansion_factor q J\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "from \\<open>B\\<^sub>\\<real> ?cp ?cq ?cr\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r", "obtain k where \"k \\<ge> 0\" and \"k \\<le> 1\" and \"?cq = k *\\<^sub>R ?cr + (1 - k) *\\<^sub>R ?cp\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt q cart2_pt r\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 \\<le> k; k \\<le> 1;\n         cart2_pt q =\n         k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_euclid_B_def) (auto simp add: algebra_simps)"], ["proof (state)\nthis:\n  0 \\<le> k\n  k \\<le> 1\n  cart2_pt q = k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?c = \"k * ?er / ?eq\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "from \\<open>k \\<ge> 0\\<close> and \\<open>?er / ?eq > 0\\<close> and mult_nonneg_nonneg [of k \"?er / ?eq\"]"], ["proof (chain)\npicking this:\n  0 \\<le> k\n  0 < expansion_factor r J / expansion_factor q J\n  \\<lbrakk>0 \\<le> k;\n   0 \\<le> expansion_factor r J / expansion_factor q J\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> k *\n                            (expansion_factor r J / expansion_factor q J)", "have \"?c \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> k\n  0 < expansion_factor r J / expansion_factor q J\n  \\<lbrakk>0 \\<le> k;\n   0 \\<le> expansion_factor r J / expansion_factor q J\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> k *\n                            (expansion_factor r J / expansion_factor q J)\n\ngoal (1 subgoal):\n 1. 0 \\<le> k * expansion_factor r J / expansion_factor q J", "by simp"], ["proof (state)\nthis:\n  0 \\<le> k * expansion_factor r J / expansion_factor q J\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "from \\<open>r \\<in> hyp2 \\<union> S\\<close> and \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close>\n    and \\<open>is_K2_isometry J\\<close> and \\<open>?cq = k *\\<^sub>R ?cr + (1 - k) *\\<^sub>R ?cp\\<close>"], ["proof (chain)\npicking this:\n  r \\<in> hyp2 \\<union> S\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_pt q = k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p", "have \"?eq = k * ?er + (1 - k) * ?ep\""], ["proof (prove)\nusing this:\n  r \\<in> hyp2 \\<union> S\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_pt q = k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p\n\ngoal (1 subgoal):\n 1. expansion_factor q J =\n    k * expansion_factor r J + (1 - k) * expansion_factor p J", "by (rule expansion_factor_linear)"], ["proof (state)\nthis:\n  expansion_factor q J =\n  k * expansion_factor r J + (1 - k) * expansion_factor p J\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "with \\<open>?eq \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  expansion_factor q J \\<noteq> 0\n  expansion_factor q J =\n  k * expansion_factor r J + (1 - k) * expansion_factor p J", "have \"1 - ?c = (1 - k) * ?ep / ?eq\""], ["proof (prove)\nusing this:\n  expansion_factor q J \\<noteq> 0\n  expansion_factor q J =\n  k * expansion_factor r J + (1 - k) * expansion_factor p J\n\ngoal (1 subgoal):\n 1. 1 - k * expansion_factor r J / expansion_factor q J =\n    (1 - k) * expansion_factor p J / expansion_factor q J", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 - k * expansion_factor r J / expansion_factor q J =\n  (1 - k) * expansion_factor p J / expansion_factor q J\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "with \\<open>k \\<le> 1\\<close> and \\<open>?ep / ?eq > 0\\<close>\n    and mult_nonneg_nonneg [of \"1 - k\" \"?ep / ?eq\"]"], ["proof (chain)\npicking this:\n  k \\<le> 1\n  0 < expansion_factor p J / expansion_factor q J\n  \\<lbrakk>0 \\<le> 1 - k;\n   0 \\<le> expansion_factor p J / expansion_factor q J\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> (1 - k) *\n                            (expansion_factor p J / expansion_factor q J)\n  1 - k * expansion_factor r J / expansion_factor q J =\n  (1 - k) * expansion_factor p J / expansion_factor q J", "have \"?c \\<le> 1\""], ["proof (prove)\nusing this:\n  k \\<le> 1\n  0 < expansion_factor p J / expansion_factor q J\n  \\<lbrakk>0 \\<le> 1 - k;\n   0 \\<le> expansion_factor p J / expansion_factor q J\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> (1 - k) *\n                            (expansion_factor p J / expansion_factor q J)\n  1 - k * expansion_factor r J / expansion_factor q J =\n  (1 - k) * expansion_factor p J / expansion_factor q J\n\ngoal (1 subgoal):\n 1. k * expansion_factor r J / expansion_factor q J \\<le> 1", "by simp"], ["proof (state)\nthis:\n  k * expansion_factor r J / expansion_factor q J \\<le> 1\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?pJ = \"apply_cltn2 p J\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?qJ = \"apply_cltn2 q J\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?rJ = \"apply_cltn2 r J\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?cpJ = \"cart2_pt ?pJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?cqJ = \"cart2_pt ?qJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?crJ = \"cart2_pt ?rJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?cpJ1 = \"cart2_append1 ?pJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?cqJ1 = \"cart2_append1 ?qJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "let ?crJ1 = \"cart2_append1 ?rJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "from \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close> and \\<open>r \\<in> hyp2 \\<union> S\\<close>\n    and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J", "have \"z_non_zero ?pJ\" and \"z_non_zero ?qJ\" and \"z_non_zero ?rJ\""], ["proof (prove)\nusing this:\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  r \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. z_non_zero (apply_cltn2 p J) &&&\n    z_non_zero (apply_cltn2 q J) &&& z_non_zero (apply_cltn2 r J)", "by (simp_all add: is_K2_isometry_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero (apply_cltn2 p J)\n  z_non_zero (apply_cltn2 q J)\n  z_non_zero (apply_cltn2 r J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "from \\<open>r \\<in> hyp2 \\<union> S\\<close> and \\<open>p \\<in> hyp2 \\<union> S\\<close> and \\<open>q \\<in> hyp2 \\<union> S\\<close>\n    and \\<open>is_K2_isometry J\\<close> and \\<open>?cq = k *\\<^sub>R ?cr + (1 - k) *\\<^sub>R ?cp\\<close>"], ["proof (chain)\npicking this:\n  r \\<in> hyp2 \\<union> S\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_pt q = k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p", "have \"?eq *\\<^sub>R ?cqJ1 = (k * ?er) *\\<^sub>R ?crJ1 + ((1 - k) * ?ep) *\\<^sub>R ?cpJ1\""], ["proof (prove)\nusing this:\n  r \\<in> hyp2 \\<union> S\n  p \\<in> hyp2 \\<union> S\n  q \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  cart2_pt q = k *\\<^sub>R cart2_pt r + (1 - k) *\\<^sub>R cart2_pt p\n\ngoal (1 subgoal):\n 1. expansion_factor q J *\\<^sub>R cart2_append1 (apply_cltn2 q J) =\n    (k * expansion_factor r J) *\\<^sub>R cart2_append1 (apply_cltn2 r J) +\n    ((1 - k) * expansion_factor p J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 p J)", "by (rule expansion_factor_linear_apply_cltn2)"], ["proof (state)\nthis:\n  expansion_factor q J *\\<^sub>R cart2_append1 (apply_cltn2 q J) =\n  (k * expansion_factor r J) *\\<^sub>R cart2_append1 (apply_cltn2 r J) +\n  ((1 - k) * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "hence \"(1 / ?eq) *\\<^sub>R (?eq *\\<^sub>R ?cqJ1)\n    = (1 / ?eq) *\\<^sub>R ((k * ?er) *\\<^sub>R ?crJ1 + ((1 - k) * ?ep) *\\<^sub>R ?cpJ1)\""], ["proof (prove)\nusing this:\n  expansion_factor q J *\\<^sub>R cart2_append1 (apply_cltn2 q J) =\n  (k * expansion_factor r J) *\\<^sub>R cart2_append1 (apply_cltn2 r J) +\n  ((1 - k) * expansion_factor p J) *\\<^sub>R cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. (1 / expansion_factor q J) *\\<^sub>R\n    expansion_factor q J *\\<^sub>R cart2_append1 (apply_cltn2 q J) =\n    (1 / expansion_factor q J) *\\<^sub>R\n    ((k * expansion_factor r J) *\\<^sub>R cart2_append1 (apply_cltn2 r J) +\n     ((1 - k) * expansion_factor p J) *\\<^sub>R\n     cart2_append1 (apply_cltn2 p J))", "by simp"], ["proof (state)\nthis:\n  (1 / expansion_factor q J) *\\<^sub>R\n  expansion_factor q J *\\<^sub>R cart2_append1 (apply_cltn2 q J) =\n  (1 / expansion_factor q J) *\\<^sub>R\n  ((k * expansion_factor r J) *\\<^sub>R cart2_append1 (apply_cltn2 r J) +\n   ((1 - k) * expansion_factor p J) *\\<^sub>R\n   cart2_append1 (apply_cltn2 p J))\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "with \\<open>1 - ?c = (1 - k) * ?ep / ?eq\\<close> and \\<open>?eq \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  1 - k * expansion_factor r J / expansion_factor q J =\n  (1 - k) * expansion_factor p J / expansion_factor q J\n  expansion_factor q J \\<noteq> 0\n  (1 / expansion_factor q J) *\\<^sub>R\n  expansion_factor q J *\\<^sub>R cart2_append1 (apply_cltn2 q J) =\n  (1 / expansion_factor q J) *\\<^sub>R\n  ((k * expansion_factor r J) *\\<^sub>R cart2_append1 (apply_cltn2 r J) +\n   ((1 - k) * expansion_factor p J) *\\<^sub>R\n   cart2_append1 (apply_cltn2 p J))", "have \"?cqJ1 = ?c *\\<^sub>R ?crJ1 + (1 - ?c) *\\<^sub>R ?cpJ1\""], ["proof (prove)\nusing this:\n  1 - k * expansion_factor r J / expansion_factor q J =\n  (1 - k) * expansion_factor p J / expansion_factor q J\n  expansion_factor q J \\<noteq> 0\n  (1 / expansion_factor q J) *\\<^sub>R\n  expansion_factor q J *\\<^sub>R cart2_append1 (apply_cltn2 q J) =\n  (1 / expansion_factor q J) *\\<^sub>R\n  ((k * expansion_factor r J) *\\<^sub>R cart2_append1 (apply_cltn2 r J) +\n   ((1 - k) * expansion_factor p J) *\\<^sub>R\n   cart2_append1 (apply_cltn2 p J))\n\ngoal (1 subgoal):\n 1. cart2_append1 (apply_cltn2 q J) =\n    (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 r J) +\n    (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n    cart2_append1 (apply_cltn2 p J)", "by (simp add: scaleR_right_distrib)"], ["proof (state)\nthis:\n  cart2_append1 (apply_cltn2 q J) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_append1 (apply_cltn2 r J) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "with \\<open>z_non_zero ?pJ\\<close> and \\<open>z_non_zero ?qJ\\<close> and \\<open>z_non_zero ?rJ\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero (apply_cltn2 p J)\n  z_non_zero (apply_cltn2 q J)\n  z_non_zero (apply_cltn2 r J)\n  cart2_append1 (apply_cltn2 q J) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_append1 (apply_cltn2 r J) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_append1 (apply_cltn2 p J)", "have \"vector2_append1 ?cqJ\n    = ?c *\\<^sub>R vector2_append1 ?crJ + (1 - ?c) *\\<^sub>R vector2_append1 ?cpJ\""], ["proof (prove)\nusing this:\n  z_non_zero (apply_cltn2 p J)\n  z_non_zero (apply_cltn2 q J)\n  z_non_zero (apply_cltn2 r J)\n  cart2_append1 (apply_cltn2 q J) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_append1 (apply_cltn2 r J) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_append1 (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. vector2_append1 (cart2_pt (apply_cltn2 q J)) =\n    (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n    vector2_append1 (cart2_pt (apply_cltn2 r J)) +\n    (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n    vector2_append1 (cart2_pt (apply_cltn2 p J))", "by (simp add: cart2_append1)"], ["proof (state)\nthis:\n  vector2_append1 (cart2_pt (apply_cltn2 q J)) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  vector2_append1 (cart2_pt (apply_cltn2 r J)) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  vector2_append1 (cart2_pt (apply_cltn2 p J))\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "hence \"?cqJ = ?c *\\<^sub>R ?crJ + (1 - ?c) *\\<^sub>R ?cpJ\""], ["proof (prove)\nusing this:\n  vector2_append1 (cart2_pt (apply_cltn2 q J)) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  vector2_append1 (cart2_pt (apply_cltn2 r J)) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  vector2_append1 (cart2_pt (apply_cltn2 p J))\n\ngoal (1 subgoal):\n 1. cart2_pt (apply_cltn2 q J) =\n    (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n    cart2_pt (apply_cltn2 r J) +\n    (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n    cart2_pt (apply_cltn2 p J)", "unfolding vector2_append1_def and vector_def"], ["proof (prove)\nusing this:\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n     [cart2_pt (apply_cltn2 q J) $ 1, cart2_pt (apply_cltn2 q J) $ 2, 1]\n     (\\<lambda>n x. 0) 1) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n     [cart2_pt (apply_cltn2 r J) $ 1, cart2_pt (apply_cltn2 r J) $ 2, 1]\n     (\\<lambda>n x. 0) 1) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  vec_lambda\n   (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n     [cart2_pt (apply_cltn2 p J) $ 1, cart2_pt (apply_cltn2 p J) $ 2, 1]\n     (\\<lambda>n x. 0) 1)\n\ngoal (1 subgoal):\n 1. cart2_pt (apply_cltn2 q J) =\n    (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n    cart2_pt (apply_cltn2 r J) +\n    (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n    cart2_pt (apply_cltn2 p J)", "by (simp add: vec_eq_iff forall_2 forall_3)"], ["proof (state)\nthis:\n  cart2_pt (apply_cltn2 q J) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_pt (apply_cltn2 r J) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_pt (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "with \\<open>?c \\<ge> 0\\<close> and \\<open>?c \\<le> 1\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> k * expansion_factor r J / expansion_factor q J\n  k * expansion_factor r J / expansion_factor q J \\<le> 1\n  cart2_pt (apply_cltn2 q J) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_pt (apply_cltn2 r J) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_pt (apply_cltn2 p J)", "show \"B\\<^sub>\\<real> ?cpJ ?cqJ ?crJ\""], ["proof (prove)\nusing this:\n  0 \\<le> k * expansion_factor r J / expansion_factor q J\n  k * expansion_factor r J / expansion_factor q J \\<le> 1\n  cart2_pt (apply_cltn2 q J) =\n  (k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_pt (apply_cltn2 r J) +\n  (1 - k * expansion_factor r J / expansion_factor q J) *\\<^sub>R\n  cart2_pt (apply_cltn2 p J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 p\n                       J) cart2_pt\n                           (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)", "by (unfold real_euclid_B_def) (simp add: algebra_simps exI [of _ ?c])"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 p\n                     J) cart2_pt\n                         (apply_cltn2 q J) cart2_pt (apply_cltn2 r J)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom4: \"\\<forall> q a b c. \\<exists> x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "proof (rule allI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "fix q a b c :: hyp2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?pq = \"Rep_hyp2 q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?pa = \"Rep_hyp2 a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?pb = \"Rep_hyp2 b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?pc = \"Rep_hyp2 c\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "have \"?pq \\<in> hyp2\" and \"?pa \\<in> hyp2\" and \"?pb \\<in> hyp2\" and \"?pc \\<in> hyp2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_hyp2 q \\<in> hyp2 &&& Rep_hyp2 a \\<in> hyp2) &&&\n    Rep_hyp2 b \\<in> hyp2 &&& Rep_hyp2 c \\<in> hyp2", "by (rule Rep_hyp2)+"], ["proof (state)\nthis:\n  Rep_hyp2 q \\<in> hyp2\n  Rep_hyp2 a \\<in> hyp2\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?cq = \"cart2_pt ?pq\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?ca = \"cart2_pt ?pa\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?cb = \"cart2_pt ?pb\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?cc = \"cart2_pt ?pc\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?pp = \"\\<some> p. p \\<in> S \\<and> B\\<^sub>\\<real> ?cb ?cc (cart2_pt p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?cp = \"cart2_pt ?pp\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "from \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pc \\<in> hyp2\\<close> and extend_to_S [of ?pb ?pc]\n    and someI_ex [of \"\\<lambda> p. p \\<in> S \\<and> B\\<^sub>\\<real> ?cb ?cc (cart2_pt p)\"]"], ["proof (chain)\npicking this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  \\<lbrakk>Rep_hyp2 b \\<in> hyp2 \\<union> S;\n   Rep_hyp2 c \\<in> hyp2 \\<union> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r\\<in>S.\n                       B\\<^sub>\\<real> cart2_pt\n  (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt r\n  \\<exists>x.\n     x \\<in> S \\<and>\n     B\\<^sub>\\<real> cart2_pt\n                      (Rep_hyp2\n                        b) cart2_pt\n                            (Rep_hyp2 c) cart2_pt x \\<Longrightarrow>\n  (SOME x.\n      x \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt x)\n  \\<in> S \\<and>\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     b) cart2_pt\n                         (Rep_hyp2\n                           c) cart2_pt\n                               (SOME x.\n                                   x \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt x)", "have \"?pp \\<in> S\" and \"B\\<^sub>\\<real> ?cb ?cc ?cp\""], ["proof (prove)\nusing this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  \\<lbrakk>Rep_hyp2 b \\<in> hyp2 \\<union> S;\n   Rep_hyp2 c \\<in> hyp2 \\<union> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r\\<in>S.\n                       B\\<^sub>\\<real> cart2_pt\n  (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt r\n  \\<exists>x.\n     x \\<in> S \\<and>\n     B\\<^sub>\\<real> cart2_pt\n                      (Rep_hyp2\n                        b) cart2_pt\n                            (Rep_hyp2 c) cart2_pt x \\<Longrightarrow>\n  (SOME x.\n      x \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt x)\n  \\<in> S \\<and>\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     b) cart2_pt\n                         (Rep_hyp2\n                           c) cart2_pt\n                               (SOME x.\n                                   x \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt x)\n\ngoal (1 subgoal):\n 1. (SOME p.\n        p \\<in> S \\<and>\n        B\\<^sub>\\<real> cart2_pt\n                         (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n    \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       b) cart2_pt\n                           (Rep_hyp2\n                             c) cart2_pt\n                                 (SOME p.\n                                     p \\<in> S \\<and>\n                                     B\\<^sub>\\<real> cart2_pt\n                (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)", "by auto"], ["proof (state)\nthis:\n  (SOME p.\n      p \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n  \\<in> S\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     b) cart2_pt\n                         (Rep_hyp2\n                           c) cart2_pt\n                               (SOME p.\n                                   p \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?pr = \"\\<some> r. r \\<in> S \\<and> B\\<^sub>\\<real> ?cq ?ca (cart2_pt r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?cr = \"cart2_pt ?pr\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "from \\<open>?pq \\<in> hyp2\\<close> and \\<open>?pa \\<in> hyp2\\<close> and extend_to_S [of ?pq ?pa]\n    and someI_ex [of \"\\<lambda> r. r \\<in> S \\<and> B\\<^sub>\\<real> ?cq ?ca (cart2_pt r)\"]"], ["proof (chain)\npicking this:\n  Rep_hyp2 q \\<in> hyp2\n  Rep_hyp2 a \\<in> hyp2\n  \\<lbrakk>Rep_hyp2 q \\<in> hyp2 \\<union> S;\n   Rep_hyp2 a \\<in> hyp2 \\<union> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r\\<in>S.\n                       B\\<^sub>\\<real> cart2_pt\n  (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r\n  \\<exists>x.\n     x \\<in> S \\<and>\n     B\\<^sub>\\<real> cart2_pt\n                      (Rep_hyp2\n                        q) cart2_pt\n                            (Rep_hyp2 a) cart2_pt x \\<Longrightarrow>\n  (SOME x.\n      x \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt x)\n  \\<in> S \\<and>\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2\n                           a) cart2_pt\n                               (SOME x.\n                                   x \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt x)", "have \"?pr \\<in> S\" and \"B\\<^sub>\\<real> ?cq ?ca ?cr\""], ["proof (prove)\nusing this:\n  Rep_hyp2 q \\<in> hyp2\n  Rep_hyp2 a \\<in> hyp2\n  \\<lbrakk>Rep_hyp2 q \\<in> hyp2 \\<union> S;\n   Rep_hyp2 a \\<in> hyp2 \\<union> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r\\<in>S.\n                       B\\<^sub>\\<real> cart2_pt\n  (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r\n  \\<exists>x.\n     x \\<in> S \\<and>\n     B\\<^sub>\\<real> cart2_pt\n                      (Rep_hyp2\n                        q) cart2_pt\n                            (Rep_hyp2 a) cart2_pt x \\<Longrightarrow>\n  (SOME x.\n      x \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt x)\n  \\<in> S \\<and>\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2\n                           a) cart2_pt\n                               (SOME x.\n                                   x \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt x)\n\ngoal (1 subgoal):\n 1. (SOME r.\n        r \\<in> S \\<and>\n        B\\<^sub>\\<real> cart2_pt\n                         (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n    \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       q) cart2_pt\n                           (Rep_hyp2\n                             a) cart2_pt\n                                 (SOME r.\n                                     r \\<in> S \\<and>\n                                     B\\<^sub>\\<real> cart2_pt\n                (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)", "by auto"], ["proof (state)\nthis:\n  (SOME r.\n      r \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n  \\<in> S\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2\n                           a) cart2_pt\n                               (SOME r.\n                                   r \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "from \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pa \\<in> hyp2\\<close> and \\<open>?pp \\<in> S\\<close> and \\<open>?pr \\<in> S\\<close>\n    and statement66_existence [of ?pb ?pa ?pp ?pr]"], ["proof (chain)\npicking this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 a \\<in> hyp2\n  (SOME p.\n      p \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n  \\<in> S\n  (SOME r.\n      r \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n  \\<in> S\n  \\<lbrakk>Rep_hyp2 b \\<in> hyp2; Rep_hyp2 a \\<in> hyp2;\n   (SOME p.\n       p \\<in> S \\<and>\n       B\\<^sub>\\<real> cart2_pt\n                        (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n   \\<in> S;\n   (SOME r.\n       r \\<in> S \\<and>\n       B\\<^sub>\\<real> cart2_pt\n                        (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n   \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a \\<and>\n                       apply_cltn2\n                        (SOME p.\n                            p \\<in> S \\<and>\n                            B\\<^sub>\\<real> cart2_pt\n       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n                        J =\n                       (SOME r.\n                           r \\<in> S \\<and>\n                           B\\<^sub>\\<real> cart2_pt\n      (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)", "obtain J where \"is_K2_isometry J\"\n    and \"apply_cltn2 ?pb J = ?pa\" and \"apply_cltn2 ?pp J = ?pr\""], ["proof (prove)\nusing this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 a \\<in> hyp2\n  (SOME p.\n      p \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n  \\<in> S\n  (SOME r.\n      r \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n  \\<in> S\n  \\<lbrakk>Rep_hyp2 b \\<in> hyp2; Rep_hyp2 a \\<in> hyp2;\n   (SOME p.\n       p \\<in> S \\<and>\n       B\\<^sub>\\<real> cart2_pt\n                        (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n   \\<in> S;\n   (SOME r.\n       r \\<in> S \\<and>\n       B\\<^sub>\\<real> cart2_pt\n                        (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n   \\<in> S\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a \\<and>\n                       apply_cltn2\n                        (SOME p.\n                            p \\<in> S \\<and>\n                            B\\<^sub>\\<real> cart2_pt\n       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n                        J =\n                       (SOME r.\n                           r \\<in> S \\<and>\n                           B\\<^sub>\\<real> cart2_pt\n      (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a;\n         apply_cltn2\n          (SOME p.\n              p \\<in> S \\<and>\n              B\\<^sub>\\<real> cart2_pt\n                               (Rep_hyp2\n                                 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n          J =\n         (SOME r.\n             r \\<in> S \\<and>\n             B\\<^sub>\\<real> cart2_pt\n                              (Rep_hyp2\n                                q) cart2_pt\n                                    (Rep_hyp2 a) cart2_pt r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n  apply_cltn2\n   (SOME p.\n       p \\<in> S \\<and>\n       B\\<^sub>\\<real> cart2_pt\n                        (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n   J =\n  (SOME r.\n      r \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?px = \"apply_cltn2 ?pc J\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?cx = \"cart2_pt ?px\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "let ?x = \"Abs_hyp2 ?px\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "from \\<open>is_K2_isometry J\\<close> and \\<open>?pc \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  Rep_hyp2 c \\<in> hyp2", "have \"?px \\<in> hyp2\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  Rep_hyp2 c \\<in> hyp2\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2", "by (rule statement60_one_way)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "hence \"Rep_hyp2 ?x = ?px\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. Rep_hyp2 (Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)) =\n    apply_cltn2 (Rep_hyp2 c) J", "by (rule Abs_hyp2_inverse)"], ["proof (state)\nthis:\n  Rep_hyp2 (Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)) =\n  apply_cltn2 (Rep_hyp2 c) J\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "from \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pc \\<in> hyp2\\<close> and \\<open>?pp \\<in> S\\<close> and \\<open>is_K2_isometry J\\<close>\n    and \\<open>B\\<^sub>\\<real> ?cb ?cc ?cp\\<close> and statement_63"], ["proof (chain)\npicking this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  (SOME p.\n      p \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n  \\<in> S\n  is_K2_isometry J\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     b) cart2_pt\n                         (Rep_hyp2\n                           c) cart2_pt\n                               (SOME p.\n                                   p \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S;\n   ?r \\<in> hyp2 \\<union> S; is_K2_isometry ?J;\n   B\\<^sub>\\<real> cart2_pt ?p cart2_pt ?q cart2_pt ?r\\<rbrakk>\n  \\<Longrightarrow> B\\<^sub>\\<real> cart2_pt\n                                     (apply_cltn2 ?p\n ?J) cart2_pt (apply_cltn2 ?q ?J) cart2_pt (apply_cltn2 ?r ?J)", "have \"B\\<^sub>\\<real> (cart2_pt (apply_cltn2 ?pb J)) ?cx (cart2_pt (apply_cltn2 ?pp J))\""], ["proof (prove)\nusing this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  (SOME p.\n      p \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n  \\<in> S\n  is_K2_isometry J\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     b) cart2_pt\n                         (Rep_hyp2\n                           c) cart2_pt\n                               (SOME p.\n                                   p \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S;\n   ?r \\<in> hyp2 \\<union> S; is_K2_isometry ?J;\n   B\\<^sub>\\<real> cart2_pt ?p cart2_pt ?q cart2_pt ?r\\<rbrakk>\n  \\<Longrightarrow> B\\<^sub>\\<real> cart2_pt\n                                     (apply_cltn2 ?p\n ?J) cart2_pt (apply_cltn2 ?q ?J) cart2_pt (apply_cltn2 ?r ?J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 (Rep_hyp2 b)\n                       J) cart2_pt\n                           (apply_cltn2 (Rep_hyp2 c)\n                             J) cart2_pt\n                                 (apply_cltn2\n                                   (SOME p.\n p \\<in> S \\<and>\n B\\<^sub>\\<real> cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n                                   J)", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 (Rep_hyp2 b)\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 c)\n                           J) cart2_pt\n                               (apply_cltn2\n                                 (SOME p.\n                                     p \\<in> S \\<and>\n                                     B\\<^sub>\\<real> cart2_pt\n                (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n                                 J)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "with \\<open>apply_cltn2 ?pb J = ?pa\\<close> and \\<open>apply_cltn2 ?pp J = ?pr\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n  apply_cltn2\n   (SOME p.\n       p \\<in> S \\<and>\n       B\\<^sub>\\<real> cart2_pt\n                        (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n   J =\n  (SOME r.\n      r \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 (Rep_hyp2 b)\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 c)\n                           J) cart2_pt\n                               (apply_cltn2\n                                 (SOME p.\n                                     p \\<in> S \\<and>\n                                     B\\<^sub>\\<real> cart2_pt\n                (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n                                 J)", "have \"B\\<^sub>\\<real> ?ca ?cx ?cr\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n  apply_cltn2\n   (SOME p.\n       p \\<in> S \\<and>\n       B\\<^sub>\\<real> cart2_pt\n                        (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n   J =\n  (SOME r.\n      r \\<in> S \\<and>\n      B\\<^sub>\\<real> cart2_pt\n                       (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 (Rep_hyp2 b)\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 c)\n                           J) cart2_pt\n                               (apply_cltn2\n                                 (SOME p.\n                                     p \\<in> S \\<and>\n                                     B\\<^sub>\\<real> cart2_pt\n                (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) cart2_pt p)\n                                 J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       a) cart2_pt\n                           (apply_cltn2 (Rep_hyp2 c)\n                             J) cart2_pt\n                                 (SOME r.\n                                     r \\<in> S \\<and>\n                                     B\\<^sub>\\<real> cart2_pt\n                (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     a) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 c)\n                           J) cart2_pt\n                               (SOME r.\n                                   r \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "with \\<open>B\\<^sub>\\<real> ?cq ?ca ?cr\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2\n                           a) cart2_pt\n                               (SOME r.\n                                   r \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     a) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 c)\n                           J) cart2_pt\n                               (SOME r.\n                                   r \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)", "have \"B\\<^sub>\\<real> ?cq ?ca ?cx\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2\n                           a) cart2_pt\n                               (SOME r.\n                                   r \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     a) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 c)\n                           J) cart2_pt\n                               (SOME r.\n                                   r \\<in> S \\<and>\n                                   B\\<^sub>\\<real> cart2_pt\n              (Rep_hyp2 q) cart2_pt (Rep_hyp2 a) cart2_pt r)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       q) cart2_pt\n                           (Rep_hyp2\n                             a) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)", "by (rule real_euclid.th3_5_1)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2 a) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "with \\<open>Rep_hyp2 ?x = ?px\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 (Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)) =\n  apply_cltn2 (Rep_hyp2 c) J\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2 a) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)", "have \"B\\<^sub>K q a ?x\""], ["proof (prove)\nusing this:\n  Rep_hyp2 (Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)) =\n  apply_cltn2 (Rep_hyp2 c) J\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2 a) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>K q a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)", "unfolding real_hyp2_B_def and hyp2_rep_def"], ["proof (prove)\nusing this:\n  Rep_hyp2 (Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)) =\n  apply_cltn2 (Rep_hyp2 c) J\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     q) cart2_pt\n                         (Rep_hyp2 a) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       q) cart2_pt\n                           (Rep_hyp2\n                             a) cart2_pt\n                                 (Rep_hyp2\n                                   (Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)))", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>K q a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "have \"Abs_hyp2 ?pa = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_hyp2 (Rep_hyp2 a) = a", "by (rule Rep_hyp2_inverse)"], ["proof (state)\nthis:\n  Abs_hyp2 (Rep_hyp2 a) = a\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "with \\<open>apply_cltn2 ?pb J = ?pa\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n  Abs_hyp2 (Rep_hyp2 a) = a", "have \"hyp2_cltn2 b J = a\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 a\n  Abs_hyp2 (Rep_hyp2 a) = a\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 b J = a", "by (unfold hyp2_cltn2_def) simp"], ["proof (state)\nthis:\n  hyp2_cltn2 b J = a\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "have \"hyp2_cltn2 c J = ?x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_cltn2 c J = Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)", "unfolding hyp2_cltn2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J) =\n    Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)", ".."], ["proof (state)\nthis:\n  hyp2_cltn2 c J = Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "with \\<open>is_K2_isometry J\\<close> and \\<open>hyp2_cltn2 b J = a\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  hyp2_cltn2 b J = a\n  hyp2_cltn2 c J = Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)", "have \"b c \\<congruent>\\<^sub>K a ?x\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  hyp2_cltn2 b J = a\n  hyp2_cltn2 c J = Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. b c \\<congruent>\\<^sub>K a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)", "by (unfold real_hyp2_C_def) (simp add: exI [of _ J])"], ["proof (state)\nthis:\n  b c \\<congruent>\\<^sub>K a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "hence \"a ?x \\<congruent>\\<^sub>K b c\""], ["proof (prove)\nusing this:\n  b c \\<congruent>\\<^sub>K a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J) \\<congruent>\\<^sub>K b c", "by (rule hyp2.th2_2)"], ["proof (state)\nthis:\n  a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J) \\<congruent>\\<^sub>K b c\n\ngoal (1 subgoal):\n 1. \\<And>q a b c.\n       \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "with \\<open>B\\<^sub>K q a ?x\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>K q a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)\n  a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J) \\<congruent>\\<^sub>K b c", "show \"\\<exists> x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c\""], ["proof (prove)\nusing this:\n  B\\<^sub>K q a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)\n  a Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J) \\<congruent>\\<^sub>K b c\n\ngoal (1 subgoal):\n 1. \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c", "by (simp add: exI [of _ ?x])"], ["proof (state)\nthis:\n  \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>More betweenness theorems\\<close>"], ["", "lemma hyp2_S_points_fix_line:\n  assumes \"a \\<in> hyp2\" and \"p \\<in> S\" and \"is_K2_isometry J\"\n  and \"apply_cltn2 a J = a\" (is \"?aJ = a\")\n  and \"apply_cltn2 p J = p\" (is \"?pJ = p\")\n  and \"proj2_incident a l\" and \"proj2_incident p l\" and \"proj2_incident b l\"\n  shows \"apply_cltn2 b J = b\" (is \"?bJ = b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "let ?lJ = \"apply_cltn2_line l J\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "from \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident p l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident a l\n  proj2_incident p l", "have \"proj2_incident ?aJ ?lJ\" and \"proj2_incident ?pJ ?lJ\""], ["proof (prove)\nusing this:\n  proj2_incident a l\n  proj2_incident p l\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 a J) (apply_cltn2_line l J) &&&\n    proj2_incident (apply_cltn2 p J) (apply_cltn2_line l J)", "by simp_all"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 a J) (apply_cltn2_line l J)\n  proj2_incident (apply_cltn2 p J) (apply_cltn2_line l J)\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "with \\<open>?aJ = a\\<close> and \\<open>?pJ = p\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 a J = a\n  apply_cltn2 p J = p\n  proj2_incident (apply_cltn2 a J) (apply_cltn2_line l J)\n  proj2_incident (apply_cltn2 p J) (apply_cltn2_line l J)", "have \"proj2_incident a ?lJ\" and \"proj2_incident p ?lJ\""], ["proof (prove)\nusing this:\n  apply_cltn2 a J = a\n  apply_cltn2 p J = p\n  proj2_incident (apply_cltn2 a J) (apply_cltn2_line l J)\n  proj2_incident (apply_cltn2 p J) (apply_cltn2_line l J)\n\ngoal (1 subgoal):\n 1. proj2_incident a (apply_cltn2_line l J) &&&\n    proj2_incident p (apply_cltn2_line l J)", "by simp_all"], ["proof (state)\nthis:\n  proj2_incident a (apply_cltn2_line l J)\n  proj2_incident p (apply_cltn2_line l J)\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "from \\<open>a \\<in> hyp2\\<close> \\<open>proj2_incident a l\\<close> and line_through_K2_intersect_S_again [of a l]"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l\n  \\<lbrakk>a \\<in> hyp2; proj2_incident a l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       r \\<noteq> ?q \\<and>\n                       r \\<in> S \\<and> proj2_incident r l", "obtain q where \"q \\<noteq> p\" and \"q \\<in> S\" and \"proj2_incident q l\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n  \\<lbrakk>a \\<in> hyp2; proj2_incident a l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       r \\<noteq> ?q \\<and>\n                       r \\<in> S \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<noteq> p; q \\<in> S; proj2_incident q l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<noteq> p\n  q \\<in> S\n  proj2_incident q l\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "let ?qJ = \"apply_cltn2 q J\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "from \\<open>a \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  p \\<in> S\n  q \\<in> S", "have \"a \\<noteq> p\" and \"a \\<noteq> q\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  p \\<in> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> p &&& a \\<noteq> q", "by (simp_all add: hyp2_S_not_equal)"], ["proof (state)\nthis:\n  a \\<noteq> p\n  a \\<noteq> q\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "from \\<open>a \\<noteq> p\\<close> and \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident p l\\<close>\n    and \\<open>proj2_incident a ?lJ\\<close> and \\<open>proj2_incident p ?lJ\\<close>\n    and proj2_incident_unique"], ["proof (chain)\npicking this:\n  a \\<noteq> p\n  proj2_incident a l\n  proj2_incident p l\n  proj2_incident a (apply_cltn2_line l J)\n  proj2_incident p (apply_cltn2_line l J)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m", "have \"?lJ = l\""], ["proof (prove)\nusing this:\n  a \\<noteq> p\n  proj2_incident a l\n  proj2_incident p l\n  proj2_incident a (apply_cltn2_line l J)\n  proj2_incident p (apply_cltn2_line l J)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n\ngoal (1 subgoal):\n 1. apply_cltn2_line l J = l", "by auto"], ["proof (state)\nthis:\n  apply_cltn2_line l J = l\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "from \\<open>proj2_incident q l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident q l", "have \"proj2_incident ?qJ ?lJ\""], ["proof (prove)\nusing this:\n  proj2_incident q l\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 q J) (apply_cltn2_line l J)", "by simp"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 q J) (apply_cltn2_line l J)\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "with \\<open>?lJ = l\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2_line l J = l\n  proj2_incident (apply_cltn2 q J) (apply_cltn2_line l J)", "have \"proj2_incident ?qJ l\""], ["proof (prove)\nusing this:\n  apply_cltn2_line l J = l\n  proj2_incident (apply_cltn2 q J) (apply_cltn2_line l J)\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 q J) l", "by simp"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 q J) l\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "from \\<open>q \\<in> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  q \\<in> S\n  is_K2_isometry J", "have \"?qJ \\<in> S\""], ["proof (prove)\nusing this:\n  q \\<in> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<in> S", "by (unfold is_K2_isometry_def) simp"], ["proof (state)\nthis:\n  apply_cltn2 q J \\<in> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "with \\<open>q \\<noteq> p\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>proj2_incident p l\\<close>\n    and \\<open>proj2_incident q l\\<close> and \\<open>proj2_incident ?qJ l\\<close>\n    and line_S_two_intersections_only"], ["proof (chain)\npicking this:\n  q \\<noteq> p\n  p \\<in> S\n  q \\<in> S\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident (apply_cltn2 q J) l\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> S; ?q \\<in> S; ?r \\<in> S;\n   proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?r ?l\\<rbrakk>\n  \\<Longrightarrow> ?r = ?p \\<or> ?r = ?q\n  apply_cltn2 q J \\<in> S", "have \"?qJ = p \\<or> ?qJ = q\""], ["proof (prove)\nusing this:\n  q \\<noteq> p\n  p \\<in> S\n  q \\<in> S\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident (apply_cltn2 q J) l\n  \\<lbrakk>?p \\<noteq> ?q; ?p \\<in> S; ?q \\<in> S; ?r \\<in> S;\n   proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?r ?l\\<rbrakk>\n  \\<Longrightarrow> ?r = ?p \\<or> ?r = ?q\n  apply_cltn2 q J \\<in> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J = p \\<or> apply_cltn2 q J = q", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 q J = p \\<or> apply_cltn2 q J = q\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "have \"?qJ = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_cltn2 q J = q", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<noteq> q \\<Longrightarrow> False", "assume \"?qJ \\<noteq> q\""], ["proof (state)\nthis:\n  apply_cltn2 q J \\<noteq> q\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<noteq> q \\<Longrightarrow> False", "with \\<open>?qJ = p \\<or> ?qJ = q\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 q J = p \\<or> apply_cltn2 q J = q\n  apply_cltn2 q J \\<noteq> q", "have \"?qJ = p\""], ["proof (prove)\nusing this:\n  apply_cltn2 q J = p \\<or> apply_cltn2 q J = q\n  apply_cltn2 q J \\<noteq> q\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J = p", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 q J = p\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<noteq> q \\<Longrightarrow> False", "with \\<open>?pJ = p\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 p J = p\n  apply_cltn2 q J = p", "have \"?qJ = ?pJ\""], ["proof (prove)\nusing this:\n  apply_cltn2 p J = p\n  apply_cltn2 q J = p\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J = apply_cltn2 p J", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 q J = apply_cltn2 p J\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<noteq> q \\<Longrightarrow> False", "with apply_cltn2_injective"], ["proof (chain)\npicking this:\n  apply_cltn2 ?p ?C = apply_cltn2 ?q ?C \\<Longrightarrow> ?p = ?q\n  apply_cltn2 q J = apply_cltn2 p J", "have \"q = p\""], ["proof (prove)\nusing this:\n  apply_cltn2 ?p ?C = apply_cltn2 ?q ?C \\<Longrightarrow> ?p = ?q\n  apply_cltn2 q J = apply_cltn2 p J\n\ngoal (1 subgoal):\n 1. q = p", "by fast"], ["proof (state)\nthis:\n  q = p\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J \\<noteq> q \\<Longrightarrow> False", "with \\<open>q \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  q \\<noteq> p\n  q = p", "show False"], ["proof (prove)\nusing this:\n  q \\<noteq> p\n  q = p\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  apply_cltn2 q J = q\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "with \\<open>q \\<noteq> p\\<close> and \\<open>a \\<noteq> p\\<close> and \\<open>a \\<noteq> q\\<close> and \\<open>proj2_incident p l\\<close>\n    and \\<open>proj2_incident q l\\<close> and \\<open>proj2_incident a l\\<close>\n    and \\<open>?pJ = p\\<close> and \\<open>?aJ = a\\<close> and \\<open>proj2_incident b l\\<close>\n    and cltn2_three_point_line [of p q a l J b]"], ["proof (chain)\npicking this:\n  q \\<noteq> p\n  a \\<noteq> p\n  a \\<noteq> q\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l\n  apply_cltn2 p J = p\n  apply_cltn2 a J = a\n  proj2_incident b l\n  \\<lbrakk>p \\<noteq> q; a \\<noteq> p; a \\<noteq> q; proj2_incident p l;\n   proj2_incident q l; proj2_incident a l; apply_cltn2 p J = p;\n   apply_cltn2 q J = q; apply_cltn2 a J = a; proj2_incident b l\\<rbrakk>\n  \\<Longrightarrow> apply_cltn2 b J = b\n  apply_cltn2 q J = q", "show \"?bJ = b\""], ["proof (prove)\nusing this:\n  q \\<noteq> p\n  a \\<noteq> p\n  a \\<noteq> q\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l\n  apply_cltn2 p J = p\n  apply_cltn2 a J = a\n  proj2_incident b l\n  \\<lbrakk>p \\<noteq> q; a \\<noteq> p; a \\<noteq> q; proj2_incident p l;\n   proj2_incident q l; proj2_incident a l; apply_cltn2 p J = p;\n   apply_cltn2 q J = q; apply_cltn2 a J = a; proj2_incident b l\\<rbrakk>\n  \\<Longrightarrow> apply_cltn2 b J = b\n  apply_cltn2 q J = q\n\ngoal (1 subgoal):\n 1. apply_cltn2 b J = b", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 b J = b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma K2_isometry_endpoint_in_S:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\" and \"is_K2_isometry J\"\n  shows \"apply_cltn2 (endpoint_in_S a b) J\n  = endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)\"\n  (is \"?pJ = endpoint_in_S ?aJ ?bJ\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "let ?p = \"endpoint_in_S a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "from \\<open>a \\<noteq> b\\<close> and apply_cltn2_injective"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  apply_cltn2 ?p ?C = apply_cltn2 ?q ?C \\<Longrightarrow> ?p = ?q", "have \"?aJ \\<noteq> ?bJ\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  apply_cltn2 ?p ?C = apply_cltn2 ?q ?C \\<Longrightarrow> ?p = ?q\n\ngoal (1 subgoal):\n 1. apply_cltn2 a J \\<noteq> apply_cltn2 b J", "by fast"], ["proof (state)\nthis:\n  apply_cltn2 a J \\<noteq> apply_cltn2 b J\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>is_K2_isometry J\\<close>\n    and is_K2_isometry_hyp2_S"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; is_K2_isometry ?J\\<rbrakk>\n  \\<Longrightarrow> apply_cltn2 ?p ?J \\<in> hyp2 \\<union> S", "have \"?aJ \\<in> hyp2 \\<union> S\" and \"?bJ \\<in> hyp2 \\<union> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  is_K2_isometry J\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; is_K2_isometry ?J\\<rbrakk>\n  \\<Longrightarrow> apply_cltn2 ?p ?J \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 a J \\<in> hyp2 \\<union> S &&&\n    apply_cltn2 b J \\<in> hyp2 \\<union> S", "by simp_all"], ["proof (state)\nthis:\n  apply_cltn2 a J \\<in> hyp2 \\<union> S\n  apply_cltn2 b J \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "let ?ca = \"cart2_pt a\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "let ?cb = \"cart2_pt b\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "let ?cp = \"cart2_pt ?p\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S", "have \"?p \\<in> S\" and \"B\\<^sub>\\<real> ?ca ?cb ?cp\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "by (rule endpoint_in_S)+"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "from \\<open>?p \\<in> S\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  endpoint_in_S a b \\<in> S\n  is_K2_isometry J", "have \"?pJ \\<in> S\""], ["proof (prove)\nusing this:\n  endpoint_in_S a b \\<in> S\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J \\<in> S", "by (unfold is_K2_isometry_def) simp"], ["proof (state)\nthis:\n  apply_cltn2 (endpoint_in_S a b) J \\<in> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "let ?caJ = \"cart2_pt ?aJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "let ?cbJ = \"cart2_pt ?bJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "let ?cpJ = \"cart2_pt ?pJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>?p \\<in> S\\<close> and \\<open>is_K2_isometry J\\<close>\n    and \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close> and statement_63"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  endpoint_in_S a b \\<in> S\n  is_K2_isometry J\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S;\n   ?r \\<in> hyp2 \\<union> S; is_K2_isometry ?J;\n   B\\<^sub>\\<real> cart2_pt ?p cart2_pt ?q cart2_pt ?r\\<rbrakk>\n  \\<Longrightarrow> B\\<^sub>\\<real> cart2_pt\n                                     (apply_cltn2 ?p\n ?J) cart2_pt (apply_cltn2 ?q ?J) cart2_pt (apply_cltn2 ?r ?J)", "have \"B\\<^sub>\\<real> ?caJ ?cbJ ?cpJ\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  endpoint_in_S a b \\<in> S\n  is_K2_isometry J\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S;\n   ?r \\<in> hyp2 \\<union> S; is_K2_isometry ?J;\n   B\\<^sub>\\<real> cart2_pt ?p cart2_pt ?q cart2_pt ?r\\<rbrakk>\n  \\<Longrightarrow> B\\<^sub>\\<real> cart2_pt\n                                     (apply_cltn2 ?p\n ?J) cart2_pt (apply_cltn2 ?q ?J) cart2_pt (apply_cltn2 ?r ?J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 a\n                       J) cart2_pt\n                           (apply_cltn2 b\n                             J) cart2_pt (apply_cltn2 (endpoint_in_S a b) J)", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 a\n                     J) cart2_pt\n                         (apply_cltn2 b\n                           J) cart2_pt (apply_cltn2 (endpoint_in_S a b) J)\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "with \\<open>?aJ \\<noteq> ?bJ\\<close> and \\<open>?aJ \\<in> hyp2 \\<union> S\\<close> and \\<open>?bJ \\<in> hyp2 \\<union> S\\<close> and \\<open>?pJ \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 a J \\<noteq> apply_cltn2 b J\n  apply_cltn2 a J \\<in> hyp2 \\<union> S\n  apply_cltn2 b J \\<in> hyp2 \\<union> S\n  apply_cltn2 (endpoint_in_S a b) J \\<in> S\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 a\n                     J) cart2_pt\n                         (apply_cltn2 b\n                           J) cart2_pt (apply_cltn2 (endpoint_in_S a b) J)", "show \"?pJ = endpoint_in_S ?aJ ?bJ\""], ["proof (prove)\nusing this:\n  apply_cltn2 a J \\<noteq> apply_cltn2 b J\n  apply_cltn2 a J \\<in> hyp2 \\<union> S\n  apply_cltn2 b J \\<in> hyp2 \\<union> S\n  apply_cltn2 (endpoint_in_S a b) J \\<in> S\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 a\n                     J) cart2_pt\n                         (apply_cltn2 b\n                           J) cart2_pt (apply_cltn2 (endpoint_in_S a b) J)\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S a b) J =\n    endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)", "by (rule endpoint_in_S_unique)"], ["proof (state)\nthis:\n  apply_cltn2 (endpoint_in_S a b) J =\n  endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma between_endpoint_in_S:\n  assumes \"a \\<noteq> b\" and \"b \\<noteq> c\"\n  and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\" and \"c \\<in> hyp2 \\<union> S\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt c)\" (is \"B\\<^sub>\\<real> ?ca ?cb ?cc\")\n  shows \"endpoint_in_S a b = endpoint_in_S b c\" (is \"?p = ?q\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b c", "from \\<open>b \\<noteq> c\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>c \\<in> hyp2 \\<union> S\\<close> and hyp2_S_cart2_inj"], ["proof (chain)\npicking this:\n  b \\<noteq> c\n  b \\<in> hyp2 \\<union> S\n  c \\<in> hyp2 \\<union> S\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S;\n   cart2_pt ?p = cart2_pt ?q\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q", "have \"?cb \\<noteq> ?cc\""], ["proof (prove)\nusing this:\n  b \\<noteq> c\n  b \\<in> hyp2 \\<union> S\n  c \\<in> hyp2 \\<union> S\n  \\<lbrakk>?p \\<in> hyp2 \\<union> S; ?q \\<in> hyp2 \\<union> S;\n   cart2_pt ?p = cart2_pt ?q\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q\n\ngoal (1 subgoal):\n 1. cart2_pt b \\<noteq> cart2_pt c", "by auto"], ["proof (state)\nthis:\n  cart2_pt b \\<noteq> cart2_pt c\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b c", "let ?cq = \"cart2_pt ?q\""], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b c", "from \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>c \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2 \\<union> S\n  c \\<in> hyp2 \\<union> S", "have \"?q \\<in> S\" and \"B\\<^sub>\\<real> ?cb ?cc ?cq\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2 \\<union> S\n  c \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S b c \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt b cart2_pt c cart2_pt (endpoint_in_S b c)", "by (rule endpoint_in_S)+"], ["proof (state)\nthis:\n  endpoint_in_S b c \\<in> S\n  B\\<^sub>\\<real> cart2_pt b cart2_pt c cart2_pt (endpoint_in_S b c)\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b c", "from \\<open>?cb \\<noteq> ?cc\\<close> and \\<open>B\\<^sub>\\<real> ?ca ?cb ?cc\\<close> and \\<open>B\\<^sub>\\<real> ?cb ?cc ?cq\\<close>"], ["proof (chain)\npicking this:\n  cart2_pt b \\<noteq> cart2_pt c\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt c\n  B\\<^sub>\\<real> cart2_pt b cart2_pt c cart2_pt (endpoint_in_S b c)", "have \"B\\<^sub>\\<real> ?ca ?cb ?cq\""], ["proof (prove)\nusing this:\n  cart2_pt b \\<noteq> cart2_pt c\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt c\n  B\\<^sub>\\<real> cart2_pt b cart2_pt c cart2_pt (endpoint_in_S b c)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S b c)", "by (rule real_euclid.th3_7_2)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S b c)\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b c", "with \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>?q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  endpoint_in_S b c \\<in> S\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S b c)", "have \"?q = ?p\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  endpoint_in_S b c \\<in> S\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S b c)\n\ngoal (1 subgoal):\n 1. endpoint_in_S b c = endpoint_in_S a b", "by (rule endpoint_in_S_unique)"], ["proof (state)\nthis:\n  endpoint_in_S b c = endpoint_in_S a b\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b c", "thus \"?p = ?q\""], ["proof (prove)\nusing this:\n  endpoint_in_S b c = endpoint_in_S a b\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b = endpoint_in_S b c", ".."], ["proof (state)\nthis:\n  endpoint_in_S a b = endpoint_in_S b c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_extend_segment_unique:\n  assumes \"a \\<noteq> b\" and \"B\\<^sub>K a b c\" and \"B\\<^sub>K a b d\" and \"b c \\<congruent>\\<^sub>K b d\"\n  shows \"c = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = d", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c = d\n 2. \\<not> ?P \\<Longrightarrow> c = d", "assume \"b = c\""], ["proof (state)\nthis:\n  b = c\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> c = d\n 2. \\<not> ?P \\<Longrightarrow> c = d", "with \\<open>b c \\<congruent>\\<^sub>K b d\\<close>"], ["proof (chain)\npicking this:\n  b c \\<congruent>\\<^sub>K b d\n  b = c", "show \"c = d\""], ["proof (prove)\nusing this:\n  b c \\<congruent>\\<^sub>K b d\n  b = c\n\ngoal (1 subgoal):\n 1. c = d", "by (simp add: hyp2.A3_reversed)"], ["proof (state)\nthis:\n  c = d\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "assume \"b \\<noteq> c\""], ["proof (state)\nthis:\n  b \\<noteq> c\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "have \"b \\<noteq> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<noteq> d", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> d \\<Longrightarrow> False", "assume \"\\<not> b \\<noteq> d\""], ["proof (state)\nthis:\n  \\<not> b \\<noteq> d\n\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> d \\<Longrightarrow> False", "hence \"b = d\""], ["proof (prove)\nusing this:\n  \\<not> b \\<noteq> d\n\ngoal (1 subgoal):\n 1. b = d", "by simp"], ["proof (state)\nthis:\n  b = d\n\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> d \\<Longrightarrow> False", "with \\<open>b c \\<congruent>\\<^sub>K b d\\<close>"], ["proof (chain)\npicking this:\n  b c \\<congruent>\\<^sub>K b d\n  b = d", "have \"b c \\<congruent>\\<^sub>K b b\""], ["proof (prove)\nusing this:\n  b c \\<congruent>\\<^sub>K b d\n  b = d\n\ngoal (1 subgoal):\n 1. b c \\<congruent>\\<^sub>K b b", "by simp"], ["proof (state)\nthis:\n  b c \\<congruent>\\<^sub>K b b\n\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> d \\<Longrightarrow> False", "hence \"b = c\""], ["proof (prove)\nusing this:\n  b c \\<congruent>\\<^sub>K b b\n\ngoal (1 subgoal):\n 1. b = c", "by (rule hyp2.A3')"], ["proof (state)\nthis:\n  b = c\n\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> d \\<Longrightarrow> False", "with \\<open>b \\<noteq> c\\<close>"], ["proof (chain)\npicking this:\n  b \\<noteq> c\n  b = c", "show False"], ["proof (prove)\nusing this:\n  b \\<noteq> c\n  b = c\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<noteq> d\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "with \\<open>a \\<noteq> b\\<close> and \\<open>b \\<noteq> c\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  b \\<noteq> c\n  b \\<noteq> d", "have \"Rep_hyp2 a \\<noteq> Rep_hyp2 b\" (is \"?pa \\<noteq> ?pb\")\n    and \"Rep_hyp2 b \\<noteq> Rep_hyp2 c\" (is \"?pb \\<noteq> ?pc\")\n    and \"Rep_hyp2 b \\<noteq> Rep_hyp2 d\" (is \"?pb \\<noteq> ?pd\")"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  b \\<noteq> c\n  b \\<noteq> d\n\ngoal (1 subgoal):\n 1. Rep_hyp2 a \\<noteq> Rep_hyp2 b &&&\n    Rep_hyp2 b \\<noteq> Rep_hyp2 c &&& Rep_hyp2 b \\<noteq> Rep_hyp2 d", "by (simp_all add: Rep_hyp2_inject)"], ["proof (state)\nthis:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 b \\<noteq> Rep_hyp2 c\n  Rep_hyp2 b \\<noteq> Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "have \"?pa \\<in> hyp2\" and \"?pb \\<in> hyp2\" and \"?pc \\<in> hyp2\" and \"?pd \\<in> hyp2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Rep_hyp2 a \\<in> hyp2 &&& Rep_hyp2 b \\<in> hyp2) &&&\n    Rep_hyp2 c \\<in> hyp2 &&& Rep_hyp2 d \\<in> hyp2", "by (rule Rep_hyp2)+"], ["proof (state)\nthis:\n  Rep_hyp2 a \\<in> hyp2\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  Rep_hyp2 d \\<in> hyp2\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "let ?pp = \"endpoint_in_S ?pb ?pc\""], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "let ?ca = \"cart2_pt ?pa\""], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "let ?cb = \"cart2_pt ?pb\""], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "let ?cc = \"cart2_pt ?pc\""], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "let ?cd = \"cart2_pt ?pd\""], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "let ?cp = \"cart2_pt ?pp\""], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pc \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2", "have \"?pp \\<in> S\" and \"B\\<^sub>\\<real> ?cb ?cc ?cp\""], ["proof (prove)\nusing this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c) \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       b) cart2_pt\n                           (Rep_hyp2\n                             c) cart2_pt\n                                 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c))", "by (simp_all add: endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c) \\<in> S\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     b) cart2_pt\n                         (Rep_hyp2\n                           c) cart2_pt\n                               (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c))\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>b c \\<congruent>\\<^sub>K b d\\<close>"], ["proof (chain)\npicking this:\n  b c \\<congruent>\\<^sub>K b d", "obtain J where \"is_K2_isometry J\"\n    and \"hyp2_cltn2 b J = b\" and \"hyp2_cltn2 c J = d\""], ["proof (prove)\nusing this:\n  b c \\<congruent>\\<^sub>K b d\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; hyp2_cltn2 b J = b;\n         hyp2_cltn2 c J = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_hyp2_C_def) auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  hyp2_cltn2 b J = b\n  hyp2_cltn2 c J = d\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>hyp2_cltn2 b J = b\\<close> and \\<open>hyp2_cltn2 c J = d\\<close>"], ["proof (chain)\npicking this:\n  hyp2_cltn2 b J = b\n  hyp2_cltn2 c J = d", "have \"Rep_hyp2 (hyp2_cltn2 b J) = ?pb\"\n    and \"Rep_hyp2 (hyp2_cltn2 c J) = ?pd\""], ["proof (prove)\nusing this:\n  hyp2_cltn2 b J = b\n  hyp2_cltn2 c J = d\n\ngoal (1 subgoal):\n 1. Rep_hyp2 (hyp2_cltn2 b J) = Rep_hyp2 b &&&\n    Rep_hyp2 (hyp2_cltn2 c J) = Rep_hyp2 d", "by simp_all"], ["proof (state)\nthis:\n  Rep_hyp2 (hyp2_cltn2 b J) = Rep_hyp2 b\n  Rep_hyp2 (hyp2_cltn2 c J) = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "with \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  Rep_hyp2 (hyp2_cltn2 b J) = Rep_hyp2 b\n  Rep_hyp2 (hyp2_cltn2 c J) = Rep_hyp2 d", "have \"apply_cltn2 ?pb J = ?pb\" and \"apply_cltn2 ?pc J = ?pd\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  Rep_hyp2 (hyp2_cltn2 b J) = Rep_hyp2 b\n  Rep_hyp2 (hyp2_cltn2 c J) = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b &&&\n    apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 d", "by (simp_all add: Rep_hyp2_cltn2)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>B\\<^sub>K a b c\\<close> and \\<open>B\\<^sub>K a b d\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>K a b c\n  B\\<^sub>K a b d", "have \"B\\<^sub>\\<real> ?ca ?cb ?cc\" and \"B\\<^sub>\\<real> ?ca ?cb ?cd\""], ["proof (prove)\nusing this:\n  B\\<^sub>K a b c\n  B\\<^sub>K a b d\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 d)", "unfolding real_hyp2_B_def and hyp2_rep_def"], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 c)\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 d)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 c) &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 d)", "."], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 c)\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 d)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>?pb \\<noteq> ?pc\\<close> and \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pc \\<in> hyp2\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 b \\<noteq> Rep_hyp2 c\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  is_K2_isometry J", "have \"apply_cltn2 ?pp J\n    = endpoint_in_S (apply_cltn2 ?pb J) (apply_cltn2 ?pc J)\""], ["proof (prove)\nusing this:\n  Rep_hyp2 b \\<noteq> Rep_hyp2 c\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n    endpoint_in_S (apply_cltn2 (Rep_hyp2 b) J) (apply_cltn2 (Rep_hyp2 c) J)", "by (simp add: K2_isometry_endpoint_in_S)"], ["proof (state)\nthis:\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n  endpoint_in_S (apply_cltn2 (Rep_hyp2 b) J) (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "also"], ["proof (state)\nthis:\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n  endpoint_in_S (apply_cltn2 (Rep_hyp2 b) J) (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>apply_cltn2 ?pb J = ?pb\\<close> and \\<open>apply_cltn2 ?pc J = ?pd\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 d", "have \"\\<dots> = endpoint_in_S ?pb ?pd\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. endpoint_in_S (apply_cltn2 (Rep_hyp2 b) J)\n     (apply_cltn2 (Rep_hyp2 c) J) =\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 d)", "by simp"], ["proof (state)\nthis:\n  endpoint_in_S (apply_cltn2 (Rep_hyp2 b) J) (apply_cltn2 (Rep_hyp2 c) J) =\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 d)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "also"], ["proof (state)\nthis:\n  endpoint_in_S (apply_cltn2 (Rep_hyp2 b) J) (apply_cltn2 (Rep_hyp2 c) J) =\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 d)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>?pb \\<noteq> ?pd\\<close>\n    and \\<open>?pa \\<in> hyp2\\<close> and \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pd \\<in> hyp2\\<close> and \\<open>B\\<^sub>\\<real> ?ca ?cb ?cd\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 b \\<noteq> Rep_hyp2 d\n  Rep_hyp2 a \\<in> hyp2\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 d \\<in> hyp2\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 d)", "have \"\\<dots> = endpoint_in_S ?pa ?pb\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 b \\<noteq> Rep_hyp2 d\n  Rep_hyp2 a \\<in> hyp2\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 d \\<in> hyp2\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 d)\n\ngoal (1 subgoal):\n 1. endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 d) =\n    endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)", "by (simp add: between_endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 d) =\n  endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "also"], ["proof (state)\nthis:\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 d) =\n  endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>?pb \\<noteq> ?pc\\<close>\n    and \\<open>?pa \\<in> hyp2\\<close> and \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pc \\<in> hyp2\\<close> and \\<open>B\\<^sub>\\<real> ?ca ?cb ?cc\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 b \\<noteq> Rep_hyp2 c\n  Rep_hyp2 a \\<in> hyp2\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 c)", "have \"\\<dots> = endpoint_in_S ?pb ?pc\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 b \\<noteq> Rep_hyp2 c\n  Rep_hyp2 a \\<in> hyp2\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) =\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)", "by (simp add: between_endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) =\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "finally"], ["proof (chain)\npicking this:\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)", "have \"apply_cltn2 ?pp J = ?pp\""], ["proof (prove)\nusing this:\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)", "."], ["proof (state)\nthis:\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "from \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pc \\<in> hyp2\\<close> and \\<open>?pp \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c) \\<in> S", "have \"z_non_zero ?pb\" and \"z_non_zero ?pc\" and \"z_non_zero ?pp\""], ["proof (prove)\nusing this:\n  Rep_hyp2 b \\<in> hyp2\n  Rep_hyp2 c \\<in> hyp2\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c) \\<in> S\n\ngoal (1 subgoal):\n 1. z_non_zero (Rep_hyp2 b) &&&\n    z_non_zero (Rep_hyp2 c) &&&\n    z_non_zero (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c))", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero (Rep_hyp2 b)\n  z_non_zero (Rep_hyp2 c)\n  z_non_zero (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c))\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "with \\<open>B\\<^sub>\\<real> ?cb ?cc ?cp\\<close> and euclid_B_cart2_common_line [of ?pb ?pc ?pp]"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     b) cart2_pt\n                         (Rep_hyp2\n                           c) cart2_pt\n                               (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c))\n  \\<lbrakk>z_non_zero (Rep_hyp2 b); z_non_zero (Rep_hyp2 c);\n   z_non_zero (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c));\n   B\\<^sub>\\<real> cart2_pt\n                    (Rep_hyp2\n                      b) cart2_pt\n                          (Rep_hyp2\n                            c) cart2_pt\n                                (endpoint_in_S (Rep_hyp2 b)\n                                  (Rep_hyp2 c))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l.\n                       proj2_incident (Rep_hyp2 b) l \\<and>\n                       proj2_incident (Rep_hyp2 c) l \\<and>\n                       proj2_incident\n                        (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) l\n  z_non_zero (Rep_hyp2 b)\n  z_non_zero (Rep_hyp2 c)\n  z_non_zero (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c))", "obtain l where \"proj2_incident ?pb l\" and \"proj2_incident ?pp l\"\n    and \"proj2_incident ?pc l\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2\n                     b) cart2_pt\n                         (Rep_hyp2\n                           c) cart2_pt\n                               (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c))\n  \\<lbrakk>z_non_zero (Rep_hyp2 b); z_non_zero (Rep_hyp2 c);\n   z_non_zero (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c));\n   B\\<^sub>\\<real> cart2_pt\n                    (Rep_hyp2\n                      b) cart2_pt\n                          (Rep_hyp2\n                            c) cart2_pt\n                                (endpoint_in_S (Rep_hyp2 b)\n                                  (Rep_hyp2 c))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>l.\n                       proj2_incident (Rep_hyp2 b) l \\<and>\n                       proj2_incident (Rep_hyp2 c) l \\<and>\n                       proj2_incident\n                        (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) l\n  z_non_zero (Rep_hyp2 b)\n  z_non_zero (Rep_hyp2 c)\n  z_non_zero (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c))\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>proj2_incident (Rep_hyp2 b) l;\n         proj2_incident (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) l;\n         proj2_incident (Rep_hyp2 c) l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  proj2_incident (Rep_hyp2 b) l\n  proj2_incident (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) l\n  proj2_incident (Rep_hyp2 c) l\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "with \\<open>?pb \\<in> hyp2\\<close> and \\<open>?pp \\<in> S\\<close> and \\<open>is_K2_isometry J\\<close>\n    and \\<open>apply_cltn2 ?pb J = ?pb\\<close> and \\<open>apply_cltn2 ?pp J = ?pp\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 b \\<in> hyp2\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c) \\<in> S\n  is_K2_isometry J\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)\n  proj2_incident (Rep_hyp2 b) l\n  proj2_incident (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) l\n  proj2_incident (Rep_hyp2 c) l", "have \"apply_cltn2 ?pc J = ?pc\""], ["proof (prove)\nusing this:\n  Rep_hyp2 b \\<in> hyp2\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c) \\<in> S\n  is_K2_isometry J\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) J =\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)\n  proj2_incident (Rep_hyp2 b) l\n  proj2_incident (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 c)) l\n  proj2_incident (Rep_hyp2 c) l\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 c", "by (rule hyp2_S_points_fix_line)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 c\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "with \\<open>apply_cltn2 ?pc J = ?pd\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 d\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 c", "have \"?pc = ?pd\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 d\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 c\n\ngoal (1 subgoal):\n 1. Rep_hyp2 c = Rep_hyp2 d", "by simp"], ["proof (state)\nthis:\n  Rep_hyp2 c = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow> c = d", "thus \"c = d\""], ["proof (prove)\nusing this:\n  Rep_hyp2 c = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. c = d", "by (subst Rep_hyp2_inject [symmetric])"], ["proof (state)\nthis:\n  c = d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma line_S_match_intersections:\n  assumes \"p \\<noteq> q\" and \"r \\<noteq> s\" and \"p \\<in> S\" and \"q \\<in> S\" and \"r \\<in> S\" and \"s \\<in> S\"\n  and \"proj2_set_Col {p,q,r,s}\"\n  shows \"(p = r \\<and> q = s) \\<or> (q = r \\<and> p = s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = r \\<and> q = s \\<or> q = r \\<and> p = s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p = r \\<and> q = s \\<or> q = r \\<and> p = s", "from \\<open>proj2_set_Col {p,q,r,s}\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, r, s}", "obtain l where \"proj2_incident p l\" and \"proj2_incident q l\"\n    and \"proj2_incident r l\" and \"proj2_incident s l\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, r, s}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>proj2_incident p l; proj2_incident q l; proj2_incident r l;\n         proj2_incident s l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold proj2_set_Col_def) auto"], ["proof (state)\nthis:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident r l\n  proj2_incident s l\n\ngoal (1 subgoal):\n 1. p = r \\<and> q = s \\<or> q = r \\<and> p = s", "with \\<open>r \\<noteq> s\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>r \\<in> S\\<close> and \\<open>s \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  r \\<noteq> s\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n  s \\<in> S\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident r l\n  proj2_incident s l", "have \"p = r \\<or> p = s\" and \"q = r \\<or> q = s\""], ["proof (prove)\nusing this:\n  r \\<noteq> s\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n  s \\<in> S\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident r l\n  proj2_incident s l\n\ngoal (1 subgoal):\n 1. p = r \\<or> p = s &&& q = r \\<or> q = s", "by (simp_all add: line_S_two_intersections_only)"], ["proof (state)\nthis:\n  p = r \\<or> p = s\n  q = r \\<or> q = s\n\ngoal (1 subgoal):\n 1. p = r \\<and> q = s \\<or> q = r \\<and> p = s", "show \"(p = r \\<and> q = s) \\<or> (q = r \\<and> p = s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = r \\<and> q = s \\<or> q = r \\<and> p = s", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p = r \\<and> q = s \\<or> q = r \\<and> p = s\n 2. \\<not> ?P \\<Longrightarrow> p = r \\<and> q = s \\<or> q = r \\<and> p = s", "assume \"p = r\""], ["proof (state)\nthis:\n  p = r\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p = r \\<and> q = s \\<or> q = r \\<and> p = s\n 2. \\<not> ?P \\<Longrightarrow> p = r \\<and> q = s \\<or> q = r \\<and> p = s", "with \\<open>p \\<noteq> q\\<close> and \\<open>q = r \\<or> q = s\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  q = r \\<or> q = s\n  p = r", "show \"(p = r \\<and> q = s) \\<or> (q = r \\<and> p = s)\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  q = r \\<or> q = s\n  p = r\n\ngoal (1 subgoal):\n 1. p = r \\<and> q = s \\<or> q = r \\<and> p = s", "by simp"], ["proof (state)\nthis:\n  p = r \\<and> q = s \\<or> q = r \\<and> p = s\n\ngoal (1 subgoal):\n 1. p \\<noteq> r \\<Longrightarrow>\n    p = r \\<and> q = s \\<or> q = r \\<and> p = s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> r \\<Longrightarrow>\n    p = r \\<and> q = s \\<or> q = r \\<and> p = s", "assume \"p \\<noteq> r\""], ["proof (state)\nthis:\n  p \\<noteq> r\n\ngoal (1 subgoal):\n 1. p \\<noteq> r \\<Longrightarrow>\n    p = r \\<and> q = s \\<or> q = r \\<and> p = s", "with \\<open>p = r \\<or> p = s\\<close>"], ["proof (chain)\npicking this:\n  p = r \\<or> p = s\n  p \\<noteq> r", "have \"p = s\""], ["proof (prove)\nusing this:\n  p = r \\<or> p = s\n  p \\<noteq> r\n\ngoal (1 subgoal):\n 1. p = s", "by simp"], ["proof (state)\nthis:\n  p = s\n\ngoal (1 subgoal):\n 1. p \\<noteq> r \\<Longrightarrow>\n    p = r \\<and> q = s \\<or> q = r \\<and> p = s", "with \\<open>p \\<noteq> q\\<close> and \\<open>q = r \\<or> q = s\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  q = r \\<or> q = s\n  p = s", "show \"(p = r \\<and> q = s) \\<or> (q = r \\<and> p = s)\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  q = r \\<or> q = s\n  p = s\n\ngoal (1 subgoal):\n 1. p = r \\<and> q = s \\<or> q = r \\<and> p = s", "by simp"], ["proof (state)\nthis:\n  p = r \\<and> q = s \\<or> q = r \\<and> p = s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p = r \\<and> q = s \\<or> q = r \\<and> p = s\n\ngoal:\nNo subgoals!", "qed"], ["", "definition are_endpoints_in_S :: \"[proj2, proj2, proj2, proj2] \\<Rightarrow> bool\" where\n  \"are_endpoints_in_S p q a b\n  \\<equiv> p \\<noteq> q \\<and> p \\<in> S \\<and> q \\<in> S \\<and> a \\<in> hyp2 \\<and> b \\<in> hyp2 \\<and> proj2_set_Col {p,q,a,b}\""], ["", "lemma are_endpoints_in_S':\n  assumes \"p \\<noteq> q\" and \"a \\<noteq> b\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2 \\<union> S\"\n  and \"b \\<in> hyp2 \\<union> S\" and \"proj2_set_Col {p,q,a,b}\"\n  shows \"(p = endpoint_in_S a b \\<and> q = endpoint_in_S b a)\n  \\<or> (q = endpoint_in_S a b \\<and> p = endpoint_in_S b a)\"\n  (is \"(p = ?r \\<and> q = ?s) \\<or> (q = ?r \\<and> p = ?s)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S", "have \"?r \\<noteq> ?s\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<noteq> endpoint_in_S b a", "by (simp add: endpoint_in_S_swap)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S", "have \"?r \\<in> S\" and \"?s \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S &&& endpoint_in_S b a \\<in> S", "by (simp_all add: endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "from \\<open>proj2_set_Col {p,q,a,b}\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, a, b}", "obtain l where \"proj2_incident p l\" and \"proj2_incident q l\"\n    and \"proj2_incident a l\" and \"proj2_incident b l\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>proj2_incident p l; proj2_incident q l; proj2_incident a l;\n         proj2_incident b l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold proj2_set_Col_def) auto"], ["proof (state)\nthis:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>proj2_incident a l\\<close>\n    and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  proj2_incident a l\n  proj2_incident b l", "have \"proj2_incident ?r l\" and \"proj2_incident ?s l\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  proj2_incident a l\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) l &&&\n    proj2_incident (endpoint_in_S b a) l", "by (simp_all add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (endpoint_in_S a b) l\n  proj2_incident (endpoint_in_S b a) l\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "with \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident (endpoint_in_S a b) l\n  proj2_incident (endpoint_in_S b a) l", "have \"proj2_set_Col {p,q,?r,?s}\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident (endpoint_in_S a b) l\n  proj2_incident (endpoint_in_S b a) l\n\ngoal (1 subgoal):\n 1. proj2_set_Col {p, q, endpoint_in_S a b, endpoint_in_S b a}", "by (unfold proj2_set_Col_def) (simp add: exI [of _ l])"], ["proof (state)\nthis:\n  proj2_set_Col {p, q, endpoint_in_S a b, endpoint_in_S b a}\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "with \\<open>p \\<noteq> q\\<close> and \\<open>?r \\<noteq> ?s\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>?r \\<in> S\\<close> and \\<open>?s \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n  p \\<in> S\n  q \\<in> S\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n  proj2_set_Col {p, q, endpoint_in_S a b, endpoint_in_S b a}", "show \"(p = ?r \\<and> q = ?s) \\<or> (q = ?r \\<and> p = ?s)\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n  p \\<in> S\n  q \\<in> S\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n  proj2_set_Col {p, q, endpoint_in_S a b, endpoint_in_S b a}\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "by (rule line_S_match_intersections)"], ["proof (state)\nthis:\n  p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n  q = endpoint_in_S a b \\<and> p = endpoint_in_S b a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma are_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"are_endpoints_in_S p q a b\"\n  shows \"(p = endpoint_in_S a b \\<and> q = endpoint_in_S b a)\n  \\<or> (q = endpoint_in_S a b \\<and> p = endpoint_in_S b a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "by (unfold are_endpoints_in_S_def) (simp add: are_endpoints_in_S')"], ["", "lemma S_intersections_endpoints_in_S:\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\" and \"proj2_abs a \\<noteq> proj2_abs b\" (is \"?pa \\<noteq> ?pb\")\n  and \"proj2_abs a \\<in> hyp2\" and \"proj2_abs b \\<in> hyp2 \\<union> S\"\n  shows \"(S_intersection1 a b = endpoint_in_S ?pa ?pb\n      \\<and> S_intersection2 a b = endpoint_in_S ?pb ?pa)\n    \\<or> (S_intersection2 a b = endpoint_in_S ?pa ?pb\n      \\<and> S_intersection1 a b = endpoint_in_S ?pb ?pa)\"\n  (is \"(?pp = ?pr \\<and> ?pq = ?ps) \\<or> (?pq = ?pr \\<and> ?pp = ?ps)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "from \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>?pa \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2", "have \"?pp \\<noteq> ?pq\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. S_intersection1 a b \\<noteq> S_intersection2 a b", "by (simp add: S_intersections_distinct)"], ["proof (state)\nthis:\n  S_intersection1 a b \\<noteq> S_intersection2 a b\n\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "from \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>proj2_abs a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2", "have \"?pp \\<in> S\" and \"?pq \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. S_intersection1 a b \\<in> S &&& S_intersection2 a b \\<in> S", "by (simp_all add: S_intersections_in_S)"], ["proof (state)\nthis:\n  S_intersection1 a b \\<in> S\n  S_intersection2 a b \\<in> S\n\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "let ?l = \"proj2_line_through ?pa ?pb\""], ["proof (state)\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "have \"proj2_incident ?pa ?l\" and \"proj2_incident ?pb ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs a)\n     (proj2_line_through (proj2_abs a) (proj2_abs b)) &&&\n    proj2_incident (proj2_abs b)\n     (proj2_line_through (proj2_abs a) (proj2_abs b))", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "with \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<noteq> ?pb\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))", "have \"proj2_incident ?pp ?l\" and \"proj2_incident ?pq ?l\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n\ngoal (1 subgoal):\n 1. proj2_incident (S_intersection1 a b)\n     (proj2_line_through (proj2_abs a) (proj2_abs b)) &&&\n    proj2_incident (S_intersection2 a b)\n     (proj2_line_through (proj2_abs a) (proj2_abs b))", "by (rule S_intersections_incident)+"], ["proof (state)\nthis:\n  proj2_incident (S_intersection1 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection2 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "with \\<open>proj2_incident ?pa ?l\\<close> and \\<open>proj2_incident ?pb ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection1 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection2 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))", "have \"proj2_set_Col {?pp,?pq,?pa,?pb}\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection1 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection2 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n\ngoal (1 subgoal):\n 1. proj2_set_Col\n     {S_intersection1 a b, S_intersection2 a b, proj2_abs a, proj2_abs b}", "by (unfold proj2_set_Col_def) (simp add: exI [of _ ?l])"], ["proof (state)\nthis:\n  proj2_set_Col\n   {S_intersection1 a b, S_intersection2 a b, proj2_abs a, proj2_abs b}\n\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "with \\<open>?pp \\<noteq> ?pq\\<close> and \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>?pp \\<in> S\\<close> and \\<open>?pq \\<in> S\\<close> and \\<open>?pa \\<in> hyp2\\<close>\n    and \\<open>?pb \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  S_intersection1 a b \\<noteq> S_intersection2 a b\n  proj2_abs a \\<noteq> proj2_abs b\n  S_intersection1 a b \\<in> S\n  S_intersection2 a b \\<in> S\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2 \\<union> S\n  proj2_set_Col\n   {S_intersection1 a b, S_intersection2 a b, proj2_abs a, proj2_abs b}", "show \"(?pp = ?pr \\<and> ?pq = ?ps) \\<or> (?pq = ?pr \\<and> ?pp = ?ps)\""], ["proof (prove)\nusing this:\n  S_intersection1 a b \\<noteq> S_intersection2 a b\n  proj2_abs a \\<noteq> proj2_abs b\n  S_intersection1 a b \\<in> S\n  S_intersection2 a b \\<in> S\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2 \\<union> S\n  proj2_set_Col\n   {S_intersection1 a b, S_intersection2 a b, proj2_abs a, proj2_abs b}\n\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "by (simp add: are_endpoints_in_S')"], ["proof (state)\nthis:\n  S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n  S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n  S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n  S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma between_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  shows \"B\\<^sub>\\<real>\n  (cart2_pt (endpoint_in_S a b)) (cart2_pt a) (cart2_pt (endpoint_in_S b a))\"\n  (is \"B\\<^sub>\\<real> ?cp ?ca ?cq\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (endpoint_in_S a\n                       b) cart2_pt a cart2_pt (endpoint_in_S b a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (endpoint_in_S a\n                       b) cart2_pt a cart2_pt (endpoint_in_S b a)", "let ?cb = \"cart2_pt b\""], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (endpoint_in_S a\n                       b) cart2_pt a cart2_pt (endpoint_in_S b a)", "from \\<open>b \\<in> hyp2 \\<union> S\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2 \\<union> S\n  a \\<in> hyp2 \\<union> S\n  a \\<noteq> b", "have \"?cb \\<noteq> ?ca\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2 \\<union> S\n  a \\<in> hyp2 \\<union> S\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. cart2_pt b \\<noteq> cart2_pt a", "by (auto simp add: hyp2_S_cart2_inj)"], ["proof (state)\nthis:\n  cart2_pt b \\<noteq> cart2_pt a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (endpoint_in_S a\n                       b) cart2_pt a cart2_pt (endpoint_in_S b a)", "from \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S", "have \"B\\<^sub>\\<real> ?ca ?cb ?cp\" and \"B\\<^sub>\\<real> ?cb ?ca ?cq\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b) &&&\n    B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S b a)", "by (simp_all add: endpoint_in_S)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S b a)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (endpoint_in_S a\n                       b) cart2_pt a cart2_pt (endpoint_in_S b a)", "from \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)", "have \"B\\<^sub>\\<real> ?cp ?cb ?ca\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt (endpoint_in_S a b)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt (endpoint_in_S a b) cart2_pt b cart2_pt a", "by (rule real_euclid.th3_2)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt (endpoint_in_S a b) cart2_pt b cart2_pt a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (endpoint_in_S a\n                       b) cart2_pt a cart2_pt (endpoint_in_S b a)", "with \\<open>?cb \\<noteq> ?ca\\<close> and \\<open>B\\<^sub>\\<real> ?cb ?ca ?cq\\<close>"], ["proof (chain)\npicking this:\n  cart2_pt b \\<noteq> cart2_pt a\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S b a)\n  B\\<^sub>\\<real> cart2_pt (endpoint_in_S a b) cart2_pt b cart2_pt a", "show \"B\\<^sub>\\<real> ?cp ?ca ?cq\""], ["proof (prove)\nusing this:\n  cart2_pt b \\<noteq> cart2_pt a\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt (endpoint_in_S b a)\n  B\\<^sub>\\<real> cart2_pt (endpoint_in_S a b) cart2_pt b cart2_pt a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (endpoint_in_S a\n                       b) cart2_pt a cart2_pt (endpoint_in_S b a)", "by (simp add: real_euclid.th3_7_1)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (endpoint_in_S a\n                     b) cart2_pt a cart2_pt (endpoint_in_S b a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_hyp2_S_cart2_append1:\n  assumes \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2\"\n  and \"proj2_incident p l\" and \"proj2_incident q l\" and \"proj2_incident a l\"\n  shows \"\\<exists> k. k > 0 \\<and> k < 1\n  \\<and> cart2_append1 a = k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       k < 1 \\<and>\n       cart2_append1 a =\n       k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       k < 1 \\<and>\n       cart2_append1 a =\n       k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2", "have \"z_non_zero p\" and \"z_non_zero q\" and \"z_non_zero a\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. z_non_zero p &&& z_non_zero q &&& z_non_zero a", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero p\n  z_non_zero q\n  z_non_zero a\n\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       k < 1 \\<and>\n       cart2_append1 a =\n       k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p", "from assms"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l", "have \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt a) (cart2_pt q)\" (is \"B\\<^sub>\\<real> ?cp ?ca ?cq\")"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q", "by (simp add: hyp2_incident_in_middle)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q\n\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       k < 1 \\<and>\n       cart2_append1 a =\n       k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2", "have \"a \\<noteq> p\" and \"a \\<noteq> q\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. a \\<noteq> p &&& a \\<noteq> q", "by (simp_all add: hyp2_S_not_equal)"], ["proof (state)\nthis:\n  a \\<noteq> p\n  a \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       k < 1 \\<and>\n       cart2_append1 a =\n       k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p", "with \\<open>z_non_zero p\\<close> and \\<open>z_non_zero a\\<close> and \\<open>z_non_zero q\\<close>\n    and \\<open>B\\<^sub>\\<real> ?cp ?ca ?cq\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero p\n  z_non_zero a\n  z_non_zero q\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q\n  a \\<noteq> p\n  a \\<noteq> q", "show \"\\<exists> k. k > 0 \\<and> k < 1\n    \\<and> cart2_append1 a = k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p\""], ["proof (prove)\nusing this:\n  z_non_zero p\n  z_non_zero a\n  z_non_zero q\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt q\n  a \\<noteq> p\n  a \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<exists>k>0.\n       k < 1 \\<and>\n       cart2_append1 a =\n       k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p", "by (rule cart2_append1_between_strict)"], ["proof (state)\nthis:\n  \\<exists>k>0.\n     k < 1 \\<and>\n     cart2_append1 a =\n     k *\\<^sub>R cart2_append1 q + (1 - k) *\\<^sub>R cart2_append1 p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma are_endpoints_in_S_swap_34:\n  assumes \"are_endpoints_in_S p q a b\"\n  shows \"are_endpoints_in_S p q b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. are_endpoints_in_S p q b a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. are_endpoints_in_S p q b a", "have \"{p,q,b,a} = {p,q,a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p, q, b, a} = {p, q, a, b}", "by auto"], ["proof (state)\nthis:\n  {p, q, b, a} = {p, q, a, b}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p q b a", "with \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b\n  {p, q, b, a} = {p, q, a, b}", "show \"are_endpoints_in_S p q b a\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n  {p, q, b, a} = {p, q, a, b}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p q b a", "by (unfold are_endpoints_in_S_def) simp"], ["proof (state)\nthis:\n  are_endpoints_in_S p q b a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma proj2_set_Col_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2 \\<union> S\" and \"b \\<in> hyp2 \\<union> S\"\n  shows \"proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}\"\n  (is \"proj2_set_Col {?p,?q,a,b}\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "let ?l = \"proj2_line_through a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "have \"proj2_incident a ?l\" and \"proj2_incident b ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident a (proj2_line_through a b) &&&\n    proj2_incident b (proj2_line_through a b)", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "with \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close> and \\<open>b \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)", "have \"proj2_incident ?p ?l\" and \"proj2_incident ?q ?l\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2 \\<union> S\n  b \\<in> hyp2 \\<union> S\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) (proj2_line_through a b) &&&\n    proj2_incident (endpoint_in_S b a) (proj2_line_through a b)", "by (simp_all add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "with \\<open>proj2_incident a ?l\\<close> and \\<open>proj2_incident b ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)", "show \"proj2_set_Col {?p,?q,a,b}\""], ["proof (prove)\nusing this:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "by (unfold proj2_set_Col_def) (simp add: exI [of _ ?l])"], ["proof (state)\nthis:\n  proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoints_in_S_are_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\"\n  (is \"are_endpoints_in_S ?p ?q a b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"?p \\<noteq> ?q\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<noteq> endpoint_in_S b a", "by (simp add: endpoint_in_S_swap)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"?p \\<in> S\" and \"?q \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S &&& endpoint_in_S b a \\<in> S", "by (simp_all add: endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "from assms"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"proj2_set_Col {?p,?q,a,b}\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "by (simp add: proj2_set_Col_endpoints_in_S)"], ["proof (state)\nthis:\n  proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "with \\<open>?p \\<noteq> ?q\\<close> and \\<open>?p \\<in> S\\<close> and \\<open>?q \\<in> S\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "show \"are_endpoints_in_S ?p ?q a b\""], ["proof (prove)\nusing this:\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n  endpoint_in_S a b \\<in> S\n  endpoint_in_S b a \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (unfold are_endpoints_in_S_def) simp"], ["proof (state)\nthis:\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoint_in_S_S_hyp2_distinct:\n  assumes \"p \\<in> S\" and \"a \\<in> hyp2 \\<union> S\" and \"p \\<noteq> a\"\n  shows \"endpoint_in_S p a \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. endpoint_in_S p a \\<noteq> p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S p a = p \\<Longrightarrow> False", "from \\<open>p \\<noteq> a\\<close> and \\<open>p \\<in> S\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> a\n  p \\<in> S\n  a \\<in> hyp2 \\<union> S", "have \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt a) (cart2_pt (endpoint_in_S p a))\""], ["proof (prove)\nusing this:\n  p \\<noteq> a\n  p \\<in> S\n  a \\<in> hyp2 \\<union> S\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt (endpoint_in_S p a)", "by (simp add: endpoint_in_S)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt (endpoint_in_S p a)\n\ngoal (1 subgoal):\n 1. endpoint_in_S p a = p \\<Longrightarrow> False", "assume \"endpoint_in_S p a = p\""], ["proof (state)\nthis:\n  endpoint_in_S p a = p\n\ngoal (1 subgoal):\n 1. endpoint_in_S p a = p \\<Longrightarrow> False", "with \\<open>B\\<^sub>\\<real> (cart2_pt p) (cart2_pt a) (cart2_pt (endpoint_in_S p a))\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt (endpoint_in_S p a)\n  endpoint_in_S p a = p", "have \"cart2_pt p = cart2_pt a\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt (endpoint_in_S p a)\n  endpoint_in_S p a = p\n\ngoal (1 subgoal):\n 1. cart2_pt p = cart2_pt a", "by (simp add: real_euclid.A6')"], ["proof (state)\nthis:\n  cart2_pt p = cart2_pt a\n\ngoal (1 subgoal):\n 1. endpoint_in_S p a = p \\<Longrightarrow> False", "with \\<open>p \\<in> S\\<close> and \\<open>a \\<in> hyp2 \\<union> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  a \\<in> hyp2 \\<union> S\n  cart2_pt p = cart2_pt a", "have \"p = a\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  a \\<in> hyp2 \\<union> S\n  cart2_pt p = cart2_pt a\n\ngoal (1 subgoal):\n 1. p = a", "by (simp add: hyp2_S_cart2_inj)"], ["proof (state)\nthis:\n  p = a\n\ngoal (1 subgoal):\n 1. endpoint_in_S p a = p \\<Longrightarrow> False", "with \\<open>p \\<noteq> a\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> a\n  p = a", "show False"], ["proof (prove)\nusing this:\n  p \\<noteq> a\n  p = a\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoint_in_S_S_strict_hyp2_distinct:\n  assumes \"p \\<in> S\" and \"a \\<in> hyp2\"\n  shows \"endpoint_in_S p a \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. endpoint_in_S p a \\<noteq> p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S p a \\<noteq> p", "from \\<open>a \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  p \\<in> S", "have \"p \\<noteq> a\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. p \\<noteq> a", "by (rule hyp2_S_not_equal [symmetric])"], ["proof (state)\nthis:\n  p \\<noteq> a\n\ngoal (1 subgoal):\n 1. endpoint_in_S p a \\<noteq> p", "with assms"], ["proof (chain)\npicking this:\n  p \\<in> S\n  a \\<in> hyp2\n  p \\<noteq> a", "show \"endpoint_in_S p a \\<noteq> p\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  a \\<in> hyp2\n  p \\<noteq> a\n\ngoal (1 subgoal):\n 1. endpoint_in_S p a \\<noteq> p", "by (simp add: endpoint_in_S_S_hyp2_distinct)"], ["proof (state)\nthis:\n  endpoint_in_S p a \\<noteq> p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma end_and_opposite_are_endpoints_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"p \\<in> S\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\" and \"proj2_incident p l\"\n  shows \"are_endpoints_in_S p (endpoint_in_S p b) a b\"\n  (is \"are_endpoints_in_S p ?q a b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p b) a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p b) a b", "from \\<open>p \\<in> S\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  b \\<in> hyp2", "have \"p \\<noteq> ?q\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. p \\<noteq> endpoint_in_S p b", "by (rule endpoint_in_S_S_strict_hyp2_distinct [symmetric])"], ["proof (state)\nthis:\n  p \\<noteq> endpoint_in_S p b\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p b) a b", "from \\<open>p \\<in> S\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  b \\<in> hyp2", "have \"?q \\<in> S\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S p b \\<in> S", "by (simp add: endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S p b \\<in> S\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p b) a b", "from \\<open>b \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  p \\<in> S", "have \"p \\<noteq> b\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. p \\<noteq> b", "by (rule hyp2_S_not_equal [symmetric])"], ["proof (state)\nthis:\n  p \\<noteq> b\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p b) a b", "with \\<open>p \\<in> S\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  b \\<in> hyp2\n  proj2_incident p l\n  proj2_incident b l\n  p \\<noteq> b", "have \"proj2_incident ?q l\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  b \\<in> hyp2\n  proj2_incident p l\n  proj2_incident b l\n  p \\<noteq> b\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S p b) l", "by (simp add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (endpoint_in_S p b) l\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p b) a b", "with \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident (endpoint_in_S p b) l", "have \"proj2_set_Col {p,?q,a,b}\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident (endpoint_in_S p b) l\n\ngoal (1 subgoal):\n 1. proj2_set_Col {p, endpoint_in_S p b, a, b}", "by (unfold proj2_set_Col_def) (simp add: exI [of _ l])"], ["proof (state)\nthis:\n  proj2_set_Col {p, endpoint_in_S p b, a, b}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p b) a b", "with \\<open>p \\<noteq> ?q\\<close> and \\<open>p \\<in> S\\<close> and \\<open>?q \\<in> S\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> endpoint_in_S p b\n  p \\<in> S\n  endpoint_in_S p b \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, endpoint_in_S p b, a, b}", "show \"are_endpoints_in_S p ?q a b\""], ["proof (prove)\nusing this:\n  p \\<noteq> endpoint_in_S p b\n  p \\<in> S\n  endpoint_in_S p b \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, endpoint_in_S p b, a, b}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p b) a b", "by (unfold are_endpoints_in_S_def) simp"], ["proof (state)\nthis:\n  are_endpoints_in_S p (endpoint_in_S p b) a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_hyp2_B_hyp2_cltn2:\n  assumes \"is_K2_isometry J\" and \"B\\<^sub>K a b c\"\n  shows \"B\\<^sub>K (hyp2_cltn2 a J) (hyp2_cltn2 b J) (hyp2_cltn2 c J)\"\n  (is \"B\\<^sub>K ?aJ ?bJ ?cJ\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J", "from \\<open>B\\<^sub>K a b c\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>K a b c", "have \"B\\<^sub>\\<real> (hyp2_rep a) (hyp2_rep b) (hyp2_rep c)\""], ["proof (prove)\nusing this:\n  B\\<^sub>K a b c\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> hyp2_rep a hyp2_rep b hyp2_rep c", "by (unfold real_hyp2_B_def)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> hyp2_rep a hyp2_rep b hyp2_rep c\n\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J", "with \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  B\\<^sub>\\<real> hyp2_rep a hyp2_rep b hyp2_rep c", "have \"B\\<^sub>\\<real> (cart2_pt (apply_cltn2 (Rep_hyp2 a) J))\n    (cart2_pt (apply_cltn2 (Rep_hyp2 b) J))\n    (cart2_pt (apply_cltn2 (Rep_hyp2 c) J))\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  B\\<^sub>\\<real> hyp2_rep a hyp2_rep b hyp2_rep c\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 (Rep_hyp2 a)\n                       J) cart2_pt\n                           (apply_cltn2 (Rep_hyp2 b)\n                             J) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)", "by (unfold hyp2_rep_def) (simp add: Rep_hyp2 statement_63)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 (Rep_hyp2 a)\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 b)\n                           J) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J", "moreover"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 (Rep_hyp2 a)\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 b)\n                           J) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "have \"apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\"\n    and \"apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\"\n    and \"apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2 &&&\n    apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2 &&&\n    apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2", "by (rule apply_cltn2_Rep_hyp2)+"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J", "ultimately"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 (Rep_hyp2 a)\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 b)\n                           J) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2", "show \"B\\<^sub>K (hyp2_cltn2 a J) (hyp2_cltn2 b J) (hyp2_cltn2 c J)\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 (Rep_hyp2 a)\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 b)\n                           J) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J", "unfolding hyp2_cltn2_def and real_hyp2_B_def and hyp2_rep_def"], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 (Rep_hyp2 a)\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 b)\n                           J) cart2_pt (apply_cltn2 (Rep_hyp2 c) J)\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       (Abs_hyp2\n                         (apply_cltn2 (Rep_hyp2 a)\n                           J))) cart2_pt\n                                 (Rep_hyp2\n                                   (Abs_hyp2\n                                     (apply_cltn2 (Rep_hyp2 b)\n J))) cart2_pt (Rep_hyp2 (Abs_hyp2 (apply_cltn2 (Rep_hyp2 c) J)))", "by (simp add: Abs_hyp2_inverse)"], ["proof (state)\nthis:\n  B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_hyp2_C_hyp2_cltn2:\n  assumes \"is_K2_isometry J\"\n  shows \"a b \\<congruent>\\<^sub>K (hyp2_cltn2 a J) (hyp2_cltn2 b J)\" (is \"a b \\<congruent>\\<^sub>K ?aJ ?bJ\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. a b \\<congruent>\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J", "using assms"], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. a b \\<congruent>\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J", "by (unfold real_hyp2_C_def) (simp add: exI [of _ J])"], ["", "subsection \\<open>Perpendicularity\\<close>"], ["", "definition M_perp :: \"proj2_line \\<Rightarrow> proj2_line \\<Rightarrow> bool\" where\n  \"M_perp l m \\<equiv> proj2_incident (pole l) m\""], ["", "lemma M_perp_sym:\n  assumes \"M_perp l m\"\n  shows \"M_perp m l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M_perp m l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. M_perp m l", "from \\<open>M_perp l m\\<close>"], ["proof (chain)\npicking this:\n  M_perp l m", "have \"proj2_incident (pole l) m\""], ["proof (prove)\nusing this:\n  M_perp l m\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) m", "by (unfold M_perp_def)"], ["proof (state)\nthis:\n  proj2_incident (pole l) m\n\ngoal (1 subgoal):\n 1. M_perp m l", "hence \"proj2_incident (pole m) (polar (pole l))\""], ["proof (prove)\nusing this:\n  proj2_incident (pole l) m\n\ngoal (1 subgoal):\n 1. proj2_incident (pole m) (polar (pole l))", "by (rule incident_pole_polar)"], ["proof (state)\nthis:\n  proj2_incident (pole m) (polar (pole l))\n\ngoal (1 subgoal):\n 1. M_perp m l", "hence \"proj2_incident (pole m) l\""], ["proof (prove)\nusing this:\n  proj2_incident (pole m) (polar (pole l))\n\ngoal (1 subgoal):\n 1. proj2_incident (pole m) l", "by (simp add: polar_pole)"], ["proof (state)\nthis:\n  proj2_incident (pole m) l\n\ngoal (1 subgoal):\n 1. M_perp m l", "thus \"M_perp m l\""], ["proof (prove)\nusing this:\n  proj2_incident (pole m) l\n\ngoal (1 subgoal):\n 1. M_perp m l", "by (unfold M_perp_def)"], ["proof (state)\nthis:\n  M_perp m l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma M_perp_to_compass:\n  assumes \"M_perp l m\" and \"a \\<in> hyp2\" and \"proj2_incident a l\"\n  and \"b \\<in> hyp2\" and \"proj2_incident b m\"\n  shows \"\\<exists> J. is_K2_isometry J\n  \\<and> apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "from \\<open>a \\<in> K2\\<close> and \\<open>proj2_incident a l\\<close>\n    and line_through_K2_intersect_S_twice [of a l]"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l\n  \\<lbrakk>a \\<in> hyp2; proj2_incident a l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q l \\<and> proj2_incident r l", "obtain p and q where \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\"\n    and \"proj2_incident p l\" and \"proj2_incident q l\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n  \\<lbrakk>a \\<in> hyp2; proj2_incident a l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>q r.\n                       q \\<noteq> r \\<and>\n                       q \\<in> S \\<and>\n                       r \\<in> S \\<and>\n                       proj2_incident q l \\<and> proj2_incident r l\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>p \\<noteq> q; p \\<in> S; q \\<in> S; proj2_incident p l;\n         proj2_incident q l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  proj2_incident p l\n  proj2_incident q l\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "have \"\\<exists> r. r \\<in> S \\<and> r \\<notin> {p,q} \\<and> proj2_incident r m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "assume \"proj2_incident p m\""], ["proof (state)\nthis:\n  proj2_incident p m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "from \\<open>b \\<in> K2\\<close> and \\<open>proj2_incident b m\\<close>\n      and line_through_K2_intersect_S_again [of b m]"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  proj2_incident b m\n  \\<lbrakk>b \\<in> hyp2; proj2_incident b m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       r \\<noteq> ?q \\<and>\n                       r \\<in> S \\<and> proj2_incident r m", "obtain r where \"r \\<in> S\" and \"r \\<noteq> p\" and \"proj2_incident r m\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  proj2_incident b m\n  \\<lbrakk>b \\<in> hyp2; proj2_incident b m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       r \\<noteq> ?q \\<and>\n                       r \\<in> S \\<and> proj2_incident r m\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<in> S; r \\<noteq> p; proj2_incident r m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r \\<in> S\n  r \\<noteq> p\n  proj2_incident r m\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "have \"r \\<notin> {p,q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<notin> {p, q}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "assume \"r \\<in> {p,q}\""], ["proof (state)\nthis:\n  r \\<in> {p, q}\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "with \\<open>r \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  r \\<noteq> p\n  r \\<in> {p, q}", "have \"r = q\""], ["proof (prove)\nusing this:\n  r \\<noteq> p\n  r \\<in> {p, q}\n\ngoal (1 subgoal):\n 1. r = q", "by simp"], ["proof (state)\nthis:\n  r = q\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "with \\<open>proj2_incident r m\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident r m\n  r = q", "have \"proj2_incident q m\""], ["proof (prove)\nusing this:\n  proj2_incident r m\n  r = q\n\ngoal (1 subgoal):\n 1. proj2_incident q m", "by simp"], ["proof (state)\nthis:\n  proj2_incident q m\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "with \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close>\n        and \\<open>proj2_incident p m\\<close> and \\<open>proj2_incident q m\\<close> and \\<open>p \\<noteq> q\\<close>\n        and proj2_incident_unique [of p l q m]"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident p m\n  proj2_incident q m\n  p \\<noteq> q\n  \\<lbrakk>proj2_incident p l; proj2_incident q l; proj2_incident p m;\n   proj2_incident q m\\<rbrakk>\n  \\<Longrightarrow> p = q \\<or> l = m\n  proj2_incident q m", "have \"l = m\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident p m\n  proj2_incident q m\n  p \\<noteq> q\n  \\<lbrakk>proj2_incident p l; proj2_incident q l; proj2_incident p m;\n   proj2_incident q m\\<rbrakk>\n  \\<Longrightarrow> p = q \\<or> l = m\n  proj2_incident q m\n\ngoal (1 subgoal):\n 1. l = m", "by simp"], ["proof (state)\nthis:\n  l = m\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "with \\<open>M_perp l m\\<close>"], ["proof (chain)\npicking this:\n  M_perp l m\n  l = m", "have \"M_perp l l\""], ["proof (prove)\nusing this:\n  M_perp l m\n  l = m\n\ngoal (1 subgoal):\n 1. M_perp l l", "by simp"], ["proof (state)\nthis:\n  M_perp l l\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "hence \"proj2_incident (pole l) l\" (is \"proj2_incident ?s l\")"], ["proof (prove)\nusing this:\n  M_perp l l\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) l", "by (unfold M_perp_def)"], ["proof (state)\nthis:\n  proj2_incident (pole l) l\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "hence \"proj2_incident ?s (polar ?s)\""], ["proof (prove)\nusing this:\n  proj2_incident (pole l) l\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) (polar (pole l))", "by (subst polar_pole)"], ["proof (state)\nthis:\n  proj2_incident (pole l) (polar (pole l))\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "hence \"?s \\<in> S\""], ["proof (prove)\nusing this:\n  proj2_incident (pole l) (polar (pole l))\n\ngoal (1 subgoal):\n 1. pole l \\<in> S", "by (simp add: incident_own_polar_in_S)"], ["proof (state)\nthis:\n  pole l \\<in> S\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "with \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close>\n        and point_in_S_polar_is_tangent [of ?s]"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  proj2_incident p l\n  proj2_incident q l\n  \\<lbrakk>pole l \\<in> S; ?q \\<in> S;\n   proj2_incident ?q (polar (pole l))\\<rbrakk>\n  \\<Longrightarrow> ?q = pole l\n  pole l \\<in> S", "have \"p = ?s\" and \"q = ?s\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  proj2_incident p l\n  proj2_incident q l\n  \\<lbrakk>pole l \\<in> S; ?q \\<in> S;\n   proj2_incident ?q (polar (pole l))\\<rbrakk>\n  \\<Longrightarrow> ?q = pole l\n  pole l \\<in> S\n\ngoal (1 subgoal):\n 1. p = pole l &&& q = pole l", "by (auto simp add: polar_pole)"], ["proof (state)\nthis:\n  p = pole l\n  q = pole l\n\ngoal (1 subgoal):\n 1. r \\<in> {p, q} \\<Longrightarrow> False", "with \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  p = pole l\n  q = pole l", "show False"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p = pole l\n  q = pole l\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<notin> {p, q}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "with \\<open>r \\<in> S\\<close> and \\<open>proj2_incident r m\\<close>"], ["proof (chain)\npicking this:\n  r \\<in> S\n  proj2_incident r m\n  r \\<notin> {p, q}", "show \"\\<exists> r. r \\<in> S \\<and> r \\<notin> {p,q} \\<and> proj2_incident r m\""], ["proof (prove)\nusing this:\n  r \\<in> S\n  proj2_incident r m\n  r \\<notin> {p, q}\n\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "by (simp add: exI [of _ r])"], ["proof (state)\nthis:\n  \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident p m \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> proj2_incident p m \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "assume \"\\<not> proj2_incident p m\""], ["proof (state)\nthis:\n  \\<not> proj2_incident p m\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident p m \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "from \\<open>b \\<in> K2\\<close> and \\<open>proj2_incident b m\\<close>\n      and line_through_K2_intersect_S_again [of b m]"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  proj2_incident b m\n  \\<lbrakk>b \\<in> hyp2; proj2_incident b m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       r \\<noteq> ?q \\<and>\n                       r \\<in> S \\<and> proj2_incident r m", "obtain r where \"r \\<in> S\" and \"r \\<noteq> q\" and \"proj2_incident r m\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  proj2_incident b m\n  \\<lbrakk>b \\<in> hyp2; proj2_incident b m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>r.\n                       r \\<noteq> ?q \\<and>\n                       r \\<in> S \\<and> proj2_incident r m\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<in> S; r \\<noteq> q; proj2_incident r m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r \\<in> S\n  r \\<noteq> q\n  proj2_incident r m\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident p m \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "from \\<open>\\<not> proj2_incident p m\\<close> and \\<open>proj2_incident r m\\<close>"], ["proof (chain)\npicking this:\n  \\<not> proj2_incident p m\n  proj2_incident r m", "have \"r \\<noteq> p\""], ["proof (prove)\nusing this:\n  \\<not> proj2_incident p m\n  proj2_incident r m\n\ngoal (1 subgoal):\n 1. r \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident p m \\<Longrightarrow>\n    \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "with \\<open>r \\<in> S\\<close> and \\<open>r \\<noteq> q\\<close> and \\<open>proj2_incident r m\\<close>"], ["proof (chain)\npicking this:\n  r \\<in> S\n  r \\<noteq> q\n  proj2_incident r m\n  r \\<noteq> p", "show \"\\<exists> r. r \\<in> S \\<and> r \\<notin> {p,q} \\<and> proj2_incident r m\""], ["proof (prove)\nusing this:\n  r \\<in> S\n  r \\<noteq> q\n  proj2_incident r m\n  r \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "by (simp add: exI [of _ r])"], ["proof (state)\nthis:\n  \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "then"], ["proof (chain)\npicking this:\n  \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m", "obtain r where \"r \\<in> S\" and \"r \\<notin> {p,q}\" and \"proj2_incident r m\""], ["proof (prove)\nusing this:\n  \\<exists>r. r \\<in> S \\<and> r \\<notin> {p, q} \\<and> proj2_incident r m\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<in> S; r \\<notin> {p, q}; proj2_incident r m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r \\<in> S\n  r \\<notin> {p, q}\n  proj2_incident r m\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "from \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>r \\<in> S\\<close> and \\<open>p \\<noteq> q\\<close> and \\<open>r \\<notin> {p,q}\\<close>\n    and statement65_special_case [of p q r]"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n  p \\<noteq> q\n  r \\<notin> {p, q}\n  \\<lbrakk>p \\<in> S; q \\<in> S; r \\<in> S; p \\<noteq> q;\n   r \\<notin> {p, q}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 east J = p \\<and>\n                       apply_cltn2 west J = q \\<and>\n                       apply_cltn2 north J = r \\<and>\n                       apply_cltn2 far_north J =\n                       proj2_intersection (polar p) (polar q)", "obtain J where \"is_K2_isometry J\" and \"apply_cltn2 east J = p\"\n    and \"apply_cltn2 west J = q\" and \"apply_cltn2 north J = r\"\n    and \"apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  r \\<in> S\n  p \\<noteq> q\n  r \\<notin> {p, q}\n  \\<lbrakk>p \\<in> S; q \\<in> S; r \\<in> S; p \\<noteq> q;\n   r \\<notin> {p, q}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 east J = p \\<and>\n                       apply_cltn2 west J = q \\<and>\n                       apply_cltn2 north J = r \\<and>\n                       apply_cltn2 far_north J =\n                       proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; apply_cltn2 east J = p;\n         apply_cltn2 west J = q; apply_cltn2 north J = r;\n         apply_cltn2 far_north J =\n         proj2_intersection (polar p) (polar q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  apply_cltn2 east J = p\n  apply_cltn2 west J = q\n  apply_cltn2 north J = r\n  apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "from \\<open>apply_cltn2 east J = p\\<close> and \\<open>apply_cltn2 west J = q\\<close>\n    and \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 east J = p\n  apply_cltn2 west J = q\n  proj2_incident p l\n  proj2_incident q l", "have \"proj2_incident (apply_cltn2 east J) l\"\n    and \"proj2_incident (apply_cltn2 west J) l\""], ["proof (prove)\nusing this:\n  apply_cltn2 east J = p\n  apply_cltn2 west J = q\n  proj2_incident p l\n  proj2_incident q l\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 east J) l &&&\n    proj2_incident (apply_cltn2 west J) l", "by simp_all"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 east J) l\n  proj2_incident (apply_cltn2 west J) l\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "with east_west_distinct and east_west_on_equator"], ["proof (chain)\npicking this:\n  east \\<noteq> west\n  proj2_incident east equator\n  proj2_incident west equator\n  proj2_incident (apply_cltn2 east J) l\n  proj2_incident (apply_cltn2 west J) l", "have \"apply_cltn2_line equator J = l\""], ["proof (prove)\nusing this:\n  east \\<noteq> west\n  proj2_incident east equator\n  proj2_incident west equator\n  proj2_incident (apply_cltn2 east J) l\n  proj2_incident (apply_cltn2 west J) l\n\ngoal (1 subgoal):\n 1. apply_cltn2_line equator J = l", "by (rule apply_cltn2_line_unique)"], ["proof (state)\nthis:\n  apply_cltn2_line equator J = l\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "from \\<open>apply_cltn2 north J = r\\<close> and \\<open>proj2_incident r m\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 north J = r\n  proj2_incident r m", "have \"proj2_incident (apply_cltn2 north J) m\""], ["proof (prove)\nusing this:\n  apply_cltn2 north J = r\n  proj2_incident r m\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 north J) m", "by simp"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 north J) m\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "from \\<open>p \\<noteq> q\\<close> and polar_inj"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  polar ?p = polar ?q \\<Longrightarrow> ?p = ?q", "have \"polar p \\<noteq> polar q\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  polar ?p = polar ?q \\<Longrightarrow> ?p = ?q\n\ngoal (1 subgoal):\n 1. polar p \\<noteq> polar q", "by fast"], ["proof (state)\nthis:\n  polar p \\<noteq> polar q\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "from \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  proj2_incident q l", "have \"proj2_incident (pole l) (polar p)\"\n    and \"proj2_incident (pole l) (polar q)\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  proj2_incident q l\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) (polar p) &&& proj2_incident (pole l) (polar q)", "by (simp_all add: incident_pole_polar)"], ["proof (state)\nthis:\n  proj2_incident (pole l) (polar p)\n  proj2_incident (pole l) (polar q)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "with \\<open>polar p \\<noteq> polar q\\<close>"], ["proof (chain)\npicking this:\n  polar p \\<noteq> polar q\n  proj2_incident (pole l) (polar p)\n  proj2_incident (pole l) (polar q)", "have \"pole l = proj2_intersection (polar p) (polar q)\""], ["proof (prove)\nusing this:\n  polar p \\<noteq> polar q\n  proj2_incident (pole l) (polar p)\n  proj2_incident (pole l) (polar q)\n\ngoal (1 subgoal):\n 1. pole l = proj2_intersection (polar p) (polar q)", "by (rule proj2_intersection_unique)"], ["proof (state)\nthis:\n  pole l = proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "with \\<open>apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\n  pole l = proj2_intersection (polar p) (polar q)", "have \"apply_cltn2 far_north J = pole l\""], ["proof (prove)\nusing this:\n  apply_cltn2 far_north J = proj2_intersection (polar p) (polar q)\n  pole l = proj2_intersection (polar p) (polar q)\n\ngoal (1 subgoal):\n 1. apply_cltn2 far_north J = pole l", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 far_north J = pole l\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "with \\<open>M_perp l m\\<close>"], ["proof (chain)\npicking this:\n  M_perp l m\n  apply_cltn2 far_north J = pole l", "have \"proj2_incident (apply_cltn2 far_north J) m\""], ["proof (prove)\nusing this:\n  M_perp l m\n  apply_cltn2 far_north J = pole l\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 far_north J) m", "by (unfold M_perp_def) simp"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 far_north J) m\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "with north_far_north_distinct and north_south_far_north_on_meridian\n    and \\<open>proj2_incident (apply_cltn2 north J) m\\<close>"], ["proof (chain)\npicking this:\n  north \\<noteq> far_north\n  proj2_incident north meridian\n  proj2_incident south meridian\n  proj2_incident far_north meridian\n  proj2_incident (apply_cltn2 north J) m\n  proj2_incident (apply_cltn2 far_north J) m", "have \"apply_cltn2_line meridian J = m\""], ["proof (prove)\nusing this:\n  north \\<noteq> far_north\n  proj2_incident north meridian\n  proj2_incident south meridian\n  proj2_incident far_north meridian\n  proj2_incident (apply_cltn2 north J) m\n  proj2_incident (apply_cltn2 far_north J) m\n\ngoal (1 subgoal):\n 1. apply_cltn2_line meridian J = m", "by (simp add: apply_cltn2_line_unique)"], ["proof (state)\nthis:\n  apply_cltn2_line meridian J = m\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "with \\<open>is_K2_isometry J\\<close> and \\<open>apply_cltn2_line equator J = l\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  apply_cltn2_line equator J = l\n  apply_cltn2_line meridian J = m", "show \"\\<exists> J. is_K2_isometry J\n    \\<and> apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  apply_cltn2_line equator J = l\n  apply_cltn2_line meridian J = m\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m", "by (simp add: exI [of _ J])"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2_line equator J = l \\<and> apply_cltn2_line meridian J = m\n\ngoal:\nNo subgoals!", "qed"], ["", "definition drop_perp :: \"proj2 \\<Rightarrow> proj2_line \\<Rightarrow> proj2_line\" where\n  \"drop_perp p l \\<equiv> proj2_line_through p (pole l)\""], ["", "lemma drop_perp_incident: \"proj2_incident p (drop_perp p l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident p (drop_perp p l)", "by (unfold drop_perp_def) (rule proj2_line_through_incident)"], ["", "lemma drop_perp_perp: \"M_perp l (drop_perp p l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M_perp l (drop_perp p l)", "by (unfold drop_perp_def M_perp_def) (rule proj2_line_through_incident)"], ["", "definition perp_foot :: \"proj2 \\<Rightarrow> proj2_line \\<Rightarrow> proj2\" where\n  \"perp_foot p l \\<equiv> proj2_intersection l (drop_perp p l)\""], ["", "lemma perp_foot_incident:\n  shows \"proj2_incident (perp_foot p l) l\"\n  and \"proj2_incident (perp_foot p l) (drop_perp p l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (perp_foot p l) l &&&\n    proj2_incident (perp_foot p l) (drop_perp p l)", "by (unfold perp_foot_def) (rule proj2_intersection_incident)+"], ["", "lemma M_perp_hyp2:\n  assumes \"M_perp l m\" and \"a \\<in> hyp2\" and \"proj2_incident a l\" and \"b \\<in> hyp2\"\n  and \"proj2_incident b m\" and \"proj2_incident c l\" and \"proj2_incident c m\"\n  shows \"c \\<in> hyp2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> hyp2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<in> hyp2", "from \\<open>M_perp l m\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>proj2_incident a l\\<close> and \\<open>b \\<in> hyp2\\<close>\n    and \\<open>proj2_incident b m\\<close> and M_perp_to_compass [of l m a b]"], ["proof (chain)\npicking this:\n  M_perp l m\n  a \\<in> hyp2\n  proj2_incident a l\n  b \\<in> hyp2\n  proj2_incident b m\n  \\<lbrakk>M_perp l m; a \\<in> hyp2; proj2_incident a l; b \\<in> hyp2;\n   proj2_incident b m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2_line equator J = l \\<and>\n                       apply_cltn2_line meridian J = m", "obtain J where \"is_K2_isometry J\" and \"apply_cltn2_line equator J = l\"\n    and \"apply_cltn2_line meridian J = m\""], ["proof (prove)\nusing this:\n  M_perp l m\n  a \\<in> hyp2\n  proj2_incident a l\n  b \\<in> hyp2\n  proj2_incident b m\n  \\<lbrakk>M_perp l m; a \\<in> hyp2; proj2_incident a l; b \\<in> hyp2;\n   proj2_incident b m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2_line equator J = l \\<and>\n                       apply_cltn2_line meridian J = m\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; apply_cltn2_line equator J = l;\n         apply_cltn2_line meridian J = m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  apply_cltn2_line equator J = l\n  apply_cltn2_line meridian J = m\n\ngoal (1 subgoal):\n 1. c \\<in> hyp2", "from \\<open>is_K2_isometry J\\<close> and K2_centre_in_K2"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  K2_centre \\<in> hyp2", "have \"apply_cltn2 K2_centre J \\<in> hyp2\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  K2_centre \\<in> hyp2\n\ngoal (1 subgoal):\n 1. apply_cltn2 K2_centre J \\<in> hyp2", "by (rule statement60_one_way)"], ["proof (state)\nthis:\n  apply_cltn2 K2_centre J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. c \\<in> hyp2", "from \\<open>proj2_incident c l\\<close> and \\<open>apply_cltn2_line equator J = l\\<close>\n    and \\<open>proj2_incident c m\\<close> and \\<open>apply_cltn2_line meridian J = m\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident c l\n  apply_cltn2_line equator J = l\n  proj2_incident c m\n  apply_cltn2_line meridian J = m", "have \"proj2_incident c (apply_cltn2_line equator J)\"\n    and \"proj2_incident c (apply_cltn2_line meridian J)\""], ["proof (prove)\nusing this:\n  proj2_incident c l\n  apply_cltn2_line equator J = l\n  proj2_incident c m\n  apply_cltn2_line meridian J = m\n\ngoal (1 subgoal):\n 1. proj2_incident c (apply_cltn2_line equator J) &&&\n    proj2_incident c (apply_cltn2_line meridian J)", "by simp_all"], ["proof (state)\nthis:\n  proj2_incident c (apply_cltn2_line equator J)\n  proj2_incident c (apply_cltn2_line meridian J)\n\ngoal (1 subgoal):\n 1. c \\<in> hyp2", "with equator_meridian_distinct and K2_centre_on_equator_meridian"], ["proof (chain)\npicking this:\n  equator \\<noteq> meridian\n  proj2_incident K2_centre equator\n  proj2_incident K2_centre meridian\n  proj2_incident c (apply_cltn2_line equator J)\n  proj2_incident c (apply_cltn2_line meridian J)", "have \"apply_cltn2 K2_centre J = c\""], ["proof (prove)\nusing this:\n  equator \\<noteq> meridian\n  proj2_incident K2_centre equator\n  proj2_incident K2_centre meridian\n  proj2_incident c (apply_cltn2_line equator J)\n  proj2_incident c (apply_cltn2_line meridian J)\n\ngoal (1 subgoal):\n 1. apply_cltn2 K2_centre J = c", "by (rule apply_cltn2_unique)"], ["proof (state)\nthis:\n  apply_cltn2 K2_centre J = c\n\ngoal (1 subgoal):\n 1. c \\<in> hyp2", "with \\<open>apply_cltn2 K2_centre J \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 K2_centre J \\<in> hyp2\n  apply_cltn2 K2_centre J = c", "show \"c \\<in> hyp2\""], ["proof (prove)\nusing this:\n  apply_cltn2 K2_centre J \\<in> hyp2\n  apply_cltn2 K2_centre J = c\n\ngoal (1 subgoal):\n 1. c \\<in> hyp2", "by simp"], ["proof (state)\nthis:\n  c \\<in> hyp2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_foot_hyp2:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a l\" and \"b \\<in> hyp2\"\n  shows \"perp_foot b l \\<in> hyp2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perp_foot b l \\<in> hyp2", "using drop_perp_perp [of l b] and \\<open>a \\<in> hyp2\\<close> and \\<open>proj2_incident a l\\<close>\n    and \\<open>b \\<in> hyp2\\<close> and drop_perp_incident [of b l]\n    and perp_foot_incident [of b l]"], ["proof (prove)\nusing this:\n  M_perp l (drop_perp b l)\n  a \\<in> hyp2\n  proj2_incident a l\n  b \\<in> hyp2\n  proj2_incident b (drop_perp b l)\n  proj2_incident (perp_foot b l) l\n  proj2_incident (perp_foot b l) (drop_perp b l)\n\ngoal (1 subgoal):\n 1. perp_foot b l \\<in> hyp2", "by (rule M_perp_hyp2)"], ["", "definition perp_up :: \"proj2 \\<Rightarrow> proj2_line \\<Rightarrow> proj2\" where\n  \"perp_up a l\n  \\<equiv> if proj2_incident a l then \\<some> p. p \\<in> S \\<and> proj2_incident p (drop_perp a l)\n  else endpoint_in_S (perp_foot a l) a\""], ["", "lemma perp_up_degenerate_in_S_incident:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a l\"\n  shows \"perp_up a l \\<in> S\" (is \"?p \\<in> S\")\n  and \"proj2_incident (perp_up a l) (drop_perp a l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S &&& proj2_incident (perp_up a l) (drop_perp a l)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. perp_up a l \\<in> S\n 2. proj2_incident (perp_up a l) (drop_perp a l)", "from \\<open>proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident a l", "have \"?p = (\\<some> p. p \\<in> S \\<and> proj2_incident p (drop_perp a l))\""], ["proof (prove)\nusing this:\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. perp_up a l =\n    (SOME p. p \\<in> S \\<and> proj2_incident p (drop_perp a l))", "by (unfold perp_up_def) simp"], ["proof (state)\nthis:\n  perp_up a l = (SOME p. p \\<in> S \\<and> proj2_incident p (drop_perp a l))\n\ngoal (2 subgoals):\n 1. perp_up a l \\<in> S\n 2. proj2_incident (perp_up a l) (drop_perp a l)", "from \\<open>a \\<in> hyp2\\<close> and drop_perp_incident [of a l]"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a (drop_perp a l)", "have \"\\<exists> p. p \\<in> S \\<and> proj2_incident p (drop_perp a l)\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a (drop_perp a l)\n\ngoal (1 subgoal):\n 1. \\<exists>p. p \\<in> S \\<and> proj2_incident p (drop_perp a l)", "by (rule line_through_K2_intersect_S)"], ["proof (state)\nthis:\n  \\<exists>p. p \\<in> S \\<and> proj2_incident p (drop_perp a l)\n\ngoal (2 subgoals):\n 1. perp_up a l \\<in> S\n 2. proj2_incident (perp_up a l) (drop_perp a l)", "hence \"?p \\<in> S \\<and> proj2_incident ?p (drop_perp a l)\""], ["proof (prove)\nusing this:\n  \\<exists>p. p \\<in> S \\<and> proj2_incident p (drop_perp a l)\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S \\<and> proj2_incident (perp_up a l) (drop_perp a l)", "unfolding \\<open>?p = (\\<some> p. p \\<in> S \\<and> proj2_incident p (drop_perp a l))\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>p. p \\<in> S \\<and> proj2_incident p (drop_perp a l)\n\ngoal (1 subgoal):\n 1. (SOME p. p \\<in> S \\<and> proj2_incident p (drop_perp a l))\n    \\<in> S \\<and>\n    proj2_incident\n     (SOME p. p \\<in> S \\<and> proj2_incident p (drop_perp a l))\n     (drop_perp a l)", "by (rule someI_ex)"], ["proof (state)\nthis:\n  perp_up a l \\<in> S \\<and> proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal (2 subgoals):\n 1. perp_up a l \\<in> S\n 2. proj2_incident (perp_up a l) (drop_perp a l)", "thus \"?p \\<in> S\" and \"proj2_incident ?p (drop_perp a l)\""], ["proof (prove)\nusing this:\n  perp_up a l \\<in> S \\<and> proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S &&& proj2_incident (perp_up a l) (drop_perp a l)", "by simp_all"], ["proof (state)\nthis:\n  perp_up a l \\<in> S\n  proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_up_non_degenerate_in_S_at_end:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  and \"\\<not> proj2_incident a l\"\n  shows \"perp_up a l \\<in> S\"\n  and \"B\\<^sub>\\<real> (cart2_pt (perp_foot a l)) (cart2_pt a) (cart2_pt (perp_up a l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. perp_up a l \\<in> S\n 2. B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "from \\<open>\\<not> proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  \\<not> proj2_incident a l", "have \"perp_up a l = endpoint_in_S (perp_foot a l) a\""], ["proof (prove)\nusing this:\n  \\<not> proj2_incident a l\n\ngoal (1 subgoal):\n 1. perp_up a l = endpoint_in_S (perp_foot a l) a", "by (unfold perp_up_def) simp"], ["proof (state)\nthis:\n  perp_up a l = endpoint_in_S (perp_foot a l) a\n\ngoal (2 subgoals):\n 1. perp_up a l \\<in> S\n 2. B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "from \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident b l\\<close> and \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  proj2_incident b l\n  a \\<in> hyp2", "have \"perp_foot a l \\<in> hyp2\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  proj2_incident b l\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. perp_foot a l \\<in> hyp2", "by (rule perp_foot_hyp2)"], ["proof (state)\nthis:\n  perp_foot a l \\<in> hyp2\n\ngoal (2 subgoals):\n 1. perp_up a l \\<in> S\n 2. B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "with \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  perp_foot a l \\<in> hyp2", "show \"perp_up a l \\<in> S\"\n    and \"B\\<^sub>\\<real> (cart2_pt (perp_foot a l)) (cart2_pt a) (cart2_pt (perp_up a l))\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  perp_foot a l \\<in> hyp2\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "unfolding \\<open>perp_up a l = endpoint_in_S (perp_foot a l) a\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  perp_foot a l \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S (perp_foot a l) a \\<in> S &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a\n                       l) cart2_pt\n                           a cart2_pt (endpoint_in_S (perp_foot a l) a)", "by (simp_all add: endpoint_in_S)"], ["proof (state)\nthis:\n  perp_up a l \\<in> S\n  B\\<^sub>\\<real> cart2_pt (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_up_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"perp_up a l \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> perp_up a l \\<in> S\n 2. \\<not> ?P \\<Longrightarrow> perp_up a l \\<in> S", "assume \"proj2_incident a l\""], ["proof (state)\nthis:\n  proj2_incident a l\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> perp_up a l \\<in> S\n 2. \\<not> ?P \\<Longrightarrow> perp_up a l \\<in> S", "with \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l", "show \"perp_up a l \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S", "by (rule perp_up_degenerate_in_S_incident)"], ["proof (state)\nthis:\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow> perp_up a l \\<in> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow> perp_up a l \\<in> S", "assume \"\\<not> proj2_incident a l\""], ["proof (state)\nthis:\n  \\<not> proj2_incident a l\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow> perp_up a l \\<in> S", "with assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n  \\<not> proj2_incident a l", "show \"perp_up a l \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n  \\<not> proj2_incident a l\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S", "by (rule perp_up_non_degenerate_in_S_at_end)"], ["proof (state)\nthis:\n  perp_up a l \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_up_incident:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"proj2_incident (perp_up a l) (drop_perp a l)\"\n  (is \"proj2_incident ?p ?m\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (perp_up a l) (drop_perp a l)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> proj2_incident (perp_up a l) (drop_perp a l)\n 2. \\<not> ?P \\<Longrightarrow> proj2_incident (perp_up a l) (drop_perp a l)", "assume \"proj2_incident a l\""], ["proof (state)\nthis:\n  proj2_incident a l\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> proj2_incident (perp_up a l) (drop_perp a l)\n 2. \\<not> ?P \\<Longrightarrow> proj2_incident (perp_up a l) (drop_perp a l)", "with \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l", "show \"proj2_incident ?p ?m\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_up a l) (drop_perp a l)", "by (rule perp_up_degenerate_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    proj2_incident (perp_up a l) (drop_perp a l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    proj2_incident (perp_up a l) (drop_perp a l)", "assume \"\\<not> proj2_incident a l\""], ["proof (state)\nthis:\n  \\<not> proj2_incident a l\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    proj2_incident (perp_up a l) (drop_perp a l)", "hence \"?p = endpoint_in_S (perp_foot a l) a\" (is \"?p = endpoint_in_S ?c a\")"], ["proof (prove)\nusing this:\n  \\<not> proj2_incident a l\n\ngoal (1 subgoal):\n 1. perp_up a l = endpoint_in_S (perp_foot a l) a", "by (unfold perp_up_def) simp"], ["proof (state)\nthis:\n  perp_up a l = endpoint_in_S (perp_foot a l) a\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    proj2_incident (perp_up a l) (drop_perp a l)", "from perp_foot_incident [of a l] and \\<open>\\<not> proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (perp_foot a l) l\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  \\<not> proj2_incident a l", "have \"?c \\<noteq> a\""], ["proof (prove)\nusing this:\n  proj2_incident (perp_foot a l) l\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  \\<not> proj2_incident a l\n\ngoal (1 subgoal):\n 1. perp_foot a l \\<noteq> a", "by auto"], ["proof (state)\nthis:\n  perp_foot a l \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    proj2_incident (perp_up a l) (drop_perp a l)", "from \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident b l\\<close> and \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  proj2_incident b l\n  a \\<in> hyp2", "have \"?c \\<in> hyp2\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  proj2_incident b l\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. perp_foot a l \\<in> hyp2", "by (rule perp_foot_hyp2)"], ["proof (state)\nthis:\n  perp_foot a l \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    proj2_incident (perp_up a l) (drop_perp a l)", "with \\<open>?c \\<noteq> a\\<close> and \\<open>a \\<in> hyp2\\<close> and drop_perp_incident [of a l]\n    and perp_foot_incident [of a l]"], ["proof (chain)\npicking this:\n  perp_foot a l \\<noteq> a\n  a \\<in> hyp2\n  proj2_incident a (drop_perp a l)\n  proj2_incident (perp_foot a l) l\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  perp_foot a l \\<in> hyp2", "show \"proj2_incident ?p ?m\""], ["proof (prove)\nusing this:\n  perp_foot a l \\<noteq> a\n  a \\<in> hyp2\n  proj2_incident a (drop_perp a l)\n  proj2_incident (perp_foot a l) l\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  perp_foot a l \\<in> hyp2\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_up a l) (drop_perp a l)", "by (unfold \\<open>?p = endpoint_in_S ?c a\\<close>) (simp add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma drop_perp_same_line_pole_in_S:\n  assumes \"drop_perp p l = l\"\n  shows \"pole l \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pole l \\<in> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pole l \\<in> S", "from \\<open>drop_perp p l = l\\<close>"], ["proof (chain)\npicking this:\n  drop_perp p l = l", "have \"l = proj2_line_through p (pole l)\""], ["proof (prove)\nusing this:\n  drop_perp p l = l\n\ngoal (1 subgoal):\n 1. l = proj2_line_through p (pole l)", "by (unfold drop_perp_def) simp"], ["proof (state)\nthis:\n  l = proj2_line_through p (pole l)\n\ngoal (1 subgoal):\n 1. pole l \\<in> S", "with proj2_line_through_incident [of \"pole l\" p]"], ["proof (chain)\npicking this:\n  proj2_incident (pole l) (proj2_line_through (pole l) p)\n  proj2_incident (pole l) (proj2_line_through p (pole l))\n  l = proj2_line_through p (pole l)", "have \"proj2_incident (pole l) l\""], ["proof (prove)\nusing this:\n  proj2_incident (pole l) (proj2_line_through (pole l) p)\n  proj2_incident (pole l) (proj2_line_through p (pole l))\n  l = proj2_line_through p (pole l)\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) l", "by simp"], ["proof (state)\nthis:\n  proj2_incident (pole l) l\n\ngoal (1 subgoal):\n 1. pole l \\<in> S", "hence \"proj2_incident (pole l) (polar (pole l))\""], ["proof (prove)\nusing this:\n  proj2_incident (pole l) l\n\ngoal (1 subgoal):\n 1. proj2_incident (pole l) (polar (pole l))", "by (subst polar_pole)"], ["proof (state)\nthis:\n  proj2_incident (pole l) (polar (pole l))\n\ngoal (1 subgoal):\n 1. pole l \\<in> S", "thus \"pole l \\<in> S\""], ["proof (prove)\nusing this:\n  proj2_incident (pole l) (polar (pole l))\n\ngoal (1 subgoal):\n 1. pole l \\<in> S", "by (unfold incident_own_polar_in_S)"], ["proof (state)\nthis:\n  pole l \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_drop_perp_not_same_line:\n  assumes \"a \\<in> hyp2\"\n  shows \"drop_perp a l \\<noteq> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop_perp a l \\<noteq> l", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. drop_perp a l = l \\<Longrightarrow> False", "assume \"drop_perp a l = l\""], ["proof (state)\nthis:\n  drop_perp a l = l\n\ngoal (1 subgoal):\n 1. drop_perp a l = l \\<Longrightarrow> False", "hence \"pole l \\<in> S\""], ["proof (prove)\nusing this:\n  drop_perp a l = l\n\ngoal (1 subgoal):\n 1. pole l \\<in> S", "by (rule drop_perp_same_line_pole_in_S)"], ["proof (state)\nthis:\n  pole l \\<in> S\n\ngoal (1 subgoal):\n 1. drop_perp a l = l \\<Longrightarrow> False", "with \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  pole l \\<in> S", "have \"\\<not> proj2_incident a (polar (pole l))\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  pole l \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a (polar (pole l))", "by (simp add: tangent_not_through_K2)"], ["proof (state)\nthis:\n  \\<not> proj2_incident a (polar (pole l))\n\ngoal (1 subgoal):\n 1. drop_perp a l = l \\<Longrightarrow> False", "with \\<open>drop_perp a l = l\\<close>"], ["proof (chain)\npicking this:\n  drop_perp a l = l\n  \\<not> proj2_incident a (polar (pole l))", "have \"\\<not> proj2_incident a (drop_perp a l)\""], ["proof (prove)\nusing this:\n  drop_perp a l = l\n  \\<not> proj2_incident a (polar (pole l))\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a (drop_perp a l)", "by (simp add: polar_pole)"], ["proof (state)\nthis:\n  \\<not> proj2_incident a (drop_perp a l)\n\ngoal (1 subgoal):\n 1. drop_perp a l = l \\<Longrightarrow> False", "with drop_perp_incident [of a l]"], ["proof (chain)\npicking this:\n  proj2_incident a (drop_perp a l)\n  \\<not> proj2_incident a (drop_perp a l)", "show False"], ["proof (prove)\nusing this:\n  proj2_incident a (drop_perp a l)\n  \\<not> proj2_incident a (drop_perp a l)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hyp2_incident_perp_foot_same_point:\n  assumes \"a \\<in> hyp2\" and \"proj2_incident a l\"\n  shows \"perp_foot a l = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perp_foot a l = a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. perp_foot a l = a", "from \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2", "have \"drop_perp a l \\<noteq> l\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. drop_perp a l \\<noteq> l", "by (rule hyp2_drop_perp_not_same_line)"], ["proof (state)\nthis:\n  drop_perp a l \\<noteq> l\n\ngoal (1 subgoal):\n 1. perp_foot a l = a", "with perp_foot_incident [of a l] and \\<open>proj2_incident a l\\<close>\n    and drop_perp_incident [of a l] and proj2_incident_unique"], ["proof (chain)\npicking this:\n  proj2_incident (perp_foot a l) l\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  proj2_incident a l\n  proj2_incident a (drop_perp a l)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  drop_perp a l \\<noteq> l", "show \"perp_foot a l = a\""], ["proof (prove)\nusing this:\n  proj2_incident (perp_foot a l) l\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  proj2_incident a l\n  proj2_incident a (drop_perp a l)\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  drop_perp a l \\<noteq> l\n\ngoal (1 subgoal):\n 1. perp_foot a l = a", "by fast"], ["proof (state)\nthis:\n  perp_foot a l = a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_up_at_end:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"B\\<^sub>\\<real> (cart2_pt (perp_foot a l)) (cart2_pt a) (cart2_pt (perp_up a l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "assume \"proj2_incident a l\""], ["proof (state)\nthis:\n  proj2_incident a l\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "with \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l", "have \"perp_foot a l = a\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. perp_foot a l = a", "by (rule hyp2_incident_perp_foot_same_point)"], ["proof (state)\nthis:\n  perp_foot a l = a\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)\n 2. \\<not> ?P \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "thus \"B\\<^sub>\\<real> (cart2_pt (perp_foot a l)) (cart2_pt a) (cart2_pt (perp_up a l))\""], ["proof (prove)\nusing this:\n  perp_foot a l = a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "by (simp add: real_euclid.th3_1 real_euclid.th3_2)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "assume \"\\<not> proj2_incident a l\""], ["proof (state)\nthis:\n  \\<not> proj2_incident a l\n\ngoal (1 subgoal):\n 1. \\<not> proj2_incident a l \\<Longrightarrow>\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "with assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n  \\<not> proj2_incident a l", "show \"B\\<^sub>\\<real> (cart2_pt (perp_foot a l)) (cart2_pt a) (cart2_pt (perp_up a l))\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n  \\<not> proj2_incident a l\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)", "by (rule perp_up_non_degenerate_in_S_at_end)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt (perp_foot a l) cart2_pt a cart2_pt (perp_up a l)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition perp_down :: \"proj2 \\<Rightarrow> proj2_line \\<Rightarrow> proj2\" where\n  \"perp_down a l \\<equiv> endpoint_in_S (perp_up a l) a\""], ["", "lemma perp_down_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"perp_down a l \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perp_down a l \\<in> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. perp_down a l \\<in> S", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l", "have \"perp_up a l \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S", "by (rule perp_up_in_S)"], ["proof (state)\nthis:\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. perp_down a l \\<in> S", "with \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  perp_up a l \\<in> S", "show \"perp_down a l \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. perp_down a l \\<in> S", "by (unfold perp_down_def) (simp add: endpoint_in_S)"], ["proof (state)\nthis:\n  perp_down a l \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_down_incident:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"proj2_incident (perp_down a l) (drop_perp a l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (perp_down a l) (drop_perp a l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_incident (perp_down a l) (drop_perp a l)", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l", "have \"perp_up a l \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S", "by (rule perp_up_in_S)"], ["proof (state)\nthis:\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_down a l) (drop_perp a l)", "with \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  perp_up a l \\<in> S", "have \"perp_up a l \\<noteq> a\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. perp_up a l \\<noteq> a", "by (rule hyp2_S_not_equal [symmetric])"], ["proof (state)\nthis:\n  perp_up a l \\<noteq> a\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_down a l) (drop_perp a l)", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l", "have \"proj2_incident (perp_up a l) (drop_perp a l)\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_up a l) (drop_perp a l)", "by (rule perp_up_incident)"], ["proof (state)\nthis:\n  proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_down a l) (drop_perp a l)", "with \\<open>perp_up a l \\<noteq> a\\<close> and \\<open>perp_up a l \\<in> S\\<close> and \\<open>a \\<in> hyp2\\<close>\n    and drop_perp_incident [of a l]"], ["proof (chain)\npicking this:\n  perp_up a l \\<noteq> a\n  perp_up a l \\<in> S\n  a \\<in> hyp2\n  proj2_incident a (drop_perp a l)\n  proj2_incident (perp_up a l) (drop_perp a l)", "show \"proj2_incident (perp_down a l) (drop_perp a l)\""], ["proof (prove)\nusing this:\n  perp_up a l \\<noteq> a\n  perp_up a l \\<in> S\n  a \\<in> hyp2\n  proj2_incident a (drop_perp a l)\n  proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_down a l) (drop_perp a l)", "by (unfold perp_down_def) (simp add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (perp_down a l) (drop_perp a l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_up_down_distinct:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"perp_up a l \\<noteq> perp_down a l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perp_up a l \\<noteq> perp_down a l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. perp_up a l \\<noteq> perp_down a l", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l", "have \"perp_up a l \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S", "by (rule perp_up_in_S)"], ["proof (state)\nthis:\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. perp_up a l \\<noteq> perp_down a l", "with \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  perp_up a l \\<in> S", "show \"perp_up a l \\<noteq> perp_down a l\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. perp_up a l \\<noteq> perp_down a l", "unfolding perp_down_def"], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. perp_up a l \\<noteq> endpoint_in_S (perp_up a l) a", "by (simp add: endpoint_in_S_S_strict_hyp2_distinct [symmetric])"], ["proof (state)\nthis:\n  perp_up a l \\<noteq> perp_down a l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_up_down_foot_are_endpoints_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident b l\"\n  shows \"are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a", "from \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident b l\\<close> and \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  proj2_incident b l\n  a \\<in> hyp2", "have \"perp_foot a l \\<in> hyp2\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  proj2_incident b l\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. perp_foot a l \\<in> hyp2", "by (rule perp_foot_hyp2)"], ["proof (state)\nthis:\n  perp_foot a l \\<in> hyp2\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l", "have \"perp_up a l \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. perp_up a l \\<in> S", "by (rule perp_up_in_S)"], ["proof (state)\nthis:\n  perp_up a l \\<in> S\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l", "have \"proj2_incident (perp_up a l) (drop_perp a l)\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_up a l) (drop_perp a l)", "by (rule perp_up_incident)"], ["proof (state)\nthis:\n  proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a", "with \\<open>perp_foot a l \\<in> hyp2\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>perp_up a l \\<in> S\\<close>\n    and perp_foot_incident(2) [of a l] and drop_perp_incident [of a l]"], ["proof (chain)\npicking this:\n  perp_foot a l \\<in> hyp2\n  a \\<in> hyp2\n  perp_up a l \\<in> S\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  proj2_incident a (drop_perp a l)\n  proj2_incident (perp_up a l) (drop_perp a l)", "show \"are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a\""], ["proof (prove)\nusing this:\n  perp_foot a l \\<in> hyp2\n  a \\<in> hyp2\n  perp_up a l \\<in> S\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  proj2_incident a (drop_perp a l)\n  proj2_incident (perp_up a l) (drop_perp a l)\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a", "by (unfold perp_down_def) (rule end_and_opposite_are_endpoints_in_S)"], ["proof (state)\nthis:\n  are_endpoints_in_S (perp_up a l) (perp_down a l) (perp_foot a l) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_foot_opposite_endpoint_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"a \\<noteq> b\"\n  shows\n  \"endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b))\n  = endpoint_in_S b a\"\n  (is \"endpoint_in_S ?p ?d = endpoint_in_S b a\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "let ?q = \"endpoint_in_S ?p ?d\""], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"?p \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S", "by (simp add: endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "let ?l = \"proj2_line_through a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "have \"proj2_incident a ?l\" and \"proj2_incident b ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident a (proj2_line_through a b) &&&\n    proj2_incident b (proj2_line_through a b)", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "with \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)", "have \"proj2_incident ?p ?l\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) (proj2_line_through a b)", "by (simp_all add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "from \\<open>a \\<in> hyp2\\<close> and \\<open>proj2_incident a ?l\\<close> and \\<open>c \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  c \\<in> hyp2", "have \"?d \\<in> hyp2\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  c \\<in> hyp2\n\ngoal (1 subgoal):\n 1. perp_foot c (proj2_line_through a b) \\<in> hyp2", "by (rule perp_foot_hyp2)"], ["proof (state)\nthis:\n  perp_foot c (proj2_line_through a b) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "with \\<open>?p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  endpoint_in_S a b \\<in> S\n  perp_foot c (proj2_line_through a b) \\<in> hyp2", "have \"?q \\<noteq> ?p\""], ["proof (prove)\nusing this:\n  endpoint_in_S a b \\<in> S\n  perp_foot c (proj2_line_through a b) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) \\<noteq>\n    endpoint_in_S a b", "by (rule endpoint_in_S_S_strict_hyp2_distinct)"], ["proof (state)\nthis:\n  endpoint_in_S (endpoint_in_S a b)\n   (perp_foot c (proj2_line_through a b)) \\<noteq>\n  endpoint_in_S a b\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "from \\<open>?p \\<in> S\\<close> and \\<open>?d \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  endpoint_in_S a b \\<in> S\n  perp_foot c (proj2_line_through a b) \\<in> hyp2", "have \"?q \\<in> S\""], ["proof (prove)\nusing this:\n  endpoint_in_S a b \\<in> S\n  perp_foot c (proj2_line_through a b) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b))\n    \\<in> S", "by (simp add: endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b))\n  \\<in> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "from \\<open>?d \\<in> hyp2\\<close> and \\<open>?p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  perp_foot c (proj2_line_through a b) \\<in> hyp2\n  endpoint_in_S a b \\<in> S", "have \"?p \\<noteq> ?d\""], ["proof (prove)\nusing this:\n  perp_foot c (proj2_line_through a b) \\<in> hyp2\n  endpoint_in_S a b \\<in> S\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<noteq> perp_foot c (proj2_line_through a b)", "by (rule hyp2_S_not_equal [symmetric])"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<noteq> perp_foot c (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "with \\<open>?p \\<in> S\\<close> and \\<open>?d \\<in> hyp2\\<close> and \\<open>proj2_incident ?p ?l\\<close>\n    and perp_foot_incident(1) [of c ?l]"], ["proof (chain)\npicking this:\n  endpoint_in_S a b \\<in> S\n  perp_foot c (proj2_line_through a b) \\<in> hyp2\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (perp_foot c (proj2_line_through a b))\n   (proj2_line_through a b)\n  endpoint_in_S a b \\<noteq> perp_foot c (proj2_line_through a b)", "have \"proj2_incident ?q ?l\""], ["proof (prove)\nusing this:\n  endpoint_in_S a b \\<in> S\n  perp_foot c (proj2_line_through a b) \\<in> hyp2\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (perp_foot c (proj2_line_through a b))\n   (proj2_line_through a b)\n  endpoint_in_S a b \\<noteq> perp_foot c (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_incident\n     (endpoint_in_S (endpoint_in_S a b)\n       (perp_foot c (proj2_line_through a b)))\n     (proj2_line_through a b)", "by (simp add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident\n   (endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)))\n   (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "with \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>?q \\<in> S\\<close>\n    and \\<open>proj2_incident a ?l\\<close> and \\<open>proj2_incident b ?l\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b))\n  \\<in> S\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n  proj2_incident\n   (endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)))\n   (proj2_line_through a b)", "have \"?q = ?p \\<or> ?q = endpoint_in_S b a\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b))\n  \\<in> S\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n  proj2_incident\n   (endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)))\n   (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S a b \\<or>\n    endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "by (simp add: endpoints_in_S_incident_unique)"], ["proof (state)\nthis:\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b)) =\n  endpoint_in_S a b \\<or>\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b)) =\n  endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "with \\<open>?q \\<noteq> ?p\\<close>"], ["proof (chain)\npicking this:\n  endpoint_in_S (endpoint_in_S a b)\n   (perp_foot c (proj2_line_through a b)) \\<noteq>\n  endpoint_in_S a b\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b)) =\n  endpoint_in_S a b \\<or>\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b)) =\n  endpoint_in_S b a", "show \"?q = endpoint_in_S b a\""], ["proof (prove)\nusing this:\n  endpoint_in_S (endpoint_in_S a b)\n   (perp_foot c (proj2_line_through a b)) \\<noteq>\n  endpoint_in_S a b\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b)) =\n  endpoint_in_S a b \\<or>\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b)) =\n  endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. endpoint_in_S (endpoint_in_S a b)\n     (perp_foot c (proj2_line_through a b)) =\n    endpoint_in_S b a", "by simp"], ["proof (state)\nthis:\n  endpoint_in_S (endpoint_in_S a b) (perp_foot c (proj2_line_through a b)) =\n  endpoint_in_S b a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoints_in_S_perp_foot_are_endpoints_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"a \\<noteq> b\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\"\n  shows \"are_endpoints_in_S\n  (endpoint_in_S a b) (endpoint_in_S b a) a (perp_foot c l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "define p q d\n    where \"p = endpoint_in_S a b\"\n      and \"q = endpoint_in_S b a\"\n      and \"d = perp_foot c l\""], ["proof (state)\nthis:\n  p = endpoint_in_S a b\n  q = endpoint_in_S b a\n  d = perp_foot c l\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"p \\<noteq> q\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "by (unfold p_def q_def) (simp add: endpoint_in_S_swap)"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"p \\<in> S\" and \"q \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. p \\<in> S &&& q \\<in> S", "by (unfold p_def q_def) (simp_all add: endpoint_in_S)"], ["proof (state)\nthis:\n  p \\<in> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "from \\<open>a \\<in> hyp2\\<close> and \\<open>proj2_incident a l\\<close> and \\<open>c \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l\n  c \\<in> hyp2", "have \"d \\<in> hyp2\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n  c \\<in> hyp2\n\ngoal (1 subgoal):\n 1. d \\<in> hyp2", "by (unfold d_def) (rule perp_foot_hyp2)"], ["proof (state)\nthis:\n  d \\<in> hyp2\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident a l\\<close>\n    and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident a l\n  proj2_incident b l", "have \"proj2_incident p l\" and \"proj2_incident q l\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident a l\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. proj2_incident p l &&& proj2_incident q l", "by (unfold p_def q_def) (simp_all add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident p l\n  proj2_incident q l\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "with \\<open>proj2_incident a l\\<close> and perp_foot_incident(1) [of c l]"], ["proof (chain)\npicking this:\n  proj2_incident a l\n  proj2_incident (perp_foot c l) l\n  proj2_incident p l\n  proj2_incident q l", "have \"proj2_set_Col {p,q,a,d}\""], ["proof (prove)\nusing this:\n  proj2_incident a l\n  proj2_incident (perp_foot c l) l\n  proj2_incident p l\n  proj2_incident q l\n\ngoal (1 subgoal):\n 1. proj2_set_Col {p, q, a, d}", "by (unfold d_def proj2_set_Col_def) (simp add: exI [of _ l])"], ["proof (state)\nthis:\n  proj2_set_Col {p, q, a, d}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "with \\<open>p \\<noteq> q\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>d \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  d \\<in> hyp2\n  proj2_set_Col {p, q, a, d}", "show \"are_endpoints_in_S p q a d\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  d \\<in> hyp2\n  proj2_set_Col {p, q, a, d}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p q a d", "by (unfold are_endpoints_in_S_def) simp"], ["proof (state)\nthis:\n  are_endpoints_in_S p q a d\n\ngoal:\nNo subgoals!", "qed"], ["", "definition right_angle :: \"proj2 \\<Rightarrow> proj2 \\<Rightarrow> proj2 \\<Rightarrow> bool\" where\n  \"right_angle p a q\n  \\<equiv> p \\<in> S \\<and> q \\<in> S \\<and> a \\<in> hyp2\n  \\<and> M_perp (proj2_line_through p a) (proj2_line_through a q)\""], ["", "lemma perp_foot_up_right_angle:\n  assumes \"p \\<in> S\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident p l\"\n  and \"proj2_incident b l\"\n  shows \"right_angle p (perp_foot a l) (perp_up a l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "define c where \"c = perp_foot a l\""], ["proof (state)\nthis:\n  c = perp_foot a l\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "define q where \"q = perp_up a l\""], ["proof (state)\nthis:\n  q = perp_up a l\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l", "have \"q \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. q \\<in> S", "by (unfold q_def) (rule perp_up_in_S)"], ["proof (state)\nthis:\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "from \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident b l\\<close> and \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  proj2_incident b l\n  a \\<in> hyp2", "have \"c \\<in> hyp2\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  proj2_incident b l\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. c \\<in> hyp2", "by (unfold c_def) (rule perp_foot_hyp2)"], ["proof (state)\nthis:\n  c \\<in> hyp2\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "with \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  c \\<in> hyp2", "have \"c \\<noteq> p\" and \"c \\<noteq> q\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  c \\<in> hyp2\n\ngoal (1 subgoal):\n 1. c \\<noteq> p &&& c \\<noteq> q", "by (simp_all add: hyp2_S_not_equal)"], ["proof (state)\nthis:\n  c \\<noteq> p\n  c \\<noteq> q\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "from \\<open>c \\<noteq> p\\<close> [symmetric] and \\<open>proj2_incident p l\\<close>\n    and perp_foot_incident(1) [of a l]"], ["proof (chain)\npicking this:\n  p \\<noteq> c\n  proj2_incident p l\n  proj2_incident (perp_foot a l) l", "have \"l = proj2_line_through p c\""], ["proof (prove)\nusing this:\n  p \\<noteq> c\n  proj2_incident p l\n  proj2_incident (perp_foot a l) l\n\ngoal (1 subgoal):\n 1. l = proj2_line_through p c", "by (unfold c_def) (rule proj2_line_through_unique)"], ["proof (state)\nthis:\n  l = proj2_line_through p c\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "define m where \"m = drop_perp a l\""], ["proof (state)\nthis:\n  m = drop_perp a l\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l", "have \"proj2_incident q m\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. proj2_incident q m", "by (unfold q_def m_def) (rule perp_up_incident)"], ["proof (state)\nthis:\n  proj2_incident q m\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "with \\<open>c \\<noteq> q\\<close> and perp_foot_incident(2) [of a l]"], ["proof (chain)\npicking this:\n  c \\<noteq> q\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  proj2_incident q m", "have \"m = proj2_line_through c q\""], ["proof (prove)\nusing this:\n  c \\<noteq> q\n  proj2_incident (perp_foot a l) (drop_perp a l)\n  proj2_incident q m\n\ngoal (1 subgoal):\n 1. m = proj2_line_through c q", "by (unfold c_def m_def) (rule proj2_line_through_unique)"], ["proof (state)\nthis:\n  m = proj2_line_through c q\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "with \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>c \\<in> hyp2\\<close> and drop_perp_perp [of l a]\n    and \\<open>l = proj2_line_through p c\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  c \\<in> hyp2\n  M_perp l (drop_perp a l)\n  l = proj2_line_through p c\n  m = proj2_line_through c q", "show \"right_angle p (perp_foot a l) (perp_up a l)\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  c \\<in> hyp2\n  M_perp l (drop_perp a l)\n  l = proj2_line_through p c\n  m = proj2_line_through c q\n\ngoal (1 subgoal):\n 1. right_angle p (perp_foot a l) (perp_up a l)", "by (unfold right_angle_def q_def c_def m_def) simp"], ["proof (state)\nthis:\n  right_angle p (perp_foot a l) (perp_up a l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma M_perp_unique:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident a l\"\n  and \"proj2_incident b m\" and \"proj2_incident b n\" and \"M_perp l m\"\n  and \"M_perp l n\"\n  shows \"m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m = n", "from \\<open>a \\<in> hyp2\\<close> and \\<open>proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l", "have \"pole l \\<notin> hyp2\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. pole l \\<notin> hyp2", "by (rule line_through_hyp2_pole_not_in_hyp2)"], ["proof (state)\nthis:\n  pole l \\<notin> hyp2\n\ngoal (1 subgoal):\n 1. m = n", "with \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  pole l \\<notin> hyp2", "have \"b \\<noteq> pole l\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  pole l \\<notin> hyp2\n\ngoal (1 subgoal):\n 1. b \\<noteq> pole l", "by auto"], ["proof (state)\nthis:\n  b \\<noteq> pole l\n\ngoal (1 subgoal):\n 1. m = n", "with \\<open>proj2_incident b m\\<close> and \\<open>M_perp l m\\<close> and \\<open>proj2_incident b n\\<close>\n    and \\<open>M_perp l n\\<close> and proj2_incident_unique"], ["proof (chain)\npicking this:\n  proj2_incident b m\n  M_perp l m\n  proj2_incident b n\n  M_perp l n\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  b \\<noteq> pole l", "show \"m = n\""], ["proof (prove)\nusing this:\n  proj2_incident b m\n  M_perp l m\n  proj2_incident b n\n  M_perp l n\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  b \\<noteq> pole l\n\ngoal (1 subgoal):\n 1. m = n", "by (unfold M_perp_def) auto"], ["proof (state)\nthis:\n  m = n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_foot_eq_implies_drop_perp_eq:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_incident a l\"\n  and \"perp_foot b l = perp_foot c l\"\n  shows \"drop_perp b l = drop_perp c l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop_perp b l = drop_perp c l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. drop_perp b l = drop_perp c l", "from \\<open>a \\<in> hyp2\\<close> and \\<open>proj2_incident a l\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  proj2_incident a l\n  b \\<in> hyp2", "have \"perp_foot b l \\<in> hyp2\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  proj2_incident a l\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. perp_foot b l \\<in> hyp2", "by (rule perp_foot_hyp2)"], ["proof (state)\nthis:\n  perp_foot b l \\<in> hyp2\n\ngoal (1 subgoal):\n 1. drop_perp b l = drop_perp c l", "from \\<open>perp_foot b l = perp_foot c l\\<close>"], ["proof (chain)\npicking this:\n  perp_foot b l = perp_foot c l", "have \"proj2_incident (perp_foot b l) (drop_perp c l)\""], ["proof (prove)\nusing this:\n  perp_foot b l = perp_foot c l\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_foot b l) (drop_perp c l)", "by (simp add: perp_foot_incident)"], ["proof (state)\nthis:\n  proj2_incident (perp_foot b l) (drop_perp c l)\n\ngoal (1 subgoal):\n 1. drop_perp b l = drop_perp c l", "with \\<open>a \\<in> hyp2\\<close> and \\<open>perp_foot b l \\<in> hyp2\\<close> and \\<open>proj2_incident a l\\<close>\n    and perp_foot_incident(2) [of b l] and drop_perp_perp [of l]"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  perp_foot b l \\<in> hyp2\n  proj2_incident a l\n  proj2_incident (perp_foot b l) (drop_perp b l)\n  M_perp l (drop_perp ?p l)\n  proj2_incident (perp_foot b l) (drop_perp c l)", "show \"drop_perp b l = drop_perp c l\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  perp_foot b l \\<in> hyp2\n  proj2_incident a l\n  proj2_incident (perp_foot b l) (drop_perp b l)\n  M_perp l (drop_perp ?p l)\n  proj2_incident (perp_foot b l) (drop_perp c l)\n\ngoal (1 subgoal):\n 1. drop_perp b l = drop_perp c l", "by (simp add: M_perp_unique)"], ["proof (state)\nthis:\n  drop_perp b l = drop_perp c l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma right_angle_to_compass:\n  assumes \"right_angle p a q\"\n  shows \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 p J = east\n  \\<and> apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "from \\<open>right_angle p a q\\<close>"], ["proof (chain)\npicking this:\n  right_angle p a q", "have \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2\"\n    and \"M_perp (proj2_line_through p a) (proj2_line_through a q)\"\n    (is \"M_perp ?l ?m\")"], ["proof (prove)\nusing this:\n  right_angle p a q\n\ngoal (1 subgoal):\n 1. (p \\<in> S &&& q \\<in> S) &&&\n    a \\<in> hyp2 &&&\n    M_perp (proj2_line_through p a) (proj2_line_through a q)", "by (unfold right_angle_def) simp_all"], ["proof (state)\nthis:\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  M_perp (proj2_line_through p a) (proj2_line_through a q)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "have \"proj2_incident p ?l\" and \"proj2_incident a ?l\"\n    and \"proj2_incident q ?m\" and \"proj2_incident a ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_incident p (proj2_line_through p a) &&&\n     proj2_incident a (proj2_line_through p a)) &&&\n    proj2_incident q (proj2_line_through a q) &&&\n    proj2_incident a (proj2_line_through a q)", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident p (proj2_line_through p a)\n  proj2_incident a (proj2_line_through p a)\n  proj2_incident q (proj2_line_through a q)\n  proj2_incident a (proj2_line_through a q)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "from \\<open>M_perp ?l ?m\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>proj2_incident a ?l\\<close>\n    and \\<open>proj2_incident a ?m\\<close> and M_perp_to_compass [of ?l ?m a a]"], ["proof (chain)\npicking this:\n  M_perp (proj2_line_through p a) (proj2_line_through a q)\n  a \\<in> hyp2\n  proj2_incident a (proj2_line_through p a)\n  proj2_incident a (proj2_line_through a q)\n  \\<lbrakk>M_perp (proj2_line_through p a) (proj2_line_through a q);\n   a \\<in> hyp2; proj2_incident a (proj2_line_through p a); a \\<in> hyp2;\n   proj2_incident a (proj2_line_through a q)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2_line equator J =\n                       proj2_line_through p a \\<and>\n                       apply_cltn2_line meridian J = proj2_line_through a q", "obtain J''i where \"is_K2_isometry J''i\"\n    and \"apply_cltn2_line equator J''i = ?l\"\n    and \"apply_cltn2_line meridian J''i = ?m\""], ["proof (prove)\nusing this:\n  M_perp (proj2_line_through p a) (proj2_line_through a q)\n  a \\<in> hyp2\n  proj2_incident a (proj2_line_through p a)\n  proj2_incident a (proj2_line_through a q)\n  \\<lbrakk>M_perp (proj2_line_through p a) (proj2_line_through a q);\n   a \\<in> hyp2; proj2_incident a (proj2_line_through p a); a \\<in> hyp2;\n   proj2_incident a (proj2_line_through a q)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2_line equator J =\n                       proj2_line_through p a \\<and>\n                       apply_cltn2_line meridian J = proj2_line_through a q\n\ngoal (1 subgoal):\n 1. (\\<And>J''i.\n        \\<lbrakk>is_K2_isometry J''i;\n         apply_cltn2_line equator J''i = proj2_line_through p a;\n         apply_cltn2_line meridian J''i = proj2_line_through a q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J''i\n  apply_cltn2_line equator J''i = proj2_line_through p a\n  apply_cltn2_line meridian J''i = proj2_line_through a q\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "let ?J'' = \"cltn2_inverse J''i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "from \\<open>apply_cltn2_line equator J''i = ?l\\<close>\n    and \\<open>apply_cltn2_line meridian J''i = ?m\\<close>\n    and \\<open>proj2_incident p ?l\\<close> and \\<open>proj2_incident a ?l\\<close>\n    and \\<open>proj2_incident q ?m\\<close> and \\<open>proj2_incident a ?m\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2_line equator J''i = proj2_line_through p a\n  apply_cltn2_line meridian J''i = proj2_line_through a q\n  proj2_incident p (proj2_line_through p a)\n  proj2_incident a (proj2_line_through p a)\n  proj2_incident q (proj2_line_through a q)\n  proj2_incident a (proj2_line_through a q)", "have \"proj2_incident (apply_cltn2 p ?J'') equator\"\n    and \"proj2_incident (apply_cltn2 a ?J'') equator\"\n    and \"proj2_incident (apply_cltn2 q ?J'') meridian\"\n    and \"proj2_incident (apply_cltn2 a ?J'') meridian\""], ["proof (prove)\nusing this:\n  apply_cltn2_line equator J''i = proj2_line_through p a\n  apply_cltn2_line meridian J''i = proj2_line_through a q\n  proj2_incident p (proj2_line_through p a)\n  proj2_incident a (proj2_line_through p a)\n  proj2_incident q (proj2_line_through a q)\n  proj2_incident a (proj2_line_through a q)\n\ngoal (1 subgoal):\n 1. (proj2_incident (apply_cltn2 p (cltn2_inverse J''i)) equator &&&\n     proj2_incident (apply_cltn2 a (cltn2_inverse J''i)) equator) &&&\n    proj2_incident (apply_cltn2 q (cltn2_inverse J''i)) meridian &&&\n    proj2_incident (apply_cltn2 a (cltn2_inverse J''i)) meridian", "by (simp_all add: apply_cltn2_incident [symmetric])"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 p (cltn2_inverse J''i)) equator\n  proj2_incident (apply_cltn2 a (cltn2_inverse J''i)) equator\n  proj2_incident (apply_cltn2 q (cltn2_inverse J''i)) meridian\n  proj2_incident (apply_cltn2 a (cltn2_inverse J''i)) meridian\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "from \\<open>proj2_incident (apply_cltn2 a ?J'') equator\\<close>\n    and \\<open>proj2_incident (apply_cltn2 a ?J'') meridian\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (apply_cltn2 a (cltn2_inverse J''i)) equator\n  proj2_incident (apply_cltn2 a (cltn2_inverse J''i)) meridian", "have \"apply_cltn2 a ?J'' = K2_centre\""], ["proof (prove)\nusing this:\n  proj2_incident (apply_cltn2 a (cltn2_inverse J''i)) equator\n  proj2_incident (apply_cltn2 a (cltn2_inverse J''i)) meridian\n\ngoal (1 subgoal):\n 1. apply_cltn2 a (cltn2_inverse J''i) = K2_centre", "by (rule on_equator_meridian_is_K2_centre)"], ["proof (state)\nthis:\n  apply_cltn2 a (cltn2_inverse J''i) = K2_centre\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "from \\<open>is_K2_isometry J''i\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J''i", "have \"is_K2_isometry ?J''\""], ["proof (prove)\nusing this:\n  is_K2_isometry J''i\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J''i)", "by (rule cltn2_inverse_is_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_inverse J''i)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "with \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  q \\<in> S\n  is_K2_isometry (cltn2_inverse J''i)", "have \"apply_cltn2 p ?J'' \\<in> S\" and \"apply_cltn2 q ?J'' \\<in> S\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  q \\<in> S\n  is_K2_isometry (cltn2_inverse J''i)\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<in> S &&&\n    apply_cltn2 q (cltn2_inverse J''i) \\<in> S", "by (unfold is_K2_isometry_def) simp_all"], ["proof (state)\nthis:\n  apply_cltn2 p (cltn2_inverse J''i) \\<in> S\n  apply_cltn2 q (cltn2_inverse J''i) \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "with east_west_distinct and north_south_distinct and compass_in_S\n    and east_west_on_equator and north_south_far_north_on_meridian\n    and \\<open>proj2_incident (apply_cltn2 p ?J'') equator\\<close>\n    and \\<open>proj2_incident (apply_cltn2 q ?J'') meridian\\<close>"], ["proof (chain)\npicking this:\n  east \\<noteq> west\n  north \\<noteq> south\n  east \\<in> S\n  west \\<in> S\n  north \\<in> S\n  south \\<in> S\n  proj2_incident east equator\n  proj2_incident west equator\n  proj2_incident north meridian\n  proj2_incident south meridian\n  proj2_incident far_north meridian\n  proj2_incident (apply_cltn2 p (cltn2_inverse J''i)) equator\n  proj2_incident (apply_cltn2 q (cltn2_inverse J''i)) meridian\n  apply_cltn2 p (cltn2_inverse J''i) \\<in> S\n  apply_cltn2 q (cltn2_inverse J''i) \\<in> S", "have \"apply_cltn2 p ?J'' = east \\<or> apply_cltn2 p ?J'' = west\"\n    and \"apply_cltn2 q ?J'' = north \\<or> apply_cltn2 q ?J'' = south\""], ["proof (prove)\nusing this:\n  east \\<noteq> west\n  north \\<noteq> south\n  east \\<in> S\n  west \\<in> S\n  north \\<in> S\n  south \\<in> S\n  proj2_incident east equator\n  proj2_incident west equator\n  proj2_incident north meridian\n  proj2_incident south meridian\n  proj2_incident far_north meridian\n  proj2_incident (apply_cltn2 p (cltn2_inverse J''i)) equator\n  proj2_incident (apply_cltn2 q (cltn2_inverse J''i)) meridian\n  apply_cltn2 p (cltn2_inverse J''i) \\<in> S\n  apply_cltn2 q (cltn2_inverse J''i) \\<in> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) = east \\<or>\n    apply_cltn2 p (cltn2_inverse J''i) = west &&&\n    apply_cltn2 q (cltn2_inverse J''i) = north \\<or>\n    apply_cltn2 q (cltn2_inverse J''i) = south", "by (simp_all add: line_S_two_intersections_only)"], ["proof (state)\nthis:\n  apply_cltn2 p (cltn2_inverse J''i) = east \\<or>\n  apply_cltn2 p (cltn2_inverse J''i) = west\n  apply_cltn2 q (cltn2_inverse J''i) = north \\<or>\n  apply_cltn2 q (cltn2_inverse J''i) = south\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "have \"\\<exists> J'. is_K2_isometry J' \\<and> apply_cltn2 p J' = east\n    \\<and> apply_cltn2 a J' = K2_centre\n    \\<and> (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "assume \"apply_cltn2 p ?J'' = east\""], ["proof (state)\nthis:\n  apply_cltn2 p (cltn2_inverse J''i) = east\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "with \\<open>is_K2_isometry ?J''\\<close> and \\<open>apply_cltn2 a ?J'' = K2_centre\\<close>\n      and \\<open>apply_cltn2 q ?J'' = north \\<or> apply_cltn2 q ?J'' = south\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry (cltn2_inverse J''i)\n  apply_cltn2 a (cltn2_inverse J''i) = K2_centre\n  apply_cltn2 q (cltn2_inverse J''i) = north \\<or>\n  apply_cltn2 q (cltn2_inverse J''i) = south\n  apply_cltn2 p (cltn2_inverse J''i) = east", "show \"\\<exists> J'. is_K2_isometry J' \\<and> apply_cltn2 p J' = east\n      \\<and> apply_cltn2 a J' = K2_centre\n      \\<and> (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\""], ["proof (prove)\nusing this:\n  is_K2_isometry (cltn2_inverse J''i)\n  apply_cltn2 a (cltn2_inverse J''i) = K2_centre\n  apply_cltn2 q (cltn2_inverse J''i) = north \\<or>\n  apply_cltn2 q (cltn2_inverse J''i) = south\n  apply_cltn2 p (cltn2_inverse J''i) = east\n\ngoal (1 subgoal):\n 1. \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "by (simp add: exI [of _ ?J''])"], ["proof (state)\nthis:\n  \\<exists>J'.\n     is_K2_isometry J' \\<and>\n     apply_cltn2 p J' = east \\<and>\n     apply_cltn2 a J' = K2_centre \\<and>\n     (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "assume \"apply_cltn2 p ?J'' \\<noteq> east\""], ["proof (state)\nthis:\n  apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "with \\<open>apply_cltn2 p ?J'' = east \\<or> apply_cltn2 p ?J'' = west\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 p (cltn2_inverse J''i) = east \\<or>\n  apply_cltn2 p (cltn2_inverse J''i) = west\n  apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east", "have \"apply_cltn2 p ?J'' = west\""], ["proof (prove)\nusing this:\n  apply_cltn2 p (cltn2_inverse J''i) = east \\<or>\n  apply_cltn2 p (cltn2_inverse J''i) = west\n  apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) = west", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 p (cltn2_inverse J''i) = west\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "let ?J' = \"cltn2_compose ?J'' meridian_reflect\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "from \\<open>is_K2_isometry ?J''\\<close> and meridian_reflect_K2_isometry"], ["proof (chain)\npicking this:\n  is_K2_isometry (cltn2_inverse J''i)\n  is_K2_isometry meridian_reflect", "have \"is_K2_isometry ?J'\""], ["proof (prove)\nusing this:\n  is_K2_isometry (cltn2_inverse J''i)\n  is_K2_isometry meridian_reflect\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_compose (cltn2_inverse J''i) meridian_reflect)", "by (rule cltn2_compose_is_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_compose (cltn2_inverse J''i) meridian_reflect)\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "moreover"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_compose (cltn2_inverse J''i) meridian_reflect)\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "from \\<open>apply_cltn2 p ?J'' = west\\<close> and \\<open>apply_cltn2 a ?J'' = K2_centre\\<close>\n      and \\<open>apply_cltn2 q ?J'' = north \\<or> apply_cltn2 q ?J'' = south\\<close>\n      and compass_reflect_compass"], ["proof (chain)\npicking this:\n  apply_cltn2 p (cltn2_inverse J''i) = west\n  apply_cltn2 a (cltn2_inverse J''i) = K2_centre\n  apply_cltn2 q (cltn2_inverse J''i) = north \\<or>\n  apply_cltn2 q (cltn2_inverse J''i) = south\n  apply_cltn2 east meridian_reflect = west\n  apply_cltn2 west meridian_reflect = east\n  apply_cltn2 north meridian_reflect = north\n  apply_cltn2 south meridian_reflect = south\n  apply_cltn2 K2_centre meridian_reflect = K2_centre\n  apply_cltn2 east equator_reflect = east\n  apply_cltn2 west equator_reflect = west\n  apply_cltn2 north equator_reflect = south\n  apply_cltn2 south equator_reflect = north\n  apply_cltn2 K2_centre equator_reflect = K2_centre", "have \"apply_cltn2 p ?J' = east\" and \"apply_cltn2 a ?J' = K2_centre\"\n      and \"apply_cltn2 q ?J' = north \\<or> apply_cltn2 q ?J' = south\""], ["proof (prove)\nusing this:\n  apply_cltn2 p (cltn2_inverse J''i) = west\n  apply_cltn2 a (cltn2_inverse J''i) = K2_centre\n  apply_cltn2 q (cltn2_inverse J''i) = north \\<or>\n  apply_cltn2 q (cltn2_inverse J''i) = south\n  apply_cltn2 east meridian_reflect = west\n  apply_cltn2 west meridian_reflect = east\n  apply_cltn2 north meridian_reflect = north\n  apply_cltn2 south meridian_reflect = south\n  apply_cltn2 K2_centre meridian_reflect = K2_centre\n  apply_cltn2 east equator_reflect = east\n  apply_cltn2 west equator_reflect = west\n  apply_cltn2 north equator_reflect = south\n  apply_cltn2 south equator_reflect = north\n  apply_cltn2 K2_centre equator_reflect = K2_centre\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n    east &&&\n    apply_cltn2 a (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n    K2_centre &&&\n    apply_cltn2 q (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n    north \\<or>\n    apply_cltn2 q (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n    south", "by (auto simp add: cltn2.act_act [simplified, symmetric])"], ["proof (state)\nthis:\n  apply_cltn2 p (cltn2_compose (cltn2_inverse J''i) meridian_reflect) = east\n  apply_cltn2 a (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  K2_centre\n  apply_cltn2 q (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  north \\<or>\n  apply_cltn2 q (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  south\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_inverse J''i) \\<noteq> east \\<Longrightarrow>\n    \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "ultimately"], ["proof (chain)\npicking this:\n  is_K2_isometry (cltn2_compose (cltn2_inverse J''i) meridian_reflect)\n  apply_cltn2 p (cltn2_compose (cltn2_inverse J''i) meridian_reflect) = east\n  apply_cltn2 a (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  K2_centre\n  apply_cltn2 q (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  north \\<or>\n  apply_cltn2 q (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  south", "show \"\\<exists> J'. is_K2_isometry J' \\<and> apply_cltn2 p J' = east\n      \\<and> apply_cltn2 a J' = K2_centre\n      \\<and> (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\""], ["proof (prove)\nusing this:\n  is_K2_isometry (cltn2_compose (cltn2_inverse J''i) meridian_reflect)\n  apply_cltn2 p (cltn2_compose (cltn2_inverse J''i) meridian_reflect) = east\n  apply_cltn2 a (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  K2_centre\n  apply_cltn2 q (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  north \\<or>\n  apply_cltn2 q (cltn2_compose (cltn2_inverse J''i) meridian_reflect) =\n  south\n\ngoal (1 subgoal):\n 1. \\<exists>J'.\n       is_K2_isometry J' \\<and>\n       apply_cltn2 p J' = east \\<and>\n       apply_cltn2 a J' = K2_centre \\<and>\n       (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "by (simp add: exI [of _ ?J'])"], ["proof (state)\nthis:\n  \\<exists>J'.\n     is_K2_isometry J' \\<and>\n     apply_cltn2 p J' = east \\<and>\n     apply_cltn2 a J' = K2_centre \\<and>\n     (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>J'.\n     is_K2_isometry J' \\<and>\n     apply_cltn2 p J' = east \\<and>\n     apply_cltn2 a J' = K2_centre \\<and>\n     (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "then"], ["proof (chain)\npicking this:\n  \\<exists>J'.\n     is_K2_isometry J' \\<and>\n     apply_cltn2 p J' = east \\<and>\n     apply_cltn2 a J' = K2_centre \\<and>\n     (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)", "obtain J' where \"is_K2_isometry J'\" and \"apply_cltn2 p J' = east\"\n    and \"apply_cltn2 a J' = K2_centre\"\n    and \"apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south\""], ["proof (prove)\nusing this:\n  \\<exists>J'.\n     is_K2_isometry J' \\<and>\n     apply_cltn2 p J' = east \\<and>\n     apply_cltn2 a J' = K2_centre \\<and>\n     (apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south)\n\ngoal (1 subgoal):\n 1. (\\<And>J'.\n        \\<lbrakk>is_K2_isometry J'; apply_cltn2 p J' = east;\n         apply_cltn2 a J' = K2_centre;\n         apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J'\n  apply_cltn2 p J' = east\n  apply_cltn2 a J' = K2_centre\n  apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "show \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 p J = east\n    \\<and> apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "assume \"apply_cltn2 q J' = north\""], ["proof (state)\nthis:\n  apply_cltn2 q J' = north\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "with \\<open>is_K2_isometry J'\\<close> and \\<open>apply_cltn2 p J' = east\\<close>\n      and \\<open>apply_cltn2 a J' = K2_centre\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J'\n  apply_cltn2 p J' = east\n  apply_cltn2 a J' = K2_centre\n  apply_cltn2 q J' = north", "show \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 p J = east\n      \\<and> apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\""], ["proof (prove)\nusing this:\n  is_K2_isometry J'\n  apply_cltn2 p J' = east\n  apply_cltn2 a J' = K2_centre\n  apply_cltn2 q J' = north\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "by (simp add: exI [of _ J'])"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 p J = east \\<and>\n     apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J' \\<noteq> north \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 q J' \\<noteq> north \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "assume \"apply_cltn2 q J' \\<noteq> north\""], ["proof (state)\nthis:\n  apply_cltn2 q J' \\<noteq> north\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J' \\<noteq> north \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "with \\<open>apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south\n  apply_cltn2 q J' \\<noteq> north", "have \"apply_cltn2 q J' = south\""], ["proof (prove)\nusing this:\n  apply_cltn2 q J' = north \\<or> apply_cltn2 q J' = south\n  apply_cltn2 q J' \\<noteq> north\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J' = south", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 q J' = south\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J' \\<noteq> north \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "let ?J = \"cltn2_compose J' equator_reflect\""], ["proof (state)\ngoal (1 subgoal):\n 1. apply_cltn2 q J' \\<noteq> north \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "from \\<open>is_K2_isometry J'\\<close> and equator_reflect_K2_isometry"], ["proof (chain)\npicking this:\n  is_K2_isometry J'\n  is_K2_isometry equator_reflect", "have \"is_K2_isometry ?J\""], ["proof (prove)\nusing this:\n  is_K2_isometry J'\n  is_K2_isometry equator_reflect\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_compose J' equator_reflect)", "by (rule cltn2_compose_is_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_compose J' equator_reflect)\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J' \\<noteq> north \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "moreover"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_compose J' equator_reflect)\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J' \\<noteq> north \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "from \\<open>apply_cltn2 p J' = east\\<close> and \\<open>apply_cltn2 a J' = K2_centre\\<close>\n      and \\<open>apply_cltn2 q J' = south\\<close> and compass_reflect_compass"], ["proof (chain)\npicking this:\n  apply_cltn2 p J' = east\n  apply_cltn2 a J' = K2_centre\n  apply_cltn2 q J' = south\n  apply_cltn2 east meridian_reflect = west\n  apply_cltn2 west meridian_reflect = east\n  apply_cltn2 north meridian_reflect = north\n  apply_cltn2 south meridian_reflect = south\n  apply_cltn2 K2_centre meridian_reflect = K2_centre\n  apply_cltn2 east equator_reflect = east\n  apply_cltn2 west equator_reflect = west\n  apply_cltn2 north equator_reflect = south\n  apply_cltn2 south equator_reflect = north\n  apply_cltn2 K2_centre equator_reflect = K2_centre", "have \"apply_cltn2 p ?J = east\" and \"apply_cltn2 a ?J = K2_centre\"\n      and \"apply_cltn2 q ?J = north\""], ["proof (prove)\nusing this:\n  apply_cltn2 p J' = east\n  apply_cltn2 a J' = K2_centre\n  apply_cltn2 q J' = south\n  apply_cltn2 east meridian_reflect = west\n  apply_cltn2 west meridian_reflect = east\n  apply_cltn2 north meridian_reflect = north\n  apply_cltn2 south meridian_reflect = south\n  apply_cltn2 K2_centre meridian_reflect = K2_centre\n  apply_cltn2 east equator_reflect = east\n  apply_cltn2 west equator_reflect = west\n  apply_cltn2 north equator_reflect = south\n  apply_cltn2 south equator_reflect = north\n  apply_cltn2 K2_centre equator_reflect = K2_centre\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_compose J' equator_reflect) = east &&&\n    apply_cltn2 a (cltn2_compose J' equator_reflect) = K2_centre &&&\n    apply_cltn2 q (cltn2_compose J' equator_reflect) = north", "by (auto simp add: cltn2.act_act [simplified, symmetric])"], ["proof (state)\nthis:\n  apply_cltn2 p (cltn2_compose J' equator_reflect) = east\n  apply_cltn2 a (cltn2_compose J' equator_reflect) = K2_centre\n  apply_cltn2 q (cltn2_compose J' equator_reflect) = north\n\ngoal (1 subgoal):\n 1. apply_cltn2 q J' \\<noteq> north \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "ultimately"], ["proof (chain)\npicking this:\n  is_K2_isometry (cltn2_compose J' equator_reflect)\n  apply_cltn2 p (cltn2_compose J' equator_reflect) = east\n  apply_cltn2 a (cltn2_compose J' equator_reflect) = K2_centre\n  apply_cltn2 q (cltn2_compose J' equator_reflect) = north", "show \"\\<exists> J. is_K2_isometry J \\<and> apply_cltn2 p J = east\n      \\<and> apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\""], ["proof (prove)\nusing this:\n  is_K2_isometry (cltn2_compose J' equator_reflect)\n  apply_cltn2 p (cltn2_compose J' equator_reflect) = east\n  apply_cltn2 a (cltn2_compose J' equator_reflect) = K2_centre\n  apply_cltn2 q (cltn2_compose J' equator_reflect) = north\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = east \\<and>\n       apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "by (simp add: exI [of _ ?J])"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 p J = east \\<and>\n     apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 p J = east \\<and>\n     apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma right_angle_to_right_angle:\n  assumes \"right_angle p a q\" and \"right_angle r b s\"\n  shows \"\\<exists> J. is_K2_isometry J\n  \\<and> apply_cltn2 p J = r \\<and> apply_cltn2 a J = b \\<and> apply_cltn2 q J = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "from \\<open>right_angle p a q\\<close> and right_angle_to_compass [of p a q]"], ["proof (chain)\npicking this:\n  right_angle p a q\n  right_angle p a q \\<Longrightarrow>\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 p J = east \\<and>\n     apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north", "obtain H where \"is_K2_isometry H\" and \"apply_cltn2 p H = east\"\n    and \"apply_cltn2 a H = K2_centre\" and \"apply_cltn2 q H = north\""], ["proof (prove)\nusing this:\n  right_angle p a q\n  right_angle p a q \\<Longrightarrow>\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 p J = east \\<and>\n     apply_cltn2 a J = K2_centre \\<and> apply_cltn2 q J = north\n\ngoal (1 subgoal):\n 1. (\\<And>H.\n        \\<lbrakk>is_K2_isometry H; apply_cltn2 p H = east;\n         apply_cltn2 a H = K2_centre; apply_cltn2 q H = north\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry H\n  apply_cltn2 p H = east\n  apply_cltn2 a H = K2_centre\n  apply_cltn2 q H = north\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "from \\<open>right_angle r b s\\<close> and right_angle_to_compass [of r b s]"], ["proof (chain)\npicking this:\n  right_angle r b s\n  right_angle r b s \\<Longrightarrow>\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 r J = east \\<and>\n     apply_cltn2 b J = K2_centre \\<and> apply_cltn2 s J = north", "obtain K where \"is_K2_isometry K\" and \"apply_cltn2 r K = east\"\n    and \"apply_cltn2 b K = K2_centre\" and \"apply_cltn2 s K = north\""], ["proof (prove)\nusing this:\n  right_angle r b s\n  right_angle r b s \\<Longrightarrow>\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 r J = east \\<and>\n     apply_cltn2 b J = K2_centre \\<and> apply_cltn2 s J = north\n\ngoal (1 subgoal):\n 1. (\\<And>K.\n        \\<lbrakk>is_K2_isometry K; apply_cltn2 r K = east;\n         apply_cltn2 b K = K2_centre; apply_cltn2 s K = north\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry K\n  apply_cltn2 r K = east\n  apply_cltn2 b K = K2_centre\n  apply_cltn2 s K = north\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "let ?Ki = \"cltn2_inverse K\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "let ?J = \"cltn2_compose H ?Ki\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "from \\<open>is_K2_isometry H\\<close> and \\<open>is_K2_isometry K\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry H\n  is_K2_isometry K", "have \"is_K2_isometry ?J\""], ["proof (prove)\nusing this:\n  is_K2_isometry H\n  is_K2_isometry K\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_compose H (cltn2_inverse K))", "by (simp add: cltn2_inverse_is_K2_isometry cltn2_compose_is_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_compose H (cltn2_inverse K))\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "from \\<open>apply_cltn2 r K = east\\<close> and \\<open>apply_cltn2 b K = K2_centre\\<close>\n    and \\<open>apply_cltn2 s K = north\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 r K = east\n  apply_cltn2 b K = K2_centre\n  apply_cltn2 s K = north", "have \"apply_cltn2 east ?Ki = r\" and \"apply_cltn2 K2_centre ?Ki = b\"\n    and \"apply_cltn2 north ?Ki = s\""], ["proof (prove)\nusing this:\n  apply_cltn2 r K = east\n  apply_cltn2 b K = K2_centre\n  apply_cltn2 s K = north\n\ngoal (1 subgoal):\n 1. apply_cltn2 east (cltn2_inverse K) = r &&&\n    apply_cltn2 K2_centre (cltn2_inverse K) = b &&&\n    apply_cltn2 north (cltn2_inverse K) = s", "by (simp_all add: cltn2.act_inv_iff [simplified])"], ["proof (state)\nthis:\n  apply_cltn2 east (cltn2_inverse K) = r\n  apply_cltn2 K2_centre (cltn2_inverse K) = b\n  apply_cltn2 north (cltn2_inverse K) = s\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "with \\<open>apply_cltn2 p H = east\\<close> and \\<open>apply_cltn2 a H = K2_centre\\<close>\n    and \\<open>apply_cltn2 q H = north\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 p H = east\n  apply_cltn2 a H = K2_centre\n  apply_cltn2 q H = north\n  apply_cltn2 east (cltn2_inverse K) = r\n  apply_cltn2 K2_centre (cltn2_inverse K) = b\n  apply_cltn2 north (cltn2_inverse K) = s", "have \"apply_cltn2 p ?J = r\" and \"apply_cltn2 a ?J = b\"\n    and \"apply_cltn2 q ?J = s\""], ["proof (prove)\nusing this:\n  apply_cltn2 p H = east\n  apply_cltn2 a H = K2_centre\n  apply_cltn2 q H = north\n  apply_cltn2 east (cltn2_inverse K) = r\n  apply_cltn2 K2_centre (cltn2_inverse K) = b\n  apply_cltn2 north (cltn2_inverse K) = s\n\ngoal (1 subgoal):\n 1. apply_cltn2 p (cltn2_compose H (cltn2_inverse K)) = r &&&\n    apply_cltn2 a (cltn2_compose H (cltn2_inverse K)) = b &&&\n    apply_cltn2 q (cltn2_compose H (cltn2_inverse K)) = s", "by (simp_all add: cltn2.act_act [simplified,symmetric])"], ["proof (state)\nthis:\n  apply_cltn2 p (cltn2_compose H (cltn2_inverse K)) = r\n  apply_cltn2 a (cltn2_compose H (cltn2_inverse K)) = b\n  apply_cltn2 q (cltn2_compose H (cltn2_inverse K)) = s\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "with \\<open>is_K2_isometry ?J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry (cltn2_compose H (cltn2_inverse K))\n  apply_cltn2 p (cltn2_compose H (cltn2_inverse K)) = r\n  apply_cltn2 a (cltn2_compose H (cltn2_inverse K)) = b\n  apply_cltn2 q (cltn2_compose H (cltn2_inverse K)) = s", "show \"\\<exists> J. is_K2_isometry J\n    \\<and> apply_cltn2 p J = r \\<and> apply_cltn2 a J = b \\<and> apply_cltn2 q J = s\""], ["proof (prove)\nusing this:\n  is_K2_isometry (cltn2_compose H (cltn2_inverse K))\n  apply_cltn2 p (cltn2_compose H (cltn2_inverse K)) = r\n  apply_cltn2 a (cltn2_compose H (cltn2_inverse K)) = b\n  apply_cltn2 q (cltn2_compose H (cltn2_inverse K)) = s\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       apply_cltn2 p J = r \\<and>\n       apply_cltn2 a J = b \\<and> apply_cltn2 q J = s", "by (simp add: exI [of _ ?J])"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     apply_cltn2 p J = r \\<and>\n     apply_cltn2 a J = b \\<and> apply_cltn2 q J = s\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Functions of distance\\<close>"], ["", "definition exp_2dist :: \"proj2 \\<Rightarrow> proj2 \\<Rightarrow> real\" where\n  \"exp_2dist a b\n  \\<equiv> if a = b\n  then 1\n  else cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\""], ["", "definition cosh_dist :: \"proj2 \\<Rightarrow> proj2 \\<Rightarrow> real\" where\n  \"cosh_dist a b \\<equiv> (sqrt (exp_2dist a b) + sqrt (1 / (exp_2dist a b))) / 2\""], ["", "lemma exp_2dist_formula:\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\" and \"proj2_abs a \\<in> hyp2\" (is \"?pa \\<in> hyp2\")\n  and \"proj2_abs b \\<in> hyp2\" (is \"?pb \\<in> hyp2\")\n  shows \"exp_2dist (proj2_abs a) (proj2_abs b)\n    = (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n      / (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n  \\<or> exp_2dist (proj2_abs a) (proj2_abs b)\n    = (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n      / (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\"\n  (is \"?e2d = (?aMb + ?sqd) / (?aMb - ?sqd)\n    \\<or> ?e2d = (?aMb - ?sqd) / (?aMb + ?sqd)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "assume \"?pa = ?pb\""], ["proof (state)\nthis:\n  proj2_abs a = proj2_abs b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "hence \"?e2d = 1\""], ["proof (prove)\nusing this:\n  proj2_abs a = proj2_abs b\n\ngoal (1 subgoal):\n 1. exp_2dist (proj2_abs a) (proj2_abs b) = 1", "by (unfold exp_2dist_def, simp)"], ["proof (state)\nthis:\n  exp_2dist (proj2_abs a) (proj2_abs b) = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "from \\<open>?pa = ?pb\\<close>"], ["proof (chain)\npicking this:\n  proj2_abs a = proj2_abs b", "have \"quarter_discrim a b = 0\""], ["proof (prove)\nusing this:\n  proj2_abs a = proj2_abs b\n\ngoal (1 subgoal):\n 1. quarter_discrim a b = 0", "by (rule quarter_discrim_self_zero)"], ["proof (state)\nthis:\n  quarter_discrim a b = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "hence \"?sqd = 0\""], ["proof (prove)\nusing this:\n  quarter_discrim a b = 0\n\ngoal (1 subgoal):\n 1. sqrt (quarter_discrim a b) = 0", "by simp"], ["proof (state)\nthis:\n  sqrt (quarter_discrim a b) = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "from \\<open>proj2_abs a = proj2_abs b\\<close> and \\<open>b \\<noteq> 0\\<close> and proj2_abs_abs_mult"], ["proof (chain)\npicking this:\n  proj2_abs a = proj2_abs b\n  b \\<noteq> 0\n  \\<lbrakk>proj2_abs ?v = proj2_abs ?w; ?w \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c. ?v = c *\\<^sub>R ?w", "obtain k where \"a = k *\\<^sub>R b\""], ["proof (prove)\nusing this:\n  proj2_abs a = proj2_abs b\n  b \\<noteq> 0\n  \\<lbrakk>proj2_abs ?v = proj2_abs ?w; ?w \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c. ?v = c *\\<^sub>R ?w\n\ngoal (1 subgoal):\n 1. (\\<And>k. a = k *\\<^sub>R b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = k *\\<^sub>R b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "from \\<open>b \\<noteq> 0\\<close> and \\<open>proj2_abs b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  b \\<noteq> 0\n  proj2_abs b \\<in> hyp2", "have \"b \\<bullet> (M *v b) < 0\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n  proj2_abs b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. b \\<bullet> (M *v b) < 0", "by (subst K2_abs [symmetric])"], ["proof (state)\nthis:\n  b \\<bullet> (M *v b) < 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>a \\<noteq> 0\\<close> and \\<open>a = k *\\<^sub>R b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  a = k *\\<^sub>R b\n  b \\<bullet> (M *v b) < 0", "have \"?aMb \\<noteq> 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  a = k *\\<^sub>R b\n  b \\<bullet> (M *v b) < 0\n\ngoal (1 subgoal):\n 1. a \\<bullet> (M *v b) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  a \\<bullet> (M *v b) \\<noteq> 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>?e2d = 1\\<close> and \\<open>?sqd = 0\\<close>"], ["proof (chain)\npicking this:\n  exp_2dist (proj2_abs a) (proj2_abs b) = 1\n  sqrt (quarter_discrim a b) = 0\n  a \\<bullet> (M *v b) \\<noteq> 0", "show \"?e2d = (?aMb + ?sqd) / (?aMb - ?sqd)\n    \\<or> ?e2d = (?aMb - ?sqd) / (?aMb + ?sqd)\""], ["proof (prove)\nusing this:\n  exp_2dist (proj2_abs a) (proj2_abs b) = 1\n  sqrt (quarter_discrim a b) = 0\n  a \\<bullet> (M *v b) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "by simp"], ["proof (state)\nthis:\n  exp_2dist (proj2_abs a) (proj2_abs b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n  exp_2dist (proj2_abs a) (proj2_abs b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "assume \"?pa \\<noteq> ?pb\""], ["proof (state)\nthis:\n  proj2_abs a \\<noteq> proj2_abs b\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "let ?l = \"proj2_line_through ?pa ?pb\""], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "have \"proj2_incident ?pa ?l\" and \"proj2_incident ?pb ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (proj2_abs a)\n     (proj2_line_through (proj2_abs a) (proj2_abs b)) &&&\n    proj2_incident (proj2_abs b)\n     (proj2_line_through (proj2_abs a) (proj2_abs b))", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<noteq> ?pb\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))", "have \"proj2_incident (S_intersection1 a b) ?l\" (is \"proj2_incident ?Si1 ?l\")\n    and \"proj2_incident (S_intersection2 a b) ?l\" (is \"proj2_incident ?Si2 ?l\")"], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n\ngoal (1 subgoal):\n 1. proj2_incident (S_intersection1 a b)\n     (proj2_line_through (proj2_abs a) (proj2_abs b)) &&&\n    proj2_incident (S_intersection2 a b)\n     (proj2_line_through (proj2_abs a) (proj2_abs b))", "by (rule S_intersections_incident)+"], ["proof (state)\nthis:\n  proj2_incident (S_intersection1 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection2 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>proj2_incident ?pa ?l\\<close> and \\<open>proj2_incident ?pb ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection1 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection2 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))", "have \"proj2_set_Col {?pa,?pb,?Si1,?Si2}\""], ["proof (prove)\nusing this:\n  proj2_incident (proj2_abs a)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (proj2_abs b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection1 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n  proj2_incident (S_intersection2 a b)\n   (proj2_line_through (proj2_abs a) (proj2_abs b))\n\ngoal (1 subgoal):\n 1. proj2_set_Col\n     {proj2_abs a, proj2_abs b, S_intersection1 a b, S_intersection2 a b}", "by (unfold proj2_set_Col_def, auto)"], ["proof (state)\nthis:\n  proj2_set_Col\n   {proj2_abs a, proj2_abs b, S_intersection1 a b, S_intersection2 a b}\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "have \"{?pa,?pb,?Si2,?Si1} = {?pa,?pb,?Si1,?Si2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {proj2_abs a, proj2_abs b, S_intersection2 a b, S_intersection1 a b} =\n    {proj2_abs a, proj2_abs b, S_intersection1 a b, S_intersection2 a b}", "by auto"], ["proof (state)\nthis:\n  {proj2_abs a, proj2_abs b, S_intersection2 a b, S_intersection1 a b} =\n  {proj2_abs a, proj2_abs b, S_intersection1 a b, S_intersection2 a b}\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "from \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>?pa \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2", "have \"?Si1 \\<in> S\" and \"?Si2 \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. S_intersection1 a b \\<in> S &&& S_intersection2 a b \\<in> S", "by (simp_all add: S_intersections_in_S)"], ["proof (state)\nthis:\n  S_intersection1 a b \\<in> S\n  S_intersection2 a b \\<in> S\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>?pa \\<in> hyp2\\<close> and \\<open>?pb \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2\n  S_intersection1 a b \\<in> S\n  S_intersection2 a b \\<in> S", "have \"?Si1 \\<noteq> ?pa\" and \"?Si2 \\<noteq> ?pa\" and \"?Si1 \\<noteq> ?pb\" and \"?Si2 \\<noteq> ?pb\""], ["proof (prove)\nusing this:\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2\n  S_intersection1 a b \\<in> S\n  S_intersection2 a b \\<in> S\n\ngoal (1 subgoal):\n 1. (S_intersection1 a b \\<noteq> proj2_abs a &&&\n     S_intersection2 a b \\<noteq> proj2_abs a) &&&\n    S_intersection1 a b \\<noteq> proj2_abs b &&&\n    S_intersection2 a b \\<noteq> proj2_abs b", "by (simp_all add: hyp2_S_not_equal [symmetric])"], ["proof (state)\nthis:\n  S_intersection1 a b \\<noteq> proj2_abs a\n  S_intersection2 a b \\<noteq> proj2_abs a\n  S_intersection1 a b \\<noteq> proj2_abs b\n  S_intersection2 a b \\<noteq> proj2_abs b\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>proj2_set_Col {?pa,?pb,?Si1,?Si2}\\<close> and \\<open>?pa \\<noteq> ?pb\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col\n   {proj2_abs a, proj2_abs b, S_intersection1 a b, S_intersection2 a b}\n  proj2_abs a \\<noteq> proj2_abs b\n  S_intersection1 a b \\<noteq> proj2_abs a\n  S_intersection2 a b \\<noteq> proj2_abs a\n  S_intersection1 a b \\<noteq> proj2_abs b\n  S_intersection2 a b \\<noteq> proj2_abs b", "have \"cross_ratio_correct ?pa ?pb ?Si1 ?Si2\"\n    and \"cross_ratio_correct ?pa ?pb ?Si2 ?Si1\""], ["proof (prove)\nusing this:\n  proj2_set_Col\n   {proj2_abs a, proj2_abs b, S_intersection1 a b, S_intersection2 a b}\n  proj2_abs a \\<noteq> proj2_abs b\n  S_intersection1 a b \\<noteq> proj2_abs a\n  S_intersection2 a b \\<noteq> proj2_abs a\n  S_intersection1 a b \\<noteq> proj2_abs b\n  S_intersection2 a b \\<noteq> proj2_abs b\n\ngoal (1 subgoal):\n 1. cross_ratio_correct (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n     (S_intersection2 a b) &&&\n    cross_ratio_correct (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n     (S_intersection1 a b)", "unfolding cross_ratio_correct_def"], ["proof (prove)\nusing this:\n  proj2_set_Col\n   {proj2_abs a, proj2_abs b, S_intersection1 a b, S_intersection2 a b}\n  proj2_abs a \\<noteq> proj2_abs b\n  S_intersection1 a b \\<noteq> proj2_abs a\n  S_intersection2 a b \\<noteq> proj2_abs a\n  S_intersection1 a b \\<noteq> proj2_abs b\n  S_intersection2 a b \\<noteq> proj2_abs b\n\ngoal (1 subgoal):\n 1. proj2_set_Col\n     {proj2_abs a, proj2_abs b, S_intersection1 a b,\n      S_intersection2 a b} \\<and>\n    proj2_abs a \\<noteq> proj2_abs b \\<and>\n    S_intersection1 a b \\<noteq> proj2_abs a \\<and>\n    S_intersection2 a b \\<noteq> proj2_abs a \\<and>\n    S_intersection1 a b \\<noteq> proj2_abs b &&&\n    proj2_set_Col\n     {proj2_abs a, proj2_abs b, S_intersection2 a b,\n      S_intersection1 a b} \\<and>\n    proj2_abs a \\<noteq> proj2_abs b \\<and>\n    S_intersection2 a b \\<noteq> proj2_abs a \\<and>\n    S_intersection1 a b \\<noteq> proj2_abs a \\<and>\n    S_intersection2 a b \\<noteq> proj2_abs b", "by (simp_all add: \\<open>{?pa,?pb,?Si2,?Si1} = {?pa,?pb,?Si1,?Si2}\\<close>)"], ["proof (state)\nthis:\n  cross_ratio_correct (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b)\n  cross_ratio_correct (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b)\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "from \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>?pa \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2", "have \"?Si1 \\<noteq> ?Si2\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. S_intersection1 a b \\<noteq> S_intersection2 a b", "by (simp add: S_intersections_distinct)"], ["proof (state)\nthis:\n  S_intersection1 a b \\<noteq> S_intersection2 a b\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>cross_ratio_correct ?pa ?pb ?Si1 ?Si2\\<close>\n    and \\<open>cross_ratio_correct ?pa ?pb ?Si2 ?Si1\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio_correct (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b)\n  cross_ratio_correct (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b)\n  S_intersection1 a b \\<noteq> S_intersection2 a b", "have \"cross_ratio ?Si1 ?Si2 ?pa ?pb = cross_ratio ?pa ?pb ?Si1 ?Si2\"\n    and \"cross_ratio ?Si2 ?Si1 ?pa ?pb = cross_ratio ?pa ?pb ?Si2 ?Si1\""], ["proof (prove)\nusing this:\n  cross_ratio_correct (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b)\n  cross_ratio_correct (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b)\n  S_intersection1 a b \\<noteq> S_intersection2 a b\n\ngoal (1 subgoal):\n 1. cross_ratio (S_intersection1 a b) (S_intersection2 a b) (proj2_abs a)\n     (proj2_abs b) =\n    cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n     (S_intersection2 a b) &&&\n    cross_ratio (S_intersection2 a b) (S_intersection1 a b) (proj2_abs a)\n     (proj2_abs b) =\n    cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n     (S_intersection1 a b)", "by (simp_all add: cross_ratio_swap_13_24)"], ["proof (state)\nthis:\n  cross_ratio (S_intersection1 a b) (S_intersection2 a b) (proj2_abs a)\n   (proj2_abs b) =\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b)\n  cross_ratio (S_intersection2 a b) (S_intersection1 a b) (proj2_abs a)\n   (proj2_abs b) =\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b)\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "from \\<open>a \\<noteq> 0\\<close> and \\<open>proj2_abs a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  proj2_abs a \\<in> hyp2", "have \"a \\<bullet> (M *v a) < 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  proj2_abs a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. a \\<bullet> (M *v a) < 0", "by (subst K2_abs [symmetric])"], ["proof (state)\nthis:\n  a \\<bullet> (M *v a) < 0\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<noteq> ?pb\\<close> and cross_ratio_abs [of a b 1 1]"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  \\<lbrakk>a \\<noteq> 0; b \\<noteq> 0; proj2_abs a \\<noteq> proj2_abs b;\n   1 \\<noteq> 0; 1 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> cross_ratio (proj2_abs a) (proj2_abs b)\n                     (proj2_abs (?i *\\<^sub>R a + 1 *\\<^sub>R b))\n                     (proj2_abs (?k *\\<^sub>R a + 1 *\\<^sub>R b)) =\n                    1 * ?k / (?i * 1)\n  a \\<bullet> (M *v a) < 0", "have \"cross_ratio ?pa ?pb ?Si1 ?Si2 = (-?aMb - ?sqd) / (-?aMb + ?sqd)\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  \\<lbrakk>a \\<noteq> 0; b \\<noteq> 0; proj2_abs a \\<noteq> proj2_abs b;\n   1 \\<noteq> 0; 1 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> cross_ratio (proj2_abs a) (proj2_abs b)\n                     (proj2_abs (?i *\\<^sub>R a + 1 *\\<^sub>R b))\n                     (proj2_abs (?k *\\<^sub>R a + 1 *\\<^sub>R b)) =\n                    1 * ?k / (?i * 1)\n  a \\<bullet> (M *v a) < 0\n\ngoal (1 subgoal):\n 1. cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n     (S_intersection2 a b) =\n    (- (a \\<bullet> (M *v b)) - sqrt (quarter_discrim a b)) /\n    (- (a \\<bullet> (M *v b)) + sqrt (quarter_discrim a b))", "by (unfold S_intersections_defs S_intersection_coeffs_defs, simp)"], ["proof (state)\nthis:\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b) =\n  (- (a \\<bullet> (M *v b)) - sqrt (quarter_discrim a b)) /\n  (- (a \\<bullet> (M *v b)) + sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with times_divide_times_eq [of \"-1\" \"-1\" \"-?aMb - ?sqd\" \"-?aMb + ?sqd\"]"], ["proof (chain)\npicking this:\n  - 1 / - 1 *\n  ((- (a \\<bullet> (M *v b)) - sqrt (quarter_discrim a b)) /\n   (- (a \\<bullet> (M *v b)) + sqrt (quarter_discrim a b))) =\n  - 1 * (- (a \\<bullet> (M *v b)) - sqrt (quarter_discrim a b)) /\n  (- 1 * (- (a \\<bullet> (M *v b)) + sqrt (quarter_discrim a b)))\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b) =\n  (- (a \\<bullet> (M *v b)) - sqrt (quarter_discrim a b)) /\n  (- (a \\<bullet> (M *v b)) + sqrt (quarter_discrim a b))", "have \"cross_ratio ?pa ?pb ?Si1 ?Si2 = (?aMb + ?sqd) / (?aMb - ?sqd)\""], ["proof (prove)\nusing this:\n  - 1 / - 1 *\n  ((- (a \\<bullet> (M *v b)) - sqrt (quarter_discrim a b)) /\n   (- (a \\<bullet> (M *v b)) + sqrt (quarter_discrim a b))) =\n  - 1 * (- (a \\<bullet> (M *v b)) - sqrt (quarter_discrim a b)) /\n  (- 1 * (- (a \\<bullet> (M *v b)) + sqrt (quarter_discrim a b)))\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b) =\n  (- (a \\<bullet> (M *v b)) - sqrt (quarter_discrim a b)) /\n  (- (a \\<bullet> (M *v b)) + sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n     (S_intersection2 a b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>cross_ratio ?Si1 ?Si2 ?pa ?pb = cross_ratio ?pa ?pb ?Si1 ?Si2\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio (S_intersection1 a b) (S_intersection2 a b) (proj2_abs a)\n   (proj2_abs b) =\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b)\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))", "have \"cross_ratio ?Si1 ?Si2 ?pa ?pb = (?aMb + ?sqd) / (?aMb - ?sqd)\""], ["proof (prove)\nusing this:\n  cross_ratio (S_intersection1 a b) (S_intersection2 a b) (proj2_abs a)\n   (proj2_abs b) =\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b)\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (S_intersection1 a b) (S_intersection2 a b) (proj2_abs a)\n     (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))", "by simp"], ["proof (state)\nthis:\n  cross_ratio (S_intersection1 a b) (S_intersection2 a b) (proj2_abs a)\n   (proj2_abs b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "from \\<open>cross_ratio ?pa ?pb ?Si1 ?Si2 = (?aMb + ?sqd) / (?aMb - ?sqd)\\<close>\n    and cross_ratio_swap_34 [of ?pa ?pb ?Si2 ?Si1]"], ["proof (chain)\npicking this:\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b) =\n  1 /\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b)", "have \"cross_ratio ?pa ?pb ?Si2 ?Si1 = (?aMb - ?sqd) / (?aMb + ?sqd)\""], ["proof (prove)\nusing this:\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b) =\n  1 /\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection1 a b)\n   (S_intersection2 a b)\n\ngoal (1 subgoal):\n 1. cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n     (S_intersection1 a b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "by simp"], ["proof (state)\nthis:\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>cross_ratio ?Si2 ?Si1 ?pa ?pb = cross_ratio ?pa ?pb ?Si2 ?Si1\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio (S_intersection2 a b) (S_intersection1 a b) (proj2_abs a)\n   (proj2_abs b) =\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b)\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "have \"cross_ratio ?Si2 ?Si1 ?pa ?pb = (?aMb - ?sqd) / (?aMb + ?sqd)\""], ["proof (prove)\nusing this:\n  cross_ratio (S_intersection2 a b) (S_intersection1 a b) (proj2_abs a)\n   (proj2_abs b) =\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b)\n  cross_ratio (proj2_abs a) (proj2_abs b) (S_intersection2 a b)\n   (S_intersection1 a b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (S_intersection2 a b) (S_intersection1 a b) (proj2_abs a)\n     (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "by simp"], ["proof (state)\nthis:\n  cross_ratio (S_intersection2 a b) (S_intersection1 a b) (proj2_abs a)\n   (proj2_abs b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "from \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>?pa \\<in> hyp2\\<close> and \\<open>?pb \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2", "have \"(?Si1 = endpoint_in_S ?pa ?pb \\<and> ?Si2 = endpoint_in_S ?pb ?pa)\n    \\<or> (?Si2 = endpoint_in_S ?pa ?pb \\<and> ?Si1 = endpoint_in_S ?pb ?pa)\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<noteq> proj2_abs b\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n    S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n    S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "by (simp add: S_intersections_endpoints_in_S)"], ["proof (state)\nthis:\n  S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n  S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n  S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n  S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "with \\<open>cross_ratio ?Si1 ?Si2 ?pa ?pb = (?aMb + ?sqd) / (?aMb - ?sqd)\\<close>\n    and \\<open>cross_ratio ?Si2 ?Si1 ?pa ?pb = (?aMb - ?sqd) / (?aMb + ?sqd)\\<close>\n    and \\<open>?pa \\<noteq> ?pb\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio (S_intersection1 a b) (S_intersection2 a b) (proj2_abs a)\n   (proj2_abs b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n  cross_ratio (S_intersection2 a b) (S_intersection1 a b) (proj2_abs a)\n   (proj2_abs b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n  proj2_abs a \\<noteq> proj2_abs b\n  S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n  S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n  S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n  S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)", "show \"?e2d = (?aMb + ?sqd) / (?aMb - ?sqd)\n    \\<or> ?e2d = (?aMb - ?sqd) / (?aMb + ?sqd)\""], ["proof (prove)\nusing this:\n  cross_ratio (S_intersection1 a b) (S_intersection2 a b) (proj2_abs a)\n   (proj2_abs b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n  cross_ratio (S_intersection2 a b) (S_intersection1 a b) (proj2_abs a)\n   (proj2_abs b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n  proj2_abs a \\<noteq> proj2_abs b\n  S_intersection1 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n  S_intersection2 a b = endpoint_in_S (proj2_abs b) (proj2_abs a) \\<or>\n  S_intersection2 a b = endpoint_in_S (proj2_abs a) (proj2_abs b) \\<and>\n  S_intersection1 a b = endpoint_in_S (proj2_abs b) (proj2_abs a)\n\ngoal (1 subgoal):\n 1. exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "by (unfold exp_2dist_def, auto)"], ["proof (state)\nthis:\n  exp_2dist (proj2_abs a) (proj2_abs b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n  exp_2dist (proj2_abs a) (proj2_abs b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cosh_dist_formula:\n  assumes \"a \\<noteq> 0\" and \"b \\<noteq> 0\" and \"proj2_abs a \\<in> hyp2\" (is \"?pa \\<in> hyp2\")\n  and \"proj2_abs b \\<in> hyp2\" (is \"?pb \\<in> hyp2\")\n  shows \"cosh_dist (proj2_abs a) (proj2_abs b)\n  = \\<bar>a \\<bullet> (M *v b)\\<bar> / sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\"\n  (is \"cosh_dist ?pa ?pb = \\<bar>?aMb\\<bar> / sqrt (?aMa * ?bMb)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "let ?qd = \"quarter_discrim a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "let ?sqd = \"sqrt ?qd\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "let ?e2d = \"exp_2dist ?pa ?pb\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "from assms"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2", "have \"?e2d = (?aMb + ?sqd) / (?aMb - ?sqd)\n    \\<or> ?e2d = (?aMb - ?sqd) / (?aMb + ?sqd)\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n    exp_2dist (proj2_abs a) (proj2_abs b) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))", "by (rule exp_2dist_formula)"], ["proof (state)\nthis:\n  exp_2dist (proj2_abs a) (proj2_abs b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n  exp_2dist (proj2_abs a) (proj2_abs b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "hence \"cosh_dist ?pa ?pb\n    = (sqrt ((?aMb + ?sqd) / (?aMb - ?sqd))\n    + sqrt ((?aMb - ?sqd) / (?aMb + ?sqd)))\n    / 2\""], ["proof (prove)\nusing this:\n  exp_2dist (proj2_abs a) (proj2_abs b) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<or>\n  exp_2dist (proj2_abs a) (proj2_abs b) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    (sqrt\n      ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n       (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) +\n     sqrt\n      ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n       (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)))) /\n    2", "by (unfold cosh_dist_def, auto)"], ["proof (state)\nthis:\n  cosh_dist (proj2_abs a) (proj2_abs b) =\n  (sqrt\n    ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n     (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) +\n   sqrt\n    ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n     (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)))) /\n  2\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "have \"?qd \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> quarter_discrim a b", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 \\<le> quarter_discrim a b\n 2. \\<not> ?P \\<Longrightarrow> 0 \\<le> quarter_discrim a b", "assume \"?pa = ?pb\""], ["proof (state)\nthis:\n  proj2_abs a = proj2_abs b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 \\<le> quarter_discrim a b\n 2. \\<not> ?P \\<Longrightarrow> 0 \\<le> quarter_discrim a b", "thus \"?qd \\<ge> 0\""], ["proof (prove)\nusing this:\n  proj2_abs a = proj2_abs b\n\ngoal (1 subgoal):\n 1. 0 \\<le> quarter_discrim a b", "by (simp add: quarter_discrim_self_zero)"], ["proof (state)\nthis:\n  0 \\<le> quarter_discrim a b\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    0 \\<le> quarter_discrim a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    0 \\<le> quarter_discrim a b", "assume \"?pa \\<noteq> ?pb\""], ["proof (state)\nthis:\n  proj2_abs a \\<noteq> proj2_abs b\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    0 \\<le> quarter_discrim a b", "with \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<in> hyp2\n  proj2_abs a \\<noteq> proj2_abs b", "have \"?qd > 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<in> hyp2\n  proj2_abs a \\<noteq> proj2_abs b\n\ngoal (1 subgoal):\n 1. 0 < quarter_discrim a b", "by (simp add: quarter_discrim_positive)"], ["proof (state)\nthis:\n  0 < quarter_discrim a b\n\ngoal (1 subgoal):\n 1. proj2_abs a \\<noteq> proj2_abs b \\<Longrightarrow>\n    0 \\<le> quarter_discrim a b", "thus \"?qd \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 < quarter_discrim a b\n\ngoal (1 subgoal):\n 1. 0 \\<le> quarter_discrim a b", "by simp"], ["proof (state)\nthis:\n  0 \\<le> quarter_discrim a b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> quarter_discrim a b\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "with real_sqrt_pow2 [of ?qd]"], ["proof (chain)\npicking this:\n  0 \\<le> quarter_discrim a b \\<Longrightarrow>\n  (sqrt (quarter_discrim a b))\\<^sup>2 = quarter_discrim a b\n  0 \\<le> quarter_discrim a b", "have \"?sqd\\<^sup>2 = ?qd\""], ["proof (prove)\nusing this:\n  0 \\<le> quarter_discrim a b \\<Longrightarrow>\n  (sqrt (quarter_discrim a b))\\<^sup>2 = quarter_discrim a b\n  0 \\<le> quarter_discrim a b\n\ngoal (1 subgoal):\n 1. (sqrt (quarter_discrim a b))\\<^sup>2 = quarter_discrim a b", "by simp"], ["proof (state)\nthis:\n  (sqrt (quarter_discrim a b))\\<^sup>2 = quarter_discrim a b\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "hence \"(?aMb + ?sqd) * (?aMb - ?sqd) = ?aMa * ?bMb\""], ["proof (prove)\nusing this:\n  (sqrt (quarter_discrim a b))\\<^sup>2 = quarter_discrim a b\n\ngoal (1 subgoal):\n 1. (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n    a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))", "by (unfold quarter_discrim_def, simp add: algebra_simps power2_eq_square)"], ["proof (state)\nthis:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "from times_divide_times_eq [of\n    \"?aMb + ?sqd\" \"?aMb + ?sqd\" \"?aMb + ?sqd\" \"?aMb - ?sqd\"]"], ["proof (chain)\npicking this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))", "have \"(?aMb + ?sqd) / (?aMb - ?sqd)\n    = (?aMb + ?sqd)\\<^sup>2 / ((?aMb + ?sqd) * (?aMb - ?sqd))\""], ["proof (prove)\nusing this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))\n\ngoal (1 subgoal):\n 1. (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\\<^sup>2 /\n    ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n     (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\\<^sup>2 /\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "with \\<open>(?aMb + ?sqd) * (?aMb - ?sqd) = ?aMa * ?bMb\\<close>"], ["proof (chain)\npicking this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\\<^sup>2 /\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))", "have \"(?aMb + ?sqd) / (?aMb - ?sqd) = (?aMb + ?sqd)\\<^sup>2 / (?aMa * ?bMb)\""], ["proof (prove)\nusing this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\\<^sup>2 /\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))\n\ngoal (1 subgoal):\n 1. (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\\<^sup>2 /\n    (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "by simp"], ["proof (state)\nthis:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\\<^sup>2 /\n  (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "hence \"sqrt ((?aMb + ?sqd) / (?aMb - ?sqd))\n    = \\<bar>?aMb + ?sqd\\<bar> / sqrt (?aMa * ?bMb)\""], ["proof (prove)\nusing this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\\<^sup>2 /\n  (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal (1 subgoal):\n 1. sqrt\n     ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n      (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n    \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "by (simp add: real_sqrt_divide)"], ["proof (state)\nthis:\n  sqrt\n   ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "from times_divide_times_eq [of\n    \"?aMb + ?sqd\" \"?aMb - ?sqd\" \"?aMb - ?sqd\" \"?aMb - ?sqd\"]"], ["proof (chain)\npicking this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) *\n  ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))", "have \"(?aMb - ?sqd) / (?aMb + ?sqd)\n    = (?aMb - ?sqd)\\<^sup>2 / ((?aMb + ?sqd) * (?aMb - ?sqd))\""], ["proof (prove)\nusing this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) *\n  ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))\n\ngoal (1 subgoal):\n 1. (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<^sup>2 /\n    ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n     (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<^sup>2 /\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "with \\<open>(?aMb + ?sqd) * (?aMb - ?sqd) = ?aMa * ?bMb\\<close>"], ["proof (chain)\npicking this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<^sup>2 /\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))", "have \"(?aMb - ?sqd) / (?aMb + ?sqd) = (?aMb - ?sqd)\\<^sup>2 / (?aMa * ?bMb)\""], ["proof (prove)\nusing this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<^sup>2 /\n  ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n   (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)))\n\ngoal (1 subgoal):\n 1. (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<^sup>2 /\n    (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "by simp"], ["proof (state)\nthis:\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<^sup>2 /\n  (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "hence \"sqrt ((?aMb - ?sqd) / (?aMb + ?sqd))\n    = \\<bar>?aMb - ?sqd\\<bar> / sqrt (?aMa * ?bMb)\""], ["proof (prove)\nusing this:\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<^sup>2 /\n  (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal (1 subgoal):\n 1. sqrt\n     ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n      (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))) =\n    \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "by (simp add: real_sqrt_divide)"], ["proof (state)\nthis:\n  sqrt\n   ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))) =\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "from \\<open>a \\<noteq> 0\\<close> and \\<open>b \\<noteq> 0\\<close> and \\<open>?pa \\<in> hyp2\\<close> and \\<open>?pb \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2", "have \"?aMa < 0\" and \"?bMb < 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n  b \\<noteq> 0\n  proj2_abs a \\<in> hyp2\n  proj2_abs b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. a \\<bullet> (M *v a) < 0 &&& b \\<bullet> (M *v b) < 0", "by (simp_all add: K2_imp_M_neg)"], ["proof (state)\nthis:\n  a \\<bullet> (M *v a) < 0\n  b \\<bullet> (M *v b) < 0\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "with \\<open>(?aMb + ?sqd) * (?aMb - ?sqd) = ?aMa * ?bMb\\<close>"], ["proof (chain)\npicking this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))\n  a \\<bullet> (M *v a) < 0\n  b \\<bullet> (M *v b) < 0", "have \"(?aMb + ?sqd) * (?aMb - ?sqd) > 0\""], ["proof (prove)\nusing this:\n  (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))\n  a \\<bullet> (M *v a) < 0\n  b \\<bullet> (M *v b) < 0\n\ngoal (1 subgoal):\n 1. 0 < (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n        (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))", "by (simp add: mult_neg_neg)"], ["proof (state)\nthis:\n  0 < (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n      (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "hence \"?aMb + ?sqd \\<noteq> 0\" and \"?aMb - ?sqd \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n      (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. a \\<bullet> (M *v b) + sqrt (quarter_discrim a b) \\<noteq> 0 &&&\n    a \\<bullet> (M *v b) - sqrt (quarter_discrim a b) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  a \\<bullet> (M *v b) + sqrt (quarter_discrim a b) \\<noteq> 0\n  a \\<bullet> (M *v b) - sqrt (quarter_discrim a b) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "hence \"sgn (?aMb + ?sqd) \\<in> {-1,1}\" and \"sgn (?aMb - ?sqd) \\<in> {-1,1}\""], ["proof (prove)\nusing this:\n  a \\<bullet> (M *v b) + sqrt (quarter_discrim a b) \\<noteq> 0\n  a \\<bullet> (M *v b) - sqrt (quarter_discrim a b) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))\n    \\<in> {- 1, 1} &&&\n    sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<in> {- 1, 1}", "by (simp_all add: sgn_real_def)"], ["proof (state)\nthis:\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) \\<in> {- 1, 1}\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<in> {- 1, 1}\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "from \\<open>(?aMb + ?sqd) * (?aMb - ?sqd) > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n      (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))", "have \"sgn ((?aMb + ?sqd) * (?aMb - ?sqd)) = 1\""], ["proof (prove)\nusing this:\n  0 < (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n      (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. sgn ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n         (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n    1", "by simp"], ["proof (state)\nthis:\n  sgn ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n       (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  1\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "hence \"sgn (?aMb + ?sqd) * sgn (?aMb - ?sqd) = 1\""], ["proof (prove)\nusing this:\n  sgn ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n       (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  1\n\ngoal (1 subgoal):\n 1. sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n    sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n    1", "by (simp add: sgn_mult)"], ["proof (state)\nthis:\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  1\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "with \\<open>sgn (?aMb + ?sqd) \\<in> {-1,1}\\<close> and \\<open>sgn (?aMb - ?sqd) \\<in> {-1,1}\\<close>"], ["proof (chain)\npicking this:\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) \\<in> {- 1, 1}\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<in> {- 1, 1}\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  1", "have \"sgn (?aMb + ?sqd) = sgn (?aMb - ?sqd)\""], ["proof (prove)\nusing this:\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) \\<in> {- 1, 1}\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<in> {- 1, 1}\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) *\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) =\n  1\n\ngoal (1 subgoal):\n 1. sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n    sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))", "by auto"], ["proof (state)\nthis:\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "with abs_plus [of \"?aMb + ?sqd\" \"?aMb - ?sqd\"]"], ["proof (chain)\npicking this:\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<Longrightarrow>\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b) +\n        (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<bar> =\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> +\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar>\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))", "have \"\\<bar>?aMb + ?sqd\\<bar> + \\<bar>?aMb - ?sqd\\<bar> = 2 * \\<bar>?aMb\\<bar>\""], ["proof (prove)\nusing this:\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) \\<Longrightarrow>\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b) +\n        (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\\<bar> =\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> +\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar>\n  sgn (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) =\n  sgn (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))\n\ngoal (1 subgoal):\n 1. \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> +\n    \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> =\n    2 * \\<bar>a \\<bullet> (M *v b)\\<bar>", "by simp"], ["proof (state)\nthis:\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> +\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> =\n  2 * \\<bar>a \\<bullet> (M *v b)\\<bar>\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "with \\<open>sqrt ((?aMb + ?sqd) / (?aMb - ?sqd))\n    = \\<bar>?aMb + ?sqd\\<bar> / sqrt (?aMa * ?bMb)\\<close>\n    and \\<open>sqrt ((?aMb - ?sqd) / (?aMb + ?sqd))\n    = \\<bar>?aMb - ?sqd\\<bar> / sqrt (?aMa * ?bMb)\\<close>\n    and add_divide_distrib [of\n    \"\\<bar>?aMb + ?sqd\\<bar>\" \"\\<bar>?aMb - ?sqd\\<bar>\" \"sqrt (?aMa * ?bMb)\"]"], ["proof (chain)\npicking this:\n  sqrt\n   ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n  sqrt\n   ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))) =\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n  (\\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> +\n   \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar>) /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))) =\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))) +\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> +\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> =\n  2 * \\<bar>a \\<bullet> (M *v b)\\<bar>", "have \"sqrt ((?aMb + ?sqd) / (?aMb - ?sqd))\n    + sqrt ((?aMb - ?sqd) / (?aMb + ?sqd))\n    = 2 * \\<bar>?aMb\\<bar> / sqrt (?aMa * ?bMb)\""], ["proof (prove)\nusing this:\n  sqrt\n   ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) =\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n  sqrt\n   ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))) =\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n  (\\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> +\n   \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar>) /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))) =\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b))) +\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n  \\<bar>a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)\\<bar> +\n  \\<bar>a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)\\<bar> =\n  2 * \\<bar>a \\<bullet> (M *v b)\\<bar>\n\ngoal (1 subgoal):\n 1. sqrt\n     ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n      (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) +\n    sqrt\n     ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n      (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))) =\n    2 * \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "by simp"], ["proof (state)\nthis:\n  sqrt\n   ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) +\n  sqrt\n   ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))) =\n  2 * \\<bar>a \\<bullet> (M *v b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "with \\<open>cosh_dist ?pa ?pb\n    = (sqrt ((?aMb + ?sqd) / (?aMb - ?sqd))\n    + sqrt ((?aMb - ?sqd) / (?aMb + ?sqd)))\n    / 2\\<close>"], ["proof (chain)\npicking this:\n  cosh_dist (proj2_abs a) (proj2_abs b) =\n  (sqrt\n    ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n     (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) +\n   sqrt\n    ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n     (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)))) /\n  2\n  sqrt\n   ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) +\n  sqrt\n   ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))) =\n  2 * \\<bar>a \\<bullet> (M *v b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "show \"cosh_dist ?pa ?pb = \\<bar>?aMb\\<bar> / sqrt (?aMa * ?bMb)\""], ["proof (prove)\nusing this:\n  cosh_dist (proj2_abs a) (proj2_abs b) =\n  (sqrt\n    ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n     (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) +\n   sqrt\n    ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n     (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)))) /\n  2\n  sqrt\n   ((a \\<bullet> (M *v b) + sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) - sqrt (quarter_discrim a b))) +\n  sqrt\n   ((a \\<bullet> (M *v b) - sqrt (quarter_discrim a b)) /\n    (a \\<bullet> (M *v b) + sqrt (quarter_discrim a b))) =\n  2 * \\<bar>a \\<bullet> (M *v b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs a) (proj2_abs b) =\n    \\<bar>a \\<bullet> (M *v b)\\<bar> /\n    sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))", "by simp"], ["proof (state)\nthis:\n  cosh_dist (proj2_abs a) (proj2_abs b) =\n  \\<bar>a \\<bullet> (M *v b)\\<bar> /\n  sqrt (a \\<bullet> (M *v a) * (b \\<bullet> (M *v b)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cosh_dist_perp_special_case:\n  assumes \"\\<bar>x\\<bar> < 1\" and \"\\<bar>y\\<bar> < 1\"\n  shows \"cosh_dist (proj2_abs (vector [x,0,1])) (proj2_abs (vector [0,y,1]))\n  = (cosh_dist K2_centre (proj2_abs (vector [x,0,1])))\n  * (cosh_dist K2_centre (proj2_abs (vector [0,y,1])))\"\n  (is \"cosh_dist ?pa ?pb = (cosh_dist ?po ?pa) * (cosh_dist ?po ?pb)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "have \"vector [x,0,1] \\<noteq> (0::real^3)\" (is \"?a \\<noteq> 0\")\n    and \"vector [0,y,1] \\<noteq> (0::real^3)\" (is \"?b \\<noteq> 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. vector [x, 0, 1] \\<noteq> 0 &&& vector [0, y, 1] \\<noteq> 0", "by (unfold vector_def, simp_all add: vec_eq_iff forall_3)"], ["proof (state)\nthis:\n  vector [x, 0, 1] \\<noteq> 0\n  vector [0, y, 1] \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "have \"?a \\<bullet> (M *v ?a) = x\\<^sup>2 - 1\" (is \"?aMa = x\\<^sup>2 - 1\")\n    and \"?b \\<bullet> (M *v ?b) = y\\<^sup>2 - 1\" (is \"?bMb = y\\<^sup>2 - 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) = x\\<^sup>2 - 1 &&&\n    vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) = y\\<^sup>2 - 1", "unfolding vector_def and M_def and inner_vec_def\n      and matrix_vector_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>UNIV.\n       vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n          (\\<lambda>n x. 0) 1) $\n       i \\<bullet>\n       (\\<chi>i.\n           \\<Sum>j\\<in>UNIV.\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                [vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                    (\\<lambda>n x. 0) 1)]\n                (\\<lambda>n x. 0) 1) $\n             i $\n             j *\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n                (\\<lambda>n x. 0) 1) $\n             j) $\n       i) =\n    x\\<^sup>2 - 1 &&&\n    (\\<Sum>i\\<in>UNIV.\n       vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n          (\\<lambda>n x. 0) 1) $\n       i \\<bullet>\n       (\\<chi>i.\n           \\<Sum>j\\<in>UNIV.\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                [vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                    (\\<lambda>n x. 0) 1)]\n                (\\<lambda>n x. 0) 1) $\n             i $\n             j *\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n                (\\<lambda>n x. 0) 1) $\n             j) $\n       i) =\n    y\\<^sup>2 - 1", "by (simp_all add: sum_3 power2_eq_square)"], ["proof (state)\nthis:\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) = x\\<^sup>2 - 1\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) = y\\<^sup>2 - 1\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "with \\<open>\\<bar>x\\<bar> < 1\\<close> and \\<open>\\<bar>y\\<bar> < 1\\<close>"], ["proof (chain)\npicking this:\n  \\<bar>x\\<bar> < 1\n  \\<bar>y\\<bar> < 1\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) = x\\<^sup>2 - 1\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) = y\\<^sup>2 - 1", "have \"?aMa < 0\" and \"?bMb < 0\""], ["proof (prove)\nusing this:\n  \\<bar>x\\<bar> < 1\n  \\<bar>y\\<bar> < 1\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) = x\\<^sup>2 - 1\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) = y\\<^sup>2 - 1\n\ngoal (1 subgoal):\n 1. vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) < 0 &&&\n    vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) < 0", "by (simp_all add: abs_square_less_1)"], ["proof (state)\nthis:\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) < 0\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) < 0\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "hence \"?pa \\<in> hyp2\" and \"?pb \\<in> hyp2\""], ["proof (prove)\nusing this:\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) < 0\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) < 0\n\ngoal (1 subgoal):\n 1. proj2_abs (vector [x, 0, 1]) \\<in> hyp2 &&&\n    proj2_abs (vector [0, y, 1]) \\<in> hyp2", "by (simp_all add: M_neg_imp_K2)"], ["proof (state)\nthis:\n  proj2_abs (vector [x, 0, 1]) \\<in> hyp2\n  proj2_abs (vector [0, y, 1]) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "with \\<open>?a \\<noteq> 0\\<close> and \\<open>?b \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  vector [x, 0, 1] \\<noteq> 0\n  vector [0, y, 1] \\<noteq> 0\n  proj2_abs (vector [x, 0, 1]) \\<in> hyp2\n  proj2_abs (vector [0, y, 1]) \\<in> hyp2", "have \"cosh_dist ?pa ?pb = \\<bar>?a \\<bullet> (M *v ?b)\\<bar> / sqrt (?aMa * ?bMb)\"\n    (is \"cosh_dist ?pa ?pb = \\<bar>?aMb\\<bar> / sqrt (?aMa * ?bMb)\")"], ["proof (prove)\nusing this:\n  vector [x, 0, 1] \\<noteq> 0\n  vector [0, y, 1] \\<noteq> 0\n  proj2_abs (vector [x, 0, 1]) \\<in> hyp2\n  proj2_abs (vector [0, y, 1]) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n    sqrt\n     (vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) *\n      (vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1])))", "by (rule cosh_dist_formula)"], ["proof (state)\nthis:\n  cosh_dist (proj2_abs (vector [x, 0, 1])) (proj2_abs (vector [0, y, 1])) =\n  \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n  sqrt\n   (vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) *\n    (vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1])))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "also"], ["proof (state)\nthis:\n  cosh_dist (proj2_abs (vector [x, 0, 1])) (proj2_abs (vector [0, y, 1])) =\n  \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n  sqrt\n   (vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) *\n    (vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1])))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "from \\<open>?aMa = x\\<^sup>2 - 1\\<close> and \\<open>?bMb = y\\<^sup>2 - 1\\<close>"], ["proof (chain)\npicking this:\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) = x\\<^sup>2 - 1\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) = y\\<^sup>2 - 1", "have \"\\<dots> = \\<bar>?aMb\\<bar> / sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\""], ["proof (prove)\nusing this:\n  vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) = x\\<^sup>2 - 1\n  vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]) = y\\<^sup>2 - 1\n\ngoal (1 subgoal):\n 1. \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n    sqrt\n     (vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) *\n      (vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]))) =\n    \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n    sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))", "by simp"], ["proof (state)\nthis:\n  \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n  sqrt\n   (vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]) *\n    (vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1]))) =\n  \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n  sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "finally"], ["proof (chain)\npicking this:\n  cosh_dist (proj2_abs (vector [x, 0, 1])) (proj2_abs (vector [0, y, 1])) =\n  \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n  sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))", "have \"cosh_dist ?pa ?pb = 1 / sqrt ((1 - x\\<^sup>2) * (1 - y\\<^sup>2))\""], ["proof (prove)\nusing this:\n  cosh_dist (proj2_abs (vector [x, 0, 1])) (proj2_abs (vector [0, y, 1])) =\n  \\<bar>vector [x, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n  sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    1 / sqrt ((1 - x\\<^sup>2) * (1 - y\\<^sup>2))", "unfolding vector_def and M_def and inner_vec_def\n      and matrix_vector_mult_def"], ["proof (prove)\nusing this:\n  cosh_dist\n   (proj2_abs\n     (vec_lambda\n       (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n         (\\<lambda>n x. 0) 1)))\n   (proj2_abs\n     (vec_lambda\n       (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n         (\\<lambda>n x. 0) 1))) =\n  \\<bar>\\<Sum>i\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n             (\\<lambda>n x. 0) 1) $\n          i \\<bullet>\n          (\\<chi>i.\n              \\<Sum>j\\<in>UNIV.\n                vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                   [vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                       (\\<lambda>n x. 0) 1),\n                    vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                       (\\<lambda>n x. 0) 1),\n                    vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                       [0, 0, - 1] (\\<lambda>n x. 0) 1)]\n                   (\\<lambda>n x. 0) 1) $\n                i $\n                j *\n                vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n                   (\\<lambda>n x. 0) 1) $\n                j) $\n          i\\<bar> /\n  sqrt ((x\\<^sup>2 - 1) * (y\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. cosh_dist\n     (proj2_abs\n       (vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n           (\\<lambda>n x. 0) 1)))\n     (proj2_abs\n       (vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n           (\\<lambda>n x. 0) 1))) =\n    1 / sqrt ((1 - x\\<^sup>2) * (1 - y\\<^sup>2))", "by (simp add: sum_3 algebra_simps)"], ["proof (state)\nthis:\n  cosh_dist (proj2_abs (vector [x, 0, 1])) (proj2_abs (vector [0, y, 1])) =\n  1 / sqrt ((1 - x\\<^sup>2) * (1 - y\\<^sup>2))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "let ?o = \"vector [0,0,1]\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "let ?oMa = \"?o \\<bullet> (M *v ?a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "let ?oMb = \"?o \\<bullet> (M *v ?b)\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "let ?oMo = \"?o \\<bullet> (M *v ?o)\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "from K2_centre_non_zero and \\<open>?a \\<noteq> 0\\<close> and \\<open>?b \\<noteq> 0\\<close>\n    and K2_centre_in_K2 and \\<open>?pa \\<in> hyp2\\<close> and \\<open>?pb \\<in> hyp2\\<close>\n    and cosh_dist_formula [of ?o]"], ["proof (chain)\npicking this:\n  vector [0, 0, 1] \\<noteq> 0\n  vector [x, 0, 1] \\<noteq> 0\n  vector [0, y, 1] \\<noteq> 0\n  K2_centre \\<in> hyp2\n  proj2_abs (vector [x, 0, 1]) \\<in> hyp2\n  proj2_abs (vector [0, y, 1]) \\<in> hyp2\n  \\<lbrakk>vector [0, 0, 1] \\<noteq> 0; ?b \\<noteq> 0;\n   proj2_abs (vector [0, 0, 1]) \\<in> hyp2; proj2_abs ?b \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> cosh_dist (proj2_abs (vector [0, 0, 1]))\n                     (proj2_abs ?b) =\n                    \\<bar>vector [0, 0, 1] \\<bullet> (M *v ?b)\\<bar> /\n                    sqrt\n                     (vector [0, 0, 1] \\<bullet> (M *v vector [0, 0, 1]) *\n                      (?b \\<bullet> (M *v ?b)))", "have \"cosh_dist ?po ?pa = \\<bar>?oMa\\<bar> / sqrt (?oMo * ?aMa)\"\n    and \"cosh_dist ?po ?pb = \\<bar>?oMb\\<bar> / sqrt (?oMo * ?bMb)\""], ["proof (prove)\nusing this:\n  vector [0, 0, 1] \\<noteq> 0\n  vector [x, 0, 1] \\<noteq> 0\n  vector [0, y, 1] \\<noteq> 0\n  K2_centre \\<in> hyp2\n  proj2_abs (vector [x, 0, 1]) \\<in> hyp2\n  proj2_abs (vector [0, y, 1]) \\<in> hyp2\n  \\<lbrakk>vector [0, 0, 1] \\<noteq> 0; ?b \\<noteq> 0;\n   proj2_abs (vector [0, 0, 1]) \\<in> hyp2; proj2_abs ?b \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> cosh_dist (proj2_abs (vector [0, 0, 1]))\n                     (proj2_abs ?b) =\n                    \\<bar>vector [0, 0, 1] \\<bullet> (M *v ?b)\\<bar> /\n                    sqrt\n                     (vector [0, 0, 1] \\<bullet> (M *v vector [0, 0, 1]) *\n                      (?b \\<bullet> (M *v ?b)))\n\ngoal (1 subgoal):\n 1. cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) =\n    \\<bar>vector [0, 0, 1] \\<bullet> (M *v vector [x, 0, 1])\\<bar> /\n    sqrt\n     (vector [0, 0, 1] \\<bullet> (M *v vector [0, 0, 1]) *\n      (vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1]))) &&&\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1])) =\n    \\<bar>vector [0, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n    sqrt\n     (vector [0, 0, 1] \\<bullet> (M *v vector [0, 0, 1]) *\n      (vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1])))", "by (unfold K2_centre_def, simp_all)"], ["proof (state)\nthis:\n  cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) =\n  \\<bar>vector [0, 0, 1] \\<bullet> (M *v vector [x, 0, 1])\\<bar> /\n  sqrt\n   (vector [0, 0, 1] \\<bullet> (M *v vector [0, 0, 1]) *\n    (vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1])))\n  cosh_dist K2_centre (proj2_abs (vector [0, y, 1])) =\n  \\<bar>vector [0, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n  sqrt\n   (vector [0, 0, 1] \\<bullet> (M *v vector [0, 0, 1]) *\n    (vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1])))\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "hence \"cosh_dist ?po ?pa = 1 / sqrt (1 - x\\<^sup>2)\"\n    and \"cosh_dist ?po ?pb = 1 / sqrt (1 - y\\<^sup>2)\""], ["proof (prove)\nusing this:\n  cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) =\n  \\<bar>vector [0, 0, 1] \\<bullet> (M *v vector [x, 0, 1])\\<bar> /\n  sqrt\n   (vector [0, 0, 1] \\<bullet> (M *v vector [0, 0, 1]) *\n    (vector [x, 0, 1] \\<bullet> (M *v vector [x, 0, 1])))\n  cosh_dist K2_centre (proj2_abs (vector [0, y, 1])) =\n  \\<bar>vector [0, 0, 1] \\<bullet> (M *v vector [0, y, 1])\\<bar> /\n  sqrt\n   (vector [0, 0, 1] \\<bullet> (M *v vector [0, 0, 1]) *\n    (vector [0, y, 1] \\<bullet> (M *v vector [0, y, 1])))\n\ngoal (1 subgoal):\n 1. cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) =\n    1 / sqrt (1 - x\\<^sup>2) &&&\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1])) =\n    1 / sqrt (1 - y\\<^sup>2)", "unfolding vector_def and M_def and inner_vec_def\n      and matrix_vector_mult_def"], ["proof (prove)\nusing this:\n  cosh_dist K2_centre\n   (proj2_abs\n     (vec_lambda\n       (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n         (\\<lambda>n x. 0) 1))) =\n  \\<bar>\\<Sum>i\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1]\n             (\\<lambda>n x. 0) 1) $\n          i \\<bullet>\n          (\\<chi>i.\n              \\<Sum>j\\<in>UNIV.\n                vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                   [vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                       (\\<lambda>n x. 0) 1),\n                    vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                       (\\<lambda>n x. 0) 1),\n                    vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                       [0, 0, - 1] (\\<lambda>n x. 0) 1)]\n                   (\\<lambda>n x. 0) 1) $\n                i $\n                j *\n                vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n                   (\\<lambda>n x. 0) 1) $\n                j) $\n          i\\<bar> /\n  sqrt\n   ((\\<Sum>i\\<in>UNIV.\n       vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1]\n          (\\<lambda>n x. 0) 1) $\n       i \\<bullet>\n       (\\<chi>i.\n           \\<Sum>j\\<in>UNIV.\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                [vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                    (\\<lambda>n x. 0) 1)]\n                (\\<lambda>n x. 0) 1) $\n             i $\n             j *\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1]\n                (\\<lambda>n x. 0) 1) $\n             j) $\n       i) *\n    (\\<Sum>i\\<in>UNIV.\n       vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n          (\\<lambda>n x. 0) 1) $\n       i \\<bullet>\n       (\\<chi>i.\n           \\<Sum>j\\<in>UNIV.\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                [vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                    (\\<lambda>n x. 0) 1)]\n                (\\<lambda>n x. 0) 1) $\n             i $\n             j *\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n                (\\<lambda>n x. 0) 1) $\n             j) $\n       i))\n  cosh_dist K2_centre\n   (proj2_abs\n     (vec_lambda\n       (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n         (\\<lambda>n x. 0) 1))) =\n  \\<bar>\\<Sum>i\\<in>UNIV.\n          vec_lambda\n           (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1]\n             (\\<lambda>n x. 0) 1) $\n          i \\<bullet>\n          (\\<chi>i.\n              \\<Sum>j\\<in>UNIV.\n                vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                   [vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                       (\\<lambda>n x. 0) 1),\n                    vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                       (\\<lambda>n x. 0) 1),\n                    vec_lambda\n                     (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                       [0, 0, - 1] (\\<lambda>n x. 0) 1)]\n                   (\\<lambda>n x. 0) 1) $\n                i $\n                j *\n                vec_lambda\n                 (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n                   (\\<lambda>n x. 0) 1) $\n                j) $\n          i\\<bar> /\n  sqrt\n   ((\\<Sum>i\\<in>UNIV.\n       vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1]\n          (\\<lambda>n x. 0) 1) $\n       i \\<bullet>\n       (\\<chi>i.\n           \\<Sum>j\\<in>UNIV.\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                [vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                    (\\<lambda>n x. 0) 1)]\n                (\\<lambda>n x. 0) 1) $\n             i $\n             j *\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, 1]\n                (\\<lambda>n x. 0) 1) $\n             j) $\n       i) *\n    (\\<Sum>i\\<in>UNIV.\n       vec_lambda\n        (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n          (\\<lambda>n x. 0) 1) $\n       i \\<bullet>\n       (\\<chi>i.\n           \\<Sum>j\\<in>UNIV.\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x))\n                [vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [1, 0, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 1, 0]\n                    (\\<lambda>n x. 0) 1),\n                 vec_lambda\n                  (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, 0, - 1]\n                    (\\<lambda>n x. 0) 1)]\n                (\\<lambda>n x. 0) 1) $\n             i $\n             j *\n             vec_lambda\n              (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n                (\\<lambda>n x. 0) 1) $\n             j) $\n       i))\n\ngoal (1 subgoal):\n 1. cosh_dist K2_centre\n     (proj2_abs\n       (vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [x, 0, 1]\n           (\\<lambda>n x. 0) 1))) =\n    1 / sqrt (1 - x\\<^sup>2) &&&\n    cosh_dist K2_centre\n     (proj2_abs\n       (vec_lambda\n         (foldr (\\<lambda>x f n. (f (n + 1))(n := x)) [0, y, 1]\n           (\\<lambda>n x. 0) 1))) =\n    1 / sqrt (1 - y\\<^sup>2)", "by (simp_all add: sum_3 power2_eq_square)"], ["proof (state)\nthis:\n  cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) =\n  1 / sqrt (1 - x\\<^sup>2)\n  cosh_dist K2_centre (proj2_abs (vector [0, y, 1])) =\n  1 / sqrt (1 - y\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "with \\<open>cosh_dist ?pa ?pb = 1 / sqrt ((1 - x\\<^sup>2) * (1 - y\\<^sup>2))\\<close>"], ["proof (chain)\npicking this:\n  cosh_dist (proj2_abs (vector [x, 0, 1])) (proj2_abs (vector [0, y, 1])) =\n  1 / sqrt ((1 - x\\<^sup>2) * (1 - y\\<^sup>2))\n  cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) =\n  1 / sqrt (1 - x\\<^sup>2)\n  cosh_dist K2_centre (proj2_abs (vector [0, y, 1])) =\n  1 / sqrt (1 - y\\<^sup>2)", "show \"cosh_dist ?pa ?pb = cosh_dist ?po ?pa * cosh_dist ?po ?pb\""], ["proof (prove)\nusing this:\n  cosh_dist (proj2_abs (vector [x, 0, 1])) (proj2_abs (vector [0, y, 1])) =\n  1 / sqrt ((1 - x\\<^sup>2) * (1 - y\\<^sup>2))\n  cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) =\n  1 / sqrt (1 - x\\<^sup>2)\n  cosh_dist K2_centre (proj2_abs (vector [0, y, 1])) =\n  1 / sqrt (1 - y\\<^sup>2)\n\ngoal (1 subgoal):\n 1. cosh_dist (proj2_abs (vector [x, 0, 1]))\n     (proj2_abs (vector [0, y, 1])) =\n    cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n    cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))", "by (simp add: real_sqrt_mult)"], ["proof (state)\nthis:\n  cosh_dist (proj2_abs (vector [x, 0, 1])) (proj2_abs (vector [0, y, 1])) =\n  cosh_dist K2_centre (proj2_abs (vector [x, 0, 1])) *\n  cosh_dist K2_centre (proj2_abs (vector [0, y, 1]))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma K2_isometry_cross_ratio_endpoints_in_S:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"is_K2_isometry J\" and \"a \\<noteq> b\"\n  shows \"cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n  (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J) (apply_cltn2 b J)\n  = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\"\n  (is \"cross_ratio ?pJ ?qJ ?aJ ?bJ = cross_ratio ?p ?q a b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "let ?l = \"proj2_line_through a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "have \"proj2_incident a ?l\" and \"proj2_incident b ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident a (proj2_line_through a b) &&&\n    proj2_incident b (proj2_line_through a b)", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "with \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)", "have \"proj2_incident ?p ?l\" and \"proj2_incident ?q ?l\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) (proj2_line_through a b) &&&\n    proj2_incident (endpoint_in_S b a) (proj2_line_through a b)", "by (simp_all add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "with \\<open>proj2_incident a ?l\\<close> and \\<open>proj2_incident b ?l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)", "have \"proj2_set_Col {?p,?q,a,b}\""], ["proof (prove)\nusing this:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}", "by (unfold proj2_set_Col_def) (simp add: exI [of _ ?l])"], ["proof (state)\nthis:\n  proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"?p \\<noteq> ?q\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<noteq> endpoint_in_S b a", "by (simp add: endpoint_in_S_swap)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"?p \\<in> S\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. endpoint_in_S a b \\<in> S", "by (simp add: endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S a b \\<in> S\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "with \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  endpoint_in_S a b \\<in> S", "have \"a \\<noteq> ?p\" and \"b \\<noteq> ?p\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  endpoint_in_S a b \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> endpoint_in_S a b &&& b \\<noteq> endpoint_in_S a b", "by (simp_all add: hyp2_S_not_equal)"], ["proof (state)\nthis:\n  a \\<noteq> endpoint_in_S a b\n  b \\<noteq> endpoint_in_S a b\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "with \\<open>proj2_set_Col {?p,?q,a,b}\\<close> and \\<open>?p \\<noteq> ?q\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n  a \\<noteq> endpoint_in_S a b\n  b \\<noteq> endpoint_in_S a b", "show \"cross_ratio ?pJ ?qJ ?aJ ?bJ = cross_ratio ?p ?q a b\""], ["proof (prove)\nusing this:\n  proj2_set_Col {endpoint_in_S a b, endpoint_in_S b a, a, b}\n  endpoint_in_S a b \\<noteq> endpoint_in_S b a\n  a \\<noteq> endpoint_in_S a b\n  b \\<noteq> endpoint_in_S a b\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (rule cross_ratio_cltn2)"], ["proof (state)\nthis:\n  cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n   (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J) (apply_cltn2 b J) =\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma K2_isometry_exp_2dist:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"is_K2_isometry J\"\n  shows \"exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b\"\n  (is \"exp_2dist ?aJ ?bJ = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "assume \"a = b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b\n 2. \\<not> ?P \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "thus \"exp_2dist ?aJ ?bJ = exp_2dist a b\""], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "by (unfold exp_2dist_def) simp"], ["proof (state)\nthis:\n  exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "assume \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "with apply_cltn2_injective"], ["proof (chain)\npicking this:\n  apply_cltn2 ?p ?C = apply_cltn2 ?q ?C \\<Longrightarrow> ?p = ?q\n  a \\<noteq> b", "have \"?aJ \\<noteq> ?bJ\""], ["proof (prove)\nusing this:\n  apply_cltn2 ?p ?C = apply_cltn2 ?q ?C \\<Longrightarrow> ?p = ?q\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. apply_cltn2 a J \\<noteq> apply_cltn2 b J", "by fast"], ["proof (state)\nthis:\n  apply_cltn2 a J \\<noteq> apply_cltn2 b J\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "let ?p = \"endpoint_in_S a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "let ?q = \"endpoint_in_S b a\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "let ?aJ = \"apply_cltn2 a J\"\n    and ?bJ = \"apply_cltn2 b J\"\n    and ?pJ = \"apply_cltn2 ?p J\"\n    and ?qJ = \"apply_cltn2 ?q J\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  is_K2_isometry J", "have \"endpoint_in_S ?aJ ?bJ = ?pJ\" and \"endpoint_in_S ?bJ ?aJ = ?qJ\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J) =\n    apply_cltn2 (endpoint_in_S a b) J &&&\n    endpoint_in_S (apply_cltn2 b J) (apply_cltn2 a J) =\n    apply_cltn2 (endpoint_in_S b a) J", "by (simp_all add: K2_isometry_endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J) =\n  apply_cltn2 (endpoint_in_S a b) J\n  endpoint_in_S (apply_cltn2 b J) (apply_cltn2 a J) =\n  apply_cltn2 (endpoint_in_S b a) J\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "from assms and \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  is_K2_isometry J\n  a \\<noteq> b", "have \"cross_ratio ?pJ ?qJ ?aJ ?bJ = cross_ratio ?p ?q a b\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  is_K2_isometry J\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n     (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J)\n     (apply_cltn2 b J) =\n    cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (rule K2_isometry_cross_ratio_endpoints_in_S)"], ["proof (state)\nthis:\n  cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n   (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J) (apply_cltn2 b J) =\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "with \\<open>endpoint_in_S ?aJ ?bJ = ?pJ\\<close> and \\<open>endpoint_in_S ?bJ ?aJ = ?qJ\\<close>\n    and \\<open>a \\<noteq> b\\<close> and \\<open>?aJ \\<noteq> ?bJ\\<close>"], ["proof (chain)\npicking this:\n  endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J) =\n  apply_cltn2 (endpoint_in_S a b) J\n  endpoint_in_S (apply_cltn2 b J) (apply_cltn2 a J) =\n  apply_cltn2 (endpoint_in_S b a) J\n  a \\<noteq> b\n  apply_cltn2 a J \\<noteq> apply_cltn2 b J\n  cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n   (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J) (apply_cltn2 b J) =\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "show \"exp_2dist ?aJ ?bJ = exp_2dist a b\""], ["proof (prove)\nusing this:\n  endpoint_in_S (apply_cltn2 a J) (apply_cltn2 b J) =\n  apply_cltn2 (endpoint_in_S a b) J\n  endpoint_in_S (apply_cltn2 b J) (apply_cltn2 a J) =\n  apply_cltn2 (endpoint_in_S b a) J\n  a \\<noteq> b\n  apply_cltn2 a J \\<noteq> apply_cltn2 b J\n  cross_ratio (apply_cltn2 (endpoint_in_S a b) J)\n   (apply_cltn2 (endpoint_in_S b a) J) (apply_cltn2 a J) (apply_cltn2 b J) =\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b", "by (unfold exp_2dist_def) simp"], ["proof (state)\nthis:\n  exp_2dist (apply_cltn2 a J) (apply_cltn2 b J) = exp_2dist a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma K2_isometry_cosh_dist:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"is_K2_isometry J\"\n  shows \"cosh_dist (apply_cltn2 a J) (apply_cltn2 b J) = cosh_dist a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist (apply_cltn2 a J) (apply_cltn2 b J) = cosh_dist a b", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. cosh_dist (apply_cltn2 a J) (apply_cltn2 b J) = cosh_dist a b", "by (unfold cosh_dist_def) (simp add: K2_isometry_exp_2dist)"], ["", "lemma cosh_dist_perp:\n  assumes \"M_perp l m\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\"\n  and \"proj2_incident b m\" and \"proj2_incident c m\"\n  shows \"cosh_dist a c = cosh_dist b a * cosh_dist b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "from \\<open>M_perp l m\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>proj2_incident b l\\<close>\n    and \\<open>proj2_incident b m\\<close> and M_perp_to_compass [of l m b b]"], ["proof (chain)\npicking this:\n  M_perp l m\n  b \\<in> hyp2\n  proj2_incident b l\n  proj2_incident b m\n  \\<lbrakk>M_perp l m; b \\<in> hyp2; proj2_incident b l; b \\<in> hyp2;\n   proj2_incident b m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2_line equator J = l \\<and>\n                       apply_cltn2_line meridian J = m", "obtain J where \"is_K2_isometry J\" and \"apply_cltn2_line equator J = l\"\n    and \"apply_cltn2_line meridian J = m\""], ["proof (prove)\nusing this:\n  M_perp l m\n  b \\<in> hyp2\n  proj2_incident b l\n  proj2_incident b m\n  \\<lbrakk>M_perp l m; b \\<in> hyp2; proj2_incident b l; b \\<in> hyp2;\n   proj2_incident b m\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2_line equator J = l \\<and>\n                       apply_cltn2_line meridian J = m\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; apply_cltn2_line equator J = l;\n         apply_cltn2_line meridian J = m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  apply_cltn2_line equator J = l\n  apply_cltn2_line meridian J = m\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "let ?Ji = \"cltn2_inverse J\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "let ?aJi = \"apply_cltn2 a ?Ji\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "let ?bJi = \"apply_cltn2 b ?Ji\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "let ?cJi = \"apply_cltn2 c ?Ji\""], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "from \\<open>apply_cltn2_line equator J = l\\<close> and \\<open>apply_cltn2_line meridian J = m\\<close>\n    and \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident b l\\<close>\n    and \\<open>proj2_incident b m\\<close> and \\<open>proj2_incident c m\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2_line equator J = l\n  apply_cltn2_line meridian J = m\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident b m\n  proj2_incident c m", "have \"proj2_incident ?aJi equator\" and \"proj2_incident ?bJi equator\"\n    and \"proj2_incident ?bJi meridian\" and \"proj2_incident ?cJi meridian\""], ["proof (prove)\nusing this:\n  apply_cltn2_line equator J = l\n  apply_cltn2_line meridian J = m\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident b m\n  proj2_incident c m\n\ngoal (1 subgoal):\n 1. (proj2_incident (apply_cltn2 a (cltn2_inverse J)) equator &&&\n     proj2_incident (apply_cltn2 b (cltn2_inverse J)) equator) &&&\n    proj2_incident (apply_cltn2 b (cltn2_inverse J)) meridian &&&\n    proj2_incident (apply_cltn2 c (cltn2_inverse J)) meridian", "by (auto simp add: apply_cltn2_incident)"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 a (cltn2_inverse J)) equator\n  proj2_incident (apply_cltn2 b (cltn2_inverse J)) equator\n  proj2_incident (apply_cltn2 b (cltn2_inverse J)) meridian\n  proj2_incident (apply_cltn2 c (cltn2_inverse J)) meridian\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "have \"is_K2_isometry ?Ji\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. is_K2_isometry (cltn2_inverse J)", "by (rule cltn2_inverse_is_K2_isometry)"], ["proof (state)\nthis:\n  is_K2_isometry (cltn2_inverse J)\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "with \\<open>a \\<in> hyp2\\<close> and \\<open>c \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  c \\<in> hyp2\n  is_K2_isometry (cltn2_inverse J)", "have \"?aJi \\<in> hyp2\" and \"?cJi \\<in> hyp2\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  c \\<in> hyp2\n  is_K2_isometry (cltn2_inverse J)\n\ngoal (1 subgoal):\n 1. apply_cltn2 a (cltn2_inverse J) \\<in> hyp2 &&&\n    apply_cltn2 c (cltn2_inverse J) \\<in> hyp2", "by (simp_all add: statement60_one_way)"], ["proof (state)\nthis:\n  apply_cltn2 a (cltn2_inverse J) \\<in> hyp2\n  apply_cltn2 c (cltn2_inverse J) \\<in> hyp2\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "from \\<open>?aJi \\<in> hyp2\\<close> and \\<open>proj2_incident ?aJi equator\\<close>\n    and on_equator_in_hyp2_rep"], ["proof (chain)\npicking this:\n  apply_cltn2 a (cltn2_inverse J) \\<in> hyp2\n  proj2_incident (apply_cltn2 a (cltn2_inverse J)) equator\n  \\<lbrakk>?a \\<in> hyp2; proj2_incident ?a equator\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x.\n                       \\<bar>x\\<bar> < 1 \\<and>\n                       ?a = proj2_abs (vector [x, 0, 1])", "obtain x where \"\\<bar>x\\<bar> < 1\" and \"?aJi = proj2_abs (vector [x,0,1])\""], ["proof (prove)\nusing this:\n  apply_cltn2 a (cltn2_inverse J) \\<in> hyp2\n  proj2_incident (apply_cltn2 a (cltn2_inverse J)) equator\n  \\<lbrakk>?a \\<in> hyp2; proj2_incident ?a equator\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x.\n                       \\<bar>x\\<bar> < 1 \\<and>\n                       ?a = proj2_abs (vector [x, 0, 1])\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>\\<bar>x\\<bar> < 1;\n         apply_cltn2 a (cltn2_inverse J) =\n         proj2_abs (vector [x, 0, 1])\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<bar>x\\<bar> < 1\n  apply_cltn2 a (cltn2_inverse J) = proj2_abs (vector [x, 0, 1])\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "moreover"], ["proof (state)\nthis:\n  \\<bar>x\\<bar> < 1\n  apply_cltn2 a (cltn2_inverse J) = proj2_abs (vector [x, 0, 1])\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "from \\<open>?cJi \\<in> hyp2\\<close> and \\<open>proj2_incident ?cJi meridian\\<close>\n    and on_meridian_in_hyp2_rep"], ["proof (chain)\npicking this:\n  apply_cltn2 c (cltn2_inverse J) \\<in> hyp2\n  proj2_incident (apply_cltn2 c (cltn2_inverse J)) meridian\n  \\<lbrakk>?a \\<in> hyp2; proj2_incident ?a meridian\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y.\n                       \\<bar>y\\<bar> < 1 \\<and>\n                       ?a = proj2_abs (vector [0, y, 1])", "obtain y where \"\\<bar>y\\<bar> < 1\" and \"?cJi = proj2_abs (vector [0,y,1])\""], ["proof (prove)\nusing this:\n  apply_cltn2 c (cltn2_inverse J) \\<in> hyp2\n  proj2_incident (apply_cltn2 c (cltn2_inverse J)) meridian\n  \\<lbrakk>?a \\<in> hyp2; proj2_incident ?a meridian\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y.\n                       \\<bar>y\\<bar> < 1 \\<and>\n                       ?a = proj2_abs (vector [0, y, 1])\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>\\<bar>y\\<bar> < 1;\n         apply_cltn2 c (cltn2_inverse J) =\n         proj2_abs (vector [0, y, 1])\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<bar>y\\<bar> < 1\n  apply_cltn2 c (cltn2_inverse J) = proj2_abs (vector [0, y, 1])\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "moreover"], ["proof (state)\nthis:\n  \\<bar>y\\<bar> < 1\n  apply_cltn2 c (cltn2_inverse J) = proj2_abs (vector [0, y, 1])\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "from \\<open>proj2_incident ?bJi equator\\<close> and \\<open>proj2_incident ?bJi meridian\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (apply_cltn2 b (cltn2_inverse J)) equator\n  proj2_incident (apply_cltn2 b (cltn2_inverse J)) meridian", "have \"?bJi = K2_centre\""], ["proof (prove)\nusing this:\n  proj2_incident (apply_cltn2 b (cltn2_inverse J)) equator\n  proj2_incident (apply_cltn2 b (cltn2_inverse J)) meridian\n\ngoal (1 subgoal):\n 1. apply_cltn2 b (cltn2_inverse J) = K2_centre", "by (rule on_equator_meridian_is_K2_centre)"], ["proof (state)\nthis:\n  apply_cltn2 b (cltn2_inverse J) = K2_centre\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>x\\<bar> < 1\n  apply_cltn2 a (cltn2_inverse J) = proj2_abs (vector [x, 0, 1])\n  \\<bar>y\\<bar> < 1\n  apply_cltn2 c (cltn2_inverse J) = proj2_abs (vector [0, y, 1])\n  apply_cltn2 b (cltn2_inverse J) = K2_centre", "have \"cosh_dist ?aJi ?cJi = cosh_dist ?bJi ?aJi * cosh_dist ?bJi ?cJi\""], ["proof (prove)\nusing this:\n  \\<bar>x\\<bar> < 1\n  apply_cltn2 a (cltn2_inverse J) = proj2_abs (vector [x, 0, 1])\n  \\<bar>y\\<bar> < 1\n  apply_cltn2 c (cltn2_inverse J) = proj2_abs (vector [0, y, 1])\n  apply_cltn2 b (cltn2_inverse J) = K2_centre\n\ngoal (1 subgoal):\n 1. cosh_dist (apply_cltn2 a (cltn2_inverse J))\n     (apply_cltn2 c (cltn2_inverse J)) =\n    cosh_dist (apply_cltn2 b (cltn2_inverse J))\n     (apply_cltn2 a (cltn2_inverse J)) *\n    cosh_dist (apply_cltn2 b (cltn2_inverse J))\n     (apply_cltn2 c (cltn2_inverse J))", "by (simp add: cosh_dist_perp_special_case)"], ["proof (state)\nthis:\n  cosh_dist (apply_cltn2 a (cltn2_inverse J))\n   (apply_cltn2 c (cltn2_inverse J)) =\n  cosh_dist (apply_cltn2 b (cltn2_inverse J))\n   (apply_cltn2 a (cltn2_inverse J)) *\n  cosh_dist (apply_cltn2 b (cltn2_inverse J))\n   (apply_cltn2 c (cltn2_inverse J))\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "with \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>c \\<in> hyp2\\<close> and \\<open>is_K2_isometry ?Ji\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  is_K2_isometry (cltn2_inverse J)\n  cosh_dist (apply_cltn2 a (cltn2_inverse J))\n   (apply_cltn2 c (cltn2_inverse J)) =\n  cosh_dist (apply_cltn2 b (cltn2_inverse J))\n   (apply_cltn2 a (cltn2_inverse J)) *\n  cosh_dist (apply_cltn2 b (cltn2_inverse J))\n   (apply_cltn2 c (cltn2_inverse J))", "show \"cosh_dist a c = cosh_dist b a * cosh_dist b c\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  is_K2_isometry (cltn2_inverse J)\n  cosh_dist (apply_cltn2 a (cltn2_inverse J))\n   (apply_cltn2 c (cltn2_inverse J)) =\n  cosh_dist (apply_cltn2 b (cltn2_inverse J))\n   (apply_cltn2 a (cltn2_inverse J)) *\n  cosh_dist (apply_cltn2 b (cltn2_inverse J))\n   (apply_cltn2 c (cltn2_inverse J))\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "by (simp add: K2_isometry_cosh_dist)"], ["proof (state)\nthis:\n  cosh_dist a c = cosh_dist b a * cosh_dist b c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma are_endpoints_in_S_ordered_cross_ratio:\n  assumes \"are_endpoints_in_S p q a b\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\" (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")\n  shows \"cross_ratio p q a b \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b", "have \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n    and \"proj2_set_Col {p,q,a,b}\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. (p \\<noteq> q &&& p \\<in> S &&& q \\<in> S) &&&\n    a \\<in> hyp2 &&& b \\<in> hyp2 &&& proj2_set_Col {p, q, a, b}", "by (unfold are_endpoints_in_S_def) simp_all"], ["proof (state)\nthis:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S", "have \"z_non_zero a\" and \"z_non_zero b\" and \"z_non_zero p\" and \"z_non_zero q\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. (z_non_zero a &&& z_non_zero b) &&& z_non_zero p &&& z_non_zero q", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero p\n  z_non_zero q\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "hence \"proj2_abs (cart2_append1 p) = p\" (is \"proj2_abs ?cp1 = p\")\n    and \"proj2_abs (cart2_append1 q) = q\" (is \"proj2_abs ?cq1 = q\")\n    and \"proj2_abs (cart2_append1 a) = a\" (is \"proj2_abs ?ca1 = a\")\n    and \"proj2_abs (cart2_append1 b) = b\" (is \"proj2_abs ?cb1 = b\")"], ["proof (prove)\nusing this:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero p\n  z_non_zero q\n\ngoal (1 subgoal):\n 1. (proj2_abs (cart2_append1 p) = p &&&\n     proj2_abs (cart2_append1 q) = q) &&&\n    proj2_abs (cart2_append1 a) = a &&& proj2_abs (cart2_append1 b) = b", "by (simp_all add: proj2_abs_cart2_append1)"], ["proof (state)\nthis:\n  proj2_abs (cart2_append1 p) = p\n  proj2_abs (cart2_append1 q) = q\n  proj2_abs (cart2_append1 a) = a\n  proj2_abs (cart2_append1 b) = b\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>b \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  p \\<in> S", "have \"b \\<noteq> p\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. b \\<noteq> p", "by (rule hyp2_S_not_equal)"], ["proof (state)\nthis:\n  b \\<noteq> p\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "with \\<open>z_non_zero a\\<close> and \\<open>z_non_zero b\\<close> and \\<open>z_non_zero p\\<close>\n     and \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close> and cart2_append1_between_right_strict [of a b p]"], ["proof (chain)\npicking this:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero p\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  \\<lbrakk>z_non_zero a; z_non_zero b; z_non_zero p;\n   B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p; b \\<noteq> p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k\\<ge>0.\n                       k < 1 \\<and>\n                       cart2_append1 b =\n                       k *\\<^sub>R cart2_append1 p +\n                       (1 - k) *\\<^sub>R cart2_append1 a\n  b \\<noteq> p", "obtain j where \"j \\<ge> 0\" and \"j < 1\" and \"?cb1 = j *\\<^sub>R ?cp1 + (1-j) *\\<^sub>R ?ca1\""], ["proof (prove)\nusing this:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero p\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  \\<lbrakk>z_non_zero a; z_non_zero b; z_non_zero p;\n   B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p; b \\<noteq> p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k\\<ge>0.\n                       k < 1 \\<and>\n                       cart2_append1 b =\n                       k *\\<^sub>R cart2_append1 p +\n                       (1 - k) *\\<^sub>R cart2_append1 a\n  b \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>0 \\<le> j; j < 1;\n         cart2_append1 b =\n         j *\\<^sub>R cart2_append1 p +\n         (1 - j) *\\<^sub>R cart2_append1 a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 \\<le> j\n  j < 1\n  cart2_append1 b =\n  j *\\<^sub>R cart2_append1 p + (1 - j) *\\<^sub>R cart2_append1 a\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>proj2_set_Col {p,q,a,b}\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, a, b}", "obtain l where \"proj2_incident q l\" and \"proj2_incident p l\"\n     and \"proj2_incident a l\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>proj2_incident q l; proj2_incident p l;\n         proj2_incident a l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold proj2_set_Col_def) auto"], ["proof (state)\nthis:\n  proj2_incident q l\n  proj2_incident p l\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "with \\<open>p \\<noteq> q\\<close> and \\<open>q \\<in> S\\<close> and \\<open>p \\<in> S\\<close> and \\<open>a \\<in> hyp2\\<close>\n     and S_hyp2_S_cart2_append1 [of q p a l]"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  q \\<in> S\n  p \\<in> S\n  a \\<in> hyp2\n  \\<lbrakk>q \\<noteq> p; q \\<in> S; p \\<in> S; a \\<in> hyp2;\n   proj2_incident q l; proj2_incident p l; proj2_incident a l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k>0.\n                       k < 1 \\<and>\n                       cart2_append1 a =\n                       k *\\<^sub>R cart2_append1 p +\n                       (1 - k) *\\<^sub>R cart2_append1 q\n  proj2_incident q l\n  proj2_incident p l\n  proj2_incident a l", "obtain k where \"k > 0\" and \"k < 1\" and \"?ca1 = k *\\<^sub>R ?cp1 + (1-k) *\\<^sub>R ?cq1\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  q \\<in> S\n  p \\<in> S\n  a \\<in> hyp2\n  \\<lbrakk>q \\<noteq> p; q \\<in> S; p \\<in> S; a \\<in> hyp2;\n   proj2_incident q l; proj2_incident p l; proj2_incident a l\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k>0.\n                       k < 1 \\<and>\n                       cart2_append1 a =\n                       k *\\<^sub>R cart2_append1 p +\n                       (1 - k) *\\<^sub>R cart2_append1 q\n  proj2_incident q l\n  proj2_incident p l\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>0 < k; k < 1;\n         cart2_append1 a =\n         k *\\<^sub>R cart2_append1 p +\n         (1 - k) *\\<^sub>R cart2_append1 q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < k\n  k < 1\n  cart2_append1 a =\n  k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>z_non_zero p\\<close> and \\<open>z_non_zero q\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero p\n  z_non_zero q", "have \"?cp1 \\<noteq> 0\" and \"?cq1 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z_non_zero p\n  z_non_zero q\n\ngoal (1 subgoal):\n 1. cart2_append1 p \\<noteq> 0 &&& cart2_append1 q \\<noteq> 0", "by (simp_all add: cart2_append1_non_zero)"], ["proof (state)\nthis:\n  cart2_append1 p \\<noteq> 0\n  cart2_append1 q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>p \\<noteq> q\\<close> and \\<open>proj2_abs ?cp1 = p\\<close> and \\<open>proj2_abs ?cq1 = q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  proj2_abs (cart2_append1 p) = p\n  proj2_abs (cart2_append1 q) = q", "have \"proj2_abs ?cp1 \\<noteq> proj2_abs ?cq1\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  proj2_abs (cart2_append1 p) = p\n  proj2_abs (cart2_append1 q) = q\n\ngoal (1 subgoal):\n 1. proj2_abs (cart2_append1 p) \\<noteq> proj2_abs (cart2_append1 q)", "by simp"], ["proof (state)\nthis:\n  proj2_abs (cart2_append1 p) \\<noteq> proj2_abs (cart2_append1 q)\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>k < 1\\<close>"], ["proof (chain)\npicking this:\n  k < 1", "have \"1-k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  k < 1\n\ngoal (1 subgoal):\n 1. 1 - k \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  1 - k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "with \\<open>j < 1\\<close>"], ["proof (chain)\npicking this:\n  j < 1\n  1 - k \\<noteq> 0", "have \"(1-j)*(1-k) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  j < 1\n  1 - k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (1 - j) * (1 - k) \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  (1 - j) * (1 - k) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>j < 1\\<close> and \\<open>k > 0\\<close>"], ["proof (chain)\npicking this:\n  j < 1\n  0 < k", "have \"(1-j)*k > 0\""], ["proof (prove)\nusing this:\n  j < 1\n  0 < k\n\ngoal (1 subgoal):\n 1. 0 < (1 - j) * k", "by simp"], ["proof (state)\nthis:\n  0 < (1 - j) * k\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>?cb1 = j *\\<^sub>R ?cp1 + (1-j) *\\<^sub>R ?ca1\\<close>"], ["proof (chain)\npicking this:\n  cart2_append1 b =\n  j *\\<^sub>R cart2_append1 p + (1 - j) *\\<^sub>R cart2_append1 a", "have \"?cb1 = (j+(1-j)*k) *\\<^sub>R ?cp1 + ((1-j)*(1-k)) *\\<^sub>R ?cq1\""], ["proof (prove)\nusing this:\n  cart2_append1 b =\n  j *\\<^sub>R cart2_append1 p + (1 - j) *\\<^sub>R cart2_append1 a\n\ngoal (1 subgoal):\n 1. cart2_append1 b =\n    (j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n    ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q", "by (unfold \\<open>?ca1 = k *\\<^sub>R ?cp1 + (1-k) *\\<^sub>R ?cq1\\<close>) (simp add: algebra_simps)"], ["proof (state)\nthis:\n  cart2_append1 b =\n  (j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n  ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "with \\<open>?ca1 = k *\\<^sub>R ?cp1 + (1-k) *\\<^sub>R ?cq1\\<close>"], ["proof (chain)\npicking this:\n  cart2_append1 a =\n  k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q\n  cart2_append1 b =\n  (j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n  ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q", "have \"proj2_abs ?ca1 = proj2_abs (k *\\<^sub>R ?cp1 + (1-k) *\\<^sub>R ?cq1)\"\n     and \"proj2_abs ?cb1\n     = proj2_abs ((j+(1-j)*k) *\\<^sub>R ?cp1 + ((1-j)*(1-k)) *\\<^sub>R ?cq1)\""], ["proof (prove)\nusing this:\n  cart2_append1 a =\n  k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q\n  cart2_append1 b =\n  (j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n  ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q\n\ngoal (1 subgoal):\n 1. proj2_abs (cart2_append1 a) =\n    proj2_abs\n     (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q) &&&\n    proj2_abs (cart2_append1 b) =\n    proj2_abs\n     ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n      ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)", "by simp_all"], ["proof (state)\nthis:\n  proj2_abs (cart2_append1 a) =\n  proj2_abs\n   (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q)\n  proj2_abs (cart2_append1 b) =\n  proj2_abs\n   ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n    ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "with \\<open>proj2_abs ?ca1 = a\\<close> and \\<open>proj2_abs ?cb1 = b\\<close>"], ["proof (chain)\npicking this:\n  proj2_abs (cart2_append1 a) = a\n  proj2_abs (cart2_append1 b) = b\n  proj2_abs (cart2_append1 a) =\n  proj2_abs\n   (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q)\n  proj2_abs (cart2_append1 b) =\n  proj2_abs\n   ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n    ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)", "have \"a = proj2_abs (k *\\<^sub>R ?cp1 + (1-k) *\\<^sub>R ?cq1)\"\n     and \"b = proj2_abs ((j+(1-j)*k) *\\<^sub>R ?cp1 + ((1-j)*(1-k)) *\\<^sub>R ?cq1)\""], ["proof (prove)\nusing this:\n  proj2_abs (cart2_append1 a) = a\n  proj2_abs (cart2_append1 b) = b\n  proj2_abs (cart2_append1 a) =\n  proj2_abs\n   (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q)\n  proj2_abs (cart2_append1 b) =\n  proj2_abs\n   ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n    ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)\n\ngoal (1 subgoal):\n 1. a =\n    proj2_abs\n     (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q) &&&\n    b =\n    proj2_abs\n     ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n      ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)", "by simp_all"], ["proof (state)\nthis:\n  a =\n  proj2_abs\n   (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q)\n  b =\n  proj2_abs\n   ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n    ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "with \\<open>proj2_abs ?cp1 = p\\<close> and \\<open>proj2_abs ?cq1 = q\\<close>"], ["proof (chain)\npicking this:\n  proj2_abs (cart2_append1 p) = p\n  proj2_abs (cart2_append1 q) = q\n  a =\n  proj2_abs\n   (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q)\n  b =\n  proj2_abs\n   ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n    ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)", "have \"cross_ratio p q a b\n     = cross_ratio (proj2_abs ?cp1) (proj2_abs ?cq1)\n     (proj2_abs (k *\\<^sub>R ?cp1 + (1-k) *\\<^sub>R ?cq1))\n     (proj2_abs ((j+(1-j)*k) *\\<^sub>R ?cp1 + ((1-j)*(1-k)) *\\<^sub>R ?cq1))\""], ["proof (prove)\nusing this:\n  proj2_abs (cart2_append1 p) = p\n  proj2_abs (cart2_append1 q) = q\n  a =\n  proj2_abs\n   (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q)\n  b =\n  proj2_abs\n   ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n    ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    cross_ratio (proj2_abs (cart2_append1 p)) (proj2_abs (cart2_append1 q))\n     (proj2_abs\n       (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q))\n     (proj2_abs\n       ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n        ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q))", "by simp"], ["proof (state)\nthis:\n  cross_ratio p q a b =\n  cross_ratio (proj2_abs (cart2_append1 p)) (proj2_abs (cart2_append1 q))\n   (proj2_abs\n     (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q))\n   (proj2_abs\n     ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n      ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q))\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "also"], ["proof (state)\nthis:\n  cross_ratio p q a b =\n  cross_ratio (proj2_abs (cart2_append1 p)) (proj2_abs (cart2_append1 q))\n   (proj2_abs\n     (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q))\n   (proj2_abs\n     ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n      ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q))\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>?cp1 \\<noteq> 0\\<close> and \\<open>?cq1 \\<noteq> 0\\<close> and \\<open>proj2_abs ?cp1 \\<noteq> proj2_abs ?cq1\\<close>\n     and \\<open>1-k \\<noteq> 0\\<close> and \\<open>(1-j)*(1-k) \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  cart2_append1 p \\<noteq> 0\n  cart2_append1 q \\<noteq> 0\n  proj2_abs (cart2_append1 p) \\<noteq> proj2_abs (cart2_append1 q)\n  1 - k \\<noteq> 0\n  (1 - j) * (1 - k) \\<noteq> 0", "have \"\\<dots> = (1-k)*(j+(1-j)*k) / (k*((1-j)*(1-k)))\""], ["proof (prove)\nusing this:\n  cart2_append1 p \\<noteq> 0\n  cart2_append1 q \\<noteq> 0\n  proj2_abs (cart2_append1 p) \\<noteq> proj2_abs (cart2_append1 q)\n  1 - k \\<noteq> 0\n  (1 - j) * (1 - k) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cross_ratio (proj2_abs (cart2_append1 p)) (proj2_abs (cart2_append1 q))\n     (proj2_abs\n       (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q))\n     (proj2_abs\n       ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n        ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)) =\n    (1 - k) * (j + (1 - j) * k) / (k * ((1 - j) * (1 - k)))", "by (rule cross_ratio_abs)"], ["proof (state)\nthis:\n  cross_ratio (proj2_abs (cart2_append1 p)) (proj2_abs (cart2_append1 q))\n   (proj2_abs\n     (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q))\n   (proj2_abs\n     ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n      ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)) =\n  (1 - k) * (j + (1 - j) * k) / (k * ((1 - j) * (1 - k)))\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "also"], ["proof (state)\nthis:\n  cross_ratio (proj2_abs (cart2_append1 p)) (proj2_abs (cart2_append1 q))\n   (proj2_abs\n     (k *\\<^sub>R cart2_append1 p + (1 - k) *\\<^sub>R cart2_append1 q))\n   (proj2_abs\n     ((j + (1 - j) * k) *\\<^sub>R cart2_append1 p +\n      ((1 - j) * (1 - k)) *\\<^sub>R cart2_append1 q)) =\n  (1 - k) * (j + (1 - j) * k) / (k * ((1 - j) * (1 - k)))\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>1-k \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  1 - k \\<noteq> 0", "have \"\\<dots> = (j+(1-j)*k) / ((1-j)*k)\""], ["proof (prove)\nusing this:\n  1 - k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (1 - k) * (j + (1 - j) * k) / (k * ((1 - j) * (1 - k))) =\n    (j + (1 - j) * k) / ((1 - j) * k)", "by simp"], ["proof (state)\nthis:\n  (1 - k) * (j + (1 - j) * k) / (k * ((1 - j) * (1 - k))) =\n  (j + (1 - j) * k) / ((1 - j) * k)\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "also"], ["proof (state)\nthis:\n  (1 - k) * (j + (1 - j) * k) / (k * ((1 - j) * (1 - k))) =\n  (j + (1 - j) * k) / ((1 - j) * k)\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "from \\<open>j \\<ge> 0\\<close> and \\<open>(1-j)*k > 0\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> j\n  0 < (1 - j) * k", "have \"\\<dots> \\<ge> 1\""], ["proof (prove)\nusing this:\n  0 \\<le> j\n  0 < (1 - j) * k\n\ngoal (1 subgoal):\n 1. 1 \\<le> (j + (1 - j) * k) / ((1 - j) * k)", "by simp"], ["proof (state)\nthis:\n  1 \\<le> (j + (1 - j) * k) / ((1 - j) * k)\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "finally"], ["proof (chain)\npicking this:\n  1 \\<le> cross_ratio p q a b", "show \"cross_ratio p q a b \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "."], ["proof (state)\nthis:\n  1 \\<le> cross_ratio p q a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cross_ratio_S_S_hyp2_hyp2_positive:\n  assumes \"are_endpoints_in_S p q a b\"\n  shows \"cross_ratio p q a b > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < cross_ratio p q a b", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 < cross_ratio p q a b\n 2. \\<not> ?P \\<Longrightarrow> 0 < cross_ratio p q a b", "assume \"B\\<^sub>\\<real> (cart2_pt p) (cart2_pt b) (cart2_pt a)\""], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 < cross_ratio p q a b\n 2. \\<not> ?P \\<Longrightarrow> 0 < cross_ratio p q a b", "hence \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p", "by (rule real_euclid.th3_2)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 < cross_ratio p q a b\n 2. \\<not> ?P \\<Longrightarrow> 0 < cross_ratio p q a b", "with assms"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p", "have \"cross_ratio p q a b \\<ge> 1\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "by (rule are_endpoints_in_S_ordered_cross_ratio)"], ["proof (state)\nthis:\n  1 \\<le> cross_ratio p q a b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 < cross_ratio p q a b\n 2. \\<not> ?P \\<Longrightarrow> 0 < cross_ratio p q a b", "thus \"cross_ratio p q a b > 0\""], ["proof (prove)\nusing this:\n  1 \\<le> cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. 0 < cross_ratio p q a b", "by simp"], ["proof (state)\nthis:\n  0 < cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "assume \"\\<not> B\\<^sub>\\<real> (cart2_pt p) (cart2_pt b) (cart2_pt a)\" (is \"\\<not> B\\<^sub>\\<real> ?cp ?cb ?ca\")"], ["proof (state)\nthis:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "from \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b", "have \"are_endpoints_in_S p q b a\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p q b a", "by (rule are_endpoints_in_S_swap_34)"], ["proof (state)\nthis:\n  are_endpoints_in_S p q b a\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "from \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b", "have \"p \\<in> S\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"proj2_set_Col {p,q,a,b}\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. (p \\<in> S &&& a \\<in> hyp2) &&&\n    b \\<in> hyp2 &&& proj2_set_Col {p, q, a, b}", "by (unfold are_endpoints_in_S_def) simp_all"], ["proof (state)\nthis:\n  p \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "from \\<open>proj2_set_Col {p,q,a,b}\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, a, b}", "have \"proj2_set_Col {p,a,b}\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. proj2_set_Col {p, a, b}", "by (simp add: proj2_subset_Col [of \"{p,a,b}\" \"{p,q,a,b}\"])"], ["proof (state)\nthis:\n  proj2_set_Col {p, a, b}\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "hence \"proj2_Col p a b\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, a, b}\n\ngoal (1 subgoal):\n 1. proj2_Col p a b", "by (subst proj2_Col_iff_set_Col)"], ["proof (state)\nthis:\n  proj2_Col p a b\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "with \\<open>p \\<in> S\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_Col p a b", "have \"B\\<^sub>\\<real> ?cp ?ca ?cb \\<or> B\\<^sub>\\<real> ?cp ?cb ?ca\""], ["proof (prove)\nusing this:\n  p \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_Col p a b\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt b \\<or>\n    B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a", "by (simp add: S_at_edge)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt b \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "with \\<open>\\<not> B\\<^sub>\\<real> ?cp ?cb ?ca\\<close>"], ["proof (chain)\npicking this:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt b \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a", "have \"B\\<^sub>\\<real> ?cp ?ca ?cb\""], ["proof (prove)\nusing this:\n  \\<not> B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt b \\<or>\n  B\\<^sub>\\<real> cart2_pt p cart2_pt b cart2_pt a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt b", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt b\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "hence \"B\\<^sub>\\<real> ?cb ?ca ?cp\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt p cart2_pt a cart2_pt b\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt p", "by (rule real_euclid.th3_2)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt p\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "with \\<open>are_endpoints_in_S p q b a\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q b a\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt p", "have \"cross_ratio p q b a \\<ge> 1\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q b a\n  B\\<^sub>\\<real> cart2_pt b cart2_pt a cart2_pt p\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q b a", "by (rule are_endpoints_in_S_ordered_cross_ratio)"], ["proof (state)\nthis:\n  1 \\<le> cross_ratio p q b a\n\ngoal (1 subgoal):\n 1. \\<not> B\\<^sub>\\<real> cart2_pt\n                            p cart2_pt b cart2_pt a \\<Longrightarrow>\n    0 < cross_ratio p q a b", "thus \"cross_ratio p q a b > 0\""], ["proof (prove)\nusing this:\n  1 \\<le> cross_ratio p q b a\n\ngoal (1 subgoal):\n 1. 0 < cross_ratio p q a b", "by (subst cross_ratio_swap_34) simp"], ["proof (state)\nthis:\n  0 < cross_ratio p q a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cosh_dist_general:\n  assumes \"are_endpoints_in_S p q a b\"\n  shows \"cosh_dist a b\n  = (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "from \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b", "have \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n    and \"proj2_set_Col {p,q,a,b}\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. (p \\<noteq> q &&& p \\<in> S &&& q \\<in> S) &&&\n    a \\<in> hyp2 &&& b \\<in> hyp2 &&& proj2_set_Col {p, q, a, b}", "by (unfold are_endpoints_in_S_def) simp_all"], ["proof (state)\nthis:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S", "have \"a \\<noteq> p\" and \"a \\<noteq> q\" and \"b \\<noteq> p\" and \"b \\<noteq> q\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. (a \\<noteq> p &&& a \\<noteq> q) &&& b \\<noteq> p &&& b \\<noteq> q", "by (simp_all add: hyp2_S_not_equal)"], ["proof (state)\nthis:\n  a \\<noteq> p\n  a \\<noteq> q\n  b \\<noteq> p\n  b \\<noteq> q\n\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "show \"cosh_dist a b\n    = (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "assume \"a = b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "hence \"cosh_dist a b = 1\""], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. cosh_dist a b = 1", "by (unfold cosh_dist_def exp_2dist_def) simp"], ["proof (state)\nthis:\n  cosh_dist a b = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "from \\<open>proj2_set_Col {p,q,a,b}\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, a, b}", "have \"proj2_Col p q a\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. proj2_Col p q a", "by (unfold \\<open>a = b\\<close>) (simp add: proj2_Col_iff_set_Col)"], ["proof (state)\nthis:\n  proj2_Col p q a\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "with \\<open>p \\<noteq> q\\<close> and \\<open>a \\<noteq> p\\<close> and \\<open>a \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  a \\<noteq> p\n  a \\<noteq> q\n  proj2_Col p q a", "have \"cross_ratio p q a b = 1\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  a \\<noteq> p\n  a \\<noteq> q\n  proj2_Col p q a\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b = 1", "by (simp add: \\<open>a = b\\<close> cross_ratio_equal_1)"], ["proof (state)\nthis:\n  cross_ratio p q a b = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "hence \"(sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n      = 1\""], ["proof (prove)\nusing this:\n  cross_ratio p q a b = 1\n\ngoal (1 subgoal):\n 1. (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2 = 1", "by simp"], ["proof (state)\nthis:\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2 = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "with \\<open>cosh_dist a b = 1\\<close>"], ["proof (chain)\npicking this:\n  cosh_dist a b = 1\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2 = 1", "show \"cosh_dist a b\n      = (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\""], ["proof (prove)\nusing this:\n  cosh_dist a b = 1\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2 = 1\n\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "by simp"], ["proof (state)\nthis:\n  cosh_dist a b =\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "assume \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "let ?r = \"endpoint_in_S a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "let ?s = \"endpoint_in_S b a\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "from \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b", "have \"exp_2dist a b = cross_ratio ?r ?s a b\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (unfold exp_2dist_def) simp"], ["proof (state)\nthis:\n  exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "from \\<open>a \\<noteq> b\\<close> and \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  are_endpoints_in_S p q a b", "have \"(p = ?r \\<and> q = ?s) \\<or> (q = ?r \\<and> p = ?s)\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n    q = endpoint_in_S a b \\<and> p = endpoint_in_S b a", "by (rule are_endpoints_in_S)"], ["proof (state)\nthis:\n  p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n  q = endpoint_in_S a b \\<and> p = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "show \"cosh_dist a b\n      = (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "assume \"p = ?r \\<and> q = ?s\""], ["proof (state)\nthis:\n  p = endpoint_in_S a b \\<and> q = endpoint_in_S b a\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "with \\<open>exp_2dist a b = cross_ratio ?r ?s a b\\<close>"], ["proof (chain)\npicking this:\n  exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n  p = endpoint_in_S a b \\<and> q = endpoint_in_S b a", "have \"exp_2dist a b = cross_ratio p q a b\""], ["proof (prove)\nusing this:\n  exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n  p = endpoint_in_S a b \\<and> q = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. exp_2dist a b = cross_ratio p q a b", "by simp"], ["proof (state)\nthis:\n  exp_2dist a b = cross_ratio p q a b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n 2. \\<not> ?P \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "thus \"cosh_dist a b\n        = (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\""], ["proof (prove)\nusing this:\n  exp_2dist a b = cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "by (unfold cosh_dist_def) (simp add: real_sqrt_divide)"], ["proof (state)\nthis:\n  cosh_dist a b =\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "assume \"\\<not> (p = ?r \\<and> q = ?s)\""], ["proof (state)\nthis:\n  \\<not> (p = endpoint_in_S a b \\<and> q = endpoint_in_S b a)\n\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "with \\<open>(p = ?r \\<and> q = ?s) \\<or> (q = ?r \\<and> p = ?s)\\<close>"], ["proof (chain)\npicking this:\n  p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n  q = endpoint_in_S a b \\<and> p = endpoint_in_S b a\n  \\<not> (p = endpoint_in_S a b \\<and> q = endpoint_in_S b a)", "have \"q = ?r\" and \"p = ?s\""], ["proof (prove)\nusing this:\n  p = endpoint_in_S a b \\<and> q = endpoint_in_S b a \\<or>\n  q = endpoint_in_S a b \\<and> p = endpoint_in_S b a\n  \\<not> (p = endpoint_in_S a b \\<and> q = endpoint_in_S b a)\n\ngoal (1 subgoal):\n 1. q = endpoint_in_S a b &&& p = endpoint_in_S b a", "by simp_all"], ["proof (state)\nthis:\n  q = endpoint_in_S a b\n  p = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "with \\<open>exp_2dist a b = cross_ratio ?r ?s a b\\<close>"], ["proof (chain)\npicking this:\n  exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n  q = endpoint_in_S a b\n  p = endpoint_in_S b a", "have \"exp_2dist a b = cross_ratio q p a b\""], ["proof (prove)\nusing this:\n  exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n  q = endpoint_in_S a b\n  p = endpoint_in_S b a\n\ngoal (1 subgoal):\n 1. exp_2dist a b = cross_ratio q p a b", "by simp"], ["proof (state)\nthis:\n  exp_2dist a b = cross_ratio q p a b\n\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "have \"{q,p,a,b} = {p,q,a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q, p, a, b} = {p, q, a, b}", "by auto"], ["proof (state)\nthis:\n  {q, p, a, b} = {p, q, a, b}\n\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "with \\<open>proj2_set_Col {p,q,a,b}\\<close> and \\<open>p \\<noteq> q\\<close> and \\<open>a \\<noteq> p\\<close> and \\<open>b \\<noteq> p\\<close>\n        and \\<open>a \\<noteq> q\\<close> and \\<open>b \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, a, b}\n  p \\<noteq> q\n  a \\<noteq> p\n  b \\<noteq> p\n  a \\<noteq> q\n  b \\<noteq> q\n  {q, p, a, b} = {p, q, a, b}", "have \"cross_ratio_correct p q a b\" and \"cross_ratio_correct q p a b\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, a, b}\n  p \\<noteq> q\n  a \\<noteq> p\n  b \\<noteq> p\n  a \\<noteq> q\n  b \\<noteq> q\n  {q, p, a, b} = {p, q, a, b}\n\ngoal (1 subgoal):\n 1. cross_ratio_correct p q a b &&& cross_ratio_correct q p a b", "by (unfold cross_ratio_correct_def) simp_all"], ["proof (state)\nthis:\n  cross_ratio_correct p q a b\n  cross_ratio_correct q p a b\n\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "hence \"cross_ratio q p a b = 1 / (cross_ratio p q a b)\""], ["proof (prove)\nusing this:\n  cross_ratio_correct p q a b\n  cross_ratio_correct q p a b\n\ngoal (1 subgoal):\n 1. cross_ratio q p a b = 1 / cross_ratio p q a b", "by (rule cross_ratio_swap_12)"], ["proof (state)\nthis:\n  cross_ratio q p a b = 1 / cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "with \\<open>exp_2dist a b = cross_ratio q p a b\\<close>"], ["proof (chain)\npicking this:\n  exp_2dist a b = cross_ratio q p a b\n  cross_ratio q p a b = 1 / cross_ratio p q a b", "have \"exp_2dist a b = 1 / (cross_ratio p q a b)\""], ["proof (prove)\nusing this:\n  exp_2dist a b = cross_ratio q p a b\n  cross_ratio q p a b = 1 / cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. exp_2dist a b = 1 / cross_ratio p q a b", "by simp"], ["proof (state)\nthis:\n  exp_2dist a b = 1 / cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. \\<not> (p = endpoint_in_S a b \\<and>\n            q = endpoint_in_S b a) \\<Longrightarrow>\n    cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "thus \"cosh_dist a b\n        = (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\""], ["proof (prove)\nusing this:\n  exp_2dist a b = 1 / cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "by (unfold cosh_dist_def) (simp add: real_sqrt_divide)"], ["proof (state)\nthis:\n  cosh_dist a b =\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cosh_dist a b =\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cosh_dist a b =\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exp_2dist_positive:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"exp_2dist a b > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < exp_2dist a b", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 < exp_2dist a b\n 2. \\<not> ?P \\<Longrightarrow> 0 < exp_2dist a b", "assume \"a = b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 < exp_2dist a b\n 2. \\<not> ?P \\<Longrightarrow> 0 < exp_2dist a b", "thus \"exp_2dist a b > 0\""], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. 0 < exp_2dist a b", "by (unfold exp_2dist_def) simp"], ["proof (state)\nthis:\n  0 < exp_2dist a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> 0 < exp_2dist a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> 0 < exp_2dist a b", "assume \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> 0 < exp_2dist a b", "let ?p = \"endpoint_in_S a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> 0 < exp_2dist a b", "let ?q = \"endpoint_in_S b a\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> 0 < exp_2dist a b", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"are_endpoints_in_S ?p ?q a b\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (rule endpoints_in_S_are_endpoints_in_S)"], ["proof (state)\nthis:\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> 0 < exp_2dist a b", "hence \"cross_ratio ?p ?q a b > 0\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. 0 < cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (rule cross_ratio_S_S_hyp2_hyp2_positive)"], ["proof (state)\nthis:\n  0 < cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> 0 < exp_2dist a b", "with \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  0 < cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "show \"exp_2dist a b > 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  0 < cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. 0 < exp_2dist a b", "by (unfold exp_2dist_def) simp"], ["proof (state)\nthis:\n  0 < exp_2dist a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cosh_dist_at_least_1:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"cosh_dist a b \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> cosh_dist a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> cosh_dist a b", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"exp_2dist a b > 0\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. 0 < exp_2dist a b", "by (rule exp_2dist_positive)"], ["proof (state)\nthis:\n  0 < exp_2dist a b\n\ngoal (1 subgoal):\n 1. 1 \\<le> cosh_dist a b", "with am_gm2(1) [of \"sqrt (exp_2dist a b)\" \"sqrt (1 / exp_2dist a b)\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 \\<le> sqrt (exp_2dist a b);\n   0 \\<le> sqrt (1 / exp_2dist a b)\\<rbrakk>\n  \\<Longrightarrow> sqrt (sqrt (exp_2dist a b) * sqrt (1 / exp_2dist a b))\n                    \\<le> (sqrt (exp_2dist a b) +\n                           sqrt (1 / exp_2dist a b)) /\n                          2\n  0 < exp_2dist a b", "show \"cosh_dist a b \\<ge> 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> sqrt (exp_2dist a b);\n   0 \\<le> sqrt (1 / exp_2dist a b)\\<rbrakk>\n  \\<Longrightarrow> sqrt (sqrt (exp_2dist a b) * sqrt (1 / exp_2dist a b))\n                    \\<le> (sqrt (exp_2dist a b) +\n                           sqrt (1 / exp_2dist a b)) /\n                          2\n  0 < exp_2dist a b\n\ngoal (1 subgoal):\n 1. 1 \\<le> cosh_dist a b", "by (unfold cosh_dist_def) (simp add: real_sqrt_mult [symmetric])"], ["proof (state)\nthis:\n  1 \\<le> cosh_dist a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cosh_dist_positive:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"cosh_dist a b > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < cosh_dist a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < cosh_dist a b", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"cosh_dist a b \\<ge> 1\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. 1 \\<le> cosh_dist a b", "by (rule cosh_dist_at_least_1)"], ["proof (state)\nthis:\n  1 \\<le> cosh_dist a b\n\ngoal (1 subgoal):\n 1. 0 < cosh_dist a b", "thus \"cosh_dist a b > 0\""], ["proof (prove)\nusing this:\n  1 \\<le> cosh_dist a b\n\ngoal (1 subgoal):\n 1. 0 < cosh_dist a b", "by simp"], ["proof (state)\nthis:\n  0 < cosh_dist a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cosh_dist_perp_divide:\n  assumes \"M_perp l m\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\" and \"proj2_incident b m\"\n  and \"proj2_incident c m\"\n  shows \"cosh_dist b c = cosh_dist a c / cosh_dist b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist b c = cosh_dist a c / cosh_dist b a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist b c = cosh_dist a c / cosh_dist b a", "from \\<open>b \\<in> hyp2\\<close> and \\<open>a \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  a \\<in> hyp2", "have \"cosh_dist b a > 0\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  a \\<in> hyp2\n\ngoal (1 subgoal):\n 1. 0 < cosh_dist b a", "by (rule cosh_dist_positive)"], ["proof (state)\nthis:\n  0 < cosh_dist b a\n\ngoal (1 subgoal):\n 1. cosh_dist b c = cosh_dist a c / cosh_dist b a", "from assms"], ["proof (chain)\npicking this:\n  M_perp l m\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident b m\n  proj2_incident c m", "have \"cosh_dist a c = cosh_dist b a * cosh_dist b c\""], ["proof (prove)\nusing this:\n  M_perp l m\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident b m\n  proj2_incident c m\n\ngoal (1 subgoal):\n 1. cosh_dist a c = cosh_dist b a * cosh_dist b c", "by (rule cosh_dist_perp)"], ["proof (state)\nthis:\n  cosh_dist a c = cosh_dist b a * cosh_dist b c\n\ngoal (1 subgoal):\n 1. cosh_dist b c = cosh_dist a c / cosh_dist b a", "with \\<open>cosh_dist b a > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < cosh_dist b a\n  cosh_dist a c = cosh_dist b a * cosh_dist b c", "show \"cosh_dist b c = cosh_dist a c / cosh_dist b a\""], ["proof (prove)\nusing this:\n  0 < cosh_dist b a\n  cosh_dist a c = cosh_dist b a * cosh_dist b c\n\ngoal (1 subgoal):\n 1. cosh_dist b c = cosh_dist a c / cosh_dist b a", "by simp"], ["proof (state)\nthis:\n  cosh_dist b c = cosh_dist a c / cosh_dist b a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_hyp2_C_cross_ratio_endpoints_in_S:\n  assumes \"a \\<noteq> b\" and \"a b \\<congruent>\\<^sub>K c d\"\n  shows \"cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n  (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b)\n  = cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n  (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)\"\n  (is \"cross_ratio ?p ?q ?a' ?b' = cross_ratio ?r ?s ?c' ?d'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "from \\<open>a \\<noteq> b\\<close> and \\<open>a b \\<congruent>\\<^sub>K c d\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a b \\<congruent>\\<^sub>K c d", "have \"c \\<noteq> d\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a b \\<congruent>\\<^sub>K c d\n\ngoal (1 subgoal):\n 1. c \\<noteq> d", "by (auto simp add: hyp2.A3')"], ["proof (state)\nthis:\n  c \\<noteq> d\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "with \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  c \\<noteq> d", "have \"?a' \\<noteq> ?b'\" and \"?c' \\<noteq> ?d'\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  c \\<noteq> d\n\ngoal (1 subgoal):\n 1. Rep_hyp2 a \\<noteq> Rep_hyp2 b &&& Rep_hyp2 c \\<noteq> Rep_hyp2 d", "by (unfold Rep_hyp2_inject)"], ["proof (state)\nthis:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 c \\<noteq> Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "from \\<open>a b \\<congruent>\\<^sub>K c d\\<close>"], ["proof (chain)\npicking this:\n  a b \\<congruent>\\<^sub>K c d", "obtain J where \"is_K2_isometry J\" and \"hyp2_cltn2 a J = c\"\n    and \"hyp2_cltn2 b J = d\""], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K c d\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; hyp2_cltn2 a J = c;\n         hyp2_cltn2 b J = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_hyp2_C_def) auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  hyp2_cltn2 a J = c\n  hyp2_cltn2 b J = d\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "hence \"apply_cltn2 ?a' J = ?c'\" and \"apply_cltn2 ?b' J = ?d'\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  hyp2_cltn2 a J = c\n  hyp2_cltn2 b J = d\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c &&&\n    apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d", "by (simp_all add: Rep_hyp2_cltn2 [symmetric])"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "with \\<open>?a' \\<noteq> ?b'\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  is_K2_isometry J\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d", "have \"apply_cltn2 ?p J = ?r\" and \"apply_cltn2 ?q J = ?s\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  is_K2_isometry J\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. apply_cltn2 (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) J =\n    endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d) &&&\n    apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) J =\n    endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)", "by (simp_all add: Rep_hyp2 K2_isometry_endpoint_in_S)"], ["proof (state)\nthis:\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) J =\n  endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d)\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) J =\n  endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "from \\<open>?a' \\<noteq> ?b'\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b", "have \"proj2_set_Col {?p,?q,?a',?b'}\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n\ngoal (1 subgoal):\n 1. proj2_set_Col\n     {endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b),\n      endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a), Rep_hyp2 a, Rep_hyp2 b}", "by (simp add: Rep_hyp2 proj2_set_Col_endpoints_in_S)"], ["proof (state)\nthis:\n  proj2_set_Col\n   {endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b),\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a), Rep_hyp2 a, Rep_hyp2 b}\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "from \\<open>?a' \\<noteq> ?b'\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b", "have \"?p \\<noteq> ?q\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n\ngoal (1 subgoal):\n 1. endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<noteq>\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)", "by (simp add: Rep_hyp2 endpoint_in_S_swap)"], ["proof (state)\nthis:\n  endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<noteq>\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "have \"?p \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<in> S", "by (simp add: Rep_hyp2 endpoint_in_S)"], ["proof (state)\nthis:\n  endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<in> S\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "hence \"?a' \\<noteq> ?p\" and \"?b' \\<noteq> ?p\""], ["proof (prove)\nusing this:\n  endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<in> S\n\ngoal (1 subgoal):\n 1. Rep_hyp2 a \\<noteq> endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) &&&\n    Rep_hyp2 b \\<noteq> endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)", "by (simp_all add: Rep_hyp2 hyp2_S_not_equal)"], ["proof (state)\nthis:\n  Rep_hyp2 a \\<noteq> endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)\n  Rep_hyp2 b \\<noteq> endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "with \\<open>proj2_set_Col {?p,?q,?a',?b'}\\<close> and \\<open>?p \\<noteq> ?q\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col\n   {endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b),\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a), Rep_hyp2 a, Rep_hyp2 b}\n  endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<noteq>\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)\n  Rep_hyp2 a \\<noteq> endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)\n  Rep_hyp2 b \\<noteq> endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)", "have \"cross_ratio ?p ?q ?a' ?b'\n    = cross_ratio (apply_cltn2 ?p J) (apply_cltn2 ?q J)\n    (apply_cltn2 ?a' J) (apply_cltn2 ?b' J)\""], ["proof (prove)\nusing this:\n  proj2_set_Col\n   {endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b),\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a), Rep_hyp2 a, Rep_hyp2 b}\n  endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<noteq>\n  endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)\n  Rep_hyp2 a \\<noteq> endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)\n  Rep_hyp2 b \\<noteq> endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (apply_cltn2 (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) J)\n     (apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) J)\n     (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J)", "by (rule cross_ratio_cltn2 [symmetric])"], ["proof (state)\nthis:\n  cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n   (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n  cross_ratio (apply_cltn2 (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) J)\n   (apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) J)\n   (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J)\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "with \\<open>apply_cltn2 ?p J = ?r\\<close> and \\<open>apply_cltn2 ?q J = ?s\\<close>\n    and \\<open>apply_cltn2 ?a' J = ?c'\\<close> and \\<open>apply_cltn2 ?b' J = ?d'\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) J =\n  endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d)\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) J =\n  endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d\n  cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n   (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n  cross_ratio (apply_cltn2 (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) J)\n   (apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) J)\n   (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J)", "show \"cross_ratio ?p ?q ?a' ?b' = cross_ratio ?r ?s ?c' ?d'\""], ["proof (prove)\nusing this:\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) J =\n  endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d)\n  apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) J =\n  endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d\n  cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n   (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n  cross_ratio (apply_cltn2 (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) J)\n   (apply_cltn2 (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) J)\n   (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J)\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n     (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)", "by simp"], ["proof (state)\nthis:\n  cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n   (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n  cross_ratio (endpoint_in_S (Rep_hyp2 c) (Rep_hyp2 d))\n   (endpoint_in_S (Rep_hyp2 d) (Rep_hyp2 c)) (Rep_hyp2 c) (Rep_hyp2 d)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_hyp2_C_exp_2dist:\n  assumes \"a b \\<congruent>\\<^sub>K c d\"\n  shows \"exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)\n  = exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)\"\n  (is \"exp_2dist ?a' ?b' = exp_2dist ?c' ?d'\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) =\n    exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) =\n    exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)", "from \\<open>a b \\<congruent>\\<^sub>K c d\\<close>"], ["proof (chain)\npicking this:\n  a b \\<congruent>\\<^sub>K c d", "obtain J where \"is_K2_isometry J\" and \"hyp2_cltn2 a J = c\"\n    and \"hyp2_cltn2 b J = d\""], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K c d\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; hyp2_cltn2 a J = c;\n         hyp2_cltn2 b J = d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_hyp2_C_def) auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  hyp2_cltn2 a J = c\n  hyp2_cltn2 b J = d\n\ngoal (1 subgoal):\n 1. exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) =\n    exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)", "hence \"apply_cltn2 ?a' J = ?c'\" and \"apply_cltn2 ?b' J = ?d'\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  hyp2_cltn2 a J = c\n  hyp2_cltn2 b J = d\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c &&&\n    apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d", "by (simp_all add: Rep_hyp2_cltn2 [symmetric])"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d\n\ngoal (1 subgoal):\n 1. exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) =\n    exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)", "from Rep_hyp2 [of a] and Rep_hyp2 [of b] and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<in> hyp2\n  Rep_hyp2 b \\<in> hyp2\n  is_K2_isometry J", "have \"exp_2dist (apply_cltn2 ?a' J) (apply_cltn2 ?b' J) = exp_2dist ?a' ?b'\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<in> hyp2\n  Rep_hyp2 b \\<in> hyp2\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. exp_2dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J) =\n    exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)", "by (rule K2_isometry_exp_2dist)"], ["proof (state)\nthis:\n  exp_2dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J) =\n  exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) =\n    exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)", "with \\<open>apply_cltn2 ?a' J = ?c'\\<close> and \\<open>apply_cltn2 ?b' J = ?d'\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d\n  exp_2dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J) =\n  exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)", "show \"exp_2dist ?a' ?b' = exp_2dist ?c' ?d'\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 c\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 d\n  exp_2dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J) =\n  exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) =\n    exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)", "by simp"], ["proof (state)\nthis:\n  exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) = exp_2dist (Rep_hyp2 c) (Rep_hyp2 d)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_hyp2_C_cosh_dist:\n  assumes \"a b \\<congruent>\\<^sub>K c d\"\n  shows \"cosh_dist (Rep_hyp2 a) (Rep_hyp2 b)\n  = cosh_dist (Rep_hyp2 c) (Rep_hyp2 d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist (Rep_hyp2 a) (Rep_hyp2 b) =\n    cosh_dist (Rep_hyp2 c) (Rep_hyp2 d)", "using assms"], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K c d\n\ngoal (1 subgoal):\n 1. cosh_dist (Rep_hyp2 a) (Rep_hyp2 b) =\n    cosh_dist (Rep_hyp2 c) (Rep_hyp2 d)", "by (unfold cosh_dist_def) (simp add: real_hyp2_C_exp_2dist)"], ["", "lemma cross_ratio_in_terms_of_cosh_dist:\n  assumes \"are_endpoints_in_S p q a b\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\"\n  shows \"cross_ratio p q a b\n  = 2 * (cosh_dist a b)\\<^sup>2 + 2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) - 1\"\n  (is \"?pqab = 2 * ?ab\\<^sup>2 + 2 * ?ab * sqrt (?ab\\<^sup>2 - 1) - 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "from \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b", "have \"?ab = (sqrt ?pqab + 1 / sqrt ?pqab) / 2\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. cosh_dist a b =\n    (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2", "by (rule cosh_dist_general)"], ["proof (state)\nthis:\n  cosh_dist a b =\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"sqrt ?pqab - 2 * ?ab + 1 / sqrt ?pqab = 0\""], ["proof (prove)\nusing this:\n  cosh_dist a b =\n  (sqrt (cross_ratio p q a b) + 1 / sqrt (cross_ratio p q a b)) / 2\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) - 2 * cosh_dist a b +\n    1 / sqrt (cross_ratio p q a b) =\n    0", "by simp"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) - 2 * cosh_dist a b +\n  1 / sqrt (cross_ratio p q a b) =\n  0\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"sqrt ?pqab * (sqrt ?pqab - 2 * ?ab + 1 / sqrt ?pqab) = 0\""], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) - 2 * cosh_dist a b +\n  1 / sqrt (cross_ratio p q a b) =\n  0\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) *\n    (sqrt (cross_ratio p q a b) - 2 * cosh_dist a b +\n     1 / sqrt (cross_ratio p q a b)) =\n    0", "by simp"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) *\n  (sqrt (cross_ratio p q a b) - 2 * cosh_dist a b +\n   1 / sqrt (cross_ratio p q a b)) =\n  0\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "moreover"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) *\n  (sqrt (cross_ratio p q a b) - 2 * cosh_dist a b +\n   1 / sqrt (cross_ratio p q a b)) =\n  0\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "from assms"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p", "have \"?pqab \\<ge> 1\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n\ngoal (1 subgoal):\n 1. 1 \\<le> cross_ratio p q a b", "by (rule are_endpoints_in_S_ordered_cross_ratio)"], ["proof (state)\nthis:\n  1 \\<le> cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "ultimately"], ["proof (chain)\npicking this:\n  sqrt (cross_ratio p q a b) *\n  (sqrt (cross_ratio p q a b) - 2 * cosh_dist a b +\n   1 / sqrt (cross_ratio p q a b)) =\n  0\n  1 \\<le> cross_ratio p q a b", "have \"?pqab - 2 * ?ab * (sqrt ?pqab) + 1 = 0\""], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) *\n  (sqrt (cross_ratio p q a b) - 2 * cosh_dist a b +\n   1 / sqrt (cross_ratio p q a b)) =\n  0\n  1 \\<le> cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b - 2 * cosh_dist a b * sqrt (cross_ratio p q a b) +\n    1 =\n    0", "by (simp add: algebra_simps real_sqrt_mult [symmetric])"], ["proof (state)\nthis:\n  cross_ratio p q a b - 2 * cosh_dist a b * sqrt (cross_ratio p q a b) + 1 =\n  0\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "with \\<open>?pqab \\<ge> 1\\<close> and discriminant_iff [of 1 \"sqrt ?pqab\" \"- 2 * ?ab\" 1]"], ["proof (chain)\npicking this:\n  1 \\<le> cross_ratio p q a b\n  1 \\<noteq> 0 \\<Longrightarrow>\n  (1 * (sqrt (cross_ratio p q a b))\\<^sup>2 +\n   - 2 * cosh_dist a b * sqrt (cross_ratio p q a b) +\n   1 =\n   0) =\n  (0 \\<le> discrim 1 (- 2 * cosh_dist a b) 1 \\<and>\n   (sqrt (cross_ratio p q a b) =\n    (- (- 2 * cosh_dist a b) + sqrt (discrim 1 (- 2 * cosh_dist a b) 1)) /\n    (2 * 1) \\<or>\n    sqrt (cross_ratio p q a b) =\n    (- (- 2 * cosh_dist a b) - sqrt (discrim 1 (- 2 * cosh_dist a b) 1)) /\n    (2 * 1)))\n  cross_ratio p q a b - 2 * cosh_dist a b * sqrt (cross_ratio p q a b) + 1 =\n  0", "have \"sqrt ?pqab = (2 * ?ab + sqrt (4 * ?ab\\<^sup>2 - 4)) / 2\n    \\<or> sqrt ?pqab = (2 * ?ab - sqrt (4 * ?ab\\<^sup>2 - 4)) / 2\""], ["proof (prove)\nusing this:\n  1 \\<le> cross_ratio p q a b\n  1 \\<noteq> 0 \\<Longrightarrow>\n  (1 * (sqrt (cross_ratio p q a b))\\<^sup>2 +\n   - 2 * cosh_dist a b * sqrt (cross_ratio p q a b) +\n   1 =\n   0) =\n  (0 \\<le> discrim 1 (- 2 * cosh_dist a b) 1 \\<and>\n   (sqrt (cross_ratio p q a b) =\n    (- (- 2 * cosh_dist a b) + sqrt (discrim 1 (- 2 * cosh_dist a b) 1)) /\n    (2 * 1) \\<or>\n    sqrt (cross_ratio p q a b) =\n    (- (- 2 * cosh_dist a b) - sqrt (discrim 1 (- 2 * cosh_dist a b) 1)) /\n    (2 * 1)))\n  cross_ratio p q a b - 2 * cosh_dist a b * sqrt (cross_ratio p q a b) + 1 =\n  0\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) =\n    (2 * cosh_dist a b + sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2 \\<or>\n    sqrt (cross_ratio p q a b) =\n    (2 * cosh_dist a b - sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2", "unfolding discrim_def"], ["proof (prove)\nusing this:\n  1 \\<le> cross_ratio p q a b\n  1 \\<noteq> 0 \\<Longrightarrow>\n  (1 * (sqrt (cross_ratio p q a b))\\<^sup>2 +\n   - 2 * cosh_dist a b * sqrt (cross_ratio p q a b) +\n   1 =\n   0) =\n  (0 \\<le> (- 2 * cosh_dist a b)\\<^sup>2 - 4 * 1 * 1 \\<and>\n   (sqrt (cross_ratio p q a b) =\n    (- (- 2 * cosh_dist a b) +\n     sqrt ((- 2 * cosh_dist a b)\\<^sup>2 - 4 * 1 * 1)) /\n    (2 * 1) \\<or>\n    sqrt (cross_ratio p q a b) =\n    (- (- 2 * cosh_dist a b) -\n     sqrt ((- 2 * cosh_dist a b)\\<^sup>2 - 4 * 1 * 1)) /\n    (2 * 1)))\n  cross_ratio p q a b - 2 * cosh_dist a b * sqrt (cross_ratio p q a b) + 1 =\n  0\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) =\n    (2 * cosh_dist a b + sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2 \\<or>\n    sqrt (cross_ratio p q a b) =\n    (2 * cosh_dist a b - sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2", "by (simp add: real_sqrt_mult [symmetric] power2_eq_square)"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) =\n  (2 * cosh_dist a b + sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2 \\<or>\n  sqrt (cross_ratio p q a b) =\n  (2 * cosh_dist a b - sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "moreover"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) =\n  (2 * cosh_dist a b + sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2 \\<or>\n  sqrt (cross_ratio p q a b) =\n  (2 * cosh_dist a b - sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "have \"sqrt (4 * ?ab\\<^sup>2 - 4) = sqrt (4 * (?ab\\<^sup>2 - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4) =\n    sqrt (4 * ((cosh_dist a b)\\<^sup>2 - 1))", "by simp"], ["proof (state)\nthis:\n  sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4) =\n  sqrt (4 * ((cosh_dist a b)\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"sqrt (4 * ?ab\\<^sup>2 - 4) = 2 * sqrt (?ab\\<^sup>2 - 1)\""], ["proof (prove)\nusing this:\n  sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4) =\n  sqrt (4 * ((cosh_dist a b)\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4) =\n    2 * sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "by (unfold real_sqrt_mult) simp"], ["proof (state)\nthis:\n  sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4) =\n  2 * sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "ultimately"], ["proof (chain)\npicking this:\n  sqrt (cross_ratio p q a b) =\n  (2 * cosh_dist a b + sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2 \\<or>\n  sqrt (cross_ratio p q a b) =\n  (2 * cosh_dist a b - sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2\n  sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4) =\n  2 * sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "have \"sqrt ?pqab = 2 * (?ab + sqrt (?ab\\<^sup>2 - 1)) / 2\n    \\<or> sqrt ?pqab = 2 * (?ab - sqrt (?ab\\<^sup>2 - 1)) / 2\""], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) =\n  (2 * cosh_dist a b + sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2 \\<or>\n  sqrt (cross_ratio p q a b) =\n  (2 * cosh_dist a b - sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4)) / 2\n  sqrt (4 * (cosh_dist a b)\\<^sup>2 - 4) =\n  2 * sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) =\n    2 * (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) / 2 \\<or>\n    sqrt (cross_ratio p q a b) =\n    2 * (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) / 2", "by simp"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) =\n  2 * (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) / 2 \\<or>\n  sqrt (cross_ratio p q a b) =\n  2 * (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) / 2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"sqrt ?pqab = ?ab + sqrt (?ab\\<^sup>2 - 1)\n    \\<or> sqrt ?pqab = ?ab - sqrt (?ab\\<^sup>2 - 1)\""], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) =\n  2 * (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) / 2 \\<or>\n  sqrt (cross_ratio p q a b) =\n  2 * (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) / 2\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) =\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<or>\n    sqrt (cross_ratio p q a b) =\n    cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "by (simp only: nonzero_mult_div_cancel_left [of 2])"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<or>\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "from \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b", "have \"a \\<in> hyp2\" and \"b \\<in> hyp2\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. a \\<in> hyp2 &&& b \\<in> hyp2", "by (unfold are_endpoints_in_S_def) simp_all"], ["proof (state)\nthis:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"?ab \\<ge> 1\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. 1 \\<le> cosh_dist a b", "by (rule cosh_dist_at_least_1)"], ["proof (state)\nthis:\n  1 \\<le> cosh_dist a b\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"?ab\\<^sup>2 \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> cosh_dist a b\n\ngoal (1 subgoal):\n 1. 1 \\<le> (cosh_dist a b)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  1 \\<le> (cosh_dist a b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"sqrt (?ab\\<^sup>2 - 1) \\<ge> 0\""], ["proof (prove)\nusing this:\n  1 \\<le> (cosh_dist a b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"sqrt (?ab\\<^sup>2 - 1) * sqrt (?ab\\<^sup>2 - 1) = ?ab\\<^sup>2 - 1\""], ["proof (prove)\nusing this:\n  0 \\<le> sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. sqrt ((cosh_dist a b)\\<^sup>2 - 1) *\n    sqrt ((cosh_dist a b)\\<^sup>2 - 1) =\n    (cosh_dist a b)\\<^sup>2 - 1", "by (simp add: real_sqrt_mult [symmetric])"], ["proof (state)\nthis:\n  sqrt ((cosh_dist a b)\\<^sup>2 - 1) * sqrt ((cosh_dist a b)\\<^sup>2 - 1) =\n  (cosh_dist a b)\\<^sup>2 - 1\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "hence \"(?ab + sqrt (?ab\\<^sup>2 - 1)) * (?ab - sqrt (?ab\\<^sup>2 - 1)) = 1\""], ["proof (prove)\nusing this:\n  sqrt ((cosh_dist a b)\\<^sup>2 - 1) * sqrt ((cosh_dist a b)\\<^sup>2 - 1) =\n  (cosh_dist a b)\\<^sup>2 - 1\n\ngoal (1 subgoal):\n 1. (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n    (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) =\n    1", "by (simp add: algebra_simps power2_eq_square)"], ["proof (state)\nthis:\n  (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n  (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) =\n  1\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "have \"?ab - sqrt (?ab\\<^sup>2 - 1) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<le> 1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n           \\<le> 1 \\<Longrightarrow>\n    False", "assume \"\\<not> (?ab - sqrt (?ab\\<^sup>2 - 1) \\<le> 1)\""], ["proof (state)\nthis:\n  \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n           \\<le> 1 \\<Longrightarrow>\n    False", "hence \"1 < ?ab - sqrt (?ab\\<^sup>2 - 1)\""], ["proof (prove)\nusing this:\n  \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<le> 1\n\ngoal (1 subgoal):\n 1. 1 < cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  1 < cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n           \\<le> 1 \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  1 < cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n           \\<le> 1 \\<Longrightarrow>\n    False", "from \\<open>sqrt (?ab\\<^sup>2 - 1) \\<ge> 0\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "have \"\\<dots> \\<le> ?ab + sqrt (?ab\\<^sup>2 - 1)\""], ["proof (prove)\nusing this:\n  0 \\<le> sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n    \\<le> cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  \\<le> cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n           \\<le> 1 \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  1 < cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "have \"1 < ?ab + sqrt (?ab\\<^sup>2 - 1)\""], ["proof (prove)\nusing this:\n  1 < cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. 1 < cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  1 < cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n           \\<le> 1 \\<Longrightarrow>\n    False", "with \\<open>1 < ?ab - sqrt (?ab\\<^sup>2 - 1)\\<close>\n      and mult_strict_mono' [of\n      1 \"?ab + sqrt (?ab\\<^sup>2 - 1)\" 1 \"?ab - sqrt (?ab\\<^sup>2 - 1)\"]"], ["proof (chain)\npicking this:\n  1 < cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  \\<lbrakk>1 < cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1);\n   1 < cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1); 0 \\<le> 1;\n   0 \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> 1 * 1\n                    < (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n                      (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1))\n  1 < cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "have \"1 < (?ab + sqrt (?ab\\<^sup>2 - 1)) * (?ab - sqrt (?ab\\<^sup>2 - 1))\""], ["proof (prove)\nusing this:\n  1 < cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  \\<lbrakk>1 < cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1);\n   1 < cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1); 0 \\<le> 1;\n   0 \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> 1 * 1\n                    < (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n                      (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1))\n  1 < cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. 1 < (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n        (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1))", "by simp"], ["proof (state)\nthis:\n  1 < (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n      (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. \\<not> cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n           \\<le> 1 \\<Longrightarrow>\n    False", "with \\<open>(?ab + sqrt (?ab\\<^sup>2 - 1)) * (?ab - sqrt (?ab\\<^sup>2 - 1)) = 1\\<close>"], ["proof (chain)\npicking this:\n  (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n  (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) =\n  1\n  1 < (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n      (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1))", "show False"], ["proof (prove)\nusing this:\n  (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n  (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) =\n  1\n  1 < (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n      (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1))\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<le> 1\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "have \"sqrt ?pqab = ?ab + sqrt (?ab\\<^sup>2 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) =\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) \\<noteq>\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<Longrightarrow>\n    False", "assume \"sqrt ?pqab \\<noteq> ?ab + sqrt (?ab\\<^sup>2 - 1)\""], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) \\<noteq>\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) \\<noteq>\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<Longrightarrow>\n    False", "with \\<open>sqrt ?pqab = ?ab + sqrt (?ab\\<^sup>2 - 1)\n      \\<or> sqrt ?pqab = ?ab - sqrt (?ab\\<^sup>2 - 1)\\<close>"], ["proof (chain)\npicking this:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<or>\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  sqrt (cross_ratio p q a b) \\<noteq>\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "have \"sqrt ?pqab = ?ab - sqrt (?ab\\<^sup>2 - 1)\""], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<or>\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  sqrt (cross_ratio p q a b) \\<noteq>\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) =\n    cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) \\<noteq>\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<Longrightarrow>\n    False", "with \\<open>?ab - sqrt (?ab\\<^sup>2 - 1) \\<le> 1\\<close>"], ["proof (chain)\npicking this:\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<le> 1\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "have \"sqrt ?pqab \\<le> 1\""], ["proof (prove)\nusing this:\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<le> 1\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) \\<le> 1\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) \\<noteq>\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<Longrightarrow>\n    False", "with \\<open>?pqab \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> cross_ratio p q a b\n  sqrt (cross_ratio p q a b) \\<le> 1", "have \"sqrt ?pqab = 1\""], ["proof (prove)\nusing this:\n  1 \\<le> cross_ratio p q a b\n  sqrt (cross_ratio p q a b) \\<le> 1\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) = 1", "by simp"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) = 1\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) \\<noteq>\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<Longrightarrow>\n    False", "with \\<open>sqrt ?pqab = ?ab - sqrt (?ab\\<^sup>2 - 1)\\<close>\n      and \\<open>(?ab + sqrt (?ab\\<^sup>2 - 1)) * (?ab - sqrt (?ab\\<^sup>2 - 1)) = 1\\<close>"], ["proof (chain)\npicking this:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n  (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) =\n  1\n  sqrt (cross_ratio p q a b) = 1", "have \"?ab + sqrt (?ab\\<^sup>2 - 1) = 1\""], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)) *\n  (cosh_dist a b - sqrt ((cosh_dist a b)\\<^sup>2 - 1)) =\n  1\n  sqrt (cross_ratio p q a b) = 1\n\ngoal (1 subgoal):\n 1. cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) = 1", "by simp"], ["proof (state)\nthis:\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) = 1\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) \\<noteq>\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<Longrightarrow>\n    False", "with \\<open>sqrt ?pqab = 1\\<close>"], ["proof (chain)\npicking this:\n  sqrt (cross_ratio p q a b) = 1\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) = 1", "have \"sqrt ?pqab = ?ab + sqrt (?ab\\<^sup>2 - 1)\""], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) = 1\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) = 1\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) =\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "by simp"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q a b) \\<noteq>\n    cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1) \\<Longrightarrow>\n    False", "with \\<open>sqrt ?pqab \\<noteq> ?ab + sqrt (?ab\\<^sup>2 - 1)\\<close>"], ["proof (chain)\npicking this:\n  sqrt (cross_ratio p q a b) \\<noteq>\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)", "show False"], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) \\<noteq>\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "moreover"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "from \\<open>?pqab \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> cross_ratio p q a b", "have \"?pqab = (sqrt ?pqab)\\<^sup>2\""], ["proof (prove)\nusing this:\n  1 \\<le> cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b = (sqrt (cross_ratio p q a b))\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  cross_ratio p q a b = (sqrt (cross_ratio p q a b))\\<^sup>2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "ultimately"], ["proof (chain)\npicking this:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  cross_ratio p q a b = (sqrt (cross_ratio p q a b))\\<^sup>2", "have \"?pqab = (?ab + sqrt (?ab\\<^sup>2 - 1))\\<^sup>2\""], ["proof (prove)\nusing this:\n  sqrt (cross_ratio p q a b) =\n  cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1)\n  cross_ratio p q a b = (sqrt (cross_ratio p q a b))\\<^sup>2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1))\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  cross_ratio p q a b =\n  (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1))\\<^sup>2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "with \\<open>sqrt (?ab\\<^sup>2 - 1) * sqrt (?ab\\<^sup>2 - 1) = ?ab\\<^sup>2 - 1\\<close>"], ["proof (chain)\npicking this:\n  sqrt ((cosh_dist a b)\\<^sup>2 - 1) * sqrt ((cosh_dist a b)\\<^sup>2 - 1) =\n  (cosh_dist a b)\\<^sup>2 - 1\n  cross_ratio p q a b =\n  (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1))\\<^sup>2", "show \"?pqab = 2 * ?ab\\<^sup>2 + 2 * ?ab * sqrt (?ab\\<^sup>2 - 1) - 1\""], ["proof (prove)\nusing this:\n  sqrt ((cosh_dist a b)\\<^sup>2 - 1) * sqrt ((cosh_dist a b)\\<^sup>2 - 1) =\n  (cosh_dist a b)\\<^sup>2 - 1\n  cross_ratio p q a b =\n  (cosh_dist a b + sqrt ((cosh_dist a b)\\<^sup>2 - 1))\\<^sup>2\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1", "by (simp add: power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  cross_ratio p q a b =\n  2 * (cosh_dist a b)\\<^sup>2 +\n  2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n  1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma are_endpoints_in_S_cross_ratio_correct:\n  assumes \"are_endpoints_in_S p q a b\"\n  shows \"cross_ratio_correct p q a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio_correct p q a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio_correct p q a b", "from \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b", "have \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n    and \"proj2_set_Col {p,q,a,b}\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. (p \\<noteq> q &&& p \\<in> S &&& q \\<in> S) &&&\n    a \\<in> hyp2 &&& b \\<in> hyp2 &&& proj2_set_Col {p, q, a, b}", "by (unfold are_endpoints_in_S_def) simp_all"], ["proof (state)\nthis:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. cross_ratio_correct p q a b", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S", "have \"a \\<noteq> p\" and \"b \\<noteq> p\" and \"a \\<noteq> q\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> p &&& b \\<noteq> p &&& a \\<noteq> q", "by (simp_all add: hyp2_S_not_equal)"], ["proof (state)\nthis:\n  a \\<noteq> p\n  b \\<noteq> p\n  a \\<noteq> q\n\ngoal (1 subgoal):\n 1. cross_ratio_correct p q a b", "with \\<open>proj2_set_Col {p,q,a,b}\\<close> and \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, a, b}\n  p \\<noteq> q\n  a \\<noteq> p\n  b \\<noteq> p\n  a \\<noteq> q", "show \"cross_ratio_correct p q a b\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, a, b}\n  p \\<noteq> q\n  a \\<noteq> p\n  b \\<noteq> p\n  a \\<noteq> q\n\ngoal (1 subgoal):\n 1. cross_ratio_correct p q a b", "by (unfold cross_ratio_correct_def) simp"], ["proof (state)\nthis:\n  cross_ratio_correct p q a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoints_in_S_cross_ratio_correct:\n  assumes \"a \\<noteq> b\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b", "from assms"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (rule endpoints_in_S_are_endpoints_in_S)"], ["proof (state)\nthis:\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b", "thus \"cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (rule are_endpoints_in_S_cross_ratio_correct)"], ["proof (state)\nthis:\n  cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma endpoints_in_S_perp_foot_cross_ratio_correct:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"a \\<noteq> b\"\n  and \"proj2_incident a l\" and \"proj2_incident b l\"\n  shows \"cross_ratio_correct\n  (endpoint_in_S a b) (endpoint_in_S b a) a (perp_foot c l)\"\n  (is \"cross_ratio_correct ?p ?q a ?d\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  a \\<noteq> b\n  proj2_incident a l\n  proj2_incident b l", "have \"are_endpoints_in_S ?p ?q a ?d\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  a \\<noteq> b\n  proj2_incident a l\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "by (rule endpoints_in_S_perp_foot_are_endpoints_in_S)"], ["proof (state)\nthis:\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n   (perp_foot c l)\n\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "thus \"cross_ratio_correct ?p ?q a ?d\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a\n   (perp_foot c l)\n\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a\n     (perp_foot c l)", "by (rule are_endpoints_in_S_cross_ratio_correct)"], ["proof (state)\nthis:\n  cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a\n   (perp_foot c l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cosh_dist_unique:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"p \\<in> S\"\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt b) (cart2_pt p)\" (is \"B\\<^sub>\\<real> ?ca ?cb ?cp\")\n  and \"B\\<^sub>\\<real> (cart2_pt a) (cart2_pt c) (cart2_pt p)\" (is \"B\\<^sub>\\<real> ?ca ?cc ?cp\")\n  and \"cosh_dist a b = cosh_dist a c\" (is \"?ab = ?ac\")\n  shows \"b = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b = c", "let ?q = \"endpoint_in_S p a\""], ["proof (state)\ngoal (1 subgoal):\n 1. b = c", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>c \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  p \\<in> S", "have \"z_non_zero a\" and \"z_non_zero b\" and \"z_non_zero c\" and \"z_non_zero p\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. (z_non_zero a &&& z_non_zero b) &&& z_non_zero c &&& z_non_zero p", "by (simp_all add: hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero a\n  z_non_zero b\n  z_non_zero c\n  z_non_zero p\n\ngoal (1 subgoal):\n 1. b = c", "with \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close> and \\<open>B\\<^sub>\\<real> ?ca ?cc ?cp\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  B\\<^sub>\\<real> cart2_pt a cart2_pt c cart2_pt p\n  z_non_zero a\n  z_non_zero b\n  z_non_zero c\n  z_non_zero p", "have \"\\<exists> l. proj2_incident a l \\<and> proj2_incident b l \\<and> proj2_incident p l\"\n    and \"\\<exists> m. proj2_incident a m \\<and> proj2_incident c m \\<and> proj2_incident p m\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  B\\<^sub>\\<real> cart2_pt a cart2_pt c cart2_pt p\n  z_non_zero a\n  z_non_zero b\n  z_non_zero c\n  z_non_zero p\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       proj2_incident a l \\<and>\n       proj2_incident b l \\<and> proj2_incident p l &&&\n    \\<exists>m.\n       proj2_incident a m \\<and>\n       proj2_incident c m \\<and> proj2_incident p m", "by (simp_all add: euclid_B_cart2_common_line)"], ["proof (state)\nthis:\n  \\<exists>l.\n     proj2_incident a l \\<and> proj2_incident b l \\<and> proj2_incident p l\n  \\<exists>m.\n     proj2_incident a m \\<and> proj2_incident c m \\<and> proj2_incident p m\n\ngoal (1 subgoal):\n 1. b = c", "then"], ["proof (chain)\npicking this:\n  \\<exists>l.\n     proj2_incident a l \\<and> proj2_incident b l \\<and> proj2_incident p l\n  \\<exists>m.\n     proj2_incident a m \\<and> proj2_incident c m \\<and> proj2_incident p m", "obtain l and m where\n    \"proj2_incident a l\" and \"proj2_incident b l\" and \"proj2_incident p l\"\n    and \"proj2_incident a m\" and \"proj2_incident c m\" and \"proj2_incident p m\""], ["proof (prove)\nusing this:\n  \\<exists>l.\n     proj2_incident a l \\<and> proj2_incident b l \\<and> proj2_incident p l\n  \\<exists>m.\n     proj2_incident a m \\<and> proj2_incident c m \\<and> proj2_incident p m\n\ngoal (1 subgoal):\n 1. (\\<And>l m.\n        \\<lbrakk>proj2_incident a l; proj2_incident b l; proj2_incident p l;\n         proj2_incident a m; proj2_incident c m; proj2_incident p m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident p l\n  proj2_incident a m\n  proj2_incident c m\n  proj2_incident p m\n\ngoal (1 subgoal):\n 1. b = c", "from \\<open>a \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  p \\<in> S", "have \"a \\<noteq> p\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  p \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> p", "by (rule hyp2_S_not_equal)"], ["proof (state)\nthis:\n  a \\<noteq> p\n\ngoal (1 subgoal):\n 1. b = c", "with \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident p l\\<close>\n    and \\<open>proj2_incident a m\\<close> and \\<open>proj2_incident p m\\<close> and proj2_incident_unique"], ["proof (chain)\npicking this:\n  proj2_incident a l\n  proj2_incident p l\n  proj2_incident a m\n  proj2_incident p m\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  a \\<noteq> p", "have \"l = m\""], ["proof (prove)\nusing this:\n  proj2_incident a l\n  proj2_incident p l\n  proj2_incident a m\n  proj2_incident p m\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n  a \\<noteq> p\n\ngoal (1 subgoal):\n 1. l = m", "by fast"], ["proof (state)\nthis:\n  l = m\n\ngoal (1 subgoal):\n 1. b = c", "with \\<open>proj2_incident c m\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident c m\n  l = m", "have \"proj2_incident c l\""], ["proof (prove)\nusing this:\n  proj2_incident c m\n  l = m\n\ngoal (1 subgoal):\n 1. proj2_incident c l", "by simp"], ["proof (state)\nthis:\n  proj2_incident c l\n\ngoal (1 subgoal):\n 1. b = c", "with \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>c \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close>\n    and \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident b l\\<close> and \\<open>proj2_incident p l\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  p \\<in> S\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident p l\n  proj2_incident c l", "have \"are_endpoints_in_S p ?q b a\" and \"are_endpoints_in_S p ?q c a\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  p \\<in> S\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident p l\n  proj2_incident c l\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p a) b a &&&\n    are_endpoints_in_S p (endpoint_in_S p a) c a", "by (simp_all add: end_and_opposite_are_endpoints_in_S)"], ["proof (state)\nthis:\n  are_endpoints_in_S p (endpoint_in_S p a) b a\n  are_endpoints_in_S p (endpoint_in_S p a) c a\n\ngoal (1 subgoal):\n 1. b = c", "with are_endpoints_in_S_swap_34"], ["proof (chain)\npicking this:\n  are_endpoints_in_S ?p ?q ?a ?b \\<Longrightarrow>\n  are_endpoints_in_S ?p ?q ?b ?a\n  are_endpoints_in_S p (endpoint_in_S p a) b a\n  are_endpoints_in_S p (endpoint_in_S p a) c a", "have \"are_endpoints_in_S p ?q a b\" and \"are_endpoints_in_S p ?q a c\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S ?p ?q ?a ?b \\<Longrightarrow>\n  are_endpoints_in_S ?p ?q ?b ?a\n  are_endpoints_in_S p (endpoint_in_S p a) b a\n  are_endpoints_in_S p (endpoint_in_S p a) c a\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p (endpoint_in_S p a) a b &&&\n    are_endpoints_in_S p (endpoint_in_S p a) a c", "by fast+"], ["proof (state)\nthis:\n  are_endpoints_in_S p (endpoint_in_S p a) a b\n  are_endpoints_in_S p (endpoint_in_S p a) a c\n\ngoal (1 subgoal):\n 1. b = c", "hence \"cross_ratio_correct p ?q a b\" and \"cross_ratio_correct p ?q a c\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p (endpoint_in_S p a) a b\n  are_endpoints_in_S p (endpoint_in_S p a) a c\n\ngoal (1 subgoal):\n 1. cross_ratio_correct p (endpoint_in_S p a) a b &&&\n    cross_ratio_correct p (endpoint_in_S p a) a c", "by (simp_all add: are_endpoints_in_S_cross_ratio_correct)"], ["proof (state)\nthis:\n  cross_ratio_correct p (endpoint_in_S p a) a b\n  cross_ratio_correct p (endpoint_in_S p a) a c\n\ngoal (1 subgoal):\n 1. b = c", "moreover"], ["proof (state)\nthis:\n  cross_ratio_correct p (endpoint_in_S p a) a b\n  cross_ratio_correct p (endpoint_in_S p a) a c\n\ngoal (1 subgoal):\n 1. b = c", "from \\<open>are_endpoints_in_S p ?q a b\\<close> and \\<open>are_endpoints_in_S p ?q a c\\<close>\n    and \\<open>B\\<^sub>\\<real> ?ca ?cb ?cp\\<close> and \\<open>B\\<^sub>\\<real> ?ca ?cc ?cp\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p (endpoint_in_S p a) a b\n  are_endpoints_in_S p (endpoint_in_S p a) a c\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  B\\<^sub>\\<real> cart2_pt a cart2_pt c cart2_pt p", "have \"cross_ratio p ?q a b = 2 * ?ab\\<^sup>2 + 2 * ?ab * sqrt (?ab\\<^sup>2 - 1) - 1\"\n    and \"cross_ratio p ?q a c = 2 * ?ac\\<^sup>2 + 2 * ?ac * sqrt (?ac\\<^sup>2 - 1) - 1\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p (endpoint_in_S p a) a b\n  are_endpoints_in_S p (endpoint_in_S p a) a c\n  B\\<^sub>\\<real> cart2_pt a cart2_pt b cart2_pt p\n  B\\<^sub>\\<real> cart2_pt a cart2_pt c cart2_pt p\n\ngoal (1 subgoal):\n 1. cross_ratio p (endpoint_in_S p a) a b =\n    2 * (cosh_dist a b)\\<^sup>2 +\n    2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n    1 &&&\n    cross_ratio p (endpoint_in_S p a) a c =\n    2 * (cosh_dist a c)\\<^sup>2 +\n    2 * cosh_dist a c * sqrt ((cosh_dist a c)\\<^sup>2 - 1) -\n    1", "by (simp_all add: cross_ratio_in_terms_of_cosh_dist)"], ["proof (state)\nthis:\n  cross_ratio p (endpoint_in_S p a) a b =\n  2 * (cosh_dist a b)\\<^sup>2 +\n  2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n  1\n  cross_ratio p (endpoint_in_S p a) a c =\n  2 * (cosh_dist a c)\\<^sup>2 +\n  2 * cosh_dist a c * sqrt ((cosh_dist a c)\\<^sup>2 - 1) -\n  1\n\ngoal (1 subgoal):\n 1. b = c", "with \\<open>?ab = ?ac\\<close>"], ["proof (chain)\npicking this:\n  cosh_dist a b = cosh_dist a c\n  cross_ratio p (endpoint_in_S p a) a b =\n  2 * (cosh_dist a b)\\<^sup>2 +\n  2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n  1\n  cross_ratio p (endpoint_in_S p a) a c =\n  2 * (cosh_dist a c)\\<^sup>2 +\n  2 * cosh_dist a c * sqrt ((cosh_dist a c)\\<^sup>2 - 1) -\n  1", "have \"cross_ratio p ?q a b = cross_ratio p ?q a c\""], ["proof (prove)\nusing this:\n  cosh_dist a b = cosh_dist a c\n  cross_ratio p (endpoint_in_S p a) a b =\n  2 * (cosh_dist a b)\\<^sup>2 +\n  2 * cosh_dist a b * sqrt ((cosh_dist a b)\\<^sup>2 - 1) -\n  1\n  cross_ratio p (endpoint_in_S p a) a c =\n  2 * (cosh_dist a c)\\<^sup>2 +\n  2 * cosh_dist a c * sqrt ((cosh_dist a c)\\<^sup>2 - 1) -\n  1\n\ngoal (1 subgoal):\n 1. cross_ratio p (endpoint_in_S p a) a b =\n    cross_ratio p (endpoint_in_S p a) a c", "by simp"], ["proof (state)\nthis:\n  cross_ratio p (endpoint_in_S p a) a b =\n  cross_ratio p (endpoint_in_S p a) a c\n\ngoal (1 subgoal):\n 1. b = c", "ultimately"], ["proof (chain)\npicking this:\n  cross_ratio_correct p (endpoint_in_S p a) a b\n  cross_ratio_correct p (endpoint_in_S p a) a c\n  cross_ratio p (endpoint_in_S p a) a b =\n  cross_ratio p (endpoint_in_S p a) a c", "show \"b = c\""], ["proof (prove)\nusing this:\n  cross_ratio_correct p (endpoint_in_S p a) a b\n  cross_ratio_correct p (endpoint_in_S p a) a c\n  cross_ratio p (endpoint_in_S p a) a b =\n  cross_ratio p (endpoint_in_S p a) a c\n\ngoal (1 subgoal):\n 1. b = c", "by (rule cross_ratio_unique)"], ["proof (state)\nthis:\n  b = c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cosh_dist_swap:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n  shows \"cosh_dist a b = cosh_dist b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist a b = cosh_dist b a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist a b = cosh_dist b a", "from assms and K2_isometry_swap"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  \\<lbrakk>?a \\<in> hyp2; ?b \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 ?a J = ?b \\<and> apply_cltn2 ?b J = ?a", "obtain J where \"is_K2_isometry J\" and \"apply_cltn2 a J = b\"\n    and \"apply_cltn2 b J = a\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  \\<lbrakk>?a \\<in> hyp2; ?b \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 ?a J = ?b \\<and> apply_cltn2 ?b J = ?a\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; apply_cltn2 a J = b;\n         apply_cltn2 b J = a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  apply_cltn2 a J = b\n  apply_cltn2 b J = a\n\ngoal (1 subgoal):\n 1. cosh_dist a b = cosh_dist b a", "from \\<open>b \\<in> hyp2\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  b \\<in> hyp2\n  a \\<in> hyp2\n  is_K2_isometry J", "have \"cosh_dist (apply_cltn2 b J) (apply_cltn2 a J) = cosh_dist b a\""], ["proof (prove)\nusing this:\n  b \\<in> hyp2\n  a \\<in> hyp2\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. cosh_dist (apply_cltn2 b J) (apply_cltn2 a J) = cosh_dist b a", "by (rule K2_isometry_cosh_dist)"], ["proof (state)\nthis:\n  cosh_dist (apply_cltn2 b J) (apply_cltn2 a J) = cosh_dist b a\n\ngoal (1 subgoal):\n 1. cosh_dist a b = cosh_dist b a", "with \\<open>apply_cltn2 a J = b\\<close> and \\<open>apply_cltn2 b J = a\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 a J = b\n  apply_cltn2 b J = a\n  cosh_dist (apply_cltn2 b J) (apply_cltn2 a J) = cosh_dist b a", "show \"cosh_dist a b = cosh_dist b a\""], ["proof (prove)\nusing this:\n  apply_cltn2 a J = b\n  apply_cltn2 b J = a\n  cosh_dist (apply_cltn2 b J) (apply_cltn2 a J) = cosh_dist b a\n\ngoal (1 subgoal):\n 1. cosh_dist a b = cosh_dist b a", "by simp"], ["proof (state)\nthis:\n  cosh_dist a b = cosh_dist b a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exp_2dist_1_equal:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"exp_2dist a b = 1\"\n  shows \"a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "assume \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "with \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  a \\<noteq> b", "have \"cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\"\n    (is \"cross_ratio_correct ?p ?q a b\")"], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (simp add: endpoints_in_S_cross_ratio_correct)"], ["proof (state)\nthis:\n  cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "from \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b", "have \"exp_2dist a b = cross_ratio ?p ?q a b\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (unfold exp_2dist_def) simp"], ["proof (state)\nthis:\n  exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "with \\<open>exp_2dist a b = 1\\<close>"], ["proof (chain)\npicking this:\n  exp_2dist a b = 1\n  exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b", "have \"cross_ratio ?p ?q a b = 1\""], ["proof (prove)\nusing this:\n  exp_2dist a b = 1\n  exp_2dist a b = cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b = 1", "by simp"], ["proof (state)\nthis:\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b = 1\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b = 1", "have \"a = b\""], ["proof (prove)\nusing this:\n  cross_ratio_correct (endpoint_in_S a b) (endpoint_in_S b a) a b\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b = 1\n\ngoal (1 subgoal):\n 1. a = b", "by (rule cross_ratio_1_equal)"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "with \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a = b", "show False"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a = b\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>A formula for a cross ratio involving a perpendicular foot\\<close>"], ["", "lemma described_perp_foot_cross_ratio_formula:\n  assumes \"a \\<noteq> b\" and \"c \\<in> hyp2\" and \"are_endpoints_in_S p q a b\"\n  and \"proj2_incident p l\" and \"proj2_incident q l\" and \"M_perp l m\"\n  and \"proj2_incident d l\" and \"proj2_incident d m\" and \"proj2_incident c m\"\n  shows \"cross_ratio p q d a\n    = (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c)\n      / (cosh_dist a c * cross_ratio p q a b\n        - cosh_dist b c * sqrt (cross_ratio p q a b))\"\n  (is \"?pqda = (?bc * sqrt ?pqab - ?ac) / (?ac * ?pqab - ?bc * sqrt ?pqab)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "let ?da = \"cosh_dist d a\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "let ?db = \"cosh_dist d b\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "let ?dc = \"cosh_dist d c\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "let ?pqdb = \"cross_ratio p q d b\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>are_endpoints_in_S p q a b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q a b", "have \"p \\<noteq> q\" and \"p \\<in> S\" and \"q \\<in> S\" and \"a \\<in> hyp2\" and \"b \\<in> hyp2\"\n    and \"proj2_set_Col {p,q,a,b}\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. (p \\<noteq> q &&& p \\<in> S &&& q \\<in> S) &&&\n    a \\<in> hyp2 &&& b \\<in> hyp2 &&& proj2_set_Col {p, q, a, b}", "by (unfold are_endpoints_in_S_def) simp_all"], ["proof (state)\nthis:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>proj2_set_Col {p,q,a,b}\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, a, b}", "obtain l' where \"proj2_incident p l'\" and \"proj2_incident q l'\"\n    and \"proj2_incident a l'\" and \"proj2_incident b l'\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>proj2_incident p l'; proj2_incident q l';\n         proj2_incident a l'; proj2_incident b l'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold proj2_set_Col_def) auto"], ["proof (state)\nthis:\n  proj2_incident p l'\n  proj2_incident q l'\n  proj2_incident a l'\n  proj2_incident b l'\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>p \\<noteq> q\\<close> and \\<open>proj2_incident p l'\\<close> and \\<open>proj2_incident q l'\\<close>\n    and \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close> and proj2_incident_unique"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  proj2_incident p l'\n  proj2_incident q l'\n  proj2_incident p l\n  proj2_incident q l\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m", "have \"l' = l\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  proj2_incident p l'\n  proj2_incident q l'\n  proj2_incident p l\n  proj2_incident q l\n  \\<lbrakk>proj2_incident ?p ?l; proj2_incident ?q ?l; proj2_incident ?p ?m;\n   proj2_incident ?q ?m\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q \\<or> ?l = ?m\n\ngoal (1 subgoal):\n 1. l' = l", "by fast"], ["proof (state)\nthis:\n  l' = l\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "with \\<open>proj2_incident a l'\\<close> and \\<open>proj2_incident b l'\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident a l'\n  proj2_incident b l'\n  l' = l", "have \"proj2_incident a l\" and \"proj2_incident b l\""], ["proof (prove)\nusing this:\n  proj2_incident a l'\n  proj2_incident b l'\n  l' = l\n\ngoal (1 subgoal):\n 1. proj2_incident a l &&& proj2_incident b l", "by simp_all"], ["proof (state)\nthis:\n  proj2_incident a l\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>M_perp l m\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>proj2_incident a l\\<close> and \\<open>c \\<in> hyp2\\<close>\n    and \\<open>proj2_incident c m\\<close> and \\<open>proj2_incident d l\\<close> and \\<open>proj2_incident d m\\<close>"], ["proof (chain)\npicking this:\n  M_perp l m\n  a \\<in> hyp2\n  proj2_incident a l\n  c \\<in> hyp2\n  proj2_incident c m\n  proj2_incident d l\n  proj2_incident d m", "have \"d \\<in> hyp2\""], ["proof (prove)\nusing this:\n  M_perp l m\n  a \\<in> hyp2\n  proj2_incident a l\n  c \\<in> hyp2\n  proj2_incident c m\n  proj2_incident d l\n  proj2_incident d m\n\ngoal (1 subgoal):\n 1. d \\<in> hyp2", "by (rule M_perp_hyp2)"], ["proof (state)\nthis:\n  d \\<in> hyp2\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "with \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>c \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  d \\<in> hyp2", "have \"?bc > 0\" and \"?da > 0\" and \"?ac > 0\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  d \\<in> hyp2\n\ngoal (1 subgoal):\n 1. 0 < cosh_dist b c &&& 0 < cosh_dist d a &&& 0 < cosh_dist a c", "by (simp_all add: cosh_dist_positive)"], ["proof (state)\nthis:\n  0 < cosh_dist b c\n  0 < cosh_dist d a\n  0 < cosh_dist a c\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close> and \\<open>proj2_incident d l\\<close>\n    and \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident b l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident d l\n  proj2_incident a l\n  proj2_incident b l", "have \"proj2_set_Col {p,q,d,a}\" and \"proj2_set_Col {p,q,d,b}\"\n    and \"proj2_set_Col {p,q,a,b}\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident d l\n  proj2_incident a l\n  proj2_incident b l\n\ngoal (1 subgoal):\n 1. proj2_set_Col {p, q, d, a} &&&\n    proj2_set_Col {p, q, d, b} &&& proj2_set_Col {p, q, a, b}", "by (unfold proj2_set_Col_def) (simp_all add: exI [of _ l])"], ["proof (state)\nthis:\n  proj2_set_Col {p, q, d, a}\n  proj2_set_Col {p, q, d, b}\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "with \\<open>p \\<noteq> q\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close> and \\<open>d \\<in> hyp2\\<close> and \\<open>a \\<in> hyp2\\<close>\n    and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  d \\<in> hyp2\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, q, d, a}\n  proj2_set_Col {p, q, d, b}\n  proj2_set_Col {p, q, a, b}", "have \"are_endpoints_in_S p q d a\" and \"are_endpoints_in_S p q d b\"\n    and \"are_endpoints_in_S p q a b\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  p \\<in> S\n  q \\<in> S\n  d \\<in> hyp2\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_set_Col {p, q, d, a}\n  proj2_set_Col {p, q, d, b}\n  proj2_set_Col {p, q, a, b}\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S p q d a &&&\n    are_endpoints_in_S p q d b &&& are_endpoints_in_S p q a b", "by (unfold are_endpoints_in_S_def) simp_all"], ["proof (state)\nthis:\n  are_endpoints_in_S p q d a\n  are_endpoints_in_S p q d b\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "hence \"?pqda > 0\" and \"?pqdb > 0\" and \"?pqab > 0\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q d a\n  are_endpoints_in_S p q d b\n  are_endpoints_in_S p q a b\n\ngoal (1 subgoal):\n 1. 0 < cross_ratio p q d a &&&\n    0 < cross_ratio p q d b &&& 0 < cross_ratio p q a b", "by (simp_all add: cross_ratio_S_S_hyp2_hyp2_positive)"], ["proof (state)\nthis:\n  0 < cross_ratio p q d a\n  0 < cross_ratio p q d b\n  0 < cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>proj2_incident p l\\<close> and \\<open>proj2_incident q l\\<close> and \\<open>proj2_incident a l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l", "have \"proj2_Col p q a\""], ["proof (prove)\nusing this:\n  proj2_incident p l\n  proj2_incident q l\n  proj2_incident a l\n\ngoal (1 subgoal):\n 1. proj2_Col p q a", "by (rule proj2_incident_Col)"], ["proof (state)\nthis:\n  proj2_Col p q a\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>p \\<in> S\\<close> and \\<open>q \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S", "have \"a \\<noteq> p\" and \"a \\<noteq> q\" and \"b \\<noteq> p\""], ["proof (prove)\nusing this:\n  a \\<in> hyp2\n  b \\<in> hyp2\n  p \\<in> S\n  q \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> p &&& a \\<noteq> q &&& b \\<noteq> p", "by (simp_all add: hyp2_S_not_equal)"], ["proof (state)\nthis:\n  a \\<noteq> p\n  a \\<noteq> q\n  b \\<noteq> p\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>proj2_Col p q a\\<close> and \\<open>p \\<noteq> q\\<close> and \\<open>a \\<noteq> p\\<close> and \\<open>a \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  proj2_Col p q a\n  p \\<noteq> q\n  a \\<noteq> p\n  a \\<noteq> q", "have \"?pqdb = ?pqda * ?pqab\""], ["proof (prove)\nusing this:\n  proj2_Col p q a\n  p \\<noteq> q\n  a \\<noteq> p\n  a \\<noteq> q\n\ngoal (1 subgoal):\n 1. cross_ratio p q d b = cross_ratio p q d a * cross_ratio p q a b", "by (rule cross_ratio_product [symmetric])"], ["proof (state)\nthis:\n  cross_ratio p q d b = cross_ratio p q d a * cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>M_perp l m\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close> and \\<open>c \\<in> hyp2\\<close> and \\<open>d \\<in> hyp2\\<close>\n    and \\<open>proj2_incident a l\\<close> and \\<open>proj2_incident b l\\<close> and \\<open>proj2_incident d l\\<close>\n    and \\<open>proj2_incident d m\\<close> and \\<open>proj2_incident c m\\<close>\n    and cosh_dist_perp_divide [of l m _ d c]"], ["proof (chain)\npicking this:\n  M_perp l m\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  d \\<in> hyp2\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident d l\n  proj2_incident d m\n  proj2_incident c m\n  \\<lbrakk>M_perp l m; ?a \\<in> hyp2; d \\<in> hyp2; c \\<in> hyp2;\n   proj2_incident ?a l; proj2_incident d l; proj2_incident d m;\n   proj2_incident c m\\<rbrakk>\n  \\<Longrightarrow> cosh_dist d c = cosh_dist ?a c / cosh_dist d ?a", "have \"?dc = ?ac / ?da\" and \"?dc = ?bc / ?db\""], ["proof (prove)\nusing this:\n  M_perp l m\n  a \\<in> hyp2\n  b \\<in> hyp2\n  c \\<in> hyp2\n  d \\<in> hyp2\n  proj2_incident a l\n  proj2_incident b l\n  proj2_incident d l\n  proj2_incident d m\n  proj2_incident c m\n  \\<lbrakk>M_perp l m; ?a \\<in> hyp2; d \\<in> hyp2; c \\<in> hyp2;\n   proj2_incident ?a l; proj2_incident d l; proj2_incident d m;\n   proj2_incident c m\\<rbrakk>\n  \\<Longrightarrow> cosh_dist d c = cosh_dist ?a c / cosh_dist d ?a\n\ngoal (1 subgoal):\n 1. cosh_dist d c = cosh_dist a c / cosh_dist d a &&&\n    cosh_dist d c = cosh_dist b c / cosh_dist d b", "by fast+"], ["proof (state)\nthis:\n  cosh_dist d c = cosh_dist a c / cosh_dist d a\n  cosh_dist d c = cosh_dist b c / cosh_dist d b\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "hence \"?ac / ?da = ?bc / ?db\""], ["proof (prove)\nusing this:\n  cosh_dist d c = cosh_dist a c / cosh_dist d a\n  cosh_dist d c = cosh_dist b c / cosh_dist d b\n\ngoal (1 subgoal):\n 1. cosh_dist a c / cosh_dist d a = cosh_dist b c / cosh_dist d b", "by simp"], ["proof (state)\nthis:\n  cosh_dist a c / cosh_dist d a = cosh_dist b c / cosh_dist d b\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "with \\<open>?bc > 0\\<close> and \\<open>?da > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < cosh_dist b c\n  0 < cosh_dist d a\n  cosh_dist a c / cosh_dist d a = cosh_dist b c / cosh_dist d b", "have \"?ac / ?bc = ?da / ?db\""], ["proof (prove)\nusing this:\n  0 < cosh_dist b c\n  0 < cosh_dist d a\n  cosh_dist a c / cosh_dist d a = cosh_dist b c / cosh_dist d b\n\ngoal (1 subgoal):\n 1. cosh_dist a c / cosh_dist b c = cosh_dist d a / cosh_dist d b", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  cosh_dist a c / cosh_dist b c = cosh_dist d a / cosh_dist d b\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "also"], ["proof (state)\nthis:\n  cosh_dist a c / cosh_dist b c = cosh_dist d a / cosh_dist d b\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>are_endpoints_in_S p q d a\\<close> and \\<open>are_endpoints_in_S p q d b\\<close>"], ["proof (chain)\npicking this:\n  are_endpoints_in_S p q d a\n  are_endpoints_in_S p q d b", "have \"\\<dots>\n    = 2 * (sqrt ?pqda + 1 / (sqrt ?pqda))\n    / (2 * (sqrt ?pqdb + 1 / (sqrt ?pqdb)))\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S p q d a\n  are_endpoints_in_S p q d b\n\ngoal (1 subgoal):\n 1. cosh_dist d a / cosh_dist d b =\n    2 * (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n    (2 * (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)))", "by (simp add: cosh_dist_general)"], ["proof (state)\nthis:\n  cosh_dist d a / cosh_dist d b =\n  2 * (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (2 * (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)))\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "also"], ["proof (state)\nthis:\n  cosh_dist d a / cosh_dist d b =\n  2 * (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (2 * (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)))\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "have \"\\<dots> = (sqrt ?pqda + 1 / (sqrt ?pqda)) / (sqrt ?pqdb + 1 / (sqrt ?pqdb))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n    (2 * (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))) =\n    (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n    (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))", "by (simp only: mult_divide_mult_cancel_left_if) simp"], ["proof (state)\nthis:\n  2 * (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (2 * (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))) =\n  (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "also"], ["proof (state)\nthis:\n  2 * (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (2 * (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))) =\n  (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "have \"\\<dots>\n    = sqrt ?pqdb * (sqrt ?pqda + 1 / (sqrt ?pqda))\n    / (sqrt ?pqdb * (sqrt ?pqdb + 1 / (sqrt ?pqdb)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n    (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)) =\n    sqrt (cross_ratio p q d b) *\n    (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n    (sqrt (cross_ratio p q d b) *\n     (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)))", "by simp"], ["proof (state)\nthis:\n  (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)) =\n  sqrt (cross_ratio p q d b) *\n  (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (sqrt (cross_ratio p q d b) *\n   (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)))\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "also"], ["proof (state)\nthis:\n  (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)) =\n  sqrt (cross_ratio p q d b) *\n  (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (sqrt (cross_ratio p q d b) *\n   (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b)))\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>?pqdb > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < cross_ratio p q d b", "have \"\\<dots> = (sqrt (?pqdb * ?pqda) + sqrt (?pqdb / ?pqda)) / (?pqdb + 1)\""], ["proof (prove)\nusing this:\n  0 < cross_ratio p q d b\n\ngoal (1 subgoal):\n 1. sqrt (cross_ratio p q d b) *\n    (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n    (sqrt (cross_ratio p q d b) *\n     (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))) =\n    (sqrt (cross_ratio p q d b * cross_ratio p q d a) +\n     sqrt (cross_ratio p q d b / cross_ratio p q d a)) /\n    (cross_ratio p q d b + 1)", "by (simp add: real_sqrt_mult [symmetric] real_sqrt_divide algebra_simps)"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q d b) *\n  (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (sqrt (cross_ratio p q d b) *\n   (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))) =\n  (sqrt (cross_ratio p q d b * cross_ratio p q d a) +\n   sqrt (cross_ratio p q d b / cross_ratio p q d a)) /\n  (cross_ratio p q d b + 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "also"], ["proof (state)\nthis:\n  sqrt (cross_ratio p q d b) *\n  (sqrt (cross_ratio p q d a) + 1 / sqrt (cross_ratio p q d a)) /\n  (sqrt (cross_ratio p q d b) *\n   (sqrt (cross_ratio p q d b) + 1 / sqrt (cross_ratio p q d b))) =\n  (sqrt (cross_ratio p q d b * cross_ratio p q d a) +\n   sqrt (cross_ratio p q d b / cross_ratio p q d a)) /\n  (cross_ratio p q d b + 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>?pqdb = ?pqda * ?pqab\\<close> and \\<open>?pqda > 0\\<close> and real_sqrt_pow2"], ["proof (chain)\npicking this:\n  cross_ratio p q d b = cross_ratio p q d a * cross_ratio p q a b\n  0 < cross_ratio p q d a\n  0 \\<le> ?x \\<Longrightarrow> (sqrt ?x)\\<^sup>2 = ?x", "have \"\\<dots> = (?pqda * sqrt ?pqab + sqrt ?pqab) / (?pqda * ?pqab + 1)\""], ["proof (prove)\nusing this:\n  cross_ratio p q d b = cross_ratio p q d a * cross_ratio p q a b\n  0 < cross_ratio p q d a\n  0 \\<le> ?x \\<Longrightarrow> (sqrt ?x)\\<^sup>2 = ?x\n\ngoal (1 subgoal):\n 1. (sqrt (cross_ratio p q d b * cross_ratio p q d a) +\n     sqrt (cross_ratio p q d b / cross_ratio p q d a)) /\n    (cross_ratio p q d b + 1) =\n    (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n     sqrt (cross_ratio p q a b)) /\n    (cross_ratio p q d a * cross_ratio p q a b + 1)", "by (simp add: real_sqrt_mult power2_eq_square)"], ["proof (state)\nthis:\n  (sqrt (cross_ratio p q d b * cross_ratio p q d a) +\n   sqrt (cross_ratio p q d b / cross_ratio p q d a)) /\n  (cross_ratio p q d b + 1) =\n  (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n   sqrt (cross_ratio p q a b)) /\n  (cross_ratio p q d a * cross_ratio p q a b + 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "finally"], ["proof (chain)\npicking this:\n  cosh_dist a c / cosh_dist b c =\n  (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n   sqrt (cross_ratio p q a b)) /\n  (cross_ratio p q d a * cross_ratio p q a b + 1)", "have \"?ac / ?bc = (?pqda * sqrt ?pqab + sqrt ?pqab) / (?pqda * ?pqab + 1)\""], ["proof (prove)\nusing this:\n  cosh_dist a c / cosh_dist b c =\n  (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n   sqrt (cross_ratio p q a b)) /\n  (cross_ratio p q d a * cross_ratio p q a b + 1)\n\ngoal (1 subgoal):\n 1. cosh_dist a c / cosh_dist b c =\n    (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n     sqrt (cross_ratio p q a b)) /\n    (cross_ratio p q d a * cross_ratio p q a b + 1)", "."], ["proof (state)\nthis:\n  cosh_dist a c / cosh_dist b c =\n  (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n   sqrt (cross_ratio p q a b)) /\n  (cross_ratio p q d a * cross_ratio p q a b + 1)\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>?pqda > 0\\<close> and \\<open>?pqab > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < cross_ratio p q d a\n  0 < cross_ratio p q a b", "have \"?pqda * ?pqab + 1 > 0\""], ["proof (prove)\nusing this:\n  0 < cross_ratio p q d a\n  0 < cross_ratio p q a b\n\ngoal (1 subgoal):\n 1. 0 < cross_ratio p q d a * cross_ratio p q a b + 1", "by (simp add: add_pos_pos)"], ["proof (state)\nthis:\n  0 < cross_ratio p q d a * cross_ratio p q a b + 1\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "with \\<open>?bc > 0\\<close>\n    and \\<open>?ac / ?bc = (?pqda * sqrt ?pqab + sqrt ?pqab) / (?pqda * ?pqab + 1)\\<close>"], ["proof (chain)\npicking this:\n  0 < cosh_dist b c\n  cosh_dist a c / cosh_dist b c =\n  (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n   sqrt (cross_ratio p q a b)) /\n  (cross_ratio p q d a * cross_ratio p q a b + 1)\n  0 < cross_ratio p q d a * cross_ratio p q a b + 1", "have \"?ac * (?pqda * ?pqab + 1) = ?bc * (?pqda * sqrt ?pqab + sqrt ?pqab)\""], ["proof (prove)\nusing this:\n  0 < cosh_dist b c\n  cosh_dist a c / cosh_dist b c =\n  (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n   sqrt (cross_ratio p q a b)) /\n  (cross_ratio p q d a * cross_ratio p q a b + 1)\n  0 < cross_ratio p q d a * cross_ratio p q a b + 1\n\ngoal (1 subgoal):\n 1. cosh_dist a c * (cross_ratio p q d a * cross_ratio p q a b + 1) =\n    cosh_dist b c *\n    (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n     sqrt (cross_ratio p q a b))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  cosh_dist a c * (cross_ratio p q d a * cross_ratio p q a b + 1) =\n  cosh_dist b c *\n  (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n   sqrt (cross_ratio p q a b))\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "hence \"?pqda * (?ac * ?pqab - ?bc * sqrt ?pqab) = ?bc * sqrt ?pqab - ?ac\""], ["proof (prove)\nusing this:\n  cosh_dist a c * (cross_ratio p q d a * cross_ratio p q a b + 1) =\n  cosh_dist b c *\n  (cross_ratio p q d a * sqrt (cross_ratio p q a b) +\n   sqrt (cross_ratio p q a b))\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a *\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b)) =\n    cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  cross_ratio p q d a *\n  (cosh_dist a c * cross_ratio p q a b -\n   cosh_dist b c * sqrt (cross_ratio p q a b)) =\n  cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "from \\<open>proj2_set_Col {p,q,a,b}\\<close> and \\<open>p \\<noteq> q\\<close> and \\<open>a \\<noteq> p\\<close> and \\<open>a \\<noteq> q\\<close>\n    and \\<open>b \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {p, q, a, b}\n  p \\<noteq> q\n  a \\<noteq> p\n  a \\<noteq> q\n  b \\<noteq> p", "have \"cross_ratio_correct p q a b\""], ["proof (prove)\nusing this:\n  proj2_set_Col {p, q, a, b}\n  p \\<noteq> q\n  a \\<noteq> p\n  a \\<noteq> q\n  b \\<noteq> p\n\ngoal (1 subgoal):\n 1. cross_ratio_correct p q a b", "by (unfold cross_ratio_correct_def) simp"], ["proof (state)\nthis:\n  cross_ratio_correct p q a b\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "have \"?ac * ?pqab - ?bc * sqrt ?pqab \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cosh_dist a c * cross_ratio p q a b -\n    cosh_dist b c * sqrt (cross_ratio p q a b) \\<noteq>\n    0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. cosh_dist a c * cross_ratio p q a b -\n    cosh_dist b c * sqrt (cross_ratio p q a b) =\n    0 \\<Longrightarrow>\n    False", "assume \"?ac * ?pqab - ?bc * sqrt ?pqab = 0\""], ["proof (state)\nthis:\n  cosh_dist a c * cross_ratio p q a b -\n  cosh_dist b c * sqrt (cross_ratio p q a b) =\n  0\n\ngoal (1 subgoal):\n 1. cosh_dist a c * cross_ratio p q a b -\n    cosh_dist b c * sqrt (cross_ratio p q a b) =\n    0 \\<Longrightarrow>\n    False", "with \\<open>?pqda * (?ac * ?pqab - ?bc * sqrt ?pqab) = ?bc * sqrt ?pqab - ?ac\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio p q d a *\n  (cosh_dist a c * cross_ratio p q a b -\n   cosh_dist b c * sqrt (cross_ratio p q a b)) =\n  cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c\n  cosh_dist a c * cross_ratio p q a b -\n  cosh_dist b c * sqrt (cross_ratio p q a b) =\n  0", "have \"?bc * sqrt ?pqab - ?ac = 0\""], ["proof (prove)\nusing this:\n  cross_ratio p q d a *\n  (cosh_dist a c * cross_ratio p q a b -\n   cosh_dist b c * sqrt (cross_ratio p q a b)) =\n  cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c\n  cosh_dist a c * cross_ratio p q a b -\n  cosh_dist b c * sqrt (cross_ratio p q a b) =\n  0\n\ngoal (1 subgoal):\n 1. cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c = 0", "by simp"], ["proof (state)\nthis:\n  cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c = 0\n\ngoal (1 subgoal):\n 1. cosh_dist a c * cross_ratio p q a b -\n    cosh_dist b c * sqrt (cross_ratio p q a b) =\n    0 \\<Longrightarrow>\n    False", "with \\<open>?ac * ?pqab - ?bc * sqrt ?pqab = 0\\<close> and \\<open>?ac > 0\\<close>"], ["proof (chain)\npicking this:\n  cosh_dist a c * cross_ratio p q a b -\n  cosh_dist b c * sqrt (cross_ratio p q a b) =\n  0\n  0 < cosh_dist a c\n  cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c = 0", "have \"?pqab = 1\""], ["proof (prove)\nusing this:\n  cosh_dist a c * cross_ratio p q a b -\n  cosh_dist b c * sqrt (cross_ratio p q a b) =\n  0\n  0 < cosh_dist a c\n  cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c = 0\n\ngoal (1 subgoal):\n 1. cross_ratio p q a b = 1", "by simp"], ["proof (state)\nthis:\n  cross_ratio p q a b = 1\n\ngoal (1 subgoal):\n 1. cosh_dist a c * cross_ratio p q a b -\n    cosh_dist b c * sqrt (cross_ratio p q a b) =\n    0 \\<Longrightarrow>\n    False", "with \\<open>cross_ratio_correct p q a b\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio_correct p q a b\n  cross_ratio p q a b = 1", "have \"a = b\""], ["proof (prove)\nusing this:\n  cross_ratio_correct p q a b\n  cross_ratio p q a b = 1\n\ngoal (1 subgoal):\n 1. a = b", "by (rule cross_ratio_1_equal)"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. cosh_dist a c * cross_ratio p q a b -\n    cosh_dist b c * sqrt (cross_ratio p q a b) =\n    0 \\<Longrightarrow>\n    False", "with \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a = b", "show False"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a = b\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cosh_dist a c * cross_ratio p q a b -\n  cosh_dist b c * sqrt (cross_ratio p q a b) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "with \\<open>?pqda * (?ac * ?pqab - ?bc * sqrt ?pqab) = ?bc * sqrt ?pqab - ?ac\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio p q d a *\n  (cosh_dist a c * cross_ratio p q a b -\n   cosh_dist b c * sqrt (cross_ratio p q a b)) =\n  cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c\n  cosh_dist a c * cross_ratio p q a b -\n  cosh_dist b c * sqrt (cross_ratio p q a b) \\<noteq>\n  0", "show \"?pqda = (?bc * sqrt ?pqab - ?ac) / (?ac * ?pqab - ?bc * sqrt ?pqab)\""], ["proof (prove)\nusing this:\n  cross_ratio p q d a *\n  (cosh_dist a c * cross_ratio p q a b -\n   cosh_dist b c * sqrt (cross_ratio p q a b)) =\n  cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c\n  cosh_dist a c * cross_ratio p q a b -\n  cosh_dist b c * sqrt (cross_ratio p q a b) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. cross_ratio p q d a =\n    (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n    (cosh_dist a c * cross_ratio p q a b -\n     cosh_dist b c * sqrt (cross_ratio p q a b))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  cross_ratio p q d a =\n  (cosh_dist b c * sqrt (cross_ratio p q a b) - cosh_dist a c) /\n  (cosh_dist a c * cross_ratio p q a b -\n   cosh_dist b c * sqrt (cross_ratio p q a b))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perp_foot_cross_ratio_formula:\n  assumes \"a \\<in> hyp2\" and \"b \\<in> hyp2\" and \"c \\<in> hyp2\" and \"a \\<noteq> b\"\n  shows \"cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n      (perp_foot c (proj2_line_through a b)) a\n    = (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c)\n      / (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))\"\n  (is \"cross_ratio ?p ?q ?d a\n    = (?bc * sqrt ?pqab - ?ac) / (?ac * ?pqab - ?bc * sqrt ?pqab)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "from \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2", "have \"are_endpoints_in_S ?p ?q a b\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n\ngoal (1 subgoal):\n 1. are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b", "by (rule endpoints_in_S_are_endpoints_in_S)"], ["proof (state)\nthis:\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "let ?l = \"proj2_line_through a b\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "have \"proj2_incident a ?l\" and \"proj2_incident b ?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident a (proj2_line_through a b) &&&\n    proj2_incident b (proj2_line_through a b)", "by (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "with \\<open>a \\<noteq> b\\<close> and \\<open>a \\<in> hyp2\\<close> and \\<open>b \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)", "have \"proj2_incident ?p ?l\" and \"proj2_incident ?q ?l\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> hyp2\n  b \\<in> hyp2\n  proj2_incident a (proj2_line_through a b)\n  proj2_incident b (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. proj2_incident (endpoint_in_S a b) (proj2_line_through a b) &&&\n    proj2_incident (endpoint_in_S b a) (proj2_line_through a b)", "by (simp_all add: endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "let ?m = \"drop_perp c ?l\""], ["proof (state)\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "have \"M_perp ?l ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M_perp (proj2_line_through a b) (drop_perp c (proj2_line_through a b))", "by (rule drop_perp_perp)"], ["proof (state)\nthis:\n  M_perp (proj2_line_through a b) (drop_perp c (proj2_line_through a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "have \"proj2_incident ?d ?l\" and \"proj2_incident ?d ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (perp_foot c (proj2_line_through a b))\n     (proj2_line_through a b) &&&\n    proj2_incident (perp_foot c (proj2_line_through a b))\n     (drop_perp c (proj2_line_through a b))", "by (rule perp_foot_incident)+"], ["proof (state)\nthis:\n  proj2_incident (perp_foot c (proj2_line_through a b))\n   (proj2_line_through a b)\n  proj2_incident (perp_foot c (proj2_line_through a b))\n   (drop_perp c (proj2_line_through a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "have \"proj2_incident c ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident c (drop_perp c (proj2_line_through a b))", "by (rule drop_perp_incident)"], ["proof (state)\nthis:\n  proj2_incident c (drop_perp c (proj2_line_through a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "with \\<open>a \\<noteq> b\\<close> and \\<open>c \\<in> hyp2\\<close> and \\<open>are_endpoints_in_S ?p ?q a b\\<close>\n    and \\<open>proj2_incident ?p ?l\\<close> and \\<open>proj2_incident ?q ?l\\<close> and \\<open>M_perp ?l ?m\\<close>\n    and \\<open>proj2_incident ?d ?l\\<close> and \\<open>proj2_incident ?d ?m\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  c \\<in> hyp2\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)\n  M_perp (proj2_line_through a b) (drop_perp c (proj2_line_through a b))\n  proj2_incident (perp_foot c (proj2_line_through a b))\n   (proj2_line_through a b)\n  proj2_incident (perp_foot c (proj2_line_through a b))\n   (drop_perp c (proj2_line_through a b))\n  proj2_incident c (drop_perp c (proj2_line_through a b))", "have \"cross_ratio ?p ?q ?d a\n    = (?bc * sqrt (cross_ratio ?p ?q a b) - ?ac)\n    / (?ac * (cross_ratio ?p ?q a b) - ?bc * sqrt (cross_ratio ?p ?q a b))\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  c \\<in> hyp2\n  are_endpoints_in_S (endpoint_in_S a b) (endpoint_in_S b a) a b\n  proj2_incident (endpoint_in_S a b) (proj2_line_through a b)\n  proj2_incident (endpoint_in_S b a) (proj2_line_through a b)\n  M_perp (proj2_line_through a b) (drop_perp c (proj2_line_through a b))\n  proj2_incident (perp_foot c (proj2_line_through a b))\n   (proj2_line_through a b)\n  proj2_incident (perp_foot c (proj2_line_through a b))\n   (drop_perp c (proj2_line_through a b))\n  proj2_incident c (drop_perp c (proj2_line_through a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c *\n     sqrt (cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b) -\n     cosh_dist a c) /\n    (cosh_dist a c *\n     cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b -\n     cosh_dist b c *\n     sqrt (cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b))", "by (rule described_perp_foot_cross_ratio_formula)"], ["proof (state)\nthis:\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n   (perp_foot c (proj2_line_through a b)) a =\n  (cosh_dist b c *\n   sqrt (cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b) -\n   cosh_dist a c) /\n  (cosh_dist a c * cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b -\n   cosh_dist b c *\n   sqrt (cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "with \\<open>a \\<noteq> b\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n   (perp_foot c (proj2_line_through a b)) a =\n  (cosh_dist b c *\n   sqrt (cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b) -\n   cosh_dist a c) /\n  (cosh_dist a c * cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b -\n   cosh_dist b c *\n   sqrt (cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b))", "show \"cross_ratio ?p ?q ?d a\n    = (?bc * sqrt ?pqab - ?ac) / (?ac * ?pqab - ?bc * sqrt ?pqab)\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n   (perp_foot c (proj2_line_through a b)) a =\n  (cosh_dist b c *\n   sqrt (cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b) -\n   cosh_dist a c) /\n  (cosh_dist a c * cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b -\n   cosh_dist b c *\n   sqrt (cross_ratio (endpoint_in_S a b) (endpoint_in_S b a) a b))\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n     (perp_foot c (proj2_line_through a b)) a =\n    (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n    (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))", "by (unfold exp_2dist_def) simp"], ["proof (state)\nthis:\n  cross_ratio (endpoint_in_S a b) (endpoint_in_S b a)\n   (perp_foot c (proj2_line_through a b)) a =\n  (cosh_dist b c * sqrt (exp_2dist a b) - cosh_dist a c) /\n  (cosh_dist a c * exp_2dist a b - cosh_dist b c * sqrt (exp_2dist a b))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The Klein--Beltrami model satisfies axiom 5\\<close>"], ["", "lemma statement69:\n  assumes \"a b \\<congruent>\\<^sub>K a' b'\" and \"b c \\<congruent>\\<^sub>K b' c'\" and \"a c \\<congruent>\\<^sub>K a' c'\"\n  shows \"\\<exists> J. is_K2_isometry J\n  \\<and> hyp2_cltn2 a J = a' \\<and> hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "assume \"a = b\""], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>a b \\<congruent>\\<^sub>K a' b'\\<close>"], ["proof (chain)\npicking this:\n  a b \\<congruent>\\<^sub>K a' b'\n  a = b", "have \"a' = b'\""], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K a' b'\n  a = b\n\ngoal (1 subgoal):\n 1. a' = b'", "by (simp add: hyp2.A3_reversed)"], ["proof (state)\nthis:\n  a' = b'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>a = b\\<close> and \\<open>b c \\<congruent>\\<^sub>K b' c'\\<close>"], ["proof (chain)\npicking this:\n  a = b\n  b c \\<congruent>\\<^sub>K b' c'\n  a' = b'", "show \"\\<exists> J. is_K2_isometry J\n    \\<and> hyp2_cltn2 a J = a' \\<and> hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\""], ["proof (prove)\nusing this:\n  a = b\n  b c \\<congruent>\\<^sub>K b' c'\n  a' = b'\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "by (unfold real_hyp2_C_def) simp"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     hyp2_cltn2 a J = a' \\<and>\n     hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "assume \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>a b \\<congruent>\\<^sub>K a' b'\\<close>"], ["proof (chain)\npicking this:\n  a b \\<congruent>\\<^sub>K a' b'\n  a \\<noteq> b", "have \"a' \\<noteq> b'\""], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K a' b'\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a' \\<noteq> b'", "by (auto simp add: hyp2.A3')"], ["proof (state)\nthis:\n  a' \\<noteq> b'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "let ?pa = \"Rep_hyp2 a\"\n    and ?pb = \"Rep_hyp2 b\"\n    and ?pc = \"Rep_hyp2 c\"\n    and ?pa' = \"Rep_hyp2 a'\"\n    and ?pb' = \"Rep_hyp2 b'\"\n    and ?pc' = \"Rep_hyp2 c'\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "define pp pq l pp' pq' l'\n    where \"pp = endpoint_in_S ?pa ?pb\"\n      and \"pq = endpoint_in_S ?pb ?pa\"\n      and \"l = proj2_line_through ?pa ?pb\"\n      and \"pp' = endpoint_in_S ?pa' ?pb'\"\n      and \"pq' = endpoint_in_S ?pb' ?pa'\"\n      and \"l' = proj2_line_through ?pa' ?pb'\""], ["proof (state)\nthis:\n  pp = endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)\n  pq = endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)\n  l = proj2_line_through (Rep_hyp2 a) (Rep_hyp2 b)\n  pp' = endpoint_in_S (Rep_hyp2 a') (Rep_hyp2 b')\n  pq' = endpoint_in_S (Rep_hyp2 b') (Rep_hyp2 a')\n  l' = proj2_line_through (Rep_hyp2 a') (Rep_hyp2 b')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "define pd ps m pd' ps' m'\n    where \"pd = perp_foot ?pc l\"\n      and \"ps = perp_up ?pc l\"\n      and \"m = drop_perp ?pc l\"\n      and \"pd' = perp_foot ?pc' l'\"\n      and \"ps' = perp_up ?pc' l'\"\n      and \"m' = drop_perp ?pc' l'\""], ["proof (state)\nthis:\n  pd = perp_foot (Rep_hyp2 c) l\n  ps = perp_up (Rep_hyp2 c) l\n  m = drop_perp (Rep_hyp2 c) l\n  pd' = perp_foot (Rep_hyp2 c') l'\n  ps' = perp_up (Rep_hyp2 c') l'\n  m' = drop_perp (Rep_hyp2 c') l'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "have \"pp \\<in> S\" and \"pp' \\<in> S\" and \"pq \\<in> S\" and \"pq' \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pp \\<in> S &&& pp' \\<in> S) &&& pq \\<in> S &&& pq' \\<in> S", "unfolding pp_def and pp'_def and pq_def and pq'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<in> S &&&\n     endpoint_in_S (Rep_hyp2 a') (Rep_hyp2 b') \\<in> S) &&&\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a) \\<in> S &&&\n    endpoint_in_S (Rep_hyp2 b') (Rep_hyp2 a') \\<in> S", "by (simp_all add: Rep_hyp2 endpoint_in_S)"], ["proof (state)\nthis:\n  pp \\<in> S\n  pp' \\<in> S\n  pq \\<in> S\n  pq' \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>a \\<noteq> b\\<close> and \\<open>a' \\<noteq> b'\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a' \\<noteq> b'", "have \"?pa \\<noteq> ?pb\" and \"?pa' \\<noteq> ?pb'\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a' \\<noteq> b'\n\ngoal (1 subgoal):\n 1. Rep_hyp2 a \\<noteq> Rep_hyp2 b &&& Rep_hyp2 a' \\<noteq> Rep_hyp2 b'", "by (unfold Rep_hyp2_inject)"], ["proof (state)\nthis:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "moreover"], ["proof (state)\nthis:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "have \"proj2_incident ?pa l\" and \"proj2_incident ?pb l\"\n    and \"proj2_incident ?pa' l'\" and \"proj2_incident ?pb' l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_incident (Rep_hyp2 a) l &&& proj2_incident (Rep_hyp2 b) l) &&&\n    proj2_incident (Rep_hyp2 a') l' &&& proj2_incident (Rep_hyp2 b') l'", "by (unfold l_def l'_def) (rule proj2_line_through_incident)+"], ["proof (state)\nthis:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 b) l\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (Rep_hyp2 b') l'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "ultimately"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 b) l\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (Rep_hyp2 b') l'", "have \"proj2_incident pp l\" and \"proj2_incident pp' l'\"\n    and \"proj2_incident pq l\" and \"proj2_incident pq' l'\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 b) l\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (Rep_hyp2 b') l'\n\ngoal (1 subgoal):\n 1. (proj2_incident pp l &&& proj2_incident pp' l') &&&\n    proj2_incident pq l &&& proj2_incident pq' l'", "unfolding pp_def and pp'_def and pq_def and pq'_def"], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 b) l\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (Rep_hyp2 b') l'\n\ngoal (1 subgoal):\n 1. (proj2_incident (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b)) l &&&\n     proj2_incident (endpoint_in_S (Rep_hyp2 a') (Rep_hyp2 b')) l') &&&\n    proj2_incident (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) l &&&\n    proj2_incident (endpoint_in_S (Rep_hyp2 b') (Rep_hyp2 a')) l'", "by (simp_all add: Rep_hyp2 endpoint_in_S_incident)"], ["proof (state)\nthis:\n  proj2_incident pp l\n  proj2_incident pp' l'\n  proj2_incident pq l\n  proj2_incident pq' l'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>pp \\<in> S\\<close> and \\<open>pp' \\<in> S\\<close> and \\<open>proj2_incident pp l\\<close>\n    and \\<open>proj2_incident pp' l'\\<close> and \\<open>proj2_incident ?pa l\\<close>\n    and \\<open>proj2_incident ?pa' l'\\<close>"], ["proof (chain)\npicking this:\n  pp \\<in> S\n  pp' \\<in> S\n  proj2_incident pp l\n  proj2_incident pp' l'\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'", "have \"right_angle pp pd ps\" and \"right_angle pp' pd' ps'\""], ["proof (prove)\nusing this:\n  pp \\<in> S\n  pp' \\<in> S\n  proj2_incident pp l\n  proj2_incident pp' l'\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. right_angle pp pd ps &&& right_angle pp' pd' ps'", "unfolding pd_def and ps_def and pd'_def and ps'_def"], ["proof (prove)\nusing this:\n  pp \\<in> S\n  pp' \\<in> S\n  proj2_incident pp l\n  proj2_incident pp' l'\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. right_angle pp (perp_foot (Rep_hyp2 c) l) (perp_up (Rep_hyp2 c) l) &&&\n    right_angle pp' (perp_foot (Rep_hyp2 c') l') (perp_up (Rep_hyp2 c') l')", "by (simp_all add: Rep_hyp2\n      perp_foot_up_right_angle [of pp ?pc ?pa l]\n      perp_foot_up_right_angle [of pp' ?pc' ?pa' l'])"], ["proof (state)\nthis:\n  right_angle pp pd ps\n  right_angle pp' pd' ps'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with right_angle_to_right_angle [of pp pd ps pp' pd' ps']"], ["proof (chain)\npicking this:\n  \\<lbrakk>right_angle pp pd ps; right_angle pp' pd' ps'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 pp J = pp' \\<and>\n                       apply_cltn2 pd J = pd' \\<and> apply_cltn2 ps J = ps'\n  right_angle pp pd ps\n  right_angle pp' pd' ps'", "obtain J where \"is_K2_isometry J\" and \"apply_cltn2 pp J = pp'\"\n    and \"apply_cltn2 pd J = pd'\" and \"apply_cltn2 ps J = ps'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>right_angle pp pd ps; right_angle pp' pd' ps'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       apply_cltn2 pp J = pp' \\<and>\n                       apply_cltn2 pd J = pd' \\<and> apply_cltn2 ps J = ps'\n  right_angle pp pd ps\n  right_angle pp' pd' ps'\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; apply_cltn2 pp J = pp';\n         apply_cltn2 pd J = pd'; apply_cltn2 ps J = ps'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  apply_cltn2 pp J = pp'\n  apply_cltn2 pd J = pd'\n  apply_cltn2 ps J = ps'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "let ?paJ = \"apply_cltn2 ?pa J\"\n    and ?pbJ = \"apply_cltn2 ?pb J\"\n    and ?pcJ = \"apply_cltn2 ?pc J\"\n    and ?pdJ = \"apply_cltn2 pd J\"\n    and ?ppJ = \"apply_cltn2 pp J\"\n    and ?pqJ = \"apply_cltn2 pq J\"\n    and ?psJ = \"apply_cltn2 ps J\"\n    and ?lJ = \"apply_cltn2_line l J\"\n    and ?mJ = \"apply_cltn2_line m J\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "have \"proj2_incident pd l\" and \"proj2_incident pd' l'\"\n    and \"proj2_incident pd m\" and \"proj2_incident pd' m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (proj2_incident pd l &&& proj2_incident pd' l') &&&\n    proj2_incident pd m &&& proj2_incident pd' m'", "by (unfold pd_def pd'_def m_def m'_def) (rule perp_foot_incident)+"], ["proof (state)\nthis:\n  proj2_incident pd l\n  proj2_incident pd' l'\n  proj2_incident pd m\n  proj2_incident pd' m'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_incident pp l\\<close> and \\<open>proj2_incident pq l\\<close>\n    and \\<open>proj2_incident pd l\\<close> and \\<open>proj2_incident ?pa l\\<close>\n    and \\<open>proj2_incident ?pb l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident pp l\n  proj2_incident pq l\n  proj2_incident pd l\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 b) l", "have \"proj2_set_Col {pp,pq,pd,?pa}\" and \"proj2_set_Col {pp,pq,?pa,?pb}\""], ["proof (prove)\nusing this:\n  proj2_incident pp l\n  proj2_incident pq l\n  proj2_incident pd l\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 b) l\n\ngoal (1 subgoal):\n 1. proj2_set_Col {pp, pq, pd, Rep_hyp2 a} &&&\n    proj2_set_Col {pp, pq, Rep_hyp2 a, Rep_hyp2 b}", "by (unfold pd_def proj2_set_Col_def) (simp_all add: exI [of _ l])"], ["proof (state)\nthis:\n  proj2_set_Col {pp, pq, pd, Rep_hyp2 a}\n  proj2_set_Col {pp, pq, Rep_hyp2 a, Rep_hyp2 b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>?pa \\<noteq> ?pb\\<close> and \\<open>?pa' \\<noteq> ?pb'\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'", "have \"pp \\<noteq> pq\" and \"pp' \\<noteq> pq'\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n\ngoal (1 subgoal):\n 1. pp \\<noteq> pq &&& pp' \\<noteq> pq'", "unfolding pp_def and pq_def and pp'_def and pq'_def"], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n\ngoal (1 subgoal):\n 1. endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b) \\<noteq>\n    endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a) &&&\n    endpoint_in_S (Rep_hyp2 a') (Rep_hyp2 b') \\<noteq>\n    endpoint_in_S (Rep_hyp2 b') (Rep_hyp2 a')", "by (simp_all add: Rep_hyp2 endpoint_in_S_swap)"], ["proof (state)\nthis:\n  pp \\<noteq> pq\n  pp' \\<noteq> pq'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_incident ?pa l\\<close> and \\<open>proj2_incident ?pa' l'\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'", "have \"pd \\<in> hyp2\" and \"pd' \\<in> hyp2\""], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. pd \\<in> hyp2 &&& pd' \\<in> hyp2", "unfolding pd_def and pd'_def"], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. perp_foot (Rep_hyp2 c) l \\<in> hyp2 &&&\n    perp_foot (Rep_hyp2 c') l' \\<in> hyp2", "by (simp_all add: Rep_hyp2 perp_foot_hyp2 [of ?pa l ?pc]\n      perp_foot_hyp2 [of ?pa' l' ?pc'])"], ["proof (state)\nthis:\n  pd \\<in> hyp2\n  pd' \\<in> hyp2\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_incident ?pa l\\<close> and \\<open>proj2_incident ?pa' l'\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'", "have \"ps \\<in> S\" and \"ps' \\<in> S\""], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. ps \\<in> S &&& ps' \\<in> S", "unfolding ps_def and ps'_def"], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. perp_up (Rep_hyp2 c) l \\<in> S &&& perp_up (Rep_hyp2 c') l' \\<in> S", "by (simp_all add: Rep_hyp2 perp_up_in_S [of ?pc ?pa l]\n      perp_up_in_S [of ?pc' ?pa' l'])"], ["proof (state)\nthis:\n  ps \\<in> S\n  ps' \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>pd \\<in> hyp2\\<close> and \\<open>pp \\<in> S\\<close> and \\<open>ps \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  pd \\<in> hyp2\n  pp \\<in> S\n  ps \\<in> S", "have \"pd \\<noteq> pp\" and \"?pa \\<noteq> pp\" and \"?pb \\<noteq> pp\" and \"pd \\<noteq> ps\""], ["proof (prove)\nusing this:\n  pd \\<in> hyp2\n  pp \\<in> S\n  ps \\<in> S\n\ngoal (1 subgoal):\n 1. (pd \\<noteq> pp &&& Rep_hyp2 a \\<noteq> pp) &&&\n    Rep_hyp2 b \\<noteq> pp &&& pd \\<noteq> ps", "by (simp_all add: Rep_hyp2 hyp2_S_not_equal)"], ["proof (state)\nthis:\n  pd \\<noteq> pp\n  Rep_hyp2 a \\<noteq> pp\n  Rep_hyp2 b \\<noteq> pp\n  pd \\<noteq> ps\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>is_K2_isometry J\\<close> and \\<open>pq \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  pq \\<in> S", "have \"?pqJ \\<in> S\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  pq \\<in> S\n\ngoal (1 subgoal):\n 1. apply_cltn2 pq J \\<in> S", "by (unfold is_K2_isometry_def) simp"], ["proof (state)\nthis:\n  apply_cltn2 pq J \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>pd \\<noteq> pp\\<close> and \\<open>proj2_incident pd l\\<close> and \\<open>proj2_incident pp l\\<close>\n    and \\<open>proj2_incident pd' l'\\<close> and \\<open>proj2_incident pp' l'\\<close>"], ["proof (chain)\npicking this:\n  pd \\<noteq> pp\n  proj2_incident pd l\n  proj2_incident pp l\n  proj2_incident pd' l'\n  proj2_incident pp' l'", "have \"?lJ = l'\""], ["proof (prove)\nusing this:\n  pd \\<noteq> pp\n  proj2_incident pd l\n  proj2_incident pp l\n  proj2_incident pd' l'\n  proj2_incident pp' l'\n\ngoal (1 subgoal):\n 1. apply_cltn2_line l J = l'", "unfolding \\<open>?pdJ = pd'\\<close> [symmetric] and \\<open>?ppJ = pp'\\<close> [symmetric]"], ["proof (prove)\nusing this:\n  pd \\<noteq> pp\n  proj2_incident pd l\n  proj2_incident pp l\n  proj2_incident (apply_cltn2 pd J) l'\n  proj2_incident (apply_cltn2 pp J) l'\n\ngoal (1 subgoal):\n 1. apply_cltn2_line l J = l'", "by (rule apply_cltn2_line_unique)"], ["proof (state)\nthis:\n  apply_cltn2_line l J = l'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_incident pq l\\<close> and \\<open>proj2_incident ?pa l\\<close>\n    and \\<open>proj2_incident ?pb l\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident pq l\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 b) l", "have \"proj2_incident ?pqJ l'\" and \"proj2_incident ?paJ l'\"\n    and \"proj2_incident ?pbJ l'\""], ["proof (prove)\nusing this:\n  proj2_incident pq l\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 b) l\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 pq J) l' &&&\n    proj2_incident (apply_cltn2 (Rep_hyp2 a) J) l' &&&\n    proj2_incident (apply_cltn2 (Rep_hyp2 b) J) l'", "by (unfold \\<open>?lJ = l'\\<close> [symmetric]) simp_all"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 pq J) l'\n  proj2_incident (apply_cltn2 (Rep_hyp2 a) J) l'\n  proj2_incident (apply_cltn2 (Rep_hyp2 b) J) l'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>?pa' \\<noteq> ?pb'\\<close> and \\<open>?pqJ \\<in> S\\<close> and \\<open>proj2_incident ?pa' l'\\<close>\n    and \\<open>proj2_incident ?pb' l'\\<close> and \\<open>proj2_incident ?pqJ l'\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n  apply_cltn2 pq J \\<in> S\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (Rep_hyp2 b') l'\n  proj2_incident (apply_cltn2 pq J) l'", "have \"?pqJ = pp' \\<or> ?pqJ = pq'\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n  apply_cltn2 pq J \\<in> S\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (Rep_hyp2 b') l'\n  proj2_incident (apply_cltn2 pq J) l'\n\ngoal (1 subgoal):\n 1. apply_cltn2 pq J = pp' \\<or> apply_cltn2 pq J = pq'", "unfolding pp'_def and pq'_def"], ["proof (prove)\nusing this:\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n  apply_cltn2 pq J \\<in> S\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (Rep_hyp2 b') l'\n  proj2_incident (apply_cltn2 pq J) l'\n\ngoal (1 subgoal):\n 1. apply_cltn2 pq J = endpoint_in_S (Rep_hyp2 a') (Rep_hyp2 b') \\<or>\n    apply_cltn2 pq J = endpoint_in_S (Rep_hyp2 b') (Rep_hyp2 a')", "by (simp add: Rep_hyp2 endpoints_in_S_incident_unique)"], ["proof (state)\nthis:\n  apply_cltn2 pq J = pp' \\<or> apply_cltn2 pq J = pq'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "moreover"], ["proof (state)\nthis:\n  apply_cltn2 pq J = pp' \\<or> apply_cltn2 pq J = pq'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>pp \\<noteq> pq\\<close> and apply_cltn2_injective"], ["proof (chain)\npicking this:\n  pp \\<noteq> pq\n  apply_cltn2 ?p ?C = apply_cltn2 ?q ?C \\<Longrightarrow> ?p = ?q", "have \"pp' \\<noteq> ?pqJ\""], ["proof (prove)\nusing this:\n  pp \\<noteq> pq\n  apply_cltn2 ?p ?C = apply_cltn2 ?q ?C \\<Longrightarrow> ?p = ?q\n\ngoal (1 subgoal):\n 1. pp' \\<noteq> apply_cltn2 pq J", "by (unfold \\<open>?ppJ = pp'\\<close> [symmetric]) fast"], ["proof (state)\nthis:\n  pp' \\<noteq> apply_cltn2 pq J\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "ultimately"], ["proof (chain)\npicking this:\n  apply_cltn2 pq J = pp' \\<or> apply_cltn2 pq J = pq'\n  pp' \\<noteq> apply_cltn2 pq J", "have \"?pqJ = pq'\""], ["proof (prove)\nusing this:\n  apply_cltn2 pq J = pp' \\<or> apply_cltn2 pq J = pq'\n  pp' \\<noteq> apply_cltn2 pq J\n\ngoal (1 subgoal):\n 1. apply_cltn2 pq J = pq'", "by simp"], ["proof (state)\nthis:\n  apply_cltn2 pq J = pq'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>?pa' \\<noteq> ?pb'\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'", "have \"cross_ratio pp' pq' pd' ?pa'\n    = (cosh_dist ?pb' ?pc' * sqrt (exp_2dist ?pa' ?pb') - cosh_dist ?pa' ?pc')\n      / (cosh_dist ?pa' ?pc' * exp_2dist ?pa' ?pb'\n        - cosh_dist ?pb' ?pc' * sqrt (exp_2dist ?pa' ?pb'))\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n\ngoal (1 subgoal):\n 1. cross_ratio pp' pq' pd' (Rep_hyp2 a') =\n    (cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n     sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')) -\n     cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')) /\n    (cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') *\n     exp_2dist (Rep_hyp2 a') (Rep_hyp2 b') -\n     cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n     sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')))", "unfolding pp'_def and pq'_def and pd'_def and l'_def"], ["proof (prove)\nusing this:\n  Rep_hyp2 a' \\<noteq> Rep_hyp2 b'\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a') (Rep_hyp2 b'))\n     (endpoint_in_S (Rep_hyp2 b') (Rep_hyp2 a'))\n     (perp_foot (Rep_hyp2 c')\n       (proj2_line_through (Rep_hyp2 a') (Rep_hyp2 b')))\n     (Rep_hyp2 a') =\n    (cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n     sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')) -\n     cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')) /\n    (cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') *\n     exp_2dist (Rep_hyp2 a') (Rep_hyp2 b') -\n     cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n     sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')))", "by (simp add: Rep_hyp2 perp_foot_cross_ratio_formula)"], ["proof (state)\nthis:\n  cross_ratio pp' pq' pd' (Rep_hyp2 a') =\n  (cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n   sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')) -\n   cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')) /\n  (cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') *\n   exp_2dist (Rep_hyp2 a') (Rep_hyp2 b') -\n   cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n   sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "also"], ["proof (state)\nthis:\n  cross_ratio pp' pq' pd' (Rep_hyp2 a') =\n  (cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n   sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')) -\n   cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')) /\n  (cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') *\n   exp_2dist (Rep_hyp2 a') (Rep_hyp2 b') -\n   cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n   sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from assms"], ["proof (chain)\npicking this:\n  a b \\<congruent>\\<^sub>K a' b'\n  b c \\<congruent>\\<^sub>K b' c'\n  a c \\<congruent>\\<^sub>K a' c'", "have \"\\<dots> = (cosh_dist ?pb ?pc * sqrt (exp_2dist ?pa ?pb) - cosh_dist ?pa ?pc)\n    / (cosh_dist ?pa ?pc * exp_2dist ?pa ?pb\n      - cosh_dist ?pb ?pc * sqrt (exp_2dist ?pa ?pb))\""], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K a' b'\n  b c \\<congruent>\\<^sub>K b' c'\n  a c \\<congruent>\\<^sub>K a' c'\n\ngoal (1 subgoal):\n 1. (cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n     sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')) -\n     cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')) /\n    (cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') *\n     exp_2dist (Rep_hyp2 a') (Rep_hyp2 b') -\n     cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n     sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b'))) =\n    (cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n     sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)) -\n     cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)) /\n    (cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) *\n     exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) -\n     cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n     sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)))", "by (simp add: real_hyp2_C_exp_2dist real_hyp2_C_cosh_dist)"], ["proof (state)\nthis:\n  (cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n   sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')) -\n   cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')) /\n  (cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') *\n   exp_2dist (Rep_hyp2 a') (Rep_hyp2 b') -\n   cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n   sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b'))) =\n  (cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n   sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)) -\n   cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)) /\n  (cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) *\n   exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) -\n   cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n   sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "also"], ["proof (state)\nthis:\n  (cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n   sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b')) -\n   cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')) /\n  (cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') *\n   exp_2dist (Rep_hyp2 a') (Rep_hyp2 b') -\n   cosh_dist (Rep_hyp2 b') (Rep_hyp2 c') *\n   sqrt (exp_2dist (Rep_hyp2 a') (Rep_hyp2 b'))) =\n  (cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n   sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)) -\n   cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)) /\n  (cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) *\n   exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) -\n   cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n   sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)))\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>?pa \\<noteq> ?pb\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b", "have \"\\<dots> = cross_ratio pp pq pd ?pa\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n\ngoal (1 subgoal):\n 1. (cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n     sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)) -\n     cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)) /\n    (cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) *\n     exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) -\n     cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n     sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b))) =\n    cross_ratio pp pq pd (Rep_hyp2 a)", "unfolding pp_def and pq_def and pd_def and l_def"], ["proof (prove)\nusing this:\n  Rep_hyp2 a \\<noteq> Rep_hyp2 b\n\ngoal (1 subgoal):\n 1. (cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n     sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)) -\n     cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)) /\n    (cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) *\n     exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) -\n     cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n     sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b))) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a))\n     (perp_foot (Rep_hyp2 c) (proj2_line_through (Rep_hyp2 a) (Rep_hyp2 b)))\n     (Rep_hyp2 a)", "by (simp add: Rep_hyp2 perp_foot_cross_ratio_formula)"], ["proof (state)\nthis:\n  (cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n   sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)) -\n   cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)) /\n  (cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) *\n   exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) -\n   cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n   sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b))) =\n  cross_ratio pp pq pd (Rep_hyp2 a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "also"], ["proof (state)\nthis:\n  (cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n   sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b)) -\n   cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)) /\n  (cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) *\n   exp_2dist (Rep_hyp2 a) (Rep_hyp2 b) -\n   cosh_dist (Rep_hyp2 b) (Rep_hyp2 c) *\n   sqrt (exp_2dist (Rep_hyp2 a) (Rep_hyp2 b))) =\n  cross_ratio pp pq pd (Rep_hyp2 a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_set_Col {pp,pq,pd,?pa}\\<close> and \\<open>pp \\<noteq> pq\\<close> and \\<open>pd \\<noteq> pp\\<close>\n    and \\<open>?pa \\<noteq> pp\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {pp, pq, pd, Rep_hyp2 a}\n  pp \\<noteq> pq\n  pd \\<noteq> pp\n  Rep_hyp2 a \\<noteq> pp", "have \"\\<dots> = cross_ratio ?ppJ ?pqJ ?pdJ ?paJ\""], ["proof (prove)\nusing this:\n  proj2_set_Col {pp, pq, pd, Rep_hyp2 a}\n  pp \\<noteq> pq\n  pd \\<noteq> pp\n  Rep_hyp2 a \\<noteq> pp\n\ngoal (1 subgoal):\n 1. cross_ratio pp pq pd (Rep_hyp2 a) =\n    cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J) (apply_cltn2 pd J)\n     (apply_cltn2 (Rep_hyp2 a) J)", "by (simp add: cross_ratio_cltn2)"], ["proof (state)\nthis:\n  cross_ratio pp pq pd (Rep_hyp2 a) =\n  cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J) (apply_cltn2 pd J)\n   (apply_cltn2 (Rep_hyp2 a) J)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "also"], ["proof (state)\nthis:\n  cross_ratio pp pq pd (Rep_hyp2 a) =\n  cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J) (apply_cltn2 pd J)\n   (apply_cltn2 (Rep_hyp2 a) J)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>?ppJ = pp'\\<close> and \\<open>?pqJ = pq'\\<close> and \\<open>?pdJ = pd'\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 pp J = pp'\n  apply_cltn2 pq J = pq'\n  apply_cltn2 pd J = pd'", "have \"\\<dots> = cross_ratio pp' pq' pd' ?paJ\""], ["proof (prove)\nusing this:\n  apply_cltn2 pp J = pp'\n  apply_cltn2 pq J = pq'\n  apply_cltn2 pd J = pd'\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J) (apply_cltn2 pd J)\n     (apply_cltn2 (Rep_hyp2 a) J) =\n    cross_ratio pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)", "by simp"], ["proof (state)\nthis:\n  cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J) (apply_cltn2 pd J)\n   (apply_cltn2 (Rep_hyp2 a) J) =\n  cross_ratio pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "finally"], ["proof (chain)\npicking this:\n  cross_ratio pp' pq' pd' (Rep_hyp2 a') =\n  cross_ratio pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)", "have \"cross_ratio pp' pq' pd' ?paJ = cross_ratio pp' pq' pd' ?pa'\""], ["proof (prove)\nusing this:\n  cross_ratio pp' pq' pd' (Rep_hyp2 a') =\n  cross_ratio pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)\n\ngoal (1 subgoal):\n 1. cross_ratio pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J) =\n    cross_ratio pp' pq' pd' (Rep_hyp2 a')", "by simp"], ["proof (state)\nthis:\n  cross_ratio pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J) =\n  cross_ratio pp' pq' pd' (Rep_hyp2 a')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "have \"?paJ \\<in> hyp2\" and \"?pbJ \\<in> hyp2\" and \"?pcJ \\<in> hyp2\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2 &&&\n    apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2 &&&\n    apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2", "by (rule apply_cltn2_Rep_hyp2)+"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_incident pp' l'\\<close> and \\<open>proj2_incident pq' l'\\<close>\n    and \\<open>proj2_incident pd' l'\\<close> and \\<open>proj2_incident ?paJ l'\\<close>\n    and \\<open>proj2_incident ?pa' l'\\<close> and \\<open>proj2_incident ?pbJ l'\\<close>\n    and \\<open>proj2_incident ?pb' l'\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident pp' l'\n  proj2_incident pq' l'\n  proj2_incident pd' l'\n  proj2_incident (apply_cltn2 (Rep_hyp2 a) J) l'\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (apply_cltn2 (Rep_hyp2 b) J) l'\n  proj2_incident (Rep_hyp2 b') l'", "have \"proj2_set_Col {pp',pq',pd',?paJ}\" and \"proj2_set_Col {pp',pq',pd',?pa'}\"\n    and \"proj2_set_Col {pp',pq',?pa',?pbJ}\"\n    and \"proj2_set_Col {pp',pq',?pa',?pb'}\""], ["proof (prove)\nusing this:\n  proj2_incident pp' l'\n  proj2_incident pq' l'\n  proj2_incident pd' l'\n  proj2_incident (apply_cltn2 (Rep_hyp2 a) J) l'\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident (apply_cltn2 (Rep_hyp2 b) J) l'\n  proj2_incident (Rep_hyp2 b') l'\n\ngoal (1 subgoal):\n 1. (proj2_set_Col {pp', pq', pd', apply_cltn2 (Rep_hyp2 a) J} &&&\n     proj2_set_Col {pp', pq', pd', Rep_hyp2 a'}) &&&\n    proj2_set_Col {pp', pq', Rep_hyp2 a', apply_cltn2 (Rep_hyp2 b) J} &&&\n    proj2_set_Col {pp', pq', Rep_hyp2 a', Rep_hyp2 b'}", "by (unfold proj2_set_Col_def) (simp_all add: exI [of _ l'])"], ["proof (state)\nthis:\n  proj2_set_Col {pp', pq', pd', apply_cltn2 (Rep_hyp2 a) J}\n  proj2_set_Col {pp', pq', pd', Rep_hyp2 a'}\n  proj2_set_Col {pp', pq', Rep_hyp2 a', apply_cltn2 (Rep_hyp2 b) J}\n  proj2_set_Col {pp', pq', Rep_hyp2 a', Rep_hyp2 b'}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>pp' \\<noteq> pq'\\<close> and \\<open>pp' \\<in> S\\<close> and \\<open>pq' \\<in> S\\<close> and \\<open>pd' \\<in> hyp2\\<close>\n    and \\<open>?paJ \\<in> hyp2\\<close> and \\<open>?pbJ \\<in> hyp2\\<close>"], ["proof (chain)\npicking this:\n  pp' \\<noteq> pq'\n  pp' \\<in> S\n  pq' \\<in> S\n  pd' \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n  proj2_set_Col {pp', pq', pd', apply_cltn2 (Rep_hyp2 a) J}\n  proj2_set_Col {pp', pq', pd', Rep_hyp2 a'}\n  proj2_set_Col {pp', pq', Rep_hyp2 a', apply_cltn2 (Rep_hyp2 b) J}\n  proj2_set_Col {pp', pq', Rep_hyp2 a', Rep_hyp2 b'}", "have \"are_endpoints_in_S pp' pq' pd' ?paJ\"\n    and \"are_endpoints_in_S pp' pq' pd' ?pa'\"\n    and \"are_endpoints_in_S pp' pq' ?pa' ?pbJ\"\n    and \"are_endpoints_in_S pp' pq' ?pa' ?pb'\""], ["proof (prove)\nusing this:\n  pp' \\<noteq> pq'\n  pp' \\<in> S\n  pq' \\<in> S\n  pd' \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 a) J \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 b) J \\<in> hyp2\n  proj2_set_Col {pp', pq', pd', apply_cltn2 (Rep_hyp2 a) J}\n  proj2_set_Col {pp', pq', pd', Rep_hyp2 a'}\n  proj2_set_Col {pp', pq', Rep_hyp2 a', apply_cltn2 (Rep_hyp2 b) J}\n  proj2_set_Col {pp', pq', Rep_hyp2 a', Rep_hyp2 b'}\n\ngoal (1 subgoal):\n 1. (are_endpoints_in_S pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J) &&&\n     are_endpoints_in_S pp' pq' pd' (Rep_hyp2 a')) &&&\n    are_endpoints_in_S pp' pq' (Rep_hyp2 a')\n     (apply_cltn2 (Rep_hyp2 b) J) &&&\n    are_endpoints_in_S pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')", "by (unfold are_endpoints_in_S_def) (simp_all add: Rep_hyp2)"], ["proof (state)\nthis:\n  are_endpoints_in_S pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)\n  are_endpoints_in_S pp' pq' pd' (Rep_hyp2 a')\n  are_endpoints_in_S pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J)\n  are_endpoints_in_S pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "hence \"cross_ratio_correct pp' pq' pd' ?paJ\"\n    and \"cross_ratio_correct pp' pq' pd' ?pa'\"\n    and \"cross_ratio_correct pp' pq' ?pa' ?pbJ\"\n    and \"cross_ratio_correct pp' pq' ?pa' ?pb'\""], ["proof (prove)\nusing this:\n  are_endpoints_in_S pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)\n  are_endpoints_in_S pp' pq' pd' (Rep_hyp2 a')\n  are_endpoints_in_S pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J)\n  are_endpoints_in_S pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n\ngoal (1 subgoal):\n 1. (cross_ratio_correct pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J) &&&\n     cross_ratio_correct pp' pq' pd' (Rep_hyp2 a')) &&&\n    cross_ratio_correct pp' pq' (Rep_hyp2 a')\n     (apply_cltn2 (Rep_hyp2 b) J) &&&\n    cross_ratio_correct pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')", "by (simp_all add: are_endpoints_in_S_cross_ratio_correct)"], ["proof (state)\nthis:\n  cross_ratio_correct pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)\n  cross_ratio_correct pp' pq' pd' (Rep_hyp2 a')\n  cross_ratio_correct pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J)\n  cross_ratio_correct pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>cross_ratio_correct pp' pq' pd' ?paJ\\<close>\n    and \\<open>cross_ratio_correct pp' pq' pd' ?pa'\\<close>\n    and \\<open>cross_ratio pp' pq' pd' ?paJ = cross_ratio pp' pq' pd' ?pa'\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio_correct pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)\n  cross_ratio_correct pp' pq' pd' (Rep_hyp2 a')\n  cross_ratio pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J) =\n  cross_ratio pp' pq' pd' (Rep_hyp2 a')", "have \"?paJ = ?pa'\""], ["proof (prove)\nusing this:\n  cross_ratio_correct pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J)\n  cross_ratio_correct pp' pq' pd' (Rep_hyp2 a')\n  cross_ratio pp' pq' pd' (apply_cltn2 (Rep_hyp2 a) J) =\n  cross_ratio pp' pq' pd' (Rep_hyp2 a')\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 a'", "by (simp add: cross_ratio_unique)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 a'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>?ppJ = pp'\\<close> and \\<open>?pqJ = pq'\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 pp J = pp'\n  apply_cltn2 pq J = pq'\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 a'", "have \"cross_ratio pp' pq' ?pa' ?pbJ = cross_ratio ?ppJ ?pqJ ?paJ ?pbJ\""], ["proof (prove)\nusing this:\n  apply_cltn2 pp J = pp'\n  apply_cltn2 pq J = pq'\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 a'\n\ngoal (1 subgoal):\n 1. cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n    cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J)\n     (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J)", "by simp"], ["proof (state)\nthis:\n  cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J)\n   (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "also"], ["proof (state)\nthis:\n  cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J)\n   (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_set_Col {pp,pq,?pa,?pb}\\<close> and \\<open>pp \\<noteq> pq\\<close> and \\<open>?pa \\<noteq> pp\\<close>\n    and \\<open>?pb \\<noteq> pp\\<close>"], ["proof (chain)\npicking this:\n  proj2_set_Col {pp, pq, Rep_hyp2 a, Rep_hyp2 b}\n  pp \\<noteq> pq\n  Rep_hyp2 a \\<noteq> pp\n  Rep_hyp2 b \\<noteq> pp", "have \"\\<dots> = cross_ratio pp pq ?pa ?pb\""], ["proof (prove)\nusing this:\n  proj2_set_Col {pp, pq, Rep_hyp2 a, Rep_hyp2 b}\n  pp \\<noteq> pq\n  Rep_hyp2 a \\<noteq> pp\n  Rep_hyp2 b \\<noteq> pp\n\ngoal (1 subgoal):\n 1. cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J)\n     (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J) =\n    cross_ratio pp pq (Rep_hyp2 a) (Rep_hyp2 b)", "by (rule cross_ratio_cltn2)"], ["proof (state)\nthis:\n  cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J)\n   (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio pp pq (Rep_hyp2 a) (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "also"], ["proof (state)\nthis:\n  cross_ratio (apply_cltn2 pp J) (apply_cltn2 pq J)\n   (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio pp pq (Rep_hyp2 a) (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>a \\<noteq> b\\<close> and \\<open>a b \\<congruent>\\<^sub>K a' b'\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a b \\<congruent>\\<^sub>K a' b'", "have \"\\<dots> = cross_ratio pp' pq' ?pa' ?pb'\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a b \\<congruent>\\<^sub>K a' b'\n\ngoal (1 subgoal):\n 1. cross_ratio pp pq (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')", "unfolding pp_def pq_def pp'_def pq'_def"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a b \\<congruent>\\<^sub>K a' b'\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 a) (Rep_hyp2 b))\n     (endpoint_in_S (Rep_hyp2 b) (Rep_hyp2 a)) (Rep_hyp2 a) (Rep_hyp2 b) =\n    cross_ratio (endpoint_in_S (Rep_hyp2 a') (Rep_hyp2 b'))\n     (endpoint_in_S (Rep_hyp2 b') (Rep_hyp2 a')) (Rep_hyp2 a') (Rep_hyp2 b')", "by (rule real_hyp2_C_cross_ratio_endpoints_in_S)"], ["proof (state)\nthis:\n  cross_ratio pp pq (Rep_hyp2 a) (Rep_hyp2 b) =\n  cross_ratio pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "finally"], ["proof (chain)\npicking this:\n  cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')", "have \"cross_ratio pp' pq' ?pa' ?pbJ = cross_ratio pp' pq' ?pa' ?pb'\""], ["proof (prove)\nusing this:\n  cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n\ngoal (1 subgoal):\n 1. cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n    cross_ratio pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')", "."], ["proof (state)\nthis:\n  cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>cross_ratio_correct pp' pq' ?pa' ?pbJ\\<close>\n    and \\<open>cross_ratio_correct pp' pq' ?pa' ?pb'\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio_correct pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J)\n  cross_ratio_correct pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n  cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')", "have \"?pbJ = ?pb'\""], ["proof (prove)\nusing this:\n  cross_ratio_correct pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J)\n  cross_ratio_correct pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n  cross_ratio pp' pq' (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 b) J) =\n  cross_ratio pp' pq' (Rep_hyp2 a') (Rep_hyp2 b')\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b'", "by (rule cross_ratio_unique)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "let ?cc = \"cart2_pt ?pc\"\n    and ?cd = \"cart2_pt pd\"\n    and ?cs = \"cart2_pt ps\"\n    and ?cc' = \"cart2_pt ?pc'\"\n    and ?cd' = \"cart2_pt pd'\"\n    and ?cs' = \"cart2_pt ps'\"\n    and ?ccJ = \"cart2_pt ?pcJ\"\n    and ?cdJ = \"cart2_pt ?pdJ\"\n    and ?csJ = \"cart2_pt ?psJ\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_incident ?pa l\\<close> and \\<open>proj2_incident ?pa' l'\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'", "have \"B\\<^sub>\\<real> ?cd ?cc ?cs\" and \"B\\<^sub>\\<real> ?cd' ?cc' ?cs'\""], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt pd cart2_pt (Rep_hyp2 c) cart2_pt ps &&&\n    B\\<^sub>\\<real> cart2_pt pd' cart2_pt (Rep_hyp2 c') cart2_pt ps'", "unfolding pd_def and ps_def and pd'_def and ps'_def"], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (perp_foot (Rep_hyp2 c)\n                       l) cart2_pt\n                           (Rep_hyp2\n                             c) cart2_pt (perp_up (Rep_hyp2 c) l) &&&\n    B\\<^sub>\\<real> cart2_pt\n                     (perp_foot (Rep_hyp2 c')\n                       l') cart2_pt\n                            (Rep_hyp2\n                              c') cart2_pt (perp_up (Rep_hyp2 c') l')", "by (simp_all add: Rep_hyp2 perp_up_at_end [of ?pc ?pa l]\n      perp_up_at_end [of ?pc' ?pa' l'])"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt pd cart2_pt (Rep_hyp2 c) cart2_pt ps\n  B\\<^sub>\\<real> cart2_pt pd' cart2_pt (Rep_hyp2 c') cart2_pt ps'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>pd \\<in> hyp2\\<close> and \\<open>ps \\<in> S\\<close> and \\<open>is_K2_isometry J\\<close>\n    and \\<open>B\\<^sub>\\<real> ?cd ?cc ?cs\\<close>"], ["proof (chain)\npicking this:\n  pd \\<in> hyp2\n  ps \\<in> S\n  is_K2_isometry J\n  B\\<^sub>\\<real> cart2_pt pd cart2_pt (Rep_hyp2 c) cart2_pt ps", "have \"B\\<^sub>\\<real> ?cdJ ?ccJ ?csJ\""], ["proof (prove)\nusing this:\n  pd \\<in> hyp2\n  ps \\<in> S\n  is_K2_isometry J\n  B\\<^sub>\\<real> cart2_pt pd cart2_pt (Rep_hyp2 c) cart2_pt ps\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (apply_cltn2 pd\n                       J) cart2_pt\n                           (apply_cltn2 (Rep_hyp2 c)\n                             J) cart2_pt (apply_cltn2 ps J)", "by (simp add: Rep_hyp2 statement_63)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 pd\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 c)\n                           J) cart2_pt (apply_cltn2 ps J)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "hence \"B\\<^sub>\\<real> ?cd' ?ccJ ?cs'\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt\n                   (apply_cltn2 pd\n                     J) cart2_pt\n                         (apply_cltn2 (Rep_hyp2 c)\n                           J) cart2_pt (apply_cltn2 ps J)\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     pd' cart2_pt (apply_cltn2 (Rep_hyp2 c) J) cart2_pt ps'", "by (unfold \\<open>?pdJ = pd'\\<close> \\<open>?psJ = ps'\\<close>)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   pd' cart2_pt (apply_cltn2 (Rep_hyp2 c) J) cart2_pt ps'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>?paJ = ?pa'\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 a'", "have \"cosh_dist ?pa' ?pcJ = cosh_dist ?paJ ?pcJ\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 a'\n\ngoal (1 subgoal):\n 1. cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n    cosh_dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 c) J)", "by simp"], ["proof (state)\nthis:\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "also"], ["proof (state)\nthis:\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 c) J)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "have \"\\<dots> = cosh_dist ?pa ?pc\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. cosh_dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 c) J) =\n    cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)", "by (simp add: Rep_hyp2 K2_isometry_cosh_dist)"], ["proof (state)\nthis:\n  cosh_dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "also"], ["proof (state)\nthis:\n  cosh_dist (apply_cltn2 (Rep_hyp2 a) J) (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a) (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>a c \\<congruent>\\<^sub>K a' c'\\<close>"], ["proof (chain)\npicking this:\n  a c \\<congruent>\\<^sub>K a' c'", "have \"\\<dots> = cosh_dist ?pa' ?pc'\""], ["proof (prove)\nusing this:\n  a c \\<congruent>\\<^sub>K a' c'\n\ngoal (1 subgoal):\n 1. cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) =\n    cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')", "by (rule real_hyp2_C_cosh_dist)"], ["proof (state)\nthis:\n  cosh_dist (Rep_hyp2 a) (Rep_hyp2 c) =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "finally"], ["proof (chain)\npicking this:\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')", "have \"cosh_dist ?pa' ?pcJ = cosh_dist ?pa' ?pc'\""], ["proof (prove)\nusing this:\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')\n\ngoal (1 subgoal):\n 1. cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n    cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')", "."], ["proof (state)\nthis:\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "have \"M_perp l' m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M_perp l' m'", "by (unfold m'_def) (rule drop_perp_perp)"], ["proof (state)\nthis:\n  M_perp l' m'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "have \"proj2_incident ?pc m\" and \"proj2_incident ?pc' m'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proj2_incident (Rep_hyp2 c) m &&& proj2_incident (Rep_hyp2 c') m'", "by (unfold m_def m'_def) (rule drop_perp_incident)+"], ["proof (state)\nthis:\n  proj2_incident (Rep_hyp2 c) m\n  proj2_incident (Rep_hyp2 c') m'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_incident ?pa l\\<close> and \\<open>proj2_incident ?pa' l'\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'", "have \"proj2_incident ps m\" and \"proj2_incident ps' m'\""], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. proj2_incident ps m &&& proj2_incident ps' m'", "unfolding ps_def and m_def and ps'_def and m'_def"], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 a) l\n  proj2_incident (Rep_hyp2 a') l'\n\ngoal (1 subgoal):\n 1. proj2_incident (perp_up (Rep_hyp2 c) l) (drop_perp (Rep_hyp2 c) l) &&&\n    proj2_incident (perp_up (Rep_hyp2 c') l') (drop_perp (Rep_hyp2 c') l')", "by (simp_all add: Rep_hyp2 perp_up_incident [of ?pc ?pa l]\n      perp_up_incident [of ?pc' ?pa' l'])"], ["proof (state)\nthis:\n  proj2_incident ps m\n  proj2_incident ps' m'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>pd \\<noteq> ps\\<close> and \\<open>proj2_incident pd m\\<close> and \\<open>proj2_incident pd' m'\\<close>"], ["proof (chain)\npicking this:\n  pd \\<noteq> ps\n  proj2_incident pd m\n  proj2_incident pd' m'\n  proj2_incident ps m\n  proj2_incident ps' m'", "have \"?mJ = m'\""], ["proof (prove)\nusing this:\n  pd \\<noteq> ps\n  proj2_incident pd m\n  proj2_incident pd' m'\n  proj2_incident ps m\n  proj2_incident ps' m'\n\ngoal (1 subgoal):\n 1. apply_cltn2_line m J = m'", "unfolding \\<open>?pdJ = pd'\\<close> [symmetric] and \\<open>?psJ = ps'\\<close> [symmetric]"], ["proof (prove)\nusing this:\n  pd \\<noteq> ps\n  proj2_incident pd m\n  proj2_incident (apply_cltn2 pd J) m'\n  proj2_incident ps m\n  proj2_incident (apply_cltn2 ps J) m'\n\ngoal (1 subgoal):\n 1. apply_cltn2_line m J = m'", "by (simp add: apply_cltn2_line_unique)"], ["proof (state)\nthis:\n  apply_cltn2_line m J = m'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "from \\<open>proj2_incident ?pc m\\<close>"], ["proof (chain)\npicking this:\n  proj2_incident (Rep_hyp2 c) m", "have \"proj2_incident ?pcJ m'\""], ["proof (prove)\nusing this:\n  proj2_incident (Rep_hyp2 c) m\n\ngoal (1 subgoal):\n 1. proj2_incident (apply_cltn2 (Rep_hyp2 c) J) m'", "by (unfold \\<open>?mJ = m'\\<close> [symmetric]) simp"], ["proof (state)\nthis:\n  proj2_incident (apply_cltn2 (Rep_hyp2 c) J) m'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>M_perp l' m'\\<close> and Rep_hyp2 [of a'] and \\<open>pd' \\<in> hyp2\\<close> and \\<open>?pcJ \\<in> hyp2\\<close>\n    and Rep_hyp2 [of c'] and \\<open>proj2_incident ?pa' l'\\<close>\n    and \\<open>proj2_incident pd' l'\\<close> and \\<open>proj2_incident pd' m'\\<close>\n    and \\<open>proj2_incident ?pc' m'\\<close>"], ["proof (chain)\npicking this:\n  M_perp l' m'\n  Rep_hyp2 a' \\<in> hyp2\n  pd' \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n  Rep_hyp2 c' \\<in> hyp2\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident pd' l'\n  proj2_incident pd' m'\n  proj2_incident (Rep_hyp2 c') m'\n  proj2_incident (apply_cltn2 (Rep_hyp2 c) J) m'", "have \"cosh_dist pd' ?pcJ = cosh_dist ?pa' ?pcJ / cosh_dist pd' ?pa'\"\n    and \"cosh_dist pd' ?pc' = cosh_dist ?pa' ?pc' / cosh_dist pd' ?pa'\""], ["proof (prove)\nusing this:\n  M_perp l' m'\n  Rep_hyp2 a' \\<in> hyp2\n  pd' \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n  Rep_hyp2 c' \\<in> hyp2\n  proj2_incident (Rep_hyp2 a') l'\n  proj2_incident pd' l'\n  proj2_incident pd' m'\n  proj2_incident (Rep_hyp2 c') m'\n  proj2_incident (apply_cltn2 (Rep_hyp2 c) J) m'\n\ngoal (1 subgoal):\n 1. cosh_dist pd' (apply_cltn2 (Rep_hyp2 c) J) =\n    cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) /\n    cosh_dist pd' (Rep_hyp2 a') &&&\n    cosh_dist pd' (Rep_hyp2 c') =\n    cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') / cosh_dist pd' (Rep_hyp2 a')", "by (simp_all add: cosh_dist_perp_divide)"], ["proof (state)\nthis:\n  cosh_dist pd' (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) /\n  cosh_dist pd' (Rep_hyp2 a')\n  cosh_dist pd' (Rep_hyp2 c') =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') / cosh_dist pd' (Rep_hyp2 a')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>cosh_dist ?pa' ?pcJ = cosh_dist ?pa' ?pc'\\<close>"], ["proof (chain)\npicking this:\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')\n  cosh_dist pd' (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) /\n  cosh_dist pd' (Rep_hyp2 a')\n  cosh_dist pd' (Rep_hyp2 c') =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') / cosh_dist pd' (Rep_hyp2 a')", "have \"cosh_dist pd' ?pcJ = cosh_dist pd' ?pc'\""], ["proof (prove)\nusing this:\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c')\n  cosh_dist pd' (apply_cltn2 (Rep_hyp2 c) J) =\n  cosh_dist (Rep_hyp2 a') (apply_cltn2 (Rep_hyp2 c) J) /\n  cosh_dist pd' (Rep_hyp2 a')\n  cosh_dist pd' (Rep_hyp2 c') =\n  cosh_dist (Rep_hyp2 a') (Rep_hyp2 c') / cosh_dist pd' (Rep_hyp2 a')\n\ngoal (1 subgoal):\n 1. cosh_dist pd' (apply_cltn2 (Rep_hyp2 c) J) = cosh_dist pd' (Rep_hyp2 c')", "by simp"], ["proof (state)\nthis:\n  cosh_dist pd' (apply_cltn2 (Rep_hyp2 c) J) = cosh_dist pd' (Rep_hyp2 c')\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>pd' \\<in> hyp2\\<close> and \\<open>?pcJ \\<in> hyp2\\<close>  and \\<open>?pc' \\<in> hyp2\\<close> and \\<open>ps' \\<in> S\\<close>\n    and \\<open>B\\<^sub>\\<real> ?cd' ?ccJ ?cs'\\<close> and \\<open>B\\<^sub>\\<real> ?cd' ?cc' ?cs'\\<close>"], ["proof (chain)\npicking this:\n  pd' \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n  Rep_hyp2 c' \\<in> hyp2\n  ps' \\<in> S\n  B\\<^sub>\\<real> cart2_pt\n                   pd' cart2_pt (apply_cltn2 (Rep_hyp2 c) J) cart2_pt ps'\n  B\\<^sub>\\<real> cart2_pt pd' cart2_pt (Rep_hyp2 c') cart2_pt ps'\n  cosh_dist pd' (apply_cltn2 (Rep_hyp2 c) J) = cosh_dist pd' (Rep_hyp2 c')", "have \"?pcJ = ?pc'\""], ["proof (prove)\nusing this:\n  pd' \\<in> hyp2\n  apply_cltn2 (Rep_hyp2 c) J \\<in> hyp2\n  Rep_hyp2 c' \\<in> hyp2\n  ps' \\<in> S\n  B\\<^sub>\\<real> cart2_pt\n                   pd' cart2_pt (apply_cltn2 (Rep_hyp2 c) J) cart2_pt ps'\n  B\\<^sub>\\<real> cart2_pt pd' cart2_pt (Rep_hyp2 c') cart2_pt ps'\n  cosh_dist pd' (apply_cltn2 (Rep_hyp2 c) J) = cosh_dist pd' (Rep_hyp2 c')\n\ngoal (1 subgoal):\n 1. apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 c'", "by (rule cosh_dist_unique)"], ["proof (state)\nthis:\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 c'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>?paJ = ?pa'\\<close> and \\<open>?pbJ = ?pb'\\<close>"], ["proof (chain)\npicking this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 a'\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b'\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 c'", "have \"hyp2_cltn2 a J = a'\" and \"hyp2_cltn2 b J = b'\" and \"hyp2_cltn2 c J = c'\""], ["proof (prove)\nusing this:\n  apply_cltn2 (Rep_hyp2 a) J = Rep_hyp2 a'\n  apply_cltn2 (Rep_hyp2 b) J = Rep_hyp2 b'\n  apply_cltn2 (Rep_hyp2 c) J = Rep_hyp2 c'\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 a J = a' &&& hyp2_cltn2 b J = b' &&& hyp2_cltn2 c J = c'", "by (unfold hyp2_cltn2_def) (simp_all add: Rep_hyp2_inverse)"], ["proof (state)\nthis:\n  hyp2_cltn2 a J = a'\n  hyp2_cltn2 b J = b'\n  hyp2_cltn2 c J = c'\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "with \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  hyp2_cltn2 a J = a'\n  hyp2_cltn2 b J = b'\n  hyp2_cltn2 c J = c'", "show \"\\<exists> J. is_K2_isometry J\n    \\<and> hyp2_cltn2 a J = a' \\<and> hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  hyp2_cltn2 a J = a'\n  hyp2_cltn2 b J = b'\n  hyp2_cltn2 c J = c'\n\ngoal (1 subgoal):\n 1. \\<exists>J.\n       is_K2_isometry J \\<and>\n       hyp2_cltn2 a J = a' \\<and>\n       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'", "by (simp add: exI [of _ J])"], ["proof (state)\nthis:\n  \\<exists>J.\n     is_K2_isometry J \\<and>\n     hyp2_cltn2 a J = a' \\<and>\n     hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 c J = c'\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom5:\n  \"\\<forall> a b c d a' b' c' d'.\n  a \\<noteq> b \\<and> B\\<^sub>K a b c \\<and> B\\<^sub>K a' b' c' \\<and> a b \\<congruent>\\<^sub>K a' b' \\<and> b c \\<congruent>\\<^sub>K b' c'\n    \\<and> a d \\<congruent>\\<^sub>K a' d' \\<and> b d \\<congruent>\\<^sub>K b' d'\n  \\<longrightarrow> c d \\<congruent>\\<^sub>K c' d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "proof standard+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "fix a b c d a' b' c' d'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "assume \"a \\<noteq> b \\<and> B\\<^sub>K a b c \\<and> B\\<^sub>K a' b' c' \\<and> a b \\<congruent>\\<^sub>K a' b' \\<and> b c \\<congruent>\\<^sub>K b' c'\n    \\<and> a d \\<congruent>\\<^sub>K a' d' \\<and> b d \\<congruent>\\<^sub>K b' d'\""], ["proof (state)\nthis:\n  a \\<noteq> b \\<and>\n  B\\<^sub>K a b c \\<and>\n  B\\<^sub>K a' b' c' \\<and>\n  a b \\<congruent>\\<^sub>K a' b' \\<and>\n  b c \\<congruent>\\<^sub>K b' c' \\<and>\n  a d \\<congruent>\\<^sub>K a' d' \\<and> b d \\<congruent>\\<^sub>K b' d'\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "hence \"a \\<noteq> b\" and \"B\\<^sub>K a b c\" and \"B\\<^sub>K a' b' c'\" and \"a b \\<congruent>\\<^sub>K a' b'\"\n    and \"b c \\<congruent>\\<^sub>K b' c'\" and \"a d \\<congruent>\\<^sub>K a' d'\" and \"b d \\<congruent>\\<^sub>K b' d'\""], ["proof (prove)\nusing this:\n  a \\<noteq> b \\<and>\n  B\\<^sub>K a b c \\<and>\n  B\\<^sub>K a' b' c' \\<and>\n  a b \\<congruent>\\<^sub>K a' b' \\<and>\n  b c \\<congruent>\\<^sub>K b' c' \\<and>\n  a d \\<congruent>\\<^sub>K a' d' \\<and> b d \\<congruent>\\<^sub>K b' d'\n\ngoal (1 subgoal):\n 1. (a \\<noteq> b &&& B\\<^sub>K a b c &&& B\\<^sub>K a' b' c') &&&\n    (a b \\<congruent>\\<^sub>K a' b' &&& b c \\<congruent>\\<^sub>K b' c') &&&\n    a d \\<congruent>\\<^sub>K a' d' &&& b d \\<congruent>\\<^sub>K b' d'", "by simp_all"], ["proof (state)\nthis:\n  a \\<noteq> b\n  B\\<^sub>K a b c\n  B\\<^sub>K a' b' c'\n  a b \\<congruent>\\<^sub>K a' b'\n  b c \\<congruent>\\<^sub>K b' c'\n  a d \\<congruent>\\<^sub>K a' d'\n  b d \\<congruent>\\<^sub>K b' d'\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "from \\<open>a b \\<congruent>\\<^sub>K a' b'\\<close> and \\<open>b d \\<congruent>\\<^sub>K b' d'\\<close> and \\<open>a d \\<congruent>\\<^sub>K a' d'\\<close> and statement69 [of a b a' b' d d']"], ["proof (chain)\npicking this:\n  a b \\<congruent>\\<^sub>K a' b'\n  b d \\<congruent>\\<^sub>K b' d'\n  a d \\<congruent>\\<^sub>K a' d'\n  \\<lbrakk>a b \\<congruent>\\<^sub>K a' b'; b d \\<congruent>\\<^sub>K b' d';\n   a d \\<congruent>\\<^sub>K a' d'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       hyp2_cltn2 a J = a' \\<and>\n                       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 d J = d'", "obtain J where \"is_K2_isometry J\" and \"hyp2_cltn2 a J = a'\"\n    and \"hyp2_cltn2 b J = b'\" and \"hyp2_cltn2 d J = d'\""], ["proof (prove)\nusing this:\n  a b \\<congruent>\\<^sub>K a' b'\n  b d \\<congruent>\\<^sub>K b' d'\n  a d \\<congruent>\\<^sub>K a' d'\n  \\<lbrakk>a b \\<congruent>\\<^sub>K a' b'; b d \\<congruent>\\<^sub>K b' d';\n   a d \\<congruent>\\<^sub>K a' d'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>J.\n                       is_K2_isometry J \\<and>\n                       hyp2_cltn2 a J = a' \\<and>\n                       hyp2_cltn2 b J = b' \\<and> hyp2_cltn2 d J = d'\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<lbrakk>is_K2_isometry J; hyp2_cltn2 a J = a'; hyp2_cltn2 b J = b';\n         hyp2_cltn2 d J = d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_K2_isometry J\n  hyp2_cltn2 a J = a'\n  hyp2_cltn2 b J = b'\n  hyp2_cltn2 d J = d'\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "let ?aJ = \"hyp2_cltn2 a J\"\n    and ?bJ = \"hyp2_cltn2 b J\"\n    and ?cJ = \"hyp2_cltn2 c J\"\n    and ?dJ = \"hyp2_cltn2 d J\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "from \\<open>a \\<noteq> b\\<close> and \\<open>a b \\<congruent>\\<^sub>K a' b'\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  a b \\<congruent>\\<^sub>K a' b'", "have \"a' \\<noteq> b'\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a b \\<congruent>\\<^sub>K a' b'\n\ngoal (1 subgoal):\n 1. a' \\<noteq> b'", "by (auto simp add: hyp2.A3')"], ["proof (state)\nthis:\n  a' \\<noteq> b'\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "from \\<open>is_K2_isometry J\\<close> and \\<open>B\\<^sub>K a b c\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J\n  B\\<^sub>K a b c", "have \"B\\<^sub>K ?aJ ?bJ ?cJ\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n  B\\<^sub>K a b c\n\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J", "by (rule real_hyp2_B_hyp2_cltn2)"], ["proof (state)\nthis:\n  B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "hence \"B\\<^sub>K a' b' ?cJ\""], ["proof (prove)\nusing this:\n  B\\<^sub>K hyp2_cltn2 a J hyp2_cltn2 b J hyp2_cltn2 c J\n\ngoal (1 subgoal):\n 1. B\\<^sub>K a' b' hyp2_cltn2 c J", "by (unfold \\<open>?aJ = a'\\<close> \\<open>?bJ = b'\\<close>)"], ["proof (state)\nthis:\n  B\\<^sub>K a' b' hyp2_cltn2 c J\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "have \"b c \\<congruent>\\<^sub>K ?bJ ?cJ\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. b c \\<congruent>\\<^sub>K hyp2_cltn2 b J hyp2_cltn2 c J", "by (rule real_hyp2_C_hyp2_cltn2)"], ["proof (state)\nthis:\n  b c \\<congruent>\\<^sub>K hyp2_cltn2 b J hyp2_cltn2 c J\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "hence \"b c \\<congruent>\\<^sub>K b' ?cJ\""], ["proof (prove)\nusing this:\n  b c \\<congruent>\\<^sub>K hyp2_cltn2 b J hyp2_cltn2 c J\n\ngoal (1 subgoal):\n 1. b c \\<congruent>\\<^sub>K b' hyp2_cltn2 c J", "by (unfold \\<open>?bJ = b'\\<close>)"], ["proof (state)\nthis:\n  b c \\<congruent>\\<^sub>K b' hyp2_cltn2 c J\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "from this and \\<open>b c \\<congruent>\\<^sub>K b' c'\\<close>"], ["proof (chain)\npicking this:\n  b c \\<congruent>\\<^sub>K b' hyp2_cltn2 c J\n  b c \\<congruent>\\<^sub>K b' c'", "have \"b' ?cJ \\<congruent>\\<^sub>K b' c'\""], ["proof (prove)\nusing this:\n  b c \\<congruent>\\<^sub>K b' hyp2_cltn2 c J\n  b c \\<congruent>\\<^sub>K b' c'\n\ngoal (1 subgoal):\n 1. b' hyp2_cltn2 c J \\<congruent>\\<^sub>K b' c'", "by (rule hyp2.A2')"], ["proof (state)\nthis:\n  b' hyp2_cltn2 c J \\<congruent>\\<^sub>K b' c'\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "with \\<open>a' \\<noteq> b'\\<close> and \\<open>B\\<^sub>K a' b' ?cJ\\<close> and \\<open>B\\<^sub>K a' b' c'\\<close>"], ["proof (chain)\npicking this:\n  a' \\<noteq> b'\n  B\\<^sub>K a' b' hyp2_cltn2 c J\n  B\\<^sub>K a' b' c'\n  b' hyp2_cltn2 c J \\<congruent>\\<^sub>K b' c'", "have \"?cJ = c'\""], ["proof (prove)\nusing this:\n  a' \\<noteq> b'\n  B\\<^sub>K a' b' hyp2_cltn2 c J\n  B\\<^sub>K a' b' c'\n  b' hyp2_cltn2 c J \\<congruent>\\<^sub>K b' c'\n\ngoal (1 subgoal):\n 1. hyp2_cltn2 c J = c'", "by (rule hyp2_extend_segment_unique)"], ["proof (state)\nthis:\n  hyp2_cltn2 c J = c'\n\ngoal (1 subgoal):\n 1. \\<And>a b c d a' b' c' d'.\n       a \\<noteq> b \\<and>\n       B\\<^sub>K a b c \\<and>\n       B\\<^sub>K a' b' c' \\<and>\n       a b \\<congruent>\\<^sub>K a' b' \\<and>\n       b c \\<congruent>\\<^sub>K b' c' \\<and>\n       a d \\<congruent>\\<^sub>K a' d' \\<and>\n       b d \\<congruent>\\<^sub>K b' d' \\<Longrightarrow>\n       c d \\<congruent>\\<^sub>K c' d'", "from \\<open>is_K2_isometry J\\<close>"], ["proof (chain)\npicking this:\n  is_K2_isometry J", "show \"c d \\<congruent>\\<^sub>K c' d'\""], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. c d \\<congruent>\\<^sub>K c' d'", "unfolding \\<open>?cJ = c'\\<close> [symmetric] and \\<open>?dJ = d'\\<close> [symmetric]"], ["proof (prove)\nusing this:\n  is_K2_isometry J\n\ngoal (1 subgoal):\n 1. c d \\<congruent>\\<^sub>K hyp2_cltn2 c J hyp2_cltn2 d J", "by (rule real_hyp2_C_hyp2_cltn2)"], ["proof (state)\nthis:\n  c d \\<congruent>\\<^sub>K c' d'\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation hyp2: tarski_first5 real_hyp2_C real_hyp2_B"], ["proof (prove)\ngoal (1 subgoal):\n 1. tarski_first5 real_hyp2_C real_hyp2_B", "using hyp2_axiom4 and hyp2_axiom5"], ["proof (prove)\nusing this:\n  \\<forall>q a b c.\n     \\<exists>x. B\\<^sub>K q a x \\<and> a x \\<congruent>\\<^sub>K b c\n  \\<forall>a b c d a' b' c' d'.\n     a \\<noteq> b \\<and>\n     B\\<^sub>K a b c \\<and>\n     B\\<^sub>K a' b' c' \\<and>\n     a b \\<congruent>\\<^sub>K a' b' \\<and>\n     b c \\<congruent>\\<^sub>K b' c' \\<and>\n     a d \\<congruent>\\<^sub>K a' d' \\<and>\n     b d \\<congruent>\\<^sub>K b' d' \\<longrightarrow>\n     c d \\<congruent>\\<^sub>K c' d'\n\ngoal (1 subgoal):\n 1. tarski_first5 real_hyp2_C real_hyp2_B", "by unfold_locales"], ["", "subsection \\<open>The Klein--Beltrami model satisfies axioms 6, 7, and 11\\<close>"], ["", "theorem hyp2_axiom6: \"\\<forall> a b. B\\<^sub>K a b a \\<longrightarrow> a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b. B\\<^sub>K a b a \\<longrightarrow> a = b", "proof standard+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. B\\<^sub>K a b a \\<Longrightarrow> a = b", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. B\\<^sub>K a b a \\<Longrightarrow> a = b", "let ?ca = \"cart2_pt (Rep_hyp2 a)\"\n    and ?cb = \"cart2_pt (Rep_hyp2 b)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. B\\<^sub>K a b a \\<Longrightarrow> a = b", "assume \"B\\<^sub>K a b a\""], ["proof (state)\nthis:\n  B\\<^sub>K a b a\n\ngoal (1 subgoal):\n 1. \\<And>a b. B\\<^sub>K a b a \\<Longrightarrow> a = b", "hence \"B\\<^sub>\\<real> ?ca ?cb ?ca\""], ["proof (prove)\nusing this:\n  B\\<^sub>K a b a\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> cart2_pt\n                     (Rep_hyp2\n                       a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 a)", "by (unfold real_hyp2_B_def hyp2_rep_def)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 a)\n\ngoal (1 subgoal):\n 1. \\<And>a b. B\\<^sub>K a b a \\<Longrightarrow> a = b", "hence \"?ca = ?cb\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> cart2_pt\n                   (Rep_hyp2 a) cart2_pt (Rep_hyp2 b) cart2_pt (Rep_hyp2 a)\n\ngoal (1 subgoal):\n 1. cart2_pt (Rep_hyp2 a) = cart2_pt (Rep_hyp2 b)", "by (rule real_euclid.A6')"], ["proof (state)\nthis:\n  cart2_pt (Rep_hyp2 a) = cart2_pt (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. \\<And>a b. B\\<^sub>K a b a \\<Longrightarrow> a = b", "hence \"Rep_hyp2 a = Rep_hyp2 b\""], ["proof (prove)\nusing this:\n  cart2_pt (Rep_hyp2 a) = cart2_pt (Rep_hyp2 b)\n\ngoal (1 subgoal):\n 1. Rep_hyp2 a = Rep_hyp2 b", "by (simp add: Rep_hyp2 hyp2_S_cart2_inj)"], ["proof (state)\nthis:\n  Rep_hyp2 a = Rep_hyp2 b\n\ngoal (1 subgoal):\n 1. \\<And>a b. B\\<^sub>K a b a \\<Longrightarrow> a = b", "thus \"a = b\""], ["proof (prove)\nusing this:\n  Rep_hyp2 a = Rep_hyp2 b\n\ngoal (1 subgoal):\n 1. a = b", "by (unfold Rep_hyp2_inject)"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma between_inverse:\n  assumes \"B\\<^sub>\\<real> (hyp2_rep p) v (hyp2_rep q)\"\n  shows \"hyp2_rep (hyp2_abs v) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "let ?u = \"hyp2_rep p\""], ["proof (state)\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "let ?w = \"hyp2_rep q\""], ["proof (state)\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "have \"norm ?u < 1\" and \"norm ?w < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (hyp2_rep p) < 1 &&& norm (hyp2_rep q) < 1", "by (rule norm_hyp2_rep_lt_1)+"], ["proof (state)\nthis:\n  norm (hyp2_rep p) < 1\n  norm (hyp2_rep q) < 1\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "from \\<open>B\\<^sub>\\<real> ?u v ?w\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> hyp2_rep p v hyp2_rep q", "obtain l where \"l \\<ge> 0\" and \"l \\<le> 1\" and \"v - ?u = l *\\<^sub>R (?w - ?u)\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> hyp2_rep p v hyp2_rep q\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>0 \\<le> l; l \\<le> 1;\n         v - hyp2_rep p = l *\\<^sub>R (hyp2_rep q - hyp2_rep p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_euclid_B_def) auto"], ["proof (state)\nthis:\n  0 \\<le> l\n  l \\<le> 1\n  v - hyp2_rep p = l *\\<^sub>R (hyp2_rep q - hyp2_rep p)\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "from \\<open>v - ?u = l *\\<^sub>R (?w - ?u)\\<close>"], ["proof (chain)\npicking this:\n  v - hyp2_rep p = l *\\<^sub>R (hyp2_rep q - hyp2_rep p)", "have \"v = l *\\<^sub>R ?w + (1 - l) *\\<^sub>R ?u\""], ["proof (prove)\nusing this:\n  v - hyp2_rep p = l *\\<^sub>R (hyp2_rep q - hyp2_rep p)\n\ngoal (1 subgoal):\n 1. v = l *\\<^sub>R hyp2_rep q + (1 - l) *\\<^sub>R hyp2_rep p", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  v = l *\\<^sub>R hyp2_rep q + (1 - l) *\\<^sub>R hyp2_rep p\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "hence \"norm v \\<le> norm (l *\\<^sub>R ?w) + norm ((1 - l) *\\<^sub>R ?u)\""], ["proof (prove)\nusing this:\n  v = l *\\<^sub>R hyp2_rep q + (1 - l) *\\<^sub>R hyp2_rep p\n\ngoal (1 subgoal):\n 1. norm v\n    \\<le> norm (l *\\<^sub>R hyp2_rep q) +\n          norm ((1 - l) *\\<^sub>R hyp2_rep p)", "by (simp only: norm_triangle_ineq [of \"l *\\<^sub>R ?w\" \"(1 - l) *\\<^sub>R ?u\"])"], ["proof (state)\nthis:\n  norm v\n  \\<le> norm (l *\\<^sub>R hyp2_rep q) + norm ((1 - l) *\\<^sub>R hyp2_rep p)\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "with \\<open>l \\<ge> 0\\<close> and \\<open>l \\<le> 1\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> l\n  l \\<le> 1\n  norm v\n  \\<le> norm (l *\\<^sub>R hyp2_rep q) + norm ((1 - l) *\\<^sub>R hyp2_rep p)", "have \"norm v \\<le> l *\\<^sub>R norm ?w + (1 - l) *\\<^sub>R norm ?u\""], ["proof (prove)\nusing this:\n  0 \\<le> l\n  l \\<le> 1\n  norm v\n  \\<le> norm (l *\\<^sub>R hyp2_rep q) + norm ((1 - l) *\\<^sub>R hyp2_rep p)\n\ngoal (1 subgoal):\n 1. norm v\n    \\<le> l *\\<^sub>R norm (hyp2_rep q) +\n          (1 - l) *\\<^sub>R norm (hyp2_rep p)", "by simp"], ["proof (state)\nthis:\n  norm v\n  \\<le> l *\\<^sub>R norm (hyp2_rep q) + (1 - l) *\\<^sub>R norm (hyp2_rep p)\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "have \"norm v < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm v < 1", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> norm v < 1\n 2. \\<not> ?P \\<Longrightarrow> norm v < 1", "assume \"l = 0\""], ["proof (state)\nthis:\n  l = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> norm v < 1\n 2. \\<not> ?P \\<Longrightarrow> norm v < 1", "with \\<open>v = l *\\<^sub>R ?w + (1 - l) *\\<^sub>R ?u\\<close>"], ["proof (chain)\npicking this:\n  v = l *\\<^sub>R hyp2_rep q + (1 - l) *\\<^sub>R hyp2_rep p\n  l = 0", "have \"v = ?u\""], ["proof (prove)\nusing this:\n  v = l *\\<^sub>R hyp2_rep q + (1 - l) *\\<^sub>R hyp2_rep p\n  l = 0\n\ngoal (1 subgoal):\n 1. v = hyp2_rep p", "by simp"], ["proof (state)\nthis:\n  v = hyp2_rep p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> norm v < 1\n 2. \\<not> ?P \\<Longrightarrow> norm v < 1", "with \\<open>norm ?u < 1\\<close>"], ["proof (chain)\npicking this:\n  norm (hyp2_rep p) < 1\n  v = hyp2_rep p", "show \"norm v < 1\""], ["proof (prove)\nusing this:\n  norm (hyp2_rep p) < 1\n  v = hyp2_rep p\n\ngoal (1 subgoal):\n 1. norm v < 1", "by simp"], ["proof (state)\nthis:\n  norm v < 1\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> norm v < 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> norm v < 1", "assume \"l \\<noteq> 0\""], ["proof (state)\nthis:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> norm v < 1", "with \\<open>norm ?w < 1\\<close> and \\<open>l \\<ge> 0\\<close>"], ["proof (chain)\npicking this:\n  norm (hyp2_rep q) < 1\n  0 \\<le> l\n  l \\<noteq> 0", "have \"l *\\<^sub>R norm ?w < l\""], ["proof (prove)\nusing this:\n  norm (hyp2_rep q) < 1\n  0 \\<le> l\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. l *\\<^sub>R norm (hyp2_rep q) < l", "by simp"], ["proof (state)\nthis:\n  l *\\<^sub>R norm (hyp2_rep q) < l\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> norm v < 1", "with \\<open>norm ?u < 1\\<close> and \\<open>l \\<le> 1\\<close>\n      and mult_mono [of \"1 - l\" \"1 - l\" \"norm ?u\" 1]"], ["proof (chain)\npicking this:\n  norm (hyp2_rep p) < 1\n  l \\<le> 1\n  \\<lbrakk>1 - l \\<le> 1 - l; norm (hyp2_rep p) \\<le> 1; 0 \\<le> 1 - l;\n   0 \\<le> norm (hyp2_rep p)\\<rbrakk>\n  \\<Longrightarrow> (1 - l) * norm (hyp2_rep p) \\<le> (1 - l) * 1\n  l *\\<^sub>R norm (hyp2_rep q) < l", "have \"(1 - l) *\\<^sub>R norm ?u \\<le> 1 - l\""], ["proof (prove)\nusing this:\n  norm (hyp2_rep p) < 1\n  l \\<le> 1\n  \\<lbrakk>1 - l \\<le> 1 - l; norm (hyp2_rep p) \\<le> 1; 0 \\<le> 1 - l;\n   0 \\<le> norm (hyp2_rep p)\\<rbrakk>\n  \\<Longrightarrow> (1 - l) * norm (hyp2_rep p) \\<le> (1 - l) * 1\n  l *\\<^sub>R norm (hyp2_rep q) < l\n\ngoal (1 subgoal):\n 1. (1 - l) *\\<^sub>R norm (hyp2_rep p) \\<le> 1 - l", "by simp"], ["proof (state)\nthis:\n  (1 - l) *\\<^sub>R norm (hyp2_rep p) \\<le> 1 - l\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> norm v < 1", "with \\<open>l *\\<^sub>R norm ?w < l\\<close>"], ["proof (chain)\npicking this:\n  l *\\<^sub>R norm (hyp2_rep q) < l\n  (1 - l) *\\<^sub>R norm (hyp2_rep p) \\<le> 1 - l", "have \"l *\\<^sub>R norm ?w + (1 - l) *\\<^sub>R norm ?u < 1\""], ["proof (prove)\nusing this:\n  l *\\<^sub>R norm (hyp2_rep q) < l\n  (1 - l) *\\<^sub>R norm (hyp2_rep p) \\<le> 1 - l\n\ngoal (1 subgoal):\n 1. l *\\<^sub>R norm (hyp2_rep q) + (1 - l) *\\<^sub>R norm (hyp2_rep p) < 1", "by simp"], ["proof (state)\nthis:\n  l *\\<^sub>R norm (hyp2_rep q) + (1 - l) *\\<^sub>R norm (hyp2_rep p) < 1\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow> norm v < 1", "with \\<open>norm v \\<le> l *\\<^sub>R norm ?w + (1 - l) *\\<^sub>R norm ?u\\<close>"], ["proof (chain)\npicking this:\n  norm v\n  \\<le> l *\\<^sub>R norm (hyp2_rep q) + (1 - l) *\\<^sub>R norm (hyp2_rep p)\n  l *\\<^sub>R norm (hyp2_rep q) + (1 - l) *\\<^sub>R norm (hyp2_rep p) < 1", "show \"norm v < 1\""], ["proof (prove)\nusing this:\n  norm v\n  \\<le> l *\\<^sub>R norm (hyp2_rep q) + (1 - l) *\\<^sub>R norm (hyp2_rep p)\n  l *\\<^sub>R norm (hyp2_rep q) + (1 - l) *\\<^sub>R norm (hyp2_rep p) < 1\n\ngoal (1 subgoal):\n 1. norm v < 1", "by simp"], ["proof (state)\nthis:\n  norm v < 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  norm v < 1\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "thus \"hyp2_rep (hyp2_abs v) = v\""], ["proof (prove)\nusing this:\n  norm v < 1\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "by (rule hyp2_rep_abs)"], ["proof (state)\nthis:\n  hyp2_rep (hyp2_abs v) = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma between_switch:\n  assumes \"B\\<^sub>\\<real> (hyp2_rep p) v (hyp2_rep q)\"\n  shows \"B\\<^sub>K p (hyp2_abs v) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sub>K p hyp2_abs v q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B\\<^sub>K p hyp2_abs v q", "from assms"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> hyp2_rep p v hyp2_rep q", "have \"hyp2_rep (hyp2_abs v) = v\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> hyp2_rep p v hyp2_rep q\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs v) = v", "by (rule between_inverse)"], ["proof (state)\nthis:\n  hyp2_rep (hyp2_abs v) = v\n\ngoal (1 subgoal):\n 1. B\\<^sub>K p hyp2_abs v q", "with assms"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> hyp2_rep p v hyp2_rep q\n  hyp2_rep (hyp2_abs v) = v", "show \"B\\<^sub>K p (hyp2_abs v) q\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> hyp2_rep p v hyp2_rep q\n  hyp2_rep (hyp2_abs v) = v\n\ngoal (1 subgoal):\n 1. B\\<^sub>K p hyp2_abs v q", "by (unfold real_hyp2_B_def) simp"], ["proof (state)\nthis:\n  B\\<^sub>K p hyp2_abs v q\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom7:\n  \"\\<forall> a b c p q. B\\<^sub>K a p c \\<and> B\\<^sub>K b q c \\<longrightarrow> (\\<exists> x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b c p q.\n       B\\<^sub>K a p c \\<and> B\\<^sub>K b q c \\<longrightarrow>\n       (\\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c p q.\n       \\<lbrakk>B\\<^sub>K a p c; B\\<^sub>K b q c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a", "fix a b c p q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c p q.\n       \\<lbrakk>B\\<^sub>K a p c; B\\<^sub>K b q c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a", "let ?ca = \"hyp2_rep a\"\n    and ?cb = \"hyp2_rep b\"\n    and ?cc = \"hyp2_rep c\"\n    and ?cp = \"hyp2_rep p\"\n    and ?cq = \"hyp2_rep q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c p q.\n       \\<lbrakk>B\\<^sub>K a p c; B\\<^sub>K b q c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a", "assume \"B\\<^sub>K a p c\" and \"B\\<^sub>K b q c\""], ["proof (state)\nthis:\n  B\\<^sub>K a p c\n  B\\<^sub>K b q c\n\ngoal (1 subgoal):\n 1. \\<And>a b c p q.\n       \\<lbrakk>B\\<^sub>K a p c; B\\<^sub>K b q c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a", "hence \"B\\<^sub>\\<real> ?ca ?cp ?cc\" and \"B\\<^sub>\\<real> ?cb ?cq ?cc\""], ["proof (prove)\nusing this:\n  B\\<^sub>K a p c\n  B\\<^sub>K b q c\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> hyp2_rep a hyp2_rep p hyp2_rep c &&&\n    B\\<^sub>\\<real> hyp2_rep b hyp2_rep q hyp2_rep c", "by (unfold real_hyp2_B_def)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> hyp2_rep a hyp2_rep p hyp2_rep c\n  B\\<^sub>\\<real> hyp2_rep b hyp2_rep q hyp2_rep c\n\ngoal (1 subgoal):\n 1. \\<And>a b c p q.\n       \\<lbrakk>B\\<^sub>K a p c; B\\<^sub>K b q c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a", "with real_euclid.A7' [of ?ca ?cp ?cc ?cb ?cq]"], ["proof (chain)\npicking this:\n  \\<lbrakk>B\\<^sub>\\<real> hyp2_rep a hyp2_rep p hyp2_rep c;\n   B\\<^sub>\\<real> hyp2_rep b hyp2_rep q hyp2_rep c\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x.\n                       B\\<^sub>\\<real> hyp2_rep p x hyp2_rep b \\<and>\n                       B\\<^sub>\\<real> hyp2_rep q x hyp2_rep a\n  B\\<^sub>\\<real> hyp2_rep a hyp2_rep p hyp2_rep c\n  B\\<^sub>\\<real> hyp2_rep b hyp2_rep q hyp2_rep c", "obtain cx where \"B\\<^sub>\\<real> ?cp cx ?cb\" and \"B\\<^sub>\\<real> ?cq cx ?ca\""], ["proof (prove)\nusing this:\n  \\<lbrakk>B\\<^sub>\\<real> hyp2_rep a hyp2_rep p hyp2_rep c;\n   B\\<^sub>\\<real> hyp2_rep b hyp2_rep q hyp2_rep c\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x.\n                       B\\<^sub>\\<real> hyp2_rep p x hyp2_rep b \\<and>\n                       B\\<^sub>\\<real> hyp2_rep q x hyp2_rep a\n  B\\<^sub>\\<real> hyp2_rep a hyp2_rep p hyp2_rep c\n  B\\<^sub>\\<real> hyp2_rep b hyp2_rep q hyp2_rep c\n\ngoal (1 subgoal):\n 1. (\\<And>cx.\n        \\<lbrakk>B\\<^sub>\\<real> hyp2_rep p cx hyp2_rep b;\n         B\\<^sub>\\<real> hyp2_rep q cx hyp2_rep a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> hyp2_rep p cx hyp2_rep b\n  B\\<^sub>\\<real> hyp2_rep q cx hyp2_rep a\n\ngoal (1 subgoal):\n 1. \\<And>a b c p q.\n       \\<lbrakk>B\\<^sub>K a p c; B\\<^sub>K b q c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a", "hence \"B\\<^sub>K p (hyp2_abs cx) b\" and \"B\\<^sub>K q (hyp2_abs cx) a\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> hyp2_rep p cx hyp2_rep b\n  B\\<^sub>\\<real> hyp2_rep q cx hyp2_rep a\n\ngoal (1 subgoal):\n 1. B\\<^sub>K p hyp2_abs cx b &&& B\\<^sub>K q hyp2_abs cx a", "by (simp_all add: between_switch)"], ["proof (state)\nthis:\n  B\\<^sub>K p hyp2_abs cx b\n  B\\<^sub>K q hyp2_abs cx a\n\ngoal (1 subgoal):\n 1. \\<And>a b c p q.\n       \\<lbrakk>B\\<^sub>K a p c; B\\<^sub>K b q c\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a", "thus \"\\<exists> x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a\""], ["proof (prove)\nusing this:\n  B\\<^sub>K p hyp2_abs cx b\n  B\\<^sub>K q hyp2_abs cx a\n\ngoal (1 subgoal):\n 1. \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a", "by (simp add: exI [of _ \"hyp2_abs cx\"])"], ["proof (state)\nthis:\n  \\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom11:\n  \"\\<forall> X Y. (\\<exists> a. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y)\n  \\<longrightarrow> (\\<exists> b. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>X Y.\n       (\\<exists>a.\n           \\<forall>x y.\n              x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n              B\\<^sub>K a x y) \\<longrightarrow>\n       (\\<exists>b.\n           \\<forall>x y.\n              x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "proof (rule allI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       (\\<exists>a.\n           \\<forall>x y.\n              x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n              B\\<^sub>K a x y) \\<longrightarrow>\n       (\\<exists>b.\n           \\<forall>x y.\n              x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "fix X Y :: \"hyp2 set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X Y.\n       (\\<exists>a.\n           \\<forall>x y.\n              x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n              B\\<^sub>K a x y) \\<longrightarrow>\n       (\\<exists>b.\n           \\<forall>x y.\n              x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "show \"(\\<exists> a. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y)\n    \\<longrightarrow> (\\<exists> b. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\n 2. \\<not> ?P \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "assume \"X = {} \\<or> Y = {}\""], ["proof (state)\nthis:\n  X = {} \\<or> Y = {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\n 2. \\<not> ?P \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "thus \"(\\<exists> a. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y)\n      \\<longrightarrow> (\\<exists> b. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\""], ["proof (prove)\nusing this:\n  X = {} \\<or> Y = {}\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<forall>x y.\n         x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n         B\\<^sub>K a x y) \\<longrightarrow>\n  (\\<exists>b.\n      \\<forall>x y.\n         x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\n\ngoal (1 subgoal):\n 1. \\<not> (X = {} \\<or> Y = {}) \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (X = {} \\<or> Y = {}) \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "assume \"\\<not> (X = {} \\<or> Y = {})\""], ["proof (state)\nthis:\n  \\<not> (X = {} \\<or> Y = {})\n\ngoal (1 subgoal):\n 1. \\<not> (X = {} \\<or> Y = {}) \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "hence \"X \\<noteq> {}\" and \"Y \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<not> (X = {} \\<or> Y = {})\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} &&& Y \\<noteq> {}", "by simp_all"], ["proof (state)\nthis:\n  X \\<noteq> {}\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (X = {} \\<or> Y = {}) \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "then"], ["proof (chain)\npicking this:\n  X \\<noteq> {}\n  Y \\<noteq> {}", "obtain w and z where \"w \\<in> X\" and \"z \\<in> Y\""], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>w z.\n        \\<lbrakk>w \\<in> X; z \\<in> Y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w \\<in> X\n  z \\<in> Y\n\ngoal (1 subgoal):\n 1. \\<not> (X = {} \\<or> Y = {}) \\<Longrightarrow>\n    (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "show \"(\\<exists> a. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y)\n      \\<longrightarrow> (\\<exists> b. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y) \\<longrightarrow>\n    (\\<exists>b.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "assume \"\\<exists> a. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y\""], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<forall>x y.\n        x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "then"], ["proof (chain)\npicking this:\n  \\<exists>a.\n     \\<forall>x y.\n        x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y", "obtain a where \"\\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y\""], ["proof (prove)\nusing this:\n  \\<exists>a.\n     \\<forall>x y.\n        x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<forall>x y.\n           x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n           B\\<^sub>K a x y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "let ?cX = \"hyp2_rep ` X\"\n        and ?cY = \"hyp2_rep ` Y\"\n        and ?ca = \"hyp2_rep a\"\n        and ?cw = \"hyp2_rep w\"\n        and ?cz = \"hyp2_rep z\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "from \\<open>\\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y", "have \"\\<forall> cx cy. cx \\<in> ?cX \\<and> cy \\<in> ?cY \\<longrightarrow> B\\<^sub>\\<real> ?ca cx cy\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K a x y\n\ngoal (1 subgoal):\n 1. \\<forall>cx cy.\n       cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n       B\\<^sub>\\<real> hyp2_rep a cx cy", "by (unfold real_hyp2_B_def) auto"], ["proof (state)\nthis:\n  \\<forall>cx cy.\n     cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> hyp2_rep a cx cy\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "with real_euclid.A11' [of ?cX ?cY ?ca]"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     x \\<in> hyp2_rep ` X \\<and> y \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> hyp2_rep a x y \\<Longrightarrow>\n  \\<exists>b.\n     \\<forall>x y.\n        x \\<in> hyp2_rep ` X \\<and> y \\<in> hyp2_rep ` Y \\<longrightarrow>\n        B\\<^sub>\\<real> x b y\n  \\<forall>cx cy.\n     cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> hyp2_rep a cx cy", "obtain cb where \"\\<forall> cx cy. cx \\<in> ?cX \\<and> cy \\<in> ?cY \\<longrightarrow> B\\<^sub>\\<real> cx cb cy\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     x \\<in> hyp2_rep ` X \\<and> y \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> hyp2_rep a x y \\<Longrightarrow>\n  \\<exists>b.\n     \\<forall>x y.\n        x \\<in> hyp2_rep ` X \\<and> y \\<in> hyp2_rep ` Y \\<longrightarrow>\n        B\\<^sub>\\<real> x b y\n  \\<forall>cx cy.\n     cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> hyp2_rep a cx cy\n\ngoal (1 subgoal):\n 1. (\\<And>cb.\n        \\<forall>cx cy.\n           cx \\<in> hyp2_rep ` X \\<and>\n           cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n           B\\<^sub>\\<real> cx cb cy \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>cx cy.\n     cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> cx cb cy\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "with \\<open>w \\<in> X\\<close> and \\<open>z \\<in> Y\\<close>"], ["proof (chain)\npicking this:\n  w \\<in> X\n  z \\<in> Y\n  \\<forall>cx cy.\n     cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> cx cb cy", "have \"B\\<^sub>\\<real> ?cw cb ?cz\""], ["proof (prove)\nusing this:\n  w \\<in> X\n  z \\<in> Y\n  \\<forall>cx cy.\n     cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> cx cb cy\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> hyp2_rep w cb hyp2_rep z", "by simp"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> hyp2_rep w cb hyp2_rep z\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "hence \"hyp2_rep (hyp2_abs cb) = cb\" (is \"hyp2_rep ?b = cb\")"], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> hyp2_rep w cb hyp2_rep z\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs cb) = cb", "by (rule between_inverse)"], ["proof (state)\nthis:\n  hyp2_rep (hyp2_abs cb) = cb\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "with \\<open>\\<forall> cx cy. cx \\<in> ?cX \\<and> cy \\<in> ?cY \\<longrightarrow> B\\<^sub>\\<real> cx cb cy\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>cx cy.\n     cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> cx cb cy\n  hyp2_rep (hyp2_abs cb) = cb", "have \"\\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x ?b y\""], ["proof (prove)\nusing this:\n  \\<forall>cx cy.\n     cx \\<in> hyp2_rep ` X \\<and> cy \\<in> hyp2_rep ` Y \\<longrightarrow>\n     B\\<^sub>\\<real> cx cb cy\n  hyp2_rep (hyp2_abs cb) = cb\n\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n       B\\<^sub>K x hyp2_abs cb y", "by (unfold real_hyp2_B_def) simp"], ["proof (state)\nthis:\n  \\<forall>x y.\n     x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x hyp2_abs cb y\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n          B\\<^sub>K a x y \\<Longrightarrow>\n    \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "thus \"\\<exists> b. \\<forall> x y. x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x hyp2_abs cb y\n\ngoal (1 subgoal):\n 1. \\<exists>b.\n       \\<forall>x y.\n          x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>b.\n     \\<forall>x y.\n        x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<forall>x y.\n         x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n         B\\<^sub>K a x y) \\<longrightarrow>\n  (\\<exists>b.\n      \\<forall>x y.\n         x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<forall>x y.\n         x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n         B\\<^sub>K a x y) \\<longrightarrow>\n  (\\<exists>b.\n      \\<forall>x y.\n         x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation tarski_absolute_space real_hyp2_C real_hyp2_B"], ["proof (prove)\ngoal (1 subgoal):\n 1. tarski_absolute_space real_hyp2_C real_hyp2_B", "using hyp2_axiom6 and hyp2_axiom7 and hyp2_axiom11"], ["proof (prove)\nusing this:\n  \\<forall>a b. B\\<^sub>K a b a \\<longrightarrow> a = b\n  \\<forall>a b c p q.\n     B\\<^sub>K a p c \\<and> B\\<^sub>K b q c \\<longrightarrow>\n     (\\<exists>x. B\\<^sub>K p x b \\<and> B\\<^sub>K q x a)\n  \\<forall>X Y.\n     (\\<exists>a.\n         \\<forall>x y.\n            x \\<in> X \\<and> y \\<in> Y \\<longrightarrow>\n            B\\<^sub>K a x y) \\<longrightarrow>\n     (\\<exists>b.\n         \\<forall>x y.\n            x \\<in> X \\<and> y \\<in> Y \\<longrightarrow> B\\<^sub>K x b y)\n\ngoal (1 subgoal):\n 1. tarski_absolute_space real_hyp2_C real_hyp2_B", "by unfold_locales"], ["", "subsection \\<open>The Klein--Beltrami model satisfies the dimension-specific axioms\\<close>"], ["", "lemma hyp2_rep_abs_examples:\n  shows \"hyp2_rep (hyp2_abs 0) = 0\" (is \"hyp2_rep ?a = ?ca\")\n  and \"hyp2_rep (hyp2_abs (vector [1/2,0])) = vector [1/2,0]\"\n  (is \"hyp2_rep ?b = ?cb\")\n  and \"hyp2_rep (hyp2_abs (vector [0,1/2])) = vector [0,1/2]\"\n  (is \"hyp2_rep ?c = ?cc\")\n  and \"hyp2_rep (hyp2_abs (vector [1/4,1/4])) = vector [1/4,1/4]\"\n  (is \"hyp2_rep ?d = ?cd\")\n  and \"hyp2_rep (hyp2_abs (vector [1/2,1/2])) = vector [1/2,1/2]\"\n  (is \"hyp2_rep ?t = ?ct\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (hyp2_rep (hyp2_abs 0) = 0 &&&\n     hyp2_rep (hyp2_abs (vector [1 / 2, 0])) = vector [1 / 2, 0]) &&&\n    hyp2_rep (hyp2_abs (vector [0, 1 / 2])) = vector [0, 1 / 2] &&&\n    hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4])) = vector [1 / 4, 1 / 4] &&&\n    hyp2_rep (hyp2_abs (vector [1 / 2, 1 / 2])) = vector [1 / 2, 1 / 2]", "proof -"], ["proof (state)\ngoal (5 subgoals):\n 1. hyp2_rep (hyp2_abs 0) = 0\n 2. hyp2_rep (hyp2_abs (vector [1 / 2, 0])) = vector [1 / 2, 0]\n 3. hyp2_rep (hyp2_abs (vector [0, 1 / 2])) = vector [0, 1 / 2]\n 4. hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4])) = vector [1 / 4, 1 / 4]\n 5. hyp2_rep (hyp2_abs (vector [1 / 2, 1 / 2])) = vector [1 / 2, 1 / 2]", "have \"norm ?ca < 1\" and \"norm ?cb < 1\" and \"norm ?cc < 1\" and \"norm ?cd < 1\"\n    and \"norm ?ct < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm 0 < 1 &&& norm (vector [1 / 2, 0]) < 1) &&&\n    norm (vector [0, 1 / 2]) < 1 &&&\n    norm (vector [1 / 4, 1 / 4]) < 1 &&& norm (vector [1 / 2, 1 / 2]) < 1", "by (unfold norm_vec_def L2_set_def) (simp_all add: sum_2 power2_eq_square)"], ["proof (state)\nthis:\n  norm 0 < 1\n  norm (vector [1 / 2, 0]) < 1\n  norm (vector [0, 1 / 2]) < 1\n  norm (vector [1 / 4, 1 / 4]) < 1\n  norm (vector [1 / 2, 1 / 2]) < 1\n\ngoal (5 subgoals):\n 1. hyp2_rep (hyp2_abs 0) = 0\n 2. hyp2_rep (hyp2_abs (vector [1 / 2, 0])) = vector [1 / 2, 0]\n 3. hyp2_rep (hyp2_abs (vector [0, 1 / 2])) = vector [0, 1 / 2]\n 4. hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4])) = vector [1 / 4, 1 / 4]\n 5. hyp2_rep (hyp2_abs (vector [1 / 2, 1 / 2])) = vector [1 / 2, 1 / 2]", "thus \"hyp2_rep ?a = ?ca\" and \"hyp2_rep ?b = ?cb\" and \"hyp2_rep ?c = ?cc\"\n    and \"hyp2_rep ?d = ?cd\" and \"hyp2_rep ?t = ?ct\""], ["proof (prove)\nusing this:\n  norm 0 < 1\n  norm (vector [1 / 2, 0]) < 1\n  norm (vector [0, 1 / 2]) < 1\n  norm (vector [1 / 4, 1 / 4]) < 1\n  norm (vector [1 / 2, 1 / 2]) < 1\n\ngoal (1 subgoal):\n 1. (hyp2_rep (hyp2_abs 0) = 0 &&&\n     hyp2_rep (hyp2_abs (vector [1 / 2, 0])) = vector [1 / 2, 0]) &&&\n    hyp2_rep (hyp2_abs (vector [0, 1 / 2])) = vector [0, 1 / 2] &&&\n    hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4])) = vector [1 / 4, 1 / 4] &&&\n    hyp2_rep (hyp2_abs (vector [1 / 2, 1 / 2])) = vector [1 / 2, 1 / 2]", "by (simp_all add: hyp2_rep_abs)"], ["proof (state)\nthis:\n  hyp2_rep (hyp2_abs 0) = 0\n  hyp2_rep (hyp2_abs (vector [1 / 2, 0])) = vector [1 / 2, 0]\n  hyp2_rep (hyp2_abs (vector [0, 1 / 2])) = vector [0, 1 / 2]\n  hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4])) = vector [1 / 4, 1 / 4]\n  hyp2_rep (hyp2_abs (vector [1 / 2, 1 / 2])) = vector [1 / 2, 1 / 2]\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom8: \"\\<exists> a b c. \\<not> B\\<^sub>K a b c \\<and> \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b c.\n       \\<not> B\\<^sub>K a b c \\<and>\n       \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a b c.\n       \\<not> B\\<^sub>K a b c \\<and>\n       \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b", "let ?ca = \"0 :: real^2\"\n    and ?cb = \"vector [1/2,0] :: real^2\"\n    and ?cc = \"vector [0,1/2] :: real^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a b c.\n       \\<not> B\\<^sub>K a b c \\<and>\n       \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b", "let ?a = \"hyp2_abs ?ca\"\n    and ?b = \"hyp2_abs ?cb\"\n    and ?c = \"hyp2_abs ?cc\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a b c.\n       \\<not> B\\<^sub>K a b c \\<and>\n       \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b", "from hyp2_rep_abs_examples and non_Col_example"], ["proof (chain)\npicking this:\n  hyp2_rep (hyp2_abs 0) = 0\n  hyp2_rep (hyp2_abs (vector [1 / 2, 0])) = vector [1 / 2, 0]\n  hyp2_rep (hyp2_abs (vector [0, 1 / 2])) = vector [0, 1 / 2]\n  hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4])) = vector [1 / 4, 1 / 4]\n  hyp2_rep (hyp2_abs (vector [1 / 2, 1 / 2])) = vector [1 / 2, 1 / 2]\n  \\<not> real_euclid.Col 0 (vector [1 / 2, 0]) (vector [0, 1 / 2])", "have \"\\<not> (hyp2.Col ?a ?b ?c)\""], ["proof (prove)\nusing this:\n  hyp2_rep (hyp2_abs 0) = 0\n  hyp2_rep (hyp2_abs (vector [1 / 2, 0])) = vector [1 / 2, 0]\n  hyp2_rep (hyp2_abs (vector [0, 1 / 2])) = vector [0, 1 / 2]\n  hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4])) = vector [1 / 4, 1 / 4]\n  hyp2_rep (hyp2_abs (vector [1 / 2, 1 / 2])) = vector [1 / 2, 1 / 2]\n  \\<not> real_euclid.Col 0 (vector [1 / 2, 0]) (vector [0, 1 / 2])\n\ngoal (1 subgoal):\n 1. \\<not> hyp2.Col (hyp2_abs 0) (hyp2_abs (vector [1 / 2, 0]))\n            (hyp2_abs (vector [0, 1 / 2]))", "by (unfold hyp2.Col_def real_euclid.Col_def real_hyp2_B_def) simp"], ["proof (state)\nthis:\n  \\<not> hyp2.Col (hyp2_abs 0) (hyp2_abs (vector [1 / 2, 0]))\n          (hyp2_abs (vector [0, 1 / 2]))\n\ngoal (1 subgoal):\n 1. \\<exists>a b c.\n       \\<not> B\\<^sub>K a b c \\<and>\n       \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b", "thus \"\\<exists> a b c. \\<not> B\\<^sub>K a b c \\<and> \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b\""], ["proof (prove)\nusing this:\n  \\<not> hyp2.Col (hyp2_abs 0) (hyp2_abs (vector [1 / 2, 0]))\n          (hyp2_abs (vector [0, 1 / 2]))\n\ngoal (1 subgoal):\n 1. \\<exists>a b c.\n       \\<not> B\\<^sub>K a b c \\<and>\n       \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b", "unfolding hyp2.Col_def"], ["proof (prove)\nusing this:\n  \\<not> (B\\<^sub>K hyp2_abs\n                     0 hyp2_abs\n                        (vector\n                          [1 / 2, 0]) hyp2_abs (vector [0, 1 / 2]) \\<or>\n          B\\<^sub>K hyp2_abs\n                     (vector\n                       [1 / 2,\n                        0]) hyp2_abs (vector [0, 1 / 2]) hyp2_abs 0 \\<or>\n          B\\<^sub>K hyp2_abs\n                     (vector\n                       [0, 1 / 2]) hyp2_abs 0 hyp2_abs (vector [1 / 2, 0]))\n\ngoal (1 subgoal):\n 1. \\<exists>a b c.\n       \\<not> B\\<^sub>K a b c \\<and>\n       \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b", "by simp (rule exI)+"], ["proof (state)\nthis:\n  \\<exists>a b c.\n     \\<not> B\\<^sub>K a b c \\<and>\n     \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_axiom9:\n  \"\\<forall> p q a b c. p \\<noteq> q \\<and> a p \\<congruent>\\<^sub>K a q \\<and> b p \\<congruent>\\<^sub>K b q \\<and> c p \\<congruent>\\<^sub>K c q\n  \\<longrightarrow> B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p q a b c.\n       p \\<noteq> q \\<and>\n       a p \\<congruent>\\<^sub>K a q \\<and>\n       b p \\<congruent>\\<^sub>K b q \\<and>\n       c p \\<congruent>\\<^sub>K c q \\<longrightarrow>\n       B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "proof (rule allI)+"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q a b c.\n       p \\<noteq> q \\<and>\n       a p \\<congruent>\\<^sub>K a q \\<and>\n       b p \\<congruent>\\<^sub>K b q \\<and>\n       c p \\<congruent>\\<^sub>K c q \\<longrightarrow>\n       B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "fix p q a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q a b c.\n       p \\<noteq> q \\<and>\n       a p \\<congruent>\\<^sub>K a q \\<and>\n       b p \\<congruent>\\<^sub>K b q \\<and>\n       c p \\<congruent>\\<^sub>K c q \\<longrightarrow>\n       B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "show \"p \\<noteq> q \\<and> a p \\<congruent>\\<^sub>K a q \\<and> b p \\<congruent>\\<^sub>K b q \\<and> c p \\<congruent>\\<^sub>K c q\n    \\<longrightarrow> B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "assume \"p \\<noteq> q \\<and> a p \\<congruent>\\<^sub>K a q \\<and> b p \\<congruent>\\<^sub>K b q \\<and> c p \\<congruent>\\<^sub>K c q\""], ["proof (state)\nthis:\n  p \\<noteq> q \\<and>\n  a p \\<congruent>\\<^sub>K a q \\<and>\n  b p \\<congruent>\\<^sub>K b q \\<and> c p \\<congruent>\\<^sub>K c q\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "hence \"p \\<noteq> q\" and \"a p \\<congruent>\\<^sub>K a q\" and \"b p \\<congruent>\\<^sub>K b q\" and \"c p \\<congruent>\\<^sub>K c q\""], ["proof (prove)\nusing this:\n  p \\<noteq> q \\<and>\n  a p \\<congruent>\\<^sub>K a q \\<and>\n  b p \\<congruent>\\<^sub>K b q \\<and> c p \\<congruent>\\<^sub>K c q\n\ngoal (1 subgoal):\n 1. (p \\<noteq> q &&& a p \\<congruent>\\<^sub>K a q) &&&\n    b p \\<congruent>\\<^sub>K b q &&& c p \\<congruent>\\<^sub>K c q", "by simp_all"], ["proof (state)\nthis:\n  p \\<noteq> q\n  a p \\<congruent>\\<^sub>K a q\n  b p \\<congruent>\\<^sub>K b q\n  c p \\<congruent>\\<^sub>K c q\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "let ?pp = \"Rep_hyp2 p\"\n      and ?pq = \"Rep_hyp2 q\"\n      and ?pa = \"Rep_hyp2 a\"\n      and ?pb = \"Rep_hyp2 b\"\n      and ?pc = \"Rep_hyp2 c\""], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "define l where \"l = proj2_line_through ?pp ?pq\""], ["proof (state)\nthis:\n  l = proj2_line_through (Rep_hyp2 p) (Rep_hyp2 q)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "define m ps pt stpq\n      where \"m = drop_perp ?pa l\"\n        and \"ps = endpoint_in_S ?pp ?pq\"\n        and \"pt = endpoint_in_S ?pq ?pp\"\n        and \"stpq = exp_2dist ?pp ?pq\""], ["proof (state)\nthis:\n  m = drop_perp (Rep_hyp2 a) l\n  ps = endpoint_in_S (Rep_hyp2 p) (Rep_hyp2 q)\n  pt = endpoint_in_S (Rep_hyp2 q) (Rep_hyp2 p)\n  stpq = exp_2dist (Rep_hyp2 p) (Rep_hyp2 q)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "from \\<open>p \\<noteq> q\\<close>"], ["proof (chain)\npicking this:\n  p \\<noteq> q", "have \"?pp \\<noteq> ?pq\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. Rep_hyp2 p \\<noteq> Rep_hyp2 q", "by (simp add: Rep_hyp2_inject)"], ["proof (state)\nthis:\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "from Rep_hyp2"], ["proof (chain)\npicking this:\n  Rep_hyp2 ?x \\<in> hyp2", "have \"stpq > 0\""], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n\ngoal (1 subgoal):\n 1. 0 < stpq", "by (unfold stpq_def) (simp add: exp_2dist_positive)"], ["proof (state)\nthis:\n  0 < stpq\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "hence \"sqrt stpq * sqrt stpq = stpq\""], ["proof (prove)\nusing this:\n  0 < stpq\n\ngoal (1 subgoal):\n 1. sqrt stpq * sqrt stpq = stpq", "by (simp add: real_sqrt_mult [symmetric])"], ["proof (state)\nthis:\n  sqrt stpq * sqrt stpq = stpq\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "from Rep_hyp2 and \\<open>?pp \\<noteq> ?pq\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 ?x \\<in> hyp2\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q", "have \"stpq \\<noteq> 1\""], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q\n\ngoal (1 subgoal):\n 1. stpq \\<noteq> 1", "by (unfold stpq_def) (auto simp add: exp_2dist_1_equal)"], ["proof (state)\nthis:\n  stpq \\<noteq> 1\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "have \"z_non_zero ?pa\" and \"z_non_zero ?pb\" and \"z_non_zero ?pc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z_non_zero (Rep_hyp2 a) &&&\n    z_non_zero (Rep_hyp2 b) &&& z_non_zero (Rep_hyp2 c)", "by (simp_all add: Rep_hyp2 hyp2_S_z_non_zero)"], ["proof (state)\nthis:\n  z_non_zero (Rep_hyp2 a)\n  z_non_zero (Rep_hyp2 b)\n  z_non_zero (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "have \"\\<forall> pd \\<in> {?pa,?pb,?pc}.\n      cross_ratio ps pt (perp_foot pd l) ?pp = 1 / (sqrt stpq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pd\\<in>{Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}.\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "fix pd"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "assume \"pd \\<in> {?pa,?pb,?pc}\""], ["proof (state)\nthis:\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "with Rep_hyp2"], ["proof (chain)\npicking this:\n  Rep_hyp2 ?x \\<in> hyp2\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}", "have \"pd \\<in> hyp2\""], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n\ngoal (1 subgoal):\n 1. pd \\<in> hyp2", "by auto"], ["proof (state)\nthis:\n  pd \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "define pe x\n        where \"pe = perp_foot pd l\"\n          and \"x = cosh_dist ?pp pd\""], ["proof (state)\nthis:\n  pe = perp_foot pd l\n  x = cosh_dist (Rep_hyp2 p) pd\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "from \\<open>pd \\<in> {?pa,?pb,?pc}\\<close> and \\<open>a p \\<congruent>\\<^sub>K a q\\<close> and \\<open>b p \\<congruent>\\<^sub>K b q\\<close>\n        and \\<open>c p \\<congruent>\\<^sub>K c q\\<close>"], ["proof (chain)\npicking this:\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n  a p \\<congruent>\\<^sub>K a q\n  b p \\<congruent>\\<^sub>K b q\n  c p \\<congruent>\\<^sub>K c q", "have \"cosh_dist pd ?pp = cosh_dist pd ?pq\""], ["proof (prove)\nusing this:\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n  a p \\<congruent>\\<^sub>K a q\n  b p \\<congruent>\\<^sub>K b q\n  c p \\<congruent>\\<^sub>K c q\n\ngoal (1 subgoal):\n 1. cosh_dist pd (Rep_hyp2 p) = cosh_dist pd (Rep_hyp2 q)", "by (auto simp add: real_hyp2_C_cosh_dist)"], ["proof (state)\nthis:\n  cosh_dist pd (Rep_hyp2 p) = cosh_dist pd (Rep_hyp2 q)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "with \\<open>pd \\<in> hyp2\\<close> and Rep_hyp2"], ["proof (chain)\npicking this:\n  pd \\<in> hyp2\n  Rep_hyp2 ?x \\<in> hyp2\n  cosh_dist pd (Rep_hyp2 p) = cosh_dist pd (Rep_hyp2 q)", "have \"x = cosh_dist ?pq pd\""], ["proof (prove)\nusing this:\n  pd \\<in> hyp2\n  Rep_hyp2 ?x \\<in> hyp2\n  cosh_dist pd (Rep_hyp2 p) = cosh_dist pd (Rep_hyp2 q)\n\ngoal (1 subgoal):\n 1. x = cosh_dist (Rep_hyp2 q) pd", "by (unfold x_def) (simp add: cosh_dist_swap)"], ["proof (state)\nthis:\n  x = cosh_dist (Rep_hyp2 q) pd\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "from Rep_hyp2 [of p] and \\<open>pd \\<in> hyp2\\<close> and cosh_dist_positive [of ?pp pd]"], ["proof (chain)\npicking this:\n  Rep_hyp2 p \\<in> hyp2\n  pd \\<in> hyp2\n  \\<lbrakk>Rep_hyp2 p \\<in> hyp2; pd \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> 0 < cosh_dist (Rep_hyp2 p) pd", "have \"x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  Rep_hyp2 p \\<in> hyp2\n  pd \\<in> hyp2\n  \\<lbrakk>Rep_hyp2 p \\<in> hyp2; pd \\<in> hyp2\\<rbrakk>\n  \\<Longrightarrow> 0 < cosh_dist (Rep_hyp2 p) pd\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0", "by (unfold x_def) simp"], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "from Rep_hyp2 and \\<open>pd \\<in> hyp2\\<close> and \\<open>?pp \\<noteq> ?pq\\<close>"], ["proof (chain)\npicking this:\n  Rep_hyp2 ?x \\<in> hyp2\n  pd \\<in> hyp2\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q", "have \"cross_ratio ps pt pe ?pp\n        = (cosh_dist ?pq pd * sqrt stpq - cosh_dist ?pp pd)\n        / (cosh_dist ?pp pd *  stpq - cosh_dist ?pq pd * sqrt stpq)\""], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n  pd \\<in> hyp2\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q\n\ngoal (1 subgoal):\n 1. cross_ratio ps pt pe (Rep_hyp2 p) =\n    (cosh_dist (Rep_hyp2 q) pd * sqrt stpq - cosh_dist (Rep_hyp2 p) pd) /\n    (cosh_dist (Rep_hyp2 p) pd * stpq -\n     cosh_dist (Rep_hyp2 q) pd * sqrt stpq)", "unfolding ps_def and pt_def and pe_def and l_def and stpq_def"], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n  pd \\<in> hyp2\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q\n\ngoal (1 subgoal):\n 1. cross_ratio (endpoint_in_S (Rep_hyp2 p) (Rep_hyp2 q))\n     (endpoint_in_S (Rep_hyp2 q) (Rep_hyp2 p))\n     (perp_foot pd (proj2_line_through (Rep_hyp2 p) (Rep_hyp2 q)))\n     (Rep_hyp2 p) =\n    (cosh_dist (Rep_hyp2 q) pd *\n     sqrt (exp_2dist (Rep_hyp2 p) (Rep_hyp2 q)) -\n     cosh_dist (Rep_hyp2 p) pd) /\n    (cosh_dist (Rep_hyp2 p) pd * exp_2dist (Rep_hyp2 p) (Rep_hyp2 q) -\n     cosh_dist (Rep_hyp2 q) pd * sqrt (exp_2dist (Rep_hyp2 p) (Rep_hyp2 q)))", "by (simp add: perp_foot_cross_ratio_formula)"], ["proof (state)\nthis:\n  cross_ratio ps pt pe (Rep_hyp2 p) =\n  (cosh_dist (Rep_hyp2 q) pd * sqrt stpq - cosh_dist (Rep_hyp2 p) pd) /\n  (cosh_dist (Rep_hyp2 p) pd * stpq - cosh_dist (Rep_hyp2 q) pd * sqrt stpq)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "also"], ["proof (state)\nthis:\n  cross_ratio ps pt pe (Rep_hyp2 p) =\n  (cosh_dist (Rep_hyp2 q) pd * sqrt stpq - cosh_dist (Rep_hyp2 p) pd) /\n  (cosh_dist (Rep_hyp2 p) pd * stpq - cosh_dist (Rep_hyp2 q) pd * sqrt stpq)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "from x_def and \\<open>x = cosh_dist ?pq pd\\<close>"], ["proof (chain)\npicking this:\n  x = cosh_dist (Rep_hyp2 p) pd\n  x = cosh_dist (Rep_hyp2 q) pd", "have \"\\<dots> = (x * sqrt stpq - x) / (x * stpq - x * sqrt stpq)\""], ["proof (prove)\nusing this:\n  x = cosh_dist (Rep_hyp2 p) pd\n  x = cosh_dist (Rep_hyp2 q) pd\n\ngoal (1 subgoal):\n 1. (cosh_dist (Rep_hyp2 q) pd * sqrt stpq - cosh_dist (Rep_hyp2 p) pd) /\n    (cosh_dist (Rep_hyp2 p) pd * stpq -\n     cosh_dist (Rep_hyp2 q) pd * sqrt stpq) =\n    (x * sqrt stpq - x) / (x * stpq - x * sqrt stpq)", "by simp"], ["proof (state)\nthis:\n  (cosh_dist (Rep_hyp2 q) pd * sqrt stpq - cosh_dist (Rep_hyp2 p) pd) /\n  (cosh_dist (Rep_hyp2 p) pd * stpq -\n   cosh_dist (Rep_hyp2 q) pd * sqrt stpq) =\n  (x * sqrt stpq - x) / (x * stpq - x * sqrt stpq)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "also"], ["proof (state)\nthis:\n  (cosh_dist (Rep_hyp2 q) pd * sqrt stpq - cosh_dist (Rep_hyp2 p) pd) /\n  (cosh_dist (Rep_hyp2 p) pd * stpq -\n   cosh_dist (Rep_hyp2 q) pd * sqrt stpq) =\n  (x * sqrt stpq - x) / (x * stpq - x * sqrt stpq)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "from \\<open>sqrt stpq * sqrt stpq = stpq\\<close>"], ["proof (chain)\npicking this:\n  sqrt stpq * sqrt stpq = stpq", "have \"\\<dots> = (x * sqrt stpq - x) / ((x * sqrt stpq - x) * sqrt stpq)\""], ["proof (prove)\nusing this:\n  sqrt stpq * sqrt stpq = stpq\n\ngoal (1 subgoal):\n 1. (x * sqrt stpq - x) / (x * stpq - x * sqrt stpq) =\n    (x * sqrt stpq - x) / ((x * sqrt stpq - x) * sqrt stpq)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  (x * sqrt stpq - x) / (x * stpq - x * sqrt stpq) =\n  (x * sqrt stpq - x) / ((x * sqrt stpq - x) * sqrt stpq)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "also"], ["proof (state)\nthis:\n  (x * sqrt stpq - x) / (x * stpq - x * sqrt stpq) =\n  (x * sqrt stpq - x) / ((x * sqrt stpq - x) * sqrt stpq)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "from \\<open>x \\<noteq> 0\\<close> and \\<open>stpq \\<noteq> 1\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> 0\n  stpq \\<noteq> 1", "have \"\\<dots> = 1 / sqrt stpq\""], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n  stpq \\<noteq> 1\n\ngoal (1 subgoal):\n 1. (x * sqrt stpq - x) / ((x * sqrt stpq - x) * sqrt stpq) = 1 / sqrt stpq", "by simp"], ["proof (state)\nthis:\n  (x * sqrt stpq - x) / ((x * sqrt stpq - x) * sqrt stpq) = 1 / sqrt stpq\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "finally"], ["proof (chain)\npicking this:\n  cross_ratio ps pt pe (Rep_hyp2 p) = 1 / sqrt stpq", "show \"cross_ratio ps pt pe ?pp = 1 / sqrt stpq\""], ["proof (prove)\nusing this:\n  cross_ratio ps pt pe (Rep_hyp2 p) = 1 / sqrt stpq\n\ngoal (1 subgoal):\n 1. cross_ratio ps pt pe (Rep_hyp2 p) = 1 / sqrt stpq", "."], ["proof (state)\nthis:\n  cross_ratio ps pt pe (Rep_hyp2 p) = 1 / sqrt stpq\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>pd\\<in>{Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}.\n     cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "hence \"cross_ratio ps pt (perp_foot ?pa l) ?pp = 1 / sqrt stpq\""], ["proof (prove)\nusing this:\n  \\<forall>pd\\<in>{Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}.\n     cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq\n\ngoal (1 subgoal):\n 1. cross_ratio ps pt (perp_foot (Rep_hyp2 a) l) (Rep_hyp2 p) =\n    1 / sqrt stpq", "by simp"], ["proof (state)\nthis:\n  cross_ratio ps pt (perp_foot (Rep_hyp2 a) l) (Rep_hyp2 p) = 1 / sqrt stpq\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "have \"\\<forall> pd \\<in> {?pa,?pb,?pc}. proj2_incident pd m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>pd\\<in>{Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}.\n       proj2_incident pd m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "fix pd"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "assume \"pd \\<in> {?pa,?pb,?pc}\""], ["proof (state)\nthis:\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "with Rep_hyp2"], ["proof (chain)\npicking this:\n  Rep_hyp2 ?x \\<in> hyp2\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}", "have \"pd \\<in> hyp2\""], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n\ngoal (1 subgoal):\n 1. pd \\<in> hyp2", "by auto"], ["proof (state)\nthis:\n  pd \\<in> hyp2\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "with Rep_hyp2 and \\<open>?pp \\<noteq> ?pq\\<close> and proj2_line_through_incident"], ["proof (chain)\npicking this:\n  Rep_hyp2 ?x \\<in> hyp2\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q\n  proj2_incident ?p (proj2_line_through ?p ?q)\n  proj2_incident ?q (proj2_line_through ?p ?q)\n  pd \\<in> hyp2", "have \"cross_ratio_correct ps pt ?pp (perp_foot pd l)\"\n        and \"cross_ratio_correct ps pt ?pp (perp_foot ?pa l)\""], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q\n  proj2_incident ?p (proj2_line_through ?p ?q)\n  proj2_incident ?q (proj2_line_through ?p ?q)\n  pd \\<in> hyp2\n\ngoal (1 subgoal):\n 1. cross_ratio_correct ps pt (Rep_hyp2 p) (perp_foot pd l) &&&\n    cross_ratio_correct ps pt (Rep_hyp2 p) (perp_foot (Rep_hyp2 a) l)", "unfolding ps_def and pt_def and l_def"], ["proof (prove)\nusing this:\n  Rep_hyp2 ?x \\<in> hyp2\n  Rep_hyp2 p \\<noteq> Rep_hyp2 q\n  proj2_incident ?p (proj2_line_through ?p ?q)\n  proj2_incident ?q (proj2_line_through ?p ?q)\n  pd \\<in> hyp2\n\ngoal (1 subgoal):\n 1. cross_ratio_correct (endpoint_in_S (Rep_hyp2 p) (Rep_hyp2 q))\n     (endpoint_in_S (Rep_hyp2 q) (Rep_hyp2 p)) (Rep_hyp2 p)\n     (perp_foot pd (proj2_line_through (Rep_hyp2 p) (Rep_hyp2 q))) &&&\n    cross_ratio_correct (endpoint_in_S (Rep_hyp2 p) (Rep_hyp2 q))\n     (endpoint_in_S (Rep_hyp2 q) (Rep_hyp2 p)) (Rep_hyp2 p)\n     (perp_foot (Rep_hyp2 a) (proj2_line_through (Rep_hyp2 p) (Rep_hyp2 q)))", "by (simp_all add: endpoints_in_S_perp_foot_cross_ratio_correct)"], ["proof (state)\nthis:\n  cross_ratio_correct ps pt (Rep_hyp2 p) (perp_foot pd l)\n  cross_ratio_correct ps pt (Rep_hyp2 p) (perp_foot (Rep_hyp2 a) l)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "from \\<open>pd \\<in> {?pa,?pb,?pc}\\<close>\n        and \\<open>\\<forall> pd \\<in> {?pa,?pb,?pc}.\n        cross_ratio ps pt (perp_foot pd l) ?pp = 1 / (sqrt stpq)\\<close>"], ["proof (chain)\npicking this:\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n  \\<forall>pd\\<in>{Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}.\n     cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "have \"cross_ratio ps pt (perp_foot pd l) ?pp = 1 / sqrt stpq\""], ["proof (prove)\nusing this:\n  pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n  \\<forall>pd\\<in>{Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}.\n     cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq\n\ngoal (1 subgoal):\n 1. cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "by auto"], ["proof (state)\nthis:\n  cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "with \\<open>cross_ratio ps pt (perp_foot ?pa l) ?pp = 1 / sqrt stpq\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio ps pt (perp_foot (Rep_hyp2 a) l) (Rep_hyp2 p) = 1 / sqrt stpq\n  cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq", "have \"cross_ratio ps pt (perp_foot pd l) ?pp\n        = cross_ratio ps pt (perp_foot ?pa l) ?pp\""], ["proof (prove)\nusing this:\n  cross_ratio ps pt (perp_foot (Rep_hyp2 a) l) (Rep_hyp2 p) = 1 / sqrt stpq\n  cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) = 1 / sqrt stpq\n\ngoal (1 subgoal):\n 1. cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) =\n    cross_ratio ps pt (perp_foot (Rep_hyp2 a) l) (Rep_hyp2 p)", "by simp"], ["proof (state)\nthis:\n  cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) =\n  cross_ratio ps pt (perp_foot (Rep_hyp2 a) l) (Rep_hyp2 p)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "hence \"cross_ratio ps pt ?pp (perp_foot pd l)\n        = cross_ratio ps pt ?pp (perp_foot ?pa l)\""], ["proof (prove)\nusing this:\n  cross_ratio ps pt (perp_foot pd l) (Rep_hyp2 p) =\n  cross_ratio ps pt (perp_foot (Rep_hyp2 a) l) (Rep_hyp2 p)\n\ngoal (1 subgoal):\n 1. cross_ratio ps pt (Rep_hyp2 p) (perp_foot pd l) =\n    cross_ratio ps pt (Rep_hyp2 p) (perp_foot (Rep_hyp2 a) l)", "by (simp add: cross_ratio_swap_34 [of ps pt _ ?pp])"], ["proof (state)\nthis:\n  cross_ratio ps pt (Rep_hyp2 p) (perp_foot pd l) =\n  cross_ratio ps pt (Rep_hyp2 p) (perp_foot (Rep_hyp2 a) l)\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "with \\<open>cross_ratio_correct ps pt ?pp (perp_foot pd l)\\<close>\n        and \\<open>cross_ratio_correct ps pt ?pp (perp_foot ?pa l)\\<close>"], ["proof (chain)\npicking this:\n  cross_ratio_correct ps pt (Rep_hyp2 p) (perp_foot pd l)\n  cross_ratio_correct ps pt (Rep_hyp2 p) (perp_foot (Rep_hyp2 a) l)\n  cross_ratio ps pt (Rep_hyp2 p) (perp_foot pd l) =\n  cross_ratio ps pt (Rep_hyp2 p) (perp_foot (Rep_hyp2 a) l)", "have \"perp_foot pd l = perp_foot ?pa l\""], ["proof (prove)\nusing this:\n  cross_ratio_correct ps pt (Rep_hyp2 p) (perp_foot pd l)\n  cross_ratio_correct ps pt (Rep_hyp2 p) (perp_foot (Rep_hyp2 a) l)\n  cross_ratio ps pt (Rep_hyp2 p) (perp_foot pd l) =\n  cross_ratio ps pt (Rep_hyp2 p) (perp_foot (Rep_hyp2 a) l)\n\ngoal (1 subgoal):\n 1. perp_foot pd l = perp_foot (Rep_hyp2 a) l", "by (rule cross_ratio_unique)"], ["proof (state)\nthis:\n  perp_foot pd l = perp_foot (Rep_hyp2 a) l\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "with Rep_hyp2 [of p] and \\<open>pd \\<in> hyp2\\<close>\n        and proj2_line_through_incident [of ?pp ?pq]\n        and perp_foot_eq_implies_drop_perp_eq [of ?pp pd l ?pa]"], ["proof (chain)\npicking this:\n  Rep_hyp2 p \\<in> hyp2\n  pd \\<in> hyp2\n  proj2_incident (Rep_hyp2 p) (proj2_line_through (Rep_hyp2 p) (Rep_hyp2 q))\n  proj2_incident (Rep_hyp2 p) (proj2_line_through (Rep_hyp2 q) (Rep_hyp2 p))\n  \\<lbrakk>Rep_hyp2 p \\<in> hyp2; pd \\<in> hyp2;\n   proj2_incident (Rep_hyp2 p) l;\n   perp_foot pd l = perp_foot (Rep_hyp2 a) l\\<rbrakk>\n  \\<Longrightarrow> drop_perp pd l = drop_perp (Rep_hyp2 a) l\n  perp_foot pd l = perp_foot (Rep_hyp2 a) l", "have \"drop_perp pd l = m\""], ["proof (prove)\nusing this:\n  Rep_hyp2 p \\<in> hyp2\n  pd \\<in> hyp2\n  proj2_incident (Rep_hyp2 p) (proj2_line_through (Rep_hyp2 p) (Rep_hyp2 q))\n  proj2_incident (Rep_hyp2 p) (proj2_line_through (Rep_hyp2 q) (Rep_hyp2 p))\n  \\<lbrakk>Rep_hyp2 p \\<in> hyp2; pd \\<in> hyp2;\n   proj2_incident (Rep_hyp2 p) l;\n   perp_foot pd l = perp_foot (Rep_hyp2 a) l\\<rbrakk>\n  \\<Longrightarrow> drop_perp pd l = drop_perp (Rep_hyp2 a) l\n  perp_foot pd l = perp_foot (Rep_hyp2 a) l\n\ngoal (1 subgoal):\n 1. drop_perp pd l = m", "by (unfold m_def l_def) simp"], ["proof (state)\nthis:\n  drop_perp pd l = m\n\ngoal (1 subgoal):\n 1. \\<And>pd.\n       pd \\<in> {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c} \\<Longrightarrow>\n       proj2_incident pd m", "with drop_perp_incident [of pd l]"], ["proof (chain)\npicking this:\n  proj2_incident pd (drop_perp pd l)\n  drop_perp pd l = m", "show \"proj2_incident pd m\""], ["proof (prove)\nusing this:\n  proj2_incident pd (drop_perp pd l)\n  drop_perp pd l = m\n\ngoal (1 subgoal):\n 1. proj2_incident pd m", "by simp"], ["proof (state)\nthis:\n  proj2_incident pd m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>pd\\<in>{Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}. proj2_incident pd m\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "hence \"proj2_set_Col {?pa,?pb,?pc}\""], ["proof (prove)\nusing this:\n  \\<forall>pd\\<in>{Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}. proj2_incident pd m\n\ngoal (1 subgoal):\n 1. proj2_set_Col {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}", "by (unfold proj2_set_Col_def) (simp add: exI [of _ m])"], ["proof (state)\nthis:\n  proj2_set_Col {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "hence \"proj2_Col ?pa ?pb ?pc\""], ["proof (prove)\nusing this:\n  proj2_set_Col {Rep_hyp2 a, Rep_hyp2 b, Rep_hyp2 c}\n\ngoal (1 subgoal):\n 1. proj2_Col (Rep_hyp2 a) (Rep_hyp2 b) (Rep_hyp2 c)", "by (simp add: proj2_Col_iff_set_Col)"], ["proof (state)\nthis:\n  proj2_Col (Rep_hyp2 a) (Rep_hyp2 b) (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "with \\<open>z_non_zero ?pa\\<close> and \\<open>z_non_zero ?pb\\<close> and \\<open>z_non_zero ?pc\\<close>"], ["proof (chain)\npicking this:\n  z_non_zero (Rep_hyp2 a)\n  z_non_zero (Rep_hyp2 b)\n  z_non_zero (Rep_hyp2 c)\n  proj2_Col (Rep_hyp2 a) (Rep_hyp2 b) (Rep_hyp2 c)", "have \"real_euclid.Col (hyp2_rep a) (hyp2_rep b) (hyp2_rep c)\""], ["proof (prove)\nusing this:\n  z_non_zero (Rep_hyp2 a)\n  z_non_zero (Rep_hyp2 b)\n  z_non_zero (Rep_hyp2 c)\n  proj2_Col (Rep_hyp2 a) (Rep_hyp2 b) (Rep_hyp2 c)\n\ngoal (1 subgoal):\n 1. real_euclid.Col (hyp2_rep a) (hyp2_rep b) (hyp2_rep c)", "by (unfold hyp2_rep_def) (simp add: proj2_Col_iff_euclid_cart2)"], ["proof (state)\nthis:\n  real_euclid.Col (hyp2_rep a) (hyp2_rep b) (hyp2_rep c)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<and>\n    a p \\<congruent>\\<^sub>K a q \\<and>\n    b p \\<congruent>\\<^sub>K b q \\<and>\n    c p \\<congruent>\\<^sub>K c q \\<Longrightarrow>\n    B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "thus \"B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b\""], ["proof (prove)\nusing this:\n  real_euclid.Col (hyp2_rep a) (hyp2_rep b) (hyp2_rep c)\n\ngoal (1 subgoal):\n 1. B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b", "by (unfold real_hyp2_B_def real_euclid.Col_def)"], ["proof (state)\nthis:\n  B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<noteq> q \\<and>\n  a p \\<congruent>\\<^sub>K a q \\<and>\n  b p \\<congruent>\\<^sub>K b q \\<and>\n  c p \\<congruent>\\<^sub>K c q \\<longrightarrow>\n  B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b\n\ngoal:\nNo subgoals!", "qed"], ["", "interpretation hyp2: tarski_absolute real_hyp2_C real_hyp2_B"], ["proof (prove)\ngoal (1 subgoal):\n 1. tarski_absolute real_hyp2_C real_hyp2_B", "using hyp2_axiom8 and hyp2_axiom9"], ["proof (prove)\nusing this:\n  \\<exists>a b c.\n     \\<not> B\\<^sub>K a b c \\<and>\n     \\<not> B\\<^sub>K b c a \\<and> \\<not> B\\<^sub>K c a b\n  \\<forall>p q a b c.\n     p \\<noteq> q \\<and>\n     a p \\<congruent>\\<^sub>K a q \\<and>\n     b p \\<congruent>\\<^sub>K b q \\<and>\n     c p \\<congruent>\\<^sub>K c q \\<longrightarrow>\n     B\\<^sub>K a b c \\<or> B\\<^sub>K b c a \\<or> B\\<^sub>K c a b\n\ngoal (1 subgoal):\n 1. tarski_absolute real_hyp2_C real_hyp2_B", "by unfold_locales"], ["", "subsection \\<open>The Klein--Beltrami model violates the Euclidean axiom\\<close>"], ["", "theorem hyp2_axiom10_false:\n  shows \"\\<not> (\\<forall> a b c d t. B\\<^sub>K a d t \\<and> B\\<^sub>K b d c \\<and> a \\<noteq> d\n  \\<longrightarrow> (\\<exists> x y. B\\<^sub>K a b x \\<and> B\\<^sub>K a c y \\<and> B\\<^sub>K x t y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>a b c d t.\n               B\\<^sub>K a d t \\<and>\n               B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n               (\\<exists>x y.\n                   B\\<^sub>K a b x \\<and>\n                   B\\<^sub>K a c y \\<and> B\\<^sub>K x t y))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "assume \"\\<forall> a b c d t. B\\<^sub>K a d t \\<and> B\\<^sub>K b d c \\<and> a \\<noteq> d\n    \\<longrightarrow> (\\<exists> x y. B\\<^sub>K a b x \\<and> B\\<^sub>K a c y \\<and> B\\<^sub>K x t y)\""], ["proof (state)\nthis:\n  \\<forall>a b c d t.\n     B\\<^sub>K a d t \\<and>\n     B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n     (\\<exists>x y.\n         B\\<^sub>K a b x \\<and> B\\<^sub>K a c y \\<and> B\\<^sub>K x t y)\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "let ?ca = \"0 :: real^2\"\n    and ?cb = \"vector [1/2,0] :: real^2\"\n    and ?cc = \"vector [0,1/2] :: real^2\"\n    and ?cd = \"vector [1/4,1/4] :: real^2\"\n    and ?ct = \"vector [1/2,1/2] :: real^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "let ?a = \"hyp2_abs ?ca\"\n    and ?b = \"hyp2_abs ?cb\"\n    and ?c = \"hyp2_abs ?cc\"\n    and ?d = \"hyp2_abs ?cd\"\n    and ?t = \"hyp2_abs ?ct\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "have \"?cd = (1/2) *\\<^sub>R ?ct\" and \"?cd - ?cb = (1/2) *\\<^sub>R (?cc - ?cb)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector [1 / 4, 1 / 4] = (1 / 2) *\\<^sub>R vector [1 / 2, 1 / 2] &&&\n    vector [1 / 4, 1 / 4] - vector [1 / 2, 0] =\n    (1 / 2) *\\<^sub>R (vector [0, 1 / 2] - vector [1 / 2, 0])", "by (unfold vector_def) (simp_all add: vec_eq_iff)"], ["proof (state)\nthis:\n  vector [1 / 4, 1 / 4] = (1 / 2) *\\<^sub>R vector [1 / 2, 1 / 2]\n  vector [1 / 4, 1 / 4] - vector [1 / 2, 0] =\n  (1 / 2) *\\<^sub>R (vector [0, 1 / 2] - vector [1 / 2, 0])\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "hence \"B\\<^sub>\\<real> ?ca ?cd ?ct\" and \"B\\<^sub>\\<real> ?cb ?cd ?cc\""], ["proof (prove)\nusing this:\n  vector [1 / 4, 1 / 4] = (1 / 2) *\\<^sub>R vector [1 / 2, 1 / 2]\n  vector [1 / 4, 1 / 4] - vector [1 / 2, 0] =\n  (1 / 2) *\\<^sub>R (vector [0, 1 / 2] - vector [1 / 2, 0])\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> 0 vector [1 / 4, 1 / 4] vector [1 / 2, 1 / 2] &&&\n    B\\<^sub>\\<real> vector\n                     [1 / 2, 0] vector [1 / 4, 1 / 4] vector [0, 1 / 2]", "by (unfold real_euclid_B_def) (simp_all add: exI [of _ \"1/2\"])"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> 0 vector [1 / 4, 1 / 4] vector [1 / 2, 1 / 2]\n  B\\<^sub>\\<real> vector [1 / 2, 0] vector [1 / 4, 1 / 4] vector [0, 1 / 2]\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "hence \"B\\<^sub>K ?a ?d ?t\" and \"B\\<^sub>K ?b ?d ?c\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> 0 vector [1 / 4, 1 / 4] vector [1 / 2, 1 / 2]\n  B\\<^sub>\\<real> vector [1 / 2, 0] vector [1 / 4, 1 / 4] vector [0, 1 / 2]\n\ngoal (1 subgoal):\n 1. B\\<^sub>K hyp2_abs\n               0 hyp2_abs\n                  (vector\n                    [1 / 4, 1 / 4]) hyp2_abs (vector [1 / 2, 1 / 2]) &&&\n    B\\<^sub>K hyp2_abs\n               (vector\n                 [1 / 2,\n                  0]) hyp2_abs\n                       (vector [1 / 4, 1 / 4]) hyp2_abs (vector [0, 1 / 2])", "by (unfold real_hyp2_B_def) (simp_all add: hyp2_rep_abs_examples)"], ["proof (state)\nthis:\n  B\\<^sub>K hyp2_abs\n             0 hyp2_abs\n                (vector [1 / 4, 1 / 4]) hyp2_abs (vector [1 / 2, 1 / 2])\n  B\\<^sub>K hyp2_abs\n             (vector\n               [1 / 2,\n                0]) hyp2_abs\n                     (vector [1 / 4, 1 / 4]) hyp2_abs (vector [0, 1 / 2])\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "have \"?a \\<noteq> ?d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_abs 0 \\<noteq> hyp2_abs (vector [1 / 4, 1 / 4])", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. hyp2_abs 0 = hyp2_abs (vector [1 / 4, 1 / 4]) \\<Longrightarrow> False", "assume \"?a = ?d\""], ["proof (state)\nthis:\n  hyp2_abs 0 = hyp2_abs (vector [1 / 4, 1 / 4])\n\ngoal (1 subgoal):\n 1. hyp2_abs 0 = hyp2_abs (vector [1 / 4, 1 / 4]) \\<Longrightarrow> False", "hence \"hyp2_rep ?a = hyp2_rep ?d\""], ["proof (prove)\nusing this:\n  hyp2_abs 0 = hyp2_abs (vector [1 / 4, 1 / 4])\n\ngoal (1 subgoal):\n 1. hyp2_rep (hyp2_abs 0) = hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4]))", "by simp"], ["proof (state)\nthis:\n  hyp2_rep (hyp2_abs 0) = hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4]))\n\ngoal (1 subgoal):\n 1. hyp2_abs 0 = hyp2_abs (vector [1 / 4, 1 / 4]) \\<Longrightarrow> False", "hence \"?ca = ?cd\""], ["proof (prove)\nusing this:\n  hyp2_rep (hyp2_abs 0) = hyp2_rep (hyp2_abs (vector [1 / 4, 1 / 4]))\n\ngoal (1 subgoal):\n 1. 0 = vector [1 / 4, 1 / 4]", "by (simp add: hyp2_rep_abs_examples)"], ["proof (state)\nthis:\n  0 = vector [1 / 4, 1 / 4]\n\ngoal (1 subgoal):\n 1. hyp2_abs 0 = hyp2_abs (vector [1 / 4, 1 / 4]) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  0 = vector [1 / 4, 1 / 4]\n\ngoal (1 subgoal):\n 1. False", "by (simp add: vec_eq_iff forall_2)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hyp2_abs 0 \\<noteq> hyp2_abs (vector [1 / 4, 1 / 4])\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>B\\<^sub>K ?a ?d ?t\\<close> and \\<open>B\\<^sub>K ?b ?d ?c\\<close>\n    and \\<open>\\<forall> a b c d t. B\\<^sub>K a d t \\<and> B\\<^sub>K b d c \\<and> a \\<noteq> d\n    \\<longrightarrow> (\\<exists> x y. B\\<^sub>K a b x \\<and> B\\<^sub>K a c y \\<and> B\\<^sub>K x t y)\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>K hyp2_abs\n             0 hyp2_abs\n                (vector [1 / 4, 1 / 4]) hyp2_abs (vector [1 / 2, 1 / 2])\n  B\\<^sub>K hyp2_abs\n             (vector\n               [1 / 2,\n                0]) hyp2_abs\n                     (vector [1 / 4, 1 / 4]) hyp2_abs (vector [0, 1 / 2])\n  \\<forall>a b c d t.\n     B\\<^sub>K a d t \\<and>\n     B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n     (\\<exists>x y.\n         B\\<^sub>K a b x \\<and> B\\<^sub>K a c y \\<and> B\\<^sub>K x t y)\n  hyp2_abs 0 \\<noteq> hyp2_abs (vector [1 / 4, 1 / 4])", "obtain x and y where \"B\\<^sub>K ?a ?b x\" and \"B\\<^sub>K ?a ?c y\" and \"B\\<^sub>K x ?t y\""], ["proof (prove)\nusing this:\n  B\\<^sub>K hyp2_abs\n             0 hyp2_abs\n                (vector [1 / 4, 1 / 4]) hyp2_abs (vector [1 / 2, 1 / 2])\n  B\\<^sub>K hyp2_abs\n             (vector\n               [1 / 2,\n                0]) hyp2_abs\n                     (vector [1 / 4, 1 / 4]) hyp2_abs (vector [0, 1 / 2])\n  \\<forall>a b c d t.\n     B\\<^sub>K a d t \\<and>\n     B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n     (\\<exists>x y.\n         B\\<^sub>K a b x \\<and> B\\<^sub>K a c y \\<and> B\\<^sub>K x t y)\n  hyp2_abs 0 \\<noteq> hyp2_abs (vector [1 / 4, 1 / 4])\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>B\\<^sub>K hyp2_abs 0 hyp2_abs (vector [1 / 2, 0]) x;\n         B\\<^sub>K hyp2_abs 0 hyp2_abs (vector [0, 1 / 2]) y;\n         B\\<^sub>K x hyp2_abs (vector [1 / 2, 1 / 2]) y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  B\\<^sub>K hyp2_abs 0 hyp2_abs (vector [1 / 2, 0]) x\n  B\\<^sub>K hyp2_abs 0 hyp2_abs (vector [0, 1 / 2]) y\n  B\\<^sub>K x hyp2_abs (vector [1 / 2, 1 / 2]) y\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "let ?cx = \"hyp2_rep x\"\n    and ?cy = \"hyp2_rep y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "from \\<open>B\\<^sub>K ?a ?b x\\<close> and \\<open>B\\<^sub>K ?a ?c y\\<close> and \\<open>B\\<^sub>K x ?t y\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>K hyp2_abs 0 hyp2_abs (vector [1 / 2, 0]) x\n  B\\<^sub>K hyp2_abs 0 hyp2_abs (vector [0, 1 / 2]) y\n  B\\<^sub>K x hyp2_abs (vector [1 / 2, 1 / 2]) y", "have \"B\\<^sub>\\<real> ?ca ?cb ?cx\" and \"B\\<^sub>\\<real> ?ca ?cc ?cy\" and \"B\\<^sub>\\<real> ?cx ?ct ?cy\""], ["proof (prove)\nusing this:\n  B\\<^sub>K hyp2_abs 0 hyp2_abs (vector [1 / 2, 0]) x\n  B\\<^sub>K hyp2_abs 0 hyp2_abs (vector [0, 1 / 2]) y\n  B\\<^sub>K x hyp2_abs (vector [1 / 2, 1 / 2]) y\n\ngoal (1 subgoal):\n 1. B\\<^sub>\\<real> 0 vector [1 / 2, 0] hyp2_rep x &&&\n    B\\<^sub>\\<real> 0 vector [0, 1 / 2] hyp2_rep y &&&\n    B\\<^sub>\\<real> hyp2_rep x vector [1 / 2, 1 / 2] hyp2_rep y", "by (unfold real_hyp2_B_def) (simp_all add: hyp2_rep_abs_examples)"], ["proof (state)\nthis:\n  B\\<^sub>\\<real> 0 vector [1 / 2, 0] hyp2_rep x\n  B\\<^sub>\\<real> 0 vector [0, 1 / 2] hyp2_rep y\n  B\\<^sub>\\<real> hyp2_rep x vector [1 / 2, 1 / 2] hyp2_rep y\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "from \\<open>B\\<^sub>\\<real> ?ca ?cb ?cx\\<close> and \\<open>B\\<^sub>\\<real> ?ca ?cc ?cy\\<close> and \\<open>B\\<^sub>\\<real> ?cx ?ct ?cy\\<close>"], ["proof (chain)\npicking this:\n  B\\<^sub>\\<real> 0 vector [1 / 2, 0] hyp2_rep x\n  B\\<^sub>\\<real> 0 vector [0, 1 / 2] hyp2_rep y\n  B\\<^sub>\\<real> hyp2_rep x vector [1 / 2, 1 / 2] hyp2_rep y", "obtain j and k and l where \"?cb - ?ca = j *\\<^sub>R (?cx - ?ca)\"\n    and \"?cc - ?ca = k *\\<^sub>R (?cy - ?ca)\"\n    and \"l \\<ge> 0\" and \"l \\<le> 1\" and \"?ct - ?cx = l *\\<^sub>R (?cy - ?cx)\""], ["proof (prove)\nusing this:\n  B\\<^sub>\\<real> 0 vector [1 / 2, 0] hyp2_rep x\n  B\\<^sub>\\<real> 0 vector [0, 1 / 2] hyp2_rep y\n  B\\<^sub>\\<real> hyp2_rep x vector [1 / 2, 1 / 2] hyp2_rep y\n\ngoal (1 subgoal):\n 1. (\\<And>j k l.\n        \\<lbrakk>vector [1 / 2, 0] - 0 = j *\\<^sub>R (hyp2_rep x - 0);\n         vector [0, 1 / 2] - 0 = k *\\<^sub>R (hyp2_rep y - 0); 0 \\<le> l;\n         l \\<le> 1;\n         vector [1 / 2, 1 / 2] - hyp2_rep x =\n         l *\\<^sub>R (hyp2_rep y - hyp2_rep x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold real_euclid_B_def) fast"], ["proof (state)\nthis:\n  vector [1 / 2, 0] - 0 = j *\\<^sub>R (hyp2_rep x - 0)\n  vector [0, 1 / 2] - 0 = k *\\<^sub>R (hyp2_rep y - 0)\n  0 \\<le> l\n  l \\<le> 1\n  vector [1 / 2, 1 / 2] - hyp2_rep x = l *\\<^sub>R (hyp2_rep y - hyp2_rep x)\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "from \\<open>?cb - ?ca = j *\\<^sub>R (?cx - ?ca)\\<close> and \\<open>?cc - ?ca = k *\\<^sub>R (?cy - ?ca)\\<close>"], ["proof (chain)\npicking this:\n  vector [1 / 2, 0] - 0 = j *\\<^sub>R (hyp2_rep x - 0)\n  vector [0, 1 / 2] - 0 = k *\\<^sub>R (hyp2_rep y - 0)", "have \"j \\<noteq> 0\" and \"k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  vector [1 / 2, 0] - 0 = j *\\<^sub>R (hyp2_rep x - 0)\n  vector [0, 1 / 2] - 0 = k *\\<^sub>R (hyp2_rep y - 0)\n\ngoal (1 subgoal):\n 1. j \\<noteq> 0 &&& k \\<noteq> 0", "by (auto simp add: vec_eq_iff forall_2)"], ["proof (state)\nthis:\n  j \\<noteq> 0\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>?cb - ?ca = j *\\<^sub>R (?cx - ?ca)\\<close> and \\<open>?cc - ?ca = k *\\<^sub>R (?cy - ?ca)\\<close>"], ["proof (chain)\npicking this:\n  vector [1 / 2, 0] - 0 = j *\\<^sub>R (hyp2_rep x - 0)\n  vector [0, 1 / 2] - 0 = k *\\<^sub>R (hyp2_rep y - 0)\n  j \\<noteq> 0\n  k \\<noteq> 0", "have \"?cx = (1/j) *\\<^sub>R ?cb\" and \"?cy = (1/k) *\\<^sub>R ?cc\""], ["proof (prove)\nusing this:\n  vector [1 / 2, 0] - 0 = j *\\<^sub>R (hyp2_rep x - 0)\n  vector [0, 1 / 2] - 0 = k *\\<^sub>R (hyp2_rep y - 0)\n  j \\<noteq> 0\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. hyp2_rep x = (1 / j) *\\<^sub>R vector [1 / 2, 0] &&&\n    hyp2_rep y = (1 / k) *\\<^sub>R vector [0, 1 / 2]", "by simp_all"], ["proof (state)\nthis:\n  hyp2_rep x = (1 / j) *\\<^sub>R vector [1 / 2, 0]\n  hyp2_rep y = (1 / k) *\\<^sub>R vector [0, 1 / 2]\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "hence \"?cx$2 = 0\" and \"?cy$1 = 0\""], ["proof (prove)\nusing this:\n  hyp2_rep x = (1 / j) *\\<^sub>R vector [1 / 2, 0]\n  hyp2_rep y = (1 / k) *\\<^sub>R vector [0, 1 / 2]\n\ngoal (1 subgoal):\n 1. hyp2_rep x $ 2 = 0 &&& hyp2_rep y $ 1 = 0", "by simp_all"], ["proof (state)\nthis:\n  hyp2_rep x $ 2 = 0\n  hyp2_rep y $ 1 = 0\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "from \\<open>?ct - ?cx = l *\\<^sub>R (?cy - ?cx)\\<close>"], ["proof (chain)\npicking this:\n  vector [1 / 2, 1 / 2] - hyp2_rep x = l *\\<^sub>R (hyp2_rep y - hyp2_rep x)", "have \"?ct = (1 - l) *\\<^sub>R ?cx + l *\\<^sub>R ?cy\""], ["proof (prove)\nusing this:\n  vector [1 / 2, 1 / 2] - hyp2_rep x = l *\\<^sub>R (hyp2_rep y - hyp2_rep x)\n\ngoal (1 subgoal):\n 1. vector [1 / 2, 1 / 2] =\n    (1 - l) *\\<^sub>R hyp2_rep x + l *\\<^sub>R hyp2_rep y", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  vector [1 / 2, 1 / 2] =\n  (1 - l) *\\<^sub>R hyp2_rep x + l *\\<^sub>R hyp2_rep y\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>?cx$2 = 0\\<close> and \\<open>?cy$1 = 0\\<close>"], ["proof (chain)\npicking this:\n  hyp2_rep x $ 2 = 0\n  hyp2_rep y $ 1 = 0\n  vector [1 / 2, 1 / 2] =\n  (1 - l) *\\<^sub>R hyp2_rep x + l *\\<^sub>R hyp2_rep y", "have \"?ct$1 = (1 - l) * (?cx$1)\" and \"?ct$2 = l * (?cy$2)\""], ["proof (prove)\nusing this:\n  hyp2_rep x $ 2 = 0\n  hyp2_rep y $ 1 = 0\n  vector [1 / 2, 1 / 2] =\n  (1 - l) *\\<^sub>R hyp2_rep x + l *\\<^sub>R hyp2_rep y\n\ngoal (1 subgoal):\n 1. vector [1 / 2, 1 / 2] $ 1 = (1 - l) * hyp2_rep x $ 1 &&&\n    vector [1 / 2, 1 / 2] $ 2 = l * hyp2_rep y $ 2", "by simp_all"], ["proof (state)\nthis:\n  vector [1 / 2, 1 / 2] $ 1 = (1 - l) * hyp2_rep x $ 1\n  vector [1 / 2, 1 / 2] $ 2 = l * hyp2_rep y $ 2\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "hence \"l * (?cy$2) = 1/2\" and \"(1 - l) * (?cx$1) = 1/2\""], ["proof (prove)\nusing this:\n  vector [1 / 2, 1 / 2] $ 1 = (1 - l) * hyp2_rep x $ 1\n  vector [1 / 2, 1 / 2] $ 2 = l * hyp2_rep y $ 2\n\ngoal (1 subgoal):\n 1. l * hyp2_rep y $ 2 = 1 / 2 &&& (1 - l) * hyp2_rep x $ 1 = 1 / 2", "by simp_all"], ["proof (state)\nthis:\n  l * hyp2_rep y $ 2 = 1 / 2\n  (1 - l) * hyp2_rep x $ 1 = 1 / 2\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "have \"?cx$1 \\<le> \\<bar>?cx$1\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_rep x $ 1 \\<le> \\<bar>hyp2_rep x $ 1\\<bar>", "by simp"], ["proof (state)\nthis:\n  hyp2_rep x $ 1 \\<le> \\<bar>hyp2_rep x $ 1\\<bar>\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  hyp2_rep x $ 1 \\<le> \\<bar>hyp2_rep x $ 1\\<bar>\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "have \"\\<dots> \\<le> norm ?cx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>hyp2_rep x $ 1\\<bar> \\<le> norm (hyp2_rep x)", "by (rule component_le_norm_cart)"], ["proof (state)\nthis:\n  \\<bar>hyp2_rep x $ 1\\<bar> \\<le> norm (hyp2_rep x)\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<bar>hyp2_rep x $ 1\\<bar> \\<le> norm (hyp2_rep x)\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "have \"\\<dots> < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (hyp2_rep x) < 1", "by (rule norm_hyp2_rep_lt_1)"], ["proof (state)\nthis:\n  norm (hyp2_rep x) < 1\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  hyp2_rep x $ 1 < 1", "have \"?cx$1 < 1\""], ["proof (prove)\nusing this:\n  hyp2_rep x $ 1 < 1\n\ngoal (1 subgoal):\n 1. hyp2_rep x $ 1 < 1", "."], ["proof (state)\nthis:\n  hyp2_rep x $ 1 < 1\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>l \\<le> 1\\<close> and mult_less_cancel_left [of \"1 - l\" \"?cx$1\" 1]"], ["proof (chain)\npicking this:\n  l \\<le> 1\n  ((1 - l) * hyp2_rep x $ 1 < (1 - l) * 1) =\n  ((0 \\<le> 1 - l \\<longrightarrow> hyp2_rep x $ 1 < 1) \\<and>\n   (1 - l \\<le> 0 \\<longrightarrow> 1 < hyp2_rep x $ 1))\n  hyp2_rep x $ 1 < 1", "have \"(1 - l) * ?cx$1 \\<le> 1 - l\""], ["proof (prove)\nusing this:\n  l \\<le> 1\n  ((1 - l) * hyp2_rep x $ 1 < (1 - l) * 1) =\n  ((0 \\<le> 1 - l \\<longrightarrow> hyp2_rep x $ 1 < 1) \\<and>\n   (1 - l \\<le> 0 \\<longrightarrow> 1 < hyp2_rep x $ 1))\n  hyp2_rep x $ 1 < 1\n\ngoal (1 subgoal):\n 1. (1 - l) * hyp2_rep x $ 1 \\<le> 1 - l", "by auto"], ["proof (state)\nthis:\n  (1 - l) * hyp2_rep x $ 1 \\<le> 1 - l\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>(1 - l) * (?cx$1) = 1/2\\<close>"], ["proof (chain)\npicking this:\n  (1 - l) * hyp2_rep x $ 1 = 1 / 2\n  (1 - l) * hyp2_rep x $ 1 \\<le> 1 - l", "have \"l \\<le> 1/2\""], ["proof (prove)\nusing this:\n  (1 - l) * hyp2_rep x $ 1 = 1 / 2\n  (1 - l) * hyp2_rep x $ 1 \\<le> 1 - l\n\ngoal (1 subgoal):\n 1. l \\<le> 1 / 2", "by simp"], ["proof (state)\nthis:\n  l \\<le> 1 / 2\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "have \"?cy$2 \\<le> \\<bar>?cy$2\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hyp2_rep y $ 2 \\<le> \\<bar>hyp2_rep y $ 2\\<bar>", "by simp"], ["proof (state)\nthis:\n  hyp2_rep y $ 2 \\<le> \\<bar>hyp2_rep y $ 2\\<bar>\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  hyp2_rep y $ 2 \\<le> \\<bar>hyp2_rep y $ 2\\<bar>\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "have \"\\<dots> \\<le> norm ?cy\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>hyp2_rep y $ 2\\<bar> \\<le> norm (hyp2_rep y)", "by (rule component_le_norm_cart)"], ["proof (state)\nthis:\n  \\<bar>hyp2_rep y $ 2\\<bar> \\<le> norm (hyp2_rep y)\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<bar>hyp2_rep y $ 2\\<bar> \\<le> norm (hyp2_rep y)\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "have \"\\<dots> < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (hyp2_rep y) < 1", "by (rule norm_hyp2_rep_lt_1)"], ["proof (state)\nthis:\n  norm (hyp2_rep y) < 1\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  hyp2_rep y $ 2 < 1", "have \"?cy$2 < 1\""], ["proof (prove)\nusing this:\n  hyp2_rep y $ 2 < 1\n\ngoal (1 subgoal):\n 1. hyp2_rep y $ 2 < 1", "."], ["proof (state)\nthis:\n  hyp2_rep y $ 2 < 1\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>l \\<ge> 0\\<close> and mult_less_cancel_left [of l \"?cy$2\" 1]"], ["proof (chain)\npicking this:\n  0 \\<le> l\n  (l * hyp2_rep y $ 2 < l * 1) =\n  ((0 \\<le> l \\<longrightarrow> hyp2_rep y $ 2 < 1) \\<and>\n   (l \\<le> 0 \\<longrightarrow> 1 < hyp2_rep y $ 2))\n  hyp2_rep y $ 2 < 1", "have \"l * ?cy$2 \\<le> l\""], ["proof (prove)\nusing this:\n  0 \\<le> l\n  (l * hyp2_rep y $ 2 < l * 1) =\n  ((0 \\<le> l \\<longrightarrow> hyp2_rep y $ 2 < 1) \\<and>\n   (l \\<le> 0 \\<longrightarrow> 1 < hyp2_rep y $ 2))\n  hyp2_rep y $ 2 < 1\n\ngoal (1 subgoal):\n 1. l * hyp2_rep y $ 2 \\<le> l", "by auto"], ["proof (state)\nthis:\n  l * hyp2_rep y $ 2 \\<le> l\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>l * (?cy$2) = 1/2\\<close>"], ["proof (chain)\npicking this:\n  l * hyp2_rep y $ 2 = 1 / 2\n  l * hyp2_rep y $ 2 \\<le> l", "have \"l \\<ge> 1/2\""], ["proof (prove)\nusing this:\n  l * hyp2_rep y $ 2 = 1 / 2\n  l * hyp2_rep y $ 2 \\<le> l\n\ngoal (1 subgoal):\n 1. 1 / 2 \\<le> l", "by simp"], ["proof (state)\nthis:\n  1 / 2 \\<le> l\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>l \\<le> 1/2\\<close>"], ["proof (chain)\npicking this:\n  l \\<le> 1 / 2\n  1 / 2 \\<le> l", "have \"l = 1/2\""], ["proof (prove)\nusing this:\n  l \\<le> 1 / 2\n  1 / 2 \\<le> l\n\ngoal (1 subgoal):\n 1. l = 1 / 2", "by simp"], ["proof (state)\nthis:\n  l = 1 / 2\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>l * (?cy$2) = 1/2\\<close>"], ["proof (chain)\npicking this:\n  l * hyp2_rep y $ 2 = 1 / 2\n  l = 1 / 2", "have \"?cy$2 = 1\""], ["proof (prove)\nusing this:\n  l * hyp2_rep y $ 2 = 1 / 2\n  l = 1 / 2\n\ngoal (1 subgoal):\n 1. hyp2_rep y $ 2 = 1", "by simp"], ["proof (state)\nthis:\n  hyp2_rep y $ 2 = 1\n\ngoal (1 subgoal):\n 1. \\<forall>a b c d t.\n       B\\<^sub>K a d t \\<and>\n       B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n       (\\<exists>x y.\n           B\\<^sub>K a b x \\<and>\n           B\\<^sub>K a c y \\<and> B\\<^sub>K x t y) \\<Longrightarrow>\n    False", "with \\<open>?cy$2 < 1\\<close>"], ["proof (chain)\npicking this:\n  hyp2_rep y $ 2 < 1\n  hyp2_rep y $ 2 = 1", "show False"], ["proof (prove)\nusing this:\n  hyp2_rep y $ 2 < 1\n  hyp2_rep y $ 2 = 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem hyp2_not_tarski: \"\\<not> (tarski real_hyp2_C real_hyp2_B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> tarski real_hyp2_C real_hyp2_B", "using hyp2_axiom10_false"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>a b c d t.\n             B\\<^sub>K a d t \\<and>\n             B\\<^sub>K b d c \\<and> a \\<noteq> d \\<longrightarrow>\n             (\\<exists>x y.\n                 B\\<^sub>K a b x \\<and>\n                 B\\<^sub>K a c y \\<and> B\\<^sub>K x t y))\n\ngoal (1 subgoal):\n 1. \\<not> tarski real_hyp2_C real_hyp2_B", "by (unfold tarski_def tarski_space_def tarski_space_axioms_def) simp"], ["", "text \\<open>Therefore axiom 10 is independent.\\<close>"], ["", "end"]]}