{"file_name": "/home/qj213/afp-2021-10-22/thys/Factored_Transition_System_Bounding/FmapUtils.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Factored_Transition_System_Bounding", "problem_names": ["lemma IN_FDOM_DRESTRICT_DIFF:\n  fixes vs v f\n  assumes \"\\<not>(v \\<in> vs)\" \"fmdom' f \\<subseteq> fdom\" \"v \\<in> fmdom' f\"\n  shows \"v \\<in> fmdom' (fmrestrict_set (fdom - vs) f)\"", "lemma disj_dom_drest_fupdate_eq: \"\n  disjnt (fmdom' x) vs \\<Longrightarrow> (fmrestrict_set vs s = fmrestrict_set vs (x ++ s))\n\"", "lemma graph_plan_card_state_set:\n  fixes PROB vs\n  assumes \"finite vs\"\n  shows \"card (fmdom' (fmrestrict_set vs s)) \\<le> card vs\"", "lemma exec_drest_5:\n  fixes x vs\n  assumes \"fmdom' x \\<subseteq> vs\"\n  shows \"(fmrestrict_set vs x = x)\"", "lemma graph_plan_lemma_5:\n  fixes s s' vs\n  assumes \"(fmrestrict_set (fmdom' s - vs) s = fmrestrict_set (fmdom' s' - vs) s')\"\n    \"(fmrestrict_set vs s = fmrestrict_set vs s')\"\n  shows \"(s = s')\"", "lemma drest_smap_drest_smap_drest:\n  fixes x s vs\n  shows \"fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<longleftrightarrow> fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\"", "lemma sat_precond_as_proj_1:\n  fixes s s' vs x\n  assumes \"fmrestrict_set vs s = fmrestrict_set vs s'\"\n  shows \"fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<longleftrightarrow> fmrestrict_set vs x \\<subseteq>\\<^sub>f s'\"", "lemma sat_precond_as_proj_4:\n  fixes fm1 fm2 vs\n  assumes \"fm2 \\<subseteq>\\<^sub>f fm1\"\n  shows \"(fmrestrict_set vs fm2 \\<subseteq>\\<^sub>f fm1)\"", "lemma sublist_as_proj_eq_as_1:\n  fixes x s vs\n  assumes \"(x \\<subseteq>\\<^sub>f fmrestrict_set vs s)\"\n  shows \"(x \\<subseteq>\\<^sub>f s)\"", "lemma limited_dom_neq_restricted_neq:\n  assumes \"fmdom' f1 \\<subseteq> vs\" \"f1 ++ f2 \\<noteq> f2\"\n  shows \"fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2\"", "lemma fmlookup_fmrestrict_set_dom: \"\\<And>vs s. dom (fmlookup (fmrestrict_set vs s)) = vs \\<inter> (fmdom' s)\""], "translations": [["", "lemma IN_FDOM_DRESTRICT_DIFF:\n  fixes vs v f\n  assumes \"\\<not>(v \\<in> vs)\" \"fmdom' f \\<subseteq> fdom\" \"v \\<in> fmdom' f\"\n  shows \"v \\<in> fmdom' (fmrestrict_set (fdom - vs) f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> fmdom' (fmrestrict_set (fdom - vs) f)", "using assms"], ["proof (prove)\nusing this:\n  v \\<notin> vs\n  fmdom' f \\<subseteq> fdom\n  v \\<in> fmdom' f\n\ngoal (1 subgoal):\n 1. v \\<in> fmdom' (fmrestrict_set (fdom - vs) f)", "by (metis DiffI Int_def Int_iff Set.filter_def fmdom'_filter fmfilter_alt_defs(4) inf.order_iff)"], ["", "lemma disj_dom_drest_fupdate_eq: \"\n  disjnt (fmdom' x) vs \\<Longrightarrow> (fmrestrict_set vs s = fmrestrict_set vs (x ++ s))\n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "fix vs s x"], ["proof (state)\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "assume P: \"disjnt (fmdom' x) vs\""], ["proof (state)\nthis:\n  disjnt (fmdom' x) vs\n\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "moreover"], ["proof (state)\nthis:\n  disjnt (fmdom' x) vs\n\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "have 1: \"\\<forall>x''. (x'' \\<in> vs) \\<longrightarrow> (fmlookup (x ++ s) x'' = fmlookup s  x'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x''.\n       x'' \\<in> vs \\<longrightarrow> fmlookup (x ++ s) x'' = fmlookup s x''", "by (metis calculation disjnt_iff fmap_add_ltr_def fmdom'_notD fmdom_notI fmlookup_add)"], ["proof (state)\nthis:\n  \\<forall>x''.\n     x'' \\<in> vs \\<longrightarrow> fmlookup (x ++ s) x'' = fmlookup s x''\n\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "moreover"], ["proof (state)\nthis:\n  \\<forall>x''.\n     x'' \\<in> vs \\<longrightarrow> fmlookup (x ++ s) x'' = fmlookup s x''\n\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "{"], ["proof (state)\nthis:\n  \\<forall>x''.\n     x'' \\<in> vs \\<longrightarrow> fmlookup (x ++ s) x'' = fmlookup s x''\n\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "fix x''"], ["proof (state)\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "have \"fmlookup (fmrestrict_set vs s) x'' = fmlookup (fmrestrict_set vs (x ++ s)) x''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs s) x'' =\n    fmlookup (fmrestrict_set vs (x ++ s)) x''", "apply(cases \"x'' \\<notin> fmdom' x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. x'' \\<notin> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs s) x'' =\n    fmlookup (fmrestrict_set vs (x ++ s)) x''\n 2. \\<not> x'' \\<notin> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs s) x'' =\n    fmlookup (fmrestrict_set vs (x ++ s)) x''", "apply(cases \"x'' \\<notin> vs\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x'' \\<notin> fmdom' x; x'' \\<notin> vs\\<rbrakk>\n    \\<Longrightarrow> fmlookup (fmrestrict_set vs s) x'' =\n                      fmlookup (fmrestrict_set vs (x ++ s)) x''\n 2. \\<lbrakk>x'' \\<notin> fmdom' x; \\<not> x'' \\<notin> vs\\<rbrakk>\n    \\<Longrightarrow> fmlookup (fmrestrict_set vs s) x'' =\n                      fmlookup (fmrestrict_set vs (x ++ s)) x''\n 3. \\<not> x'' \\<notin> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs s) x'' =\n    fmlookup (fmrestrict_set vs (x ++ s)) x''", "apply(auto simp add: \"1\")"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs s) x'' =\n  fmlookup (fmrestrict_set vs (x ++ s)) x''\n\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "}"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs s) ?x''2 =\n  fmlookup (fmrestrict_set vs (x ++ s)) ?x''2\n\ngoal (1 subgoal):\n 1. disjnt (fmdom' x) vs \\<Longrightarrow>\n    fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "ultimately"], ["proof (chain)\npicking this:\n  disjnt (fmdom' x) vs\n  \\<forall>x''.\n     x'' \\<in> vs \\<longrightarrow> fmlookup (x ++ s) x'' = fmlookup s x''\n  fmlookup (fmrestrict_set vs s) ?x''2 =\n  fmlookup (fmrestrict_set vs (x ++ s)) ?x''2", "show \"(fmrestrict_set vs s = fmrestrict_set vs (x ++ s))\""], ["proof (prove)\nusing this:\n  disjnt (fmdom' x) vs\n  \\<forall>x''.\n     x'' \\<in> vs \\<longrightarrow> fmlookup (x ++ s) x'' = fmlookup s x''\n  fmlookup (fmrestrict_set vs s) ?x''2 =\n  fmlookup (fmrestrict_set vs (x ++ s)) ?x''2\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "using fmap_ext"], ["proof (prove)\nusing this:\n  disjnt (fmdom' x) vs\n  \\<forall>x''.\n     x'' \\<in> vs \\<longrightarrow> fmlookup (x ++ s) x'' = fmlookup s x''\n  fmlookup (fmrestrict_set vs s) ?x''2 =\n  fmlookup (fmrestrict_set vs (x ++ s)) ?x''2\n  (\\<And>x. fmlookup ?m x = fmlookup ?n x) \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs s = fmrestrict_set vs (x ++ s)", "by blast"], ["proof (state)\nthis:\n  fmrestrict_set vs s = fmrestrict_set vs (x ++ s)\n\ngoal:\nNo subgoals!", "qed\n\n\\<comment> \\<open>TODO refactor into 'FmapUtils.thy'.\\<close>"], ["", "lemma graph_plan_card_state_set:\n  fixes PROB vs\n  assumes \"finite vs\"\n  shows \"card (fmdom' (fmrestrict_set vs s)) \\<le> card vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "let ?vs' = \"fmdom' (fmrestrict_set vs s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "have \"?vs' \\<subseteq> vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom' (fmrestrict_set vs s) \\<subseteq> vs", "using fmdom'_restrict_set"], ["proof (prove)\nusing this:\n  fmdom' (fmrestrict_set ?A ?m) \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. fmdom' (fmrestrict_set vs s) \\<subseteq> vs", "by metis"], ["proof (state)\nthis:\n  fmdom' (fmrestrict_set vs s) \\<subseteq> vs\n\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "moreover"], ["proof (state)\nthis:\n  fmdom' (fmrestrict_set vs s) \\<subseteq> vs\n\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "have \"card ?vs' \\<le> card vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "using assms calculation card_mono"], ["proof (prove)\nusing this:\n  finite vs\n  fmdom' (fmrestrict_set vs s) \\<subseteq> vs\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card ?B\n\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "by blast"], ["proof (state)\nthis:\n  card (fmdom' (fmrestrict_set vs s)) \\<le> card vs\n\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "ultimately"], ["proof (chain)\npicking this:\n  fmdom' (fmrestrict_set vs s) \\<subseteq> vs\n  card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "show ?thesis"], ["proof (prove)\nusing this:\n  fmdom' (fmrestrict_set vs s) \\<subseteq> vs\n  card (fmdom' (fmrestrict_set vs s)) \\<le> card vs\n\ngoal (1 subgoal):\n 1. card (fmdom' (fmrestrict_set vs s)) \\<le> card vs", "by blast"], ["proof (state)\nthis:\n  card (fmdom' (fmrestrict_set vs s)) \\<le> card vs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exec_drest_5:\n  fixes x vs\n  assumes \"fmdom' x \\<subseteq> vs\"\n  shows \"(fmrestrict_set vs x = x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "proof -\n  \\<comment> \\<open>TODO refactor and make into ISAR proof.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "have \"fmlookup (fmrestrict_set vs x) v = fmlookup x v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs x) v = fmlookup x v", "apply(cases \"v \\<in> fmdom' x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. v \\<in> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs x) v = fmlookup x v\n 2. v \\<notin> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs x) v = fmlookup x v", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs x) v = fmlookup x v", "using assms"], ["proof (prove)\nusing this:\n  fmdom' x \\<subseteq> vs\n\ngoal (1 subgoal):\n 1. v \\<in> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs x) v = fmlookup x v", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs x) v = fmlookup x v", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> fmdom' x \\<Longrightarrow>\n    fmlookup (fmrestrict_set vs x) v = fmlookup x v", "by (simp add: fmdom'_notD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs x) v = fmlookup x v\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "then"], ["proof (chain)\npicking this:\n  fmlookup (fmrestrict_set vs x) v = fmlookup x v", "have \"fmlookup (fmrestrict_set vs x) v = fmlookup x v\""], ["proof (prove)\nusing this:\n  fmlookup (fmrestrict_set vs x) v = fmlookup x v\n\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs x) v = fmlookup x v", "by fast"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs x) v = fmlookup x v\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "}"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup x ?v2\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "moreover"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup x ?v2\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "have \"fmlookup (fmrestrict_set vs x) = fmlookup x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs x) = fmlookup x", "using calculation fmap_ext"], ["proof (prove)\nusing this:\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup x ?v2\n  (\\<And>x. fmlookup ?m x = fmlookup ?n x) \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs x) = fmlookup x", "by auto"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs x) = fmlookup x\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "ultimately"], ["proof (chain)\npicking this:\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup x ?v2\n  fmlookup (fmrestrict_set vs x) = fmlookup x", "show ?thesis"], ["proof (prove)\nusing this:\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup x ?v2\n  fmlookup (fmrestrict_set vs x) = fmlookup x\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "using fmlookup_inject"], ["proof (prove)\nusing this:\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup x ?v2\n  fmlookup (fmrestrict_set vs x) = fmlookup x\n  (fmlookup ?x = fmlookup ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x = x", "by blast"], ["proof (state)\nthis:\n  fmrestrict_set vs x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma graph_plan_lemma_5:\n  fixes s s' vs\n  assumes \"(fmrestrict_set (fmdom' s - vs) s = fmrestrict_set (fmdom' s' - vs) s')\"\n    \"(fmrestrict_set vs s = fmrestrict_set vs s')\"\n  shows \"(s = s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s = s'", "have \"\\<forall>x. fmlookup s x = fmlookup s' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. fmlookup s x = fmlookup s' x", "using assms(1, 2) fmdom'_notD fminusI fmlookup_restrict_set Diff_iff"], ["proof (prove)\nusing this:\n  fmrestrict_set (fmdom' s - vs) s = fmrestrict_set (fmdom' s' - vs) s'\n  fmrestrict_set vs s = fmrestrict_set vs s'\n  ?x \\<notin> fmdom' ?m \\<Longrightarrow> fmlookup ?m ?x = None\n  \\<lbrakk>?c |\\<in>| ?A; ?c |\\<notin>| ?B\\<rbrakk>\n  \\<Longrightarrow> ?c |\\<in>| ?A |-| ?B\n  fmlookup (fmrestrict_set ?A ?m) ?x =\n  (if ?x \\<in> ?A then fmlookup ?m ?x else None)\n  (?c \\<in> ?A - ?B) = (?c \\<in> ?A \\<and> ?c \\<notin> ?B)\n\ngoal (1 subgoal):\n 1. \\<forall>x. fmlookup s x = fmlookup s' x", "by metis"], ["proof (state)\nthis:\n  \\<forall>x. fmlookup s x = fmlookup s' x\n\ngoal (1 subgoal):\n 1. s = s'", "then"], ["proof (chain)\npicking this:\n  \\<forall>x. fmlookup s x = fmlookup s' x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x. fmlookup s x = fmlookup s' x\n\ngoal (1 subgoal):\n 1. s = s'", "using fmap_ext"], ["proof (prove)\nusing this:\n  \\<forall>x. fmlookup s x = fmlookup s' x\n  (\\<And>x. fmlookup ?m x = fmlookup ?n x) \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. s = s'", "by blast"], ["proof (state)\nthis:\n  s = s'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma drest_smap_drest_smap_drest:\n  fixes x s vs\n  shows \"fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<longleftrightarrow> fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "proof -\n  \\<comment> \\<open>TODO this could be refactored into standalone lemma since it's very common in proofs.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "have 1: \"fmlookup (fmrestrict_set vs s) \\<subseteq>\\<^sub>m fmlookup s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs s) \\<subseteq>\\<^sub>m fmlookup s", "by (metis fmdom'.rep_eq fmdom'_notI fmlookup_restrict_set map_le_def)"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs s) \\<subseteq>\\<^sub>m fmlookup s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "moreover"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs s) \\<subseteq>\\<^sub>m fmlookup s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "{"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs s) \\<subseteq>\\<^sub>m fmlookup s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "assume P1: \"fmrestrict_set vs x \\<subseteq>\\<^sub>f s\""], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "moreover"], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "have 2: \"fmlookup (fmrestrict_set vs x) \\<subseteq>\\<^sub>m fmlookup s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs x) \\<subseteq>\\<^sub>m fmlookup s", "using P1 fmsubset.rep_eq"], ["proof (prove)\nusing this:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s\n  (?x \\<subseteq>\\<^sub>f ?xa) =\n  (fmlookup ?x \\<subseteq>\\<^sub>m fmlookup ?xa)\n\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs x) \\<subseteq>\\<^sub>m fmlookup s", "by blast"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs x) \\<subseteq>\\<^sub>m fmlookup s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "{"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs x) \\<subseteq>\\<^sub>m fmlookup s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "assume \"v \\<in> fmdom' (fmrestrict_set vs x)\""], ["proof (state)\nthis:\n  v \\<in> fmdom' (fmrestrict_set vs x)\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "then"], ["proof (chain)\npicking this:\n  v \\<in> fmdom' (fmrestrict_set vs x)", "have \"fmlookup (fmrestrict_set vs x) v = fmlookup (fmrestrict_set vs s) v\""], ["proof (prove)\nusing this:\n  v \\<in> fmdom' (fmrestrict_set vs x)\n\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs x) v = fmlookup (fmrestrict_set vs s) v", "by (metis (full_types) \"2\" domIff fmdom'_notI fmlookup_restrict_set map_le_def)"], ["proof (state)\nthis:\n  fmlookup (fmrestrict_set vs x) v = fmlookup (fmrestrict_set vs s) v\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "}"], ["proof (state)\nthis:\n  ?v2 \\<in> fmdom' (fmrestrict_set vs x) \\<Longrightarrow>\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup (fmrestrict_set vs s) ?v2\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "ultimately"], ["proof (chain)\npicking this:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s\n  ?v2 \\<in> fmdom' (fmrestrict_set vs x) \\<Longrightarrow>\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup (fmrestrict_set vs s) ?v2", "have \"fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\""], ["proof (prove)\nusing this:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s\n  ?v2 \\<in> fmdom' (fmrestrict_set vs x) \\<Longrightarrow>\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup (fmrestrict_set vs s) ?v2\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s", "unfolding fmsubset.rep_eq"], ["proof (prove)\nusing this:\n  fmlookup (fmrestrict_set vs x) \\<subseteq>\\<^sub>m fmlookup s\n  ?v2 \\<in> fmdom' (fmrestrict_set vs x) \\<Longrightarrow>\n  fmlookup (fmrestrict_set vs x) ?v2 = fmlookup (fmrestrict_set vs s) ?v2\n\ngoal (1 subgoal):\n 1. fmlookup (fmrestrict_set vs x) \\<subseteq>\\<^sub>m\n    fmlookup (fmrestrict_set vs s)", "by (simp add: map_le_def)"], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "}"], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<Longrightarrow>\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "moreover"], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<Longrightarrow>\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "{"], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<Longrightarrow>\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "assume P2: \"fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\""], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "moreover"], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "have \"fmrestrict_set vs s \\<subseteq>\\<^sub>f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmrestrict_set vs s \\<subseteq>\\<^sub>f s", "using 1 fmsubset.rep_eq"], ["proof (prove)\nusing this:\n  fmlookup (fmrestrict_set vs s) \\<subseteq>\\<^sub>m fmlookup s\n  (?x \\<subseteq>\\<^sub>f ?xa) =\n  (fmlookup ?x \\<subseteq>\\<^sub>m fmlookup ?xa)\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs s \\<subseteq>\\<^sub>f s", "by blast"], ["proof (state)\nthis:\n  fmrestrict_set vs s \\<subseteq>\\<^sub>f s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "ultimately"], ["proof (chain)\npicking this:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n  fmrestrict_set vs s \\<subseteq>\\<^sub>f s", "have \"fmrestrict_set vs x \\<subseteq>\\<^sub>f s\""], ["proof (prove)\nusing this:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n  fmrestrict_set vs s \\<subseteq>\\<^sub>f s\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x \\<subseteq>\\<^sub>f s", "using fmsubset.rep_eq map_le_trans"], ["proof (prove)\nusing this:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n  fmrestrict_set vs s \\<subseteq>\\<^sub>f s\n  (?x \\<subseteq>\\<^sub>f ?xa) =\n  (fmlookup ?x \\<subseteq>\\<^sub>m fmlookup ?xa)\n  \\<lbrakk>?m1.0 \\<subseteq>\\<^sub>m ?m2.0;\n   ?m2.0 \\<subseteq>\\<^sub>m ?m3.0\\<rbrakk>\n  \\<Longrightarrow> ?m1.0 \\<subseteq>\\<^sub>m ?m3.0\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs x \\<subseteq>\\<^sub>f s", "by blast"], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "}"], ["proof (state)\nthis:\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f\n  fmrestrict_set vs s \\<Longrightarrow>\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "ultimately"], ["proof (chain)\npicking this:\n  fmlookup (fmrestrict_set vs s) \\<subseteq>\\<^sub>m fmlookup s\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<Longrightarrow>\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f\n  fmrestrict_set vs s \\<Longrightarrow>\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s", "show ?thesis"], ["proof (prove)\nusing this:\n  fmlookup (fmrestrict_set vs s) \\<subseteq>\\<^sub>m fmlookup s\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<Longrightarrow>\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f\n  fmrestrict_set vs s \\<Longrightarrow>\n  fmrestrict_set vs x \\<subseteq>\\<^sub>f s\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)", "by blast"], ["proof (state)\nthis:\n  (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n  (fmrestrict_set vs x \\<subseteq>\\<^sub>f fmrestrict_set vs s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sat_precond_as_proj_1:\n  fixes s s' vs x\n  assumes \"fmrestrict_set vs s = fmrestrict_set vs s'\"\n  shows \"fmrestrict_set vs x \\<subseteq>\\<^sub>f s \\<longleftrightarrow> fmrestrict_set vs x \\<subseteq>\\<^sub>f s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f s')", "using assms drest_smap_drest_smap_drest"], ["proof (prove)\nusing this:\n  fmrestrict_set vs s = fmrestrict_set vs s'\n  (fmrestrict_set ?vs ?x \\<subseteq>\\<^sub>f ?s) =\n  (fmrestrict_set ?vs ?x \\<subseteq>\\<^sub>f fmrestrict_set ?vs ?s)\n\ngoal (1 subgoal):\n 1. (fmrestrict_set vs x \\<subseteq>\\<^sub>f s) =\n    (fmrestrict_set vs x \\<subseteq>\\<^sub>f s')", "by metis"], ["", "lemma sat_precond_as_proj_4:\n  fixes fm1 fm2 vs\n  assumes \"fm2 \\<subseteq>\\<^sub>f fm1\"\n  shows \"(fmrestrict_set vs fm2 \\<subseteq>\\<^sub>f fm1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmrestrict_set vs fm2 \\<subseteq>\\<^sub>f fm1", "using assms fmpred_restrict_set fmsubset_alt_def"], ["proof (prove)\nusing this:\n  fm2 \\<subseteq>\\<^sub>f fm1\n  fmpred ?P ?m \\<Longrightarrow> fmpred ?P (fmrestrict_set ?A ?m)\n  (?m \\<subseteq>\\<^sub>f ?n) =\n  fmpred (\\<lambda>k v. fmlookup ?n k = Some v) ?m\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs fm2 \\<subseteq>\\<^sub>f fm1", "by metis"], ["", "lemma sublist_as_proj_eq_as_1:\n  fixes x s vs\n  assumes \"(x \\<subseteq>\\<^sub>f fmrestrict_set vs s)\"\n  shows \"(x \\<subseteq>\\<^sub>f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<subseteq>\\<^sub>f s", "using assms"], ["proof (prove)\nusing this:\n  x \\<subseteq>\\<^sub>f fmrestrict_set vs s\n\ngoal (1 subgoal):\n 1. x \\<subseteq>\\<^sub>f s", "by (meson fmsubset.rep_eq fmsubset_alt_def fmsubset_pred drest_smap_drest_smap_drest map_le_refl)"], ["", "lemma limited_dom_neq_restricted_neq:\n  assumes \"fmdom' f1 \\<subseteq> vs\" \"f1 ++ f2 \\<noteq> f2\"\n  shows \"fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "assume C: \"fmrestrict_set vs (f1 ++ f2) = fmrestrict_set vs f2\""], ["proof (state)\nthis:\n  fmrestrict_set vs (f1 ++ f2) = fmrestrict_set vs f2\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "then"], ["proof (chain)\npicking this:\n  fmrestrict_set vs (f1 ++ f2) = fmrestrict_set vs f2", "have \"\\<forall>x \\<in> fmdom' (fmrestrict_set vs (f1 ++ f2)).\n      fmlookup (fmrestrict_set vs (f1 ++ f2)) x\n      = fmlookup (fmrestrict_set vs f2) x\""], ["proof (prove)\nusing this:\n  fmrestrict_set vs (f1 ++ f2) = fmrestrict_set vs f2\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>fmdom' (fmrestrict_set vs (f1 ++ f2)).\n       fmlookup (fmrestrict_set vs (f1 ++ f2)) x =\n       fmlookup (fmrestrict_set vs f2) x", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<in>fmdom' (fmrestrict_set vs (f1 ++ f2)).\n     fmlookup (fmrestrict_set vs (f1 ++ f2)) x =\n     fmlookup (fmrestrict_set vs f2) x\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "obtain v where a: \"v \\<in> fmdom' f1\" \"fmlookup (f1 ++ f2) v \\<noteq> fmlookup f2 v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> fmdom' f1;\n         fmlookup (f1 ++ f2) v \\<noteq> fmlookup f2 v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  f1 ++ f2 \\<noteq> f2\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> fmdom' f1;\n         fmlookup (f1 ++ f2) v \\<noteq> fmlookup f2 v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis fmap_add_ltr_def fmap_ext fmdom'_notD fmdom_notI fmlookup_add)"], ["proof (state)\nthis:\n  v \\<in> fmdom' f1\n  fmlookup (f1 ++ f2) v \\<noteq> fmlookup f2 v\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "then"], ["proof (chain)\npicking this:\n  v \\<in> fmdom' f1\n  fmlookup (f1 ++ f2) v \\<noteq> fmlookup f2 v", "have b: \"v \\<in> vs\""], ["proof (prove)\nusing this:\n  v \\<in> fmdom' f1\n  fmlookup (f1 ++ f2) v \\<noteq> fmlookup f2 v\n\ngoal (1 subgoal):\n 1. v \\<in> vs", "using assms(1)"], ["proof (prove)\nusing this:\n  v \\<in> fmdom' f1\n  fmlookup (f1 ++ f2) v \\<noteq> fmlookup f2 v\n  fmdom' f1 \\<subseteq> vs\n\ngoal (1 subgoal):\n 1. v \\<in> vs", "by blast"], ["proof (state)\nthis:\n  v \\<in> vs\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "moreover"], ["proof (state)\nthis:\n  v \\<in> vs\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "{"], ["proof (state)\nthis:\n  v \\<in> vs\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "have \"fmdom' (fmrestrict_set vs (f1 ++ f2)) = vs \\<inter> fmdom' (f1 ++ f2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmdom' (fmrestrict_set vs (f1 ++ f2)) = vs \\<inter> fmdom' (f1 ++ f2)", "by (simp add: fmdom'_alt_def fmfilter_alt_defs(4))"], ["proof (state)\nthis:\n  fmdom' (fmrestrict_set vs (f1 ++ f2)) = vs \\<inter> fmdom' (f1 ++ f2)\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "then"], ["proof (chain)\npicking this:\n  fmdom' (fmrestrict_set vs (f1 ++ f2)) = vs \\<inter> fmdom' (f1 ++ f2)", "have \"v \\<in> fmdom' (fmrestrict_set vs (f1 ++ f2))\""], ["proof (prove)\nusing this:\n  fmdom' (fmrestrict_set vs (f1 ++ f2)) = vs \\<inter> fmdom' (f1 ++ f2)\n\ngoal (1 subgoal):\n 1. v \\<in> fmdom' (fmrestrict_set vs (f1 ++ f2))", "using C a b"], ["proof (prove)\nusing this:\n  fmdom' (fmrestrict_set vs (f1 ++ f2)) = vs \\<inter> fmdom' (f1 ++ f2)\n  fmrestrict_set vs (f1 ++ f2) = fmrestrict_set vs f2\n  v \\<in> fmdom' f1\n  fmlookup (f1 ++ f2) v \\<noteq> fmlookup f2 v\n  v \\<in> vs\n\ngoal (1 subgoal):\n 1. v \\<in> fmdom' (fmrestrict_set vs (f1 ++ f2))", "by fastforce"], ["proof (state)\nthis:\n  v \\<in> fmdom' (fmrestrict_set vs (f1 ++ f2))\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "}"], ["proof (state)\nthis:\n  v \\<in> fmdom' (fmrestrict_set vs (f1 ++ f2))\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "then"], ["proof (chain)\npicking this:\n  v \\<in> fmdom' (fmrestrict_set vs (f1 ++ f2))", "have False"], ["proof (prove)\nusing this:\n  v \\<in> fmdom' (fmrestrict_set vs (f1 ++ f2))\n\ngoal (1 subgoal):\n 1. False", "by (metis C a(2) calculation fmlookup_restrict_set)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "}"], ["proof (state)\nthis:\n  fmrestrict_set vs (f1 ++ f2) = fmrestrict_set vs f2 \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "then"], ["proof (chain)\npicking this:\n  fmrestrict_set vs (f1 ++ f2) = fmrestrict_set vs f2 \\<Longrightarrow>\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  fmrestrict_set vs (f1 ++ f2) = fmrestrict_set vs f2 \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2", "by auto"], ["proof (state)\nthis:\n  fmrestrict_set vs (f1 ++ f2) \\<noteq> fmrestrict_set vs f2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fmlookup_fmrestrict_set_dom: \"\\<And>vs s. dom (fmlookup (fmrestrict_set vs s)) = vs \\<inter> (fmdom' s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>vs s. dom (fmlookup (fmrestrict_set vs s)) = vs \\<inter> fmdom' s", "by (auto simp add: fmdom'_restrict_set_precise)"], ["", "end"]]}