{"file_name": "/home/qj213/afp-2021-10-22/thys/Factored_Transition_System_Bounding/SetUtils.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Factored_Transition_System_Bounding", "problem_names": ["lemma card_union': \"(finite s) \\<and> (finite t) \\<and> (disjnt s t) \\<Longrightarrow> (card (s \\<union> t) = card s + card t)\"", "lemma CARD_INJ_IMAGE_2: \n  fixes f s\n  assumes \"finite s\" \"(\\<forall>x y. ((x \\<in> s) \\<and> (y \\<in> s)) \\<longrightarrow> ((f x = f y) \\<longleftrightarrow> (x = y)))\"\n  shows \"(card (f ` s) = card s)\"", "lemma scc_main_lemma_x: \"\\<And>s t x. (x \\<in> s) \\<and> \\<not>(x \\<in> t) \\<Longrightarrow> \\<not>(s = t)\"", "lemma neq_funs_neq_images:\n  fixes s \n  assumes \"\\<forall>x. x \\<in> s \\<longrightarrow> (\\<forall>y. y \\<in> s \\<longrightarrow> f1 x \\<noteq> f2 y)\" \"\\<exists>x. x \\<in> s\" \n  shows \"f1 ` s \\<noteq> f2 ` s\"", "lemma mems_le_finite_i: \n  fixes s :: \"nat set\" and k :: nat\n  shows \"(\\<forall> x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow> finite s\"", "lemma mems_le_finite: \n  fixes s :: \"nat set\" and k :: nat\n  shows \"\\<And>(s :: nat set) k. (\\<forall> x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow> finite s\"", "lemma mem_le_imp_MIN_le: \n  fixes s :: \"nat set\" and k :: nat \n  assumes \"\\<exists>x. (x \\<in> s) \\<and> (x \\<le> k)\" \n  shows \"(Inf s \\<le> k)\"", "lemma mem_lt_imp_MIN_lt: \n  fixes s :: \"nat set\" and k :: nat\n  assumes \"(\\<exists>x. x \\<in> s \\<and> x < k)\"\n  shows \"(Inf s) < k\"", "lemma bound_child_parent_neq_mems_state_set_neq_len: \n  fixes s and k :: nat\n  assumes \"(\\<forall>x. x \\<in> s \\<longrightarrow> x < k)\"\n  shows \"finite s\"", "lemma bound_main_lemma_2: \"\\<And>(s :: nat set) k. (s \\<noteq> {}) \\<and> (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow> Sup s \\<le> k\"", "lemma bound_child_parent_not_eq_last_diff_paths: \"\\<And>s (k :: nat).\n  (s \\<noteq> {}) \n  \\<Longrightarrow> (\\<forall>x. x \\<in> s \\<longrightarrow> x < k) \n  \\<Longrightarrow> Sup s < k\n\"", "lemma FINITE_ALL_DISTINCT_LISTS_i:\n  fixes P\n  assumes \"finite P\"\n  shows \"\n    {p. distinct p \\<and> set p \\<subseteq> P} \n    = {[]} \\<union> (\\<Union> ((\\<lambda>e. {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}) ` P))\"", "lemma FINITE_ALL_DISTINCT_LISTS:\n  fixes P\n  assumes \"finite P\"\n  shows \"finite {p. distinct p \\<and> set p \\<subseteq> P}\"", "lemma subset_inter_diff_empty: \n  assumes \"s \\<subseteq> t\" \n  shows \"(s \\<inter> (u - t) = {})\""], "translations": [["", "lemma card_union': \"(finite s) \\<and> (finite t) \\<and> (disjnt s t) \\<Longrightarrow> (card (s \\<union> t) = card s + card t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s \\<and> finite t \\<and> disjnt s t \\<Longrightarrow>\n    card (s \\<union> t) = card s + card t", "by (simp add: card_Un_disjoint disjnt_def)"], ["", "lemma CARD_INJ_IMAGE_2: \n  fixes f s\n  assumes \"finite s\" \"(\\<forall>x y. ((x \\<in> s) \\<and> (y \\<in> s)) \\<longrightarrow> ((f x = f y) \\<longleftrightarrow> (x = y)))\"\n  shows \"(card (f ` s) = card s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "assume \"x \\<in> s\" \"y \\<in> s\""], ["proof (state)\nthis:\n  x \\<in> s\n  y \\<in> s\n\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "then"], ["proof (chain)\npicking this:\n  x \\<in> s\n  y \\<in> s", "have \"f x = f y \\<longrightarrow> x = y\""], ["proof (prove)\nusing this:\n  x \\<in> s\n  y \\<in> s\n\ngoal (1 subgoal):\n 1. f x = f y \\<longrightarrow> x = y", "using assms(2)"], ["proof (prove)\nusing this:\n  x \\<in> s\n  y \\<in> s\n  \\<forall>x y.\n     x \\<in> s \\<and> y \\<in> s \\<longrightarrow> (f x = f y) = (x = y)\n\ngoal (1 subgoal):\n 1. f x = f y \\<longrightarrow> x = y", "by blast"], ["proof (state)\nthis:\n  f x = f y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x2 \\<in> s; ?y2 \\<in> s\\<rbrakk>\n  \\<Longrightarrow> f ?x2 = f ?y2 \\<longrightarrow> ?x2 = ?y2\n\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x2 \\<in> s; ?y2 \\<in> s\\<rbrakk>\n  \\<Longrightarrow> f ?x2 = f ?y2 \\<longrightarrow> ?x2 = ?y2", "have \"inj_on f s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x2 \\<in> s; ?y2 \\<in> s\\<rbrakk>\n  \\<Longrightarrow> f ?x2 = f ?y2 \\<longrightarrow> ?x2 = ?y2\n\ngoal (1 subgoal):\n 1. inj_on f s", "by (simp add: inj_onI)"], ["proof (state)\nthis:\n  inj_on f s\n\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "then"], ["proof (chain)\npicking this:\n  inj_on f s", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on f s\n\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "using assms(1) inj_on_iff_eq_card"], ["proof (prove)\nusing this:\n  inj_on f s\n  finite s\n  finite ?A \\<Longrightarrow> inj_on ?f ?A = (card (?f ` ?A) = card ?A)\n\ngoal (1 subgoal):\n 1. card (f ` s) = card s", "by blast"], ["proof (state)\nthis:\n  card (f ` s) = card s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma scc_main_lemma_x: \"\\<And>s t x. (x \\<in> s) \\<and> \\<not>(x \\<in> t) \\<Longrightarrow> \\<not>(s = t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t x.\n       x \\<in> s \\<and> x \\<notin> t \\<Longrightarrow> s \\<noteq> t", "by blast"], ["", "lemma neq_funs_neq_images:\n  fixes s \n  assumes \"\\<forall>x. x \\<in> s \\<longrightarrow> (\\<forall>y. y \\<in> s \\<longrightarrow> f1 x \\<noteq> f2 y)\" \"\\<exists>x. x \\<in> s\" \n  shows \"f1 ` s \\<noteq> f2 ` s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f1 ` s \\<noteq> f2 ` s", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     x \\<in> s \\<longrightarrow>\n     (\\<forall>y. y \\<in> s \\<longrightarrow> f1 x \\<noteq> f2 y)\n  \\<exists>x. x \\<in> s\n\ngoal (1 subgoal):\n 1. f1 ` s \\<noteq> f2 ` s", "by blast"], ["", "subsection \"Sets of Numbers\"\n\n\\<comment> \\<open>TODO \n  Is '<=' natural number lte or overloaded? \n  If it's overloaded for reals, this might be wrong (e.g. the real set s = [0; 1] is not finite even \nthough @{term \"\\<forall> x \\<in> s. x \\<le> 1\"} holds).\\<close>"], ["", "lemma mems_le_finite_i: \n  fixes s :: \"nat set\" and k :: nat\n  shows \"(\\<forall> x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow> finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "assume P: \"(\\<forall> x. x \\<in> s \\<longrightarrow> x \\<le> k)\""], ["proof (state)\nthis:\n  \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "let ?f = \"id :: nat \\<Rightarrow> nat\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "let ?S = \"{i. i \\<le> k}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "have \"s \\<subseteq> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<subseteq> {i. i \\<le> k}", "using P"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k\n\ngoal (1 subgoal):\n 1. s \\<subseteq> {i. i \\<le> k}", "by blast"], ["proof (state)\nthis:\n  s \\<subseteq> {i. i \\<le> k}\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "moreover"], ["proof (state)\nthis:\n  s \\<subseteq> {i. i \\<le> k}\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "have \"?f ` ?S = ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id ` {i. i \\<le> k} = {i. i \\<le> k}", "by auto"], ["proof (state)\nthis:\n  id ` {i. i \\<le> k} = {i. i \\<le> k}\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "moreover"], ["proof (state)\nthis:\n  id ` {i. i \\<le> k} = {i. i \\<le> k}\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "have \"finite ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. i \\<le> k}", "using nat_seg_image_imp_finite"], ["proof (prove)\nusing this:\n  ?A = ?f ` {i. i < ?n} \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite {i. i \\<le> k}", "by auto"], ["proof (state)\nthis:\n  finite {i. i \\<le> k}\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "moreover"], ["proof (state)\nthis:\n  finite {i. i \\<le> k}\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "have \"finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s", "using calculation finite_subset"], ["proof (prove)\nusing this:\n  s \\<subseteq> {i. i \\<le> k}\n  id ` {i. i \\<le> k} = {i. i \\<le> k}\n  finite {i. i \\<le> k}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite s", "by auto"], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n    finite s", "ultimately"], ["proof (chain)\npicking this:\n  s \\<subseteq> {i. i \\<le> k}\n  id ` {i. i \\<le> k} = {i. i \\<le> k}\n  finite {i. i \\<le> k}\n  finite s", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<subseteq> {i. i \\<le> k}\n  id ` {i. i \\<le> k} = {i. i \\<le> k}\n  finite {i. i \\<le> k}\n  finite s\n\ngoal (1 subgoal):\n 1. finite s", "by auto"], ["proof (state)\nthis:\n  finite s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mems_le_finite: \n  fixes s :: \"nat set\" and k :: nat\n  shows \"\\<And>(s :: nat set) k. (\\<forall> x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow> finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s k.\n       \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n       finite s", "using mems_le_finite_i"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> ?s \\<longrightarrow> x \\<le> ?k \\<Longrightarrow>\n  finite ?s\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k \\<Longrightarrow>\n       finite s", "by auto\n\n\\<comment> \\<open>NOTE translated `s` to `nat set` (more generality wasn't required.).\\<close>"], ["", "lemma mem_le_imp_MIN_le: \n  fixes s :: \"nat set\" and k :: nat \n  assumes \"\\<exists>x. (x \\<in> s) \\<and> (x \\<le> k)\" \n  shows \"(Inf s \\<le> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> s \\<and> x \\<le> k", "obtain x where 1: \"x \\<in> s\" \"x \\<le> k\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> s \\<and> x \\<le> k\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> s; x \\<le> k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> s\n  x \\<le> k\n\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "{"], ["proof (state)\nthis:\n  x \\<in> s\n  x \\<le> k\n\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "assume C: \"Inf s > k\""], ["proof (state)\nthis:\n  k < Inf s\n\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "then"], ["proof (chain)\npicking this:\n  k < Inf s", "have \"Inf s > x\""], ["proof (prove)\nusing this:\n  k < Inf s\n\ngoal (1 subgoal):\n 1. x < Inf s", "using 1(2)"], ["proof (prove)\nusing this:\n  k < Inf s\n  x \\<le> k\n\ngoal (1 subgoal):\n 1. x < Inf s", "by fastforce"], ["proof (state)\nthis:\n  x < Inf s\n\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "then"], ["proof (chain)\npicking this:\n  x < Inf s", "have False"], ["proof (prove)\nusing this:\n  x < Inf s\n\ngoal (1 subgoal):\n 1. False", "using 1(1) cInf_lower leD"], ["proof (prove)\nusing this:\n  x < Inf s\n  x \\<in> s\n  \\<lbrakk>?x \\<in> ?X; bdd_below ?X\\<rbrakk>\n  \\<Longrightarrow> Inf ?X \\<le> ?x\n  ?y \\<le> ?x \\<Longrightarrow> \\<not> ?x < ?y\n\ngoal (1 subgoal):\n 1. False", "by fast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "}"], ["proof (state)\nthis:\n  k < Inf s \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "then"], ["proof (chain)\npicking this:\n  k < Inf s \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  k < Inf s \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. Inf s \\<le> k", "by fastforce"], ["proof (state)\nthis:\n  Inf s \\<le> k\n\ngoal:\nNo subgoals!", "qed\n\n\\<comment> \\<open>NOTE \n  nat --> bool is the type of a HOL4 set and was translated to 'nat set'.\\<close>\n\\<comment> \\<open>NOTE \n  We cannot use 'Min' instead of 'Inf' because there is no indication that '{n. s n}' will be\nfinite. Without that @{term \"Min {n. s n} \\<in> {n. s n}\"} is not necessarily true.\\<close>"], ["", "lemma mem_lt_imp_MIN_lt: \n  fixes s :: \"nat set\" and k :: nat\n  assumes \"(\\<exists>x. x \\<in> s \\<and> x < k)\"\n  shows \"(Inf s) < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf s < k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf s < k", "obtain x where 1: \"x \\<in> s\" \"x < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> s; x < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> s \\<and> x < k\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> s; x < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> s\n  x < k\n\ngoal (1 subgoal):\n 1. Inf s < k", "then"], ["proof (chain)\npicking this:\n  x \\<in> s\n  x < k", "have 2: \"s \\<noteq> {}\""], ["proof (prove)\nusing this:\n  x \\<in> s\n  x < k\n\ngoal (1 subgoal):\n 1. s \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Inf s < k", "then"], ["proof (chain)\npicking this:\n  s \\<noteq> {}", "have \"Inf s \\<in> s\""], ["proof (prove)\nusing this:\n  s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Inf s \\<in> s", "using Inf_nat_def LeastI"], ["proof (prove)\nusing this:\n  s \\<noteq> {}\n  Inf ?X = (LEAST n. n \\<in> ?X)\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n\ngoal (1 subgoal):\n 1. Inf s \\<in> s", "by force"], ["proof (state)\nthis:\n  Inf s \\<in> s\n\ngoal (1 subgoal):\n 1. Inf s < k", "moreover"], ["proof (state)\nthis:\n  Inf s \\<in> s\n\ngoal (1 subgoal):\n 1. Inf s < k", "have \"\\<forall>x\\<in>s. Inf s \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>s. Inf s \\<le> x", "by (simp add: cInf_lower)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>s. Inf s \\<le> x\n\ngoal (1 subgoal):\n 1. Inf s < k", "ultimately"], ["proof (chain)\npicking this:\n  Inf s \\<in> s\n  \\<forall>x\\<in>s. Inf s \\<le> x", "show \"(Inf s) < k\""], ["proof (prove)\nusing this:\n  Inf s \\<in> s\n  \\<forall>x\\<in>s. Inf s \\<le> x\n\ngoal (1 subgoal):\n 1. Inf s < k", "using assms leD"], ["proof (prove)\nusing this:\n  Inf s \\<in> s\n  \\<forall>x\\<in>s. Inf s \\<le> x\n  \\<exists>x. x \\<in> s \\<and> x < k\n  ?y \\<le> ?x \\<Longrightarrow> \\<not> ?x < ?y\n\ngoal (1 subgoal):\n 1. Inf s < k", "by force"], ["proof (state)\nthis:\n  Inf s < k\n\ngoal:\nNo subgoals!", "qed\n\n\\<comment> \\<open>NOTE type for 'k' had to be fixed (type unordered error; also not true for e.g. real sets).\\<close>"], ["", "lemma bound_child_parent_neq_mems_state_set_neq_len: \n  fixes s and k :: nat\n  assumes \"(\\<forall>x. x \\<in> s \\<longrightarrow> x < k)\"\n  shows \"finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s", "using assms bounded_nat_set_is_finite"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> s \\<longrightarrow> x < k\n  \\<forall>i\\<in>?N. i < ?n \\<Longrightarrow> finite ?N\n\ngoal (1 subgoal):\n 1. finite s", "by blast"], ["", "lemma bound_main_lemma_2: \"\\<And>(s :: nat set) k. (s \\<noteq> {}) \\<and> (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow> Sup s \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "fix s :: \"nat set\" and k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "assume P1: \"s \\<noteq> {}\""], ["proof (state)\nthis:\n  s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "assume P2: \"(\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k)\""], ["proof (state)\nthis:\n  \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "have \"finite s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s", "using P2 mems_le_finite"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k\n  \\<forall>x. x \\<in> ?s \\<longrightarrow> x \\<le> ?k \\<Longrightarrow>\n  finite ?s\n\ngoal (1 subgoal):\n 1. finite s", "by auto"], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "moreover"], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "have \"Max s \\<in> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max s \\<in> s", "using P1 calculation Max_in"], ["proof (prove)\nusing this:\n  s \\<noteq> {}\n  finite s\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. Max s \\<in> s", "by auto"], ["proof (state)\nthis:\n  Max s \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "moreover"], ["proof (state)\nthis:\n  Max s \\<in> s\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "have \"Max s \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max s \\<le> k", "using P2 calculation"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k\n  finite s\n  Max s \\<in> s\n\ngoal (1 subgoal):\n 1. Max s \\<le> k", "by auto"], ["proof (state)\nthis:\n  Max s \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "}"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<noteq> {};\n   \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k\\<rbrakk>\n  \\<Longrightarrow> Max s \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>s k.\n       s \\<noteq> {} \\<and>\n       (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n       Sup s \\<le> k", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>s \\<noteq> {};\n   \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k\\<rbrakk>\n  \\<Longrightarrow> Max s \\<le> k", "show \"(s \\<noteq> {}) \\<and> (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow> Sup s \\<le> k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<noteq> {};\n   \\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k\\<rbrakk>\n  \\<Longrightarrow> Max s \\<le> k\n\ngoal (1 subgoal):\n 1. s \\<noteq> {} \\<and>\n    (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n    Sup s \\<le> k", "by (simp add: Sup_nat_def)"], ["proof (state)\nthis:\n  s \\<noteq> {} \\<and>\n  (\\<forall>x. x \\<in> s \\<longrightarrow> x \\<le> k) \\<Longrightarrow>\n  Sup s \\<le> k\n\ngoal:\nNo subgoals!", "qed\n\n\\<comment> \\<open>NOTE type of 'k' fixed to nat to be able to use 'bound\\_child\\_parent\\_neq\\_mems\\_state\\_set\\_neq\\_len'.\\<close>"], ["", "lemma bound_child_parent_not_eq_last_diff_paths: \"\\<And>s (k :: nat).\n  (s \\<noteq> {}) \n  \\<Longrightarrow> (\\<forall>x. x \\<in> s \\<longrightarrow> x < k) \n  \\<Longrightarrow> Sup s < k\n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s k.\n       \\<lbrakk>s \\<noteq> {};\n        \\<forall>x. x \\<in> s \\<longrightarrow> x < k\\<rbrakk>\n       \\<Longrightarrow> Sup s < k", "by (simp add: Sup_nat_def bound_child_parent_neq_mems_state_set_neq_len)"], ["", "lemma FINITE_ALL_DISTINCT_LISTS_i:\n  fixes P\n  assumes \"finite P\"\n  shows \"\n    {p. distinct p \\<and> set p \\<subseteq> P} \n    = {[]} \\<union> (\\<Union> ((\\<lambda>e. {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}) ` P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "let ?A=\"{p. distinct p \\<and> set p \\<subseteq> P }\""], ["proof (state)\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "let ?B=\"{[]} \\<union> (\\<Union> ((\\<lambda>e. {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}) ` P))\""], ["proof (state)\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "assume P: \"a \\<in> ?A\""], ["proof (state)\nthis:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "have \"a \\<in> ?B\""], ["proof (prove)\nusing this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. a \\<in> {[]} \\<union>\n            (\\<Union>e\\<in>P.\n                {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "proof (cases a)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "text \\<open> The empty list is distinct and its corresponding set is the empty set which is a \n            trivial subset of `?B`. The `Nil` case can therefore be derived by automation. \\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "case (Cons h list)"], ["proof (state)\nthis:\n  a = h # list\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "{"], ["proof (state)\nthis:\n  a = h # list\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "let ?b'=\"h\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "from P"], ["proof (chain)\npicking this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "have \"set a \\<subseteq> P\""], ["proof (prove)\nusing this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. set a \\<subseteq> P", "by simp"], ["proof (state)\nthis:\n  set a \\<subseteq> P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  set a \\<subseteq> P", "have \"set list \\<subseteq> (P - {h})\""], ["proof (prove)\nusing this:\n  set a \\<subseteq> P\n\ngoal (1 subgoal):\n 1. set list \\<subseteq> P - {h}", "using P dual_order.trans local.Cons"], ["proof (prove)\nusing this:\n  set a \\<subseteq> P\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<lbrakk>?b \\<le> ?a; ?c \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?c \\<le> ?a\n  a = h # list\n\ngoal (1 subgoal):\n 1. set list \\<subseteq> P - {h}", "by auto"], ["proof (state)\nthis:\n  set list \\<subseteq> P - {h}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "}"], ["proof (state)\nthis:\n  set list \\<subseteq> P - {h}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "moreover"], ["proof (state)\nthis:\n  set list \\<subseteq> P - {h}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "from P Cons"], ["proof (chain)\npicking this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n  a = h # list", "have \"distinct list\""], ["proof (prove)\nusing this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n  a = h # list\n\ngoal (1 subgoal):\n 1. distinct list", "by force"], ["proof (state)\nthis:\n  distinct list\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "ultimately"], ["proof (chain)\npicking this:\n  set list \\<subseteq> P - {h}\n  distinct list", "have \"a \\<in> ((\\<lambda>e. {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}) ?b')\""], ["proof (prove)\nusing this:\n  set list \\<subseteq> P - {h}\n  distinct list\n\ngoal (1 subgoal):\n 1. a \\<in> {h # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {h}}", "using Cons"], ["proof (prove)\nusing this:\n  set list \\<subseteq> P - {h}\n  distinct list\n  a = h # list\n\ngoal (1 subgoal):\n 1. a \\<in> {h # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {h}}", "by blast"], ["proof (state)\nthis:\n  a \\<in> {h # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {h}}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "moreover"], ["proof (state)\nthis:\n  a \\<in> {h # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {h}}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "{"], ["proof (state)\nthis:\n  a \\<in> {h # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {h}}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "from P Cons"], ["proof (chain)\npicking this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n  a = h # list", "have \"?b' \\<in> set a\""], ["proof (prove)\nusing this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n  a = h # list\n\ngoal (1 subgoal):\n 1. h \\<in> set a", "by simp"], ["proof (state)\nthis:\n  h \\<in> set a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "moreover"], ["proof (state)\nthis:\n  h \\<in> set a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "from P"], ["proof (chain)\npicking this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "have \"set a \\<subseteq> P\""], ["proof (prove)\nusing this:\n  a \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. set a \\<subseteq> P", "by simp"], ["proof (state)\nthis:\n  set a \\<subseteq> P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "ultimately"], ["proof (chain)\npicking this:\n  h \\<in> set a\n  set a \\<subseteq> P", "have \"?b' \\<in> P\""], ["proof (prove)\nusing this:\n  h \\<in> set a\n  set a \\<subseteq> P\n\ngoal (1 subgoal):\n 1. h \\<in> P", "by auto"], ["proof (state)\nthis:\n  h \\<in> P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "}"], ["proof (state)\nthis:\n  h \\<in> P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "ultimately"], ["proof (chain)\npicking this:\n  a \\<in> {h # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {h}}\n  h \\<in> P", "have \n            \"\\<exists>b' \\<in> P. a \\<in> ((\\<lambda>e. {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}) b')\""], ["proof (prove)\nusing this:\n  a \\<in> {h # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {h}}\n  h \\<in> P\n\ngoal (1 subgoal):\n 1. \\<exists>b'\\<in>P.\n       a \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}", "by meson"], ["proof (state)\nthis:\n  \\<exists>b'\\<in>P.\n     a \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "}"], ["proof (state)\nthis:\n  \\<exists>b'\\<in>P.\n     a \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  \\<exists>b'\\<in>P.\n     a \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}", "obtain b' where\n          \"b' \\<in> P\" \"a \\<in> ((\\<lambda>e. {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}) b')\""], ["proof (prove)\nusing this:\n  \\<exists>b'\\<in>P.\n     a \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> P;\n         a \\<in> {b' # p0 |p0.\n                  distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b' \\<in> P\n  a \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})\n 2. \\<And>aa list.\n       \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n        a = aa # list\\<rbrakk>\n       \\<Longrightarrow> a \\<in> {[]} \\<union>\n                                 (\\<Union>e\\<in>P.\n                                     {e # p0 |p0.\ndistinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  b' \\<in> P\n  a \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}", "show ?thesis"], ["proof (prove)\nusing this:\n  b' \\<in> P\n  a \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\n\ngoal (1 subgoal):\n 1. a \\<in> {[]} \\<union>\n            (\\<Union>e\\<in>P.\n                {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "by blast"], ["proof (state)\nthis:\n  a \\<in> {[]} \\<union>\n          (\\<Union>e\\<in>P.\n              {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> {p. distinct p \\<and> set p \\<subseteq> P};\n     a = []\\<rbrakk>\n    \\<Longrightarrow> a \\<in> {[]} \\<union>\n                              (\\<Union>e\\<in>P.\n                                  {e # p0 |p0.\n                                   distinct p0 \\<and>\n                                   set p0 \\<subseteq> P - {e}})", "qed blast"], ["proof (state)\nthis:\n  a \\<in> {[]} \\<union>\n          (\\<Union>e\\<in>P.\n              {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "}"], ["proof (state)\nthis:\n  ?a2 \\<in> {p. distinct p \\<and> set p \\<subseteq> P} \\<Longrightarrow>\n  ?a2\n  \\<in> {[]} \\<union>\n        (\\<Union>e\\<in>P.\n            {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  ?a2 \\<in> {p. distinct p \\<and> set p \\<subseteq> P} \\<Longrightarrow>\n  ?a2\n  \\<in> {[]} \\<union>\n        (\\<Union>e\\<in>P.\n            {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "have \"?A \\<subseteq> ?B\""], ["proof (prove)\nusing this:\n  ?a2 \\<in> {p. distinct p \\<and> set p \\<subseteq> P} \\<Longrightarrow>\n  ?a2\n  \\<in> {[]} \\<union>\n        (\\<Union>e\\<in>P.\n            {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P}\n    \\<subseteq> {[]} \\<union>\n                (\\<Union>e\\<in>P.\n                    {e # p0 |p0.\n                     distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "by auto"], ["proof (state)\nthis:\n  {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<subseteq> {[]} \\<union>\n              (\\<Union>e\\<in>P.\n                  {e # p0 |p0.\n                   distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "}"], ["proof (state)\nthis:\n  {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<subseteq> {[]} \\<union>\n              (\\<Union>e\\<in>P.\n                  {e # p0 |p0.\n                   distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "moreover"], ["proof (state)\nthis:\n  {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<subseteq> {[]} \\<union>\n              (\\<Union>e\\<in>P.\n                  {e # p0 |p0.\n                   distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "{"], ["proof (state)\nthis:\n  {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<subseteq> {[]} \\<union>\n              (\\<Union>e\\<in>P.\n                  {e # p0 |p0.\n                   distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "{"], ["proof (state)\nthis:\n  {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<subseteq> {[]} \\<union>\n              (\\<Union>e\\<in>P.\n                  {e # p0 |p0.\n                   distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "assume P: \"b \\<in> ?B\""], ["proof (state)\nthis:\n  b \\<in> {[]} \\<union>\n          (\\<Union>e\\<in>P.\n              {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "have \"b \\<in> ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "text \\<open> The empty list is in `?B` by construction. The `Nil` case can therefore be derived  \n          straightforwardly.\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "proof (cases b)"], ["proof (state)\ngoal (2 subgoals):\n 1. b = [] \\<Longrightarrow>\n    b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>a list.\n       b = a # list \\<Longrightarrow>\n       b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "case (Cons a list)"], ["proof (state)\nthis:\n  b = a # list\n\ngoal (2 subgoals):\n 1. b = [] \\<Longrightarrow>\n    b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>a list.\n       b = a # list \\<Longrightarrow>\n       b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "from P Cons"], ["proof (chain)\npicking this:\n  b \\<in> {[]} \\<union>\n          (\\<Union>e\\<in>P.\n              {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  b = a # list", "obtain b' where a: \n          \"b' \\<in> P\" \"b \\<in> {b' # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {b'})}\""], ["proof (prove)\nusing this:\n  b \\<in> {[]} \\<union>\n          (\\<Union>e\\<in>P.\n              {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  b = a # list\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in> P;\n         b \\<in> {b' # p0 |p0.\n                  distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  b' \\<in> P\n  b \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\n\ngoal (2 subgoals):\n 1. b = [] \\<Longrightarrow>\n    b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>a list.\n       b = a # list \\<Longrightarrow>\n       b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "then"], ["proof (chain)\npicking this:\n  b' \\<in> P\n  b \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}", "obtain p0 where b: \"b = b' # p0\" \"distinct p0\" \"set p0 \\<subseteq> (P - {b'})\""], ["proof (prove)\nusing this:\n  b' \\<in> P\n  b \\<in> {b' # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {b'}}\n\ngoal (1 subgoal):\n 1. (\\<And>p0.\n        \\<lbrakk>b = b' # p0; distinct p0;\n         set p0 \\<subseteq> P - {b'}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b = b' # p0\n  distinct p0\n  set p0 \\<subseteq> P - {b'}\n\ngoal (2 subgoals):\n 1. b = [] \\<Longrightarrow>\n    b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>a list.\n       b = a # list \\<Longrightarrow>\n       b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "then"], ["proof (chain)\npicking this:\n  b = b' # p0\n  distinct p0\n  set p0 \\<subseteq> P - {b'}", "have \"distinct (b' # p0)\""], ["proof (prove)\nusing this:\n  b = b' # p0\n  distinct p0\n  set p0 \\<subseteq> P - {b'}\n\ngoal (1 subgoal):\n 1. distinct (b' # p0)", "by (simp add: subset_Diff_insert)"], ["proof (state)\nthis:\n  distinct (b' # p0)\n\ngoal (2 subgoals):\n 1. b = [] \\<Longrightarrow>\n    b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>a list.\n       b = a # list \\<Longrightarrow>\n       b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "moreover"], ["proof (state)\nthis:\n  distinct (b' # p0)\n\ngoal (2 subgoals):\n 1. b = [] \\<Longrightarrow>\n    b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>a list.\n       b = a # list \\<Longrightarrow>\n       b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "have \"set (b' # p0) \\<subseteq> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (b' # p0) \\<subseteq> P", "using a(1) b(3)"], ["proof (prove)\nusing this:\n  b' \\<in> P\n  set p0 \\<subseteq> P - {b'}\n\ngoal (1 subgoal):\n 1. set (b' # p0) \\<subseteq> P", "by auto"], ["proof (state)\nthis:\n  set (b' # p0) \\<subseteq> P\n\ngoal (2 subgoals):\n 1. b = [] \\<Longrightarrow>\n    b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>a list.\n       b = a # list \\<Longrightarrow>\n       b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "ultimately"], ["proof (chain)\npicking this:\n  distinct (b' # p0)\n  set (b' # p0) \\<subseteq> P", "show ?thesis"], ["proof (prove)\nusing this:\n  distinct (b' # p0)\n  set (b' # p0) \\<subseteq> P\n\ngoal (1 subgoal):\n 1. b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "using b(1)"], ["proof (prove)\nusing this:\n  distinct (b' # p0)\n  set (b' # p0) \\<subseteq> P\n  b = b' # p0\n\ngoal (1 subgoal):\n 1. b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "by fast"], ["proof (state)\nthis:\n  b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. b = [] \\<Longrightarrow>\n    b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "qed simp"], ["proof (state)\nthis:\n  b \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "}"], ["proof (state)\nthis:\n  ?b2\n  \\<in> {[]} \\<union>\n        (\\<Union>e\\<in>P.\n            {e # p0 |p0.\n             distinct p0 \\<and>\n             set p0 \\<subseteq> P - {e}}) \\<Longrightarrow>\n  ?b2 \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  ?b2\n  \\<in> {[]} \\<union>\n        (\\<Union>e\\<in>P.\n            {e # p0 |p0.\n             distinct p0 \\<and>\n             set p0 \\<subseteq> P - {e}}) \\<Longrightarrow>\n  ?b2 \\<in> {p. distinct p \\<and> set p \\<subseteq> P}", "have \"?B \\<subseteq> ?A\""], ["proof (prove)\nusing this:\n  ?b2\n  \\<in> {[]} \\<union>\n        (\\<Union>e\\<in>P.\n            {e # p0 |p0.\n             distinct p0 \\<and>\n             set p0 \\<subseteq> P - {e}}) \\<Longrightarrow>\n  ?b2 \\<in> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n    \\<subseteq> {p. distinct p \\<and> set p \\<subseteq> P}", "by blast"], ["proof (state)\nthis:\n  {[]} \\<union>\n  (\\<Union>e\\<in>P.\n      {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  \\<subseteq> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "}"], ["proof (state)\nthis:\n  {[]} \\<union>\n  (\\<Union>e\\<in>P.\n      {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  \\<subseteq> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "ultimately"], ["proof (chain)\npicking this:\n  {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<subseteq> {[]} \\<union>\n              (\\<Union>e\\<in>P.\n                  {e # p0 |p0.\n                   distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  {[]} \\<union>\n  (\\<Union>e\\<in>P.\n      {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  \\<subseteq> {p. distinct p \\<and> set p \\<subseteq> P}", "show ?thesis"], ["proof (prove)\nusing this:\n  {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<subseteq> {[]} \\<union>\n              (\\<Union>e\\<in>P.\n                  {e # p0 |p0.\n                   distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  {[]} \\<union>\n  (\\<Union>e\\<in>P.\n      {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  \\<subseteq> {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "using set_eq_subset"], ["proof (prove)\nusing this:\n  {p. distinct p \\<and> set p \\<subseteq> P}\n  \\<subseteq> {[]} \\<union>\n              (\\<Union>e\\<in>P.\n                  {e # p0 |p0.\n                   distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  {[]} \\<union>\n  (\\<Union>e\\<in>P.\n      {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  \\<subseteq> {p. distinct p \\<and> set p \\<subseteq> P}\n  (?A = ?B) = (?A \\<subseteq> ?B \\<and> ?B \\<subseteq> ?A)\n\ngoal (1 subgoal):\n 1. {p. distinct p \\<and> set p \\<subseteq> P} =\n    {[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "by blast"], ["proof (state)\nthis:\n  {p. distinct p \\<and> set p \\<subseteq> P} =\n  {[]} \\<union>\n  (\\<Union>e\\<in>P.\n      {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FINITE_ALL_DISTINCT_LISTS:\n  fixes P\n  assumes \"finite P\"\n  shows \"finite {p. distinct p \\<and> set p \\<subseteq> P}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {p. distinct p \\<and> set p \\<subseteq> P}", "using assms"], ["proof (prove)\nusing this:\n  finite P\n\ngoal (1 subgoal):\n 1. finite {p. distinct p \\<and> set p \\<subseteq> P}", "proof (induction \"card P\" arbitrary: P)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>0 = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "case 0"], ["proof (state)\nthis:\n  0 = card P\n  finite P\n\ngoal (2 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>0 = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "then"], ["proof (chain)\npicking this:\n  0 = card P\n  finite P", "have \"P = {}\""], ["proof (prove)\nusing this:\n  0 = card P\n  finite P\n\ngoal (1 subgoal):\n 1. P = {}", "by force"], ["proof (state)\nthis:\n  P = {}\n\ngoal (2 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>0 = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}\n 2. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "then"], ["proof (chain)\npicking this:\n  P = {}", "show ?case"], ["proof (prove)\nusing this:\n  P = {}\n\ngoal (1 subgoal):\n 1. finite {p. distinct p \\<and> set p \\<subseteq> P}", "using 0"], ["proof (prove)\nusing this:\n  P = {}\n  0 = card P\n  finite P\n\ngoal (1 subgoal):\n 1. finite {p. distinct p \\<and> set p \\<subseteq> P}", "by simp"], ["proof (state)\nthis:\n  finite {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "case (Suc x)"], ["proof (state)\nthis:\n  \\<lbrakk>x = card ?P; finite ?P\\<rbrakk>\n  \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> ?P}\n  Suc x = card P\n  finite P\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "{"], ["proof (state)\nthis:\n  \\<lbrakk>x = card ?P; finite ?P\\<rbrakk>\n  \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> ?P}\n  Suc x = card P\n  finite P\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "text \\<open> Proof the finiteness of the union by proving both sets of the union are finite. The \n      singleton set `{[]}` is trivially finite. \\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>x = card ?P; finite ?P\\<rbrakk>\n  \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> ?P}\n  Suc x = card P\n  finite P\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "{"], ["proof (state)\nthis:\n  \\<lbrakk>x = card ?P; finite ?P\\<rbrakk>\n  \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> ?P}\n  Suc x = card P\n  finite P\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "{"], ["proof (state)\nthis:\n  \\<lbrakk>x = card ?P; finite ?P\\<rbrakk>\n  \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> ?P}\n  Suc x = card P\n  finite P\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "fix e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "assume P: \"e \\<in> P\""], ["proof (state)\nthis:\n  e \\<in> P\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "have \"\n          {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}} \n          = (\\<lambda>p. e # p) ` { p. distinct p \\<and> set p \\<subseteq> P - {e}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}} =\n    (#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}}", "by blast"], ["proof (state)\nthis:\n  {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}} =\n  (#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}}\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "moreover"], ["proof (state)\nthis:\n  {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}} =\n  (#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}}\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "{"], ["proof (state)\nthis:\n  {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}} =\n  (#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}}\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "let ?P'=\"P - {e}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "from Suc.prems"], ["proof (chain)\npicking this:\n  finite P", "have \"finite ?P'\""], ["proof (prove)\nusing this:\n  finite P\n\ngoal (1 subgoal):\n 1. finite (P - {e})", "by blast"], ["proof (state)\nthis:\n  finite (P - {e})\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "text \\<open> The finiteness can now be shown using the induction hypothesis. However `e` might\n            already be contained in `?P`, so we have to split cases first. \\<close>"], ["proof (state)\nthis:\n  finite (P - {e})\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "have \"finite ((\\<lambda>p. e # p) ` {p. distinct p \\<and> set p \\<subseteq> ?P'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "proof (cases \"e \\<in> P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. e \\<in> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n 2. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "case True"], ["proof (state)\nthis:\n  e \\<in> P\n\ngoal (2 subgoals):\n 1. e \\<in> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n 2. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  e \\<in> P", "have \"x = card ?P'\""], ["proof (prove)\nusing this:\n  e \\<in> P\n\ngoal (1 subgoal):\n 1. x = card (P - {e})", "using Suc.prems Suc(2)"], ["proof (prove)\nusing this:\n  e \\<in> P\n  finite P\n  Suc x = card P\n\ngoal (1 subgoal):\n 1. x = card (P - {e})", "by fastforce"], ["proof (state)\nthis:\n  x = card (P - {e})\n\ngoal (2 subgoals):\n 1. e \\<in> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n 2. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "moreover"], ["proof (state)\nthis:\n  x = card (P - {e})\n\ngoal (2 subgoals):\n 1. e \\<in> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n 2. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "from Suc.prems"], ["proof (chain)\npicking this:\n  finite P", "have \"finite ?P'\""], ["proof (prove)\nusing this:\n  finite P\n\ngoal (1 subgoal):\n 1. finite (P - {e})", "by blast"], ["proof (state)\nthis:\n  finite (P - {e})\n\ngoal (2 subgoals):\n 1. e \\<in> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n 2. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "ultimately"], ["proof (chain)\npicking this:\n  x = card (P - {e})\n  finite (P - {e})", "show ?thesis"], ["proof (prove)\nusing this:\n  x = card (P - {e})\n  finite (P - {e})\n\ngoal (1 subgoal):\n 1. finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "using Suc(1)"], ["proof (prove)\nusing this:\n  x = card (P - {e})\n  finite (P - {e})\n  \\<lbrakk>x = card ?P; finite ?P\\<rbrakk>\n  \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> ?P}\n\ngoal (1 subgoal):\n 1. finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "by blast"], ["proof (state)\nthis:\n  finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "case False"], ["proof (state)\nthis:\n  e \\<notin> P\n\ngoal (1 subgoal):\n 1. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  e \\<notin> P", "have \"?P' = P\""], ["proof (prove)\nusing this:\n  e \\<notin> P\n\ngoal (1 subgoal):\n 1. P - {e} = P", "by simp"], ["proof (state)\nthis:\n  P - {e} = P\n\ngoal (1 subgoal):\n 1. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  P - {e} = P", "have \"finite {p. distinct p \\<and> set p \\<subseteq> ?P'}\""], ["proof (prove)\nusing this:\n  P - {e} = P\n\ngoal (1 subgoal):\n 1. finite {p. distinct p \\<and> set p \\<subseteq> P - {e}}", "using False P"], ["proof (prove)\nusing this:\n  P - {e} = P\n  e \\<notin> P\n  e \\<in> P\n\ngoal (1 subgoal):\n 1. finite {p. distinct p \\<and> set p \\<subseteq> P - {e}}", "by linarith"], ["proof (state)\nthis:\n  finite {p. distinct p \\<and> set p \\<subseteq> P - {e}}\n\ngoal (1 subgoal):\n 1. e \\<notin> P \\<Longrightarrow>\n    finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "then"], ["proof (chain)\npicking this:\n  finite {p. distinct p \\<and> set p \\<subseteq> P - {e}}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {p. distinct p \\<and> set p \\<subseteq> P - {e}}\n\ngoal (1 subgoal):\n 1. finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "using finite_imageI"], ["proof (prove)\nusing this:\n  finite {p. distinct p \\<and> set p \\<subseteq> P - {e}}\n  finite ?F \\<Longrightarrow> finite (?h ` ?F)\n\ngoal (1 subgoal):\n 1. finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "by blast"], ["proof (state)\nthis:\n  finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "}"], ["proof (state)\nthis:\n  finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "ultimately"], ["proof (chain)\npicking this:\n  {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}} =\n  (#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}}\n  finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})", "have \"finite {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}\""], ["proof (prove)\nusing this:\n  {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}} =\n  (#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}}\n  finite ((#) e ` {p. distinct p \\<and> set p \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. finite {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}", "by argo"], ["proof (state)\nthis:\n  finite {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "}"], ["proof (state)\nthis:\n  ?e2 \\<in> P \\<Longrightarrow>\n  finite {?e2 # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {?e2}}\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "then"], ["proof (chain)\npicking this:\n  ?e2 \\<in> P \\<Longrightarrow>\n  finite {?e2 # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {?e2}}", "have \"finite (\\<Union> ((\\<lambda>e. {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}) ` P))\""], ["proof (prove)\nusing this:\n  ?e2 \\<in> P \\<Longrightarrow>\n  finite {?e2 # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {?e2}}\n\ngoal (1 subgoal):\n 1. finite\n     (\\<Union>e\\<in>P.\n         {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "using Suc.prems"], ["proof (prove)\nusing this:\n  ?e2 \\<in> P \\<Longrightarrow>\n  finite {?e2 # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {?e2}}\n  finite P\n\ngoal (1 subgoal):\n 1. finite\n     (\\<Union>e\\<in>P.\n         {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "by blast"], ["proof (state)\nthis:\n  finite\n   (\\<Union>e\\<in>P.\n       {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "}"], ["proof (state)\nthis:\n  finite\n   (\\<Union>e\\<in>P.\n       {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "then"], ["proof (chain)\npicking this:\n  finite\n   (\\<Union>e\\<in>P.\n       {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})", "have \n      \"finite ({[]} \\<union> (\\<Union> ((\\<lambda>e. {e # p0 | p0. distinct p0 \\<and> set p0 \\<subseteq> (P - {e})}) ` P)))\""], ["proof (prove)\nusing this:\n  finite\n   (\\<Union>e\\<in>P.\n       {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. finite\n     ({[]} \\<union>\n      (\\<Union>e\\<in>P.\n          {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}))", "using finite_Un"], ["proof (prove)\nusing this:\n  finite\n   (\\<Union>e\\<in>P.\n       {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n  finite (?F \\<union> ?G) = (finite ?F \\<and> finite ?G)\n\ngoal (1 subgoal):\n 1. finite\n     ({[]} \\<union>\n      (\\<Union>e\\<in>P.\n          {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}))", "by blast"], ["proof (state)\nthis:\n  finite\n   ({[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}))\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "}"], ["proof (state)\nthis:\n  finite\n   ({[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}))\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<And>P.\n                   \\<lbrakk>x = card P; finite P\\<rbrakk>\n                   \\<Longrightarrow> finite\n{p. distinct p \\<and> set p \\<subseteq> P};\n        Suc x = card P; finite P\\<rbrakk>\n       \\<Longrightarrow> finite {p. distinct p \\<and> set p \\<subseteq> P}", "then"], ["proof (chain)\npicking this:\n  finite\n   ({[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}))", "show ?case"], ["proof (prove)\nusing this:\n  finite\n   ({[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}))\n\ngoal (1 subgoal):\n 1. finite {p. distinct p \\<and> set p \\<subseteq> P}", "using FINITE_ALL_DISTINCT_LISTS_i[OF Suc.prems]"], ["proof (prove)\nusing this:\n  finite\n   ({[]} \\<union>\n    (\\<Union>e\\<in>P.\n        {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}}))\n  {p. distinct p \\<and> set p \\<subseteq> P} =\n  {[]} \\<union>\n  (\\<Union>e\\<in>P.\n      {e # p0 |p0. distinct p0 \\<and> set p0 \\<subseteq> P - {e}})\n\ngoal (1 subgoal):\n 1. finite {p. distinct p \\<and> set p \\<subseteq> P}", "by force"], ["proof (state)\nthis:\n  finite {p. distinct p \\<and> set p \\<subseteq> P}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subset_inter_diff_empty: \n  assumes \"s \\<subseteq> t\" \n  shows \"(s \\<inter> (u - t) = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<inter> (u - t) = {}", "using assms"], ["proof (prove)\nusing this:\n  s \\<subseteq> t\n\ngoal (1 subgoal):\n 1. s \\<inter> (u - t) = {}", "by auto"], ["", "end"]]}