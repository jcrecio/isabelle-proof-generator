{"file_name": "/home/qj213/afp-2021-10-22/thys/Factored_Transition_System_Bounding/Acyclicity.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Factored_Transition_System_Bounding", "problem_names": ["lemma top_sorted_abs_mem: \n  assumes \"(top_sorted_abs R (h # l))\" \"(ListMem x l)\"\n  shows \"(\\<not> R x h)\"", "lemma top_sorted_cons: \n  assumes \"top_sorted_abs R (h # l)\"\n  shows \"(top_sorted_abs R l)\"", "lemma individual_weight_less_eq_lp: \n  fixes w :: \"'a \\<Rightarrow> nat\"\n  assumes \"geq_arg g\"\n  shows \"(w x \\<le> wlp R w g f x l)\"", "lemma lp_geq_lp_from_successor:\n  fixes vtx1 and f g :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\n  assumes \"geq_arg f\" \"geq_arg g\" \"(\\<forall>vtx. ListMem vtx G \\<longrightarrow> \\<not>R vtx vtx)\" \"R vtx2 vtx1\" \n    \"ListMem vtx1 G\" \"top_sorted_abs R G\" \n  shows \"(f (w vtx2) (wlp R w g f vtx1 G) \\<le> (wlp R w g f vtx2 G))\"", "lemma weight_fun_leq_imp_lp_leq: \"\\<And>x.\n  (increasing f)\n  \\<Longrightarrow> (increasing g)\n  \\<Longrightarrow> (\\<forall>y. ListMem y l \\<longrightarrow> w1 y \\<le> w2 y) \n  \\<Longrightarrow> (w1 x \\<le> w2 x)\n  \\<Longrightarrow> (wlp R w1 g f x l \\<le> wlp R w2 g f x l)\n\"", "lemma wlp_congruence_rule: \n  fixes l1 l2 R1 R2 w1 w2 g1 g2 f1 f2 x1 x2 \n  assumes \"(l1 = l2)\" \"(\\<forall>y. ListMem y l2 \\<longrightarrow> (R1 x1 y = R2 x2 y))\"\n    \"(\\<forall>y. ListMem y l2 \\<longrightarrow> (R1 y x1 = R2 y x2))\" \"(w1 x1 = w2 x2)\" \n    \"(\\<forall>y1 y2. (y1 = y2) \\<longrightarrow> (f1 (w1 x1) y1 = f2 (w2 x2) y2))\" \n    \"(\\<forall>y1 y2 z1 z2. (y1 = y2) \\<and> (z1 = z2) \\<longrightarrow> ((g1 (f1 (w1 x1) y1) z1) = (g2 (f2 (w2 x2) y2) z2)))\"\n    \"(\\<forall>x y. ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> (R1 x y = R2 x y))\"\n    \"(\\<forall>x. ListMem x l2 \\<longrightarrow> (w1 x = w2 x))\"\n    \"(\\<forall>x y z. ListMem x l2 \\<longrightarrow> (g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z))\"\n    \"(\\<forall>x y. ListMem x l2 \\<longrightarrow> (f1 (w1 x) y = f2 (w1 x) y))\"\n  shows \"((wlp R1 w1 g1 f1 x1 l1) = (wlp R2 w2 g2 f2 x2 l2))\"", "lemma wlp_ite_weights: \n  fixes x\n  assumes \"\\<forall>y. ListMem y l1 \\<longrightarrow> P y\" \"P x\"\n  shows \"((wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1) = (wlp R w1 g f x l1))\"", "lemma map_wlp_ite_weights: \"\n  (\\<forall>x. ListMem x l1 \\<longrightarrow> P x) \n  \\<Longrightarrow> (\\<forall>x. ListMem x l2 \\<longrightarrow> P x) \n  \\<Longrightarrow> (\n    map (\\<lambda>x. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1) l2 \n    = map (\\<lambda>x. wlp R w1 g f x l1) l2\n  )\n\"", "lemma wlp_weight_lamda_exp: \"\\<And>x. wlp R w g f x l = wlp R (\\<lambda>y. w y) g f x l\"", "lemma img_wlp_ite_weights: \"\n  (\\<forall>x. ListMem x l \\<longrightarrow> P x) \n  \\<Longrightarrow> (\\<forall>x. x \\<in> s \\<longrightarrow> P x) \n  \\<Longrightarrow> (\n    (\\<lambda>x. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l) ` s \n    = (\\<lambda>x. wlp R w1 g f x l) ` s\n  )\n\""], "translations": [["", "lemma top_sorted_abs_mem: \n  assumes \"(top_sorted_abs R (h # l))\" \"(ListMem x l)\"\n  shows \"(\\<not> R x h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> R x h", "using assms"], ["proof (prove)\nusing this:\n  top_sorted_abs R (h # l)\n  ListMem x l\n\ngoal (1 subgoal):\n 1. \\<not> R x h", "by (auto simp add: ListMem_iff list.pred_set)"], ["", "lemma top_sorted_cons: \n  assumes \"top_sorted_abs R (h # l)\"\n  shows \"(top_sorted_abs R l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_sorted_abs R l", "using assms"], ["proof (prove)\nusing this:\n  top_sorted_abs R (h # l)\n\ngoal (1 subgoal):\n 1. top_sorted_abs R l", "by simp"], ["", "subsection \\<open>The Weightiest Path Function (wlp)\\<close>"], ["", "text \\<open> The weightiest path function is a generalization of an algorithm which computes the\nlongest path in a DAG starting at a given vertex `v`. Its arguments are the relation `R` which\ninduces the graph, a weighing function `w` assigning weights to vertices, an accumulating functions\n`f` and `g` which aggregate vertex weights into a path weight and the weights of different paths\nrespectively, the considered vertex and the graph represented as a topological sorted list. \n[Abdulaziz et al., p.18] \n\nTypical weight combining functions have the properties defined by `geq\\_arg` and `increasing`. \n[Abdulaziz et al., p.18] \\<close>\n\n\\<comment> \\<open>NOTE name shortened.\\<close>"], ["", "fun wlp where\n  \"wlp R w g f x [] = w x\"\n| \"wlp R w g f x (h # l) = (if R x h\n    then g (f (w x) (wlp R w g f h l)) (wlp R w g f x l)\n    else wlp R w g f x l\n  )\"\n\n\n\\<comment> \\<open>NOTE name shortened.\\<close>"], ["", "definition geq_arg where \n  \"geq_arg f \\<equiv> (\\<forall>x y. (x \\<le> f x y) \\<and> (y \\<le> f x y))\""], ["", "lemma individual_weight_less_eq_lp: \n  fixes w :: \"'a \\<Rightarrow> nat\"\n  assumes \"geq_arg g\"\n  shows \"(w x \\<le> wlp R w g f x l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x l", "using assms"], ["proof (prove)\nusing this:\n  geq_arg g\n\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x l", "unfolding geq_arg_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x l", "proof (induction l arbitrary: R w g f x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R w g f x.\n       \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n       w x \\<le> wlp R w g f x []\n 2. \\<And>a l R w g f x.\n       \\<lbrakk>\\<And>R w g f x.\n                   \\<forall>x y.\n                      x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                   w x \\<le> wlp R w g f x l;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\\<rbrakk>\n       \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)", "case (Cons a l)"], ["proof (state)\nthis:\n  \\<forall>x y. x \\<le> ?g x y \\<and> y \\<le> ?g x y \\<Longrightarrow>\n  ?w ?x \\<le> wlp ?R ?w ?g ?f ?x l\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n\ngoal (2 subgoals):\n 1. \\<And>R w g f x.\n       \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n       w x \\<le> wlp R w g f x []\n 2. \\<And>a l R w g f x.\n       \\<lbrakk>\\<And>R w g f x.\n                   \\<forall>x y.\n                      x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                   w x \\<le> wlp R w g f x l;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\\<rbrakk>\n       \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)", "then"], ["proof (chain)\npicking this:\n  \\<forall>x y. x \\<le> ?g x y \\<and> y \\<le> ?g x y \\<Longrightarrow>\n  ?w ?x \\<le> wlp ?R ?w ?g ?f ?x l\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<le> ?g x y \\<and> y \\<le> ?g x y \\<Longrightarrow>\n  ?w ?x \\<le> wlp ?R ?w ?g ?f ?x l\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x (a # l)", "using Cons.IH Cons.prems"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<le> ?g x y \\<and> y \\<le> ?g x y \\<Longrightarrow>\n  ?w ?x \\<le> wlp ?R ?w ?g ?f ?x l\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n  \\<forall>x y. x \\<le> ?g x y \\<and> y \\<le> ?g x y \\<Longrightarrow>\n  ?w ?x \\<le> wlp ?R ?w ?g ?f ?x l\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x (a # l)", "proof (cases \"R x a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>g w x R f.\n                \\<forall>x y.\n                   x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n     \\<And>g w x R f.\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n        w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y; R x a\\<rbrakk>\n    \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)\n 2. \\<lbrakk>\\<And>g w x R f.\n                \\<forall>x y.\n                   x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n     \\<And>g w x R f.\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n        w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y; \\<not> R x a\\<rbrakk>\n    \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)", "case True"], ["proof (state)\nthis:\n  R x a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>g w x R f.\n                \\<forall>x y.\n                   x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n     \\<And>g w x R f.\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n        w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y; R x a\\<rbrakk>\n    \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)\n 2. \\<lbrakk>\\<And>g w x R f.\n                \\<forall>x y.\n                   x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n     \\<And>g w x R f.\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n        w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y; \\<not> R x a\\<rbrakk>\n    \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)", "then"], ["proof (chain)\npicking this:\n  R x a", "show ?thesis"], ["proof (prove)\nusing this:\n  R x a\n\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x (a # l)", "using Cons le_trans wlp.simps(2)"], ["proof (prove)\nusing this:\n  R x a\n  \\<forall>x y. x \\<le> ?g x y \\<and> y \\<le> ?g x y \\<Longrightarrow>\n  ?w ?x \\<le> wlp ?R ?w ?g ?f ?x l\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n  \\<lbrakk>?i \\<le> ?j; ?j \\<le> ?k\\<rbrakk> \\<Longrightarrow> ?i \\<le> ?k\n  wlp ?R ?w ?g ?f ?x (?h # ?l) =\n  (if ?R ?x ?h\n   then ?g (?f (?w ?x) (wlp ?R ?w ?g ?f ?h ?l)) (wlp ?R ?w ?g ?f ?x ?l)\n   else wlp ?R ?w ?g ?f ?x ?l)\n\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x (a # l)", "by smt"], ["proof (state)\nthis:\n  w x \\<le> wlp R w g f x (a # l)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>g w x R f.\n                \\<forall>x y.\n                   x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n     \\<And>g w x R f.\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n        w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y; \\<not> R x a\\<rbrakk>\n    \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>g w x R f.\n                \\<forall>x y.\n                   x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n     \\<And>g w x R f.\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n        w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y; \\<not> R x a\\<rbrakk>\n    \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)", "case False"], ["proof (state)\nthis:\n  \\<not> R x a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>g w x R f.\n                \\<forall>x y.\n                   x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n                w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n     \\<And>g w x R f.\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n        w x \\<le> wlp R w g f x l;\n     \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y; \\<not> R x a\\<rbrakk>\n    \\<Longrightarrow> w x \\<le> wlp R w g f x (a # l)", "then"], ["proof (chain)\npicking this:\n  \\<not> R x a", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> R x a\n\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x (a # l)", "using Cons"], ["proof (prove)\nusing this:\n  \\<not> R x a\n  \\<forall>x y. x \\<le> ?g x y \\<and> y \\<le> ?g x y \\<Longrightarrow>\n  ?w ?x \\<le> wlp ?R ?w ?g ?f ?x l\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n\ngoal (1 subgoal):\n 1. w x \\<le> wlp R w g f x (a # l)", "by simp"], ["proof (state)\nthis:\n  w x \\<le> wlp R w g f x (a # l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w x \\<le> wlp R w g f x (a # l)\n\ngoal (1 subgoal):\n 1. \\<And>R w g f x.\n       \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y \\<Longrightarrow>\n       w x \\<le> wlp R w g f x []", "qed simp\n\n\n\\<comment> \\<open>NOTE Types of 'f' and 'g' had to be fixed to be able to use transitivity rule of the less-equal\nrelation.\\<close>"], ["", "lemma lp_geq_lp_from_successor:\n  fixes vtx1 and f g :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\"\n  assumes \"geq_arg f\" \"geq_arg g\" \"(\\<forall>vtx. ListMem vtx G \\<longrightarrow> \\<not>R vtx vtx)\" \"R vtx2 vtx1\" \n    \"ListMem vtx1 G\" \"top_sorted_abs R G\" \n  shows \"(f (w vtx2) (wlp R w g f vtx1 G) \\<le> (wlp R w g f vtx2 G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "using assms"], ["proof (prove)\nusing this:\n  geq_arg f\n  geq_arg g\n  \\<forall>vtx. ListMem vtx G \\<longrightarrow> \\<not> R vtx vtx\n  R vtx2 vtx1\n  ListMem vtx1 G\n  top_sorted_abs R G\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "unfolding geq_arg_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n  \\<forall>vtx. ListMem vtx G \\<longrightarrow> \\<not> R vtx vtx\n  R vtx2 vtx1\n  ListMem vtx1 G\n  top_sorted_abs R G\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "proof (induction G arbitrary: vtx1 f g R vtx2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>vtx1 f g R vtx2.\n       \\<lbrakk>\\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n        \\<forall>vtx. ListMem vtx [] \\<longrightarrow> \\<not> R vtx vtx;\n        R vtx2 vtx1; ListMem vtx1 []; top_sorted_abs R []\\<rbrakk>\n       \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 [])\n                         \\<le> wlp R w g f vtx2 []\n 2. \\<And>a G vtx1 f g R vtx2.\n       \\<lbrakk>\\<And>vtx1 f g R vtx2.\n                   \\<lbrakk>\\<forall>x y.\n                               x \\<le> f x y \\<and> y \\<le> f x y;\n                    \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n                    \\<forall>vtx.\n                       ListMem vtx G \\<longrightarrow> \\<not> R vtx vtx;\n                    R vtx2 vtx1; ListMem vtx1 G; top_sorted_abs R G\\<rbrakk>\n                   \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                                     \\<le> wlp R w g f vtx2 G;\n        \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n        \\<forall>vtx.\n           ListMem vtx (a # G) \\<longrightarrow> \\<not> R vtx vtx;\n        R vtx2 vtx1; ListMem vtx1 (a # G); top_sorted_abs R (a # G)\\<rbrakk>\n       \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 (a # G))\n                         \\<le> wlp R w g f vtx2 (a # G)", "case Nil"], ["proof (state)\nthis:\n  \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n  \\<forall>vtx. ListMem vtx [] \\<longrightarrow> \\<not> R vtx vtx\n  R vtx2 vtx1\n  ListMem vtx1 []\n  top_sorted_abs R []\n\ngoal (2 subgoals):\n 1. \\<And>vtx1 f g R vtx2.\n       \\<lbrakk>\\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n        \\<forall>vtx. ListMem vtx [] \\<longrightarrow> \\<not> R vtx vtx;\n        R vtx2 vtx1; ListMem vtx1 []; top_sorted_abs R []\\<rbrakk>\n       \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 [])\n                         \\<le> wlp R w g f vtx2 []\n 2. \\<And>a G vtx1 f g R vtx2.\n       \\<lbrakk>\\<And>vtx1 f g R vtx2.\n                   \\<lbrakk>\\<forall>x y.\n                               x \\<le> f x y \\<and> y \\<le> f x y;\n                    \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n                    \\<forall>vtx.\n                       ListMem vtx G \\<longrightarrow> \\<not> R vtx vtx;\n                    R vtx2 vtx1; ListMem vtx1 G; top_sorted_abs R G\\<rbrakk>\n                   \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                                     \\<le> wlp R w g f vtx2 G;\n        \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n        \\<forall>vtx.\n           ListMem vtx (a # G) \\<longrightarrow> \\<not> R vtx vtx;\n        R vtx2 vtx1; ListMem vtx1 (a # G); top_sorted_abs R (a # G)\\<rbrakk>\n       \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 (a # G))\n                         \\<le> wlp R w g f vtx2 (a # G)", "then"], ["proof (chain)\npicking this:\n  \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n  \\<forall>vtx. ListMem vtx [] \\<longrightarrow> \\<not> R vtx vtx\n  R vtx2 vtx1\n  ListMem vtx1 []\n  top_sorted_abs R []", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n  \\<forall>vtx. ListMem vtx [] \\<longrightarrow> \\<not> R vtx vtx\n  R vtx2 vtx1\n  ListMem vtx1 []\n  top_sorted_abs R []\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 []) \\<le> wlp R w g f vtx2 []", "using ListMem_iff"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n  \\<forall>vtx. ListMem vtx [] \\<longrightarrow> \\<not> R vtx vtx\n  R vtx2 vtx1\n  ListMem vtx1 []\n  top_sorted_abs R []\n  ListMem ?x ?xs = (?x \\<in> set ?xs)\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 []) \\<le> wlp R w g f vtx2 []", "by fastforce"], ["proof (state)\nthis:\n  f (w vtx2) (wlp R w g f vtx1 []) \\<le> wlp R w g f vtx2 []\n\ngoal (1 subgoal):\n 1. \\<And>a G vtx1 f g R vtx2.\n       \\<lbrakk>\\<And>vtx1 f g R vtx2.\n                   \\<lbrakk>\\<forall>x y.\n                               x \\<le> f x y \\<and> y \\<le> f x y;\n                    \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n                    \\<forall>vtx.\n                       ListMem vtx G \\<longrightarrow> \\<not> R vtx vtx;\n                    R vtx2 vtx1; ListMem vtx1 G; top_sorted_abs R G\\<rbrakk>\n                   \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                                     \\<le> wlp R w g f vtx2 G;\n        \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n        \\<forall>vtx.\n           ListMem vtx (a # G) \\<longrightarrow> \\<not> R vtx vtx;\n        R vtx2 vtx1; ListMem vtx1 (a # G); top_sorted_abs R (a # G)\\<rbrakk>\n       \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 (a # G))\n                         \\<le> wlp R w g f vtx2 (a # G)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a G vtx1 f g R vtx2.\n       \\<lbrakk>\\<And>vtx1 f g R vtx2.\n                   \\<lbrakk>\\<forall>x y.\n                               x \\<le> f x y \\<and> y \\<le> f x y;\n                    \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n                    \\<forall>vtx.\n                       ListMem vtx G \\<longrightarrow> \\<not> R vtx vtx;\n                    R vtx2 vtx1; ListMem vtx1 G; top_sorted_abs R G\\<rbrakk>\n                   \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                                     \\<le> wlp R w g f vtx2 G;\n        \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n        \\<forall>vtx.\n           ListMem vtx (a # G) \\<longrightarrow> \\<not> R vtx vtx;\n        R vtx2 vtx1; ListMem vtx1 (a # G); top_sorted_abs R (a # G)\\<rbrakk>\n       \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 (a # G))\n                         \\<le> wlp R w g f vtx2 (a # G)", "case (Cons a G)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>x y. x \\<le> ?f x y \\<and> y \\<le> ?f x y;\n   \\<forall>x y. x \\<le> ?g x y \\<and> y \\<le> ?g x y;\n   \\<forall>vtx. ListMem vtx G \\<longrightarrow> \\<not> ?R vtx vtx;\n   ?R ?vtx2.0 ?vtx1.0; ListMem ?vtx1.0 G; top_sorted_abs ?R G\\<rbrakk>\n  \\<Longrightarrow> ?f (w ?vtx2.0) (wlp ?R w ?g ?f ?vtx1.0 G)\n                    \\<le> wlp ?R w ?g ?f ?vtx2.0 G\n  \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n  \\<forall>vtx. ListMem vtx (a # G) \\<longrightarrow> \\<not> R vtx vtx\n  R vtx2 vtx1\n  ListMem vtx1 (a # G)\n  top_sorted_abs R (a # G)\n\ngoal (1 subgoal):\n 1. \\<And>a G vtx1 f g R vtx2.\n       \\<lbrakk>\\<And>vtx1 f g R vtx2.\n                   \\<lbrakk>\\<forall>x y.\n                               x \\<le> f x y \\<and> y \\<le> f x y;\n                    \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n                    \\<forall>vtx.\n                       ListMem vtx G \\<longrightarrow> \\<not> R vtx vtx;\n                    R vtx2 vtx1; ListMem vtx1 G; top_sorted_abs R G\\<rbrakk>\n                   \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                                     \\<le> wlp R w g f vtx2 G;\n        \\<forall>x y. x \\<le> f x y \\<and> y \\<le> f x y;\n        \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y;\n        \\<forall>vtx.\n           ListMem vtx (a # G) \\<longrightarrow> \\<not> R vtx vtx;\n        R vtx2 vtx1; ListMem vtx1 (a # G); top_sorted_abs R (a # G)\\<rbrakk>\n       \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 (a # G))\n                         \\<le> wlp R w g f vtx2 (a # G)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 (a # G)) \\<le> wlp R w g f vtx2 (a # G)", "proof (auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2)\n                       (g (f (w vtx1) (wlp R w g f a G))\n                         (wlp R w g f vtx1 G))\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 2. \\<lbrakk>R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2)\n                       (g (f (w vtx1) (wlp R w g f a G))\n                         (wlp R w g f vtx1 G))\n                      \\<le> wlp R w g f vtx2 G\n 3. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 4. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "assume P1: \"R vtx1 a\" \"R vtx2 a\""], ["proof (state)\nthis:\n  R vtx1 a\n  R vtx2 a\n\ngoal (4 subgoals):\n 1. \\<lbrakk>R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2)\n                       (g (f (w vtx1) (wlp R w g f a G))\n                         (wlp R w g f vtx1 G))\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 2. \\<lbrakk>R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2)\n                       (g (f (w vtx1) (wlp R w g f a G))\n                         (wlp R w g f vtx1 G))\n                      \\<le> wlp R w g f vtx2 G\n 3. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 4. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "then"], ["proof (chain)\npicking this:\n  R vtx1 a\n  R vtx2 a", "show \"\n        f (w vtx2) (g (f (w vtx1) (wlp R w g f a G)) (wlp R w g f vtx1 G))\n        \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)\""], ["proof (prove)\nusing this:\n  R vtx1 a\n  R vtx2 a\n\ngoal (1 subgoal):\n 1. f (w vtx2) (g (f (w vtx1) (wlp R w g f a G)) (wlp R w g f vtx1 G))\n    \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)", "using Cons.prems(3, 5, 6)"], ["proof (prove)\nusing this:\n  R vtx1 a\n  R vtx2 a\n  \\<forall>vtx. ListMem vtx (a # G) \\<longrightarrow> \\<not> R vtx vtx\n  ListMem vtx1 (a # G)\n  top_sorted_abs R (a # G)\n\ngoal (1 subgoal):\n 1. f (w vtx2) (g (f (w vtx1) (wlp R w g f a G)) (wlp R w g f vtx1 G))\n    \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)", "by (metis ListMem_iff set_ConsD top_sorted_abs_mem)"], ["proof (state)\nthis:\n  f (w vtx2) (g (f (w vtx1) (wlp R w g f a G)) (wlp R w g f vtx1 G))\n  \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2)\n                       (g (f (w vtx1) (wlp R w g f a G))\n                         (wlp R w g f vtx1 G))\n                      \\<le> wlp R w g f vtx2 G\n 2. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 3. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2)\n                       (g (f (w vtx1) (wlp R w g f a G))\n                         (wlp R w g f vtx1 G))\n                      \\<le> wlp R w g f vtx2 G\n 2. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 3. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "assume P2: \"R vtx1 a\" \"\\<not> R vtx2 a\""], ["proof (state)\nthis:\n  R vtx1 a\n  \\<not> R vtx2 a\n\ngoal (3 subgoals):\n 1. \\<lbrakk>R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2)\n                       (g (f (w vtx1) (wlp R w g f a G))\n                         (wlp R w g f vtx1 G))\n                      \\<le> wlp R w g f vtx2 G\n 2. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 3. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "then"], ["proof (chain)\npicking this:\n  R vtx1 a\n  \\<not> R vtx2 a", "show \"\n        f (w vtx2) (g (f (w vtx1) (wlp R w g f a G)) (wlp R w g f vtx1 G)) \n        \\<le> wlp R w g f vtx2 G\""], ["proof (prove)\nusing this:\n  R vtx1 a\n  \\<not> R vtx2 a\n\ngoal (1 subgoal):\n 1. f (w vtx2) (g (f (w vtx1) (wlp R w g f a G)) (wlp R w g f vtx1 G))\n    \\<le> wlp R w g f vtx2 G", "using Cons.prems(4, 5, 6)"], ["proof (prove)\nusing this:\n  R vtx1 a\n  \\<not> R vtx2 a\n  R vtx2 vtx1\n  ListMem vtx1 (a # G)\n  top_sorted_abs R (a # G)\n\ngoal (1 subgoal):\n 1. f (w vtx2) (g (f (w vtx1) (wlp R w g f a G)) (wlp R w g f vtx1 G))\n    \\<le> wlp R w g f vtx2 G", "by (metis ListMem_iff set_ConsD top_sorted_abs_mem)"], ["proof (state)\nthis:\n  f (w vtx2) (g (f (w vtx1) (wlp R w g f a G)) (wlp R w g f vtx1 G))\n  \\<le> wlp R w g f vtx2 G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 2. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 2. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "assume P3: \"\\<not> R vtx1 a\" \"R vtx2 a\""], ["proof (state)\nthis:\n  \\<not> R vtx1 a\n  R vtx2 a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)\n 2. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "then"], ["proof (chain)\npicking this:\n  \\<not> R vtx1 a\n  R vtx2 a", "show \"\n        f (w vtx2) (wlp R w g f vtx1 G) \n        \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)\""], ["proof (prove)\nusing this:\n  \\<not> R vtx1 a\n  R vtx2 a\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G)\n    \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)", "have f1: \"\\<forall>n na. n \\<le> g n na \\<and> na \\<le> g n na\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n na. n \\<le> g n na \\<and> na \\<le> g n na", "using Cons.prems(2)"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<le> g x y \\<and> y \\<le> g x y\n\ngoal (1 subgoal):\n 1. \\<forall>n na. n \\<le> g n na \\<and> na \\<le> g n na", "by blast"], ["proof (state)\nthis:\n  \\<forall>n na. n \\<le> g n na \\<and> na \\<le> g n na\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)", "have f2: \"vtx1 = a \\<or> vtx1 \\<in> set G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vtx1 = a \\<or> vtx1 \\<in> set G", "by (meson Cons.prems(5) ListMem_iff set_ConsD)"], ["proof (state)\nthis:\n  vtx1 = a \\<or> vtx1 \\<in> set G\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)", "obtain aa :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a\" where\n        \"\\<forall>x2. (\\<exists>v5. ListMem v5 G \\<and> x2 v5 v5) = (ListMem (aa x2) G \\<and> x2 (aa x2) (aa x2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>aa.\n        \\<forall>x2.\n           (\\<exists>v5. ListMem v5 G \\<and> x2 v5 v5) =\n           (ListMem (aa x2) G \\<and> x2 (aa x2) (aa x2)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x2.\n     (\\<exists>v5. ListMem v5 G \\<and> x2 v5 v5) =\n     (ListMem (aa x2) G \\<and> x2 (aa x2) (aa x2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)", "then"], ["proof (chain)\npicking this:\n  \\<forall>x2.\n     (\\<exists>v5. ListMem v5 G \\<and> x2 v5 v5) =\n     (ListMem (aa x2) G \\<and> x2 (aa x2) (aa x2))", "have \"\n          ListMem (aa R) G \\<and> R (aa R) (aa R) \n          \\<or> \\<not> ListMem vtx1 G \\<or> f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G\""], ["proof (prove)\nusing this:\n  \\<forall>x2.\n     (\\<exists>v5. ListMem v5 G \\<and> x2 v5 v5) =\n     (ListMem (aa x2) G \\<and> x2 (aa x2) (aa x2))\n\ngoal (1 subgoal):\n 1. ListMem (aa R) G \\<and> R (aa R) (aa R) \\<or>\n    \\<not> ListMem vtx1 G \\<or>\n    f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "using f1"], ["proof (prove)\nusing this:\n  \\<forall>x2.\n     (\\<exists>v5. ListMem v5 G \\<and> x2 v5 v5) =\n     (ListMem (aa x2) G \\<and> x2 (aa x2) (aa x2))\n  \\<forall>n na. n \\<le> g n na \\<and> na \\<le> g n na\n\ngoal (1 subgoal):\n 1. ListMem (aa R) G \\<and> R (aa R) (aa R) \\<or>\n    \\<not> ListMem vtx1 G \\<or>\n    f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "by (metis (no_types) Cons.IH Cons.prems(1, 4, 6) top_sorted_cons)"], ["proof (state)\nthis:\n  ListMem (aa R) G \\<and> R (aa R) (aa R) \\<or>\n  \\<not> ListMem vtx1 G \\<or>\n  f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> g (f (w vtx2) (wlp R w g f a G))\n                             (wlp R w g f vtx2 G)", "then"], ["proof (chain)\npicking this:\n  ListMem (aa R) G \\<and> R (aa R) (aa R) \\<or>\n  \\<not> ListMem vtx1 G \\<or>\n  f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "show ?thesis"], ["proof (prove)\nusing this:\n  ListMem (aa R) G \\<and> R (aa R) (aa R) \\<or>\n  \\<not> ListMem vtx1 G \\<or>\n  f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G)\n    \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)", "using f2 f1"], ["proof (prove)\nusing this:\n  ListMem (aa R) G \\<and> R (aa R) (aa R) \\<or>\n  \\<not> ListMem vtx1 G \\<or>\n  f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G\n  vtx1 = a \\<or> vtx1 \\<in> set G\n  \\<forall>n na. n \\<le> g n na \\<and> na \\<le> g n na\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G)\n    \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)", "by (meson Cons.prems(3) ListMem_iff insert le_trans)"], ["proof (state)\nthis:\n  f (w vtx2) (wlp R w g f vtx1 G)\n  \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (w vtx2) (wlp R w g f vtx1 G)\n  \\<le> g (f (w vtx2) (wlp R w g f a G)) (wlp R w g f vtx2 G)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "assume P4: \"\\<not> R vtx1 a\" \"\\<not> R vtx2 a\""], ["proof (state)\nthis:\n  \\<not> R vtx1 a\n  \\<not> R vtx2 a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "then"], ["proof (chain)\npicking this:\n  \\<not> R vtx1 a\n  \\<not> R vtx2 a", "show \"f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G\""], ["proof (prove)\nusing this:\n  \\<not> R vtx1 a\n  \\<not> R vtx2 a\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "have f1: \"top_sorted_abs R G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_sorted_abs R G", "using Cons.prems(6)"], ["proof (prove)\nusing this:\n  top_sorted_abs R (a # G)\n\ngoal (1 subgoal):\n 1. top_sorted_abs R G", "by fastforce"], ["proof (state)\nthis:\n  top_sorted_abs R G\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "have \"ListMem vtx1 G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ListMem vtx1 G", "by (metis Cons.prems(4) Cons.prems(5) ListMem_iff P4(2) set_ConsD)"], ["proof (state)\nthis:\n  ListMem vtx1 G\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> R vtx1 a; \\<not> R vtx2 a\\<rbrakk>\n    \\<Longrightarrow> f (w vtx2) (wlp R w g f vtx1 G)\n                      \\<le> wlp R w g f vtx2 G", "then"], ["proof (chain)\npicking this:\n  ListMem vtx1 G", "show ?thesis"], ["proof (prove)\nusing this:\n  ListMem vtx1 G\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "using f1"], ["proof (prove)\nusing this:\n  ListMem vtx1 G\n  top_sorted_abs R G\n\ngoal (1 subgoal):\n 1. f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G", "by (simp add: Cons.IH Cons.prems(1, 2, 3, 4) insert)"], ["proof (state)\nthis:\n  f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (w vtx2) (wlp R w g f vtx1 G) \\<le> wlp R w g f vtx2 G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (w vtx2) (wlp R w g f vtx1 (a # G)) \\<le> wlp R w g f vtx2 (a # G)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition increasing where\n  \"increasing f \\<equiv> (\\<forall>e b c d. (e \\<le> c) \\<and> (b \\<le> d) \\<longrightarrow> (f e b \\<le> f c d))\""], ["", "lemma weight_fun_leq_imp_lp_leq: \"\\<And>x.\n  (increasing f)\n  \\<Longrightarrow> (increasing g)\n  \\<Longrightarrow> (\\<forall>y. ListMem y l \\<longrightarrow> w1 y \\<le> w2 y) \n  \\<Longrightarrow> (w1 x \\<le> w2 x)\n  \\<Longrightarrow> (wlp R w1 g f x l \\<le> wlp R w2 g f x l)\n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>increasing f; increasing g;\n        \\<forall>y. ListMem y l \\<longrightarrow> w1 y \\<le> w2 y;\n        w1 x \\<le> w2 x\\<rbrakk>\n       \\<Longrightarrow> wlp R w1 g f x l \\<le> wlp R w2 g f x l", "unfolding increasing_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>e b c d.\n                   e \\<le> c \\<and> b \\<le> d \\<longrightarrow>\n                   f e b \\<le> f c d;\n        \\<forall>e b c d.\n           e \\<le> c \\<and> b \\<le> d \\<longrightarrow> g e b \\<le> g c d;\n        \\<forall>y. ListMem y l \\<longrightarrow> w1 y \\<le> w2 y;\n        w1 x \\<le> w2 x\\<rbrakk>\n       \\<Longrightarrow> wlp R w1 g f x l \\<le> wlp R w2 g f x l", "by (induction l) (auto simp add: elem insert)\n\n\n\\<comment> \\<open>NOTE generalizing `f2`, `x1`, `x2` seems to break the prover.\\<close>"], ["", "lemma wlp_congruence_rule: \n  fixes l1 l2 R1 R2 w1 w2 g1 g2 f1 f2 x1 x2 \n  assumes \"(l1 = l2)\" \"(\\<forall>y. ListMem y l2 \\<longrightarrow> (R1 x1 y = R2 x2 y))\"\n    \"(\\<forall>y. ListMem y l2 \\<longrightarrow> (R1 y x1 = R2 y x2))\" \"(w1 x1 = w2 x2)\" \n    \"(\\<forall>y1 y2. (y1 = y2) \\<longrightarrow> (f1 (w1 x1) y1 = f2 (w2 x2) y2))\" \n    \"(\\<forall>y1 y2 z1 z2. (y1 = y2) \\<and> (z1 = z2) \\<longrightarrow> ((g1 (f1 (w1 x1) y1) z1) = (g2 (f2 (w2 x2) y2) z2)))\"\n    \"(\\<forall>x y. ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> (R1 x y = R2 x y))\"\n    \"(\\<forall>x. ListMem x l2 \\<longrightarrow> (w1 x = w2 x))\"\n    \"(\\<forall>x y z. ListMem x l2 \\<longrightarrow> (g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z))\"\n    \"(\\<forall>x y. ListMem x l2 \\<longrightarrow> (f1 (w1 x) y = f2 (w1 x) y))\"\n  shows \"((wlp R1 w1 g1 f1 x1 l1) = (wlp R2 w2 g2 f2 x2 l2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 l2", "using assms"], ["proof (prove)\nusing this:\n  l1 = l2\n  \\<forall>y. ListMem y l2 \\<longrightarrow> R1 x1 y = R2 x2 y\n  \\<forall>y. ListMem y l2 \\<longrightarrow> R1 y x1 = R2 y x2\n  w1 x1 = w2 x2\n  \\<forall>y1 y2. y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2\n  \\<forall>x y.\n     ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> R1 x y = R2 x y\n  \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x\n  \\<forall>x y z.\n     ListMem x l2 \\<longrightarrow> g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z\n  \\<forall>x y. ListMem x l2 \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\n\ngoal (1 subgoal):\n 1. wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 l2", "proof (induction l2 arbitrary: l1 x1 x2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l1 x1 x2.\n       \\<lbrakk>l1 = [];\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x [] \\<and> ListMem y [] \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x [] \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x [] \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x [] \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 []\n 2. \\<And>a l2 l1 x1 x2.\n       \\<lbrakk>\\<And>l1 x1 x2.\n                   \\<lbrakk>l1 = l2;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 x1 y = R2 x2 y;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 y x1 = R2 y x2;\n                    w1 x1 = w2 x2;\n                    \\<forall>y1 y2.\n                       y1 = y2 \\<longrightarrow>\n                       f1 (w1 x1) y1 = f2 (w2 x2) y2;\n                    \\<forall>y1 y2 z1 z2.\n                       y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n                       g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n                    \\<forall>x y.\n                       ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow>\n                       R1 x y = R2 x y;\n                    \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n                    \\<forall>x y z.\n                       ListMem x l2 \\<longrightarrow>\n                       g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n                    \\<forall>x y.\n                       ListMem x l2 \\<longrightarrow>\n                       f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n                   \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 =\n                                     wlp R2 w2 g2 f2 x2 l2;\n        l1 = a # l2;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x (a # l2) \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<longrightarrow>\n           f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 (a # l2)", "case (Cons a l2)"], ["proof (state)\nthis:\n  \\<lbrakk>?l1.0 = l2;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 ?x1.0 y = R2 ?x2.0 y;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 y ?x1.0 = R2 y ?x2.0;\n   w1 ?x1.0 = w2 ?x2.0;\n   \\<forall>y1 y2.\n      y1 = y2 \\<longrightarrow> f1 (w1 ?x1.0) y1 = f2 (w2 ?x2.0) y2;\n   \\<forall>y1 y2 z1 z2.\n      y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n      g1 (f1 (w1 ?x1.0) y1) z1 = g2 (f2 (w2 ?x2.0) y2) z2;\n   \\<forall>x y.\n      ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> R1 x y = R2 x y;\n   \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n   \\<forall>x y z.\n      ListMem x l2 \\<longrightarrow>\n      g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n   \\<forall>x y.\n      ListMem x l2 \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n  \\<Longrightarrow> wlp R1 w1 g1 f1 ?x1.0 ?l1.0 = wlp R2 w2 g2 f2 ?x2.0 l2\n  l1 = a # l2\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2\n  w1 x1 = w2 x2\n  \\<forall>y1 y2. y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2\n  \\<forall>x y.\n     ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n     R1 x y = R2 x y\n  \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x\n  \\<forall>x y z.\n     ListMem x (a # l2) \\<longrightarrow>\n     g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l2) \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\n\ngoal (2 subgoals):\n 1. \\<And>l1 x1 x2.\n       \\<lbrakk>l1 = [];\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x [] \\<and> ListMem y [] \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x [] \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x [] \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x [] \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 []\n 2. \\<And>a l2 l1 x1 x2.\n       \\<lbrakk>\\<And>l1 x1 x2.\n                   \\<lbrakk>l1 = l2;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 x1 y = R2 x2 y;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 y x1 = R2 y x2;\n                    w1 x1 = w2 x2;\n                    \\<forall>y1 y2.\n                       y1 = y2 \\<longrightarrow>\n                       f1 (w1 x1) y1 = f2 (w2 x2) y2;\n                    \\<forall>y1 y2 z1 z2.\n                       y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n                       g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n                    \\<forall>x y.\n                       ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow>\n                       R1 x y = R2 x y;\n                    \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n                    \\<forall>x y z.\n                       ListMem x l2 \\<longrightarrow>\n                       g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n                    \\<forall>x y.\n                       ListMem x l2 \\<longrightarrow>\n                       f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n                   \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 =\n                                     wlp R2 w2 g2 f2 x2 l2;\n        l1 = a # l2;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x (a # l2) \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<longrightarrow>\n           f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 (a # l2)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?l1.0 = l2;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 ?x1.0 y = R2 ?x2.0 y;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 y ?x1.0 = R2 y ?x2.0;\n   w1 ?x1.0 = w2 ?x2.0;\n   \\<forall>y1 y2.\n      y1 = y2 \\<longrightarrow> f1 (w1 ?x1.0) y1 = f2 (w2 ?x2.0) y2;\n   \\<forall>y1 y2 z1 z2.\n      y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n      g1 (f1 (w1 ?x1.0) y1) z1 = g2 (f2 (w2 ?x2.0) y2) z2;\n   \\<forall>x y.\n      ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> R1 x y = R2 x y;\n   \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n   \\<forall>x y z.\n      ListMem x l2 \\<longrightarrow>\n      g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n   \\<forall>x y.\n      ListMem x l2 \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n  \\<Longrightarrow> wlp R1 w1 g1 f1 ?x1.0 ?l1.0 = wlp R2 w2 g2 f2 ?x2.0 l2\n  l1 = a # l2\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2\n  w1 x1 = w2 x2\n  \\<forall>y1 y2. y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2\n  \\<forall>x y.\n     ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n     R1 x y = R2 x y\n  \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x\n  \\<forall>x y z.\n     ListMem x (a # l2) \\<longrightarrow>\n     g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l2) \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y", "have \"(wlp R1 w1 g1 f1 x1 l2) = (wlp R2 w2 g2 f2 x2 l2)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?l1.0 = l2;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 ?x1.0 y = R2 ?x2.0 y;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 y ?x1.0 = R2 y ?x2.0;\n   w1 ?x1.0 = w2 ?x2.0;\n   \\<forall>y1 y2.\n      y1 = y2 \\<longrightarrow> f1 (w1 ?x1.0) y1 = f2 (w2 ?x2.0) y2;\n   \\<forall>y1 y2 z1 z2.\n      y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n      g1 (f1 (w1 ?x1.0) y1) z1 = g2 (f2 (w2 ?x2.0) y2) z2;\n   \\<forall>x y.\n      ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> R1 x y = R2 x y;\n   \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n   \\<forall>x y z.\n      ListMem x l2 \\<longrightarrow>\n      g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n   \\<forall>x y.\n      ListMem x l2 \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n  \\<Longrightarrow> wlp R1 w1 g1 f1 ?x1.0 ?l1.0 = wlp R2 w2 g2 f2 ?x2.0 l2\n  l1 = a # l2\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2\n  w1 x1 = w2 x2\n  \\<forall>y1 y2. y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2\n  \\<forall>x y.\n     ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n     R1 x y = R2 x y\n  \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x\n  \\<forall>x y z.\n     ListMem x (a # l2) \\<longrightarrow>\n     g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l2) \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\n\ngoal (1 subgoal):\n 1. wlp R1 w1 g1 f1 x1 l2 = wlp R2 w2 g2 f2 x2 l2", "using Cons"], ["proof (prove)\nusing this:\n  \\<lbrakk>?l1.0 = l2;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 ?x1.0 y = R2 ?x2.0 y;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 y ?x1.0 = R2 y ?x2.0;\n   w1 ?x1.0 = w2 ?x2.0;\n   \\<forall>y1 y2.\n      y1 = y2 \\<longrightarrow> f1 (w1 ?x1.0) y1 = f2 (w2 ?x2.0) y2;\n   \\<forall>y1 y2 z1 z2.\n      y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n      g1 (f1 (w1 ?x1.0) y1) z1 = g2 (f2 (w2 ?x2.0) y2) z2;\n   \\<forall>x y.\n      ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> R1 x y = R2 x y;\n   \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n   \\<forall>x y z.\n      ListMem x l2 \\<longrightarrow>\n      g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n   \\<forall>x y.\n      ListMem x l2 \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n  \\<Longrightarrow> wlp R1 w1 g1 f1 ?x1.0 ?l1.0 = wlp R2 w2 g2 f2 ?x2.0 l2\n  l1 = a # l2\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2\n  w1 x1 = w2 x2\n  \\<forall>y1 y2. y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2\n  \\<forall>x y.\n     ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n     R1 x y = R2 x y\n  \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x\n  \\<forall>x y z.\n     ListMem x (a # l2) \\<longrightarrow>\n     g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l2) \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\n  \\<lbrakk>?l1.0 = l2;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 ?x1.0 y = R2 ?x2.0 y;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 y ?x1.0 = R2 y ?x2.0;\n   w1 ?x1.0 = w2 ?x2.0;\n   \\<forall>y1 y2.\n      y1 = y2 \\<longrightarrow> f1 (w1 ?x1.0) y1 = f2 (w2 ?x2.0) y2;\n   \\<forall>y1 y2 z1 z2.\n      y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n      g1 (f1 (w1 ?x1.0) y1) z1 = g2 (f2 (w2 ?x2.0) y2) z2;\n   \\<forall>x y.\n      ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> R1 x y = R2 x y;\n   \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n   \\<forall>x y z.\n      ListMem x l2 \\<longrightarrow>\n      g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n   \\<forall>x y.\n      ListMem x l2 \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n  \\<Longrightarrow> wlp R1 w1 g1 f1 ?x1.0 ?l1.0 = wlp R2 w2 g2 f2 ?x2.0 l2\n  l1 = a # l2\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2\n  w1 x1 = w2 x2\n  \\<forall>y1 y2. y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2\n  \\<forall>x y.\n     ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n     R1 x y = R2 x y\n  \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x\n  \\<forall>x y z.\n     ListMem x (a # l2) \\<longrightarrow>\n     g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l2) \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\n\ngoal (1 subgoal):\n 1. wlp R1 w1 g1 f1 x1 l2 = wlp R2 w2 g2 f2 x2 l2", "by (simp add: insert)"], ["proof (state)\nthis:\n  wlp R1 w1 g1 f1 x1 l2 = wlp R2 w2 g2 f2 x2 l2\n\ngoal (2 subgoals):\n 1. \\<And>l1 x1 x2.\n       \\<lbrakk>l1 = [];\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x [] \\<and> ListMem y [] \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x [] \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x [] \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x [] \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 []\n 2. \\<And>a l2 l1 x1 x2.\n       \\<lbrakk>\\<And>l1 x1 x2.\n                   \\<lbrakk>l1 = l2;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 x1 y = R2 x2 y;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 y x1 = R2 y x2;\n                    w1 x1 = w2 x2;\n                    \\<forall>y1 y2.\n                       y1 = y2 \\<longrightarrow>\n                       f1 (w1 x1) y1 = f2 (w2 x2) y2;\n                    \\<forall>y1 y2 z1 z2.\n                       y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n                       g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n                    \\<forall>x y.\n                       ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow>\n                       R1 x y = R2 x y;\n                    \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n                    \\<forall>x y z.\n                       ListMem x l2 \\<longrightarrow>\n                       g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n                    \\<forall>x y.\n                       ListMem x l2 \\<longrightarrow>\n                       f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n                   \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 =\n                                     wlp R2 w2 g2 f2 x2 l2;\n        l1 = a # l2;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x (a # l2) \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<longrightarrow>\n           f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 (a # l2)", "moreover"], ["proof (state)\nthis:\n  wlp R1 w1 g1 f1 x1 l2 = wlp R2 w2 g2 f2 x2 l2\n\ngoal (2 subgoals):\n 1. \\<And>l1 x1 x2.\n       \\<lbrakk>l1 = [];\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x [] \\<and> ListMem y [] \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x [] \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x [] \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x [] \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 []\n 2. \\<And>a l2 l1 x1 x2.\n       \\<lbrakk>\\<And>l1 x1 x2.\n                   \\<lbrakk>l1 = l2;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 x1 y = R2 x2 y;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 y x1 = R2 y x2;\n                    w1 x1 = w2 x2;\n                    \\<forall>y1 y2.\n                       y1 = y2 \\<longrightarrow>\n                       f1 (w1 x1) y1 = f2 (w2 x2) y2;\n                    \\<forall>y1 y2 z1 z2.\n                       y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n                       g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n                    \\<forall>x y.\n                       ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow>\n                       R1 x y = R2 x y;\n                    \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n                    \\<forall>x y z.\n                       ListMem x l2 \\<longrightarrow>\n                       g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n                    \\<forall>x y.\n                       ListMem x l2 \\<longrightarrow>\n                       f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n                   \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 =\n                                     wlp R2 w2 g2 f2 x2 l2;\n        l1 = a # l2;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x (a # l2) \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<longrightarrow>\n           f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 (a # l2)", "have \"(wlp R1 w1 g1 f1 a l2) = (wlp R2 w2 g2 f2 a l2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp R1 w1 g1 f1 a l2 = wlp R2 w2 g2 f2 a l2", "using Cons"], ["proof (prove)\nusing this:\n  \\<lbrakk>?l1.0 = l2;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 ?x1.0 y = R2 ?x2.0 y;\n   \\<forall>y. ListMem y l2 \\<longrightarrow> R1 y ?x1.0 = R2 y ?x2.0;\n   w1 ?x1.0 = w2 ?x2.0;\n   \\<forall>y1 y2.\n      y1 = y2 \\<longrightarrow> f1 (w1 ?x1.0) y1 = f2 (w2 ?x2.0) y2;\n   \\<forall>y1 y2 z1 z2.\n      y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n      g1 (f1 (w1 ?x1.0) y1) z1 = g2 (f2 (w2 ?x2.0) y2) z2;\n   \\<forall>x y.\n      ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow> R1 x y = R2 x y;\n   \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n   \\<forall>x y z.\n      ListMem x l2 \\<longrightarrow>\n      g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n   \\<forall>x y.\n      ListMem x l2 \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n  \\<Longrightarrow> wlp R1 w1 g1 f1 ?x1.0 ?l1.0 = wlp R2 w2 g2 f2 ?x2.0 l2\n  l1 = a # l2\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y\n  \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2\n  w1 x1 = w2 x2\n  \\<forall>y1 y2. y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2\n  \\<forall>x y.\n     ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n     R1 x y = R2 x y\n  \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x\n  \\<forall>x y z.\n     ListMem x (a # l2) \\<longrightarrow>\n     g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l2) \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\n\ngoal (1 subgoal):\n 1. wlp R1 w1 g1 f1 a l2 = wlp R2 w2 g2 f2 a l2", "by (simp add: elem insert)"], ["proof (state)\nthis:\n  wlp R1 w1 g1 f1 a l2 = wlp R2 w2 g2 f2 a l2\n\ngoal (2 subgoals):\n 1. \\<And>l1 x1 x2.\n       \\<lbrakk>l1 = [];\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x [] \\<and> ListMem y [] \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x [] \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x [] \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x [] \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 []\n 2. \\<And>a l2 l1 x1 x2.\n       \\<lbrakk>\\<And>l1 x1 x2.\n                   \\<lbrakk>l1 = l2;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 x1 y = R2 x2 y;\n                    \\<forall>y.\n                       ListMem y l2 \\<longrightarrow> R1 y x1 = R2 y x2;\n                    w1 x1 = w2 x2;\n                    \\<forall>y1 y2.\n                       y1 = y2 \\<longrightarrow>\n                       f1 (w1 x1) y1 = f2 (w2 x2) y2;\n                    \\<forall>y1 y2 z1 z2.\n                       y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n                       g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n                    \\<forall>x y.\n                       ListMem x l2 \\<and> ListMem y l2 \\<longrightarrow>\n                       R1 x y = R2 x y;\n                    \\<forall>x. ListMem x l2 \\<longrightarrow> w1 x = w2 x;\n                    \\<forall>x y z.\n                       ListMem x l2 \\<longrightarrow>\n                       g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n                    \\<forall>x y.\n                       ListMem x l2 \\<longrightarrow>\n                       f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n                   \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 =\n                                     wlp R2 w2 g2 f2 x2 l2;\n        l1 = a # l2;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y (a # l2) \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<and> ListMem y (a # l2) \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x (a # l2) \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x (a # l2) \\<longrightarrow>\n           f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 (a # l2)", "ultimately"], ["proof (chain)\npicking this:\n  wlp R1 w1 g1 f1 x1 l2 = wlp R2 w2 g2 f2 x2 l2\n  wlp R1 w1 g1 f1 a l2 = wlp R2 w2 g2 f2 a l2", "show ?case"], ["proof (prove)\nusing this:\n  wlp R1 w1 g1 f1 x1 l2 = wlp R2 w2 g2 f2 x2 l2\n  wlp R1 w1 g1 f1 a l2 = wlp R2 w2 g2 f2 a l2\n\ngoal (1 subgoal):\n 1. wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 (a # l2)", "by (simp add: Cons.prems(1,2, 6) elem)"], ["proof (state)\nthis:\n  wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 (a # l2)\n\ngoal (1 subgoal):\n 1. \\<And>l1 x1 x2.\n       \\<lbrakk>l1 = [];\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 x1 y = R2 x2 y;\n        \\<forall>y. ListMem y [] \\<longrightarrow> R1 y x1 = R2 y x2;\n        w1 x1 = w2 x2;\n        \\<forall>y1 y2.\n           y1 = y2 \\<longrightarrow> f1 (w1 x1) y1 = f2 (w2 x2) y2;\n        \\<forall>y1 y2 z1 z2.\n           y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n           g1 (f1 (w1 x1) y1) z1 = g2 (f2 (w2 x2) y2) z2;\n        \\<forall>x y.\n           ListMem x [] \\<and> ListMem y [] \\<longrightarrow>\n           R1 x y = R2 x y;\n        \\<forall>x. ListMem x [] \\<longrightarrow> w1 x = w2 x;\n        \\<forall>x y z.\n           ListMem x [] \\<longrightarrow>\n           g1 (f1 (w1 x) y) z = g2 (f2 (w2 x) y) z;\n        \\<forall>x y.\n           ListMem x [] \\<longrightarrow> f1 (w1 x) y = f2 (w1 x) y\\<rbrakk>\n       \\<Longrightarrow> wlp R1 w1 g1 f1 x1 l1 = wlp R2 w2 g2 f2 x2 []", "qed auto"], ["", "lemma wlp_ite_weights: \n  fixes x\n  assumes \"\\<forall>y. ListMem y l1 \\<longrightarrow> P y\" \"P x\"\n  shows \"((wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1) = (wlp R w1 g f x l1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n    wlp R w1 g f x l1", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>y. ListMem y l1 \\<longrightarrow> P y\n  P x\n\ngoal (1 subgoal):\n 1. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n    wlp R w1 g f x l1", "proof (induction l1 arbitrary: R P w1 w2 f g)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "case (Cons a l1)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> ?P y; ?P x\\<rbrakk>\n  \\<Longrightarrow> wlp ?R (\\<lambda>y. if ?P y then ?w1.0 y else ?w2.0 y)\n                     ?g ?f x l1 =\n                    wlp ?R ?w1.0 ?g ?f x l1\n  \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y\n  P x\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "let ?w1=\"(\\<lambda>y. if P y then w1 y else w2 y)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "let ?w2=\"w1\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "have \"\\<forall>y. ListMem y l1 \\<longrightarrow> P y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y. ListMem y l1 \\<longrightarrow> P y", "using Cons.prems(1) insert"], ["proof (prove)\nusing this:\n  \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y\n  ListMem ?x ?xs \\<Longrightarrow> ListMem ?x (?y # ?xs)\n\ngoal (1 subgoal):\n 1. \\<forall>y. ListMem y l1 \\<longrightarrow> P y", "by fast"], ["proof (state)\nthis:\n  \\<forall>y. ListMem y l1 \\<longrightarrow> P y\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "then"], ["proof (chain)\npicking this:\n  \\<forall>y. ListMem y l1 \\<longrightarrow> P y", "have \"((wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1) = (wlp R w1 g f x l1))\""], ["proof (prove)\nusing this:\n  \\<forall>y. ListMem y l1 \\<longrightarrow> P y\n\ngoal (1 subgoal):\n 1. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n    wlp R w1 g f x l1", "using Cons.prems(2) Cons.IH"], ["proof (prove)\nusing this:\n  \\<forall>y. ListMem y l1 \\<longrightarrow> P y\n  P x\n  \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> ?P y; ?P x\\<rbrakk>\n  \\<Longrightarrow> wlp ?R (\\<lambda>y. if ?P y then ?w1.0 y else ?w2.0 y)\n                     ?g ?f x l1 =\n                    wlp ?R ?w1.0 ?g ?f x l1\n\ngoal (1 subgoal):\n 1. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n    wlp R w1 g f x l1", "by blast"], ["proof (state)\nthis:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n  wlp R w1 g f x l1\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "}"], ["proof (state)\nthis:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n  wlp R w1 g f x l1\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "note 1 = this"], ["proof (state)\nthis:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n  wlp R w1 g f x l1\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "{"], ["proof (state)\nthis:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n  wlp R w1 g f x l1\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "have \"(if P x then w1 x else w2 x) = w1 x\" \n      \"\\<forall>y1 y2. y1 = y2 \\<longrightarrow> f (if P x then w1 x else w2 x) y1 = f (w1 x) y2\"\n      \"\\<forall>y1 y2 z1 z2. \n        y1 = y2 \\<and> z1 = z2 \n        \\<longrightarrow> g (f (if P x then w1 x else w2 x) y1) z1 = g (f (w1 x) y2) z2\"\n      \"\\<forall>x. ListMem x (a # l1) \\<longrightarrow> (if P x then w1 x else w2 x) = w1 x\"\n      \"\\<forall>x y z. \n        ListMem x (a # l1) \n        \\<longrightarrow> g (f (if P x then w1 x else w2 x) y) z = g (f (w1 x) y) z\"\n      \"\\<forall>x y.\n        ListMem x (a # l1) \\<longrightarrow> f (if P x then w1 x else w2 x) y = f (if P x then w1 x else w2 x) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((if P x then w1 x else w2 x) = w1 x &&&\n     \\<forall>y1 y2.\n        y1 = y2 \\<longrightarrow>\n        f (if P x then w1 x else w2 x) y1 = f (w1 x) y2 &&&\n     \\<forall>y1 y2 z1 z2.\n        y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n        g (f (if P x then w1 x else w2 x) y1) z1 = g (f (w1 x) y2) z2) &&&\n    \\<forall>x.\n       ListMem x (a # l1) \\<longrightarrow>\n       (if P x then w1 x else w2 x) = w1 x &&&\n    \\<forall>x y z.\n       ListMem x (a # l1) \\<longrightarrow>\n       g (f (if P x then w1 x else w2 x) y) z = g (f (w1 x) y) z &&&\n    \\<forall>x y.\n       ListMem x (a # l1) \\<longrightarrow>\n       f (if P x then w1 x else w2 x) y = f (if P x then w1 x else w2 x) y", "using Cons.prems(1, 2)"], ["proof (prove)\nusing this:\n  \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y\n  P x\n\ngoal (1 subgoal):\n 1. ((if P x then w1 x else w2 x) = w1 x &&&\n     \\<forall>y1 y2.\n        y1 = y2 \\<longrightarrow>\n        f (if P x then w1 x else w2 x) y1 = f (w1 x) y2 &&&\n     \\<forall>y1 y2 z1 z2.\n        y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n        g (f (if P x then w1 x else w2 x) y1) z1 = g (f (w1 x) y2) z2) &&&\n    \\<forall>x.\n       ListMem x (a # l1) \\<longrightarrow>\n       (if P x then w1 x else w2 x) = w1 x &&&\n    \\<forall>x y z.\n       ListMem x (a # l1) \\<longrightarrow>\n       g (f (if P x then w1 x else w2 x) y) z = g (f (w1 x) y) z &&&\n    \\<forall>x y.\n       ListMem x (a # l1) \\<longrightarrow>\n       f (if P x then w1 x else w2 x) y = f (if P x then w1 x else w2 x) y", "by simp+"], ["proof (state)\nthis:\n  (if P x then w1 x else w2 x) = w1 x\n  \\<forall>y1 y2.\n     y1 = y2 \\<longrightarrow>\n     f (if P x then w1 x else w2 x) y1 = f (w1 x) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g (f (if P x then w1 x else w2 x) y1) z1 = g (f (w1 x) y2) z2\n  \\<forall>x.\n     ListMem x (a # l1) \\<longrightarrow>\n     (if P x then w1 x else w2 x) = w1 x\n  \\<forall>x y z.\n     ListMem x (a # l1) \\<longrightarrow>\n     g (f (if P x then w1 x else w2 x) y) z = g (f (w1 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l1) \\<longrightarrow>\n     f (if P x then w1 x else w2 x) y = f (if P x then w1 x else w2 x) y\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "then"], ["proof (chain)\npicking this:\n  (if P x then w1 x else w2 x) = w1 x\n  \\<forall>y1 y2.\n     y1 = y2 \\<longrightarrow>\n     f (if P x then w1 x else w2 x) y1 = f (w1 x) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g (f (if P x then w1 x else w2 x) y1) z1 = g (f (w1 x) y2) z2\n  \\<forall>x.\n     ListMem x (a # l1) \\<longrightarrow>\n     (if P x then w1 x else w2 x) = w1 x\n  \\<forall>x y z.\n     ListMem x (a # l1) \\<longrightarrow>\n     g (f (if P x then w1 x else w2 x) y) z = g (f (w1 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l1) \\<longrightarrow>\n     f (if P x then w1 x else w2 x) y = f (if P x then w1 x else w2 x) y", "have \"wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) = wlp R w1 g f x (a # l1)\""], ["proof (prove)\nusing this:\n  (if P x then w1 x else w2 x) = w1 x\n  \\<forall>y1 y2.\n     y1 = y2 \\<longrightarrow>\n     f (if P x then w1 x else w2 x) y1 = f (w1 x) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g (f (if P x then w1 x else w2 x) y1) z1 = g (f (w1 x) y2) z2\n  \\<forall>x.\n     ListMem x (a # l1) \\<longrightarrow>\n     (if P x then w1 x else w2 x) = w1 x\n  \\<forall>x y z.\n     ListMem x (a # l1) \\<longrightarrow>\n     g (f (if P x then w1 x else w2 x) y) z = g (f (w1 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l1) \\<longrightarrow>\n     f (if P x then w1 x else w2 x) y = f (if P x then w1 x else w2 x) y\n\ngoal (1 subgoal):\n 1. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) =\n    wlp R w1 g f x (a # l1)", "using Cons wlp_congruence_rule[of \"a # l1\" \"a # l1\" R x R x \"?w1\" \"?w2\" f f g g]"], ["proof (prove)\nusing this:\n  (if P x then w1 x else w2 x) = w1 x\n  \\<forall>y1 y2.\n     y1 = y2 \\<longrightarrow>\n     f (if P x then w1 x else w2 x) y1 = f (w1 x) y2\n  \\<forall>y1 y2 z1 z2.\n     y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n     g (f (if P x then w1 x else w2 x) y1) z1 = g (f (w1 x) y2) z2\n  \\<forall>x.\n     ListMem x (a # l1) \\<longrightarrow>\n     (if P x then w1 x else w2 x) = w1 x\n  \\<forall>x y z.\n     ListMem x (a # l1) \\<longrightarrow>\n     g (f (if P x then w1 x else w2 x) y) z = g (f (w1 x) y) z\n  \\<forall>x y.\n     ListMem x (a # l1) \\<longrightarrow>\n     f (if P x then w1 x else w2 x) y = f (if P x then w1 x else w2 x) y\n  \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> ?P y; ?P x\\<rbrakk>\n  \\<Longrightarrow> wlp ?R (\\<lambda>y. if ?P y then ?w1.0 y else ?w2.0 y)\n                     ?g ?f x l1 =\n                    wlp ?R ?w1.0 ?g ?f x l1\n  \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y\n  P x\n  \\<lbrakk>a # l1 = a # l1;\n   \\<forall>y. ListMem y (a # l1) \\<longrightarrow> R x y = R x y;\n   \\<forall>y. ListMem y (a # l1) \\<longrightarrow> R y x = R y x;\n   (if P x then w1 x else w2 x) = w1 x;\n   \\<forall>y1 y2.\n      y1 = y2 \\<longrightarrow>\n      f (if P x then w1 x else w2 x) y1 = f (w1 x) y2;\n   \\<forall>y1 y2 z1 z2.\n      y1 = y2 \\<and> z1 = z2 \\<longrightarrow>\n      g (f (if P x then w1 x else w2 x) y1) z1 = g (f (w1 x) y2) z2;\n   \\<forall>x y.\n      ListMem x (a # l1) \\<and> ListMem y (a # l1) \\<longrightarrow>\n      R x y = R x y;\n   \\<forall>x.\n      ListMem x (a # l1) \\<longrightarrow>\n      (if P x then w1 x else w2 x) = w1 x;\n   \\<forall>x y z.\n      ListMem x (a # l1) \\<longrightarrow>\n      g (f (if P x then w1 x else w2 x) y) z = g (f (w1 x) y) z;\n   \\<forall>x y.\n      ListMem x (a # l1) \\<longrightarrow>\n      f (if P x then w1 x else w2 x) y =\n      f (if P x then w1 x else w2 x) y\\<rbrakk>\n  \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x\n                     (a # l1) =\n                    wlp R w1 g f x (a # l1)\n\ngoal (1 subgoal):\n 1. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) =\n    wlp R w1 g f x (a # l1)", "by blast"], ["proof (state)\nthis:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) =\n  wlp R w1 g f x (a # l1)\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "}"], ["proof (state)\nthis:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) =\n  wlp R w1 g f x (a # l1)\n\ngoal (2 subgoals):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []\n 2. \\<And>a l1 R P w1 w2 f g.\n       \\<lbrakk>\\<And>R P w1 w2 f g.\n                   \\<lbrakk>\\<forall>y. ListMem y l1 \\<longrightarrow> P y;\n                    P x\\<rbrakk>\n                   \\<Longrightarrow> wlp R\n(\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                                     wlp R w1 g f x l1;\n        \\<forall>y. ListMem y (a # l1) \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x (a # l1) =\n                         wlp R w1 g f x (a # l1)", "then"], ["proof (chain)\npicking this:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) =\n  wlp R w1 g f x (a # l1)", "show ?case"], ["proof (prove)\nusing this:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) =\n  wlp R w1 g f x (a # l1)\n\ngoal (1 subgoal):\n 1. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) =\n    wlp R w1 g f x (a # l1)", "by blast"], ["proof (state)\nthis:\n  wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x (a # l1) =\n  wlp R w1 g f x (a # l1)\n\ngoal (1 subgoal):\n 1. \\<And>R P w1 w2 f g.\n       \\<lbrakk>\\<forall>y. ListMem y [] \\<longrightarrow> P y; P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x [] =\n                         wlp R w1 g f x []", "qed auto"], ["", "lemma map_wlp_ite_weights: \"\n  (\\<forall>x. ListMem x l1 \\<longrightarrow> P x) \n  \\<Longrightarrow> (\\<forall>x. ListMem x l2 \\<longrightarrow> P x) \n  \\<Longrightarrow> (\n    map (\\<lambda>x. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1) l2 \n    = map (\\<lambda>x. wlp R w1 g f x l1) l2\n  )\n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n     \\<forall>x. ListMem x l2 \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>x.\n                              wlp R (\\<lambda>y. if P y then w1 y else w2 y)\n                               g f x l1)\n                       l2 =\n                      map (\\<lambda>x. wlp R w1 g f x l1) l2", "apply(induction l2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n     \\<forall>x. ListMem x [] \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> map (\\<lambda>x.\n                              wlp R (\\<lambda>y. if P y then w1 y else w2 y)\n                               g f x l1)\n                       [] =\n                      map (\\<lambda>x. wlp R w1 g f x l1) []\n 2. \\<And>a l2.\n       \\<lbrakk>\\<lbrakk>\\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n                 \\<forall>x. ListMem x l2 \\<longrightarrow> P x\\<rbrakk>\n                \\<Longrightarrow> map (\\<lambda>x.\n    wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1)\n                                   l2 =\n                                  map (\\<lambda>x. wlp R w1 g f x l1) l2;\n        \\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> P x\\<rbrakk>\n       \\<Longrightarrow> map (\\<lambda>x.\n                                 wlp R\n                                  (\\<lambda>y. if P y then w1 y else w2 y) g\n                                  f x l1)\n                          (a # l2) =\n                         map (\\<lambda>x. wlp R w1 g f x l1) (a # l2)", "apply(auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a l2.\n       \\<lbrakk>\\<forall>x.\n                   ListMem x l2 \\<longrightarrow> P x \\<Longrightarrow>\n                \\<forall>x\\<in>set l2.\n                   wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                   wlp R w1 g f x l1;\n        \\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> P x\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          a l1 =\n                         wlp R w1 g f a l1\n 2. \\<And>a l2 x.\n       \\<lbrakk>\\<forall>x.\n                   ListMem x l2 \\<longrightarrow> P x \\<Longrightarrow>\n                \\<forall>x\\<in>set l2.\n                   wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                   wlp R w1 g f x l1;\n        \\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> P x;\n        x \\<in> set l2\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x l1 =\n                         wlp R w1 g f x l1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                ListMem x l2_ \\<longrightarrow> P x \\<Longrightarrow>\n             \\<forall>x\\<in>set l2_.\n                wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                wlp R w1 g f x l1;\n     \\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n     \\<forall>x. ListMem x (a_ # l2_) \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f a_\n                       l1 =\n                      wlp R w1 g f a_ l1", "by (simp add: elem wlp_congruence_rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a l2 x.\n       \\<lbrakk>\\<forall>x.\n                   ListMem x l2 \\<longrightarrow> P x \\<Longrightarrow>\n                \\<forall>x\\<in>set l2.\n                   wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                   wlp R w1 g f x l1;\n        \\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n        \\<forall>x. ListMem x (a # l2) \\<longrightarrow> P x;\n        x \\<in> set l2\\<rbrakk>\n       \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                          x l1 =\n                         wlp R w1 g f x l1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x.\n                ListMem x l2_ \\<longrightarrow> P x \\<Longrightarrow>\n             \\<forall>x\\<in>set l2_.\n                wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l1 =\n                wlp R w1 g f x l1;\n     \\<forall>x. ListMem x l1 \\<longrightarrow> P x;\n     \\<forall>x. ListMem x (a_ # l2_) \\<longrightarrow> P x;\n     x_ \\<in> set l2_\\<rbrakk>\n    \\<Longrightarrow> wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x_\n                       l1 =\n                      wlp R w1 g f x_ l1", "by (simp add: insert)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma wlp_weight_lamda_exp: \"\\<And>x. wlp R w g f x l = wlp R (\\<lambda>y. w y) g f x l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. wlp R w g f x l = wlp R w g f x l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. wlp R w g f x l = wlp R w g f x l", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. wlp R w g f x l = wlp R w g f x l", "show \"wlp R w g f x l = wlp R (\\<lambda>y. w y) g f x l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp R w g f x l = wlp R w g f x l", "by(induction l) auto"], ["proof (state)\nthis:\n  wlp R w g f x l = wlp R w g f x l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma img_wlp_ite_weights: \"\n  (\\<forall>x. ListMem x l \\<longrightarrow> P x) \n  \\<Longrightarrow> (\\<forall>x. x \\<in> s \\<longrightarrow> P x) \n  \\<Longrightarrow> (\n    (\\<lambda>x. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l) ` s \n    = (\\<lambda>x. wlp R w1 g f x l) ` s\n  )\n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. ListMem x l \\<longrightarrow> P x;\n     \\<forall>x. x \\<in> s \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x.\n                          wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                           x l) `\n                      s =\n                      (\\<lambda>x. wlp R w1 g f x l) ` s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. ListMem x l \\<longrightarrow> P x;\n     \\<forall>x. x \\<in> s \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x.\n                          wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                           x l) `\n                      s =\n                      (\\<lambda>x. wlp R w1 g f x l) ` s", "assume P1: \"\\<forall>x. ListMem x l \\<longrightarrow> P x\""], ["proof (state)\nthis:\n  \\<forall>x. ListMem x l \\<longrightarrow> P x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. ListMem x l \\<longrightarrow> P x;\n     \\<forall>x. x \\<in> s \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x.\n                          wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                           x l) `\n                      s =\n                      (\\<lambda>x. wlp R w1 g f x l) ` s", "assume P2: \"\\<forall>x. x \\<in> s \\<longrightarrow> P x\""], ["proof (state)\nthis:\n  \\<forall>x. x \\<in> s \\<longrightarrow> P x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. ListMem x l \\<longrightarrow> P x;\n     \\<forall>x. x \\<in> s \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x.\n                          wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f\n                           x l) `\n                      s =\n                      (\\<lambda>x. wlp R w1 g f x l) ` s", "show \"(\n    (\\<lambda>x. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l) ` s \n    = (\\<lambda>x. wlp R w1 g f x l) ` s\n  )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l) `\n    s =\n    (\\<lambda>x. wlp R w1 g f x l) ` s", "by (auto simp add:  P1 P2 image_iff wlp_ite_weights)"], ["proof (state)\nthis:\n  (\\<lambda>x. wlp R (\\<lambda>y. if P y then w1 y else w2 y) g f x l) ` s =\n  (\\<lambda>x. wlp R w1 g f x l) ` s\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}