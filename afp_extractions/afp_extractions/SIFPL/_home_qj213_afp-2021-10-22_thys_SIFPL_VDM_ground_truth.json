{"file_name": "/home/qj213/afp-2021-10-22/thys/SIFPL/VDM.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/SIFPL", "problem_names": ["lemma VDM_valid_validn: \"\\<Turnstile> c:A \\<Longrightarrow> \\<Turnstile>\\<^sub>n c:A\"", "lemma VDM_validn_valid: \"(\\<forall> n . \\<Turnstile>\\<^sub>n c:A) \\<Longrightarrow> \\<Turnstile> c:A\"", "lemma VDM_lowerm: \"\\<lbrakk> \\<Turnstile>\\<^sub>n c:A; m \\<le> n \\<rbrakk> \\<Longrightarrow> \\<Turnstile>\\<^sub>m c:A\"", "lemma Ctxt_valid_validn: \"\\<Turnstile> G \\<Longrightarrow> \\<Turnstile>\\<^sub>n G\"", "lemma Ctxt_validn_valid: \"(\\<forall> n . \\<Turnstile>\\<^sub>n G) \\<Longrightarrow> \\<Turnstile> G\"", "lemma Ctxt_lowerm: \"\\<lbrakk> \\<Turnstile>\\<^sub>n G; m < n \\<rbrakk> \\<Longrightarrow> \\<Turnstile>\\<^sub>m G\"", "lemma validn_valid: \"(\\<forall> n . G \\<Turnstile>\\<^sub>n c : A) \\<Longrightarrow> G \\<Turnstile> c : A\"", "lemma ctxt_consn: \"\\<lbrakk> \\<Turnstile>\\<^sub>n G;  \\<Turnstile>\\<^sub>n Call:A \\<rbrakk> \\<Longrightarrow> \\<Turnstile>\\<^sub>n ({A} \\<union> G)\"", "lemma Hoare_While: \n   \"G \\<rhd> c : (\\<lambda> s s' . \\<forall> r . evalB b s \\<longrightarrow> I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    G \\<rhd> While b c : (\\<lambda> s s'. \\<forall> r . I s r \\<longrightarrow> (I s' r \\<and> \\<not> evalB b s'))\"", "lemma VDMWhile_derivable:\n  \"\\<lbrakk> G \\<rhd> c : B; \\<forall> s . (\\<not> evalB b s) \\<longrightarrow> A s s;\n     \\<forall> s r t. evalB b s \\<longrightarrow> B s r \\<longrightarrow> A r t \\<longrightarrow> A s t \\<rbrakk>\n  \\<Longrightarrow> G \\<rhd> (While b c) : (\\<lambda> s t . A s t \\<and> \\<not> (evalB b t))\"", "lemma MAX:\"Suc (max k m) \\<le> n \\<Longrightarrow> k \\<le> n \\<and> m \\<le> n\"", "lemma SoundWhileAux[rule_format]: \"SoundWhileProp n G c B b A\"", "lemma SoundWhile[rule_format]:\n  \"(\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow> (\\<forall>s. (\\<not> evalB b s) \\<longrightarrow> A s s) \\<longrightarrow>\n    (\\<forall>s. evalB b s \\<longrightarrow> (\\<forall>r. B s r \\<longrightarrow> (\\<forall>t. A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n   G \\<Turnstile>\\<^sub>n (While b c) : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t)\"", "lemma SoundCall[rule_format]:\n\"\\<lbrakk>\\<forall>n. \\<Turnstile>\\<^sub>n ({A} \\<union> G) \\<longrightarrow> \\<Turnstile>\\<^sub>n body : A\\<rbrakk> \\<Longrightarrow> \\<Turnstile>\\<^sub>n G \\<longrightarrow> \\<Turnstile>\\<^sub>n Call : A\"", "lemma VDM_Sound_n: \"G \\<rhd> c: A \\<Longrightarrow> (\\<forall> n . G \\<Turnstile>\\<^sub>n c:A)\"", "theorem VDM_Sound: \"G \\<rhd> c: A \\<Longrightarrow> G \\<Turnstile> c:A\"", "lemma VDM_Sound_emptyCtxt:\"{} \\<rhd> c : A \\<Longrightarrow> \\<Turnstile> c : A\"", "lemma WEAK[rule_format]: \n  \"G \\<rhd> c : A \\<Longrightarrow> (\\<forall> H . G \\<subseteq> H \\<longrightarrow> H \\<rhd> c :A)\"", "lemma CutAux1:\"(H \\<rhd> c : A) \\<Longrightarrow> CutAuxProp H c A\"", "lemma CutAux: \n  \"\\<lbrakk>H \\<rhd> c : A; H = insert P D; G \\<rhd> Call :P; G \\<subseteq> D\\<rbrakk> \\<Longrightarrow> D \\<rhd> c:A\"", "lemma Cut:\"\\<lbrakk> G \\<rhd> Call : P ; (insert P G) \\<rhd> c : A \\<rbrakk> \\<Longrightarrow> G \\<rhd> c : A\"", "lemma verified_preserved: \"\\<lbrakk>verified G; A:G\\<rbrakk> \\<Longrightarrow> verified (G - {A})\"", "lemma SetNonSingleton:\n  \"\\<lbrakk>G \\<noteq> {A}; A \\<in> G\\<rbrakk> \\<Longrightarrow> \\<exists>B. B \\<noteq> A \\<and> B \\<in> G\"", "lemma MutrecAux[rule_format]: \n\"\\<forall> G . ((finite G \\<and> card G = n \\<and> verified G \\<and> A : G) \\<longrightarrow> {} \\<rhd> Call:A)\"", "theorem Mutrec:\n\"\\<lbrakk> finite G; card G = n; verified G; A : G \\<rbrakk> \\<Longrightarrow> {} \\<rhd> Call:A\"", "lemma Ctxt_verified_valid: \"\\<lbrakk>verified G; finite G\\<rbrakk> \\<Longrightarrow> \\<Turnstile> G\"", "lemma SSpec_valid: \"\\<Turnstile> c : (SSpec c)\"", "lemma SSpec_strong: \"\\<Turnstile> c :A \\<Longrightarrow> \\<forall> s t . SSpec c s t \\<longrightarrow> A s t\"", "lemma SSpec_derivable:\"G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c : SSpec c\"", "lemma StrongG_Body: \"StrongG \\<rhd> body : SSpec Call\"", "lemma StrongG_verified: \"verified StrongG\"", "lemma SSpec_derivable_empty:\"{} \\<rhd> c : SSpec c\"", "theorem VDM_Complete: \"\\<Turnstile> c : A \\<Longrightarrow> {} \\<rhd> c : A\"", "lemma Ctxt_valid_verified: \"\\<Turnstile> G \\<Longrightarrow> verified G\""], "translations": [["", "lemma VDM_valid_validn: \"\\<Turnstile> c:A \\<Longrightarrow> \\<Turnstile>\\<^sub>n c:A\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : A  \\<Longrightarrow>  \\<Turnstile>\\<^sub>n c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : A  \\<Longrightarrow>  \\<Turnstile>\\<^sub>n c : A", "by (simp add: VDM_valid_def VDM_validn_def Sem_def, fastforce)"], ["", "(*>*)"], ["", "lemma VDM_validn_valid: \"(\\<forall> n . \\<Turnstile>\\<^sub>n c:A) \\<Longrightarrow> \\<Turnstile> c:A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.  \\<Turnstile>\\<^sub>n c : A  \\<Longrightarrow>\n     \\<Turnstile> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.  \\<Turnstile>\\<^sub>n c : A  \\<Longrightarrow>\n     \\<Turnstile> c : A", "by (simp add: VDM_valid_def VDM_validn_def Sem_def, fastforce)"], ["", "(*>*)"], ["", "lemma VDM_lowerm: \"\\<lbrakk> \\<Turnstile>\\<^sub>n c:A; m \\<le> n \\<rbrakk> \\<Longrightarrow> \\<Turnstile>\\<^sub>m c:A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> \\<Turnstile>\\<^sub>n c : A ; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile>\\<^sub>m c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> \\<Turnstile>\\<^sub>n c : A ; m \\<le> n\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile>\\<^sub>m c : A", "apply (simp add: VDM_validn_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ma s t.\n       \\<lbrakk>\\<forall>m\\<le>n.\n                   \\<forall>s t.\n                       s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                      A s t;\n        m \\<le> n; ma \\<le> m;  s , c \\<rightarrow>\\<^sub>ma  t \\<rbrakk>\n       \\<Longrightarrow> A s t", "apply (erule_tac x=\"ma\" in allE, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Proof contexts are simply sets of assertions -- each entry\nrepresents an assumption for the unnamed procedure. In particular, a\ncontext is valid if each entry is satisfied by the method call\ninstruction.\\<close>"], ["", "definition Ctxt_valid :: \"VDMAssn set \\<Rightarrow> bool\" (\" \\<Turnstile> _ \" [100] 100)\nwhere \"\\<Turnstile> G = (\\<forall> A . A \\<in> G \\<longrightarrow> (\\<Turnstile> Call : A))\""], ["", "text\\<open>Again, a relativised sibling \\ldots\\<close>"], ["", "definition Ctxt_validn :: \"nat \\<Rightarrow> (VDMAssn set) \\<Rightarrow> bool\"\n                         (\" \\<Turnstile>\\<^sub>_ _  \" [100,100] 100)\nwhere \"\\<Turnstile>\\<^sub>n G = (\\<forall> m . m \\<le> n \\<longrightarrow> (\\<forall> A. A \\<in> G \\<longrightarrow> ( \\<Turnstile>\\<^sub>m Call : A)))\""], ["", "text\\<open>satisfies the obvious properties.\\<close>"], ["", "lemma Ctxt_valid_validn: \"\\<Turnstile> G \\<Longrightarrow> \\<Turnstile>\\<^sub>n G\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> G  \\<Longrightarrow>  \\<Turnstile>\\<^sub>n G", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> G  \\<Longrightarrow>  \\<Turnstile>\\<^sub>n G", "apply (simp add: Ctxt_valid_def Ctxt_validn_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<forall>A.\n                   A \\<in> G \\<longrightarrow>  \\<Turnstile> Call : A ;\n        m \\<le> n; A \\<in> G\\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>m Call : A", "apply (rule VDM_valid_validn)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<forall>A.\n                   A \\<in> G \\<longrightarrow>  \\<Turnstile> Call : A ;\n        m \\<le> n; A \\<in> G\\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile> Call : A", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma Ctxt_validn_valid: \"(\\<forall> n . \\<Turnstile>\\<^sub>n G) \\<Longrightarrow> \\<Turnstile> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.  \\<Turnstile>\\<^sub>n G   \\<Longrightarrow>  \\<Turnstile> G", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.  \\<Turnstile>\\<^sub>n G   \\<Longrightarrow>  \\<Turnstile> G", "apply (simp add: Ctxt_valid_def Ctxt_validn_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>n m.\n                   m \\<le> n \\<longrightarrow>\n                   (\\<forall>A.\n                       A \\<in> G \\<longrightarrow>\n                        \\<Turnstile>\\<^sub>m Call : A );\n        A \\<in> G\\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile> Call : A", "apply (rule VDM_validn_valid)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>n m.\n                   m \\<le> n \\<longrightarrow>\n                   (\\<forall>A.\n                       A \\<in> G \\<longrightarrow>\n                        \\<Turnstile>\\<^sub>m Call : A );\n        A \\<in> G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.  \\<Turnstile>\\<^sub>n Call : A", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma Ctxt_lowerm: \"\\<lbrakk> \\<Turnstile>\\<^sub>n G; m < n \\<rbrakk> \\<Longrightarrow> \\<Turnstile>\\<^sub>m G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> \\<Turnstile>\\<^sub>n G  ; m < n\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile>\\<^sub>m G", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> \\<Turnstile>\\<^sub>n G  ; m < n\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile>\\<^sub>m G", "by (simp add: Ctxt_validn_def)"], ["", "(*>*)"], ["", "text\\<open>A judgement is valid if the validity of the context implies that\nof the commmand-assertion pair.\\<close>"], ["", "definition valid :: \"(VDMAssn set) \\<Rightarrow> IMP \\<Rightarrow> VDMAssn \\<Rightarrow> bool\"\n                    (\"_ \\<Turnstile> _ : _ \" [100,100,100] 100)\nwhere \"G \\<Turnstile> c : A = (\\<Turnstile> G \\<longrightarrow> \\<Turnstile> c : A)\""], ["", "text\\<open>And, again, a relatived notion of judgement validity.\\<close>"], ["", "definition validn :: \n \"(VDMAssn set) \\<Rightarrow> nat \\<Rightarrow> IMP \\<Rightarrow> VDMAssn \\<Rightarrow> bool\"\n  (\"_ \\<Turnstile>\\<^sub>_ _ : _\" [100,100,100,100] 100)\nwhere \"G \\<Turnstile>\\<^sub>n c : A = (\\<Turnstile>\\<^sub>n G \\<longrightarrow> \\<Turnstile>\\<^sub>n c : A)\""], ["", "lemma validn_valid: \"(\\<forall> n . G \\<Turnstile>\\<^sub>n c : A) \\<Longrightarrow> G \\<Turnstile> c : A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. G \\<Turnstile>\\<^sub>n c : A \\<Longrightarrow>\n    G \\<Turnstile> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. G \\<Turnstile>\\<^sub>n c : A \\<Longrightarrow>\n    G \\<Turnstile> c : A", "apply (simp add: valid_def validn_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n.\n                 \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n                 \\<Turnstile>\\<^sub>n c : A ;\n      \\<Turnstile> G \\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile> c : A", "apply (rule VDM_validn_valid, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n c : A ;\n         \\<Turnstile> G \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>n c : A", "apply (erule_tac x=n in allE, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.  \\<Turnstile> G  \\<Longrightarrow>  \\<Turnstile>\\<^sub>n G", "apply (erule Ctxt_valid_validn)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma ctxt_consn: \"\\<lbrakk> \\<Turnstile>\\<^sub>n G;  \\<Turnstile>\\<^sub>n Call:A \\<rbrakk> \\<Longrightarrow> \\<Turnstile>\\<^sub>n ({A} \\<union> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> \\<Turnstile>\\<^sub>n G  ;\n      \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile>\\<^sub>n ({A} \\<union> G)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> \\<Turnstile>\\<^sub>n G  ;\n      \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile>\\<^sub>n ({A} \\<union> G)", "apply (simp add: Ctxt_validn_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m\\<le>n.\n                \\<forall>A.\n                   A \\<in> G \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>m Call : A ;\n      \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n    \\<Longrightarrow> \\<forall>m\\<le>n.  \\<Turnstile>\\<^sub>m Call : A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>m\\<le>n.\n                   \\<forall>A.\n                      A \\<in> G \\<longrightarrow>\n                       \\<Turnstile>\\<^sub>m Call : A ;\n         \\<Turnstile>\\<^sub>n Call : A ; m \\<le> n\\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>m Call : A", "apply (erule_tac x=m in allE, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk> \\<Turnstile>\\<^sub>n Call : A ; m \\<le> n;\n        \\<forall>A.\n           A \\<in> G \\<longrightarrow>\n            \\<Turnstile>\\<^sub>m Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>m Call : A", "apply (erule VDM_lowerm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>m \\<le> n;\n        \\<forall>A.\n           A \\<in> G \\<longrightarrow>\n            \\<Turnstile>\\<^sub>m Call : A \\<rbrakk>\n       \\<Longrightarrow> m \\<le> n", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "subsection\\<open>Proof system\\<close>"], ["", "inductive_set\n  VDM_proof :: \"(VDMAssn set \\<times> IMP \\<times> VDMAssn) set\"\nwhere\n\nVDMSkip:   \"(G, Skip, \\<lambda> s t . t=s) : VDM_proof\"\n\n| VDMAssign:\n  \"(G, Assign x e, \\<lambda> s t . t = (update s x (evalE e s))) : VDM_proof\"\n\n| VDMComp:\n  \"\\<lbrakk> (G, c1, A1) : VDM_proof; (G, c2, A2) : VDM_proof\\<rbrakk> \\<Longrightarrow>\n   (G, Comp c1 c2, \\<lambda> s t . \\<exists> r . A1 s r \\<and> A2 r t) : VDM_proof\"\n\n| VDMIff:\n  \"\\<lbrakk> (G, c1, A):VDM_proof; (G, c2, B):VDM_proof\\<rbrakk> \\<Longrightarrow>\n   (G, Iff b c1 c2, \\<lambda> s t . (((evalB b s) \\<longrightarrow> A s t) \\<and> \n                                    ((\\<not> (evalB b s)) \\<longrightarrow> B s t))) : VDM_proof\"\n\n(*VDMWhile:  \"\\<lbrakk>\\<rhd> C : (\\<lambda> s t . (evalB b s \\<longrightarrow> I s t)); Trans I; Refl I\\<rbrakk>\n            \\<Longrightarrow> \\<rhd> (While b C) : (\\<lambda> s t . I s t \\<and> \\<not> (evalB b t))\"*)\n| VDMWhile:\n  \"\\<lbrakk> (G, c, B):VDM_proof;  \\<forall> s . (\\<not> evalB b s) \\<longrightarrow> A s s;\n             \\<forall> s r t. evalB b s \\<longrightarrow> B s r \\<longrightarrow> A r t \\<longrightarrow> A s t \\<rbrakk> \\<Longrightarrow>\n   (G, While b c, \\<lambda> s t . A s t \\<and> \\<not> (evalB b t)) : VDM_proof\"\n\n| VDMCall:\n  \"({A} \\<union> G, body, A):VDM_proof \\<Longrightarrow> (G, Call, A):VDM_proof\"\n\n| VDMAx: \"A \\<in> G \\<Longrightarrow>  (G, Call, A):VDM_proof\"\n\n| VDMConseq:\n  \"\\<lbrakk> (G, c, A):VDM_proof; \\<forall> s t. A s t \\<longrightarrow> B s t\\<rbrakk> \\<Longrightarrow>\n   (G, c, B):VDM_proof\""], ["", "(*\nVDMSkip:   \"G \\<rhd> Skip : (\\<lambda> s t . t=s)\"\nVDMAssign: \"G \\<rhd> (Assign x e) : (\\<lambda> s t . t = (update s x (evalE e s)))\"\nVDMComp:   \"\\<lbrakk> G \\<rhd> c1:A1; G \\<rhd> c2:A2\\<rbrakk> \n           \\<Longrightarrow> G \\<rhd> (Comp c1 c2) : (\\<lambda> s t . \\<exists> r . A1 s r \\<and> A2 r t)\"\nVDMIff:    \"\\<lbrakk> G \\<rhd> c1 : A; G \\<rhd> c2 :B\\<rbrakk>\n            \\<Longrightarrow> G \\<rhd> (Iff b c1 c2) : (\\<lambda> s t . (((evalB b s) \\<longrightarrow> A s t) \\<and> \n                                             ((\\<not> (evalB b s)) \\<longrightarrow> B s t)))\"\n(*VDMWhile:  \"\\<lbrakk>\\<rhd> C : (\\<lambda> s t . (evalB b s \\<longrightarrow> I s t)); Trans I; Refl I\\<rbrakk>\n            \\<Longrightarrow> \\<rhd> (While b C) : (\\<lambda> s t . I s t \\<and> \\<not> (evalB b t))\"*)\nVDMWhile:  \"\\<lbrakk> G \\<rhd> c : B; \n              \\<forall> s . (\\<not> evalB b s) \\<longrightarrow> A s s;\n              \\<forall> s r t. evalB b s \\<longrightarrow> B s r \\<longrightarrow> A r t \\<longrightarrow> A s t \\<rbrakk>\n            \\<Longrightarrow> G \\<rhd> (While b c) : (\\<lambda> s t . A s t \\<and> \\<not> (evalB b t))\"\nVDMCall: \"({A} \\<union> G) \\<rhd> body : A \\<Longrightarrow> G \\<rhd> Call : A\"\nVDMAx: \"A \\<in> G \\<Longrightarrow>  G \\<rhd> Call : A\"\nVDMConseq: \"\\<lbrakk> G \\<rhd> c : A; \\<forall> s t. A s t \\<longrightarrow> B s t\\<rbrakk> \\<Longrightarrow> G \\<rhd> c : B\"\n*)"], ["", "abbreviation\n  VDM_deriv :: \"[VDMAssn set, IMP, VDMAssn] \\<Rightarrow> bool\"\n                (\"_ \\<rhd> _ : _\" [100,100,100] 100)\nwhere \"G \\<rhd> c : A == (G,c,A) \\<in> VDM_proof\""], ["", "text\\<open>The while-rule is in fact inter-derivable with the following rule.\\<close>"], ["", "lemma Hoare_While: \n   \"G \\<rhd> c : (\\<lambda> s s' . \\<forall> r . evalB b s \\<longrightarrow> I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    G \\<rhd> While b c : (\\<lambda> s s'. \\<forall> r . I s r \\<longrightarrow> (I s' r \\<and> \\<not> evalB b s'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    G \\<rhd> While b\n              c : (\\<lambda>s s'.\n                      \\<forall>r.\n                         I s r \\<longrightarrow>\n                         I s' r \\<and> \\<not> evalB b s')", "apply (subgoal_tac \"G \\<rhd> (While b c) : \n           (\\<lambda> s t . (\\<lambda> s t . \\<forall>r. I s r \\<longrightarrow> I t r) s t \\<and> \\<not> (evalB b t))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<rhd> c : (\\<lambda>s s'.\n                              \\<forall>r.\n                                 evalB b s \\<longrightarrow>\n                                 I s r \\<longrightarrow> I s' r);\n     G \\<rhd> While b\n               c : (\\<lambda>s t.\n                       (\\<forall>r. I s r \\<longrightarrow> I t r) \\<and>\n                       \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> G \\<rhd> While b\n                                c : (\\<lambda>s s'.\n  \\<forall>r. I s r \\<longrightarrow> I s' r \\<and> \\<not> evalB b s')\n 2. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    G \\<rhd> While b\n              c : (\\<lambda>s t.\n                      (\\<forall>r. I s r \\<longrightarrow> I t r) \\<and>\n                      \\<not> evalB b t)", "apply (erule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    \\<forall>s t.\n       (\\<forall>r. I s r \\<longrightarrow> I t r) \\<and>\n       \\<not> evalB b t \\<longrightarrow>\n       (\\<forall>r. I s r \\<longrightarrow> I t r \\<and> \\<not> evalB b t)\n 2. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    G \\<rhd> While b\n              c : (\\<lambda>s t.\n                      (\\<forall>r. I s r \\<longrightarrow> I t r) \\<and>\n                      \\<not> evalB b t)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    G \\<rhd> While b\n              c : (\\<lambda>s t.\n                      (\\<forall>r. I s r \\<longrightarrow> I t r) \\<and>\n                      \\<not> evalB b t)", "apply (rule VDMWhile)"], ["proof (prove)\ngoal (3 subgoals):\n 1. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    G \\<rhd> c : ?B5\n 2. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    \\<forall>s.\n       \\<not> evalB b s \\<longrightarrow>\n       (\\<forall>r. I s r \\<longrightarrow> I s r)\n 3. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    \\<forall>s r t.\n       evalB b s \\<longrightarrow>\n       ?B5 s r \\<longrightarrow>\n       (\\<forall>ra. I r ra \\<longrightarrow> I t ra) \\<longrightarrow>\n       (\\<forall>r. I s r \\<longrightarrow> I t r)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    \\<forall>s.\n       \\<not> evalB b s \\<longrightarrow>\n       (\\<forall>r. I s r \\<longrightarrow> I s r)\n 2. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    \\<forall>s r t.\n       evalB b s \\<longrightarrow>\n       (\\<forall>ra.\n           evalB b s \\<longrightarrow>\n           I s ra \\<longrightarrow> I r ra) \\<longrightarrow>\n       (\\<forall>ra. I r ra \\<longrightarrow> I t ra) \\<longrightarrow>\n       (\\<forall>r. I s r \\<longrightarrow> I t r)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : (\\<lambda>s s'.\n                     \\<forall>r.\n                        evalB b s \\<longrightarrow>\n                        I s r \\<longrightarrow> I s' r) \\<Longrightarrow>\n    \\<forall>s r t.\n       evalB b s \\<longrightarrow>\n       (\\<forall>ra.\n           evalB b s \\<longrightarrow>\n           I s ra \\<longrightarrow> I r ra) \\<longrightarrow>\n       (\\<forall>ra. I r ra \\<longrightarrow> I t ra) \\<longrightarrow>\n       (\\<forall>r. I s r \\<longrightarrow> I t r)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>Here's the proof in the opposite direction.\\<close>"], ["", "lemma VDMWhile_derivable:\n  \"\\<lbrakk> G \\<rhd> c : B; \\<forall> s . (\\<not> evalB b s) \\<longrightarrow> A s s;\n     \\<forall> s r t. evalB b s \\<longrightarrow> B s r \\<longrightarrow> A r t \\<longrightarrow> A s t \\<rbrakk>\n  \\<Longrightarrow> G \\<rhd> (While b c) : (\\<lambda> s t . A s t \\<and> \\<not> (evalB b t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<rhd> c : B;\n     \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s r t.\n        evalB b s \\<longrightarrow>\n        B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> G \\<rhd> While b\n                                c : (\\<lambda>s t.\n  A s t \\<and> \\<not> evalB b t)", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<rhd> c : B;\n     \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s r t.\n        evalB b s \\<longrightarrow>\n        B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> G \\<rhd> While b c : ?A\n 2. \\<lbrakk>G \\<rhd> c : B;\n     \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s r t.\n        evalB b s \\<longrightarrow>\n        B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         ?A s t \\<longrightarrow>\n                         A s t \\<and> \\<not> evalB b t", "apply (rule Hoare_While [of G c b \"\\<lambda> s r . \\<forall> t . A s t \\<longrightarrow> A r t\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>G \\<rhd> c : B;\n     \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s r t.\n        evalB b s \\<longrightarrow>\n        B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> G \\<rhd> c : (\\<lambda>s s'.\n \\<forall>r.\n    evalB b s \\<longrightarrow>\n    (\\<forall>t. A s t \\<longrightarrow> A r t) \\<longrightarrow>\n    (\\<forall>t. A s' t \\<longrightarrow> A r t))\n 2. \\<lbrakk>G \\<rhd> c : B;\n     \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s r t.\n        evalB b s \\<longrightarrow>\n        B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (\\<forall>r.\n                             (\\<forall>t.\n                                 A s t \\<longrightarrow>\n                                 A r t) \\<longrightarrow>\n                             (\\<forall>ta.\n                                 A t ta \\<longrightarrow> A r ta) \\<and>\n                             \\<not> evalB b t) \\<longrightarrow>\n                         A s t \\<and> \\<not> evalB b t", "apply (erule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s r t.\n        evalB b s \\<longrightarrow>\n        B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         B s t \\<longrightarrow>\n                         (\\<forall>r.\n                             evalB b s \\<longrightarrow>\n                             (\\<forall>t.\n                                 A s t \\<longrightarrow>\n                                 A r t) \\<longrightarrow>\n                             (\\<forall>ta. A t ta \\<longrightarrow> A r ta))\n 2. \\<lbrakk>G \\<rhd> c : B;\n     \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s r t.\n        evalB b s \\<longrightarrow>\n        B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (\\<forall>r.\n                             (\\<forall>t.\n                                 A s t \\<longrightarrow>\n                                 A r t) \\<longrightarrow>\n                             (\\<forall>ta.\n                                 A t ta \\<longrightarrow> A r ta) \\<and>\n                             \\<not> evalB b t) \\<longrightarrow>\n                         A s t \\<and> \\<not> evalB b t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<rhd> c : B;\n     \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s r t.\n        evalB b s \\<longrightarrow>\n        B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (\\<forall>r.\n                             (\\<forall>t.\n                                 A s t \\<longrightarrow>\n                                 A r t) \\<longrightarrow>\n                             (\\<forall>ta.\n                                 A t ta \\<longrightarrow> A r ta) \\<and>\n                             \\<not> evalB b t) \\<longrightarrow>\n                         A s t \\<and> \\<not> evalB b t", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection\\<open>Soundness\\<close>"], ["", "(*<*)"], ["", "lemma MAX:\"Suc (max k m) \\<le> n \\<Longrightarrow> k \\<le> n \\<and> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (max k m) \\<le> n \\<Longrightarrow> k \\<le> n \\<and> m \\<le> n", "by (simp add: max_def, case_tac \"k \\<le> m\", simp+)"], ["", "(*>*)\n\n(*<*)"], ["", "definition SoundWhileProp::\"nat \\<Rightarrow> (VDMAssn set) \\<Rightarrow> IMP \\<Rightarrow> VDMAssn \\<Rightarrow> BExpr \\<Rightarrow> VDMAssn \\<Rightarrow> bool\"\nwhere \"SoundWhileProp n G c B b A =\n   ((\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow> (\\<forall>s. (\\<not> evalB b s) \\<longrightarrow> A s s) \\<longrightarrow>\n    (\\<forall>s. evalB b s \\<longrightarrow> (\\<forall>r. B s r \\<longrightarrow> (\\<forall>t. A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n   G \\<Turnstile>\\<^sub>n (While b c) : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t))\""], ["", "lemma SoundWhileAux[rule_format]: \"SoundWhileProp n G c B b A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SoundWhileProp n G c B b A", "apply (induct n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. SoundWhileProp 0 G c B b A\n 2. \\<And>n.\n       SoundWhileProp n G c B b A \\<Longrightarrow>\n       SoundWhileProp (Suc n) G c B b A", "apply (simp_all add: SoundWhileProp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n    (\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n    (\\<forall>s.\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            B s r \\<longrightarrow>\n            (\\<forall>t. A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n    G \\<Turnstile>\\<^sub>0 While b\n                            c : (\\<lambda>s t.\n                                    A s t \\<and> \\<not> evalB b t)\n 2. \\<And>n.\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>n While b\n                               c : (\\<lambda>s t.\n A s t \\<and> \\<not> evalB b t) \\<Longrightarrow>\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>Suc n While b\n                                   c : (\\<lambda>s t.\n     A s t \\<and> \\<not> evalB b t)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m. G \\<Turnstile>\\<^sub>m c : B;\n     \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n     \\<forall>s.\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            B s r \\<longrightarrow>\n            (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n    \\<Longrightarrow> G \\<Turnstile>\\<^sub>0 While b\n        c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t)\n 2. \\<And>n.\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>n While b\n                               c : (\\<lambda>s t.\n A s t \\<and> \\<not> evalB b t) \\<Longrightarrow>\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>Suc n While b\n                                   c : (\\<lambda>s t.\n     A s t \\<and> \\<not> evalB b t)", "apply (simp add: validn_def VDM_validn_def, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>0 G  ;\n         s , While b c \\<rightarrow>\\<^sub>0  t \\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t\n 2. \\<And>n.\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>n While b\n                               c : (\\<lambda>s t.\n A s t \\<and> \\<not> evalB b t) \\<Longrightarrow>\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>Suc n While b\n                                   c : (\\<lambda>s t.\n     A s t \\<and> \\<not> evalB b t)", "apply (drule Sem_no_zero_height_derivs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>0 G  ; False\\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t\n 2. \\<And>n.\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>n While b\n                               c : (\\<lambda>s t.\n A s t \\<and> \\<not> evalB b t) \\<Longrightarrow>\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>Suc n While b\n                                   c : (\\<lambda>s t.\n     A s t \\<and> \\<not> evalB b t)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>n While b\n                               c : (\\<lambda>s t.\n A s t \\<and> \\<not> evalB b t) \\<Longrightarrow>\n       (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n       (\\<forall>s.\n           \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n       (\\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t.\n                   A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n       G \\<Turnstile>\\<^sub>Suc n While b\n                                   c : (\\<lambda>s t.\n     A s t \\<and> \\<not> evalB b t)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>m. G \\<Turnstile>\\<^sub>m c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        G \\<Turnstile>\\<^sub>n While b\n                                c : (\\<lambda>s t.\n  A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n       \\<Longrightarrow> G \\<Turnstile>\\<^sub>Suc\n         n While b c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t)", "apply (simp add: validn_def VDM_validn_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m s t.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               A s t \\<and> \\<not> evalB b t);\n         \\<Turnstile>\\<^sub>Suc n G  ; m \\<le> Suc n;\n         s , While b c \\<rightarrow>\\<^sub>m  t \\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "apply (erule Sem_eval_cases)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s t na r ma.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               A s t \\<and> \\<not> evalB b t);\n         \\<Turnstile>\\<^sub>Suc n G  ; m \\<le> Suc n; m = Suc (max na ma);\n        evalB b s;  s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t \\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t\n 2. \\<And>n m s t.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               A s t \\<and> \\<not> evalB b t);\n         \\<Turnstile>\\<^sub>Suc n G  ; m \\<le> Suc n; m = Suc 0; t = s;\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m s t.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               A s t \\<and> \\<not> evalB b t);\n         \\<Turnstile>\\<^sub>Suc n G  ; m \\<le> Suc n; m = Suc 0; t = s;\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t\n 2. \\<And>n m s t na r ma.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               A s t \\<and> \\<not> evalB b t);\n         \\<Turnstile>\\<^sub>Suc n G  ; m \\<le> Suc n; m = Suc (max na ma);\n        evalB b s;  s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t \\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m s t na r ma.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               A s t \\<and> \\<not> evalB b t);\n         \\<Turnstile>\\<^sub>Suc n G  ; m \\<le> Suc n; m = Suc (max na ma);\n        evalB b s;  s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t \\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>m.\n                    \\<Turnstile>\\<^sub>m G   \\<longrightarrow>\n                   (\\<forall>ma\\<le>m.\n                       \\<forall>s t.\n                           s , c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n                          B s t);\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               A s t \\<and> \\<not> evalB b t);\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n;\n        ma \\<le> n\\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "apply (erule_tac x=n in allE, erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               B s t)\\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>n G  \n 2. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow> B s t);\n        \\<forall>m\\<le>n.\n           \\<forall>s t.\n               s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n              A s t \\<and> \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "apply (erule Ctxt_lowerm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        evalB b s;  s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               B s t)\\<rbrakk>\n       \\<Longrightarrow> n < Suc n\n 2. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow> B s t);\n        \\<forall>m\\<le>n.\n           \\<forall>s t.\n               s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n              A s t \\<and> \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow> B s t);\n        \\<forall>m\\<le>n.\n           \\<forall>s t.\n               s , While b c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n              A s t \\<and> \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>m\\<le>n.\n                   \\<forall>s t.\n                       s , While b\n                            c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                      A s t \\<and> \\<not> evalB b t;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n               B s t)\\<rbrakk>\n       \\<Longrightarrow> A s t \\<and> \\<not> evalB b t", "apply (erule_tac x=ma in allE, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n        (\\<forall>m\\<le>n.\n            \\<forall>s t.\n                s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow> B s t);\n        \\<forall>s t.\n            s , While b c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n           A s t \\<and> \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> A s t", "apply(erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n        \\<forall>s t.\n            s , While b c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n           A s t \\<and> \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>n G  \n 2. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n        \\<forall>s t.\n            s , While b c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n           A s t \\<and> \\<not> evalB b t;\n        \\<forall>m\\<le>n.\n           \\<forall>s t.\n               s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n              B s t\\<rbrakk>\n       \\<Longrightarrow> A s t", "apply (erule Ctxt_lowerm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        evalB b s;  s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n        \\<forall>s t.\n            s , While b c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n           A s t \\<and> \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> n < Suc n\n 2. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n        \\<forall>s t.\n            s , While b c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n           A s t \\<and> \\<not> evalB b t;\n        \\<forall>m\\<le>n.\n           \\<forall>s t.\n               s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n              B s t\\<rbrakk>\n       \\<Longrightarrow> A s t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n        \\<forall>s t.\n            s , While b c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n           A s t \\<and> \\<not> evalB b t;\n        \\<forall>m\\<le>n.\n           \\<forall>s t.\n               s , c \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n              B s t\\<rbrakk>\n       \\<Longrightarrow> A s t", "apply (erule_tac x=na in allE, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n s t na r ma.\n       \\<lbrakk>\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n         \\<Turnstile>\\<^sub>Suc n G  ; evalB b s;\n         s , c \\<rightarrow>\\<^sub>na  r ;\n         r , While b c \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n        \\<forall>s t.\n            s , While b c \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n           A s t \\<and> \\<not> evalB b t;\n        \\<forall>s t.\n            s , c \\<rightarrow>\\<^sub>na  t  \\<longrightarrow>\n           B s t\\<rbrakk>\n       \\<Longrightarrow> A s t", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>An auxiliary lemma stating the soundness of the while rule. Its\nproof is by induction on $n$.\\<close>"], ["", "lemma SoundWhile[rule_format]:\n  \"(\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow> (\\<forall>s. (\\<not> evalB b s) \\<longrightarrow> A s s) \\<longrightarrow>\n    (\\<forall>s. evalB b s \\<longrightarrow> (\\<forall>r. B s r \\<longrightarrow> (\\<forall>t. A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n   G \\<Turnstile>\\<^sub>n (While b c) : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n    (\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n    (\\<forall>s.\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            B s r \\<longrightarrow>\n            (\\<forall>t. A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n    G \\<Turnstile>\\<^sub>n While b\n                            c : (\\<lambda>s t.\n                                    A s t \\<and> \\<not> evalB b t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n    (\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n    (\\<forall>s.\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            B s r \\<longrightarrow>\n            (\\<forall>t. A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n    G \\<Turnstile>\\<^sub>n While b\n                            c : (\\<lambda>s t.\n                                    A s t \\<and> \\<not> evalB b t)", "apply (subgoal_tac \"SoundWhileProp n G c B b A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. SoundWhileProp n G c B b A \\<Longrightarrow>\n    (\\<forall>m. G \\<Turnstile>\\<^sub>m c : B) \\<longrightarrow>\n    (\\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s) \\<longrightarrow>\n    (\\<forall>s.\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            B s r \\<longrightarrow>\n            (\\<forall>t. A r t \\<longrightarrow> A s t))) \\<longrightarrow>\n    G \\<Turnstile>\\<^sub>n While b\n                            c : (\\<lambda>s t.\n                                    A s t \\<and> \\<not> evalB b t)\n 2. SoundWhileProp n G c B b A", "apply (simp add: SoundWhileProp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. SoundWhileProp n G c B b A", "apply (rule SoundWhileAux)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Similarly, an auxiliary lemma for procedure invocations. Again,\nthe proof proceeds by induction on $n$.\\<close>"], ["", "lemma SoundCall[rule_format]:\n\"\\<lbrakk>\\<forall>n. \\<Turnstile>\\<^sub>n ({A} \\<union> G) \\<longrightarrow> \\<Turnstile>\\<^sub>n body : A\\<rbrakk> \\<Longrightarrow> \\<Turnstile>\\<^sub>n G \\<longrightarrow> \\<Turnstile>\\<^sub>n Call : A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n        \\<Turnstile>\\<^sub>n ({A} \\<union> G)   \\<longrightarrow>\n        \\<Turnstile>\\<^sub>n body : A  \\<Longrightarrow>\n     \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n     \\<Turnstile>\\<^sub>n Call : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n        \\<Turnstile>\\<^sub>n ({A} \\<union> G)   \\<longrightarrow>\n        \\<Turnstile>\\<^sub>n body : A  \\<Longrightarrow>\n     \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n     \\<Turnstile>\\<^sub>n Call : A", "apply (induct_tac n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>n.\n        \\<Turnstile>\\<^sub>n ({A} \\<union> G)   \\<longrightarrow>\n        \\<Turnstile>\\<^sub>n body : A  \\<Longrightarrow>\n     \\<Turnstile>\\<^sub>0 G   \\<longrightarrow>\n     \\<Turnstile>\\<^sub>0 Call : A \n 2. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n ({A} \\<union>\n    G)   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n G   \\<longrightarrow>\n                          \\<Turnstile>\\<^sub>Suc n Call : A", "apply (simp add: VDM_validn_def, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                   (\\<forall>m\\<le>n.\n                       \\<forall>s t.\n                           s , body \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                          A s t);\n         \\<Turnstile>\\<^sub>0 G  ;\n         s , Call \\<rightarrow>\\<^sub>0  t \\<rbrakk>\n       \\<Longrightarrow> A s t\n 2. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n ({A} \\<union>\n    G)   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n G   \\<longrightarrow>\n                          \\<Turnstile>\\<^sub>Suc n Call : A", "apply (drule Sem_no_zero_height_derivs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                   (\\<forall>m\\<le>n.\n                       \\<forall>s t.\n                           s , body \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                          A s t);\n         \\<Turnstile>\\<^sub>0 G  ; False\\<rbrakk>\n       \\<Longrightarrow> A s t\n 2. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n ({A} \\<union>\n    G)   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n G   \\<longrightarrow>\n                          \\<Turnstile>\\<^sub>Suc n Call : A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n ({A} \\<union>\n    G)   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n G   \\<longrightarrow>\n                          \\<Turnstile>\\<^sub>Suc n Call : A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A ;\n         \\<Turnstile>\\<^sub>Suc n G  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n Call : A", "apply (drule Ctxt_lowerm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n       \\<Longrightarrow> ?m18 n < Suc n\n 2. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A ;\n         \\<Turnstile>\\<^sub>?m18 n G  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n Call : A", "apply (subgoal_tac \"n < Suc n\", assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n       \\<Longrightarrow> n < Suc n\n 2. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A ;\n         \\<Turnstile>\\<^sub>n G  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n Call : A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n         \\<Turnstile>\\<^sub>n Call : A ;\n         \\<Turnstile>\\<^sub>n G  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n Call : A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n Call : A ;  \\<Turnstile>\\<^sub>n G  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n Call : A", "apply (drule ctxt_consn)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>n Call : ?A22 n \n 2. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n Call : A ;\n         \\<Turnstile>\\<^sub>n ({?A22 n} \\<union> G)  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n Call : A", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                    \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n Call : A ;\n         \\<Turnstile>\\<^sub>n ({A} \\<union> G)  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>Suc n Call : A", "apply (simp add: VDM_validn_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m s t.\n       \\<lbrakk>\\<forall>n.\n                    \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n                   (\\<forall>m\\<le>n.\n                       \\<forall>s t.\n                           s , body \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                          A s t);\n        \\<forall>m\\<le>n.\n           \\<forall>s t.\n               s , Call \\<rightarrow>\\<^sub>m  t  \\<longrightarrow> A s t;\n         \\<Turnstile>\\<^sub>n insert A G  ; m \\<le> Suc n;\n         s , Call \\<rightarrow>\\<^sub>m  t \\<rbrakk>\n       \\<Longrightarrow> A s t", "apply (erule Sem_eval_cases, clarsimp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>The heart of the soundness proof is the following lemma which is\nproven by induction on the judgement $G \\rhd c :A$.\\<close>"], ["", "lemma VDM_Sound_n: \"G \\<rhd> c: A \\<Longrightarrow> (\\<forall> n . G \\<Turnstile>\\<^sub>n c:A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : A \\<Longrightarrow>\n    \\<forall>n. G \\<Turnstile>\\<^sub>n c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : A \\<Longrightarrow>\n    \\<forall>n. G \\<Turnstile>\\<^sub>n c : A", "apply (erule VDM_proof.induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G. \\<forall>n. G \\<Turnstile>\\<^sub>n Skip : (\\<lambda>a b. b = a)\n 2. \\<And>G x e.\n       \\<forall>n.\n          G \\<Turnstile>\\<^sub>n Assign x\n                                  e : (\\<lambda>a b.\n    b = update a x (evalE e a))\n 3. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A1; G \\<rhd> c2 : A2;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Comp c1\n              c2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 4. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 5. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 6. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 7. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 8. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (simp add: validn_def VDM_validn_def)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G.\n       \\<forall>n.\n           \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n          (\\<forall>m\\<le>n.\n              \\<forall>s t.\n                  s , Skip \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                 t = s)\n 2. \\<And>G x e.\n       \\<forall>n.\n          G \\<Turnstile>\\<^sub>n Assign x\n                                  e : (\\<lambda>a b.\n    b = update a x (evalE e a))\n 3. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A1; G \\<rhd> c2 : A2;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Comp c1\n              c2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 4. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 5. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 6. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 7. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 8. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply(clarsimp, erule Sem_eval_cases, simp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G x e.\n       \\<forall>n.\n          G \\<Turnstile>\\<^sub>n Assign x\n                                  e : (\\<lambda>a b.\n    b = update a x (evalE e a))\n 2. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A1; G \\<rhd> c2 : A2;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Comp c1\n              c2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 3. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 4. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 5. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 7. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (simp add: validn_def VDM_validn_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G x e.\n       \\<forall>n.\n           \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n          (\\<forall>m\\<le>n.\n              \\<forall>s t.\n                  s , Assign x e \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                 t = update s x (evalE e s))\n 2. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A1; G \\<rhd> c2 : A2;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Comp c1\n              c2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 3. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 4. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 5. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 7. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply(clarsimp, erule Sem_eval_cases, simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A1; G \\<rhd> c2 : A2;\n        \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Comp c1\n              c2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (simp add: validn_def VDM_validn_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A1 s t);\n        G \\<rhd> c2 : A2;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A2 s t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                             \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n                            (\\<forall>m\\<le>n.\n                                \\<forall>s t.\n                                    s , Comp c1\n   c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                                   (\\<exists>r. A1 s r \\<and> A2 r t))\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply(clarsimp, erule Sem_eval_cases, clarsimp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2 n s t na r ma.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A1 s t);\n        G \\<rhd> c2 : A2;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A2 s t);\n         \\<Turnstile>\\<^sub>n G  ; Suc (max na ma) \\<le> n;\n         s , c1 \\<rightarrow>\\<^sub>na  r ;\n         r , c2 \\<rightarrow>\\<^sub>ma  t \\<rbrakk>\n       \\<Longrightarrow> \\<exists>r. A1 s r \\<and> A2 r t\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (drule MAX, clarsimp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2 n s t na r ma.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A1 s t);\n        G \\<rhd> c2 : A2;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A2 s t);\n         \\<Turnstile>\\<^sub>n G  ;  s , c1 \\<rightarrow>\\<^sub>na  r ;\n         r , c2 \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r. A1 s r \\<and> A2 r t\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (erule_tac x=n in allE, clarsimp, rotate_tac -1, erule_tac x=na in allE, clarsimp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2 n s t na r ma.\n       \\<lbrakk>G \\<rhd> c1 : A1; G \\<rhd> c2 : A2;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A2 s t);\n         \\<Turnstile>\\<^sub>n G  ;  s , c1 \\<rightarrow>\\<^sub>na  r ;\n         r , c2 \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n        \\<forall>s t.\n            s , c1 \\<rightarrow>\\<^sub>na  t  \\<longrightarrow>\n           A1 s t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r. A1 s r \\<and> A2 r t\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (erule_tac x=n in allE, clarsimp, rotate_tac -1, erule_tac x=ma in allE, clarsimp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2 n s t na r ma.\n       \\<lbrakk>G \\<rhd> c1 : A1; G \\<rhd> c2 : A2;\n         \\<Turnstile>\\<^sub>n G  ;  s , c1 \\<rightarrow>\\<^sub>na  r ;\n         r , c2 \\<rightarrow>\\<^sub>ma  t ; na \\<le> n; ma \\<le> n;\n        \\<forall>s t.\n            s , c1 \\<rightarrow>\\<^sub>na  t  \\<longrightarrow> A1 s t;\n        \\<forall>s t.\n            s , c2 \\<rightarrow>\\<^sub>ma  t  \\<longrightarrow>\n           A2 s t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r. A1 s r \\<and> A2 r t\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (rule_tac x=r in exI, fast)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c1 : A;\n        G \\<rhd> c2 : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n Iff b c1\n              c2 : (\\<lambda>a c.\n                       (evalB b a \\<longrightarrow> A a c) \\<and>\n                       (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (simp add: validn_def VDM_validn_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A s t);\n        G \\<rhd> c2 : B;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  B s t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                             \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n                            (\\<forall>m\\<le>n.\n                                \\<forall>s t.\n                                    s , Iff b c1\n   c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                                   (evalB b s \\<longrightarrow>\n                                    A s t) \\<and>\n                                   (\\<not> evalB b s \\<longrightarrow>\n                                    B s t))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply(clarsimp, erule Sem_eval_cases, clarsimp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A c2 B b n s t na.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A s t);\n        G \\<rhd> c2 : B;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  B s t);\n         \\<Turnstile>\\<^sub>n G  ; Suc na \\<le> n; evalB b s;\n         s , c1 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> A s t\n 2. \\<And>G c1 A c2 B b n m s t na.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A s t);\n        G \\<rhd> c2 : B;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  B s t);\n         \\<Turnstile>\\<^sub>n G  ; m \\<le> n; m = Suc na; \\<not> evalB b s;\n         s , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> (evalB b s \\<longrightarrow> A s t) \\<and>\n                         (\\<not> evalB b s \\<longrightarrow> B s t)\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (erule thin_rl, rotate_tac 1, erule thin_rl, erule thin_rl)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A c2 B b n s t na.\n       \\<lbrakk> \\<Turnstile>\\<^sub>n G  ; Suc na \\<le> n; evalB b s;\n         s , c1 \\<rightarrow>\\<^sub>na  t ;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A s t)\\<rbrakk>\n       \\<Longrightarrow> A s t\n 2. \\<And>G c1 A c2 B b n m s t na.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A s t);\n        G \\<rhd> c2 : B;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  B s t);\n         \\<Turnstile>\\<^sub>n G  ; m \\<le> n; m = Suc na; \\<not> evalB b s;\n         s , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> (evalB b s \\<longrightarrow> A s t) \\<and>\n                         (\\<not> evalB b s \\<longrightarrow> B s t)\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (erule_tac x=n in allE, clarsimp, erule_tac x=na in allE, clarsimp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c1 A c2 B b n m s t na.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c1 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  A s t);\n        G \\<rhd> c2 : B;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  B s t);\n         \\<Turnstile>\\<^sub>n G  ; m \\<le> n; m = Suc na; \\<not> evalB b s;\n         s , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> (evalB b s \\<longrightarrow> A s t) \\<and>\n                         (\\<not> evalB b s \\<longrightarrow> B s t)\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (erule thin_rl, erule thin_rl)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c1 A c2 B b n m s t na.\n       \\<lbrakk>G \\<rhd> c2 : B;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n G   \\<longrightarrow>\n           (\\<forall>m\\<le>n.\n               \\<forall>s t.\n                   s , c2 \\<rightarrow>\\<^sub>m  t  \\<longrightarrow>\n                  B s t);\n         \\<Turnstile>\\<^sub>n G  ; m \\<le> n; m = Suc na; \\<not> evalB b s;\n         s , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> (evalB b s \\<longrightarrow> A s t) \\<and>\n                         (\\<not> evalB b s \\<longrightarrow> B s t)\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (erule_tac x=n in allE, clarsimp, erule_tac x=na in allE, clarsimp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            G \\<Turnstile>\\<^sub>n While b\n              c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G c B b A n.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> G \\<Turnstile>\\<^sub>n While b\n           c : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (rule SoundWhile)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c B b A n m.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> G \\<Turnstile>\\<^sub>m c : ?B119 G c B b A n\n 2. \\<And>G c B b A n s.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> A s s\n 3. \\<And>G c B b A n s r t.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        evalB b s; ?B119 G c B b A n s r; A r t\\<rbrakk>\n       \\<Longrightarrow> A s t\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply fast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c B b A n s.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> A s s\n 2. \\<And>G c B b A n s r t.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        evalB b s; B s r; A r t\\<rbrakk>\n       \\<Longrightarrow> A s t\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G c B b A n s r t.\n       \\<lbrakk>G \\<rhd> c : B; \\<forall>n. G \\<Turnstile>\\<^sub>n c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        evalB b s; B s r; A r t\\<rbrakk>\n       \\<Longrightarrow> A s t\n 2. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>n. ({A} \\<union> G) \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G n.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>n. insert A G \\<Turnstile>\\<^sub>n body : A\\<rbrakk>\n       \\<Longrightarrow> G \\<Turnstile>\\<^sub>n Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (simp add: validn_def, clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G n.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n            \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>n Call : A \n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (rule SoundCall)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>A G n na.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n            \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G  ;\n         \\<Turnstile>\\<^sub>na ({A} \\<union> ?G132 A G n)  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>na body : A \n 2. \\<And>A G n.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n            \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>n ?G132 A G n  \n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>A G n.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n            \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>n ?G132 A G n  \n 2. \\<And>A G n na.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n            \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G  ;\n         \\<Turnstile>\\<^sub>na ({A} \\<union> ?G132 A G n)  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>na body : A \n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G n na.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>n.\n            \\<Turnstile>\\<^sub>n insert A G   \\<longrightarrow>\n            \\<Turnstile>\\<^sub>n body : A ;\n         \\<Turnstile>\\<^sub>n G  ;\n         \\<Turnstile>\\<^sub>na ({A} \\<union> G)  \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile>\\<^sub>na body : A \n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>n. G \\<Turnstile>\\<^sub>n Call : A\n 2. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (simp add: Ctxt_validn_def validn_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; \\<forall>n. G \\<Turnstile>\\<^sub>n c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. G \\<Turnstile>\\<^sub>n c : B", "apply (simp add: validn_def VDM_validn_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Combining this result with lemma \\<open>validn_valid\\<close>, we obtain soundness in contexts,\\ldots\\<close>"], ["", "theorem VDM_Sound: \"G \\<rhd> c: A \\<Longrightarrow> G \\<Turnstile> c:A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : A \\<Longrightarrow> G \\<Turnstile> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : A \\<Longrightarrow> G \\<Turnstile> c : A", "by (drule VDM_Sound_n, erule validn_valid)"], ["", "(*>*)"], ["", "text\\<open>\\ldots and consequently soundness w.r.t.~empty\ncontexts.\\<close>"], ["", "lemma VDM_Sound_emptyCtxt:\"{} \\<rhd> c : A \\<Longrightarrow> \\<Turnstile> c : A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<rhd> c : A \\<Longrightarrow>  \\<Turnstile> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<rhd> c : A \\<Longrightarrow>  \\<Turnstile> c : A", "apply (drule VDM_Sound)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<Turnstile> c : A  \\<Longrightarrow>  \\<Turnstile> c : A", "apply (simp add: valid_def, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> {}", "apply (simp add: Ctxt_valid_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "subsection\\<open>Admissible rules\\<close>"], ["", "text\\<open>A weakening rule and some cut rules are easily derived.\\<close>"], ["", "lemma WEAK[rule_format]: \n  \"G \\<rhd> c : A \\<Longrightarrow> (\\<forall> H . G \\<subseteq> H \\<longrightarrow> H \\<rhd> c :A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : A \\<Longrightarrow>\n    \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> c : A \\<Longrightarrow>\n    \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A", "apply (erule VDM_proof.induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G.\n       \\<forall>H.\n          G \\<subseteq> H \\<longrightarrow>\n          H \\<rhd> Skip : (\\<lambda>a b. b = a)\n 2. \\<And>G x e.\n       \\<forall>H.\n          G \\<subseteq> H \\<longrightarrow>\n          H \\<rhd> Assign x e : (\\<lambda>a b. b = update a x (evalE e a))\n 3. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 4. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 5. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 6. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 7. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 8. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G H.\n       G \\<subseteq> H \\<Longrightarrow>\n       H \\<rhd> Skip : (\\<lambda>a b. b = a)\n 2. \\<And>G x e.\n       \\<forall>H.\n          G \\<subseteq> H \\<longrightarrow>\n          H \\<rhd> Assign x e : (\\<lambda>a b. b = update a x (evalE e a))\n 3. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 4. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 5. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 6. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 7. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 8. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (rule VDMSkip)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G x e.\n       \\<forall>H.\n          G \\<subseteq> H \\<longrightarrow>\n          H \\<rhd> Assign x e : (\\<lambda>a b. b = update a x (evalE e a))\n 2. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 3. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 4. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 5. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 6. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 7. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G x e H.\n       G \\<subseteq> H \\<Longrightarrow>\n       H \\<rhd> Assign x e : (\\<lambda>a b. b = update a x (evalE e a))\n 2. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 3. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 4. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 5. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 6. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 7. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (rule VDMAssign)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2 H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> Comp c1\n                                   c2 : (\\<lambda>a b.\n      \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (rule VDMComp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G c1 A1 c2 A2 H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c1 : A1\n 2. \\<And>G c1 A1 c2 A2 H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c2 : A2\n 3. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 4. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 5. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 6. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 7. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (erule_tac x=H in allE, simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2 H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A1;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : A2;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c2 : A2\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (erule_tac x=H in allE, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>H.\n           G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c1 A c2 B b H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> Iff b c1\n                                   c2 : (\\<lambda>a c.\n      (evalB b a \\<longrightarrow> A a c) \\<and>\n      (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (rule VDMIff)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A c2 B b H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c1 : A\n 2. \\<And>G c1 A c2 B b H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c2 : B\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (erule_tac x=H in allE, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c1 A c2 B b H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c1 : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c2 : B;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c2 : B\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (erule_tac x=H in allE, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G c B b A H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> While b\n                                   c : (\\<lambda>a c.\n     A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (rule VDMWhile)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c B b A H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c : ?B44 G c B b A H\n 2. \\<And>G c B b A H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            \\<not> evalB b s \\<longrightarrow> A s s\n 3. \\<And>G c B b A H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s r t.\n                            evalB b s \\<longrightarrow>\n                            ?B44 G c B b A H s r \\<longrightarrow>\n                            A r t \\<longrightarrow> A s t\n 4. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (erule_tac x=H in allE, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c B b A H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            \\<not> evalB b s \\<longrightarrow> A s s\n 2. \\<And>G c B b A H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s r t.\n                            evalB b s \\<longrightarrow>\n                            B s r \\<longrightarrow>\n                            A r t \\<longrightarrow> A s t\n 3. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G c B b A H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s r t.\n                            evalB b s \\<longrightarrow>\n                            B s r \\<longrightarrow>\n                            A r t \\<longrightarrow> A s t\n 2. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        \\<forall>H.\n           {A} \\<union> G \\<subseteq> H \\<longrightarrow>\n           H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow>\n                            H \\<rhd> Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G H.\n       \\<lbrakk>\\<forall>H.\n                   A \\<in> H \\<and> G \\<subseteq> H \\<longrightarrow>\n                   H \\<rhd> body : A;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (rule VDMCall)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G H.\n       \\<lbrakk>\\<forall>H.\n                   A \\<in> H \\<and> G \\<subseteq> H \\<longrightarrow>\n                   H \\<rhd> body : A;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> ({A} \\<union> H) \\<rhd> body : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (erule_tac x=\"({A} \\<union> H)\" in allE, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G H.\n       \\<lbrakk>G \\<subseteq> H;\n        G \\<subseteq> insert A H \\<longrightarrow>\n        insert A H \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> insert A H \\<rhd> body : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> Call : A\n 2. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A G H.\n       \\<lbrakk>A \\<in> G; G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> Call : A\n 2. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply (rule VDMAx)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A G H.\n       \\<lbrakk>A \\<in> G; G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> A \\<in> H\n 2. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>H. G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>H.\n                            G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G c A B H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c : B", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G c A B H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c : ?A82 G c A B H\n 2. \\<And>G c A B H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            ?A82 G c A B H s t \\<longrightarrow> B s t", "apply (erule_tac x=H in allE, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G c A B H.\n       \\<lbrakk>\\<forall>s t. A s t \\<longrightarrow> B s t;\n        G \\<subseteq> H; H \\<rhd> c : A\\<rbrakk>\n       \\<Longrightarrow> H \\<rhd> c : ?A82 G c A B H\n 2. \\<And>G c A B H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            ?A82 G c A B H s t \\<longrightarrow> B s t", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G c A B H.\n       \\<lbrakk>\\<forall>H.\n                   G \\<subseteq> H \\<longrightarrow> H \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        G \\<subseteq> H\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t. A s t \\<longrightarrow> B s t", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n\n(*<*)"], ["", "definition CutAuxProp::\"VDMAssn set \\<Rightarrow> IMP \\<Rightarrow> VDMAssn \\<Rightarrow> bool\"\nwhere \"CutAuxProp H c A =\n  (\\<forall> G P D . (H = (insert P D) \\<longrightarrow> G \\<rhd> Call :P \\<longrightarrow> (G \\<subseteq> D) \\<longrightarrow> D \\<rhd> c:A))\""], ["", "lemma CutAux1:\"(H \\<rhd> c : A) \\<Longrightarrow> CutAuxProp H c A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<rhd> c : A \\<Longrightarrow> CutAuxProp H c A", "apply (erule VDM_proof.induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G. CutAuxProp G Skip (\\<lambda>a b. b = a)\n 2. \\<And>G x e.\n       CutAuxProp G (Assign x e) (\\<lambda>a b. b = update a x (evalE e a))\n 3. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1; CutAuxProp G c1 A1; G \\<rhd> c2 : A2;\n        CutAuxProp G c2 A2\\<rbrakk>\n       \\<Longrightarrow> CutAuxProp G (Comp c1 c2)\n                          (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 4. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A; CutAuxProp G c1 A; G \\<rhd> c2 : B;\n        CutAuxProp G c2 B\\<rbrakk>\n       \\<Longrightarrow> CutAuxProp G (Iff b c1 c2)\n                          (\\<lambda>a c.\n                              (evalB b a \\<longrightarrow> A a c) \\<and>\n                              (\\<not> evalB b a \\<longrightarrow> B a c))\n 5. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B; CutAuxProp G c B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s r t.\n           evalB b s \\<longrightarrow>\n           B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n       \\<Longrightarrow> CutAuxProp G (While b c)\n                          (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 6. \\<And>A G.\n       \\<lbrakk>({A} \\<union> G) \\<rhd> body : A;\n        CutAuxProp ({A} \\<union> G) body A\\<rbrakk>\n       \\<Longrightarrow> CutAuxProp G Call A\n 7. \\<And>A G. A \\<in> G \\<Longrightarrow> CutAuxProp G Call A\n 8. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A; CutAuxProp G c A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> CutAuxProp G c B", "apply (simp_all add: add: CutAuxProp_def)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G.\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow>\n          D \\<rhd> Skip : (\\<lambda>a b. b = a)\n 2. \\<And>G x e.\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow>\n          D \\<rhd> Assign x e : (\\<lambda>a b. b = update a x (evalE e a))\n 3. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 4. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 5. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 6. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 7. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 8. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply clarify"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G Ga P D.\n       \\<lbrakk>Ga \\<rhd> Call : P; Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Skip : (\\<lambda>a b. b = a)\n 2. \\<And>G x e.\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow>\n          D \\<rhd> Assign x e : (\\<lambda>a b. b = update a x (evalE e a))\n 3. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 4. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 5. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 6. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 7. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 8. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (fast intro: VDMSkip)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G x e.\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow>\n          D \\<rhd> Assign x e : (\\<lambda>a b. b = update a x (evalE e a))\n 2. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 3. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 4. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 5. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 6. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 7. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (fast intro: VDMAssign)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G c1 A1 c2 A2.\n       \\<lbrakk>G \\<rhd> c1 : A1;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A1;\n        G \\<rhd> c2 : A2;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Comp c1\nc2 : (\\<lambda>a b. \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A1;\n        insert P D \\<rhd> c2 : A2;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Comp c1\n                                   c2 : (\\<lambda>a b.\n      \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=Ga in allE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1; insert P D \\<rhd> c2 : A2;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A1\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Comp c1\n                                   c2 : (\\<lambda>a b.\n      \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=Ga in allE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1; insert P D \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A1;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Comp c1\n                                   c2 : (\\<lambda>a b.\n      \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=P in allE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1; insert P D \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : A2;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A1\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Comp c1\n                                   c2 : (\\<lambda>a b.\n      \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=P in allE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1; insert P D \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A1;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Comp c1\n                                   c2 : (\\<lambda>a b.\n      \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=D in allE, simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1; insert P D \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : A2;\n        D \\<rhd> c1 : A1\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Comp c1\n                                   c2 : (\\<lambda>a b.\n      \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=D in allE, simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1; insert P D \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c1 : A1;\n        D \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Comp c1\n                                   c2 : (\\<lambda>a b.\n      \\<exists>r. A1 a r \\<and> A2 r b)\n 2. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (rule VDMComp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1; insert P D \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c1 : A1;\n        D \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c1 : A1\n 2. \\<And>c1 A1 c2 A2 Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A1; insert P D \\<rhd> c2 : A2;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c1 : A1;\n        D \\<rhd> c2 : A2\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c2 : A2\n 3. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 4. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 5. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 6. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 7. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply assumption+"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G c1 A c2 B b.\n       \\<lbrakk>G \\<rhd> c1 : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c1 : A;\n        G \\<rhd> c2 : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Iff b c1\nc2 : (\\<lambda>a c.\n         (evalB b a \\<longrightarrow> A a c) \\<and>\n         (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A;\n        insert P D \\<rhd> c2 : B;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Iff b c1\n                                   c2 : (\\<lambda>a c.\n      (evalB b a \\<longrightarrow> A a c) \\<and>\n      (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=Ga in allE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A; insert P D \\<rhd> c2 : B;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Iff b c1\n                                   c2 : (\\<lambda>a c.\n      (evalB b a \\<longrightarrow> A a c) \\<and>\n      (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=Ga in allE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A; insert P D \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Iff b c1\n                                   c2 : (\\<lambda>a c.\n      (evalB b a \\<longrightarrow> A a c) \\<and>\n      (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=P in allE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A; insert P D \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : B;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Iff b c1\n                                   c2 : (\\<lambda>a c.\n      (evalB b a \\<longrightarrow> A a c) \\<and>\n      (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=P in allE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A; insert P D \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c1 : A;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Iff b c1\n                                   c2 : (\\<lambda>a c.\n      (evalB b a \\<longrightarrow> A a c) \\<and>\n      (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=D in allE, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A; insert P D \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c2 : B;\n        D \\<rhd> c1 : A\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Iff b c1\n                                   c2 : (\\<lambda>a c.\n      (evalB b a \\<longrightarrow> A a c) \\<and>\n      (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=D in allE, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A; insert P D \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c1 : A;\n        D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Iff b c1\n                                   c2 : (\\<lambda>a c.\n      (evalB b a \\<longrightarrow> A a c) \\<and>\n      (\\<not> evalB b a \\<longrightarrow> B a c))\n 2. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 3. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 4. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 5. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (rule VDMIff)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A; insert P D \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c1 : A;\n        D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c1 : A\n 2. \\<And>c1 A c2 B b Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c1 : A; insert P D \\<rhd> c2 : B;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c1 : A;\n        D \\<rhd> c2 : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c2 : B\n 3. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply assumption+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G c B b A.\n       \\<lbrakk>G \\<rhd> c : B;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> While b\nc : (\\<lambda>a c. A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c B b A Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : B;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> While b\n                                   c : (\\<lambda>a c.\n     A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=Ga in allE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c B b A Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> While b\n                                   c : (\\<lambda>a c.\n     A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=P in allE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c B b A Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D;\n        \\<forall>Da.\n           insert P D = insert P Da \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> While b\n                                   c : (\\<lambda>a c.\n     A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=D in allE, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c B b A Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> While b\n                                   c : (\\<lambda>a c.\n     A a c \\<and> \\<not> evalB b c)\n 2. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (rule VDMWhile)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c B b A Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c : B\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c : ?B82 c B b A Ga P D\n 2. \\<And>c B b A Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s.\n                            \\<not> evalB b s \\<longrightarrow> A s s\n 3. \\<And>c B b A Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s r t.\n                            evalB b s \\<longrightarrow>\n                            ?B82 c B b A Ga P D s r \\<longrightarrow>\n                            A r t \\<longrightarrow> A s t\n 4. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 5. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 6. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply assumption+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c B b A Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : B;\n        \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n        \\<forall>s.\n           evalB b s \\<longrightarrow>\n           (\\<forall>r.\n               B s r \\<longrightarrow>\n               (\\<forall>t. A r t \\<longrightarrow> A s t));\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D; D \\<rhd> c : B\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s r t.\n                            evalB b s \\<longrightarrow>\n                            B s r \\<longrightarrow>\n                            A r t \\<longrightarrow> A s t\n 2. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 3. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 4. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A G.\n       \\<lbrakk>insert A G \\<rhd> body : A;\n        \\<forall>Ga P D.\n           insert A G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A Ga P D.\n       \\<lbrakk>insert A (insert P D) \\<rhd> body : A;\n        \\<forall>G Pa Da.\n           insert A (insert P D) = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> body : A;\n        Ga \\<rhd> Call : P; Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=Ga in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A Ga P D.\n       \\<lbrakk>insert A (insert P D) \\<rhd> body : A; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D;\n        \\<forall>Pa Da.\n           insert A (insert P D) = insert Pa Da \\<longrightarrow>\n           Ga \\<rhd> Call : Pa \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=P in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A Ga P D.\n       \\<lbrakk>insert A (insert P D) \\<rhd> body : A; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D;\n        \\<forall>Da.\n           insert A (insert P D) = insert P Da \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> Da \\<longrightarrow> Da \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule_tac x=\"insert A D\" in allE, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A Ga P D.\n       \\<lbrakk>insert A (insert P D) \\<rhd> body : A; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D;\n        insert A (insert P D) = insert P (insert A D) \\<longrightarrow>\n        Ga \\<subseteq> insert A D \\<longrightarrow>\n        insert A D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (rule VDMCall)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A Ga P D.\n       \\<lbrakk>insert A (insert P D) \\<rhd> body : A; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D;\n        insert A (insert P D) = insert P (insert A D) \\<longrightarrow>\n        Ga \\<subseteq> insert A D \\<longrightarrow>\n        insert A D \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> ({A} \\<union> D) \\<rhd> body : A\n 2. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A G.\n       A \\<in> G \\<Longrightarrow>\n       \\<forall>Ga P D.\n          G = insert P D \\<longrightarrow>\n          Ga \\<rhd> Call : P \\<longrightarrow>\n          Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> Call : A\n 2. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A Ga P D.\n       \\<lbrakk>A = P \\<or> A \\<in> D; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 2. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A Ga P D.\n       \\<lbrakk>Ga \\<rhd> Call : P; Ga \\<subseteq> D; A = P\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 2. \\<And>A Ga P D.\n       \\<lbrakk>Ga \\<rhd> Call : P; Ga \\<subseteq> D; A \\<in> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ga P D.\n       \\<lbrakk>Ga \\<rhd> Call : P; Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : P\n 2. \\<And>A Ga P D.\n       \\<lbrakk>Ga \\<rhd> Call : P; Ga \\<subseteq> D; A \\<in> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule WEAK)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Ga P D. Ga \\<subseteq> D \\<Longrightarrow> Ga \\<subseteq> D\n 2. \\<And>A Ga P D.\n       \\<lbrakk>Ga \\<rhd> Call : P; Ga \\<subseteq> D; A \\<in> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 3. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A Ga P D.\n       \\<lbrakk>Ga \\<rhd> Call : P; Ga \\<subseteq> D; A \\<in> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> Call : A\n 2. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply (erule VDMAx)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G c A B.\n       \\<lbrakk>G \\<rhd> c : A;\n        \\<forall>Ga P D.\n           G = insert P D \\<longrightarrow>\n           Ga \\<rhd> Call : P \\<longrightarrow>\n           Ga \\<subseteq> D \\<longrightarrow> D \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>Ga P D.\n                            G = insert P D \\<longrightarrow>\n                            Ga \\<rhd> Call : P \\<longrightarrow>\n                            Ga \\<subseteq> D \\<longrightarrow>\n                            D \\<rhd> c : B", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c A B Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : A;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c : B", "apply (subgoal_tac \"D \\<rhd>  c : A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c A B Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : A;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D; D \\<rhd> c : A\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c : B\n 2. \\<And>c A B Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : A;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c : A", "apply (erule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c A B Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : A;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t. A s t \\<longrightarrow> B s t\n 2. \\<And>c A B Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : A;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c : A", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c A B Ga P D.\n       \\<lbrakk>insert P D \\<rhd> c : A;\n        \\<forall>G Pa Da.\n           insert P D = insert Pa Da \\<longrightarrow>\n           G \\<rhd> Call : Pa \\<longrightarrow>\n           G \\<subseteq> Da \\<longrightarrow> Da \\<rhd> c : A;\n        \\<forall>s t. A s t \\<longrightarrow> B s t; Ga \\<rhd> Call : P;\n        Ga \\<subseteq> D\\<rbrakk>\n       \\<Longrightarrow> D \\<rhd> c : A", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma CutAux: \n  \"\\<lbrakk>H \\<rhd> c : A; H = insert P D; G \\<rhd> Call :P; G \\<subseteq> D\\<rbrakk> \\<Longrightarrow> D \\<rhd> c:A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<rhd> c : A; H = insert P D; G \\<rhd> Call : P;\n     G \\<subseteq> D\\<rbrakk>\n    \\<Longrightarrow> D \\<rhd> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<rhd> c : A; H = insert P D; G \\<rhd> Call : P;\n     G \\<subseteq> D\\<rbrakk>\n    \\<Longrightarrow> D \\<rhd> c : A", "by (drule CutAux1, simp add: CutAuxProp_def)"], ["", "(*>*)"], ["", "lemma Cut:\"\\<lbrakk> G \\<rhd> Call : P ; (insert P G) \\<rhd> c : A \\<rbrakk> \\<Longrightarrow> G \\<rhd> c : A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<rhd> Call : P; insert P G \\<rhd> c : A\\<rbrakk>\n    \\<Longrightarrow> G \\<rhd> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<rhd> Call : P; insert P G \\<rhd> c : A\\<rbrakk>\n    \\<Longrightarrow> G \\<rhd> c : A", "apply (rotate_tac -1, drule CutAux)"], ["proof (prove)\ngoal (4 subgoals):\n 1. G \\<rhd> Call : P \\<Longrightarrow> insert P G = insert ?P ?D\n 2. G \\<rhd> Call : P \\<Longrightarrow> ?G \\<rhd> Call : ?P\n 3. G \\<rhd> Call : P \\<Longrightarrow> ?G \\<subseteq> ?D\n 4. \\<lbrakk>G \\<rhd> Call : P; ?D \\<rhd> c : A\\<rbrakk>\n    \\<Longrightarrow> G \\<rhd> c : A", "apply (fastforce, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. G \\<rhd> Call : P \\<Longrightarrow> G \\<subseteq> G\n 2. \\<lbrakk>G \\<rhd> Call : P; G \\<rhd> c : A\\<rbrakk>\n    \\<Longrightarrow> G \\<rhd> c : A", "apply (simp, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>We call context $G$ verified if all entries are justified by\nderivations for the procedure body.\\<close>"], ["", "definition verified::\"VDMAssn set \\<Rightarrow> bool\"\nwhere \"verified G = (\\<forall> A . A:G \\<longrightarrow> G \\<rhd> body : A)\""], ["", "text\\<open>The property is preserved by sub-contexts\\<close>"], ["", "lemma verified_preserved: \"\\<lbrakk>verified G; A:G\\<rbrakk> \\<Longrightarrow> verified (G - {A})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>verified G; A \\<in> G\\<rbrakk>\n    \\<Longrightarrow> verified (G - {A})", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>verified G; A \\<in> G\\<rbrakk>\n    \\<Longrightarrow> verified (G - {A})", "apply (simp add: verified_def, (rule allI)+, rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> body : Aa", "apply (subgoal_tac \"(G - {A}) \\<rhd> Call:A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> body : Aa\n 2. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "(*now use the subgoal (G - {A}) \\<rhd> Call:A to prove the goal*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> body : Aa\n 2. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "apply (subgoal_tac \"G = insert A (G - {A})\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A; G = insert A (G - {A})\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> body : Aa\n 2. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A\\<rbrakk>\n       \\<Longrightarrow> G = insert A (G - {A})\n 3. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A\\<rbrakk>\n       \\<Longrightarrow> G = insert A (G - {A})\n 2. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A; G = insert A (G - {A})\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> body : Aa\n 3. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A; G = insert A (G - {A})\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> body : Aa\n 2. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "apply (erule_tac x=Aa in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A; G = insert A (G - {A});\n        Aa \\<in> G \\<longrightarrow> G \\<rhd> body : Aa\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> body : Aa\n 2. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "apply (erule impE, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        (G - {A}) \\<rhd> Call : A; G = insert A (G - {A});\n        G \\<rhd> body : Aa\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> body : Aa\n 2. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "apply (erule Cut)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Aa.\n       \\<lbrakk>A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A;\n        G = insert A (G - {A}); G \\<rhd> body : Aa\\<rbrakk>\n       \\<Longrightarrow> insert A (G - {A}) \\<rhd> body : Aa\n 2. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "(* now prove the subgoal (G - {A}) \\<rhd>  Call : A *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>\\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G; Aa \\<in> G \\<and> Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "apply (erule_tac x=A in allE, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>A \\<in> G; G \\<rhd> body : A; Aa \\<in> G;\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> (G - {A}) \\<rhd> Call : A", "apply (rule VDMCall)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>A \\<in> G; G \\<rhd> body : A; Aa \\<in> G;\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> ({A} \\<union> (G - {A})) \\<rhd> body : A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>A \\<in> G; G \\<rhd> body : A; Aa \\<in> G;\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> insert A G \\<rhd> body : A", "apply (erule WEAK)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Aa.\n       \\<lbrakk>A \\<in> G; Aa \\<in> G; Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> G \\<subseteq> insert A G", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n\n(*<*)"], ["", "lemma SetNonSingleton:\n  \"\\<lbrakk>G \\<noteq> {A}; A \\<in> G\\<rbrakk> \\<Longrightarrow> \\<exists>B. B \\<noteq> A \\<and> B \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<noteq> {A}; A \\<in> G\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B. B \\<noteq> A \\<and> B \\<in> G", "by auto"], ["", "lemma MutrecAux[rule_format]: \n\"\\<forall> G . ((finite G \\<and> card G = n \\<and> verified G \\<and> A : G) \\<longrightarrow> {} \\<rhd> Call:A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>G.\n       finite G \\<and>\n       card G = n \\<and> verified G \\<and> A \\<in> G \\<longrightarrow>\n       {} \\<rhd> Call : A", "apply (induct n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>G.\n       finite G \\<and>\n       card G = 0 \\<and> verified G \\<and> A \\<in> G \\<longrightarrow>\n       {} \\<rhd> Call : A\n 2. \\<And>n.\n       \\<forall>G.\n          finite G \\<and>\n          card G = n \\<and> verified G \\<and> A \\<in> G \\<longrightarrow>\n          {} \\<rhd> Call : A \\<Longrightarrow>\n       \\<forall>G.\n          finite G \\<and>\n          card G = Suc n \\<and>\n          verified G \\<and> A \\<in> G \\<longrightarrow>\n          {} \\<rhd> Call : A", "(*case n=0*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>G.\n       finite G \\<and>\n       card G = 0 \\<and> verified G \\<and> A \\<in> G \\<longrightarrow>\n       {} \\<rhd> Call : A\n 2. \\<And>n.\n       \\<forall>G.\n          finite G \\<and>\n          card G = n \\<and> verified G \\<and> A \\<in> G \\<longrightarrow>\n          {} \\<rhd> Call : A \\<Longrightarrow>\n       \\<forall>G.\n          finite G \\<and>\n          card G = Suc n \\<and>\n          verified G \\<and> A \\<in> G \\<longrightarrow>\n          {} \\<rhd> Call : A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>G.\n          finite G \\<and>\n          card G = n \\<and> verified G \\<and> A \\<in> G \\<longrightarrow>\n          {} \\<rhd> Call : A \\<Longrightarrow>\n       \\<forall>G.\n          finite G \\<and>\n          card G = Suc n \\<and>\n          verified G \\<and> A \\<in> G \\<longrightarrow>\n          {} \\<rhd> Call : A", "(*Case n>0*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>G.\n          finite G \\<and>\n          card G = n \\<and> verified G \\<and> A \\<in> G \\<longrightarrow>\n          {} \\<rhd> Call : A \\<Longrightarrow>\n       \\<forall>G.\n          finite G \\<and>\n          card G = Suc n \\<and>\n          verified G \\<and> A \\<in> G \\<longrightarrow>\n          {} \\<rhd> Call : A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply (case_tac \"G = {A}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        G = {A}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        G \\<noteq> {A}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>verified {A};\n     \\<forall>G.\n        verified G \\<longrightarrow>\n        card G = 0 \\<longrightarrow>\n        finite G \\<longrightarrow> A \\<notin> G\\<rbrakk>\n    \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        G \\<noteq> {A}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply (erule_tac x=\"{A}\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>verified {A};\n     verified {A} \\<longrightarrow>\n     card {A} = 0 \\<longrightarrow>\n     finite {A} \\<longrightarrow> A \\<notin> {A}\\<rbrakk>\n    \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        G \\<noteq> {A}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply (clarsimp, simp add:verified_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {A} \\<rhd> body : A \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        G \\<noteq> {A}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply (rule VDMCall, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        G \\<noteq> {A}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "(*Case G has more entries than A*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        G \\<noteq> {A}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply (drule SetNonSingleton, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        \\<exists>B. B \\<noteq> A \\<and> B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "(* use the fact that there is another entry B:G*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        \\<exists>B. B \\<noteq> A \\<and> B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply (subgoal_tac \"(G - {B}) \\<rhd> Call : B\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G; (G - {B}) \\<rhd> Call : B\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (erule_tac x=\"G - {B}\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        B \\<noteq> A; B \\<in> G; (G - {B}) \\<rhd> Call : B;\n        verified (G - {B}) \\<longrightarrow>\n        card (G - {B}) = n \\<longrightarrow>\n        finite (G - {B}) \\<longrightarrow> A \\<notin> G - {B}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        B \\<noteq> A; B \\<in> G; (G - {B}) \\<rhd> Call : B\\<rbrakk>\n       \\<Longrightarrow> verified (G - {B})\n 2. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        B \\<noteq> A; B \\<in> G; (G - {B}) \\<rhd> Call : B;\n        card (G - {B}) = n \\<longrightarrow>\n        finite (G - {B}) \\<longrightarrow> A \\<notin> G - {B}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A\n 3. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (simp add: verified_preserved)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        B \\<noteq> A; B \\<in> G; (G - {B}) \\<rhd> Call : B;\n        card (G - {B}) = n \\<longrightarrow>\n        finite (G - {B}) \\<longrightarrow> A \\<notin> G - {B}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        B \\<noteq> A; B \\<in> G; (G - {B}) \\<rhd> Call : B\\<rbrakk>\n       \\<Longrightarrow> card (G - {B}) = n\n 2. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        B \\<noteq> A; B \\<in> G; (G - {B}) \\<rhd> Call : B;\n        finite (G - {B}) \\<longrightarrow> A \\<notin> G - {B}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A\n 3. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (simp add: card_Diff_singleton)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        B \\<noteq> A; B \\<in> G; (G - {B}) \\<rhd> Call : B;\n        finite (G - {B}) \\<longrightarrow> A \\<notin> G - {B}\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "(*the proof for (G - {B}) \\<rhd>  Call : B *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n; verified G; A \\<in> G;\n        \\<forall>G.\n           verified G \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (simp add: verified_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>finite G; card G = Suc n;\n        \\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G;\n        \\<forall>G.\n           (\\<forall>A.\n               A \\<in> G \\<longrightarrow>\n               G \\<rhd> body : A) \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (rotate_tac 3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>A \\<in> G;\n        \\<forall>G.\n           (\\<forall>A.\n               A \\<in> G \\<longrightarrow>\n               G \\<rhd> body : A) \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G; finite G; card G = Suc n;\n        \\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (erule_tac x=B in allE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>A \\<in> G;\n        \\<forall>G.\n           (\\<forall>A.\n               A \\<in> G \\<longrightarrow>\n               G \\<rhd> body : A) \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G; finite G; card G = Suc n;\n        G \\<rhd> body : B\\<rbrakk>\n       \\<Longrightarrow> (G - {B}) \\<rhd> Call : B", "apply (rule VDMCall)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>A \\<in> G;\n        \\<forall>G.\n           (\\<forall>A.\n               A \\<in> G \\<longrightarrow>\n               G \\<rhd> body : A) \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G; finite G; card G = Suc n;\n        G \\<rhd> body : B\\<rbrakk>\n       \\<Longrightarrow> ({B} \\<union> (G - {B})) \\<rhd> body : B", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>A \\<in> G;\n        \\<forall>G.\n           (\\<forall>A.\n               A \\<in> G \\<longrightarrow>\n               G \\<rhd> body : A) \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G; finite G; card G = Suc n;\n        G \\<rhd> body : B\\<rbrakk>\n       \\<Longrightarrow> insert B G \\<rhd> body : B", "apply (erule WEAK)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n G B.\n       \\<lbrakk>A \\<in> G;\n        \\<forall>G.\n           (\\<forall>A.\n               A \\<in> G \\<longrightarrow>\n               G \\<rhd> body : A) \\<longrightarrow>\n           card G = n \\<longrightarrow>\n           finite G \\<longrightarrow> A \\<notin> G;\n        B \\<noteq> A; B \\<in> G; finite G; card G = Suc n\\<rbrakk>\n       \\<Longrightarrow> G \\<subseteq> insert B G", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>The \\<open>Mutrec\\<close> rule allows us to eliminate verified (finite)\ncontexts. Its proof proceeds by induction on $n$.\\<close>"], ["", "theorem Mutrec:\n\"\\<lbrakk> finite G; card G = n; verified G; A : G \\<rbrakk> \\<Longrightarrow> {} \\<rhd> Call:A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite G; card G = n; verified G; A \\<in> G\\<rbrakk>\n    \\<Longrightarrow> {} \\<rhd> Call : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite G; card G = n; verified G; A \\<in> G\\<rbrakk>\n    \\<Longrightarrow> {} \\<rhd> Call : A", "by (rule MutrecAux, fast)"], ["", "(*>*)"], ["", "text\\<open>In particular, \\<open>Mutrec\\<close> may be used to show that verified\nfinite contexts are valid.\\<close>"], ["", "lemma Ctxt_verified_valid: \"\\<lbrakk>verified G; finite G\\<rbrakk> \\<Longrightarrow> \\<Turnstile> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>verified G; finite G\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile> G", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>verified G; finite G\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile> G", "apply (subgoal_tac \"(\\<forall> A . A:G \\<longrightarrow> G \\<rhd> body : A)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>verified G; finite G;\n     \\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile> G \n 2. \\<lbrakk>verified G; finite G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>A.\n                         A \\<in> G \\<longrightarrow> G \\<rhd> body : A", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>verified G; finite G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>A.\n                         A \\<in> G \\<longrightarrow> G \\<rhd> body : A\n 2. \\<lbrakk>verified G; finite G;\n     \\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile> G", "apply (simp add: verified_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>verified G; finite G;\n     \\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A\\<rbrakk>\n    \\<Longrightarrow>  \\<Turnstile> G", "apply (simp add: Ctxt_valid_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>verified G; finite G;\n        \\<forall>A. A \\<in> G \\<longrightarrow> G \\<rhd> body : A;\n        A \\<in> G\\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile> Call : A", "apply (erule_tac x=A in allE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile> Call : A", "apply (rule VDM_Sound_emptyCtxt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A", "apply (subgoal_tac \"card G = card G\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A;\n        card G = card G\\<rbrakk>\n       \\<Longrightarrow> {} \\<rhd> Call : A\n 2. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> card G = card G", "apply (rule Mutrec, assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A;\n        card G = card G\\<rbrakk>\n       \\<Longrightarrow> card G = ?n9 A\n 2. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A;\n        card G = card G\\<rbrakk>\n       \\<Longrightarrow> verified G\n 3. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A;\n        card G = card G\\<rbrakk>\n       \\<Longrightarrow> A \\<in> G\n 4. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> card G = card G", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>verified G; finite G; A \\<in> G; G \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> card G = card G", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "(*  apply (simp add: card_def)*)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "subsection\\<open>Completeness\\<close>"], ["", "text\\<open>Strongest specifications, given precisely by the operational\nbehaviour.\\<close>"], ["", "definition SSpec::\"IMP \\<Rightarrow> VDMAssn\"\nwhere \"SSpec c s t = s,c \\<Down> t\""], ["", "text\\<open>Strongest specifications are valid \\ldots\\<close>"], ["", "lemma SSpec_valid: \"\\<Turnstile> c : (SSpec c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : SSpec c", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : SSpec c", "by (simp add: VDM_valid_def SSpec_def)"], ["", "(*>*)"], ["", "text\\<open>and imply any other valid assertion for the same program (hence\ntheir name).\\<close>"], ["", "lemma SSpec_strong: \"\\<Turnstile> c :A \\<Longrightarrow> \\<forall> s t . SSpec c s t \\<longrightarrow> A s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : A  \\<Longrightarrow>\n    \\<forall>s t. SSpec c s t \\<longrightarrow> A s t", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : A  \\<Longrightarrow>\n    \\<forall>s t. SSpec c s t \\<longrightarrow> A s t", "by (simp add: VDM_valid_def SSpec_def)"], ["", "(*>*)"], ["", "text\\<open>By induction on $c$ we show the following.\\<close>"], ["", "lemma SSpec_derivable:\"G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c : SSpec c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c : SSpec c", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c : SSpec c", "apply (induct c)"], ["proof (prove)\ngoal (6 subgoals):\n 1. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Skip : SSpec Skip\n 2. \\<And>x1 x2.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       G \\<rhd> Assign x1 x2 : SSpec (Assign x1 x2)\n 3. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 4. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 6. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (7 subgoals):\n 1. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Skip : ?A6\n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n    \\<forall>s t. ?A6 s t \\<longrightarrow> SSpec Skip s t\n 3. \\<And>x1 x2.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       G \\<rhd> Assign x1 x2 : SSpec (Assign x1 x2)\n 4. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 5. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 6. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 7. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMSkip)"], ["proof (prove)\ngoal (6 subgoals):\n 1. G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n    \\<forall>s t. t = s \\<longrightarrow> SSpec Skip s t\n 2. \\<And>x1 x2.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       G \\<rhd> Assign x1 x2 : SSpec (Assign x1 x2)\n 3. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 4. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 6. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (simp add: SSpec_def Sem_def, rule, rule)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n        s , Skip \\<rightarrow>\\<^sub>?n12 s  s \n 2. \\<And>x1 x2.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       G \\<rhd> Assign x1 x2 : SSpec (Assign x1 x2)\n 3. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 4. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 6. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule SemSkip)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       G \\<rhd> Assign x1 x2 : SSpec (Assign x1 x2)\n 2. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 3. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x1 x2.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       G \\<rhd> Assign x1 x2 : ?A15 x1 x2\n 2. \\<And>x1 x2.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s t.\n          ?A15 x1 x2 s t \\<longrightarrow> SSpec (Assign x1 x2) s t\n 3. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 4. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 6. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMAssign)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s t.\n          t = update s x1 (evalE x2 s) \\<longrightarrow>\n          SSpec (Assign x1 x2) s t\n 2. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 3. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (simp add: SSpec_def Sem_def, rule, rule)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1 x2 s.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n        s , Assign x1\n             x2 \\<rightarrow>\\<^sub>?n21 x1 x2 s  update s x1 (evalE x2 s) \n 2. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 3. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule SemAssign)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1 x2 s.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       update s x1 (evalE x2 s) = update s x1 (evalE x2 s)\n 2. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 3. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 2. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : SSpec (Comp c1 c2)\n 2. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Comp c1 c2 : ?A27 c1 c2\n 2. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            ?A27 c1 c2 s t \\<longrightarrow>\n                            SSpec (Comp c1 c2) s t\n 3. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMComp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> c1 : ?A1.30 c1 c2\n 2. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> c2 : ?A2.30 c1 c2\n 3. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            (\\<exists>r.\n                                ?A1.30 c1 c2 s r \\<and>\n                                ?A2.30 c1 c2 r t) \\<longrightarrow>\n                            SSpec (Comp c1 c2) s t\n 4. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 6. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply assumption+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            (\\<exists>r.\n                                SSpec c1 s r \\<and>\n                                SSpec c2 r t) \\<longrightarrow>\n                            SSpec (Comp c1 c2) s t\n 2. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (simp add: SSpec_def Sem_def, clarsimp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c1 c2 s t r n na.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call;  s , c1 \\<rightarrow>\\<^sub>n  r ;\n         r , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Comp c1 c2 \\<rightarrow>\\<^sub>n  t \n 2. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply rule"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c1 c2 s t r n na.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call;  s , c1 \\<rightarrow>\\<^sub>n  r ;\n         r , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow>  s , Comp c1\n                               c2 \\<rightarrow>\\<^sub>?n42 c1 c2 s t r n\n                 na  t \n 2. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule SemComp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>c1 c2 s t r n na.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call;  s , c1 \\<rightarrow>\\<^sub>n  r ;\n         r , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow>  s , c1 \\<rightarrow>\\<^sub>?n44 c1 c2 s t r n\n                na  ?r44 c1 c2 s t r n na \n 2. \\<And>c1 c2 s t r n na.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call;  s , c1 \\<rightarrow>\\<^sub>n  r ;\n         r , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow>  ?r44 c1 c2 s t r n\n                           na , c2 \\<rightarrow>\\<^sub>?m44 c1 c2 s t r n\n                  na  t \n 3. \\<And>c1 c2 s t r n na.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call;  s , c1 \\<rightarrow>\\<^sub>n  r ;\n         r , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> ?n42 c1 c2 s t r n na =\n                         max (?n44 c1 c2 s t r n na)\n                          (?m44 c1 c2 s t r n na) +\n                         1\n 4. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 5. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 6. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply assumption+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>c1 c2 s t r n na.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call;  s , c1 \\<rightarrow>\\<^sub>n  r ;\n         r , c2 \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> ?n42 c1 c2 s t r n na = max n na + 1\n 2. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c : SSpec c;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 2. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1 c.\n       \\<lbrakk>G \\<rhd> c : SSpec c; G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While x1 c : SSpec (While x1 c)\n 2. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rename_tac BExpr c)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>BExpr c.\n       \\<lbrakk>G \\<rhd> c : SSpec c; G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While BExpr c : SSpec (While BExpr c)\n 2. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>BExpr c.\n       \\<lbrakk>G \\<rhd> c : SSpec c; G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> While BExpr c : ?A51 BExpr c\n 2. \\<And>BExpr c.\n       \\<lbrakk>G \\<rhd> c : SSpec c; G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            ?A51 BExpr c s t \\<longrightarrow>\n                            SSpec (While BExpr c) s t\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (erule VDMWhile)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s. \\<not> evalB BExpr s \\<longrightarrow> ?A54 BExpr c s s\n 2. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s r t.\n          evalB BExpr s \\<longrightarrow>\n          SSpec c s r \\<longrightarrow>\n          ?A54 BExpr c r t \\<longrightarrow> ?A54 BExpr c s t\n 3. \\<And>BExpr c.\n       \\<lbrakk>G \\<rhd> c : SSpec c; G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            ?A54 BExpr c s t \\<and>\n                            \\<not> evalB BExpr t \\<longrightarrow>\n                            SSpec (While BExpr c) s t\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "prefer 3"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>BExpr c.\n       \\<lbrakk>G \\<rhd> c : SSpec c; G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            ?A54 BExpr c s t \\<and>\n                            \\<not> evalB BExpr t \\<longrightarrow>\n                            SSpec (While BExpr c) s t\n 2. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s. \\<not> evalB BExpr s \\<longrightarrow> ?A54 BExpr c s s\n 3. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s r t.\n          evalB BExpr s \\<longrightarrow>\n          SSpec c s r \\<longrightarrow>\n          ?A54 BExpr c r t \\<longrightarrow> ?A54 BExpr c s t\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (subgoal_tac \"\\<forall>s t. SSpec (While BExpr c) s t \\<and> \\<not> evalB BExpr t \\<longrightarrow> SSpec (While BExpr c) s t\", assumption)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>BExpr c.\n       \\<lbrakk>G \\<rhd> c : SSpec c; G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            SSpec (While BExpr c) s t \\<and>\n                            \\<not> evalB BExpr t \\<longrightarrow>\n                            SSpec (While BExpr c) s t\n 2. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s.\n          \\<not> evalB BExpr s \\<longrightarrow> SSpec (While BExpr c) s s\n 3. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s r t.\n          evalB BExpr s \\<longrightarrow>\n          SSpec c s r \\<longrightarrow>\n          SSpec (While BExpr c) r t \\<longrightarrow>\n          SSpec (While BExpr c) s t\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s.\n          \\<not> evalB BExpr s \\<longrightarrow> SSpec (While BExpr c) s s\n 2. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s r t.\n          evalB BExpr s \\<longrightarrow>\n          SSpec c s r \\<longrightarrow>\n          SSpec (While BExpr c) r t \\<longrightarrow>\n          SSpec (While BExpr c) s t\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (simp add: SSpec_def Sem_def, clarsimp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>BExpr c s.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call; \\<not> evalB BExpr s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , While BExpr c \\<rightarrow>\\<^sub>n  s \n 2. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s r t.\n          evalB BExpr s \\<longrightarrow>\n          SSpec c s r \\<longrightarrow>\n          SSpec (While BExpr c) r t \\<longrightarrow>\n          SSpec (While BExpr c) s t\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule, erule SemWhileF)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>BExpr c s. G \\<rhd> Call : SSpec Call \\<Longrightarrow> s = s\n 2. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s r t.\n          evalB BExpr s \\<longrightarrow>\n          SSpec c s r \\<longrightarrow>\n          SSpec (While BExpr c) r t \\<longrightarrow>\n          SSpec (While BExpr c) s t\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>BExpr c.\n       G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n       \\<forall>s r t.\n          evalB BExpr s \\<longrightarrow>\n          SSpec c s r \\<longrightarrow>\n          SSpec (While BExpr c) r t \\<longrightarrow>\n          SSpec (While BExpr c) s t\n 2. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (simp add: SSpec_def Sem_def, clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>BExpr c s r n t na.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call; evalB BExpr s;\n         s , c \\<rightarrow>\\<^sub>n  r ;\n         r , While BExpr c \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , While BExpr c \\<rightarrow>\\<^sub>n  t \n 2. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule, erule SemWhileT)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>BExpr c s r n t na.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n         s , c \\<rightarrow>\\<^sub>n  r ;\n         r , While BExpr c \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow>  s , c \\<rightarrow>\\<^sub>?n78 BExpr c s r n t\n               na  ?r78 BExpr c s r n t na \n 2. \\<And>BExpr c s r n t na.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n         s , c \\<rightarrow>\\<^sub>n  r ;\n         r , While BExpr c \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow>  ?r78 BExpr c s r n t\n                           na , While BExpr\n                                 c \\<rightarrow>\\<^sub>?m78 BExpr c s r n t\n                  na  t \n 3. \\<And>BExpr c s r n t na.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n         s , c \\<rightarrow>\\<^sub>n  r ;\n         r , While BExpr c \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> ?n76 BExpr c s r n t na =\n                         max (?n78 BExpr c s r n t na)\n                          (?m78 BExpr c s r n t na) +\n                         1\n 4. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 5. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply assumption+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>BExpr c s r n t na.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n         s , c \\<rightarrow>\\<^sub>n  r ;\n         r , While BExpr c \\<rightarrow>\\<^sub>na  t \\<rbrakk>\n       \\<Longrightarrow> ?n76 BExpr c s r n t na = max n na + 1\n 2. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call \\<Longrightarrow>\n                G \\<rhd> c1 : SSpec c1;\n        G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : SSpec (Iff x1 c1 c2)\n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> Iff x1 c1 c2 : ?A85 x1 c1 c2\n 2. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            ?A85 x1 c1 c2 s t \\<longrightarrow>\n                            SSpec (Iff x1 c1 c2) s t\n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule VDMIff)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> c1 : ?A88 x1 c1 c2\n 2. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> c2 : ?B88 x1 c1 c2\n 3. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            (evalB x1 s \\<longrightarrow>\n                             ?A88 x1 c1 c2 s t) \\<and>\n                            (\\<not> evalB x1 s \\<longrightarrow>\n                             ?B88 x1 c1 c2 s t) \\<longrightarrow>\n                            SSpec (Iff x1 c1 c2) s t\n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply assumption+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 c1 c2.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            (evalB x1 s \\<longrightarrow>\n                             SSpec c1 s t) \\<and>\n                            (\\<not> evalB x1 s \\<longrightarrow>\n                             SSpec c2 s t) \\<longrightarrow>\n                            SSpec (Iff x1 c1 c2) s t\n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (simp add: SSpec_def Sem_def, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 c1 c2 s t.\n       \\<lbrakk>G \\<rhd> c1 : SSpec c1; G \\<rhd> c2 : SSpec c2;\n        G \\<rhd> Call : SSpec Call;\n        evalB x1 s \\<longrightarrow>\n        (\\<exists>n.  s , c1 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB x1 s \\<longrightarrow>\n        (\\<exists>n.  s , c2 \\<rightarrow>\\<^sub>n  t )\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff x1 c1 c2 \\<rightarrow>\\<^sub>n  t \n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (erule thin_rl, erule thin_rl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 c1 c2 s t.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n        evalB x1 s \\<longrightarrow>\n        (\\<exists>n.  s , c1 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB x1 s \\<longrightarrow>\n        (\\<exists>n.  s , c2 \\<rightarrow>\\<^sub>n  t )\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff x1 c1 c2 \\<rightarrow>\\<^sub>n  t \n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rename_tac BExpr c1 c2 s t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>BExpr c1 c2 s t.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n        evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c1 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c2 \\<rightarrow>\\<^sub>n  t )\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff BExpr c1 c2 \\<rightarrow>\\<^sub>n  t \n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (case_tac \"evalB BExpr s\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>BExpr c1 c2 s t.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n        evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c1 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c2 \\<rightarrow>\\<^sub>n  t );\n        evalB BExpr s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff BExpr c1 c2 \\<rightarrow>\\<^sub>n  t \n 2. \\<And>BExpr c1 c2 s t.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n        evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c1 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c2 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff BExpr c1 c2 \\<rightarrow>\\<^sub>n  t \n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>BExpr c1 c2 s t n.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call; evalB BExpr s;\n         s , c1 \\<rightarrow>\\<^sub>n  t \\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff BExpr c1 c2 \\<rightarrow>\\<^sub>n  t \n 2. \\<And>BExpr c1 c2 s t.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n        evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c1 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c2 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff BExpr c1 c2 \\<rightarrow>\\<^sub>n  t \n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule, rule SemTrue)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>BExpr c1 c2 s t n.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call; evalB BExpr s;\n         s , c1 \\<rightarrow>\\<^sub>n  t \\<rbrakk>\n       \\<Longrightarrow> evalB BExpr s\n 2. \\<And>BExpr c1 c2 s t n.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call; evalB BExpr s;\n         s , c1 \\<rightarrow>\\<^sub>n  t \\<rbrakk>\n       \\<Longrightarrow>  s , c1 \\<rightarrow>\\<^sub>?n107 BExpr c1 c2 s t\n                n  t \n 3. \\<And>BExpr c1 c2 s t.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n        evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c1 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c2 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff BExpr c1 c2 \\<rightarrow>\\<^sub>n  t \n 4. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply assumption+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>BExpr c1 c2 s t.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call;\n        evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c1 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s \\<longrightarrow>\n        (\\<exists>n.  s , c2 \\<rightarrow>\\<^sub>n  t );\n        \\<not> evalB BExpr s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff BExpr c1 c2 \\<rightarrow>\\<^sub>n  t \n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>BExpr c1 c2 s t n.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call; \\<not> evalB BExpr s;\n         s , c2 \\<rightarrow>\\<^sub>n  t \\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.\n                             s , Iff BExpr c1 c2 \\<rightarrow>\\<^sub>n  t \n 2. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (rule, rule SemFalse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>BExpr c1 c2 s t n.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call; \\<not> evalB BExpr s;\n         s , c2 \\<rightarrow>\\<^sub>n  t \\<rbrakk>\n       \\<Longrightarrow> \\<not> evalB BExpr s\n 2. \\<And>BExpr c1 c2 s t n.\n       \\<lbrakk>G \\<rhd> Call : SSpec Call; \\<not> evalB BExpr s;\n         s , c2 \\<rightarrow>\\<^sub>n  t \\<rbrakk>\n       \\<Longrightarrow>  s , c2 \\<rightarrow>\\<^sub>?n115 BExpr c1 c2 s t\n                n  t \n 3. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply (assumption, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<rhd> Call : SSpec Call \\<Longrightarrow> G \\<rhd> Call : SSpec Call", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>The (singleton) strong context contains the strongest\nspecification of the procedure.\\<close>"], ["", "definition StrongG :: \"VDMAssn set\"\nwhere \"StrongG = {SSpec Call}\""], ["", "text\\<open>By construction, the strongest specification of the procedure's\nbody can be verified with respect to this context.\\<close>"], ["", "lemma StrongG_Body: \"StrongG \\<rhd> body : SSpec Call\""], ["proof (prove)\ngoal (1 subgoal):\n 1. StrongG \\<rhd> body : SSpec Call", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. StrongG \\<rhd> body : SSpec Call", "apply (subgoal_tac \"StrongG \\<rhd> body : SSpec body\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. StrongG \\<rhd> body : SSpec body \\<Longrightarrow>\n    StrongG \\<rhd> body : SSpec Call\n 2. StrongG \\<rhd> body : SSpec body", "apply (erule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>s t. SSpec body s t \\<longrightarrow> SSpec Call s t\n 2. StrongG \\<rhd> body : SSpec body", "apply (simp add: SSpec_def Sem_def, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t n.\n        s , body \\<rightarrow>\\<^sub>n  t  \\<Longrightarrow>\n       \\<exists>n.  s , Call \\<rightarrow>\\<^sub>n  t \n 2. StrongG \\<rhd> body : SSpec body", "apply (rule, erule SemCall)"], ["proof (prove)\ngoal (1 subgoal):\n 1. StrongG \\<rhd> body : SSpec body", "apply (rule SSpec_derivable)"], ["proof (prove)\ngoal (1 subgoal):\n 1. StrongG \\<rhd> Call : SSpec Call", "apply (rule VDMAx)"], ["proof (prove)\ngoal (1 subgoal):\n 1. SSpec Call \\<in> StrongG", "apply (simp add: StrongG_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Thus, the strong context is verified.\\<close>"], ["", "lemma StrongG_verified: \"verified StrongG\""], ["proof (prove)\ngoal (1 subgoal):\n 1. verified StrongG", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. verified StrongG", "apply (simp add: verified_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A. A \\<in> StrongG \\<longrightarrow> StrongG \\<rhd> body : A", "apply (rule allI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A. A \\<in> StrongG \\<longrightarrow> StrongG \\<rhd> body : A", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A. A \\<in> StrongG \\<Longrightarrow> StrongG \\<rhd> body : A", "apply (subgoal_tac \"StrongG \\<rhd> body : SSpec Call\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> StrongG; StrongG \\<rhd> body : SSpec Call\\<rbrakk>\n       \\<Longrightarrow> StrongG \\<rhd> body : A\n 2. \\<And>A.\n       A \\<in> StrongG \\<Longrightarrow> StrongG \\<rhd> body : SSpec Call", "apply (simp add: StrongG_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> StrongG \\<Longrightarrow> StrongG \\<rhd> body : SSpec Call", "apply (rule StrongG_Body)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Using this result and the rules \\<open>Cut\\<close> and \\<open>Mutrec\\<close>, we\nshow that arbitrary commands satisfy their strongest specification\nwith respect to the empty context.\\<close>"], ["", "lemma SSpec_derivable_empty:\"{} \\<rhd> c : SSpec c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<rhd> c : SSpec c", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<rhd> c : SSpec c", "apply (rule Cut)"], ["proof (prove)\ngoal (2 subgoals):\n 1. {} \\<rhd> Call : ?P\n 2. {?P} \\<rhd> c : SSpec c", "apply (rule Mutrec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. finite ?G3\n 2. card ?G3 = ?n3\n 3. verified ?G3\n 4. ?P \\<in> ?G3\n 5. {?P} \\<rhd> c : SSpec c", "apply (subgoal_tac \"finite StrongG\", assumption)"], ["proof (prove)\ngoal (5 subgoals):\n 1. finite StrongG\n 2. card StrongG = ?n3\n 3. verified StrongG\n 4. ?P \\<in> StrongG\n 5. {?P} \\<rhd> c : SSpec c", "apply (simp add: StrongG_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. card StrongG = ?n3\n 2. verified StrongG\n 3. ?P \\<in> StrongG\n 4. {?P} \\<rhd> c : SSpec c", "apply (simp add: StrongG_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. verified StrongG\n 2. ?P \\<in> StrongG\n 3. {?P} \\<rhd> c : SSpec c", "apply (rule StrongG_verified)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?P \\<in> StrongG\n 2. {?P} \\<rhd> c : SSpec c", "apply (simp add: StrongG_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {SSpec Call} \\<rhd> c : SSpec c", "apply (rule SSpec_derivable)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {SSpec Call} \\<rhd> Call : SSpec Call", "apply (rule VDMAx)"], ["proof (prove)\ngoal (1 subgoal):\n 1. SSpec Call \\<in> {SSpec Call}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>From this, we easily obtain (relative) completeness.\\<close>"], ["", "theorem VDM_Complete: \"\\<Turnstile> c : A \\<Longrightarrow> {} \\<rhd> c : A\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : A  \\<Longrightarrow> {} \\<rhd> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : A  \\<Longrightarrow> {} \\<rhd> c : A", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1.  \\<Turnstile> c : A  \\<Longrightarrow> {} \\<rhd> c : ?A\n 2.  \\<Turnstile> c : A  \\<Longrightarrow>\n    \\<forall>s t. ?A s t \\<longrightarrow> A s t", "apply (rule SSpec_derivable_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : A  \\<Longrightarrow>\n    \\<forall>s t. SSpec c s t \\<longrightarrow> A s t", "apply (erule SSpec_strong)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Finally, it is easy to show that valid contexts are verified.\\<close>"], ["", "lemma Ctxt_valid_verified: \"\\<Turnstile> G \\<Longrightarrow> verified G\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> G  \\<Longrightarrow> verified G", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> G  \\<Longrightarrow> verified G", "apply (simp add: Ctxt_valid_def verified_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>A.\n                   A \\<in> G \\<longrightarrow>  \\<Turnstile> Call : A ;\n        A \\<in> G\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> body : A", "apply (erule_tac x=A in allE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> G;  \\<Turnstile> Call : A \\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> body : A", "apply (subgoal_tac \"\\<Turnstile> body : A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> G;  \\<Turnstile> Call : A ;\n         \\<Turnstile> body : A \\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> body : A\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> G;  \\<Turnstile> Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile> body : A", "apply (rotate_tac 1, erule thin_rl, drule VDM_Complete)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> G; {} \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> G \\<rhd> body : A\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> G;  \\<Turnstile> Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile> body : A", "apply (erule WEAK)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A. A \\<in> G \\<Longrightarrow> {} \\<subseteq> G\n 2. \\<And>A.\n       \\<lbrakk>A \\<in> G;  \\<Turnstile> Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile> body : A", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> G;  \\<Turnstile> Call : A \\<rbrakk>\n       \\<Longrightarrow>  \\<Turnstile> body : A", "apply (simp add: VDM_valid_def Sem_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A s t n.\n       \\<lbrakk>A \\<in> G;\n        \\<forall>s t.\n           (\\<exists>n.\n                s , Call \\<rightarrow>\\<^sub>n  t ) \\<longrightarrow>\n           A s t;\n         s , body \\<rightarrow>\\<^sub>n  t \\<rbrakk>\n       \\<Longrightarrow> A s t", "apply (erule_tac x=s in allE, erule_tac x=t in allE, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A s t n.\n       \\<lbrakk>A \\<in> G;  s , body \\<rightarrow>\\<^sub>n  t \\<rbrakk>\n       \\<Longrightarrow> \\<exists>n.  s , Call \\<rightarrow>\\<^sub>n  t", "apply (rule, erule SemCall)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>End of theory VDM\\<close>"], ["", "end"]]}