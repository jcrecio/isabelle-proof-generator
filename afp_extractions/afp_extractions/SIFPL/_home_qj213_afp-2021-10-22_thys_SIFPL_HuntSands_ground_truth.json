{"file_name": "/home/qj213/afp-2021-10-22/thys/SIFPL/HuntSands.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/SIFPL", "problem_names": ["lemma Prop4A: \"\\<Turnstile> c : Sec A R S \\<Phi> \\<Longrightarrow> ARSsecure A R S c\"", "lemma Prop4B : \"ARSsecure A R S c \\<Longrightarrow>\n   \\<Turnstile> c : Sec A R S (\\<lambda> (r,t) . \\<exists> s . (s , c \\<Down> r) \\<and> R s t)\"", "lemma EQ_LEQ: \"\\<lbrakk>EQ G p s t; LEQ pp p\\<rbrakk> \\<Longrightarrow> EQ G pp s t\"", "lemma secureEQUIV: \n  \"secure p G c H = (\\<forall> q . secure1 p G c H \\<and> secure2 q G c H)\"", "lemma HS_E_eval[rule_format]:\n\"(G, e, t) \\<in> HS_E \\<Longrightarrow> \n \\<forall> r s q. EQ G q r s \\<longrightarrow> LEQ t q \\<longrightarrow> evalE e r = evalE e s\"", "lemma HS_B_eval[rule_format]:\n\"(G, b, t) \\<in> HS_B \\<Longrightarrow>\n \\<forall> r s pp . EQ G pp r s \\<longrightarrow> LEQ t pp \\<longrightarrow>  evalB b r = evalB b s\"", "lemma IF_derivable_from_If_alg:\n  \"\\<lbrakk>(G,b,t):HS_B; (LUB p t,G,c1,H):HS; (LUB p t,G,c2,H):HS\\<rbrakk>\n   \\<Longrightarrow> (p,G,Iff b c1 c2,H):HS\"", "lemma IF_alg_derivable_from_If:\n  \"\\<lbrakk>(G,b,p):HS_B; (p,G,c1,H):HS; (p,G,c2,H):HS\\<rbrakk> \n  \\<Longrightarrow> (p,G,Iff b c1 c2,H):HS\"", "lemma HS_Aux1: \n \"(p,G,c,H):HS \\<Longrightarrow> \\<forall> x. LEQ (G x) (H x) \\<or> LEQ p (H x)\"", "lemma SKIP:\n \"X \\<rhd> Skip : Sec (Q p H) (EQ G q) (EQ G q) \n                  (\\<lambda> (s,t) . EQ G q s t)\"", "lemma ASSIGN: \n  \"\\<lbrakk>H = upd G x (LUB p t); \n    \\<forall> s ss . EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\\<rbrakk>\n  \\<Longrightarrow> X \\<rhd> Assign x e : Sec (Q p H) (EQ G q) (EQ H q) \n            (\\<lambda> (s,t) . \\<exists> r . s = update r x (evalE e r) \\<and> EQ G q r t)\"", "lemma COMP: \n  \"\\<lbrakk> X \\<rhd> c1 : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n    \\<forall> x . LEQ (G x) (K x) \\<or> LEQ p (K x);\n    \\<forall> x . LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk> \n   \\<Longrightarrow> X \\<rhd> Comp c1 c2 : Sec (Q p H) (EQ G q) (EQ H q)\n        (\\<lambda> (x, y) . \\<exists> z . \\<Phi> (z, y) \\<and> \n                          (\\<forall> w . EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\"", "lemma IF_PARALLEL:\n  \"\\<lbrakk> \\<forall> s ss . EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall> x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists> x . LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n  \\<Longrightarrow> X \\<rhd> Iff b c1 c2 : Sec (Q p H) (EQ G q) (EQ H q) \n                       (\\<lambda> (r, u) . (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n                                   ( (\\<not> evalB b u) \\<longrightarrow> \\<Psi> (r, u)))\"", "lemma IF_PARALLEL_tp:\n  \"\\<lbrakk> (G, b, p) \\<in> HS_B; (p , G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS;\n     \\<exists> x . LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n  \\<Longrightarrow> X \\<rhd> Iff b c1 c2 : Sec (Q p H) (EQ G q) (EQ H q) \n                       (\\<lambda> (r, u) . (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n                                   ( (\\<not> evalB b u) \\<longrightarrow> \\<Psi> (r, u)))\"", "lemma IF_DIAGONAL:\n  \"\\<lbrakk> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n      \\<not> (\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q);\n      X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n      X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n   \\<Longrightarrow> X \\<rhd> Iff b c1 c2 : Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda> (s,t). EQ H q s t)\"", "lemma IF_DIAGONAL_tp:\n  \"\\<lbrakk> (p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS; \n      \\<not> (\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q);\n      X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n      X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n   \\<Longrightarrow> X \\<rhd> Iff b c1 c2 : Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda> (s,t). EQ H q s t)\"", "lemma if_algorithmic:\n  \"\\<lbrakk>\\<exists> x . LEQ p (H x) \\<and> LEQ (H x) q; \n    \\<not> (\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q)\\<rbrakk>\n   \\<Longrightarrow> False\"", "lemma Fix2: \"\\<lbrakk>Monotone \\<phi>; \\<phi> (FIX \\<phi>) (s, t)\\<rbrakk> \\<Longrightarrow> FIX \\<phi> (s,t)\"", "lemma Fix1: \"\\<lbrakk>Monotone \\<phi>; FIX \\<phi> (s,t)\\<rbrakk> \\<Longrightarrow> \\<phi> (FIX \\<phi>) (s,t)\"", "lemma Fix_lemma:\"Monotone \\<phi> \\<Longrightarrow> \\<phi> (FIX \\<phi>) = FIX \\<phi>\"", "lemma PhiWhilePOp_Monotone:\"Monotone (PhiWhilePOp A b \\<Phi>)\"", "lemma PhiWhilePMonotone: \"Monotone (\\<lambda> \\<Phi> . PhiWhileP A b \\<Phi>)\"", "lemma WHILE_PARALLEL:\n \"\\<lbrakk> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \n    \\<forall> s ss . EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss; LEQ p q\\<rbrakk>\n \\<Longrightarrow> X \\<rhd> While b c : Sec (Q p G) (EQ G q) (EQ G q)\n                         (PhiWhileP (EQ G q) b \\<Phi>)\"", "lemma WHILE_PARALLEL_tp:\n \"\\<lbrakk> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \n    (G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n \\<Longrightarrow> X \\<rhd> While b c : Sec (Q p G) (EQ G q) (EQ G q)\n                         (PhiWhileP (EQ G q) b \\<Phi>)\"", "lemma varFIX: \"(b,A,\\<Phi>,s,t):var \\<Longrightarrow> PhiWhileP A b \\<Phi> (s,t)\"", "lemma FIXvar: \"PhiWhileP A b \\<Phi> (s,t) \\<Longrightarrow> (b,A,\\<Phi>,s,t):var\"", "lemma varFIXvar: \"(PhiWhileP A b \\<Phi> (s,t)) = ((b,A,\\<Phi>,s,t):var)\"", "lemma FIXvarFIX': \"(PhiWhileP A b \\<Phi>) = (\\<lambda> (s,t) . (b,A,\\<Phi>,s,t):var)\"", "lemma FIXvarFIX: \n\"PhiWhileP A b = (\\<lambda> \\<Phi> . (\\<lambda> (s,t) . (b,A,\\<Phi>,s,t):var))\"", "lemma WHILE_PARALLEL_IND:\n \"\\<lbrakk> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \n    \\<forall> s ss . EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss; LEQ p q\\<rbrakk> \\<Longrightarrow>\n   X \\<rhd> While b c : (Sec (Q p G) (EQ G q) (EQ G q)\n                    (\\<lambda> (s,t) . (b,EQ G q,\\<Phi>,s,t):var))\"", "lemma WHILE_PARALLEL_IND_tp:\n \"\\<lbrakk> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n    (G, b, p) \\<in> HS_B; LEQ p q \\<rbrakk> \\<Longrightarrow> \n X \\<rhd> (While b c) : \n  (Sec (Q p G) (EQ G q) (EQ G q) (\\<lambda> (s,t) . (b,EQ G q,\\<Phi>,s,t):var))\"", "lemma varMonotoneAux[rule_format]:\n \"(b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow> \n  (\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)) \\<longrightarrow>\n  (b, A, \\<Psi>, s, t) \\<in> var\"", "lemma var_MonotoneInPhi:\n  \"Monotone (\\<lambda> \\<Phi> . (\\<lambda> (s,t) .(b,A, \\<Phi>,s,t):var))\"", "lemma varMonotone_byFIX: \"Monotone (\\<lambda> \\<Phi> . (\\<lambda> (s,t) .(b,A, \\<Phi>,s,t):var))\"", "lemma varD_transitive[rule_format]: \n \"(b,A,s,t):varD \\<Longrightarrow> transitive A \\<longrightarrow> A s t\"", "lemma Q_transitive:\"transitive (Q q G)\"", "lemma varDQ:\"(b,Q q G,s,t):varD \\<Longrightarrow> Q q G s t\"", "lemma WHILE_DIAGONAL:\n \"\\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b c : Sec (Q p G) (EQ G q) (EQ G q)\n                               (\\<lambda> (s,t). EQ G q s t)\"", "lemma varDMonotoneInAssertion[rule_format]:\n  \"(b, A, s, t) \\<in> varD \\<Longrightarrow> \n   (\\<forall>s t. A s t \\<longrightarrow> B s t) \\<longrightarrow> (b, B, s, t) \\<in> varD\"", "lemma varDMonotoneInPhi[rule_format]:\n  \"\\<lbrakk>(b, A, s, t) \\<in> varD; \\<forall>s t. \\<Phi>(s, t) \\<longrightarrow> \\<Psi>(s, t)\\<rbrakk> \n  \\<Longrightarrow> (b, A, s, t) \\<in> varD\"", "lemma SUB:\n  \"\\<lbrakk> LEQ p pp; \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n     X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n   \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\"", "lemma Theorem3_derivAux[rule_format]: \n\"(p,G,c,H):HS \\<Longrightarrow> Theorem3derivProp X p G c H q\"", "theorem Theorem4[rule_format]: \n  \"(p,G,c,H):HS \\<Longrightarrow> \n  (\\<exists> \\<Phi> . X \\<rhd> c : (Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>))\"", "theorem HuntSands33: \"(p,G,c,H):HS \\<Longrightarrow> secure p G c H\"", "lemma Sec1_deriv: \"(p,G,c,H):HS \\<Longrightarrow> X \\<rhd> c : (Q p H)\"", "lemma \n \"(p,G,c,H):HS \\<Longrightarrow> \n  X \\<rhd> c : (\\<lambda> s t . \\<forall> x . \\<not> LEQ p (H x) \\<longrightarrow> s x = t x)\"", "theorem HuntSands33_1:\"(p,G,c,H):HS \\<Longrightarrow> secure1 p G c H\"", "lemma Sec2_deriv: \n  \"(p,G,c,H):HS \\<Longrightarrow> \n  (\\<exists> A . X \\<rhd> c : (Sec (Q p H) (EQ G q) (EQ H q) A))\"", "lemma Sec2:\n  \"(p,G,c,H):HS \\<Longrightarrow> \n   (\\<exists> \\<Phi> . \\<Turnstile> c : (Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>))\"", "theorem HuntSands33_2: \"(p,G,c,H):HS \\<Longrightarrow> secure2 q G c H\"", "lemma CALL: \n  \"\\<lbrakk> ({B} \\<union> X) \\<rhd> body : Sec A R S (\\<phi>(FIX \\<phi>));\n      Monotone \\<phi>; B = Sec A R S (FIX \\<phi>) \\<rbrakk>\n   \\<Longrightarrow> X \\<rhd> Call : B\"", "lemma SkipMonotone:\"Monotone (\\<lambda> T (s,t). EQ G p s t)\"", "lemma AssignMonotone:\"Monotone (\\<lambda> T (s,t). \\<exists>r. s = update r x (evalE e r) \\<and> EQ G p r t)\"", "lemma CompMonotone: \"Monotone (\\<lambda> T (s,t). \\<exists> r. A r t \\<and> (\\<forall>w. EQ K q r w \\<longrightarrow> B s w))\"", "lemma IfPMonotone1: \"Monotone (\\<lambda> T (s,t). (evalB b t \\<longrightarrow> T(s,t)) \\<and> (\\<not> evalB b t \\<longrightarrow> B (s,t)))\"", "lemma IfPMonotone2: \"Monotone (\\<lambda> T (s,t). (evalB b t \\<longrightarrow> A(s,t)) \\<and> (\\<not> evalB b t \\<longrightarrow> T (s,t)))\"", "lemma IfDMonotone:\"Monotone (\\<lambda> T (s,t). EQ G p s t)\"", "lemma WhileDMonotone: \"Monotone (\\<lambda> T (s,t). EQ G q s t)\"", "lemma SubMonotone: \"Monotone (\\<lambda>T. T)\"", "lemma DerivProp_Aux: \"(X,c,A):Deriv \\<Longrightarrow> DProp A\"", "lemma DerivMono: \n \"(X,c,B):Deriv \\<Longrightarrow>\n  \\<exists> A R S \\<phi> . B =  Sec A R S (\\<phi> (FIX \\<phi>)) \\<and> Monotone \\<phi>\"", "theorem Deriv_derivable: \"(X,c,A):Deriv \\<Longrightarrow> X \\<rhd> c :A\""], "translations": [["", "lemma Prop4A: \"\\<Turnstile> c : Sec A R S \\<Phi> \\<Longrightarrow> ARSsecure A R S c\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : Sec A R S \\<Phi>  \\<Longrightarrow> ARSsecure A R S c", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<Turnstile> c : Sec A R S \\<Phi>  \\<Longrightarrow> ARSsecure A R S c", "by (simp add:  VDM_valid_def Sec_def ARSsecure_def RSsecure_def)"], ["", "(*>*)"], ["", "lemma Prop4B : \"ARSsecure A R S c \\<Longrightarrow>\n   \\<Turnstile> c : Sec A R S (\\<lambda> (r,t) . \\<exists> s . (s , c \\<Down> r) \\<and> R s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ARSsecure A R S c \\<Longrightarrow>\n     \\<Turnstile> c : Sec A R S\n                       (\\<lambda>(r, t).\n                           \\<exists>s. s , c \\<Down> r  \\<and> R s t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ARSsecure A R S c \\<Longrightarrow>\n     \\<Turnstile> c : Sec A R S\n                       (\\<lambda>(r, t).\n                           \\<exists>s. s , c \\<Down> r  \\<and> R s t)", "apply (simp add: VDM_valid_def Sec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ARSsecure A R S c \\<Longrightarrow>\n    \\<forall>s t.\n       s , c \\<Down> t  \\<longrightarrow>\n       A s t \\<and>\n       (\\<forall>r.\n           R s r \\<longrightarrow>\n           (\\<exists>s. s , c \\<Down> t  \\<and> R s r)) \\<and>\n       (\\<forall>r.\n           (\\<exists>sa. sa , c \\<Down> r  \\<and> R sa s) \\<longrightarrow>\n           S r t)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>ARSsecure A R S c; s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> A s t \\<and>\n                         (\\<forall>r.\n                             R s r \\<longrightarrow>\n                             (\\<exists>s.\n                                 s , c \\<Down> t  \\<and> R s r)) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>sa.\n                                 sa , c \\<Down> r  \\<and>\n                                 R sa s) \\<longrightarrow>\n                             S r t)", "apply (unfold ARSsecure_def RSsecure_def VDM_valid_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> A s t \\<and>\n                         (\\<forall>r.\n                             R s r \\<longrightarrow>\n                             (\\<exists>s.\n                                 s , c \\<Down> t  \\<and> R s r)) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>sa.\n                                 sa , c \\<Down> r  \\<and>\n                                 R sa s) \\<longrightarrow>\n                             S r t)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> A s t\n 2. \\<And>s t.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             R s r \\<longrightarrow>\n                             (\\<exists>s.\n                                 s , c \\<Down> t  \\<and> R s r)) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>sa.\n                                 sa , c \\<Down> r  \\<and>\n                                 R sa s) \\<longrightarrow>\n                             S r t)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             R s r \\<longrightarrow>\n                             (\\<exists>s.\n                                 s , c \\<Down> t  \\<and> R s r)) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>sa.\n                                 sa , c \\<Down> r  \\<and>\n                                 R sa s) \\<longrightarrow>\n                             S r t)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            R s r \\<longrightarrow>\n                            (\\<exists>s. s , c \\<Down> t  \\<and> R s r)\n 2. \\<And>s t.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (\\<exists>sa.\n                                sa , c \\<Down> r  \\<and>\n                                R sa s) \\<longrightarrow>\n                            S r t", "apply (rule, rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t ; R s r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s. s , c \\<Down> t  \\<and> R s r\n 2. \\<And>s t.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (\\<exists>sa.\n                                sa , c \\<Down> r  \\<and>\n                                R sa s) \\<longrightarrow>\n                            S r t", "apply (rule_tac x=s in exI, rule, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>(\\<forall>s t.\n                    s , c \\<Down> t  \\<longrightarrow> A s t) \\<and>\n                (\\<forall>s t ss tt.\n                    R s t \\<longrightarrow>\n                    s , c \\<Down> ss  \\<longrightarrow>\n                    t , c \\<Down> tt  \\<longrightarrow> S ss tt);\n        s , c \\<Down> t \\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (\\<exists>sa.\n                                sa , c \\<Down> r  \\<and>\n                                R sa s) \\<longrightarrow>\n                            S r t", "apply (rule, rule, erule exE, erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r sa.\n       \\<lbrakk>s , c \\<Down> t ; sa , c \\<Down> r  \\<and> R sa s;\n        \\<forall>s t. s , c \\<Down> t  \\<longrightarrow> A s t;\n        \\<forall>s t ss tt.\n           R s t \\<longrightarrow>\n           s , c \\<Down> ss  \\<longrightarrow>\n           t , c \\<Down> tt  \\<longrightarrow> S ss tt\\<rbrakk>\n       \\<Longrightarrow> S r t", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "subsection\\<open>Basic definitions\\<close>"], ["", "text\\<open>Contexts map program variables to lattice elements.\\<close>"], ["", "type_synonym \"CONTEXT\" = \"Var \\<Rightarrow> L\""], ["", "definition upd ::\"CONTEXT \\<Rightarrow> Var \\<Rightarrow> L \\<Rightarrow> CONTEXT\"\nwhere \"upd G x p = (\\<lambda> y . if x=y then p else G y)\""], ["", "text\\<open>We also define the predicate $\\mathit{EQ}$ \n%(in our paper denoted by the symbol $\\ltimes$) \nwhich expresses when two states agree on all\nvariables whose entry in a given context is below a certain security\nlevel.\\<close>"], ["", "definition EQ:: \"CONTEXT \\<Rightarrow> L \\<Rightarrow> State \\<Rightarrow> State \\<Rightarrow> bool\"\nwhere \"EQ G p = (\\<lambda> s t . \\<forall> x . LEQ (G x) p \\<longrightarrow>  s x = t x)\""], ["", "lemma EQ_LEQ: \"\\<lbrakk>EQ G p s t; LEQ pp p\\<rbrakk> \\<Longrightarrow> EQ G pp s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EQ G p s t; LEQ pp p\\<rbrakk> \\<Longrightarrow> EQ G pp s t", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>EQ G p s t; LEQ pp p\\<rbrakk> \\<Longrightarrow> EQ G pp s t", "apply (simp add: EQ_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) p \\<longrightarrow> s x = t x;\n        LEQ pp p; LEQ (G x) pp\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply (erule_tac x=x in allE, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>LEQ pp p; LEQ (G x) pp\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) p", "apply (erule LAT2, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>The assertion called $\\mathcal{Q}$ in our paper:\\<close>"], ["", "definition Q::\"L \\<Rightarrow> CONTEXT \\<Rightarrow> VDMAssn\"\nwhere \"Q p H = (\\<lambda> s t . \\<forall> x . (\\<not> LEQ p (H x)) \\<longrightarrow> t x = s x)\""], ["", "text\\<open>$Q$ expresses the preservation of values in a single execution,\nand corresponds to the first clause of Definition 3.2 in\n\\cite{HuntSands:POPL2006}. In accordance with this, the following\ndefinition of security instantiates the $A$ position of $A; R\n\\Rightarrow S$-security with $Q$, while the context-dependent binary\nstate relations are plugged in as the $R$ and $S$ components.\\<close>"], ["", "definition secure :: \"L \\<Rightarrow> CONTEXT \\<Rightarrow> IMP \\<Rightarrow> CONTEXT \\<Rightarrow> bool\"\nwhere \"secure p G c H = (\\<forall> q . ARSsecure (Q p H) (EQ G q) (EQ H q) c)\""], ["", "text\\<open>Indeed, one may show that this notion of security amounds to the\nconjunction of a unary (i.e.~one-execution-)property and a binary\n(i.e.~two-execution-) property, as expressed in Hunt \\& Sands'\nDefinition 3.2.\\<close>"], ["", "definition secure1 :: \"L \\<Rightarrow> CONTEXT \\<Rightarrow> IMP \\<Rightarrow> CONTEXT \\<Rightarrow> bool\"\nwhere \"secure1 p G c H = (\\<forall> s t . (s,c \\<Down> t) \\<longrightarrow> Q p H s t)\""], ["", "definition secure2 :: \"L \\<Rightarrow> CONTEXT \\<Rightarrow> IMP \\<Rightarrow> CONTEXT \\<Rightarrow> bool\"\nwhere \"secure2 p G c H = ((\\<forall> s t ss tt . (s,c \\<Down> t) \\<longrightarrow> (ss,c \\<Down> tt) \\<longrightarrow>\n                                    EQ G p s ss \\<longrightarrow> EQ H p t tt))\""], ["", "lemma secureEQUIV: \n  \"secure p G c H = (\\<forall> q . secure1 p G c H \\<and> secure2 q G c H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. secure p G c H = (\\<forall>q. secure1 p G c H \\<and> secure2 q G c H)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. secure p G c H = (\\<forall>q. secure1 p G c H \\<and> secure2 q G c H)", "by (simp add: secure1_def secure2_def secure_def ARSsecure_def\n              RSsecure_def Q_def VDM_valid_def, auto)"], ["", "(*>*)"], ["", "subsection\\<open>Type system\\<close>"], ["", "text\\<open>The type system of Hunt and Sands -- our language formalisation\nuses a concrete datatype of expressions, so we add the obvious typing\nrules for expressions and prove the expected evaluation lemmas.\\<close>"], ["", "inductive_set HS_E:: \"(CONTEXT \\<times> Expr \\<times> L) set\"\nwhere \nHS_E_var: \"(G, varE x, G x) : HS_E\"\n| HS_E_val: \"(G, valE c, bottom) : HS_E\"\n| HS_E_op: \"\\<lbrakk>(G, e1,p1):HS_E; (G, e2,p2):HS_E; p= LUB p1 p2\\<rbrakk>\n           \\<Longrightarrow> (G,opE f e1 e2,p) : HS_E\"\n| HS_E_sup: \"\\<lbrakk>(G,e,p):HS_E; LEQ p q\\<rbrakk> \\<Longrightarrow> (G,e,q):HS_E\""], ["", "lemma HS_E_eval[rule_format]:\n\"(G, e, t) \\<in> HS_E \\<Longrightarrow> \n \\<forall> r s q. EQ G q r s \\<longrightarrow> LEQ t q \\<longrightarrow> evalE e r = evalE e s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G, e, t) \\<in> HS_E \\<Longrightarrow>\n    \\<forall>r s q.\n       EQ G q r s \\<longrightarrow>\n       LEQ t q \\<longrightarrow> evalE e r = evalE e s", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (G, e, t) \\<in> HS_E \\<Longrightarrow>\n    \\<forall>r s q.\n       EQ G q r s \\<longrightarrow>\n       LEQ t q \\<longrightarrow> evalE e r = evalE e s", "apply (erule HS_E.induct)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G x.\n       \\<forall>r s q.\n          EQ G q r s \\<longrightarrow>\n          LEQ (G x) q \\<longrightarrow> evalE (varE x) r = evalE (varE x) s\n 2. \\<And>G c.\n       \\<forall>r s q.\n          EQ G q r s \\<longrightarrow>\n          LEQ bottom q \\<longrightarrow> evalE (valE c) r = evalE (valE c) s\n 3. \\<And>G e1 p1 e2 p2 p f.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p1 q \\<longrightarrow> evalE e1 r = evalE e1 s;\n        (G, e2, p2) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        p = LUB p1 p2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s q.\n                            EQ G q r s \\<longrightarrow>\n                            LEQ p q \\<longrightarrow>\n                            evalE (opE f e1 e2) r = evalE (opE f e1 e2) s\n 4. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G x r s q.\n       \\<lbrakk>EQ G q r s; LEQ (G x) q\\<rbrakk> \\<Longrightarrow> r x = s x\n 2. \\<And>G c.\n       \\<forall>r s q.\n          EQ G q r s \\<longrightarrow>\n          LEQ bottom q \\<longrightarrow> evalE (valE c) r = evalE (valE c) s\n 3. \\<And>G e1 p1 e2 p2 p f.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p1 q \\<longrightarrow> evalE e1 r = evalE e1 s;\n        (G, e2, p2) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        p = LUB p1 p2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s q.\n                            EQ G q r s \\<longrightarrow>\n                            LEQ p q \\<longrightarrow>\n                            evalE (opE f e1 e2) r = evalE (opE f e1 e2) s\n 4. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (simp add: EQ_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G c.\n       \\<forall>r s q.\n          EQ G q r s \\<longrightarrow>\n          LEQ bottom q \\<longrightarrow> evalE (valE c) r = evalE (valE c) s\n 2. \\<And>G e1 p1 e2 p2 p f.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p1 q \\<longrightarrow> evalE e1 r = evalE e1 s;\n        (G, e2, p2) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        p = LUB p1 p2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s q.\n                            EQ G q r s \\<longrightarrow>\n                            LEQ p q \\<longrightarrow>\n                            evalE (opE f e1 e2) r = evalE (opE f e1 e2) s\n 3. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 p f.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p1 q \\<longrightarrow> evalE e1 r = evalE e1 s;\n        (G, e2, p2) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        p = LUB p1 p2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s q.\n                            EQ G q r s \\<longrightarrow>\n                            LEQ p q \\<longrightarrow>\n                            evalE (opE f e1 e2) r = evalE (opE f e1 e2) s\n 2. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p1 q \\<longrightarrow> evalE e1 r = evalE e1 s;\n        (G, e2, p2) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        EQ G q r s; LEQ (LUB p1 p2) q\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (erule_tac x=r in allE, erule_tac x=r in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        \\<forall>s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p1 q \\<longrightarrow> evalE e1 r = evalE e1 s;\n        \\<forall>s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (erule_tac x=s in allE, erule_tac x=s in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        \\<forall>q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p1 q \\<longrightarrow> evalE e1 r = evalE e1 s;\n        \\<forall>q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (erule_tac x=q in allE, erule_tac x=q in allE, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p1 q \\<longrightarrow> evalE e1 r = evalE e1 s;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 q\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 3. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (rule LAT2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 (?p2.36 G e1 p1 e2 p2 f r s q)\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> LEQ (?p2.36 G e1 p1 e2 p2 f r s q) q\n 3. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 4. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> LEQ (?p2.36 G e1 p1 e2 p2 f r s q) q\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 (?p2.36 G e1 p1 e2 p2 f r s q)\n 3. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 4. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 (LUB p1 p2)\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 3. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (simp add: LAT3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q;\n        LEQ p2 q \\<longrightarrow> evalE e2 r = evalE e2 s;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 q\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s;\n        evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 3. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (rule LAT2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (?p2.42 G e1 p1 e2 p2 f r s q)\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ (?p2.42 G e1 p1 e2 p2 f r s q) q\n 3. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s;\n        evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 4. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ (?p2.42 G e1 p1 e2 p2 f r s q) q\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (?p2.42 G e1 p1 e2 p2 f r s q)\n 3. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s;\n        evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 4. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (LUB p1 p2)\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s;\n        evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 3. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (subgoal_tac \"LEQ p2 (LUB p2 p1)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s;\n        LEQ p2 (LUB p2 p1)\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (LUB p1 p2)\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (LUB p2 p1)\n 3. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s;\n        evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 4. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (simp add: LAT4)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (LUB p2 p1)\n 2. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s;\n        evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 3. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply (simp add: LAT3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s q.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G q r s;\n        LEQ (LUB p1 p2) q; evalE e1 r = evalE e1 s;\n        evalE e2 r = evalE e2 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G e p q.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s qa.\n                            EQ G qa r s \\<longrightarrow>\n                            LEQ q qa \\<longrightarrow> evalE e r = evalE e s", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G e p q r s qa.\n       \\<lbrakk>(G, e, p) \\<in> HS_E;\n        \\<forall>r s q.\n           EQ G q r s \\<longrightarrow>\n           LEQ p q \\<longrightarrow> evalE e r = evalE e s;\n        LEQ p q; EQ G qa r s; LEQ q qa\\<rbrakk>\n       \\<Longrightarrow> evalE e r = evalE e s", "apply (erule_tac x=r in allE, erule_tac x=s in allE, erule_tac x=qa in allE, erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e p q r s qa.\n       \\<lbrakk>(G, e, p) \\<in> HS_E; LEQ p q; EQ G qa r s;\n        LEQ q qa\\<rbrakk>\n       \\<Longrightarrow> EQ G qa r s\n 2. \\<And>G e p q r s qa.\n       \\<lbrakk>(G, e, p) \\<in> HS_E; LEQ p q; EQ G qa r s; LEQ q qa;\n        LEQ p qa \\<longrightarrow> evalE e r = evalE e s\\<rbrakk>\n       \\<Longrightarrow> evalE e r = evalE e s", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G e p q r s qa.\n       \\<lbrakk>(G, e, p) \\<in> HS_E; LEQ p q; EQ G qa r s; LEQ q qa;\n        LEQ p qa \\<longrightarrow> evalE e r = evalE e s\\<rbrakk>\n       \\<Longrightarrow> evalE e r = evalE e s", "apply (erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G e p q r s qa.\n       \\<lbrakk>(G, e, p) \\<in> HS_E; LEQ p q; EQ G qa r s;\n        LEQ q qa\\<rbrakk>\n       \\<Longrightarrow> LEQ p qa", "apply (erule LAT2, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Likewise for boolean expressions:\\<close>"], ["", "inductive_set HS_B:: \"(CONTEXT \\<times> BExpr \\<times> L) set\"\nwhere\nHS_B_compB: \"\\<lbrakk>(G, e1,p1):HS_E; (G, e2,p2):HS_E; p= LUB p1 p2\\<rbrakk>\n             \\<Longrightarrow> (G,compB f e1 e2,p) : HS_B\"\n| HS_B_sup: \"\\<lbrakk>(G,b,p):HS_B; LEQ p q\\<rbrakk> \\<Longrightarrow> (G,b,q):HS_B\""], ["", "lemma HS_B_eval[rule_format]:\n\"(G, b, t) \\<in> HS_B \\<Longrightarrow>\n \\<forall> r s pp . EQ G pp r s \\<longrightarrow> LEQ t pp \\<longrightarrow>  evalB b r = evalB b s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G, b, t) \\<in> HS_B \\<Longrightarrow>\n    \\<forall>r s pp.\n       EQ G pp r s \\<longrightarrow>\n       LEQ t pp \\<longrightarrow> evalB b r = evalB b s", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (G, b, t) \\<in> HS_B \\<Longrightarrow>\n    \\<forall>r s pp.\n       EQ G pp r s \\<longrightarrow>\n       LEQ t pp \\<longrightarrow> evalB b r = evalB b s", "apply (erule HS_B.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 p f.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E;\n        p = LUB p1 p2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ p pp \\<longrightarrow>\n                            evalB (compB f e1 e2) r =\n                            evalB (compB f e1 e2) s\n 2. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 r) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (subgoal_tac \"evalE e1 r = evalE e1 s\", clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 s) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> evalE e1 r = evalE e1 s\n 3. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> evalE e1 r = evalE e1 s\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 s) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 3. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (erule HS_E_eval)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> EQ G (?q19 G e1 p1 e2 p2 f r s pp) r s\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 (?q19 G e1 p1 e2 p2 f r s pp)\n 3. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 s) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 4. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 pp\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 s) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 3. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (rule LAT2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 (?p2.22 G e1 p1 e2 p2 f r s pp)\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> LEQ (?p2.22 G e1 p1 e2 p2 f r s pp) pp\n 3. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 s) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 4. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> LEQ (?p2.22 G e1 p1 e2 p2 f r s pp) pp\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 (?p2.22 G e1 p1 e2 p2 f r s pp)\n 3. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 s) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 4. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp\\<rbrakk>\n       \\<Longrightarrow> LEQ p1 (LUB p1 p2)\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 s) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 3. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (simp add: LAT3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> f (evalE e1 s) (evalE e2 r) =\n                         f (evalE e1 s) (evalE e2 s)\n 2. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (subgoal_tac \"evalE e2 r = evalE e2 s\", clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; (G, e2, p2) \\<in> HS_E; EQ G pp r s;\n        LEQ (LUB p1 p2) pp; evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> evalE e2 r = evalE e2 s\n 2. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (erule HS_E_eval)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> EQ G (?q26 G e1 p1 e2 p2 f r s pp) r s\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (?q26 G e1 p1 e2 p2 f r s pp)\n 3. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 pp\n 2. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (rule LAT2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (?p2.29 G e1 p1 e2 p2 f r s pp)\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ (?p2.29 G e1 p1 e2 p2 f r s pp) pp\n 3. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ (?p2.29 G e1 p1 e2 p2 f r s pp) pp\n 2. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (?p2.29 G e1 p1 e2 p2 f r s pp)\n 3. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (LUB p1 p2)\n 2. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (subgoal_tac \"LEQ p2 (LUB p2 p1)\", simp add: LAT4)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G e1 p1 e2 p2 f r s pp.\n       \\<lbrakk>(G, e1, p1) \\<in> HS_E; EQ G pp r s; LEQ (LUB p1 p2) pp;\n        evalE e1 r = evalE e1 s\\<rbrakk>\n       \\<Longrightarrow> LEQ p2 (LUB p2 p1)\n 2. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply (simp add: LAT3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G b p q.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r s pp.\n                            EQ G pp r s \\<longrightarrow>\n                            LEQ q pp \\<longrightarrow> evalB b r = evalB b s", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G b p q r s pp.\n       \\<lbrakk>(G, b, p) \\<in> HS_B;\n        \\<forall>r s pp.\n           EQ G pp r s \\<longrightarrow>\n           LEQ p pp \\<longrightarrow> evalB b r = evalB b s;\n        LEQ p q; EQ G pp r s; LEQ q pp\\<rbrakk>\n       \\<Longrightarrow> evalB b r = evalB b s", "apply (erule_tac x=r in allE, erule_tac x=s in allE, erule_tac x=pp in allE, erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b p q r s pp.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q; EQ G pp r s;\n        LEQ q pp\\<rbrakk>\n       \\<Longrightarrow> EQ G pp r s\n 2. \\<And>G b p q r s pp.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q; EQ G pp r s; LEQ q pp;\n        LEQ p pp \\<longrightarrow> evalB b r = evalB b s\\<rbrakk>\n       \\<Longrightarrow> evalB b r = evalB b s", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G b p q r s pp.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q; EQ G pp r s; LEQ q pp;\n        LEQ p pp \\<longrightarrow> evalB b r = evalB b s\\<rbrakk>\n       \\<Longrightarrow> evalB b r = evalB b s", "apply (erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G b p q r s pp.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q; EQ G pp r s;\n        LEQ q pp\\<rbrakk>\n       \\<Longrightarrow> LEQ p pp", "apply (erule LAT2, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>The typing rules for commands follow.\\<close>"], ["", "inductive_set HS::\"(L \\<times> CONTEXT \\<times> IMP \\<times> CONTEXT) set\"\nwhere\nHS_Skip:   \"(p,G,Skip,G):HS\"\n\n| HS_Assign:\n  \"(G,e,t):HS_E \\<Longrightarrow> (p,G,Assign x e,upd G x (LUB p t)):HS\"\n\n| HS_Seq:\n  \"\\<lbrakk>(p,G,c,K):HS; (p,K,d,H):HS\\<rbrakk> \\<Longrightarrow> (p,G, Comp c d,H):HS\"\n\n| HS_If:\n  \"\\<lbrakk>(G,b,t):HS_B; (LUB p t,G,c,H):HS; (LUB p t,G,d,H):HS\\<rbrakk> \\<Longrightarrow>\n   (p,G,Iff b c d,H):HS\"\n\n| HS_If_alg:\n  \"\\<lbrakk>(G,b,p):HS_B; (p,G,c,H):HS; (p,G,d,H):HS\\<rbrakk> \\<Longrightarrow>\n   (p,G,Iff b c d,H):HS\"\n\n| HS_While:\n  \"\\<lbrakk>(G,b,t):HS_B; (LUB p t,G,c,H):HS;H=G\\<rbrakk> \\<Longrightarrow>\n   (p,G,While b c,H):HS\"\n\n| HS_Sub:\n  \"\\<lbrakk> (pp,GG,c,HH):HS; LEQ p pp; \\<forall> x . LEQ (G x) (GG x); \n       \\<forall> x . LEQ (HH x) (H x)\\<rbrakk> \\<Longrightarrow>\n   (p,G,c,H):HS\""], ["", "text \\<open>Using \\<open>HS_Sub\\<close>, rules \\<open>If\\<close> and \\<open>If_alg\\<close> are\ninter-derivable.\\<close>"], ["", "lemma IF_derivable_from_If_alg:\n  \"\\<lbrakk>(G,b,t):HS_B; (LUB p t,G,c1,H):HS; (LUB p t,G,c2,H):HS\\<rbrakk>\n   \\<Longrightarrow> (p,G,Iff b c1 c2,H):HS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (p, G, Iff b c1 c2, H) \\<in> HS", "apply (subgoal_tac \"(LUB p t,G,Iff b c1 c2,H):HS\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS;\n     (LUB p t, G, Iff b c1 c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (p, G, Iff b c1 c2, H) \\<in> HS\n 2. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, Iff b c1 c2, H) \\<in> HS", "apply (erule HS_Sub)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> LEQ p (LUB p t)\n 2. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (G x)\n 3. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (H x) (H x)\n 4. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, Iff b c1 c2, H) \\<in> HS", "apply (rule LAT3)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (G x)\n 2. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (H x) (H x)\n 3. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, Iff b c1 c2, H) \\<in> HS", "apply (clarsimp, rule LAT6)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (H x) (H x)\n 2. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, Iff b c1 c2, H) \\<in> HS", "apply (clarsimp, rule LAT6)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, Iff b c1 c2, H) \\<in> HS", "apply (rule HS_If_alg)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (G, b, LUB p t) \\<in> HS_B\n 2. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, c1, H) \\<in> HS\n 3. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, c2, H) \\<in> HS", "apply (erule HS_B_sup)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> LEQ t (LUB p t)\n 2. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, c1, H) \\<in> HS\n 3. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, c2, H) \\<in> HS", "apply (subgoal_tac \"LEQ t (LUB t p)\", simp add: LAT4)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> LEQ t (LUB t p)\n 2. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, c1, H) \\<in> HS\n 3. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, c2, H) \\<in> HS", "apply (rule LAT3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, c1, H) \\<in> HS\n 2. \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c1, H) \\<in> HS;\n     (LUB p t, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p t, G, c2, H) \\<in> HS", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma IF_alg_derivable_from_If:\n  \"\\<lbrakk>(G,b,p):HS_B; (p,G,c1,H):HS; (p,G,c2,H):HS\\<rbrakk> \n  \\<Longrightarrow> (p,G,Iff b c1 c2,H):HS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (p, G, Iff b c1 c2, H) \\<in> HS", "apply (erule HS_If)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p p, G, c1, H) \\<in> HS\n 2. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p p, G, c2, H) \\<in> HS", "apply (subgoal_tac \"LUB p p = p\", clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> LUB p p = p\n 2. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p p, G, c2, H) \\<in> HS", "apply (subgoal_tac \"p = LUB p p\", fastforce)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> p = LUB p p\n 2. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p p, G, c2, H) \\<in> HS", "apply (rule LAT7)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> (LUB p p, G, c2, H) \\<in> HS", "apply (subgoal_tac \"LUB p p = p\", clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> LUB p p = p", "apply (subgoal_tac \"p = LUB p p\", fastforce)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> p = LUB p p", "apply (rule LAT7)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>An easy induction on typing derivations shows the following property.\\<close>"], ["", "lemma HS_Aux1: \n \"(p,G,c,H):HS \\<Longrightarrow> \\<forall> x. LEQ (G x) (H x) \\<or> LEQ p (H x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (erule HS.induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>p G. \\<forall>x. LEQ (G x) (G x) \\<or> LEQ p (G x)\n 2. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<forall>xa.\n          LEQ (G xa) (upd G x (LUB p t) xa) \\<or>\n          LEQ p (upd G x (LUB p t) xa)\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "(*Skip*)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>p G. \\<forall>x. LEQ (G x) (G x) \\<or> LEQ p (G x)\n 2. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<forall>xa.\n          LEQ (G xa) (upd G x (LUB p t) xa) \\<or>\n          LEQ p (upd G x (LUB p t) xa)\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (simp add: LAT6)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<forall>xa.\n          LEQ (G xa) (upd G x (LUB p t) xa) \\<or>\n          LEQ p (upd G x (LUB p t) xa)\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "(*Assign*)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<forall>xa.\n          LEQ (G xa) (upd G x (LUB p t) xa) \\<or>\n          LEQ p (upd G x (LUB p t) xa)\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (simp add: upd_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<forall>xa.\n          (x = xa \\<longrightarrow>\n           LEQ (G xa) (LUB p t) \\<or> LEQ p (LUB p t)) \\<and>\n          (x \\<noteq> xa \\<longrightarrow>\n           LEQ (G xa) (G xa) \\<or> LEQ p (G xa))\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply clarsimp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x xa.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       (x = xa \\<longrightarrow>\n        LEQ (G xa) (LUB p t) \\<or> LEQ p (LUB p t)) \\<and>\n       (x \\<noteq> xa \\<longrightarrow>\n        LEQ (G xa) (G xa) \\<or> LEQ p (G xa))\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply rule"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G e t p x xa.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       x = xa \\<longrightarrow> LEQ (G xa) (LUB p t) \\<or> LEQ p (LUB p t)\n 2. \\<And>G e t p x xa.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       x \\<noteq> xa \\<longrightarrow> LEQ (G xa) (G xa) \\<or> LEQ p (G xa)\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply clarsimp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G e t p xa.\n       \\<lbrakk>(G, e, t) \\<in> HS_E; \\<not> LEQ p (LUB p t)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G xa) (LUB p t)\n 2. \\<And>G e t p x xa.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       x \\<noteq> xa \\<longrightarrow> LEQ (G xa) (G xa) \\<or> LEQ p (G xa)\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (simp add: LAT3)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x xa.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       x \\<noteq> xa \\<longrightarrow> LEQ (G xa) (G xa) \\<or> LEQ p (G xa)\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply clarsimp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x xa.\n       \\<lbrakk>(G, e, t) \\<in> HS_E; x \\<noteq> xa;\n        \\<not> LEQ p (G xa)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G xa) (G xa)\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (simp add: LAT6)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "(*Seq*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply clarsimp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (erule_tac x=x in allE, erule disjE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x); \\<not> LEQ p (H x);\n        LEQ (G x) (K x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x); \\<not> LEQ p (H x);\n        LEQ p (K x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (erule_tac x=x in allE, erule disjE)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ (G x) (K x); LEQ (K x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ (G x) (K x); LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 3. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x); \\<not> LEQ p (H x);\n        LEQ p (K x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (erule LAT2)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ (K x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (K x) (H x)\n 2. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ (G x) (K x); LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 3. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x); \\<not> LEQ p (H x);\n        LEQ p (K x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ (G x) (K x); LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x); \\<not> LEQ p (H x);\n        LEQ p (K x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply fast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x); \\<not> LEQ p (H x);\n        LEQ p (K x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (erule_tac x=x in allE, erule disjE)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ p (K x); LEQ (K x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ p (K x); LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply(subgoal_tac \"LEQ p (H x)\", fast)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ p (K x); LEQ (K x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (H x)\n 2. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ p (K x); LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (erule LAT2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ (K x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (K x) (H x)\n 2. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ p (K x); LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H x.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ p (K x); LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply fast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "(*If*)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (erule_tac x=x in allE, erule disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (G x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply(subgoal_tac \"LEQ p (H x)\", fast)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (H x)\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (subgoal_tac \"LEQ p (LUB p t)\", rotate_tac -1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d x.\n       \\<lbrakk>LEQ p (LUB p t); (G, b, t) \\<in> HS_B;\n        (LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (H x)\n 2. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (LUB p t)\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (erule LAT2)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) (H x)\n 2. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (LUB p t)\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (LUB p t)\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (rule LAT3)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "(*If2*)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (p, G, d, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "(*While*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x);\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c x.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<forall>x. LEQ (G x) (G x) \\<or> LEQ (LUB p t) (G x);\n        \\<not> LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (G x)\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply (simp add: LAT6)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "(*Sub*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<forall>x. LEQ (GG x) (HH x) \\<or> LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)", "apply (erule_tac x=x in allE, erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        \\<not> LEQ p (H x); LEQ (GG x) (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        \\<not> LEQ p (H x); LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)", "apply (erule_tac x=x in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (HH x) (H x); \\<not> LEQ p (H x); LEQ (GG x) (HH x);\n        LEQ (G x) (GG x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        \\<not> LEQ p (H x); LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)", "apply (erule_tac x=x in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp; \\<not> LEQ p (H x);\n        LEQ (GG x) (HH x); LEQ (G x) (GG x); LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)\n 2. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        \\<not> LEQ p (H x); LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)", "apply (erule LAT2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp; \\<not> LEQ p (H x);\n        LEQ (GG x) (HH x); LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (GG x) (H x)\n 2. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        \\<not> LEQ p (H x); LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)", "apply (erule LAT2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp; \\<not> LEQ p (H x);\n        LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (HH x) (H x)\n 2. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        \\<not> LEQ p (H x); LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        \\<not> LEQ p (H x); LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)", "apply (erule_tac x=x in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (HH x) (H x); \\<not> LEQ p (H x); LEQ pp (HH x);\n        LEQ (G x) (GG x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (H x)", "apply (erule LAT2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (HH x) (H x); \\<not> LEQ p (H x);\n        LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (GG x) (H x)", "apply (erule_tac x=x in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp; \\<not> LEQ p (H x);\n        LEQ pp (HH x); LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (GG x) (H x)", "apply (subgoal_tac \"LEQ p (H x)\", fast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp; \\<not> LEQ p (H x);\n        LEQ pp (HH x); LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (H x)", "apply (erule LAT2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; \\<not> LEQ p (H x); LEQ pp (HH x);\n        LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ pp (H x)", "apply (erule LAT2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H x.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; \\<not> LEQ p (H x);\n        LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (HH x) (H x)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "subsection\\<open>Derived proof rules\\<close>"], ["", "text\\<open>In order to show the derivability of the properties given in\nTheorem 3.3 of Hunt and Sands' paper, we give the following derived\nproof rules. By including the $Q$ property in the $A$ position of\n$Sec$, we prove both parts of theorem in one proof, and can exploit\nthe first property ($Q$) in the proof of the second.\\<close>"], ["", "lemma SKIP:\n \"X \\<rhd> Skip : Sec (Q p H) (EQ G q) (EQ G q) \n                  (\\<lambda> (s,t) . EQ G q s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<rhd> Skip : Sec (Q p H) (EQ G q) (EQ G q)\n                     (\\<lambda>(s, t). EQ G q s t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<rhd> Skip : Sec (Q p H) (EQ G q) (EQ G q)\n                     (\\<lambda>(s, t). EQ G q s t)", "apply (rule VDMConseq, rule VDMSkip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       t = s \\<longrightarrow>\n       Sec (Q p H) (EQ G q) (EQ G q) (\\<lambda>(s, t). EQ G q s t) s t", "apply (simp add: Sec_def EQ_def Q_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma ASSIGN: \n  \"\\<lbrakk>H = upd G x (LUB p t); \n    \\<forall> s ss . EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\\<rbrakk>\n  \\<Longrightarrow> X \\<rhd> Assign x e : Sec (Q p H) (EQ G q) (EQ H q) \n            (\\<lambda> (s,t) . \\<exists> r . s = update r x (evalE e r) \\<and> EQ G q r t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H = upd G x (LUB p t);\n     \\<forall>s ss.\n        EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Assign x\n                                e : Sec (Q p H) (EQ G q) (EQ H q)\n                                     (\\<lambda>(s, t).\n   \\<exists>r. s = update r x (evalE e r) \\<and> EQ G q r t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H = upd G x (LUB p t);\n     \\<forall>s ss.\n        EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Assign x\n                                e : Sec (Q p H) (EQ G q) (EQ H q)\n                                     (\\<lambda>(s, t).\n   \\<exists>r. s = update r x (evalE e r) \\<and> EQ G q r t)", "apply (rule VDMConseq, rule VDMAssign)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H = upd G x (LUB p t);\n     \\<forall>s ss.\n        EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         t = update s x (evalE e s) \\<longrightarrow>\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(s, t).\n                              \\<exists>r.\n                                 s = update r x (evalE e r) \\<and>\n                                 EQ G q r t)\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                          (EQ (upd G x (LUB p t)) q)\n                          (\\<lambda>(s, t).\n                              \\<exists>r.\n                                 s = update r x (evalE e r) \\<and>\n                                 EQ G q r t)\n                          s (update s x (evalE e s))", "apply (simp add: Sec_def EQ_def Q_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>xa.\n                             \\<not> LEQ p\n                                     (upd G x (LUB p t)\n xa) \\<longrightarrow>\n                             update s x (evalE e s) xa = s xa) \\<and>\n                         (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             (\\<exists>ra.\n                                 update s x (evalE e s) =\n                                 update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = r x))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>ra.\n                                 r = update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = s x)) \\<longrightarrow>\n                             (\\<forall>xa.\n                                 LEQ (upd G x (LUB p t) xa)\n                                  q \\<longrightarrow>\n                                 r xa = update s x (evalE e s) xa))", "apply (rule, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<not> LEQ p (upd G x (LUB p t) xa)\\<rbrakk>\n       \\<Longrightarrow> update s x (evalE e s) xa = s xa\n 2. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             (\\<exists>ra.\n                                 update s x (evalE e s) =\n                                 update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = r x))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>ra.\n                                 r = update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = s x)) \\<longrightarrow>\n                             (\\<forall>xa.\n                                 LEQ (upd G x (LUB p t) xa)\n                                  q \\<longrightarrow>\n                                 r xa = update s x (evalE e s) xa))", "apply (simp add: update_def upd_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s xa.\n       \\<lbrakk>H = (\\<lambda>y. if x = y then LUB p t else G y);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<not> LEQ p (if x = xa then LUB p t else G xa)\\<rbrakk>\n       \\<Longrightarrow> x = xa \\<longrightarrow> evalE e s = s xa\n 2. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             (\\<exists>ra.\n                                 update s x (evalE e s) =\n                                 update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = r x))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>ra.\n                                 r = update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = s x)) \\<longrightarrow>\n                             (\\<forall>xa.\n                                 LEQ (upd G x (LUB p t) xa)\n                                  q \\<longrightarrow>\n                                 r xa = update s x (evalE e s) xa))", "apply (case_tac \"x=xa\", clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>H = (\\<lambda>y. if x = y then LUB p t else G y);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<not> LEQ p (LUB p t)\\<rbrakk>\n       \\<Longrightarrow> evalE e s = s x\n 2. \\<And>s xa.\n       \\<lbrakk>H = (\\<lambda>y. if x = y then LUB p t else G y);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<not> LEQ p (if x = xa then LUB p t else G xa);\n        x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> x = xa \\<longrightarrow> evalE e s = s xa\n 3. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             (\\<exists>ra.\n                                 update s x (evalE e s) =\n                                 update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = r x))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>ra.\n                                 r = update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = s x)) \\<longrightarrow>\n                             (\\<forall>xa.\n                                 LEQ (upd G x (LUB p t) xa)\n                                  q \\<longrightarrow>\n                                 r xa = update s x (evalE e s) xa))", "apply (simp add: LAT3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s xa.\n       \\<lbrakk>H = (\\<lambda>y. if x = y then LUB p t else G y);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<not> LEQ p (if x = xa then LUB p t else G xa);\n        x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> x = xa \\<longrightarrow> evalE e s = s xa\n 2. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             (\\<exists>ra.\n                                 update s x (evalE e s) =\n                                 update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = r x))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>ra.\n                                 r = update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = s x)) \\<longrightarrow>\n                             (\\<forall>xa.\n                                 LEQ (upd G x (LUB p t) xa)\n                                  q \\<longrightarrow>\n                                 r xa = update s x (evalE e s) xa))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             (\\<exists>ra.\n                                 update s x (evalE e s) =\n                                 update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = r x))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>ra.\n                                 r = update ra x (evalE e ra) \\<and>\n                                 (\\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     ra x = s x)) \\<longrightarrow>\n                             (\\<forall>xa.\n                                 LEQ (upd G x (LUB p t) xa)\n                                  q \\<longrightarrow>\n                                 r xa = update s x (evalE e s) xa))", "apply (rule, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ra.\n                            update s x (evalE e s) =\n                            update ra x (evalE e ra) \\<and>\n                            (\\<forall>x.\n                                LEQ (G x) q \\<longrightarrow> ra x = r x)\n 2. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (\\<exists>ra.\n                                r = update ra x (evalE e ra) \\<and>\n                                (\\<forall>x.\n                                    LEQ (G x) q \\<longrightarrow>\n                                    ra x = s x)) \\<longrightarrow>\n                            (\\<forall>xa.\n                                LEQ (upd G x (LUB p t) xa)\n                                 q \\<longrightarrow>\n                                r xa = update s x (evalE e s) xa)", "apply (rule_tac x=s in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (\\<exists>ra.\n                                r = update ra x (evalE e ra) \\<and>\n                                (\\<forall>x.\n                                    LEQ (G x) q \\<longrightarrow>\n                                    ra x = s x)) \\<longrightarrow>\n                            (\\<forall>xa.\n                                LEQ (upd G x (LUB p t) xa)\n                                 q \\<longrightarrow>\n                                r xa = update s x (evalE e s) xa)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply (case_tac \"x=xa\", clarsimp, hypsubst_thin)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ra.\n       \\<lbrakk>\\<forall>s ss.\n                   (\\<forall>x.\n                       LEQ (G x) t \\<longrightarrow>\n                       s x = ss x) \\<longrightarrow>\n                   evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) x) q\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) x =\n                         update s x (evalE e s) x\n 2. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply (simp add: update_def upd_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ra.\n       \\<lbrakk>\\<forall>s ss.\n                   (\\<forall>x.\n                       LEQ (G x) t \\<longrightarrow>\n                       s x = ss x) \\<longrightarrow>\n                   evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> evalE e ra = evalE e s\n 2. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply (erule_tac x=ra in allE, erule_tac x=s in allE, erule mp, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ra x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (LUB p t) q; LEQ (G x) t\\<rbrakk>\n       \\<Longrightarrow> ra x = s x\n 2. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply (erule_tac x=x in allE, erule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ra x.\n       \\<lbrakk>LEQ (LUB p t) q; LEQ (G x) t\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) q\n 2. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply (erule LAT2, rule LAT2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s ra x. LEQ (LUB p t) q \\<Longrightarrow> LEQ t (?p2.54 s ra x)\n 2. \\<And>s ra x. LEQ (LUB p t) q \\<Longrightarrow> LEQ (?p2.54 s ra x) q\n 3. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s ra x. LEQ (LUB p t) q \\<Longrightarrow> LEQ (?p2.54 s ra x) q\n 2. \\<And>s ra x. LEQ (LUB p t) q \\<Longrightarrow> LEQ t (?p2.54 s ra x)\n 3. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ra x. LEQ (LUB p t) q \\<Longrightarrow> LEQ t (LUB p t)\n 2. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply (subgoal_tac \"LEQ t (LUB t p)\", simp add: LAT4)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ra x. LEQ (LUB p t) q \\<Longrightarrow> LEQ t (LUB t p)\n 2. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply (rule LAT3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s ra xa.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss.\n           (\\<forall>x.\n               LEQ (G x) t \\<longrightarrow> s x = ss x) \\<longrightarrow>\n           evalE e s = evalE e ss;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> ra x = s x;\n        LEQ (upd G x (LUB p t) xa) q; x \\<noteq> xa\\<rbrakk>\n       \\<Longrightarrow> update ra x (evalE e ra) xa =\n                         update s x (evalE e s) xa", "apply (simp add: update_def upd_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma COMP: \n  \"\\<lbrakk> X \\<rhd> c1 : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n    \\<forall> x . LEQ (G x) (K x) \\<or> LEQ p (K x);\n    \\<forall> x . LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk> \n   \\<Longrightarrow> X \\<rhd> Comp c1 c2 : Sec (Q p H) (EQ G q) (EQ H q)\n        (\\<lambda> (x, y) . \\<exists> z . \\<Phi> (z, y) \\<and> \n                          (\\<forall> w . EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c1 : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n     \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n     \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Comp c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(x, y).\n    \\<exists>z.\n       \\<Phi> (z, y) \\<and>\n       (\\<forall>w. EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c1 : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n     \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n     \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Comp c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(x, y).\n    \\<exists>z.\n       \\<Phi> (z, y) \\<and>\n       (\\<forall>w. EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))", "apply (rule VDMConseq, rule VDMComp, assumption, assumption, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r.\n       \\<lbrakk>X \\<rhd> c1 : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> c2 : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> s r;\n        Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> r t\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(x, y).\n                              \\<exists>z.\n                                 \\<Phi> (z, y) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (x, w)))\n                          s t", "apply (erule thin_rl, erule thin_rl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> s r;\n        Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> r t\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(x, y).\n                              \\<exists>z.\n                                 \\<Phi> (z, y) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (x, w)))\n                          s t", "apply (simp add: Sec_def, rule, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x); Q p K s r; Q p H r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r;\n        \\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra);\n        \\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t\\<rbrakk>\n       \\<Longrightarrow> Q p H s t\n 2. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, r) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (t, w)))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>z.\n                                 \\<Phi> (z, s) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (r, w))) \\<longrightarrow>\n                             EQ H q r t)", "apply (simp add: Q_def, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. \\<not> LEQ p (K x) \\<longrightarrow> r x = s x;\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = r x;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r;\n        \\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra);\n        \\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t;\n        \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> r x = s x\n 2. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, r) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (t, w)))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>z.\n                                 \\<Phi> (z, s) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (r, w))) \\<longrightarrow>\n                             EQ H q r t)", "apply (rotate_tac 3, erule_tac x=x in allE, erule impE, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r;\n        \\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra);\n        \\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t;\n        \\<not> LEQ p (H x); \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. \\<not> LEQ p (K x) \\<longrightarrow> r x = s x;\n        t x = r x\\<rbrakk>\n       \\<Longrightarrow> r x = s x\n 2. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, r) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (t, w)))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>z.\n                                 \\<Phi> (z, s) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (r, w))) \\<longrightarrow>\n                             EQ H q r t)", "apply (erule_tac x=x in allE, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r;\n        \\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra);\n        \\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t;\n        \\<not> LEQ p (H x); \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. \\<not> LEQ p (K x) \\<longrightarrow> r x = s x;\n        t x = r x; LEQ (K x) (H x)\\<rbrakk>\n       \\<Longrightarrow> r x = s x\n 2. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, r) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (t, w)))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>z.\n                                 \\<Phi> (z, s) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (r, w))) \\<longrightarrow>\n                             EQ H q r t)", "apply (erule_tac x=x in allE, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r;\n        \\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra);\n        \\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t;\n        \\<not> LEQ p (H x); \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        t x = r x; LEQ (K x) (H x); r x \\<noteq> s x; LEQ p (K x)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, r) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (t, w)))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>z.\n                                 \\<Phi> (z, s) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (r, w))) \\<longrightarrow>\n                             EQ H q r t)", "apply (subgoal_tac \"LEQ p (H x)\", fast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r;\n        \\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra);\n        \\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t;\n        \\<not> LEQ p (H x); \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        t x = r x; LEQ (K x) (H x); r x \\<noteq> s x; LEQ p (K x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (H x)\n 2. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, r) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (t, w)))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>z.\n                                 \\<Phi> (z, s) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (r, w))) \\<longrightarrow>\n                             EQ H q r t)", "apply (erule LAT2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r;\n        \\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra);\n        \\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t;\n        \\<not> LEQ p (H x); \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        t x = r x; LEQ (K x) (H x); r x \\<noteq> s x\\<rbrakk>\n       \\<Longrightarrow> LEQ (K x) (H x)\n 2. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, r) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (t, w)))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>z.\n                                 \\<Phi> (z, s) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (r, w))) \\<longrightarrow>\n                             EQ H q r t)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, r) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (t, w)))) \\<and>\n                         (\\<forall>r.\n                             (\\<exists>z.\n                                 \\<Phi> (z, s) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (r, w))) \\<longrightarrow>\n                             EQ H q r t)", "apply (rule, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r ra.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x); Q p K s r; Q p H r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r;\n        \\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra);\n        \\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, ra) \\<and>\n                            (\\<forall>w.\n                                EQ K q z w \\<longrightarrow> \\<Psi> (t, w))\n 2. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (\\<exists>z.\n                                \\<Phi> (z, s) \\<and>\n                                (\\<forall>w.\n                                    EQ K q z w \\<longrightarrow>\n                                    \\<Psi> (r, w))) \\<longrightarrow>\n                            EQ H q r t", "apply (rule_tac x=r in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Q p K s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ K q ra r);\n        Q p H r t \\<and>\n        (\\<forall>ra. EQ K q r ra \\<longrightarrow> \\<Psi> (t, ra)) \\<and>\n        (\\<forall>ra. \\<Psi> (ra, r) \\<longrightarrow> EQ H q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (\\<exists>z.\n                                \\<Phi> (z, s) \\<and>\n                                (\\<forall>w.\n                                    EQ K q z w \\<longrightarrow>\n                                    \\<Psi> (r, w))) \\<longrightarrow>\n                            EQ H q r t", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>We distinguish, for any given $q$, \\emph{parallel} conditionals\nfrom \\emph{diagonal} ones. Speaking operationally (i.e.~in terms of\ntwo executions), conditionals of the former kind evaluate the branch\ncondition identically in both executions. The following rule\nexpresses this condition explicitly, in the first side condition. The\nformula inside the $\\mathit{Sec}$-operator of the conclusion resembles\nthe conclusion of the VDM rule for conditionals in that the formula\nchosen depends on the outcome of the branch.\\<close>"], ["", "lemma IF_PARALLEL:\n  \"\\<lbrakk> \\<forall> s ss . EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall> x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists> x . LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n  \\<Longrightarrow> X \\<rhd> Iff b c1 c2 : Sec (Q p H) (EQ G q) (EQ H q) \n                       (\\<lambda> (r, u) . (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n                                   ( (\\<not> evalB b u) \\<longrightarrow> \\<Psi> (r, u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>s ss.\n                EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(r, u).\n    (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n    (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>s ss.\n                EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(r, u).\n    (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n    (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))", "apply (rule VDMConseq, rule VDMIff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>s ss.\n                EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : ?A3\n 2. \\<lbrakk>\\<forall>s ss.\n                EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : ?B3\n 3. \\<lbrakk>\\<forall>s ss.\n                EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (evalB b s \\<longrightarrow> ?A3 s t) \\<and>\n                         (\\<not> evalB b s \\<longrightarrow>\n                          ?B3 s t) \\<longrightarrow>\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(r, u).\n                              (evalB b u \\<longrightarrow>\n                               \\<Phi> (r, u)) \\<and>\n                              (\\<not> evalB b u \\<longrightarrow>\n                               \\<Psi> (r, u)))\n                          s t", "apply (assumption, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>s ss.\n                EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (evalB b s \\<longrightarrow>\n                          Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> s t) \\<and>\n                         (\\<not> evalB b s \\<longrightarrow>\n                          Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> s\n                           t) \\<longrightarrow>\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(r, u).\n                              (evalB b u \\<longrightarrow>\n                               \\<Phi> (r, u)) \\<and>\n                              (\\<not> evalB b u \\<longrightarrow>\n                               \\<Psi> (r, u)))\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> s t;\n        \\<not> evalB b s \\<longrightarrow>\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> s t\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(r, u).\n                              (evalB b u \\<longrightarrow>\n                               \\<Phi> (r, u)) \\<and>\n                              (\\<not> evalB b u \\<longrightarrow>\n                               \\<Psi> (r, u)))\n                          s t", "apply (simp add: Sec_def Q_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>x.\n                             \\<not> LEQ p (H x) \\<longrightarrow>\n                             t x = s x) \\<and>\n                         (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (evalB b r \\<longrightarrow>\n                              \\<Phi> (t, r)) \\<and>\n                             (\\<not> evalB b r \\<longrightarrow>\n                              \\<Psi> (t, r))) \\<and>\n                         (\\<forall>r.\n                             (evalB b s \\<longrightarrow>\n                              \\<Phi> (r, s)) \\<and>\n                             (\\<not> evalB b s \\<longrightarrow>\n                              \\<Psi> (r, s)) \\<longrightarrow>\n                             EQ H q r t)", "apply (subgoal_tac \"(\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x)\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (evalB b r \\<longrightarrow>\n                              \\<Phi> (t, r)) \\<and>\n                             (\\<not> evalB b r \\<longrightarrow>\n                              \\<Psi> (t, r))) \\<and>\n                         (\\<forall>r.\n                             (evalB b s \\<longrightarrow>\n                              \\<Phi> (r, s)) \\<and>\n                             (\\<not> evalB b s \\<longrightarrow>\n                              \\<Psi> (r, s)) \\<longrightarrow>\n                             EQ H q r t)\n 2. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            \\<not> LEQ p (H x) \\<longrightarrow> t x = s x", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\n 2. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (evalB b r \\<longrightarrow>\n                              \\<Phi> (t, r)) \\<and>\n                             (\\<not> evalB b r \\<longrightarrow>\n                              \\<Psi> (t, r))) \\<and>\n                         (\\<forall>r.\n                             (evalB b s \\<longrightarrow>\n                              \\<Phi> (r, s)) \\<and>\n                             (\\<not> evalB b s \\<longrightarrow>\n                              \\<Psi> (r, s)) \\<longrightarrow>\n                             EQ H q r t)", "apply (case_tac \"evalB b s\", clarsimp,clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             (evalB b r \\<longrightarrow>\n                              \\<Phi> (t, r)) \\<and>\n                             (\\<not> evalB b r \\<longrightarrow>\n                              \\<Psi> (t, r))) \\<and>\n                         (\\<forall>r.\n                             (evalB b s \\<longrightarrow>\n                              \\<Phi> (r, s)) \\<and>\n                             (\\<not> evalB b s \\<longrightarrow>\n                              \\<Psi> (r, s)) \\<longrightarrow>\n                             EQ H q r t)", "apply (rule, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 2. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "(*left component of Sec*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 2. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "apply (subgoal_tac \"evalB b s = evalB b r\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; evalB b s = evalB b r\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 2. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> evalB b s = evalB b r\n 3. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> evalB b s = evalB b r\n 2. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; evalB b s = evalB b r\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 3. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "apply (erule_tac x=s in allE, rotate_tac -1, erule_tac x=r in allE, erule mp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> EQ G p s r\n 2. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; evalB b s = evalB b r\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 3. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "apply (erule EQ_LEQ)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> LEQ p q\n 2. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; evalB b s = evalB b r\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 3. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "apply (erule LAT2, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; evalB b s = evalB b r\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 2. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "apply (case_tac \"evalB b s\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; evalB b s = evalB b r; evalB b s\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 2. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; evalB b s = evalB b r; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 3. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; evalB b s = evalB b r; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> (evalB b r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n                         (\\<not> evalB b r \\<longrightarrow> \\<Psi> (t, r))\n 2. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "(*right component of Sec*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s t.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            (evalB b s \\<longrightarrow>\n                             \\<Phi> (r, s)) \\<and>\n                            (\\<not> evalB b s \\<longrightarrow>\n                             \\<Psi> (r, s)) \\<longrightarrow>\n                            EQ H q r t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        evalB b s \\<longrightarrow> \\<Phi> (r, s);\n        \\<not> evalB b s \\<longrightarrow> \\<Psi> (r, s)\\<rbrakk>\n       \\<Longrightarrow> EQ H q r t", "apply (case_tac \"evalB b s\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        evalB b s \\<longrightarrow> \\<Phi> (r, s);\n        \\<not> evalB b s \\<longrightarrow> \\<Psi> (r, s); evalB b s\\<rbrakk>\n       \\<Longrightarrow> EQ H q r t\n 2. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        evalB b s \\<longrightarrow> \\<Phi> (r, s);\n        \\<not> evalB b s \\<longrightarrow> \\<Psi> (r, s);\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> EQ H q r t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s t r.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        LEQ p (H x); LEQ (H x) q;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        evalB b s \\<longrightarrow> \\<Phi> (r, s);\n        \\<not> evalB b s \\<longrightarrow> \\<Psi> (r, s);\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> EQ H q r t", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>An alternative formulation replaces the first side condition\nwith a typing hypothesis on the branch condition, thus exploiting\nlemma HS\\_B\\_eval.\\<close>"], ["", "lemma IF_PARALLEL_tp:\n  \"\\<lbrakk> (G, b, p) \\<in> HS_B; (p , G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS;\n     \\<exists> x . LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n  \\<Longrightarrow> X \\<rhd> Iff b c1 c2 : Sec (Q p H) (EQ G q) (EQ H q) \n                       (\\<lambda> (r, u) . (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n                                   ( (\\<not> evalB b u) \\<longrightarrow> \\<Psi> (r, u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(r, u).\n    (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n    (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(r, u).\n    (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n    (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))", "apply (rule IF_PARALLEL)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s ss.\n                         EQ G p s ss \\<longrightarrow>\n                         evalB b s = evalB b ss\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 4. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>", "apply (clarsimp, erule HS_B_eval)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x s ss.\n       \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS;\n        X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> EQ G (?pp13 x s ss) s ss\n 2. \\<And>x s ss.\n       \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS;\n        X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> LEQ p (?pp13 x s ss)\n 3. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 4. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 5. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x s ss.\n       \\<lbrakk>(p, G, c1, H) \\<in> HS; (p, G, c2, H) \\<in> HS;\n        X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> LEQ p p\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 4. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>", "apply (rule LAT6)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 3. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>", "apply (erule HS_Aux1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c1, H) \\<in> HS;\n     (p, G, c2, H) \\<in> HS; \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Diagonal conditionals, in contrast, capture cases where (from\nthe perspective of an observer at level $q$) the two executions may\nevaluate the branch condition differently. In this case, the formula\ninside the $\\mathit{Sec}$-operator in the conclusion cannot depend\nupon the branch outcome, so the least common denominator of the two\nbranches must be taken, which is given by the equality condition\nw.r.t.~the post-context $H$. A side condition (the first one given in\nthe rule) ensures that indeed no information leaks during the\nexecution of either branch, by relating $G$ and $H$.\\<close>"], ["", "lemma IF_DIAGONAL:\n  \"\\<lbrakk> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n      \\<not> (\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q);\n      X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n      X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n   \\<Longrightarrow> X \\<rhd> Iff b c1 c2 : Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda> (s,t). EQ H q s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(s, t). EQ H q s t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(s, t). EQ H q s t)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(s, t). EQ H q s t)", "apply (rule VDMConseq, rule VDMIff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : ?A3\n 2. \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : ?B3\n 3. \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (evalB b s \\<longrightarrow> ?A3 s t) \\<and>\n                         (\\<not> evalB b s \\<longrightarrow>\n                          ?B3 s t) \\<longrightarrow>\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(s, t). EQ H q s t) s t", "apply (assumption, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (evalB b s \\<longrightarrow>\n                          Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> s t) \\<and>\n                         (\\<not> evalB b s \\<longrightarrow>\n                          Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> s\n                           t) \\<longrightarrow>\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(s, t). EQ H q s t) s t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> s t;\n        \\<not> evalB b s \\<longrightarrow>\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> s t\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(s, t). EQ H q s t) s t", "apply (simp add: Sec_def Q_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>x.\n                             \\<not> LEQ p (H x) \\<longrightarrow>\n                             t x = s x) \\<and>\n                         (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ H q t r) \\<and>\n                         (\\<forall>r.\n                             EQ H q r s \\<longrightarrow> EQ H q r t)", "apply (subgoal_tac \"(\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x)\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ H q t r) \\<and>\n                         (\\<forall>r.\n                             EQ H q r s \\<longrightarrow> EQ H q r t)\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            \\<not> LEQ p (H x) \\<longrightarrow> t x = s x", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ H q t r) \\<and>\n                         (\\<forall>r.\n                             EQ H q r s \\<longrightarrow> EQ H q r t)", "apply (case_tac \"evalB b s\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\n 3. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ H q t r) \\<and>\n                         (\\<forall>r.\n                             EQ H q r s \\<longrightarrow> EQ H q r t)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x) \\<and>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ H q t r) \\<and>\n                         (\\<forall>r.\n                             EQ H q r s \\<longrightarrow> EQ H q r t)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ H q t r) \\<and>\n                         (\\<forall>r.\n                             EQ H q r s \\<longrightarrow> EQ H q r t)", "apply (rule, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> EQ H q t r\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "(*Left component*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> EQ H q t r\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply (simp (no_asm) add: EQ_def, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply (case_tac \"LEQ p (H x)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; LEQ (H x) q; LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 2. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; LEQ (H x) q; \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 3. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ G q s r; LEQ (H x) q; \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply (rotate_tac -4, erule_tac x=x in allE, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>EQ G q s r; LEQ (H x) q; \\<not> LEQ p (H x);\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        t x = s x\\<rbrakk>\n       \\<Longrightarrow> s x = r x\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply (simp add: EQ_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        LEQ (H x) q; \\<not> LEQ p (H x);\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>ra.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> r x = ra x) \\<longrightarrow>\n            \\<Phi> (t, ra)) \\<and>\n        (\\<forall>r.\n            \\<Phi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>ra.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> r x = ra x) \\<longrightarrow>\n            \\<Psi> (t, ra)) \\<and>\n        (\\<forall>r.\n            \\<Psi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        t x = s x\\<rbrakk>\n       \\<Longrightarrow> s x = r x\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply (erule_tac x=x in allE, erule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>LEQ (H x) q; \\<not> LEQ p (H x);\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>ra.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> r x = ra x) \\<longrightarrow>\n            \\<Phi> (t, ra)) \\<and>\n        (\\<forall>r.\n            \\<Phi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>ra.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> r x = ra x) \\<longrightarrow>\n            \\<Psi> (t, ra)) \\<and>\n        (\\<forall>r.\n            \\<Psi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        t x = s x\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) q\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply (rotate_tac -4, erule_tac x=x in allE, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c2 : Sec (\\<lambda>s t.\n\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x)\n                               (\\<lambda>s t.\n                                   \\<forall>x.\nLEQ (G x) q \\<longrightarrow> s x = t x)\n                               (\\<lambda>s t.\n                                   \\<forall>x.\nLEQ (H x) q \\<longrightarrow> s x = t x)\n                               \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>ra.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> r x = ra x) \\<longrightarrow>\n            \\<Phi> (t, ra)) \\<and>\n        (\\<forall>r.\n            \\<Phi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>ra.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> r x = ra x) \\<longrightarrow>\n            \\<Psi> (t, ra)) \\<and>\n        (\\<forall>r.\n            \\<Psi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        t x = s x; LEQ (H x) q; \\<not> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Phi>;\n        LEQ (G x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) q\n 2. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply (erule LAT2, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "(*right component*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ H q r s \\<longrightarrow> EQ H q r t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (EQ G q) (EQ H q) \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n        (\\<forall>r. \\<Phi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r. EQ G q s r \\<longrightarrow> \\<Psi> (t, r)) \\<and>\n        (\\<forall>r. \\<Psi> (r, s) \\<longrightarrow> EQ H q r t);\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        EQ H q r s\\<rbrakk>\n       \\<Longrightarrow> EQ H q r t", "apply (simp add: EQ_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n            \\<Phi> (t, r)) \\<and>\n        (\\<forall>r.\n            \\<Phi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n            \\<Psi> (t, r)) \\<and>\n        (\\<forall>r.\n            \\<Psi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (H x) q \\<longrightarrow> r x = s x;\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply (case_tac \"LEQ p (H x)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n            \\<Phi> (t, r)) \\<and>\n        (\\<forall>r.\n            \\<Phi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n            \\<Psi> (t, r)) \\<and>\n        (\\<forall>r.\n            \\<Psi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (H x) q \\<longrightarrow> r x = s x; LEQ (H x) q;\n        LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x\n 2. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n            \\<Phi> (t, r)) \\<and>\n        (\\<forall>r.\n            \\<Phi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n            \\<Psi> (t, r)) \\<and>\n        (\\<forall>r.\n            \\<Psi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (H x) q \\<longrightarrow> r x = s x; LEQ (H x) q;\n        \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r x.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        X \\<rhd> c1 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Phi>;\n        X \\<rhd> c2 : Sec (\\<lambda>s t.\n                              \\<forall>x.\n                                 \\<not> LEQ p (H x) \\<longrightarrow>\n                                 t x = s x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (G x) q \\<longrightarrow> s x = t x)\n                       (\\<lambda>s t.\n                           \\<forall>x.\n                              LEQ (H x) q \\<longrightarrow> s x = t x)\n                       \\<Psi>;\n        evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n            \\<Phi> (t, r)) \\<and>\n        (\\<forall>r.\n            \\<Phi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<not> evalB b s \\<longrightarrow>\n        (\\<forall>r.\n            (\\<forall>x.\n                LEQ (G x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n            \\<Psi> (t, r)) \\<and>\n        (\\<forall>r.\n            \\<Psi> (r, s) \\<longrightarrow>\n            (\\<forall>x. LEQ (H x) q \\<longrightarrow> r x = t x));\n        \\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (H x) q \\<longrightarrow> r x = s x; LEQ (H x) q;\n        \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Again, the first side condition of the rule may be replaced by a\ntyping condition, but now this condition is on the commands (instead\nof the branch condition) -- in fact, a derivation for either branch\nsuffices.\\<close>"], ["", "lemma IF_DIAGONAL_tp:\n  \"\\<lbrakk> (p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS; \n      \\<not> (\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q);\n      X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n      X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n   \\<Longrightarrow> X \\<rhd> Iff b c1 c2 : Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda> (s,t). EQ H q s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(s, t). EQ H q s t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Iff b c1\n                                c2 : Sec (Q p H) (EQ G q) (EQ H q)\n(\\<lambda>(s, t). EQ H q s t)", "apply (rule IF_DIAGONAL)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 3. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) ?\\<Phi>\n 4. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) ?\\<Psi>", "apply (erule disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n     (p, G, c1, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<lbrakk>\\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n     (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 4. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) ?\\<Phi>\n 5. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) ?\\<Psi>", "apply (erule HS_Aux1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n     (p, G, c2, H) \\<in> HS\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 3. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) ?\\<Phi>\n 4. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) ?\\<Psi>", "apply (erule HS_Aux1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 2. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) ?\\<Phi>\n 3. \\<lbrakk>(p, G, c1, H) \\<in> HS \\<or> (p, G, c2, H) \\<in> HS;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     X \\<rhd> c1 : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n     X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c2 : Sec (Q p H) (EQ G q) (EQ H q) ?\\<Psi>", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Obviously, given $q$, any conditional is either parallel or\ndiagonal as the second side conditions of the diagonal rules and the\nparallel rules are exclusive.\\<close>"], ["", "lemma if_algorithmic:\n  \"\\<lbrakk>\\<exists> x . LEQ p (H x) \\<and> LEQ (H x) q; \n    \\<not> (\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q)\\<rbrakk>\n   \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n    \\<Longrightarrow> False", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n     \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n    \\<Longrightarrow> False", "by simp"], ["", "(*>*)"], ["", "text\\<open>As in Section \\ref{sec:BaseLineNI} we define a fixed point\nconstruction, useful for the (parallel) while rule.\\<close>"], ["", "definition FIX::\"(TT \\<Rightarrow> TT) \\<Rightarrow> TT\"\nwhere \"FIX \\<phi> = (\\<lambda> (s,t). \\<forall> \\<Phi> . (\\<forall> ss tt . \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt))\n                            \\<longrightarrow> \\<Phi> (s, t))\""], ["", "text\\<open>For monotone invariant transformers, the construction indeed\nyields a fixed point.\\<close>"], ["", "definition Monotone::\"(TT \\<Rightarrow> TT) \\<Rightarrow> bool\"\nwhere \"Monotone \\<phi> = (\\<forall> \\<Phi> \\<Psi> . (\\<forall> s t . \\<Phi>(s,t) \\<longrightarrow> \\<Psi>(s,t)) \\<longrightarrow> \n                        (\\<forall> s t . \\<phi> \\<Phi> (s,t) \\<longrightarrow> \\<phi> \\<Psi> (s,t)))\""], ["", "(*<*)"], ["", "lemma Fix2: \"\\<lbrakk>Monotone \\<phi>; \\<phi> (FIX \\<phi>) (s, t)\\<rbrakk> \\<Longrightarrow> FIX \\<phi> (s,t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Monotone \\<phi>; \\<phi> (FIX \\<phi>) (s, t)\\<rbrakk>\n    \\<Longrightarrow> FIX \\<phi> (s, t)", "apply (simp add: FIX_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Monotone \\<phi>;\n     \\<phi>\n      (\\<lambda>(s, t).\n          \\<forall>\\<Phi>.\n             (\\<forall>ss tt.\n                 \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                 \\<Phi> (ss, tt)) \\<longrightarrow>\n             \\<Phi> (s, t))\n      (s, t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<Phi>.\n                         (\\<forall>ss tt.\n                             \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                             \\<Phi> (ss, tt)) \\<longrightarrow>\n                         \\<Phi> (s, t)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> (s, t)", "apply (subgoal_tac \"\\<phi> \\<Phi> (s,t)\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply (subgoal_tac \"\\<forall> r u . FIX \\<phi> (r,u) \\<longrightarrow> \\<Phi>(r,u)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u.\n           FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)\n 2. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r u.\n                            FIX \\<phi> (r, u) \\<longrightarrow>\n                            \\<Phi> (r, u)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r u.\n                            FIX \\<phi> (r, u) \\<longrightarrow>\n                            \\<Phi> (r, u)\n 2. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u.\n           FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply (erule thin_rl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>\\<phi>\n                 (\\<lambda>(s, t).\n                     \\<forall>\\<Phi>.\n                        (\\<forall>ss tt.\n                            \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                            \\<Phi> (ss, tt)) \\<longrightarrow>\n                        \\<Phi> (s, t))\n                 (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r u.\n                            FIX \\<phi> (r, u) \\<longrightarrow>\n                            \\<Phi> (r, u)\n 2. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u.\n           FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply (simp add: FIX_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>\\<phi>\n                 (\\<lambda>(s, t).\n                     \\<forall>\\<Phi>.\n                        (\\<forall>ss tt.\n                            \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                            \\<Phi> (ss, tt)) \\<longrightarrow>\n                        \\<Phi> (s, t))\n                 (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r u.\n                            (\\<forall>\\<Phi>.\n                                (\\<forall>ss tt.\n                                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                                \\<Phi> (r, u)) \\<longrightarrow>\n                            \\<Phi> (r, u)\n 2. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u.\n           FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Phi> r u.\n       \\<lbrakk>\\<phi>\n                 (\\<lambda>(s, t).\n                     \\<forall>\\<Phi>.\n                        (\\<forall>ss tt.\n                            \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                            \\<Phi> (ss, tt)) \\<longrightarrow>\n                        \\<Phi> (s, t))\n                 (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>\\<Phi>.\n           (\\<forall>ss tt.\n               \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n               \\<Phi> (ss, tt)) \\<longrightarrow>\n           \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> (r, u)\n 2. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u.\n           FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply (erule_tac x=\\<Phi> in allE, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>Monotone \\<phi>;\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u.\n           FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply (unfold Monotone_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>\\<forall>\\<Phi> \\<Psi>.\n                   (\\<forall>s t.\n                       \\<Phi> (s, t) \\<longrightarrow>\n                       \\<Psi> (s, t)) \\<longrightarrow>\n                   (\\<forall>s t.\n                       \\<phi> \\<Phi> (s, t) \\<longrightarrow>\n                       \\<phi> \\<Psi> (s, t));\n        \\<phi>\n         (\\<lambda>(s, t).\n             \\<forall>\\<Phi>.\n                (\\<forall>ss tt.\n                    \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                    \\<Phi> (ss, tt)) \\<longrightarrow>\n                \\<Phi> (s, t))\n         (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u.\n           FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply (erule_tac x=\"FIX \\<phi>\" in allE, erule_tac x=\\<Phi> in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>\\<phi>\n                 (\\<lambda>(s, t).\n                     \\<forall>\\<Phi>.\n                        (\\<forall>ss tt.\n                            \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                            \\<Phi> (ss, tt)) \\<longrightarrow>\n                        \\<Phi> (s, t))\n                 (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u. FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u);\n        (\\<forall>s t.\n            FIX \\<phi> (s, t) \\<longrightarrow>\n            \\<Phi> (s, t)) \\<longrightarrow>\n        (\\<forall>s t.\n            \\<phi> (FIX \\<phi>) (s, t) \\<longrightarrow>\n            \\<phi> \\<Phi> (s, t))\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>\\<phi>\n                 (\\<lambda>(s, t).\n                     \\<forall>\\<Phi>.\n                        (\\<forall>ss tt.\n                            \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                            \\<Phi> (ss, tt)) \\<longrightarrow>\n                        \\<Phi> (s, t))\n                 (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u.\n           FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s t.\n                            FIX \\<phi> (s, t) \\<longrightarrow>\n                            \\<Phi> (s, t)\n 2. \\<And>\\<Phi>.\n       \\<lbrakk>\\<phi>\n                 (\\<lambda>(s, t).\n                     \\<forall>\\<Phi>.\n                        (\\<forall>ss tt.\n                            \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                            \\<Phi> (ss, tt)) \\<longrightarrow>\n                        \\<Phi> (s, t))\n                 (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u. FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u);\n        \\<forall>s t.\n           \\<phi> (FIX \\<phi>) (s, t) \\<longrightarrow>\n           \\<phi> \\<Phi> (s, t)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       \\<lbrakk>\\<phi>\n                 (\\<lambda>(s, t).\n                     \\<forall>\\<Phi>.\n                        (\\<forall>ss tt.\n                            \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                            \\<Phi> (ss, tt)) \\<longrightarrow>\n                        \\<Phi> (s, t))\n                 (s, t);\n        \\<forall>ss tt.\n           \\<phi> \\<Phi> (ss, tt) \\<longrightarrow> \\<Phi> (ss, tt);\n        \\<forall>r u. FIX \\<phi> (r, u) \\<longrightarrow> \\<Phi> (r, u);\n        \\<forall>s t.\n           \\<phi> (FIX \\<phi>) (s, t) \\<longrightarrow>\n           \\<phi> \\<Phi> (s, t)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<Phi> (s, t)", "apply (simp add: FIX_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Fix1: \"\\<lbrakk>Monotone \\<phi>; FIX \\<phi> (s,t)\\<rbrakk> \\<Longrightarrow> \\<phi> (FIX \\<phi>) (s,t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Monotone \\<phi>; FIX \\<phi> (s, t)\\<rbrakk>\n    \\<Longrightarrow> \\<phi> (FIX \\<phi>) (s, t)", "apply (simp add: FIX_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Monotone \\<phi>;\n     \\<forall>\\<Phi>.\n        (\\<forall>ss tt.\n            \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n            \\<Phi> (ss, tt)) \\<longrightarrow>\n        \\<Phi> (s, t)\\<rbrakk>\n    \\<Longrightarrow> \\<phi>\n                       (\\<lambda>(s, t).\n                           \\<forall>\\<Phi>.\n                              (\\<forall>ss tt.\n                                  \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                                  \\<Phi> (ss, tt)) \\<longrightarrow>\n                              \\<Phi> (s, t))\n                       (s, t)", "apply (erule_tac x=\"\\<phi>(FIX \\<phi>)\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Monotone \\<phi>;\n     (\\<forall>ss tt.\n         \\<phi> (\\<phi> (FIX \\<phi>)) (ss, tt) \\<longrightarrow>\n         \\<phi> (FIX \\<phi>) (ss, tt)) \\<longrightarrow>\n     \\<phi> (FIX \\<phi>) (s, t)\\<rbrakk>\n    \\<Longrightarrow> \\<phi>\n                       (\\<lambda>(s, t).\n                           \\<forall>\\<Phi>.\n                              (\\<forall>ss tt.\n                                  \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                                  \\<Phi> (ss, tt)) \\<longrightarrow>\n                              \\<Phi> (s, t))\n                       (s, t)", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Monotone \\<phi> \\<Longrightarrow>\n    \\<forall>ss tt.\n       \\<phi> (\\<phi> (FIX \\<phi>)) (ss, tt) \\<longrightarrow>\n       \\<phi> (FIX \\<phi>) (ss, tt)\n 2. \\<lbrakk>Monotone \\<phi>; \\<phi> (FIX \\<phi>) (s, t)\\<rbrakk>\n    \\<Longrightarrow> \\<phi>\n                       (\\<lambda>(s, t).\n                           \\<forall>\\<Phi>.\n                              (\\<forall>ss tt.\n                                  \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                                  \\<Phi> (ss, tt)) \\<longrightarrow>\n                              \\<Phi> (s, t))\n                       (s, t)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Monotone \\<phi>; \\<phi> (FIX \\<phi>) (s, t)\\<rbrakk>\n    \\<Longrightarrow> \\<phi>\n                       (\\<lambda>(s, t).\n                           \\<forall>\\<Phi>.\n                              (\\<forall>ss tt.\n                                  \\<phi> \\<Phi> (ss, tt) \\<longrightarrow>\n                                  \\<Phi> (ss, tt)) \\<longrightarrow>\n                              \\<Phi> (s, t))\n                       (s, t)\n 2. Monotone \\<phi> \\<Longrightarrow>\n    \\<forall>ss tt.\n       \\<phi> (\\<phi> (FIX \\<phi>)) (ss, tt) \\<longrightarrow>\n       \\<phi> (FIX \\<phi>) (ss, tt)", "apply (simp add: FIX_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone \\<phi> \\<Longrightarrow>\n    \\<forall>ss tt.\n       \\<phi> (\\<phi> (FIX \\<phi>)) (ss, tt) \\<longrightarrow>\n       \\<phi> (FIX \\<phi>) (ss, tt)", "apply (subgoal_tac \"\\<forall> r u . \\<phi> (FIX \\<phi>) (r,u) \\<longrightarrow> FIX \\<phi> (r,u)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Monotone \\<phi>;\n     \\<forall>r u.\n        \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n        FIX \\<phi> (r, u)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ss tt.\n                         \\<phi> (\\<phi> (FIX \\<phi>))\n                          (ss, tt) \\<longrightarrow>\n                         \\<phi> (FIX \\<phi>) (ss, tt)\n 2. Monotone \\<phi> \\<Longrightarrow>\n    \\<forall>r u.\n       \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow> FIX \\<phi> (r, u)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. Monotone \\<phi> \\<Longrightarrow>\n    \\<forall>r u.\n       \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow> FIX \\<phi> (r, u)\n 2. \\<lbrakk>Monotone \\<phi>;\n     \\<forall>r u.\n        \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n        FIX \\<phi> (r, u)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ss tt.\n                         \\<phi> (\\<phi> (FIX \\<phi>))\n                          (ss, tt) \\<longrightarrow>\n                         \\<phi> (FIX \\<phi>) (ss, tt)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r u.\n       \\<lbrakk>Monotone \\<phi>; \\<phi> (FIX \\<phi>) (r, u)\\<rbrakk>\n       \\<Longrightarrow> FIX \\<phi> (r, u)\n 2. \\<lbrakk>Monotone \\<phi>;\n     \\<forall>r u.\n        \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n        FIX \\<phi> (r, u)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ss tt.\n                         \\<phi> (\\<phi> (FIX \\<phi>))\n                          (ss, tt) \\<longrightarrow>\n                         \\<phi> (FIX \\<phi>) (ss, tt)", "apply (erule Fix2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r u.\n       \\<phi> (FIX \\<phi>) (r, u) \\<Longrightarrow>\n       \\<phi> (FIX \\<phi>) (r, u)\n 2. \\<lbrakk>Monotone \\<phi>;\n     \\<forall>r u.\n        \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n        FIX \\<phi> (r, u)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ss tt.\n                         \\<phi> (\\<phi> (FIX \\<phi>))\n                          (ss, tt) \\<longrightarrow>\n                         \\<phi> (FIX \\<phi>) (ss, tt)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Monotone \\<phi>;\n     \\<forall>r u.\n        \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n        FIX \\<phi> (r, u)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ss tt.\n                         \\<phi> (\\<phi> (FIX \\<phi>))\n                          (ss, tt) \\<longrightarrow>\n                         \\<phi> (FIX \\<phi>) (ss, tt)", "apply (unfold Monotone_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<Phi> \\<Psi>.\n                (\\<forall>s t.\n                    \\<Phi> (s, t) \\<longrightarrow>\n                    \\<Psi> (s, t)) \\<longrightarrow>\n                (\\<forall>s t.\n                    \\<phi> \\<Phi> (s, t) \\<longrightarrow>\n                    \\<phi> \\<Psi> (s, t));\n     \\<forall>r u.\n        \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n        FIX \\<phi> (r, u)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ss tt.\n                         \\<phi> (\\<phi> (FIX \\<phi>))\n                          (ss, tt) \\<longrightarrow>\n                         \\<phi> (FIX \\<phi>) (ss, tt)", "apply (erule_tac x=\"\\<phi>(FIX \\<phi>)\" in allE, erule_tac x=\"FIX \\<phi>\" in allE, erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>r u.\n       \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n       FIX \\<phi> (r, u) \\<Longrightarrow>\n    \\<forall>s t.\n       \\<phi> (FIX \\<phi>) (s, t) \\<longrightarrow> FIX \\<phi> (s, t)\n 2. \\<lbrakk>\\<forall>r u.\n                \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n                FIX \\<phi> (r, u);\n     \\<forall>s t.\n        \\<phi> (\\<phi> (FIX \\<phi>)) (s, t) \\<longrightarrow>\n        \\<phi> (FIX \\<phi>) (s, t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ss tt.\n                         \\<phi> (\\<phi> (FIX \\<phi>))\n                          (ss, tt) \\<longrightarrow>\n                         \\<phi> (FIX \\<phi>) (ss, tt)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>r u.\n                \\<phi> (FIX \\<phi>) (r, u) \\<longrightarrow>\n                FIX \\<phi> (r, u);\n     \\<forall>s t.\n        \\<phi> (\\<phi> (FIX \\<phi>)) (s, t) \\<longrightarrow>\n        \\<phi> (FIX \\<phi>) (s, t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>ss tt.\n                         \\<phi> (\\<phi> (FIX \\<phi>))\n                          (ss, tt) \\<longrightarrow>\n                         \\<phi> (FIX \\<phi>) (ss, tt)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma Fix_lemma:\"Monotone \\<phi> \\<Longrightarrow> \\<phi> (FIX \\<phi>) = FIX \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone \\<phi> \\<Longrightarrow> \\<phi> (FIX \\<phi>) = FIX \\<phi>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone \\<phi> \\<Longrightarrow> \\<phi> (FIX \\<phi>) = FIX \\<phi>", "apply (rule ext, rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Monotone \\<phi>; \\<phi> (FIX \\<phi>) x\\<rbrakk>\n       \\<Longrightarrow> FIX \\<phi> x\n 2. \\<And>x.\n       \\<lbrakk>Monotone \\<phi>; FIX \\<phi> x\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (FIX \\<phi>) x", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Monotone \\<phi>; \\<phi> (FIX \\<phi>) (a, b)\\<rbrakk>\n       \\<Longrightarrow> FIX \\<phi> (a, b)\n 2. \\<And>x.\n       \\<lbrakk>Monotone \\<phi>; FIX \\<phi> x\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (FIX \\<phi>) x", "apply (erule Fix2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<phi> (FIX \\<phi>) (a, b) \\<Longrightarrow>\n       \\<phi> (FIX \\<phi>) (a, b)\n 2. \\<And>x.\n       \\<lbrakk>Monotone \\<phi>; FIX \\<phi> x\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (FIX \\<phi>) x", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>Monotone \\<phi>; FIX \\<phi> x\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (FIX \\<phi>) x", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>Monotone \\<phi>; FIX \\<phi> (a, b)\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (FIX \\<phi>) (a, b)", "apply (erule Fix1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b. FIX \\<phi> (a, b) \\<Longrightarrow> FIX \\<phi> (a, b)", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Next, the definition of a while-operator.\\<close>"], ["", "definition PhiWhilePOp::\n          \"VDMAssn \\<Rightarrow> BExpr \\<Rightarrow> TT \\<Rightarrow> TT \\<Rightarrow> TT\"\nwhere \"PhiWhilePOp A b \\<Phi> =\n  (\\<lambda> \\<Psi> . (\\<lambda>(r, u). (evalB b u \\<longrightarrow> (\\<exists>z. \\<Phi> (z, u) \\<and> \n                                        (\\<forall>w. A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and> \n                     ((\\<not> evalB b u) \\<longrightarrow> A r u)))\""], ["", "text\\<open>This operator is monotone in $\\Phi$.\\<close>"], ["", "lemma PhiWhilePOp_Monotone:\"Monotone (PhiWhilePOp A b \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (PhiWhilePOp A b \\<Phi>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (PhiWhilePOp A b \\<Phi>)", "apply (simp add: PhiWhilePOp_def Monotone_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<Phi>' \\<Psi>.\n       (\\<forall>s t.\n           \\<Phi>' (s, t) \\<longrightarrow> \\<Psi> (s, t)) \\<longrightarrow>\n       (\\<forall>s t.\n           (evalB b t \\<longrightarrow>\n            (\\<exists>z.\n                \\<Phi> (z, t) \\<and>\n                (\\<forall>w.\n                    A z w \\<longrightarrow> \\<Phi>' (s, w)))) \\<and>\n           (\\<not> evalB b t \\<longrightarrow> A s t) \\<longrightarrow>\n           evalB b t \\<longrightarrow>\n           (\\<exists>z.\n               \\<Phi> (z, t) \\<and>\n               (\\<forall>w. A z w \\<longrightarrow> \\<Psi> (s, w))))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>' \\<Psi> s t z.\n       \\<lbrakk>\\<forall>s t.\n                   \\<Phi>' (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        evalB b t; \\<Phi> (z, t);\n        \\<forall>w. A z w \\<longrightarrow> \\<Phi>' (s, w)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, t) \\<and>\n                            (\\<forall>w.\n                                A z w \\<longrightarrow> \\<Psi> (s, w))", "apply (rule_tac x=z in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Therefore, we can define the following fixed point.\\<close>"], ["", "definition PhiWhileP::\"VDMAssn \\<Rightarrow> BExpr \\<Rightarrow> TT \\<Rightarrow> TT\"\nwhere \"PhiWhileP A b \\<Phi> = FIX (PhiWhilePOp A b \\<Phi>)\""], ["", "text\\<open>As as a function on $\\phi$, this PhiWhileP is itself monotone\nin $\\phi$:\\<close>"], ["", "lemma PhiWhilePMonotone: \"Monotone (\\<lambda> \\<Phi> . PhiWhileP A b \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (PhiWhileP A b)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (PhiWhileP A b)", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<Phi> \\<Psi>.\n       (\\<forall>s t.\n           \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)) \\<longrightarrow>\n       (\\<forall>s t.\n           PhiWhileP A b \\<Phi> (s, t) \\<longrightarrow>\n           PhiWhileP A b \\<Psi> (s, t))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> s t.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        PhiWhileP A b \\<Phi> (s, t)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Psi> (s, t)", "apply (simp add: PhiWhileP_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> s t.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        FIX (PhiWhilePOp A b \\<Phi>) (s, t)\\<rbrakk>\n       \\<Longrightarrow> FIX (PhiWhilePOp A b \\<Psi>) (s, t)", "apply (simp add: FIX_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> s t.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        \\<forall>\\<Phi>'.\n           (\\<forall>ss tt.\n               PhiWhilePOp A b \\<Phi> \\<Phi>' (ss, tt) \\<longrightarrow>\n               \\<Phi>' (ss, tt)) \\<longrightarrow>\n           \\<Phi>' (s, t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<Phi>.\n                            (\\<forall>ss tt.\n                                PhiWhilePOp A b \\<Psi> \\<Phi>\n                                 (ss, tt) \\<longrightarrow>\n                                \\<Phi> (ss, tt)) \\<longrightarrow>\n                            \\<Phi> (s, t)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> s t \\<Phi>'.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        \\<forall>\\<Phi>'.\n           (\\<forall>ss tt.\n               PhiWhilePOp A b \\<Phi> \\<Phi>' (ss, tt) \\<longrightarrow>\n               \\<Phi>' (ss, tt)) \\<longrightarrow>\n           \\<Phi>' (s, t);\n        \\<forall>ss tt.\n           PhiWhilePOp A b \\<Psi> \\<Phi>' (ss, tt) \\<longrightarrow>\n           \\<Phi>' (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi>' (s, t)", "apply (erule_tac x=\\<Phi>' in allE, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> s t \\<Phi>'.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        \\<forall>ss tt.\n           PhiWhilePOp A b \\<Psi> \\<Phi>' (ss, tt) \\<longrightarrow>\n           \\<Phi>' (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ss tt.\n                            PhiWhilePOp A b \\<Phi> \\<Phi>'\n                             (ss, tt) \\<longrightarrow>\n                            \\<Phi>' (ss, tt)", "apply (clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> \\<Phi>' ss tt.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        \\<forall>ss tt.\n           PhiWhilePOp A b \\<Psi> \\<Phi>' (ss, tt) \\<longrightarrow>\n           \\<Phi>' (ss, tt);\n        PhiWhilePOp A b \\<Phi> \\<Phi>' (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi>' (ss, tt)", "apply (erule_tac x=ss in allE, erule_tac x=tt in allE, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> \\<Phi>' ss tt.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        PhiWhilePOp A b \\<Phi> \\<Phi>' (ss, tt)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Psi> \\<Phi>' (ss, tt)", "apply (simp add: PhiWhilePOp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> \\<Phi>' ss tt.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        (evalB b tt \\<longrightarrow>\n         (\\<exists>z.\n             \\<Phi> (z, tt) \\<and>\n             (\\<forall>w. A z w \\<longrightarrow> \\<Phi>' (ss, w)))) \\<and>\n        (\\<not> evalB b tt \\<longrightarrow> A ss tt)\\<rbrakk>\n       \\<Longrightarrow> evalB b tt \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Psi> (z, tt) \\<and>\n                             (\\<forall>w.\n                                 A z w \\<longrightarrow> \\<Phi>' (ss, w)))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> \\<Phi>' ss tt z.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        evalB b tt; \\<Phi> (z, tt);\n        \\<forall>w. A z w \\<longrightarrow> \\<Phi>' (ss, w)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Psi> (z, tt) \\<and>\n                            (\\<forall>w.\n                                A z w \\<longrightarrow> \\<Phi>' (ss, w))", "apply (rule_tac x=z in exI, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Now the rule for parallel while loops, i.e.~loops where the\nbranch condition evaluates identically in both executions.\\<close>"], ["", "lemma WHILE_PARALLEL:\n \"\\<lbrakk> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \n    \\<forall> s ss . EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss; LEQ p q\\<rbrakk>\n \\<Longrightarrow> X \\<rhd> While b c : Sec (Q p G) (EQ G q) (EQ G q)\n                         (PhiWhileP (EQ G q) b \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (PhiWhileP (EQ G q) b \\<Phi>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (PhiWhileP (EQ G q) b \\<Phi>)", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b c : ?A\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         ?A s t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhileP (EQ G q) b \\<Phi>) s t", "apply (rule VDMWhile)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s. \\<not> evalB b s \\<longrightarrow> ?A3 s s\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         ?A3 r t \\<longrightarrow> ?A3 s t\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         ?A3 s t \\<and> \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhileP (EQ G q) b \\<Phi>) s t", "prefer 4"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         ?A3 s t \\<and> \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhileP (EQ G q) b \\<Phi>) s t\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s. \\<not> evalB b s \\<longrightarrow> ?A3 s s\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         ?A3 r t \\<longrightarrow> ?A3 s t", "apply (subgoal_tac \"\\<forall>s t. Sec (Q p G) (EQ G q) (EQ G q) (PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)) s t \\<and> \\<not> evalB b t \\<longrightarrow> Sec (Q p G) (EQ G q) (EQ G q) (PhiWhileP (EQ G q) b \\<Phi>) s t\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q;\n     \\<forall>s t.\n        Sec (Q p G) (EQ G q) (EQ G q)\n         (PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)) s\n         t \\<and>\n        \\<not> evalB b t \\<longrightarrow>\n        Sec (Q p G) (EQ G q) (EQ G q) (PhiWhileP (EQ G q) b \\<Phi>) s\n         t\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         ?A3 s t \\<and> \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhileP (EQ G q) b \\<Phi>) s t\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhileP (EQ G q) b \\<Phi>) s t\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s. \\<not> evalB b s \\<longrightarrow> ?A3 s s\n 5. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         ?A3 r t \\<longrightarrow> ?A3 s t", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhileP (EQ G q) b \\<Phi>) s t\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         \\<not> evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s s\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q)\n         (PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)) s t;\n        \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhileP (EQ G q) b \\<Phi>) s t\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         \\<not> evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s s\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (subgoal_tac \"PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>) = PhiWhileP (EQ G q) b \\<Phi>\", clarsimp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q)\n         (PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)) s t;\n        \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (PhiWhileP (EQ G q) b \\<Phi>) =\n                         PhiWhileP (EQ G q) b \\<Phi>\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         \\<not> evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s s\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (simp add: PhiWhileP_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q)\n         (PhiWhilePOp (EQ G q) b \\<Phi>\n           (FIX (PhiWhilePOp (EQ G q) b \\<Phi>)))\n         s t;\n        \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (FIX (PhiWhilePOp (EQ G q) b \\<Phi>)) =\n                         FIX (PhiWhilePOp (EQ G q) b \\<Phi>)\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         \\<not> evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s s\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (rule Fix_lemma)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q)\n         (PhiWhilePOp (EQ G q) b \\<Phi>\n           (FIX (PhiWhilePOp (EQ G q) b \\<Phi>)))\n         s t;\n        \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> Monotone (PhiWhilePOp (EQ G q) b \\<Phi>)\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         \\<not> evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s s\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (rule PhiWhilePOp_Monotone)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : ?B3\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         \\<not> evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s s\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         ?B3 s r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         \\<not> evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s s\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s s\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (simp add: Sec_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> Q p G s s \\<and>\n                         (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>) (s, r)) \\<and>\n                         (\\<forall>r.\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>)\n                              (r, s) \\<longrightarrow>\n                             EQ G q r s)\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply rule"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> Q p G s s\n 2. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>) (s, r)) \\<and>\n                         (\\<forall>r.\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>)\n                              (r, s) \\<longrightarrow>\n                             EQ G q r s)\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (simp add: Q_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>) (s, r)) \\<and>\n                         (\\<forall>r.\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>)\n                              (r, s) \\<longrightarrow>\n                             EQ G q r s)\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (rule, clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s; EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (PhiWhileP (EQ G q) b \\<Phi>) (s, r)\n 2. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r s\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (simp add: PhiWhilePOp_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s; EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> evalB b r \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Phi> (z, r) \\<and>\n                             (\\<forall>w.\n                                 EQ G q z w \\<longrightarrow>\n                                 PhiWhileP (EQ G q) b \\<Phi> (s, w)))\n 2. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r s\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s; EQ G q s r; evalB b r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, r) \\<and>\n                            (\\<forall>w.\n                                EQ G q z w \\<longrightarrow>\n                                PhiWhileP (EQ G q) b \\<Phi> (s, w))\n 2. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r s\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (erule_tac x=s in allE, erule_tac x=r in allE, erule impE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        \\<not> evalB b s; EQ G q s r; evalB b r\\<rbrakk>\n       \\<Longrightarrow> EQ G p s r\n 2. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        \\<not> evalB b s; EQ G q s r; evalB b r;\n        evalB b s = evalB b r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, r) \\<and>\n                            (\\<forall>w.\n                                EQ G q z w \\<longrightarrow>\n                                PhiWhileP (EQ G q) b \\<Phi> (s, w))\n 3. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r s\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (erule EQ_LEQ)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        \\<not> evalB b s; evalB b r\\<rbrakk>\n       \\<Longrightarrow> LEQ p q\n 2. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        \\<not> evalB b s; EQ G q s r; evalB b r;\n        evalB b s = evalB b r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, r) \\<and>\n                            (\\<forall>w.\n                                EQ G q z w \\<longrightarrow>\n                                PhiWhileP (EQ G q) b \\<Phi> (s, w))\n 3. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r s\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        \\<not> evalB b s; EQ G q s r; evalB b r;\n        evalB b s = evalB b r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, r) \\<and>\n                            (\\<forall>w.\n                                EQ G q z w \\<longrightarrow>\n                                PhiWhileP (EQ G q) b \\<Phi> (s, w))\n 2. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r s\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r s\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; \\<not> evalB b s;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n         (r, s)\\<rbrakk>\n       \\<Longrightarrow> EQ G q r s\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (simp add: PhiWhilePOp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          r t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s r;\n        Sec (Q p G) (EQ G q) (EQ G q)\n         (PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)) r\n         t\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhilePOp (EQ G q) b \\<Phi>\n                            (PhiWhileP (EQ G q) b \\<Phi>))\n                          s t", "apply (simp add: Sec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> Q p G s t \\<and>\n                         (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>) (t, r)) \\<and>\n                         (\\<forall>r.\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>)\n                              (r, s) \\<longrightarrow>\n                             EQ G q r t)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> Q p G s t\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>) (t, r)) \\<and>\n                         (\\<forall>r.\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>)\n                              (r, s) \\<longrightarrow>\n                             EQ G q r t)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t\\<rbrakk>\n       \\<Longrightarrow> Q p G s t\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>) (t, r)) \\<and>\n                         (\\<forall>r.\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>)\n                              (r, s) \\<longrightarrow>\n                             EQ G q r t)", "apply (simp add: Q_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow>\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>) (t, r)) \\<and>\n                         (\\<forall>r.\n                             PhiWhilePOp (EQ G q) b \\<Phi>\n                              (PhiWhileP (EQ G q) b \\<Phi>)\n                              (r, s) \\<longrightarrow>\n                             EQ G q r t)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r t", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>)\n                             (r, s) \\<longrightarrow>\n                            EQ G q r t\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n         (ra, s)\\<rbrakk>\n       \\<Longrightarrow> EQ G q ra t\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (subgoal_tac \"\\<exists>r. \\<Phi> (r, s) \\<and> (\\<forall>w. EQ G q r w \\<longrightarrow> (PhiWhileP (EQ G q) b \\<Phi>) (ra, w))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>) (ra, s);\n        \\<exists>r.\n           \\<Phi> (r, s) \\<and>\n           (\\<forall>w.\n               EQ G q r w \\<longrightarrow>\n               PhiWhileP (EQ G q) b \\<Phi> (ra, w))\\<rbrakk>\n       \\<Longrightarrow> EQ G q ra t\n 2. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n         (ra, s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            \\<Phi> (r, s) \\<and>\n                            (\\<forall>w.\n                                EQ G q r w \\<longrightarrow>\n                                PhiWhileP (EQ G q) b \\<Phi> (ra, w))\n 3. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n         (ra, s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>r.\n                            \\<Phi> (r, s) \\<and>\n                            (\\<forall>w.\n                                EQ G q r w \\<longrightarrow>\n                                PhiWhileP (EQ G q) b \\<Phi> (ra, w))\n 2. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>) (ra, s);\n        \\<exists>r.\n           \\<Phi> (r, s) \\<and>\n           (\\<forall>w.\n               EQ G q r w \\<longrightarrow>\n               PhiWhileP (EQ G q) b \\<Phi> (ra, w))\\<rbrakk>\n       \\<Longrightarrow> EQ G q ra t\n 3. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (simp add: PhiWhilePOp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>) (ra, s);\n        \\<exists>r.\n           \\<Phi> (r, s) \\<and>\n           (\\<forall>w.\n               EQ G q r w \\<longrightarrow>\n               PhiWhileP (EQ G q) b \\<Phi> (ra, w))\\<rbrakk>\n       \\<Longrightarrow> EQ G q ra t\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra rb.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>) (ra, s);\n        \\<Phi> (rb, s);\n        \\<forall>w.\n           EQ G q rb w \\<longrightarrow>\n           PhiWhileP (EQ G q) b \\<Phi> (ra, w)\\<rbrakk>\n       \\<Longrightarrow> EQ G q ra t\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (rotate_tac -3, erule thin_rl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra rb.\n       \\<lbrakk>\\<Phi> (rb, s);\n        \\<forall>w.\n           EQ G q rb w \\<longrightarrow>\n           PhiWhileP (EQ G q) b \\<Phi> (ra, w);\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t\\<rbrakk>\n       \\<Longrightarrow> EQ G q ra t\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (rotate_tac -1, erule_tac x=ra in allE, erule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra rb.\n       \\<lbrakk>\\<Phi> (rb, s);\n        \\<forall>w.\n           EQ G q rb w \\<longrightarrow>\n           PhiWhileP (EQ G q) b \\<Phi> (ra, w);\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (PhiWhileP (EQ G q) b \\<Phi>) (ra, r)\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (rotate_tac 1, erule_tac x=r in allE, erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r t ra rb.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<Phi> (rb, s)\\<rbrakk>\n       \\<Longrightarrow> EQ G q rb r\n 2. \\<And>s r t ra rb.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<Phi> (rb, s); PhiWhileP (EQ G q) b \\<Phi> (ra, r)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (PhiWhileP (EQ G q) b \\<Phi>) (ra, r)\n 3. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra rb.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<Phi> (rb, s); PhiWhileP (EQ G q) b \\<Phi> (ra, r)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (PhiWhileP (EQ G q) b \\<Phi>) (ra, r)\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (subgoal_tac \"PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>) = PhiWhileP (EQ G q) b \\<Phi>\", clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra rb.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<Phi> (rb, s); PhiWhileP (EQ G q) b \\<Phi> (ra, r)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (PhiWhileP (EQ G q) b \\<Phi>) =\n                         PhiWhileP (EQ G q) b \\<Phi>\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (simp add: PhiWhileP_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra rb.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi>\n            (FIX (PhiWhilePOp (EQ G q) b \\<Phi>)) (t, ra);\n        \\<Phi> (rb, s); FIX (PhiWhilePOp (EQ G q) b \\<Phi>) (ra, r)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (FIX (PhiWhilePOp (EQ G q) b \\<Phi>)) =\n                         FIX (PhiWhilePOp (EQ G q) b \\<Phi>)\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (rule Fix_lemma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra rb.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi>\n            (FIX (PhiWhilePOp (EQ G q) b \\<Phi>)) (t, ra);\n        \\<Phi> (rb, s); FIX (PhiWhilePOp (EQ G q) b \\<Phi>) (ra, r)\\<rbrakk>\n       \\<Longrightarrow> Monotone (PhiWhilePOp (EQ G q) b \\<Phi>)\n 2. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply (rule PhiWhilePOp_Monotone)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        Q p G r t \\<and>\n        (\\<forall>ra.\n            EQ G q r ra \\<longrightarrow>\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (t, ra)) \\<and>\n        (\\<forall>ra.\n            PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n             (ra, r) \\<longrightarrow>\n            EQ G q ra t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            EQ G q s r \\<longrightarrow>\n                            PhiWhilePOp (EQ G q) b \\<Phi>\n                             (PhiWhileP (EQ G q) b \\<Phi>) (t, r)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (PhiWhileP (EQ G q) b \\<Phi>) (t, ra)", "apply (simp (no_asm_simp) add: PhiWhilePOp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> (evalB b ra \\<longrightarrow>\n                          (\\<exists>z.\n                              \\<Phi> (z, ra) \\<and>\n                              (\\<forall>w.\n                                  EQ G q z w \\<longrightarrow>\n                                  PhiWhileP (EQ G q) b \\<Phi>\n                                   (t, w)))) \\<and>\n                         (\\<not> evalB b ra \\<longrightarrow> EQ G q t ra)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> evalB b ra \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Phi> (z, ra) \\<and>\n                             (\\<forall>w.\n                                 EQ G q z w \\<longrightarrow>\n                                 PhiWhileP (EQ G q) b \\<Phi> (t, w)))\n 2. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> \\<not> evalB b ra \\<longrightarrow> EQ G q t ra", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> \\<not> evalB b ra \\<longrightarrow> EQ G q t ra\n 2. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> evalB b ra \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Phi> (z, ra) \\<and>\n                             (\\<forall>w.\n                                 EQ G q z w \\<longrightarrow>\n                                 PhiWhileP (EQ G q) b \\<Phi> (t, w)))", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; \\<not> evalB b ra\\<rbrakk>\n       \\<Longrightarrow> EQ G q t ra\n 2. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> evalB b ra \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Phi> (z, ra) \\<and>\n                             (\\<forall>w.\n                                 EQ G q z w \\<longrightarrow>\n                                 PhiWhileP (EQ G q) b \\<Phi> (t, w)))", "apply (erule_tac x=s in allE, rotate_tac -1, erule_tac x=ra in allE, erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; \\<not> evalB b ra\\<rbrakk>\n       \\<Longrightarrow> EQ G p s ra\n 2. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; \\<not> evalB b ra; evalB b s = evalB b ra\\<rbrakk>\n       \\<Longrightarrow> EQ G q t ra\n 3. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> evalB b ra \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Phi> (z, ra) \\<and>\n                             (\\<forall>w.\n                                 EQ G q z w \\<longrightarrow>\n                                 PhiWhileP (EQ G q) b \\<Phi> (t, w)))", "apply (erule EQ_LEQ)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        \\<not> evalB b ra\\<rbrakk>\n       \\<Longrightarrow> LEQ p q\n 2. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; \\<not> evalB b ra; evalB b s = evalB b ra\\<rbrakk>\n       \\<Longrightarrow> EQ G q t ra\n 3. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> evalB b ra \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Phi> (z, ra) \\<and>\n                             (\\<forall>w.\n                                 EQ G q z w \\<longrightarrow>\n                                 PhiWhileP (EQ G q) b \\<Phi> (t, w)))", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; LEQ p q;\n        evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; \\<not> evalB b ra; evalB b s = evalB b ra\\<rbrakk>\n       \\<Longrightarrow> EQ G q t ra\n 2. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> evalB b ra \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Phi> (z, ra) \\<and>\n                             (\\<forall>w.\n                                 EQ G q z w \\<longrightarrow>\n                                 PhiWhileP (EQ G q) b \\<Phi> (t, w)))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra\\<rbrakk>\n       \\<Longrightarrow> evalB b ra \\<longrightarrow>\n                         (\\<exists>z.\n                             \\<Phi> (z, ra) \\<and>\n                             (\\<forall>w.\n                                 EQ G q z w \\<longrightarrow>\n                                 PhiWhileP (EQ G q) b \\<Phi> (t, w)))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; evalB b ra\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, ra) \\<and>\n                            (\\<forall>w.\n                                EQ G q z w \\<longrightarrow>\n                                PhiWhileP (EQ G q) b \\<Phi> (t, w))", "apply (rotate_tac 2, erule_tac x=ra in allE, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra.\n       \\<lbrakk>LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, ra) \\<and>\n                            (\\<forall>w.\n                                EQ G q z w \\<longrightarrow>\n                                PhiWhileP (EQ G q) b \\<Phi> (t, w))", "apply (rule_tac x=r in exI, rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t ra.\n       \\<lbrakk>LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> (r, ra)\n 2. \\<And>s r t ra.\n       \\<lbrakk>LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>w.\n                            EQ G q r w \\<longrightarrow>\n                            PhiWhileP (EQ G q) b \\<Phi> (t, w)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra.\n       \\<lbrakk>LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>w.\n                            EQ G q r w \\<longrightarrow>\n                            PhiWhileP (EQ G q) b \\<Phi> (t, w)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra w.\n       \\<lbrakk>LEQ p q; evalB b s; Q p G s r; Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<forall>ra.\n           EQ G q r ra \\<longrightarrow>\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (t, ra);\n        \\<forall>ra.\n           PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n            (ra, r) \\<longrightarrow>\n           EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra); EQ G q r w\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP (EQ G q) b \\<Phi> (t, w)", "apply (rotate_tac 5, erule_tac x=w in allE, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra w.\n       \\<lbrakk>\\<forall>ra.\n                   PhiWhilePOp (EQ G q) b \\<Phi>\n                    (PhiWhileP (EQ G q) b \\<Phi>) (ra, r) \\<longrightarrow>\n                   EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra); EQ G q r w; LEQ p q; evalB b s; Q p G s r;\n        Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n         (t, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP (EQ G q) b \\<Phi> (t, w)", "apply (subgoal_tac \"PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>) = PhiWhileP (EQ G q) b \\<Phi>\", clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra w.\n       \\<lbrakk>\\<forall>ra.\n                   PhiWhilePOp (EQ G q) b \\<Phi>\n                    (PhiWhileP (EQ G q) b \\<Phi>) (ra, r) \\<longrightarrow>\n                   EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra); EQ G q r w; LEQ p q; evalB b s; Q p G s r;\n        Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        PhiWhilePOp (EQ G q) b \\<Phi> (PhiWhileP (EQ G q) b \\<Phi>)\n         (t, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (PhiWhileP (EQ G q) b \\<Phi>) =\n                         PhiWhileP (EQ G q) b \\<Phi>", "apply (simp add: PhiWhileP_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra w.\n       \\<lbrakk>\\<forall>ra.\n                   PhiWhilePOp (EQ G q) b \\<Phi>\n                    (FIX (PhiWhilePOp (EQ G q) b \\<Phi>))\n                    (ra, r) \\<longrightarrow>\n                   EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra); EQ G q r w; LEQ p q; evalB b s; Q p G s r;\n        Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        PhiWhilePOp (EQ G q) b \\<Phi> (FIX (PhiWhilePOp (EQ G q) b \\<Phi>))\n         (t, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp (EQ G q) b \\<Phi>\n                          (FIX (PhiWhilePOp (EQ G q) b \\<Phi>)) =\n                         FIX (PhiWhilePOp (EQ G q) b \\<Phi>)", "apply (rule Fix_lemma)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r t ra w.\n       \\<lbrakk>\\<forall>ra.\n                   PhiWhilePOp (EQ G q) b \\<Phi>\n                    (FIX (PhiWhilePOp (EQ G q) b \\<Phi>))\n                    (ra, r) \\<longrightarrow>\n                   EQ G q ra t;\n        EQ G q s ra; evalB b ra;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<Phi> (r, ra); EQ G q r w; LEQ p q; evalB b s; Q p G s r;\n        Q p G r t;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        PhiWhilePOp (EQ G q) b \\<Phi> (FIX (PhiWhilePOp (EQ G q) b \\<Phi>))\n         (t, w)\\<rbrakk>\n       \\<Longrightarrow> Monotone (PhiWhilePOp (EQ G q) b \\<Phi>)", "apply (rule PhiWhilePOp_Monotone)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>The side condition regarding the evalution of the branch\ncondsition may be replaced by a typing hypothesis, thanks to lemma\n\\<open>HS_B_eval\\<close>.\\<close>"], ["", "lemma WHILE_PARALLEL_tp:\n \"\\<lbrakk> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \n    (G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n \\<Longrightarrow> X \\<rhd> While b c : Sec (Q p G) (EQ G q) (EQ G q)\n                         (PhiWhileP (EQ G q) b \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     (G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (PhiWhileP (EQ G q) b \\<Phi>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     (G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (PhiWhileP (EQ G q) b \\<Phi>)", "apply (erule WHILE_PARALLEL)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s ss.\n                         EQ G p s ss \\<longrightarrow>\n                         evalB b s = evalB b ss\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ss.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> evalB b s = evalB b ss\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply (erule HS_B_eval)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s ss.\n       \\<lbrakk>LEQ p q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> EQ G (?pp8 s ss) s ss\n 2. \\<And>s ss.\n       \\<lbrakk>LEQ p q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> LEQ p (?pp8 s ss)\n 3. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ss.\n       \\<lbrakk>LEQ p q; EQ G p s ss\\<rbrakk> \\<Longrightarrow> LEQ p p\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply (rule LAT6)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>One may also give an inductive formulation of FIX:\\<close>"], ["", "inductive_set var::\"(BExpr \\<times> VDMAssn \\<times> TT \\<times> State \\<times> State) set\"\nwhere\nvarFalse:\n   \"\\<lbrakk>\\<not> evalB b t; A s t\\<rbrakk> \\<Longrightarrow> (b,A,\\<Phi>,s,t):var\"\n| varTrue:\n   \"\\<lbrakk>evalB b t; \\<Phi>(r,t); (\\<forall> w . A r w \\<longrightarrow>\n    (b,A,\\<Phi>,s,w): var) \\<rbrakk> \\<Longrightarrow> (b,A,\\<Phi>,s,t):var\""], ["", "(*<*)"], ["", "lemma varFIX: \"(b,A,\\<Phi>,s,t):var \\<Longrightarrow> PhiWhileP A b \\<Phi> (s,t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow>\n    PhiWhileP A b \\<Phi> (s, t)", "apply (erule var.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Phi> (s, t)\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Phi> (s, t)", "apply (simp add: PhiWhileP_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t\\<rbrakk>\n       \\<Longrightarrow> FIX (PhiWhilePOp A b \\<Phi>) (s, t)\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Phi> (s, t)", "apply (subgoal_tac \"PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s,t)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t;\n        PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>))\n         (s, t)\\<rbrakk>\n       \\<Longrightarrow> FIX (PhiWhilePOp A b \\<Phi>) (s, t)\n 2. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\n 3. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Phi> (s, t)", "apply (subgoal_tac \"PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) = FIX (PhiWhilePOp A b \\<Phi>)\", clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t;\n        PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>))\n         (s, t)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) =\n                         FIX (PhiWhilePOp A b \\<Phi>)\n 2. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\n 3. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Phi> (s, t)", "apply (rule Fix_lemma)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t;\n        PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>))\n         (s, t)\\<rbrakk>\n       \\<Longrightarrow> Monotone (PhiWhilePOp A b \\<Phi>)\n 2. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\n 3. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Phi> (s, t)", "apply (rule PhiWhilePOp_Monotone)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Phi> (s, t)", "apply (simp add: PhiWhilePOp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhileP A b \\<Phi> (s, t)", "apply (simp (no_asm_simp) add: PhiWhileP_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> FIX (PhiWhilePOp A b \\<Phi>) (s, t)", "apply (subgoal_tac \"PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s,t)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w);\n        PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>))\n         (s, t)\\<rbrakk>\n       \\<Longrightarrow> FIX (PhiWhilePOp A b \\<Phi>) (s, t)\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)", "apply (subgoal_tac \"PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) = FIX (PhiWhilePOp A b \\<Phi>)\", clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w);\n        PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>))\n         (s, t)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) =\n                         FIX (PhiWhilePOp A b \\<Phi>)\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)", "apply (rule Fix_lemma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w);\n        PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>))\n         (s, t)\\<rbrakk>\n       \\<Longrightarrow> Monotone (PhiWhilePOp A b \\<Phi>)\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)", "apply (rule PhiWhilePOp_Monotone)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> PhiWhilePOp A b \\<Phi>\n                          (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)", "apply (simp add: PhiWhilePOp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z.\n                            \\<Phi> (z, t) \\<and>\n                            (\\<forall>w.\n                                A z w \\<longrightarrow>\n                                FIX (\\<lambda>\\<Psi> (r, u).\n  (evalB b u \\<longrightarrow>\n   (\\<exists>z.\n       \\<Phi> (z, u) \\<and>\n       (\\<forall>w. A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n  (\\<not> evalB b u \\<longrightarrow> A r u))\n                                 (s, w))", "apply (rule_tac x=r in exI, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>w.\n                            A r w \\<longrightarrow>\n                            FIX (\\<lambda>\\<Psi> (r, u).\n                                    (evalB b u \\<longrightarrow>\n                                     (\\<exists>z.\n   \\<Phi> (z, u) \\<and>\n   (\\<forall>w. A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                                    (\\<not> evalB b u \\<longrightarrow>\n                                     A r u))\n                             (s, w)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s w.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           PhiWhileP A b \\<Phi> (s, w);\n        A r w\\<rbrakk>\n       \\<Longrightarrow> FIX (\\<lambda>\\<Psi> (r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  (\\<exists>z.\n\\<Phi> (z, u) \\<and>\n(\\<forall>w. A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow> A r u))\n                          (s, w)", "apply (erule_tac x=w in allE, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s w.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t); A r w;\n        (b, A, \\<Phi>, s, w) \\<in> var; PhiWhileP A b \\<Phi> (s, w)\\<rbrakk>\n       \\<Longrightarrow> FIX (\\<lambda>\\<Psi> (r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  (\\<exists>z.\n\\<Phi> (z, u) \\<and>\n(\\<forall>w. A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow> A r u))\n                          (s, w)", "apply (simp add: PhiWhileP_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s w.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t); A r w;\n        (b, A, \\<Phi>, s, w) \\<in> var;\n        FIX (PhiWhilePOp A b \\<Phi>) (s, w)\\<rbrakk>\n       \\<Longrightarrow> FIX (\\<lambda>\\<Psi> (r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  (\\<exists>z.\n\\<Phi> (z, u) \\<and>\n(\\<forall>w. A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow> A r u))\n                          (s, w)", "apply (simp add: PhiWhilePOp_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma FIXvar: \"PhiWhileP A b \\<Phi> (s,t) \\<Longrightarrow> (b,A,\\<Phi>,s,t):var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PhiWhileP A b \\<Phi> (s, t) \\<Longrightarrow>\n    (b, A, \\<Phi>, s, t) \\<in> var", "apply (simp add: PhiWhileP_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. FIX (PhiWhilePOp A b \\<Phi>) (s, t) \\<Longrightarrow>\n    (b, A, \\<Phi>, s, t) \\<in> var", "apply (subgoal_tac \"PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>FIX (PhiWhilePOp A b \\<Phi>) (s, t);\n     PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var\n 2. FIX (PhiWhilePOp A b \\<Phi>) (s, t) \\<Longrightarrow>\n    PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. FIX (PhiWhilePOp A b \\<Phi>) (s, t) \\<Longrightarrow>\n    PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\n 2. \\<lbrakk>FIX (PhiWhilePOp A b \\<Phi>) (s, t);\n     PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply (subgoal_tac \"PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) = FIX (PhiWhilePOp A b \\<Phi>)\", clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. FIX (PhiWhilePOp A b \\<Phi>) (s, t) \\<Longrightarrow>\n    PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) =\n    FIX (PhiWhilePOp A b \\<Phi>)\n 2. \\<lbrakk>FIX (PhiWhilePOp A b \\<Phi>) (s, t);\n     PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply (rule Fix_lemma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. FIX (PhiWhilePOp A b \\<Phi>) (s, t) \\<Longrightarrow>\n    Monotone (PhiWhilePOp A b \\<Phi>)\n 2. \\<lbrakk>FIX (PhiWhilePOp A b \\<Phi>) (s, t);\n     PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply (rule PhiWhilePOp_Monotone)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>FIX (PhiWhilePOp A b \\<Phi>) (s, t);\n     PhiWhilePOp A b \\<Phi> (FIX (PhiWhilePOp A b \\<Phi>)) (s, t)\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply (erule thin_rl, simp add: PhiWhilePOp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (evalB b t \\<longrightarrow>\n     (\\<exists>z.\n         \\<Phi> (z, t) \\<and>\n         (\\<forall>w.\n             A z w \\<longrightarrow>\n             FIX (\\<lambda>\\<Psi> (r, u).\n                     (evalB b u \\<longrightarrow>\n                      (\\<exists>z.\n                          \\<Phi> (z, u) \\<and>\n                          (\\<forall>w.\n                              A z w \\<longrightarrow>\n                              \\<Psi> (r, w)))) \\<and>\n                     (\\<not> evalB b u \\<longrightarrow> A r u))\n              (s, w)))) \\<and>\n    (\\<not> evalB b t \\<longrightarrow> A s t) \\<Longrightarrow>\n    (b, A, \\<Phi>, s, t) \\<in> var", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>evalB b t \\<longrightarrow>\n             (\\<exists>z.\n                 \\<Phi> (z, t) \\<and>\n                 (\\<forall>w.\n                     A z w \\<longrightarrow>\n                     FIX (\\<lambda>\\<Psi> (r, u).\n                             (evalB b u \\<longrightarrow>\n                              (\\<exists>z.\n                                  \\<Phi> (z, u) \\<and>\n                                  (\\<forall>w.\nA z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                             (\\<not> evalB b u \\<longrightarrow> A r u))\n                      (s, w)));\n     \\<not> evalB b t \\<longrightarrow> A s t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply (case_tac \"evalB b t\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>evalB b t \\<longrightarrow>\n             (\\<exists>z.\n                 \\<Phi> (z, t) \\<and>\n                 (\\<forall>w.\n                     A z w \\<longrightarrow>\n                     FIX (\\<lambda>\\<Psi> (r, u).\n                             (evalB b u \\<longrightarrow>\n                              (\\<exists>z.\n                                  \\<Phi> (z, u) \\<and>\n                                  (\\<forall>w.\nA z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                             (\\<not> evalB b u \\<longrightarrow> A r u))\n                      (s, w)));\n     \\<not> evalB b t \\<longrightarrow> A s t; evalB b t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var\n 2. \\<lbrakk>evalB b t \\<longrightarrow>\n             (\\<exists>z.\n                 \\<Phi> (z, t) \\<and>\n                 (\\<forall>w.\n                     A z w \\<longrightarrow>\n                     FIX (\\<lambda>\\<Psi> (r, u).\n                             (evalB b u \\<longrightarrow>\n                              (\\<exists>z.\n                                  \\<Phi> (z, u) \\<and>\n                                  (\\<forall>w.\nA z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                             (\\<not> evalB b u \\<longrightarrow> A r u))\n                      (s, w)));\n     \\<not> evalB b t \\<longrightarrow> A s t; \\<not> evalB b t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>evalB b t \\<longrightarrow>\n             (\\<exists>z.\n                 \\<Phi> (z, t) \\<and>\n                 (\\<forall>w.\n                     A z w \\<longrightarrow>\n                     FIX (\\<lambda>\\<Psi> (r, u).\n                             (evalB b u \\<longrightarrow>\n                              (\\<exists>z.\n                                  \\<Phi> (z, u) \\<and>\n                                  (\\<forall>w.\nA z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                             (\\<not> evalB b u \\<longrightarrow> A r u))\n                      (s, w)));\n     \\<not> evalB b t \\<longrightarrow> A s t; \\<not> evalB b t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var\n 2. \\<lbrakk>evalB b t \\<longrightarrow>\n             (\\<exists>z.\n                 \\<Phi> (z, t) \\<and>\n                 (\\<forall>w.\n                     A z w \\<longrightarrow>\n                     FIX (\\<lambda>\\<Psi> (r, u).\n                             (evalB b u \\<longrightarrow>\n                              (\\<exists>z.\n                                  \\<Phi> (z, u) \\<and>\n                                  (\\<forall>w.\nA z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                             (\\<not> evalB b u \\<longrightarrow> A r u))\n                      (s, w)));\n     \\<not> evalB b t \\<longrightarrow> A s t; evalB b t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>A s t; \\<not> evalB b t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var\n 2. \\<lbrakk>evalB b t \\<longrightarrow>\n             (\\<exists>z.\n                 \\<Phi> (z, t) \\<and>\n                 (\\<forall>w.\n                     A z w \\<longrightarrow>\n                     FIX (\\<lambda>\\<Psi> (r, u).\n                             (evalB b u \\<longrightarrow>\n                              (\\<exists>z.\n                                  \\<Phi> (z, u) \\<and>\n                                  (\\<forall>w.\nA z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                             (\\<not> evalB b u \\<longrightarrow> A r u))\n                      (s, w)));\n     \\<not> evalB b t \\<longrightarrow> A s t; evalB b t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply (rule varFalse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>A s t; \\<not> evalB b t\\<rbrakk>\n    \\<Longrightarrow> \\<not> evalB b t\n 2. \\<lbrakk>A s t; \\<not> evalB b t\\<rbrakk> \\<Longrightarrow> A s t\n 3. \\<lbrakk>evalB b t \\<longrightarrow>\n             (\\<exists>z.\n                 \\<Phi> (z, t) \\<and>\n                 (\\<forall>w.\n                     A z w \\<longrightarrow>\n                     FIX (\\<lambda>\\<Psi> (r, u).\n                             (evalB b u \\<longrightarrow>\n                              (\\<exists>z.\n                                  \\<Phi> (z, u) \\<and>\n                                  (\\<forall>w.\nA z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                             (\\<not> evalB b u \\<longrightarrow> A r u))\n                      (s, w)));\n     \\<not> evalB b t \\<longrightarrow> A s t; evalB b t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>evalB b t \\<longrightarrow>\n             (\\<exists>z.\n                 \\<Phi> (z, t) \\<and>\n                 (\\<forall>w.\n                     A z w \\<longrightarrow>\n                     FIX (\\<lambda>\\<Psi> (r, u).\n                             (evalB b u \\<longrightarrow>\n                              (\\<exists>z.\n                                  \\<Phi> (z, u) \\<and>\n                                  (\\<forall>w.\nA z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                             (\\<not> evalB b u \\<longrightarrow> A r u))\n                      (s, w)));\n     \\<not> evalB b t \\<longrightarrow> A s t; evalB b t\\<rbrakk>\n    \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t);\n        \\<forall>w.\n           A z w \\<longrightarrow>\n           FIX (\\<lambda>\\<Psi> (r, u).\n                   (evalB b u \\<longrightarrow>\n                    (\\<exists>z.\n                        \\<Phi> (z, u) \\<and>\n                        (\\<forall>w.\n                            A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                   (\\<not> evalB b u \\<longrightarrow> A r u))\n            (s, w)\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, s, t) \\<in> var", "apply (rule varTrue)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t);\n        \\<forall>w.\n           A z w \\<longrightarrow>\n           FIX (\\<lambda>\\<Psi> (r, u).\n                   (evalB b u \\<longrightarrow>\n                    (\\<exists>z.\n                        \\<Phi> (z, u) \\<and>\n                        (\\<forall>w.\n                            A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                   (\\<not> evalB b u \\<longrightarrow> A r u))\n            (s, w)\\<rbrakk>\n       \\<Longrightarrow> evalB b t\n 2. \\<And>z.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t);\n        \\<forall>w.\n           A z w \\<longrightarrow>\n           FIX (\\<lambda>\\<Psi> (r, u).\n                   (evalB b u \\<longrightarrow>\n                    (\\<exists>z.\n                        \\<Phi> (z, u) \\<and>\n                        (\\<forall>w.\n                            A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                   (\\<not> evalB b u \\<longrightarrow> A r u))\n            (s, w)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> (?r19 z, t)\n 3. \\<And>z.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t);\n        \\<forall>w.\n           A z w \\<longrightarrow>\n           FIX (\\<lambda>\\<Psi> (r, u).\n                   (evalB b u \\<longrightarrow>\n                    (\\<exists>z.\n                        \\<Phi> (z, u) \\<and>\n                        (\\<forall>w.\n                            A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                   (\\<not> evalB b u \\<longrightarrow> A r u))\n            (s, w)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>w.\n                            A (?r19 z) w \\<longrightarrow>\n                            (b, A, \\<Phi>, s, w) \\<in> var", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t);\n        \\<forall>w.\n           A z w \\<longrightarrow>\n           FIX (\\<lambda>\\<Psi> (r, u).\n                   (evalB b u \\<longrightarrow>\n                    (\\<exists>z.\n                        \\<Phi> (z, u) \\<and>\n                        (\\<forall>w.\n                            A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                   (\\<not> evalB b u \\<longrightarrow> A r u))\n            (s, w)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> (?r19 z, t)\n 2. \\<And>z.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t);\n        \\<forall>w.\n           A z w \\<longrightarrow>\n           FIX (\\<lambda>\\<Psi> (r, u).\n                   (evalB b u \\<longrightarrow>\n                    (\\<exists>z.\n                        \\<Phi> (z, u) \\<and>\n                        (\\<forall>w.\n                            A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                   (\\<not> evalB b u \\<longrightarrow> A r u))\n            (s, w)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>w.\n                            A (?r19 z) w \\<longrightarrow>\n                            (b, A, \\<Phi>, s, w) \\<in> var", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t);\n        \\<forall>w.\n           A z w \\<longrightarrow>\n           FIX (\\<lambda>\\<Psi> (r, u).\n                   (evalB b u \\<longrightarrow>\n                    (\\<exists>z.\n                        \\<Phi> (z, u) \\<and>\n                        (\\<forall>w.\n                            A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                   (\\<not> evalB b u \\<longrightarrow> A r u))\n            (s, w)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>w.\n                            A z w \\<longrightarrow>\n                            (b, A, \\<Phi>, s, w) \\<in> var", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t);\n        \\<forall>w.\n           A z w \\<longrightarrow>\n           FIX (\\<lambda>\\<Psi> (r, u).\n                   (evalB b u \\<longrightarrow>\n                    (\\<exists>z.\n                        \\<Phi> (z, u) \\<and>\n                        (\\<forall>w.\n                            A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                   (\\<not> evalB b u \\<longrightarrow> A r u))\n            (s, w);\n        A z w\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, s, w) \\<in> var", "apply (erule_tac x=w in allE, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        FIX (\\<lambda>\\<Psi> (r, u).\n                (evalB b u \\<longrightarrow>\n                 (\\<exists>z.\n                     \\<Phi> (z, u) \\<and>\n                     (\\<forall>w.\n                         A z w \\<longrightarrow> \\<Psi> (r, w)))) \\<and>\n                (\\<not> evalB b u \\<longrightarrow> A r u))\n         (s, w)\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, s, w) \\<in> var", "apply (unfold FIX_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        case (s, w) of\n        (s, t) \\<Rightarrow>\n          \\<forall>\\<Phi>'.\n             (\\<forall>ss tt.\n                 (case (ss, tt) of\n                  (r, u) \\<Rightarrow>\n                    (evalB b u \\<longrightarrow>\n                     (\\<exists>z.\n                         \\<Phi> (z, u) \\<and>\n                         (\\<forall>w.\n                             A z w \\<longrightarrow>\n                             \\<Phi>' (r, w)))) \\<and>\n                    (\\<not> evalB b u \\<longrightarrow>\n                     A r u)) \\<longrightarrow>\n                 \\<Phi>' (ss, tt)) \\<longrightarrow>\n             \\<Phi>' (s, t)\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, s, w) \\<in> var", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        \\<forall>\\<Phi>'.\n           (\\<forall>ss tt.\n               (evalB b tt \\<longrightarrow>\n                (\\<exists>z.\n                    \\<Phi> (z, tt) \\<and>\n                    (\\<forall>w.\n                        A z w \\<longrightarrow> \\<Phi>' (ss, w)))) \\<and>\n               (\\<not> evalB b tt \\<longrightarrow>\n                A ss tt) \\<longrightarrow>\n               \\<Phi>' (ss, tt)) \\<longrightarrow>\n           \\<Phi>' (s, w)\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, s, w) \\<in> var", "apply (erule_tac x=\"\\<lambda> (x,y) . (b,A,\\<Phi>,x,y):var\" in allE, erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ss tt.\n                            (evalB b tt \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, tt) \\<and>\n                                 (\\<forall>w.\n                                     A z w \\<longrightarrow>\n                                     (case (ss, w) of\n(x, y) \\<Rightarrow> (b, A, \\<Phi>, x, y) \\<in> var)))) \\<and>\n                            (\\<not> evalB b tt \\<longrightarrow>\n                             A ss tt) \\<longrightarrow>\n                            (case (ss, tt) of\n                             (x, y) \\<Rightarrow>\n                               (b, A, \\<Phi>, x, y) \\<in> var)\n 2. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        case (s, w) of\n        (x, y) \\<Rightarrow> (b, A, \\<Phi>, x, y) \\<in> var\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, s, w) \\<in> var", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        case (s, w) of\n        (x, y) \\<Rightarrow> (b, A, \\<Phi>, x, y) \\<in> var\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, s, w) \\<in> var\n 2. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ss tt.\n                            (evalB b tt \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, tt) \\<and>\n                                 (\\<forall>w.\n                                     A z w \\<longrightarrow>\n                                     (case (ss, w) of\n(x, y) \\<Rightarrow> (b, A, \\<Phi>, x, y) \\<in> var)))) \\<and>\n                            (\\<not> evalB b tt \\<longrightarrow>\n                             A ss tt) \\<longrightarrow>\n                            (case (ss, tt) of\n                             (x, y) \\<Rightarrow>\n                               (b, A, \\<Phi>, x, y) \\<in> var)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ss tt.\n                            (evalB b tt \\<longrightarrow>\n                             (\\<exists>z.\n                                 \\<Phi> (z, tt) \\<and>\n                                 (\\<forall>w.\n                                     A z w \\<longrightarrow>\n                                     (case (ss, w) of\n(x, y) \\<Rightarrow> (b, A, \\<Phi>, x, y) \\<in> var)))) \\<and>\n                            (\\<not> evalB b tt \\<longrightarrow>\n                             A ss tt) \\<longrightarrow>\n                            (case (ss, tt) of\n                             (x, y) \\<Rightarrow>\n                               (b, A, \\<Phi>, x, y) \\<in> var)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        evalB b tt \\<longrightarrow>\n        (\\<exists>z.\n            \\<Phi> (z, tt) \\<and>\n            (\\<forall>w.\n                A z w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var));\n        \\<not> evalB b tt \\<longrightarrow> A ss tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var", "apply (case_tac \"evalB b tt\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        evalB b tt \\<longrightarrow>\n        (\\<exists>z.\n            \\<Phi> (z, tt) \\<and>\n            (\\<forall>w.\n                A z w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var));\n        \\<not> evalB b tt \\<longrightarrow> A ss tt; evalB b tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var\n 2. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        evalB b tt \\<longrightarrow>\n        (\\<exists>z.\n            \\<Phi> (z, tt) \\<and>\n            (\\<forall>w.\n                A z w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var));\n        \\<not> evalB b tt \\<longrightarrow> A ss tt;\n        \\<not> evalB b tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        evalB b tt \\<longrightarrow>\n        (\\<exists>z.\n            \\<Phi> (z, tt) \\<and>\n            (\\<forall>w.\n                A z w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var));\n        \\<not> evalB b tt \\<longrightarrow> A ss tt;\n        \\<not> evalB b tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var\n 2. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        evalB b tt \\<longrightarrow>\n        (\\<exists>z.\n            \\<Phi> (z, tt) \\<and>\n            (\\<forall>w.\n                A z w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var));\n        \\<not> evalB b tt \\<longrightarrow> A ss tt; evalB b tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w; A ss tt;\n        \\<not> evalB b tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var\n 2. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        evalB b tt \\<longrightarrow>\n        (\\<exists>z.\n            \\<Phi> (z, tt) \\<and>\n            (\\<forall>w.\n                A z w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var));\n        \\<not> evalB b tt \\<longrightarrow> A ss tt; evalB b tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var", "apply (rule varFalse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w; A ss tt;\n        \\<not> evalB b tt\\<rbrakk>\n       \\<Longrightarrow> \\<not> evalB b tt\n 2. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w; A ss tt;\n        \\<not> evalB b tt\\<rbrakk>\n       \\<Longrightarrow> A ss tt\n 3. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        evalB b tt \\<longrightarrow>\n        (\\<exists>z.\n            \\<Phi> (z, tt) \\<and>\n            (\\<forall>w.\n                A z w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var));\n        \\<not> evalB b tt \\<longrightarrow> A ss tt; evalB b tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w ss tt.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w;\n        evalB b tt \\<longrightarrow>\n        (\\<exists>z.\n            \\<Phi> (z, tt) \\<and>\n            (\\<forall>w.\n                A z w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var));\n        \\<not> evalB b tt \\<longrightarrow> A ss tt; evalB b tt\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z w ss tt za.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w; evalB b tt;\n        \\<Phi> (za, tt);\n        \\<forall>w.\n           A za w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Phi>, ss, tt) \\<in> var", "apply (rule varTrue)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z w ss tt za.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w; evalB b tt;\n        \\<Phi> (za, tt);\n        \\<forall>w.\n           A za w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var\\<rbrakk>\n       \\<Longrightarrow> evalB b tt\n 2. \\<And>z w ss tt za.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w; evalB b tt;\n        \\<Phi> (za, tt);\n        \\<forall>w.\n           A za w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> (?r42 z w ss tt za, tt)\n 3. \\<And>z w ss tt za.\n       \\<lbrakk>evalB b t; \\<Phi> (z, t); A z w; evalB b tt;\n        \\<Phi> (za, tt);\n        \\<forall>w.\n           A za w \\<longrightarrow> (b, A, \\<Phi>, ss, w) \\<in> var\\<rbrakk>\n       \\<Longrightarrow> \\<forall>wa.\n                            A (?r42 z w ss tt za) wa \\<longrightarrow>\n                            (b, A, \\<Phi>, ss, wa) \\<in> var", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>The inductive formulation and the fixed point formulation are\nequivalent.\\<close>"], ["", "(*<*)"], ["", "lemma varFIXvar: \"(PhiWhileP A b \\<Phi> (s,t)) = ((b,A,\\<Phi>,s,t):var)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PhiWhileP A b \\<Phi> (s, t) = ((b, A, \\<Phi>, s, t) \\<in> var)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. PhiWhileP A b \\<Phi> (s, t) \\<Longrightarrow>\n    (b, A, \\<Phi>, s, t) \\<in> var\n 2. (b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow>\n    PhiWhileP A b \\<Phi> (s, t)", "apply (erule FIXvar)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow>\n    PhiWhileP A b \\<Phi> (s, t)", "apply (erule varFIX)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n(*<*)"], ["", "lemma FIXvarFIX': \"(PhiWhileP A b \\<Phi>) = (\\<lambda> (s,t) . (b,A,\\<Phi>,s,t):var)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PhiWhileP A b \\<Phi> = (\\<lambda>(s, t). (b, A, \\<Phi>, s, t) \\<in> var)", "apply (rule ext, rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       PhiWhileP A b \\<Phi> x \\<Longrightarrow>\n       case x of (s, t) \\<Rightarrow> (b, A, \\<Phi>, s, t) \\<in> var\n 2. \\<And>x.\n       case x of\n       (s, t) \\<Rightarrow> (b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow>\n       PhiWhileP A b \\<Phi> x", "apply (case_tac x, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa ba.\n       PhiWhileP A b \\<Phi> (aa, ba) \\<Longrightarrow>\n       (b, A, \\<Phi>, aa, ba) \\<in> var\n 2. \\<And>x.\n       case x of\n       (s, t) \\<Rightarrow> (b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow>\n       PhiWhileP A b \\<Phi> x", "apply (erule FIXvar)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       case x of\n       (s, t) \\<Rightarrow> (b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow>\n       PhiWhileP A b \\<Phi> x", "apply (case_tac x, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa ba.\n       (b, A, \\<Phi>, aa, ba) \\<in> var \\<Longrightarrow>\n       PhiWhileP A b \\<Phi> (aa, ba)", "apply (simp add: varFIXvar)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma FIXvarFIX: \n\"PhiWhileP A b = (\\<lambda> \\<Phi> . (\\<lambda> (s,t) . (b,A,\\<Phi>,s,t):var))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PhiWhileP A b = (\\<lambda>\\<Phi> (s, t). (b, A, \\<Phi>, s, t) \\<in> var)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. PhiWhileP A b = (\\<lambda>\\<Phi> (s, t). (b, A, \\<Phi>, s, t) \\<in> var)", "by (rule, rule FIXvarFIX')"], ["", "(*>*)"], ["", "text\\<open>Thus, the above while rule may also be written using the\ninductive formulation.\\<close>"], ["", "lemma WHILE_PARALLEL_IND:\n \"\\<lbrakk> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \n    \\<forall> s ss . EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss; LEQ p q\\<rbrakk> \\<Longrightarrow>\n   X \\<rhd> While b c : (Sec (Q p G) (EQ G q) (EQ G q)\n                    (\\<lambda> (s,t) . (b,EQ G q,\\<Phi>,s,t):var))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t).\n   (b, EQ G q, \\<Phi>, s, t) \\<in> var)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t).\n   (b, EQ G q, \\<Phi>, s, t) \\<in> var)", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b c : ?A\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         ?A s t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t).\n                              (b, EQ G q, \\<Phi>, s, t) \\<in> var)\n                          s t", "apply (rule WHILE_PARALLEL)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : Sec (Q ?p3 ?G3) (EQ ?G3 ?q3) (EQ ?G3 ?q3)\n                                    ?\\<Phi>3\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s ss.\n                         EQ ?G3 ?p3 s ss \\<longrightarrow>\n                         evalB b s = evalB b ss\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ ?p3 ?q3\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         Sec (Q ?p3 ?G3) (EQ ?G3 ?q3) (EQ ?G3 ?q3)\n                          (PhiWhileP (EQ ?G3 ?q3) b ?\\<Phi>3) s\n                          t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t).\n                              (b, EQ G q, \\<Phi>, s, t) \\<in> var)\n                          s t", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (PhiWhileP (EQ G q) b \\<Phi>) s\n                          t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t).\n                              (b, EQ G q, \\<Phi>, s, t) \\<in> var)\n                          s t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) (PhiWhileP (EQ G q) b \\<Phi>) s\n         t\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t).\n                              (b, EQ G q, \\<Phi>, s, t) \\<in> var)\n                          s t", "apply (simp add: FIXvarFIX)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Again, we may replace the side condition regarding the branch\ncondition by a typing hypothesis.\\<close>"], ["", "lemma WHILE_PARALLEL_IND_tp:\n \"\\<lbrakk> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n    (G, b, p) \\<in> HS_B; LEQ p q \\<rbrakk> \\<Longrightarrow> \n X \\<rhd> (While b c) : \n  (Sec (Q p G) (EQ G q) (EQ G q) (\\<lambda> (s,t) . (b,EQ G q,\\<Phi>,s,t):var))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     (G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t).\n   (b, EQ G q, \\<Phi>, s, t) \\<in> var)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     (G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t).\n   (b, EQ G q, \\<Phi>, s, t) \\<in> var)", "apply (erule WHILE_PARALLEL_IND)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s ss.\n                         EQ G p s ss \\<longrightarrow>\n                         evalB b s = evalB b ss\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ss.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> evalB b s = evalB b ss\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply (erule HS_B_eval)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s ss.\n       \\<lbrakk>LEQ p q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> EQ G (?pp8 s ss) s ss\n 2. \\<And>s ss.\n       \\<lbrakk>LEQ p q; EQ G p s ss\\<rbrakk>\n       \\<Longrightarrow> LEQ p (?pp8 s ss)\n 3. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s ss.\n       \\<lbrakk>LEQ p q; EQ G p s ss\\<rbrakk> \\<Longrightarrow> LEQ p p\n 2. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply (rule LAT6)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(G, b, p) \\<in> HS_B; LEQ p q\\<rbrakk>\n    \\<Longrightarrow> LEQ p q", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n(*<*)"], ["", "lemma varMonotoneAux[rule_format]:\n \"(b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow> \n  (\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)) \\<longrightarrow>\n  (b, A, \\<Psi>, s, t) \\<in> var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, A, \\<Phi>, s, t) \\<in> var \\<Longrightarrow>\n    (\\<forall>s t.\n        \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)) \\<longrightarrow>\n    (b, A, \\<Psi>, s, t) \\<in> var", "apply (erule var.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             \\<Phi> (s, t) \\<longrightarrow>\n                             \\<Psi> (s, t)) \\<longrightarrow>\n                         (b, A, \\<Psi>, s, t) \\<in> var\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           ((\\<forall>s t.\n                \\<Phi> (s, t) \\<longrightarrow>\n                \\<Psi> (s, t)) \\<longrightarrow>\n            (b, A, \\<Psi>, s, w) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             \\<Phi> (s, t) \\<longrightarrow>\n                             \\<Psi> (s, t)) \\<longrightarrow>\n                         (b, A, \\<Psi>, s, t) \\<in> var", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t A s \\<Phi>.\n       \\<lbrakk>\\<not> evalB b t; A s t;\n        \\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Psi>, s, t) \\<in> var\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           ((\\<forall>s t.\n                \\<Phi> (s, t) \\<longrightarrow>\n                \\<Psi> (s, t)) \\<longrightarrow>\n            (b, A, \\<Psi>, s, w) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             \\<Phi> (s, t) \\<longrightarrow>\n                             \\<Psi> (s, t)) \\<longrightarrow>\n                         (b, A, \\<Psi>, s, t) \\<in> var", "apply (erule varFalse, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           ((\\<forall>s t.\n                \\<Phi> (s, t) \\<longrightarrow>\n                \\<Psi> (s, t)) \\<longrightarrow>\n            (b, A, \\<Psi>, s, w) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             \\<Phi> (s, t) \\<longrightarrow>\n                             \\<Psi> (s, t)) \\<longrightarrow>\n                         (b, A, \\<Psi>, s, t) \\<in> var", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>evalB b t; \\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           (b, A, \\<Psi>, s, w) \\<in> var;\n        \\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Psi>, s, t) \\<in> var", "apply (erule varTrue)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>\\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           (b, A, \\<Psi>, s, w) \\<in> var;\n        \\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> (?r19 b t \\<Phi> r A s, t)\n 2. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>\\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           (b, A, \\<Psi>, s, w) \\<in> var;\n        \\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>w.\n                            A (?r19 b t \\<Phi> r A s) w \\<longrightarrow>\n                            (b, A, \\<Psi>, s, w) \\<in> var", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b t \\<Phi> r A s.\n       \\<lbrakk>\\<Phi> (r, t);\n        \\<forall>w.\n           A r w \\<longrightarrow>\n           (b, A, \\<Phi>, s, w) \\<in> var \\<and>\n           (b, A, \\<Psi>, s, w) \\<in> var;\n        \\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>w.\n                            A r w \\<longrightarrow>\n                            (b, A, \\<Psi>, s, w) \\<in> var", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Of course, the inductive formulation is also monotone:\\<close>"], ["", "lemma var_MonotoneInPhi:\n  \"Monotone (\\<lambda> \\<Phi> . (\\<lambda> (s,t) .(b,A, \\<Phi>,s,t):var))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (\\<lambda>\\<Phi> (s, t). (b, A, \\<Phi>, s, t) \\<in> var)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (\\<lambda>\\<Phi> (s, t). (b, A, \\<Phi>, s, t) \\<in> var)", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<Phi> \\<Psi>.\n       (\\<forall>s t.\n           \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)) \\<longrightarrow>\n       (\\<forall>s t.\n           (b, A, \\<Phi>, s, t) \\<in> var \\<longrightarrow>\n           (b, A, \\<Psi>, s, t) \\<in> var)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> s t.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        (b, A, \\<Phi>, s, t) \\<in> var\\<rbrakk>\n       \\<Longrightarrow> (b, A, \\<Psi>, s, t) \\<in> var", "apply (rule varMonotoneAux)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Phi> \\<Psi> s t.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        (b, A, \\<Phi>, s, t) \\<in> var\\<rbrakk>\n       \\<Longrightarrow> (b, A, ?\\<Phi>11 \\<Phi> \\<Psi> s t, s, t) \\<in> var\n 2. \\<And>\\<Phi> \\<Psi> s t sa ta.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        (b, A, \\<Phi>, s, t) \\<in> var;\n        ?\\<Phi>11 \\<Phi> \\<Psi> s t (sa, ta)\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> (sa, ta)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi> \\<Psi> s t sa ta.\n       \\<lbrakk>\\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t);\n        (b, A, \\<Phi>, s, t) \\<in> var; \\<Phi> (sa, ta)\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> (sa, ta)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n(*<*)"], ["", "lemma varMonotone_byFIX: \"Monotone (\\<lambda> \\<Phi> . (\\<lambda> (s,t) .(b,A, \\<Phi>,s,t):var))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (\\<lambda>\\<Phi> (s, t). (b, A, \\<Phi>, s, t) \\<in> var)", "apply (subgoal_tac \"Monotone (\\<lambda> \\<Phi> . PhiWhileP A b \\<Phi>)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. Monotone (PhiWhileP A b) \\<Longrightarrow>\n    Monotone (\\<lambda>\\<Phi> (s, t). (b, A, \\<Phi>, s, t) \\<in> var)\n 2. Monotone (PhiWhileP A b)", "apply (simp add: FIXvarFIX)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (PhiWhileP A b)", "apply (rule PhiWhilePMonotone)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>In order to derive a diagonal while rule, we directly define an\ninductive relation that calculates the transitive closure of relation\n$A$, such that all but the last state evaluate $b$ to\n$\\mathit{True}$.\\<close>"], ["", "inductive_set varD::\"(BExpr \\<times> VDMAssn \\<times> State \\<times> State) set\"\nwhere\nvarDFalse: \"\\<lbrakk>\\<not> evalB b s; A s t\\<rbrakk> \\<Longrightarrow> (b,A,s,t):varD\"\n| varDTrue: \"\\<lbrakk>evalB b s; A s w; (b,A,w,t): varD \\<rbrakk> \\<Longrightarrow> (b,A,s,t):varD\""], ["", "text\\<open>Here is the obvious definition of transitivity for assertions.\\<close>"], ["", "definition transitive::\"VDMAssn \\<Rightarrow> bool\"\nwhere \"transitive P = (\\<forall> x y z . P x y \\<longrightarrow> P y z \\<longrightarrow> P x z)\""], ["", "text\\<open>The inductive relation satisfies the following property.\\<close>"], ["", "lemma varD_transitive[rule_format]: \n \"(b,A,s,t):varD \\<Longrightarrow> transitive A \\<longrightarrow> A s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, A, s, t) \\<in> varD \\<Longrightarrow>\n    transitive A \\<longrightarrow> A s t", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, A, s, t) \\<in> varD \\<Longrightarrow>\n    transitive A \\<longrightarrow> A s t", "apply (erule varD.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s A t.\n       \\<lbrakk>\\<not> evalB b s; A s t\\<rbrakk>\n       \\<Longrightarrow> transitive A \\<longrightarrow> A s t\n 2. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD;\n        transitive A \\<longrightarrow> A w t\\<rbrakk>\n       \\<Longrightarrow> transitive A \\<longrightarrow> A s t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD;\n        transitive A \\<longrightarrow> A w t\\<rbrakk>\n       \\<Longrightarrow> transitive A \\<longrightarrow> A s t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD; transitive A;\n        A w t\\<rbrakk>\n       \\<Longrightarrow> A s t", "apply (unfold transitive_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD;\n        \\<forall>x y z.\n           A x y \\<longrightarrow> A y z \\<longrightarrow> A x z;\n        A w t\\<rbrakk>\n       \\<Longrightarrow> A s t", "apply (erule_tac x=s in allE, erule_tac x=w in allE, erule_tac x=t in allE, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>On the other hand, the assertion $\\mathit{Q}$ defined above is transitive,\\<close>"], ["", "lemma Q_transitive:\"transitive (Q q G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transitive (Q q G)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. transitive (Q q G)", "by (simp add: Q_def transitive_def)"], ["", "(*>*)"], ["", "text\\<open>and is hence respected by the inductive closure:\\<close>"], ["", "lemma varDQ:\"(b,Q q G,s,t):varD \\<Longrightarrow> Q q G s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, Q q G, s, t) \\<in> varD \\<Longrightarrow> Q q G s t", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, Q q G, s, t) \\<in> varD \\<Longrightarrow> Q q G s t", "by (erule varD_transitive,rule Q_transitive)"], ["", "(*>*)"], ["", "text\\<open>The diagonal while rule has a conclusion that is independent of\n$\\phi$.\\<close>"], ["", "lemma WHILE_DIAGONAL:\n \"\\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b c : Sec (Q p G) (EQ G q) (EQ G q)\n                               (\\<lambda> (s,t). EQ G q s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t). EQ G q s t)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t). EQ G q s t)", "apply (subgoal_tac \"\\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t). EQ G q s t)\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t). EQ G q s t)", "apply (case_tac \"\\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\", assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<not> (\\<forall>x.\n                LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t). EQ G q s t)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q; LEQ p (G x); LEQ (G x) q; LEQ p (G xa);\n        LEQ (G xa) q\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t). EQ G q s t)", "apply (subgoal_tac \"LEQ p q\", fast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q; LEQ p (G x); LEQ (G x) q; LEQ p (G xa);\n        LEQ (G xa) q\\<rbrakk>\n       \\<Longrightarrow> LEQ p q\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t). EQ G q s t)", "apply (erule LAT2, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b\n                                c : Sec (Q p G) (EQ G q) (EQ G q)\n                                     (\\<lambda>(s, t). EQ G q s t)", "apply (rule VDMConseq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b c : ?A15\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         ?A15 s t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply (insert VDMWhile)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> While b c : ?A15\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         ?A15 s t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply (erule VDMWhile [of X c \"Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\" b \"(\\<lambda> s t . (b,Q p G,s,t):varD)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s.\n                         \\<not> evalB b s \\<longrightarrow>\n                         (b, Q p G, s, s) \\<in> varD\n 2. \\<lbrakk>\\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         (b, Q p G, r, t) \\<in> varD \\<longrightarrow>\n                         (b, Q p G, s, t) \\<in> varD\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b s\\<rbrakk>\n       \\<Longrightarrow> (b, Q p G, s, s) \\<in> varD\n 2. \\<lbrakk>\\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         (b, Q p G, r, t) \\<in> varD \\<longrightarrow>\n                         (b, Q p G, s, t) \\<in> varD\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply (erule varDFalse)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n       \\<Longrightarrow> Q p G s s\n 2. \\<lbrakk>\\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         (b, Q p G, r, t) \\<in> varD \\<longrightarrow>\n                         (b, Q p G, s, t) \\<in> varD\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply (simp add: Q_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s r t.\n                         evalB b s \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s\n                          r \\<longrightarrow>\n                         (b, Q p G, r, t) \\<in> varD \\<longrightarrow>\n                         (b, Q p G, s, t) \\<in> varD\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> s r;\n        (b, Q p G, r, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (b, Q p G, s, t) \\<in> varD\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply (simp add: Sec_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s;\n        Q p G s r \\<and>\n        (\\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra)) \\<and>\n        (\\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r);\n        (b, Q p G, r, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (b, Q p G, s, t) \\<in> varD\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> (b, Q p G, s, t) \\<in> varD\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply (rule varDTrue)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> evalB b s\n 2. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> Q p G s (?w42 s r t)\n 3. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> (b, Q p G, ?w42 s r t, t) \\<in> varD\n 4. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> Q p G s (?w42 s r t)\n 2. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> (b, Q p G, ?w42 s r t, t) \\<in> varD\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> (b, Q p G, ?w42 s r t, t) \\<in> varD\n 2. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> Q p G s (?w42 s r t)\n 3. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. EQ G q s ra \\<longrightarrow> \\<Phi> (r, ra);\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r\\<rbrakk>\n       \\<Longrightarrow> Q p G s r\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply (erule_tac x=s in allE, erule impE, simp add: EQ_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r t.\n       \\<lbrakk>\\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        evalB b s; (b, Q p G, r, t) \\<in> varD; Q p G s r;\n        \\<forall>ra. \\<Phi> (ra, s) \\<longrightarrow> EQ G q ra r;\n        \\<Phi> (r, s)\\<rbrakk>\n       \\<Longrightarrow> Q p G s r\n 2. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n     \\<not> LEQ p q;\n     \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n     \\<And>G c B b A.\n        \\<lbrakk>G \\<rhd> c : B;\n         \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n         \\<forall>s r t.\n            evalB b s \\<longrightarrow>\n            B s r \\<longrightarrow> A r t \\<longrightarrow> A s t\\<rbrakk>\n        \\<Longrightarrow> G \\<rhd> While b\n                                    c : (\\<lambda>s t.\n      A s t \\<and> \\<not> evalB b t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         (b, Q p G, s, t) \\<in> varD \\<and>\n                         \\<not> evalB b t \\<longrightarrow>\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t). EQ G q s t) s t", "apply (simp add: Sec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> Q p G s t \\<and>\n                         (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ G q t r) \\<and>\n                         (\\<forall>r.\n                             EQ G q r s \\<longrightarrow> EQ G q r t)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> Q p G s t\n 2. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ G q t r) \\<and>\n                         (\\<forall>r.\n                             EQ G q r s \\<longrightarrow> EQ G q r t)", "apply (erule varDQ)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             EQ G q s r \\<longrightarrow> EQ G q t r) \\<and>\n                         (\\<forall>r.\n                             EQ G q r s \\<longrightarrow> EQ G q r t)", "apply (rule, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t; EQ G q s r\\<rbrakk>\n       \\<Longrightarrow> EQ G q t r\n 2. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply (drule varDQ)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t; EQ G q s r; Q p G s t\\<rbrakk>\n       \\<Longrightarrow> EQ G q t r\n 2. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply (simp add: Q_def EQ_def, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 2. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply (case_tac \"LEQ p (G x)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q; LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 2. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q; \\<not> LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 3. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q; \\<not> LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 2. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q; LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 3. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q; LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 2. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply (rotate_tac -1, drule LAT2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (?p3.72 s t r x)\n 2. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q; LEQ p (?p3.72 s t r x)\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 3. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        LEQ (G x) q; LEQ p q\\<rbrakk>\n       \\<Longrightarrow> t x = r x\n 2. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        (b, Q p G, s, t) \\<in> varD; \\<not> evalB b t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply (drule varDQ)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t; Q p G s t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r. EQ G q r s \\<longrightarrow> EQ G q r t", "apply (simp add: Q_def EQ_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x;\n        LEQ (G x) q\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply (case_tac \"LEQ p (G x)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x; LEQ (G x) q;\n        LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x\n 2. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x; LEQ (G x) q;\n        \\<not> LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x; LEQ (G x) q;\n        \\<not> LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x\n 2. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x; LEQ (G x) q;\n        LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x; LEQ (G x) q;\n        LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply (rotate_tac -1, drule LAT2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x;\n        LEQ (G x) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) (?p3.85 s t r x)\n 2. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x; LEQ (G x) q;\n        LEQ p (?p3.85 s t r x)\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r x.\n       \\<lbrakk>X \\<rhd> c : Sec (\\<lambda>s t.\n                                     \\<forall>x.\n  \\<not> LEQ p (G x) \\<longrightarrow> t x = s x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              (\\<lambda>s t.\n                                  \\<forall>x.\n                                     LEQ (G x) q \\<longrightarrow>\n                                     s x = t x)\n                              \\<Phi>;\n        \\<not> LEQ p q;\n        \\<forall>x. LEQ p (G x) \\<longrightarrow> \\<not> LEQ (G x) q;\n        \\<And>G c B b A.\n           \\<lbrakk>G \\<rhd> c : B;\n            \\<forall>s. \\<not> evalB b s \\<longrightarrow> A s s;\n            \\<forall>s.\n               evalB b s \\<longrightarrow>\n               (\\<forall>r.\n                   B s r \\<longrightarrow>\n                   (\\<forall>t. A r t \\<longrightarrow> A s t))\\<rbrakk>\n           \\<Longrightarrow> G \\<rhd> While b\n c : (\\<lambda>s t. A s t \\<and> \\<not> evalB b t);\n        \\<not> evalB b t;\n        \\<forall>x. \\<not> LEQ p (G x) \\<longrightarrow> t x = s x;\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> r x = s x; LEQ (G x) q;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> s x = t x", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>$\\mathit{varD}$ is monotone in the assertion position.\\<close>"], ["", "lemma varDMonotoneInAssertion[rule_format]:\n  \"(b, A, s, t) \\<in> varD \\<Longrightarrow> \n   (\\<forall>s t. A s t \\<longrightarrow> B s t) \\<longrightarrow> (b, B, s, t) \\<in> varD\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, A, s, t) \\<in> varD \\<Longrightarrow>\n    (\\<forall>s t. A s t \\<longrightarrow> B s t) \\<longrightarrow>\n    (b, B, s, t) \\<in> varD", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b, A, s, t) \\<in> varD \\<Longrightarrow>\n    (\\<forall>s t. A s t \\<longrightarrow> B s t) \\<longrightarrow>\n    (b, B, s, t) \\<in> varD", "apply (erule varD.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s A t.\n       \\<lbrakk>\\<not> evalB b s; A s t\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             A s t \\<longrightarrow>\n                             B s t) \\<longrightarrow>\n                         (b, B, s, t) \\<in> varD\n 2. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD;\n        (\\<forall>s t. A s t \\<longrightarrow> B s t) \\<longrightarrow>\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             A s t \\<longrightarrow>\n                             B s t) \\<longrightarrow>\n                         (b, B, s, t) \\<in> varD", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s A t.\n       \\<lbrakk>\\<not> evalB b s; A s t;\n        \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> (b, B, s, t) \\<in> varD\n 2. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD;\n        (\\<forall>s t. A s t \\<longrightarrow> B s t) \\<longrightarrow>\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             A s t \\<longrightarrow>\n                             B s t) \\<longrightarrow>\n                         (b, B, s, t) \\<in> varD", "apply (erule varDFalse)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s A t.\n       \\<lbrakk>A s t; \\<forall>s t. A s t \\<longrightarrow> B s t\\<rbrakk>\n       \\<Longrightarrow> B s t\n 2. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD;\n        (\\<forall>s t. A s t \\<longrightarrow> B s t) \\<longrightarrow>\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             A s t \\<longrightarrow>\n                             B s t) \\<longrightarrow>\n                         (b, B, s, t) \\<in> varD", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD;\n        (\\<forall>s t. A s t \\<longrightarrow> B s t) \\<longrightarrow>\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>s t.\n                             A s t \\<longrightarrow>\n                             B s t) \\<longrightarrow>\n                         (b, B, s, t) \\<in> varD", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s A w t.\n       \\<lbrakk>evalB b s; A s w; (b, A, w, t) \\<in> varD;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (b, B, s, t) \\<in> varD", "apply (erule varDTrue)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s A w t.\n       \\<lbrakk>A s w; (b, A, w, t) \\<in> varD;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> B s (?w20 b s A w t)\n 2. \\<And>b s A w t.\n       \\<lbrakk>A s w; (b, A, w, t) \\<in> varD;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (b, B, ?w20 b s A w t, t) \\<in> varD", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b s A w t.\n       \\<lbrakk>A s w; (b, A, w, t) \\<in> varD;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> (b, B, ?w20 b s A w t, t) \\<in> varD\n 2. \\<And>b s A w t.\n       \\<lbrakk>A s w; (b, A, w, t) \\<in> varD;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> B s (?w20 b s A w t)", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b s A w t.\n       \\<lbrakk>A s w; (b, A, w, t) \\<in> varD;\n        \\<forall>s t. A s t \\<longrightarrow> B s t;\n        (b, B, w, t) \\<in> varD\\<rbrakk>\n       \\<Longrightarrow> B s w", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n\n(*<*)"], ["", "text\\<open>As $\\mathit{varD}$ does not depend on $\\Phi$, the monotonicity\nproperty in this position is trivially fulfilled.\\<close>"], ["", "lemma varDMonotoneInPhi[rule_format]:\n  \"\\<lbrakk>(b, A, s, t) \\<in> varD; \\<forall>s t. \\<Phi>(s, t) \\<longrightarrow> \\<Psi>(s, t)\\<rbrakk> \n  \\<Longrightarrow> (b, A, s, t) \\<in> varD\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(b, A, s, t) \\<in> varD;\n     \\<forall>s t. \\<Phi> (s, t) \\<longrightarrow> \\<Psi> (s, t)\\<rbrakk>\n    \\<Longrightarrow> (b, A, s, t) \\<in> varD", "by simp"], ["", "(*>*)"], ["", "text\\<open>Finally, the subsumption rule.\\<close>"], ["", "lemma SUB:\n  \"\\<lbrakk> LEQ p pp; \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n     X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n   \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n     \\<forall>x. LEQ (HH x) (H x);\n     X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n     \\<forall>x. LEQ (HH x) (H x);\n     X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>", "apply (erule VDMConseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n     \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s t.\n                         Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> s\n                          t \\<longrightarrow>\n                         Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> s t", "apply (simp add: Sec_def EQ_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> Q p H s t \\<and>\n                         (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             \\<Phi> (t, r)) \\<and>\n                         (\\<forall>r.\n                             \\<Phi> (r, s) \\<longrightarrow>\n                             (\\<forall>x.\n                                 LEQ (H x) q \\<longrightarrow> r x = t x))", "apply (rule, simp add: Q_def, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t x.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        \\<forall>x. \\<not> LEQ pp (HH x) \\<longrightarrow> t x = s x;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> t x = s x\n 2. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             \\<Phi> (t, r)) \\<and>\n                         (\\<forall>r.\n                             \\<Phi> (r, s) \\<longrightarrow>\n                             (\\<forall>x.\n                                 LEQ (H x) q \\<longrightarrow> r x = t x))", "apply (erule_tac x=x in allE, erule mp, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t x.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        \\<not> LEQ p (H x); LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             \\<Phi> (t, r)) \\<and>\n                         (\\<forall>r.\n                             \\<Phi> (r, s) \\<longrightarrow>\n                             (\\<forall>x.\n                                 LEQ (H x) q \\<longrightarrow> r x = t x))", "apply (subgoal_tac \"LEQ p (H x)\", fast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t x.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        \\<not> LEQ p (H x); LEQ pp (HH x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (H x)\n 2. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             \\<Phi> (t, r)) \\<and>\n                         (\\<forall>r.\n                             \\<Phi> (r, s) \\<longrightarrow>\n                             (\\<forall>x.\n                                 LEQ (H x) q \\<longrightarrow> r x = t x))", "apply (rotate_tac 2, erule_tac x=x in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t x.\n       \\<lbrakk>\\<forall>r.\n                   (\\<forall>x.\n                       LEQ (GG x) q \\<longrightarrow>\n                       s x = r x) \\<longrightarrow>\n                   \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        \\<not> LEQ p (H x); LEQ pp (HH x); LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (H x)\n 2. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             \\<Phi> (t, r)) \\<and>\n                         (\\<forall>r.\n                             \\<Phi> (r, s) \\<longrightarrow>\n                             (\\<forall>x.\n                                 LEQ (H x) q \\<longrightarrow> r x = t x))", "apply (erule LAT2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t x.\n       \\<lbrakk>\\<forall>r.\n                   (\\<forall>x.\n                       LEQ (GG x) q \\<longrightarrow>\n                       s x = r x) \\<longrightarrow>\n                   \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        \\<not> LEQ p (H x); LEQ pp (HH x); \\<forall>x. LEQ (G x) (GG x);\n        LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ pp (H x)\n 2. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             \\<Phi> (t, r)) \\<and>\n                         (\\<forall>r.\n                             \\<Phi> (r, s) \\<longrightarrow>\n                             (\\<forall>x.\n                                 LEQ (H x) q \\<longrightarrow> r x = t x))", "apply (erule LAT2, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>r.\n                             (\\<forall>x.\n                                 LEQ (G x) q \\<longrightarrow>\n                                 s x = r x) \\<longrightarrow>\n                             \\<Phi> (t, r)) \\<and>\n                         (\\<forall>r.\n                             \\<Phi> (r, s) \\<longrightarrow>\n                             (\\<forall>x.\n                                 LEQ (H x) q \\<longrightarrow> r x = t x))", "apply (rule, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> (t, r)\n 2. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            \\<Phi> (r, s) \\<longrightarrow>\n                            (\\<forall>x.\n                                LEQ (H x) q \\<longrightarrow> r x = t x)", "apply (erule_tac x=r in allE, erule mp, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        \\<forall>x. LEQ (G x) q \\<longrightarrow> s x = r x;\n        LEQ (GG x) q\\<rbrakk>\n       \\<Longrightarrow> s x = r x\n 2. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            \\<Phi> (r, s) \\<longrightarrow>\n                            (\\<forall>x.\n                                LEQ (H x) q \\<longrightarrow> r x = t x)", "apply (erule_tac x=x in allE, erule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s t r x.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        LEQ (GG x) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (G x) q\n 2. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            \\<Phi> (r, s) \\<longrightarrow>\n                            (\\<forall>x.\n                                LEQ (H x) q \\<longrightarrow> r x = t x)", "apply (erule_tac x=x in allE, erule LAT2,assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r.\n                            \\<Phi> (r, s) \\<longrightarrow>\n                            (\\<forall>x.\n                                LEQ (H x) q \\<longrightarrow> r x = t x)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r x.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<forall>r.\n           \\<Phi> (r, s) \\<longrightarrow>\n           (\\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x);\n        \\<Phi> (r, s); LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> r x = t x", "apply (erule_tac x=r in allE, erule impE, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r x.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<Phi> (r, s); LEQ (H x) q;\n        \\<forall>x. LEQ (HH x) q \\<longrightarrow> r x = t x\\<rbrakk>\n       \\<Longrightarrow> r x = t x", "apply (erule_tac x=x in allE, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t r x.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x); Q pp HH s t;\n        \\<forall>r.\n           (\\<forall>x.\n               LEQ (GG x) q \\<longrightarrow> s x = r x) \\<longrightarrow>\n           \\<Phi> (t, r);\n        \\<Phi> (r, s); LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (HH x) q", "apply (erule_tac x=x in allE, erule LAT2, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "subsection\\<open>Soundness results\\<close>"], ["", "(*<*)"], ["", "definition Theorem3derivProp::\"VDMAssn set \\<Rightarrow> L \\<Rightarrow> CONTEXT \\<Rightarrow> IMP \\<Rightarrow> CONTEXT \\<Rightarrow> L \\<Rightarrow> bool\"\nwhere \"Theorem3derivProp X p G c H q = (\\<exists> \\<Phi> . X \\<rhd> c : (Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>))\""], ["", "lemma Theorem3_derivAux[rule_format]: \n\"(p,G,c,H):HS \\<Longrightarrow> Theorem3derivProp X p G c H q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> Theorem3derivProp X p G c H q", "apply (erule HS.induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>p G. Theorem3derivProp X p G Skip G q\n 2. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       Theorem3derivProp X p G (Assign x e) (upd G x (LUB p t)) q\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; Theorem3derivProp X p G c K q;\n        (p, K, d, H) \\<in> HS; Theorem3derivProp X p K d H q\\<rbrakk>\n       \\<Longrightarrow> Theorem3derivProp X p G (Comp c d) H q\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        Theorem3derivProp X (LUB p t) G c H q; (LUB p t, G, d, H) \\<in> HS;\n        Theorem3derivProp X (LUB p t) G d H q\\<rbrakk>\n       \\<Longrightarrow> Theorem3derivProp X p G (Iff b c d) H q\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        Theorem3derivProp X p G c H q; (p, G, d, H) \\<in> HS;\n        Theorem3derivProp X p G d H q\\<rbrakk>\n       \\<Longrightarrow> Theorem3derivProp X p G (Iff b c d) H q\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        Theorem3derivProp X (LUB p t) G c H q; H = G\\<rbrakk>\n       \\<Longrightarrow> Theorem3derivProp X p G (While b c) H q\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; Theorem3derivProp X pp GG c HH q;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> Theorem3derivProp X p G c H q", "apply (simp_all add: Theorem3derivProp_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>p G.\n       \\<exists>\\<Phi>. X \\<rhd> Skip : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<exists>\\<Phi>.\n          X \\<rhd> Assign x\n                    e : Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                         (EQ (upd G x (LUB p t)) q) \\<Phi>\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "(*Skip*)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>p G.\n       \\<exists>\\<Phi>. X \\<rhd> Skip : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<exists>\\<Phi>.\n          X \\<rhd> Assign x\n                    e : Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                         (EQ (upd G x (LUB p t)) q) \\<Phi>\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, rule SKIP)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<exists>\\<Phi>.\n          X \\<rhd> Assign x\n                    e : Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                         (EQ (upd G x (LUB p t)) q) \\<Phi>\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "(*Assign*)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<exists>\\<Phi>.\n          X \\<rhd> Assign x\n                    e : Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                         (EQ (upd G x (LUB p t)) q) \\<Phi>\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, rule ASSIGN[simplified])"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       upd G x (LUB p t) = upd G x (LUB p (?t15 G e t p x))\n 2. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<forall>s ss.\n          EQ G (?t15 G e t p x) s ss \\<longrightarrow>\n          evalE e s = evalE e ss\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t p x.\n       (G, e, t) \\<in> HS_E \\<Longrightarrow>\n       \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (clarsimp, erule HS_E_eval)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G e t s ss.\n       EQ G t s ss \\<Longrightarrow> EQ G (?q24 G e t s ss) s ss\n 2. \\<And>G e t s ss. EQ G t s ss \\<Longrightarrow> LEQ t (?q24 G e t s ss)\n 3. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G e t s ss. EQ G t s ss \\<Longrightarrow> LEQ t t\n 2. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule LAT6)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "(*COMP*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H.\n       \\<lbrakk>(p, G, c, K) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (p, K, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply clarsimp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Comp c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, rule COMP)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>p G c K d H \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec\n (Q p (?K34 p G c K d H \\<Phi> \\<Phi>')) (EQ G q)\n (EQ (?K34 p G c K d H \\<Phi> \\<Phi>') q)\n (?\\<Phi>34 p G c K d H \\<Phi> \\<Phi>')\n 2. \\<And>p G c K d H \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H)\n (EQ (?K34 p G c K d H \\<Phi> \\<Phi>') q) (EQ H q)\n (?\\<Psi>34 p G c K d H \\<Phi> \\<Phi>')\n 3. \\<And>p G c K d H \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            LEQ (G x)\n                             (?K34 p G c K d H \\<Phi> \\<Phi>' x) \\<or>\n                            LEQ p (?K34 p G c K d H \\<Phi> \\<Phi>' x)\n 4. \\<And>p G c K d H \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            LEQ (?K34 p G c K d H \\<Phi> \\<Phi>' x)\n                             (H x) \\<or>\n                            LEQ p (H x)\n 5. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 7. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 8. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (assumption, assumption)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>p G c K d H \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x)\n 2. \\<And>p G c K d H \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule HS_Aux1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p G c K d H \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, K) \\<in> HS; (p, K, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule HS_Aux1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "(*IFF*)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        (LUB p t, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n                         \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (subgoal_tac \"(G, b, LUB p t) \\<in> HS_B\", erule thin_rl)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> (G, b, LUB p t) \\<in> HS_B\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "prefer 2"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, H) \\<in> HS;\n        (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> (G, b, LUB p t) \\<in> HS_B\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule HS_B_sup)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> LEQ t (LUB p t)\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (subgoal_tac \"LEQ t (LUB t p)\", simp add: LAT4)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> LEQ t (LUB t p)\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule LAT3)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (subgoal_tac \"\\<exists> psi. X \\<rhd> Iff b c d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\", clarsimp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        X \\<rhd> Iff b c\n                  d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule_tac x=psi in exI, erule VDMConseq, clarsimp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi s ta\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q) psi s ta\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (simp add: Sec_def, clarsimp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B; Q (LUB p t) H s ta;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta\\<rbrakk>\n       \\<Longrightarrow> Q p H s ta\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (simp add: Q_def, clarsimp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>x. \\<not> LEQ (LUB p t) (H x) \\<longrightarrow> ta x = s x;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> ta x = s x\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule_tac x=x in allE, erule mp, clarsimp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (subgoal_tac \"LEQ p (LUB p t)\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x); LEQ p (LUB p t)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (LUB p t)\n 3. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "prefer 2"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (LUB p t)\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x); LEQ p (LUB p t)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule LAT3)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x); LEQ p (LUB p t)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rotate_tac -1, drule LAT2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t)\n                          (?p3.80 G b t p c H d \\<Phi> \\<Phi>' psi s ta x)\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x);\n        LEQ p (?p3.80 G b t p c H d \\<Phi> \\<Phi>' psi s ta x)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>' psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (H x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ H q r ta;\n        \\<not> LEQ p (H x); LEQ (LUB p t) (H x); LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (case_tac \"\\<exists> x . LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<exists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 3. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, erule IF_PARALLEL_tp)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> (LUB p t, G, c, H) \\<in> HS\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> (LUB p t, G, d, H) \\<in> HS\n 3. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\n 4. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n (?\\<Phi>86 G b t p c H d \\<Phi> \\<Phi>')\n 5. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n (?\\<Psi>86 G b t p c H d \\<Phi> \\<Phi>')\n 6. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 7. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 8. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 9. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption+"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> Iff b c\nd : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) psi\n 2. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, rule IF_DIAGONAL)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            LEQ (G x) (H x) \\<or> LEQ (LUB p t) (H x)\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\n 3. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n (?\\<Phi>94 G b t p c H d \\<Phi> \\<Phi>')\n 4. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n (?\\<Psi>94 G b t p c H d \\<Phi> \\<Phi>')\n 5. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 7. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule HS_Aux1)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\n 2. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n (?\\<Phi>94 G b t p c H d \\<Phi> \\<Phi>')\n 3. \\<And>G b t p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(LUB p t, G, c, H) \\<in> HS; (LUB p t, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q) \\<Phi>';\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<nexists>x. LEQ (LUB p t) (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q (LUB p t) H) (EQ G q) (EQ H q)\n (?\\<Psi>94 G b t p c H d \\<Phi> \\<Phi>')\n 4. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "(*If2*)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b p c H d.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (p, G, d, H) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (case_tac \"\\<exists> x . LEQ p (H x) \\<and> LEQ (H x) q\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, erule IF_PARALLEL_tp)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, H) \\<in> HS; (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> (p, G, c, H) \\<in> HS\n 2. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, H) \\<in> HS; (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> (p, G, d, H) \\<in> HS\n 3. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, H) \\<in> HS; (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 4. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, H) \\<in> HS; (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Phi>107 G b p c H d \\<Phi> \\<Phi>')\n 5. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(p, G, c, H) \\<in> HS; (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Psi>107 G b p c H d \\<Phi> \\<Phi>')\n 6. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 7. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 8. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> Iff b c\nd : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, rule IF_DIAGONAL)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 3. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Phi>115 G b p c H d \\<Phi> \\<Phi>')\n 4. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Psi>115 G b p c H d \\<Phi> \\<Phi>')\n 5. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 6. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule HS_Aux1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 2. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Phi>115 G b p c H d \\<Phi> \\<Phi>')\n 3. \\<And>G b p c H d \\<Phi> \\<Phi>'.\n       \\<lbrakk>(G, b, p) \\<in> HS_B; (p, G, c, H) \\<in> HS;\n        (p, G, d, H) \\<in> HS;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>';\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Psi>115 G b p c H d \\<Phi> \\<Phi>')\n 4. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "(*While*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c H.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        H = G\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (subgoal_tac \"(G, b, LUB p t) \\<in> HS_B\", erule thin_rl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> (G, b, LUB p t) \\<in> HS_B\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(G, b, t) \\<in> HS_B; (LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> (G, b, LUB p t) \\<in> HS_B\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule HS_B_sup)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> LEQ t (LUB p t)\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (subgoal_tac \"LEQ t (LUB t p)\", simp add: LAT4)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> LEQ t (LUB t p)\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule LAT3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (subgoal_tac \"\\<exists> psi. X \\<rhd> While b c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\", clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        X \\<rhd> While b\n                  c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> While b\nc : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule_tac x=psi in exI, erule VDMConseq, clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi s ta\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q) psi s ta\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (simp add: Sec_def, clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; Q (LUB p t) G s ta;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta\\<rbrakk>\n       \\<Longrightarrow> Q p G s ta\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (simp add: Q_def, clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>x. \\<not> LEQ (LUB p t) (G x) \\<longrightarrow> ta x = s x;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> ta x = s x\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule_tac x=x in allE, erule mp, clarsimp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (subgoal_tac \"LEQ p (LUB p t)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x); LEQ p (LUB p t)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (LUB p t)\n 3. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x)\\<rbrakk>\n       \\<Longrightarrow> LEQ p (LUB p t)\n 2. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x); LEQ p (LUB p t)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule LAT3)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x); LEQ p (LUB p t)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rotate_tac -1, drule LAT2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x)\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) (?p3.160 G b t p c \\<Phi> psi s ta x)\n 2. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x);\n        LEQ p (?p3.160 G b t p c \\<Phi> psi s ta x)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi> psi s ta x.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (\\<lambda>s ta.\n                             \\<forall>x.\n                                \\<not> LEQ (LUB p t) (G x) \\<longrightarrow>\n                                ta x = s x)\n                      (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B;\n        \\<forall>r. EQ G q s r \\<longrightarrow> psi (ta, r);\n        \\<forall>r. psi (r, s) \\<longrightarrow> EQ G q r ta;\n        \\<not> LEQ p (G x); LEQ (LUB p t) (G x); LEQ p (G x)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (case_tac \"LEQ (LUB p t) q\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, rule WHILE_PARALLEL)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q)\n (?\\<Phi>166 G b t p c \\<Phi>)\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s ss.\n                            EQ G (LUB p t) s ss \\<longrightarrow>\n                            evalB b s = evalB b ss\n 3. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) q\n 4. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s ss.\n                            EQ G (LUB p t) s ss \\<longrightarrow>\n                            evalB b s = evalB b ss\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) q\n 3. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c \\<Phi> s ss.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q;\n        EQ G (LUB p t) s ss\\<rbrakk>\n       \\<Longrightarrow> evalB b s = evalB b ss\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) q\n 3. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (erule HS_B_eval)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G b t p c \\<Phi> s ss.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        LEQ (LUB p t) q; EQ G (LUB p t) s ss\\<rbrakk>\n       \\<Longrightarrow> EQ G (?pp175 G b t p c \\<Phi> s ss) s ss\n 2. \\<And>G b t p c \\<Phi> s ss.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        LEQ (LUB p t) q; EQ G (LUB p t) s ss\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) (?pp175 G b t p c \\<Phi> s ss)\n 3. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) q\n 4. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 5. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G b t p c \\<Phi> s ss.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        LEQ (LUB p t) q; EQ G (LUB p t) s ss\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) (LUB p t)\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) q\n 3. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 4. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule LAT6)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> LEQ (LUB p t) q\n 2. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 3. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "(*OTHER CASE*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS;\n        X \\<rhd> c : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) \\<Phi>;\n        (G, b, LUB p t) \\<in> HS_B; \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>psi.\n                            X \\<rhd> While b\nc : Sec (Q (LUB p t) G) (EQ G q) (EQ G q) psi\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, erule WHILE_DIAGONAL)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>G b t p c \\<Phi>.\n       \\<lbrakk>(LUB p t, G, c, G) \\<in> HS; (G, b, LUB p t) \\<in> HS_B;\n        \\<not> LEQ (LUB p t) q\\<rbrakk>\n       \\<Longrightarrow> \\<not> LEQ (LUB p t) q\n 2. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "(*Sub*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS;\n        \\<exists>\\<Phi>.\n           X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>;\n        LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pp GG c HH p G H \\<Phi>.\n       \\<lbrakk>(pp, GG, c, HH) \\<in> HS; LEQ p pp;\n        \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Phi>.\n                            X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n    \\<Phi>", "apply (rule, erule SUB, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>An induction on the typing rules now proves the main theorem\nwhich was called Theorem 4 in~\\cite{BeringerHofmann:CSF2007}.\\<close>"], ["", "theorem Theorem4[rule_format]: \n  \"(p,G,c,H):HS \\<Longrightarrow> \n  (\\<exists> \\<Phi> . X \\<rhd> c : (Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<exists>\\<Phi>. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>", "by (drule Theorem3_derivAux, simp add: Theorem3derivProp_def)"], ["", "(*>*)"], ["", "text\\<open>By the construction of the operator $\\mathit{Sec}$ (lemmas\n\\<open>Prop4A\\<close> and \\<open>Prop4A\\<close> in Section \\ref{sec:ARSsecurity}) we\nobtain the soundness property with respect to the oprational\nsemantics, i.e.~the result stated as Theorem 3.3 in\n\\cite{HuntSands:POPL2006}.\\<close>"], ["", "theorem HuntSands33: \"(p,G,c,H):HS \\<Longrightarrow> secure p G c H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> secure p G c H", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> secure p G c H", "apply (simp add: secure_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q.\n       (p, G, c, H) \\<in> HS \\<Longrightarrow>\n       ARSsecure (Q p H) (EQ G q) (EQ H q) c", "apply (drule Theorem4, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q \\<Phi>.\n       ?X1 q \\<rhd> c : Sec (Q p H) (EQ G (?q1 q)) (EQ H (?q1 q))\n                         \\<Phi> \\<Longrightarrow>\n       ARSsecure (Q p H) (EQ G q) (EQ H q) c", "apply (rule Prop4A)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q \\<Phi>.\n       ?X1 q \\<rhd> c : Sec (Q p H) (EQ G (?q1 q)) (EQ H (?q1 q))\n                         \\<Phi> \\<Longrightarrow>\n        \\<Turnstile> c : Sec (Q p H) (EQ G q) (EQ H q) (?\\<Phi>4 q \\<Phi>)", "apply (rule VDM_Sound_emptyCtxt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q \\<Phi>.\n       ?X1 q \\<rhd> c : Sec (Q p H) (EQ G (?q1 q)) (EQ H (?q1 q))\n                         \\<Phi> \\<Longrightarrow>\n       {} \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) (?\\<Phi>4 q \\<Phi>)", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text \\<open>Both parts of this theorem may also be shown\nindividually. We factor both proofs by the program logic.\\<close>"], ["", "lemma Sec1_deriv: \"(p,G,c,H):HS \\<Longrightarrow> X \\<rhd> c : (Q p H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> X \\<rhd> c : Q p H", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> X \\<rhd> c : Q p H", "apply (drule Theorem4, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       ?X \\<rhd> c : Sec (Q p H) (EQ G ?q) (EQ H ?q)\n                      \\<Phi> \\<Longrightarrow>\n       X \\<rhd> c : Q p H", "apply (erule VDMConseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       \\<forall>s t.\n          Sec (Q p H) (EQ G ?q) (EQ H ?q) \\<Phi> s t \\<longrightarrow>\n          Q p H s t", "apply (simp add: Sec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       \\<forall>s t.\n          Q p H s t \\<and>\n          (\\<forall>r. EQ G ?q s r \\<longrightarrow> \\<Phi> (t, r)) \\<and>\n          (\\<forall>r.\n              \\<Phi> (r, s) \\<longrightarrow> EQ H ?q r t) \\<longrightarrow>\n          Q p H s t", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n\n(*<*)"], ["", "lemma \n \"(p,G,c,H):HS \\<Longrightarrow> \n  X \\<rhd> c : (\\<lambda> s t . \\<forall> x . \\<not> LEQ p (H x) \\<longrightarrow> s x = t x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    X \\<rhd> c : (\\<lambda>s t.\n                     \\<forall>x.\n                        \\<not> LEQ p (H x) \\<longrightarrow> s x = t x)", "apply (drule Sec1_deriv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ?X \\<rhd> c : Q p H \\<Longrightarrow>\n    X \\<rhd> c : (\\<lambda>s t.\n                     \\<forall>x.\n                        \\<not> LEQ p (H x) \\<longrightarrow> s x = t x)", "apply (erule VDMConseq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       Q p H s t \\<longrightarrow>\n       (\\<forall>x. \\<not> LEQ p (H x) \\<longrightarrow> s x = t x)", "apply (simp add: Q_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "theorem HuntSands33_1:\"(p,G,c,H):HS \\<Longrightarrow> secure1 p G c H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> secure1 p G c H", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> secure1 p G c H", "apply (subgoal_tac \"{} \\<rhd> c : Q p H\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(p, G, c, H) \\<in> HS; {} \\<rhd> c : Q p H\\<rbrakk>\n    \\<Longrightarrow> secure1 p G c H\n 2. (p, G, c, H) \\<in> HS \\<Longrightarrow> {} \\<rhd> c : Q p H", "apply (drule VDM_Sound)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(p, G, c, H) \\<in> HS; {} \\<Turnstile> c : Q p H \\<rbrakk>\n    \\<Longrightarrow> secure1 p G c H\n 2. (p, G, c, H) \\<in> HS \\<Longrightarrow> {} \\<rhd> c : Q p H", "apply (simp add: Q_def secure1_def valid_def VDM_valid_def Ctxt_valid_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> {} \\<rhd> c : Q p H", "apply (erule Sec1_deriv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma Sec2_deriv: \n  \"(p,G,c,H):HS \\<Longrightarrow> \n  (\\<exists> A . X \\<rhd> c : (Sec (Q p H) (EQ G q) (EQ H q) A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<exists>A. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<exists>A. X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) A", "by (drule Theorem4 [of p G c H \"X\" q], clarsimp)"], ["", "(*>*)\n\n(*<*)"], ["", "lemma Sec2:\n  \"(p,G,c,H):HS \\<Longrightarrow> \n   (\\<exists> \\<Phi> . \\<Turnstile> c : (Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<exists>\\<Phi>.  \\<Turnstile> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>", "apply (drule Theorem4 [of p G c H \"{}\" q], clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Phi>.\n       {} \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> \\<Longrightarrow>\n       \\<exists>\\<Phi>.\n           \\<Turnstile> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>", "apply (rule_tac x=\\<Phi> in exI, erule VDM_Sound_emptyCtxt)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "theorem HuntSands33_2: \"(p,G,c,H):HS \\<Longrightarrow> secure2 q G c H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> secure2 q G c H", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow> secure2 q G c H", "apply (subgoal_tac \"\\<forall> q . ARSsecure (Q p H) (EQ G q) (EQ H q) c\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(p, G, c, H) \\<in> HS;\n     \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c\\<rbrakk>\n    \\<Longrightarrow> secure2 q G c H\n 2. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. (p, G, c, H) \\<in> HS \\<Longrightarrow>\n    \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c\n 2. \\<lbrakk>(p, G, c, H) \\<in> HS;\n     \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c\\<rbrakk>\n    \\<Longrightarrow> secure2 q G c H", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q.\n       (p, G, c, H) \\<in> HS \\<Longrightarrow>\n       ARSsecure (Q p H) (EQ G q) (EQ H q) c\n 2. \\<lbrakk>(p, G, c, H) \\<in> HS;\n     \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c\\<rbrakk>\n    \\<Longrightarrow> secure2 q G c H", "apply (drule Sec2_deriv[of p G c H \"{}\"], erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q A.\n       {} \\<rhd> c : Sec (Q p H) (EQ G (?q4 q)) (EQ H (?q4 q))\n                      A \\<Longrightarrow>\n       ARSsecure (Q p H) (EQ G q) (EQ H q) c\n 2. \\<lbrakk>(p, G, c, H) \\<in> HS;\n     \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c\\<rbrakk>\n    \\<Longrightarrow> secure2 q G c H", "apply (rule Prop4A)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>q A.\n       {} \\<rhd> c : Sec (Q p H) (EQ G (?q4 q)) (EQ H (?q4 q))\n                      A \\<Longrightarrow>\n        \\<Turnstile> c : Sec (Q p H) (EQ G q) (EQ H q) (?\\<Phi>8 q A) \n 2. \\<lbrakk>(p, G, c, H) \\<in> HS;\n     \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c\\<rbrakk>\n    \\<Longrightarrow> secure2 q G c H", "apply (erule VDM_Sound_emptyCtxt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, G, c, H) \\<in> HS;\n     \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c\\<rbrakk>\n    \\<Longrightarrow> secure2 q G c H", "apply (insert secureEQUIV [of p G c H])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(p, G, c, H) \\<in> HS;\n     \\<forall>q. ARSsecure (Q p H) (EQ G q) (EQ H q) c;\n     secure p G c H =\n     (\\<forall>q. secure1 p G c H \\<and> secure2 q G c H)\\<rbrakk>\n    \\<Longrightarrow> secure2 q G c H", "apply (simp add: secure_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>Again, the call rule is formulated for an arbitrary fixed point\nof a monotone transformer.\\<close>"], ["", "lemma CALL: \n  \"\\<lbrakk> ({B} \\<union> X) \\<rhd> body : Sec A R S (\\<phi>(FIX \\<phi>));\n      Monotone \\<phi>; B = Sec A R S (FIX \\<phi>) \\<rbrakk>\n   \\<Longrightarrow> X \\<rhd> Call : B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>({B} \\<union> X) \\<rhd> body : Sec A R S (\\<phi> (FIX \\<phi>));\n     Monotone \\<phi>; B = Sec A R S (FIX \\<phi>)\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Call : B", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>({B} \\<union> X) \\<rhd> body : Sec A R S (\\<phi> (FIX \\<phi>));\n     Monotone \\<phi>; B = Sec A R S (FIX \\<phi>)\\<rbrakk>\n    \\<Longrightarrow> X \\<rhd> Call : B", "apply (rule VDMCall)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>({B} \\<union> X) \\<rhd> body : Sec A R S (\\<phi> (FIX \\<phi>));\n     Monotone \\<phi>; B = Sec A R S (FIX \\<phi>)\\<rbrakk>\n    \\<Longrightarrow> ({B} \\<union> X) \\<rhd> body : B", "apply (subgoal_tac \"\\<phi> (FIX \\<phi>) = FIX \\<phi>\", clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>({B} \\<union> X) \\<rhd> body : Sec A R S (\\<phi> (FIX \\<phi>));\n     Monotone \\<phi>; B = Sec A R S (FIX \\<phi>)\\<rbrakk>\n    \\<Longrightarrow> \\<phi> (FIX \\<phi>) = FIX \\<phi>", "apply (erule Fix_lemma)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n\n(*<*)"], ["", "text\\<open>Monotonicity lemmas for the operators occurring in the derived proof rules.\\<close>"], ["", "lemma SkipMonotone:\"Monotone (\\<lambda> T (s,t). EQ G p s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (\\<lambda>T (s, t). EQ G p s t)", "by (simp add: Monotone_def)"], ["", "lemma AssignMonotone:\"Monotone (\\<lambda> T (s,t). \\<exists>r. s = update r x (evalE e r) \\<and> EQ G p r t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone\n     (\\<lambda>T (s, t).\n         \\<exists>r. s = update r x (evalE e r) \\<and> EQ G p r t)", "by (simp add: Monotone_def)"], ["", "lemma CompMonotone: \"Monotone (\\<lambda> T (s,t). \\<exists> r. A r t \\<and> (\\<forall>w. EQ K q r w \\<longrightarrow> B s w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone\n     (\\<lambda>T (s, t).\n         \\<exists>r.\n            A r t \\<and> (\\<forall>w. EQ K q r w \\<longrightarrow> B s w))", "by (simp add: Monotone_def)"], ["", "lemma IfPMonotone1: \"Monotone (\\<lambda> T (s,t). (evalB b t \\<longrightarrow> T(s,t)) \\<and> (\\<not> evalB b t \\<longrightarrow> B (s,t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone\n     (\\<lambda>T (s, t).\n         (evalB b t \\<longrightarrow> T (s, t)) \\<and>\n         (\\<not> evalB b t \\<longrightarrow> B (s, t)))", "by (simp add: Monotone_def)"], ["", "lemma IfPMonotone2: \"Monotone (\\<lambda> T (s,t). (evalB b t \\<longrightarrow> A(s,t)) \\<and> (\\<not> evalB b t \\<longrightarrow> T (s,t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone\n     (\\<lambda>T (s, t).\n         (evalB b t \\<longrightarrow> A (s, t)) \\<and>\n         (\\<not> evalB b t \\<longrightarrow> T (s, t)))", "by (simp add: Monotone_def)"], ["", "lemma IfDMonotone:\"Monotone (\\<lambda> T (s,t). EQ G p s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (\\<lambda>T (s, t). EQ G p s t)", "by (simp add: Monotone_def)"], ["", "lemma WhileDMonotone: \"Monotone (\\<lambda> T (s,t). EQ G q s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (\\<lambda>T (s, t). EQ G q s t)", "by (simp add: Monotone_def)"], ["", "lemma SubMonotone: \"Monotone (\\<lambda>T. T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotone (\\<lambda>T. T)", "by (simp add: Monotone_def)"], ["", "(*>*)"], ["", "text\\<open>As in Section \\ref{sec:BaseLineNI}, we define a formal derivation system\ncomprising all derived rules and show that all derivable judgements\nare of the for $\\mathit{Sec}(\\Phi)$ for some monotone $\\Phi$.\\<close>"], ["", "inductive_set Deriv:: \"(VDMAssn set \\<times> IMP \\<times> VDMAssn) set\"\nwhere\nD_SKIP: \n  \"\\<Omega> = (\\<lambda> (s,t). EQ G q s t)\n \\<Longrightarrow> (X, Skip, Sec (Q p H) (EQ G q) (EQ G q) \\<Omega>) : Deriv\"\n\n| D_ASSIGN: \n  \"\\<lbrakk>H = upd G x (LUB p t); \n    \\<forall> s ss . EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n    \\<Omega> = (\\<lambda> (s, t) . \\<exists> r . s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk> \n\\<Longrightarrow> (X, Assign x e, Sec (Q p H) (EQ G q) (EQ H q) \\<Omega>) : Deriv\"\n\n| D_COMP: \n  \"\\<lbrakk> (X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) : Deriv;\n     (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) : Deriv;\n    \\<forall> x . LEQ (G x) (K x) \\<or> LEQ p (K x);\n    \\<forall> x . LEQ (K x) (H x) \\<or> LEQ p (H x);\n    \\<Omega> = (\\<lambda> (x, y) . \\<exists> z . \\<Phi>(z,y) \\<and> (\\<forall> w . EQ K q z w \\<longrightarrow> \\<Psi>(x,w)))\\<rbrakk> \n \\<Longrightarrow> (X, Comp c d, Sec (Q p H) (EQ G q) (EQ H q) \\<Omega>) : Deriv\"\n\n| D_IF_PARALLEL:\n  \"\\<lbrakk> \\<forall> s ss . EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n     \\<forall> x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<exists> x . LEQ p (H x) \\<and> LEQ (H x) q;\n     (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) : Deriv;\n     (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) : Deriv;\n     \\<Omega> = (\\<lambda> (r, u) . (evalB b u \\<longrightarrow> \\<Phi>(r,u)) \\<and> \n                      ( (\\<not> evalB b u) \\<longrightarrow> \\<Psi>(r,u)))\\<rbrakk>\n  \\<Longrightarrow> (X, Iff b c d, Sec (Q p H) (EQ G q) (EQ H q) \\<Omega>) : Deriv\"\n\n| D_IF_DIAGONAL:\n  \"\\<lbrakk> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n     \\<not> (\\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q);\n     (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) : Deriv;\n     (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) : Deriv;\n     \\<Omega> = (\\<lambda> (s,t) . EQ H q s t)\\<rbrakk>\n   \\<Longrightarrow> (X, Iff b c d, Sec (Q p H) (EQ G q) (EQ H q) \\<Omega>) : Deriv\"\n\n| D_WHILE_PARALLEL:\n \"\\<lbrakk> (X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>):Deriv; \n    \\<forall> s ss . EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss; LEQ p q;\n    \\<Omega> = (\\<lambda> (s,t) . (b,EQ G q,\\<Phi>,s,t):var)\\<rbrakk>\n   \\<Longrightarrow> (X, While b c, Sec (Q p G) (EQ G q) (EQ G q) \\<Omega>):Deriv\"\n\n| D_WHILE_DIAGONAL:\n \"\\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) : Deriv; \\<not> LEQ p q;\n   \\<Omega> = (\\<lambda> (s,t) . EQ G q s t)\\<rbrakk>\n \\<Longrightarrow> (X, While b c, Sec (Q p G) (EQ G q) (EQ G q) \\<Omega>) : Deriv\"\n\n| D_SUB:\n  \"\\<lbrakk> LEQ p pp; \\<forall>x. LEQ (G x) (GG x); \\<forall>x. LEQ (HH x) (H x);\n     (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) : Deriv\\<rbrakk>\n   \\<Longrightarrow> (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) :Deriv\"\n\n| D_CALL:\n  \"({A} \\<union> X,body,A): Deriv \\<Longrightarrow> (X,Call,A) : Deriv\""], ["", "(*<*)"], ["", "definition DProp :: \"VDMAssn \\<Rightarrow> bool\"\nwhere \"DProp B = (\\<exists> A R S \\<phi> . B =  Sec A R S (\\<phi> (FIX \\<phi>)) \\<and> Monotone \\<phi>)\""], ["", "lemma DerivProp_Aux: \"(X,c,A):Deriv \\<Longrightarrow> DProp A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, c, A) \\<in> Deriv \\<Longrightarrow> DProp A", "apply (erule Deriv.induct)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>\\<Omega> G q X p H.\n       \\<Omega> = (\\<lambda>(s, t). EQ G q s t) \\<Longrightarrow>\n       DProp (Sec (Q p H) (EQ G q) (EQ G q) \\<Omega>)\n 2. \\<And>H G x p t e \\<Omega> q X.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Omega>)\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        DProp (Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>);\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        DProp (Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>);\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Omega>)\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>);\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>);\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Omega>)\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>);\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>);\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Omega>)\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        DProp (Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>);\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> DProp (Sec (Q p G) (EQ G q) (EQ G q) \\<Omega>)\n 7. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        DProp (Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>); \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> DProp (Sec (Q p G) (EQ G q) (EQ G q) \\<Omega>)\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        DProp (Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>)\\<rbrakk>\n       \\<Longrightarrow> DProp (Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>)\n 9. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv; DProp A\\<rbrakk>\n       \\<Longrightarrow> DProp A", "apply (simp_all add: DProp_def)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>\\<Omega> G q p H.\n       \\<Omega> = (\\<lambda>(x, y). EQ G q x y) \\<Longrightarrow>\n       \\<exists>A R S \\<phi>.\n          Sec (Q p H) (EQ G q) (EQ G q) (\\<lambda>(x, y). EQ G q x y) =\n          Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n          Monotone \\<phi>\n 2. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                             (EQ (upd G x (LUB p t)) q)\n                             (\\<lambda>(s, t).\n                                 \\<exists>r.\n                                    s = update r x (evalE e r) \\<and>\n                                    EQ G q r t) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (rule_tac x=\"Q p H\" in exI,\n       rule_tac x=\"EQ G q\" in exI,\n       rule_tac x=\"EQ G q\" in exI)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>\\<Omega> G q p H.\n       \\<Omega> = (\\<lambda>(x, y). EQ G q x y) \\<Longrightarrow>\n       \\<exists>\\<phi>.\n          Sec (Q p H) (EQ G q) (EQ G q) (\\<lambda>(x, y). EQ G q x y) =\n          Sec (Q p H) (EQ G q) (EQ G q) (\\<phi> (FIX \\<phi>)) \\<and>\n          Monotone \\<phi>\n 2. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                             (EQ (upd G x (LUB p t)) q)\n                             (\\<lambda>(s, t).\n                                 \\<exists>r.\n                                    s = update r x (evalE e r) \\<and>\n                                    EQ G q r t) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>\\<Omega> G q p H.\n       \\<Omega> = (\\<lambda>(x, y). EQ G q x y) \\<Longrightarrow>\n       Sec (Q p H) (EQ G q) (EQ G q) (\\<lambda>(x, y). EQ G q x y) =\n       Sec (Q p H) (EQ G q) (EQ G q)\n        (?\\<phi>16 \\<Omega> G q p H\n          (FIX (?\\<phi>16 \\<Omega> G q p H))) \\<and>\n       Monotone (?\\<phi>16 \\<Omega> G q p H)\n 2. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                             (EQ (upd G x (LUB p t)) q)\n                             (\\<lambda>(s, t).\n                                 \\<exists>r.\n                                    s = update r x (evalE e r) \\<and>\n                                    EQ G q r t) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>\\<Omega> G q p H.\n       \\<Omega> = (\\<lambda>(x, y). EQ G q x y) \\<Longrightarrow>\n       Sec (Q p H) (EQ G q) (EQ G q) (\\<lambda>(x, y). EQ G q x y) =\n       Sec (Q p H) (EQ G q) (EQ G q)\n        (?\\<phi>16 \\<Omega> G q p H (FIX (?\\<phi>16 \\<Omega> G q p H)))\n 2. \\<And>\\<Omega> G q p H.\n       \\<Omega> = (\\<lambda>(x, y). EQ G q x y) \\<Longrightarrow>\n       Monotone (?\\<phi>16 \\<Omega> G q p H)\n 3. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                             (EQ (upd G x (LUB p t)) q)\n                             (\\<lambda>(s, t).\n                                 \\<exists>r.\n                                    s = update r x (evalE e r) \\<and>\n                                    EQ G q r t) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 8. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 9. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>\\<Omega> G q p H.\n       \\<Omega> = (\\<lambda>(x, y). EQ G q x y) \\<Longrightarrow>\n       Monotone (\\<lambda>a. \\<Omega>)\n 2. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                             (EQ (upd G x (LUB p t)) q)\n                             (\\<lambda>(s, t).\n                                 \\<exists>r.\n                                    s = update r x (evalE e r) \\<and>\n                                    EQ G q r t) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                             (EQ (upd G x (LUB p t)) q)\n                             (\\<lambda>(s, t).\n                                 \\<exists>r.\n                                    s = update r x (evalE e r) \\<and>\n                                    EQ G q r t) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (rule_tac x=\"(Q p (upd G x (LUB p t)))\" in exI,\n       rule_tac x=\"EQ G q\" in exI,\n       rule_tac x=\"(EQ (upd G x (LUB p t)) q)\" in exI)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<phi>.\n                            Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                             (EQ (upd G x (LUB p t)) q)\n                             (\\<lambda>(s, t).\n                                 \\<exists>r.\n                                    s = update r x (evalE e r) \\<and>\n                                    EQ G q r t) =\n                            Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                             (EQ (upd G x (LUB p t)) q)\n                             (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                          (EQ (upd G x (LUB p t)) q)\n                          (\\<lambda>(s, t).\n                              \\<exists>r.\n                                 s = update r x (evalE e r) \\<and>\n                                 EQ G q r t) =\n                         Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                          (EQ (upd G x (LUB p t)) q)\n                          (?\\<phi>26 H G x p t e \\<Omega> q\n                            (FIX (?\\<phi>26 H G x p t e \\<Omega> q))) \\<and>\n                         Monotone (?\\<phi>26 H G x p t e \\<Omega> q)\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                          (EQ (upd G x (LUB p t)) q)\n                          (\\<lambda>(s, t).\n                              \\<exists>r.\n                                 s = update r x (evalE e r) \\<and>\n                                 EQ G q r t) =\n                         Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                          (EQ (upd G x (LUB p t)) q)\n                          (?\\<phi>26 H G x p t e \\<Omega> q\n                            (FIX (?\\<phi>26 H G x p t e \\<Omega> q)))\n 2. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> Monotone (?\\<phi>26 H G x p t e \\<Omega> q)\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> Monotone (\\<lambda>a. \\<Omega>)\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply clarsimp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (rule_tac x=\"Q p H\" in exI,\n       rule_tac x=\"EQ G q\" in exI,\n       rule_tac x=\"EQ H q\" in exI)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y).\n                                 \\<exists>z.\n                                    \\<Phi> (z, y) \\<and>\n                                    (\\<forall>w.\n  EQ K q z w \\<longrightarrow> \\<Psi> (x, w))) =\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(x, y).\n                              \\<exists>z.\n                                 \\<Phi> (z, y) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (x, w))) =\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (?\\<phi>49 X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra\n                            S Sa \\<phi> \\<phi>'\n                            (FIX (?\\<phi>49 X c p K G q \\<Phi> d H \\<Psi> A\n                                   Aa R Ra S Sa \\<phi> \\<phi>'))) \\<and>\n                         Monotone\n                          (?\\<phi>49 X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra\n                            S Sa \\<phi> \\<phi>')\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(x, y).\n                              \\<exists>z.\n                                 \\<Phi> (z, y) \\<and>\n                                 (\\<forall>w.\n                                     EQ K q z w \\<longrightarrow>\n                                     \\<Psi> (x, w))) =\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (?\\<phi>49 X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra\n                            S Sa \\<phi> \\<phi>'\n                            (FIX (?\\<phi>49 X c p K G q \\<Phi> d H \\<Psi> A\n                                   Aa R Ra S Sa \\<phi> \\<phi>')))\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (?\\<phi>49 X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra\n                            S Sa \\<phi> \\<phi>')\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        Sec (Q p K) (EQ G q) (EQ K q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ K q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (\\<lambda>a b.\n                              case b of\n                              (x, y) \\<Rightarrow>\n                                \\<exists>z.\n                                   \\<Phi> (z, y) \\<and>\n                                   (\\<forall>w.\n EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply clarsimp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> x A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        LEQ p (H x); LEQ (H x) q;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (rule_tac x=\"Q p H\" in exI,\n       rule_tac x=\"EQ G q\" in exI,\n       rule_tac x=\"EQ H q\" in exI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> x A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        LEQ p (H x); LEQ (H x) q;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(r, u).\n                                 (evalB b u \\<longrightarrow>\n                                  \\<Phi> (r, u)) \\<and>\n                                 (\\<not> evalB b u \\<longrightarrow>\n                                  \\<Psi> (r, u))) =\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> x A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        LEQ p (H x); LEQ (H x) q;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(r, u).\n                              (evalB b u \\<longrightarrow>\n                               \\<Phi> (r, u)) \\<and>\n                              (\\<not> evalB b u \\<longrightarrow>\n                               \\<Psi> (r, u))) =\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (?\\<phi>82 G p b H q X c \\<Phi> d \\<Psi> x A Aa R\n                            Ra S Sa \\<phi> \\<phi>'\n                            (FIX (?\\<phi>82 G p b H q X c \\<Phi> d \\<Psi> x\n                                   A Aa R Ra S Sa \\<phi> \\<phi>'))) \\<and>\n                         Monotone\n                          (?\\<phi>82 G p b H q X c \\<Phi> d \\<Psi> x A Aa R\n                            Ra S Sa \\<phi> \\<phi>')\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> x A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        LEQ p (H x); LEQ (H x) q;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(r, u).\n                              (evalB b u \\<longrightarrow>\n                               \\<Phi> (r, u)) \\<and>\n                              (\\<not> evalB b u \\<longrightarrow>\n                               \\<Psi> (r, u))) =\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (?\\<phi>82 G p b H q X c \\<Phi> d \\<Psi> x A Aa R\n                            Ra S Sa \\<phi> \\<phi>'\n                            (FIX (?\\<phi>82 G p b H q X c \\<Phi> d \\<Psi> x\n                                   A Aa R Ra S Sa \\<phi> \\<phi>')))\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> x A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        LEQ p (H x); LEQ (H x) q;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (?\\<phi>82 G p b H q X c \\<Phi> d \\<Psi> x A Aa R\n                            Ra S Sa \\<phi> \\<phi>')\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> x A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        LEQ p (H x); LEQ (H x) q;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (\\<lambda>a c.\n                              case c of\n                              (r, u) \\<Rightarrow>\n                                (evalB b u \\<longrightarrow>\n                                 \\<Phi> (r, u)) \\<and>\n                                (\\<not> evalB b u \\<longrightarrow>\n                                 \\<Psi> (r, u)))\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<Omega> = (\\<lambda>(x, y). EQ H q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply clarsimp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (rule_tac x=\"Q p H\" in exI,\n       rule_tac x=\"EQ G q\" in exI,\n       rule_tac x=\"EQ H q\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<lambda>(x, y). EQ H q x y) =\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(x, y). EQ H q x y) =\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (?\\<phi>112 G H p q X c \\<Phi> d \\<Psi> A Aa R Ra\n                            S Sa \\<phi> \\<phi>'\n                            (FIX (?\\<phi>112 G H p q X c \\<Phi> d \\<Psi> A\n                                   Aa R Ra S Sa \\<phi> \\<phi>'))) \\<and>\n                         Monotone\n                          (?\\<phi>112 G H p q X c \\<Phi> d \\<Psi> A Aa R Ra\n                            S Sa \\<phi> \\<phi>')\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q)\n                          (\\<lambda>(x, y). EQ H q x y) =\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (?\\<phi>112 G H p q X c \\<Phi> d \\<Psi> A Aa R Ra\n                            S Sa \\<phi> \\<phi>'\n                            (FIX (?\\<phi>112 G H p q X c \\<Phi> d \\<Psi> A\n                                   Aa R Ra S Sa \\<phi> \\<phi>')))\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (?\\<phi>112 G H p q X c \\<Phi> d \\<Psi> A Aa R Ra\n                            S Sa \\<phi> \\<phi>')\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> A Aa R Ra S Sa \\<phi> \\<phi>'.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<forall>x. LEQ p (H x) \\<longrightarrow> \\<not> LEQ (H x) q;\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        (X, d, Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'))) \\<in> Deriv;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>;\n        Sec (Q p H) (EQ G q) (EQ H q) \\<Psi> =\n        Sec Aa Ra Sa (\\<phi>' (FIX \\<phi>'));\n        Monotone \\<phi>'\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (\\<lambda>a b.\n                              case b of (a, b) \\<Rightarrow> EQ H q a b)\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply clarsimp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> b A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (rule_tac x=\"Q p G\" in exI,\n       rule_tac x=\"EQ G q\" in exI,\n       rule_tac x=\"EQ G q\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> b A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(s, t).\n                                 (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> b A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t).\n                              (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (?\\<phi>132 X c p G q \\<Phi> b A R S \\<phi>\n                            (FIX (?\\<phi>132 X c p G q \\<Phi> b A R S\n                                   \\<phi>))) \\<and>\n                         Monotone\n                          (?\\<phi>132 X c p G q \\<Phi> b A R S \\<phi>)\n 2. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X c p G q \\<Phi> b A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(s, t).\n                              (b, EQ G q, \\<Phi>, s, t) \\<in> var) =\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (?\\<phi>132 X c p G q \\<Phi> b A R S \\<phi>\n                            (FIX (?\\<phi>132 X c p G q \\<Phi> b A R S\n                                   \\<phi>)))\n 2. \\<And>X c p G q \\<Phi> b A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (?\\<phi>132 X c p G q \\<Phi> b A R S \\<phi>)\n 3. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> b A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (\\<lambda>a c.\n                              case c of\n                              (s, t) \\<Rightarrow>\n                                (b, EQ G q, \\<Phi>, s, t) \\<in> var)\n 2. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X c p G q \\<Phi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>;\n        \\<not> LEQ p q; \\<Omega> = (\\<lambda>(x, y). EQ G q x y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X c p G q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<not> LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (rule_tac x=\"Q p G\" in exI,\n       rule_tac x=\"EQ G q\" in exI,\n       rule_tac x=\"EQ G q\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X c p G q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<not> LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<phi>.\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<lambda>(x, y). EQ G q x y) =\n                            Sec (Q p G) (EQ G q) (EQ G q)\n                             (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X c p G q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<not> LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(x, y). EQ G q x y) =\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (?\\<phi>155 X c p G q \\<Phi> A R S \\<phi>\n                            (FIX (?\\<phi>155 X c p G q \\<Phi> A R S\n                                   \\<phi>))) \\<and>\n                         Monotone (?\\<phi>155 X c p G q \\<Phi> A R S \\<phi>)\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<not> LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p G) (EQ G q) (EQ G q)\n                          (\\<lambda>(x, y). EQ G q x y) =\n                         Sec (Q p G) (EQ G q) (EQ G q)\n                          (?\\<phi>155 X c p G q \\<Phi> A R S \\<phi>\n                            (FIX (?\\<phi>155 X c p G q \\<Phi> A R S\n                                   \\<phi>)))\n 2. \\<And>X c p G q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<not> LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Monotone (?\\<phi>155 X c p G q \\<Phi> A R S \\<phi>)\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X c p G q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>(X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        \\<not> LEQ p q;\n        Sec (Q p G) (EQ G q) (EQ G q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (\\<lambda>a b.\n                              case b of (a, b) \\<Rightarrow> EQ G q a b)\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        \\<exists>A R S \\<phi>.\n           Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n           Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p pp G GG HH H X c q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A R S \\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec A R S (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply (rule_tac x=\"Q p H\" in exI,\n       rule_tac x=\"EQ G q\" in exI,\n       rule_tac x=\"EQ H q\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p pp G GG HH H X c q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<phi>.\n                            Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                            Sec (Q p H) (EQ G q) (EQ H q)\n                             (\\<phi> (FIX \\<phi>)) \\<and>\n                            Monotone \\<phi>", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p pp G GG HH H X c q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (?\\<phi>172 p pp G GG HH H X c q \\<Phi> A R S\n                            \\<phi>\n                            (FIX (?\\<phi>172 p pp G GG HH H X c q \\<Phi> A R\n                                   S \\<phi>))) \\<and>\n                         Monotone\n                          (?\\<phi>172 p pp G GG HH H X c q \\<Phi> A R S\n                            \\<phi>)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p pp G GG HH H X c q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec (Q p H) (EQ G q) (EQ H q) \\<Phi> =\n                         Sec (Q p H) (EQ G q) (EQ H q)\n                          (?\\<phi>172 p pp G GG HH H X c q \\<Phi> A R S\n                            \\<phi>\n                            (FIX (?\\<phi>172 p pp G GG HH H X c q \\<Phi> A R\n                                   S \\<phi>)))\n 2. \\<And>p pp G GG HH H X c q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Monotone\n                          (?\\<phi>172 p pp G GG HH H X c q \\<Phi> A R S\n                            \\<phi>)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p pp G GG HH H X c q \\<Phi> A R S \\<phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec A R S (\\<phi> (FIX \\<phi>))) \\<in> Deriv;\n        Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi> =\n        Sec A R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Monotone (\\<lambda>a. \\<Phi>)", "apply (simp add: Monotone_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma DerivMono: \n \"(X,c,B):Deriv \\<Longrightarrow>\n  \\<exists> A R S \\<phi> . B =  Sec A R S (\\<phi> (FIX \\<phi>)) \\<and> Monotone \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, c, B) \\<in> Deriv \\<Longrightarrow>\n    \\<exists>A R S \\<phi>.\n       B = Sec A R S (\\<phi> (FIX \\<phi>)) \\<and> Monotone \\<phi>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, c, B) \\<in> Deriv \\<Longrightarrow>\n    \\<exists>A R S \\<phi>.\n       B = Sec A R S (\\<phi> (FIX \\<phi>)) \\<and> Monotone \\<phi>", "by (drule DerivProp_Aux, simp add: DProp_def)"], ["", "(*>*)"], ["", "text\\<open>Also, the \\<open>Deriv\\<close> is indeed a subsystem of the program\nlogic.\\<close>"], ["", "theorem Deriv_derivable: \"(X,c,A):Deriv \\<Longrightarrow> X \\<rhd> c :A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, c, A) \\<in> Deriv \\<Longrightarrow> X \\<rhd> c : A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X, c, A) \\<in> Deriv \\<Longrightarrow> X \\<rhd> c : A", "apply (erule Deriv.induct)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>\\<Omega> G q X p H.\n       \\<Omega> = (\\<lambda>(s, t). EQ G q s t) \\<Longrightarrow>\n       X \\<rhd> Skip : Sec (Q p H) (EQ G q) (EQ G q) \\<Omega>\n 2. \\<And>H G x p t e \\<Omega> q X.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Assign x\n                                   e : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Comp c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 9. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply clarify"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>\\<Omega> G q X p H.\n       X \\<rhd> Skip : Sec (Q p H) (EQ G q) (EQ G q)\n                        (\\<lambda>(s, t). EQ G q s t)\n 2. \\<And>H G x p t e \\<Omega> q X.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Assign x\n                                   e : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Comp c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 9. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule SKIP)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q X.\n       \\<lbrakk>H = upd G x (LUB p t);\n        \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss;\n        \\<Omega> =\n        (\\<lambda>(s, t).\n            \\<exists>r.\n               s = update r x (evalE e r) \\<and> EQ G q r t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Assign x\n                                   e : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Comp c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 8. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply clarify"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q X.\n       \\<forall>s ss.\n          EQ G t s ss \\<longrightarrow>\n          evalE e s = evalE e ss \\<Longrightarrow>\n       X \\<rhd> Assign x\n                 e : Sec (Q p (upd G x (LUB p t))) (EQ G q)\n                      (EQ (upd G x (LUB p t)) q)\n                      (\\<lambda>(s, t).\n                          \\<exists>r.\n                             s = update r x (evalE e r) \\<and> EQ G q r t)\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Comp c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 8. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule_tac t=t in ASSIGN)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q X.\n       \\<forall>s ss.\n          EQ G t s ss \\<longrightarrow>\n          evalE e s = evalE e ss \\<Longrightarrow>\n       upd G x (LUB p t) = upd G x (LUB p t)\n 2. \\<And>H G x p t e \\<Omega> q X.\n       \\<forall>s ss.\n          EQ G t s ss \\<longrightarrow>\n          evalE e s = evalE e ss \\<Longrightarrow>\n       \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Comp c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 9. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>H G x p t e \\<Omega> q X.\n       \\<forall>s ss.\n          EQ G t s ss \\<longrightarrow>\n          evalE e s = evalE e ss \\<Longrightarrow>\n       \\<forall>s ss. EQ G t s ss \\<longrightarrow> evalE e s = evalE e ss\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Comp c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 8. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x);\n        \\<Omega> =\n        (\\<lambda>(x, y).\n            \\<exists>z.\n               \\<Phi> (z, y) \\<and>\n               (\\<forall>w.\n                   EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Comp c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 7. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply clarify"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Comp c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  (\\<lambda>(x, y).\n      \\<exists>z.\n         \\<Phi> (z, y) \\<and>\n         (\\<forall>w. EQ K q z w \\<longrightarrow> \\<Psi> (x, w)))\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 7. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule COMP)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x)\n 4. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\n 5. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 6. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 7. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 8. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 9. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 10. \\<And>A X.\n        \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n         ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n        \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x)\n 3. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 9. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x)\n 2. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 8. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>X c p K G q \\<Phi> d H \\<Psi> \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p K) (EQ G q) (EQ K q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ K q) (EQ H q) \\<Psi>;\n        \\<forall>x. LEQ (G x) (K x) \\<or> LEQ p (K x);\n        \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (K x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 7. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega>.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> =\n        (\\<lambda>(r, u).\n            (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n            (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 4. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply clarify"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  (\\<lambda>(r, u).\n      (evalB b u \\<longrightarrow> \\<Phi> (r, u)) \\<and>\n      (\\<not> evalB b u \\<longrightarrow> \\<Psi> (r, u)))\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 4. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule IF_PARALLEL)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s ss.\n                            EQ G p s ss \\<longrightarrow>\n                            evalB b s = evalB b ss\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\n 6. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 7. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 8. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 9. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 10. \\<And>A X.\n        \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n         ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n        \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\n 5. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 8. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 9. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 8. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule_tac x=x in exI, simp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 7. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G p b H q X c \\<Phi> d \\<Psi> \\<Omega> x.\n       \\<lbrakk>\\<forall>s ss.\n                   EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>; LEQ p (H x);\n        LEQ (H x) q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 4. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>;\n        \\<Omega> = (\\<lambda>(s, t). EQ H q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  \\<Omega>\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 3. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply clarify"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Iff b c\n                                   d : Sec (Q p H) (EQ G q) (EQ H q)\n  (\\<lambda>(s, t). EQ H q s t)\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 3. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule IF_DIAGONAL)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x)\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Phi>54 G H p q X c \\<Phi> d \\<Psi> \\<Omega> b)\n 4. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Psi>54 G H p q X c \\<Phi> d \\<Psi> \\<Omega> b)\n 5. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 7. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 8. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Phi>54 G H p q X c \\<Phi> d \\<Psi> \\<Omega> b)\n 3. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Psi>54 G H p q X c \\<Phi> d \\<Psi> \\<Omega> b)\n 4. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 6. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 7. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Phi>54 G H p q X c \\<Phi> d \\<Psi> \\<Omega> b)\n 2. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Psi>54 G H p q X c \\<Phi> d \\<Psi> \\<Omega> b)\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 4. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>G H p q X c \\<Phi> d \\<Psi> \\<Omega> b.\n       \\<lbrakk>\\<forall>x. LEQ (G x) (H x) \\<or> LEQ p (H x);\n        \\<nexists>x. LEQ p (H x) \\<and> LEQ (H x) q;\n        (X, c, Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>;\n        (X, d, Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>) \\<in> Deriv;\n        X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q) \\<Psi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> d : Sec (Q p H) (EQ G q) (EQ H q)\n (?\\<Psi>54 G H p q X c \\<Phi> d \\<Psi> \\<Omega> b)\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 3. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q;\n        \\<Omega> =\n        (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 2. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply clarify"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  (\\<lambda>(s, t). (b, EQ G q, \\<Phi>, s, t) \\<in> var)\n 2. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule WHILE_PARALLEL_IND)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s ss.\n                            EQ G p s ss \\<longrightarrow>\n                            evalB b s = evalB b ss\n 3. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> LEQ p q\n 4. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 5. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 6. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<forall>s ss.\n                            EQ G p s ss \\<longrightarrow>\n                            evalB b s = evalB b ss\n 2. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> LEQ p q\n 3. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 5. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X c p G q \\<Phi> b \\<Omega>.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<forall>s ss. EQ G p s ss \\<longrightarrow> evalB b s = evalB b ss;\n        LEQ p q\\<rbrakk>\n       \\<Longrightarrow> LEQ p q\n 2. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>; \\<not> LEQ p q;\n        \\<Omega> = (\\<lambda>(s, t). EQ G q s t)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  \\<Omega>\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> While b\n                                   c : Sec (Q p G) (EQ G q) (EQ G q)\n  (\\<lambda>(s, t). EQ G q s t)\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule WHILE_DIAGONAL)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q)\n (?\\<Phi>69 X c p G q \\<Phi> \\<Omega> b)\n 2. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<not> LEQ p q\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 4. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X c p G q \\<Phi> \\<Omega> b.\n       \\<lbrakk>(X, c, Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q p G) (EQ G q) (EQ G q) \\<Phi>;\n        \\<not> LEQ p q\\<rbrakk>\n       \\<Longrightarrow> \\<not> LEQ p q\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 3. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q p H) (EQ G q) (EQ H q) \\<Phi>\n 2. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (rule SUB)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> LEQ p (?pp72 p pp G GG HH H X c q \\<Phi>)\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            LEQ (G x) (?GG72 p pp G GG HH H X c q \\<Phi> x)\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            LEQ (?HH72 p pp G GG HH H X c q \\<Phi> x) (H x)\n 4. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec\n (Q (?pp72 p pp G GG HH H X c q \\<Phi>) (?HH72 p pp G GG HH H X c q \\<Phi>))\n (EQ (?GG72 p pp G GG HH H X c q \\<Phi>) q)\n (EQ (?HH72 p pp G GG HH H X c q \\<Phi>) q) \\<Phi>\n 5. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            LEQ (G x) (?GG72 p pp G GG HH H X c q \\<Phi> x)\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            LEQ (?HH72 p pp G GG HH H X c q \\<Phi> x) (H x)\n 3. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec\n (Q pp (?HH72 p pp G GG HH H X c q \\<Phi>))\n (EQ (?GG72 p pp G GG HH H X c q \\<Phi>) q)\n (EQ (?HH72 p pp G GG HH H X c q \\<Phi>) q) \\<Phi>\n 4. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            LEQ (?HH72 p pp G GG HH H X c q \\<Phi> x) (H x)\n 2. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec\n (Q pp (?HH72 p pp G GG HH H X c q \\<Phi>)) (EQ GG q)\n (EQ (?HH72 p pp G GG HH H X c q \\<Phi>) q) \\<Phi>\n 3. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p pp G GG HH H X c q \\<Phi>.\n       \\<lbrakk>LEQ p pp; \\<forall>x. LEQ (G x) (GG x);\n        \\<forall>x. LEQ (HH x) (H x);\n        (X, c, Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>) \\<in> Deriv;\n        X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q) \\<Phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> c : Sec (Q pp HH) (EQ GG q) (EQ HH q)\n \\<Phi>\n 2. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (frule DerivMono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A X.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A;\n        \\<exists>Aa R S \\<phi>.\n           A = Sec Aa R S (\\<phi> (FIX \\<phi>)) \\<and>\n           Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply (erule exE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A X Aa R S \\<phi>.\n       \\<lbrakk>({A} \\<union> X, body, A) \\<in> Deriv;\n        ({A} \\<union> X) \\<rhd> body : A;\n        A = Sec Aa R S (\\<phi> (FIX \\<phi>)) \\<and> Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (\\<phi> (FIX \\<phi>))", "apply (subgoal_tac \"X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>; X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (\\<phi> (FIX \\<phi>))\n 2. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\n 2. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>; X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (\\<phi> (FIX \\<phi>))", "apply (rule CALL)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> ({Sec Aa R S (FIX \\<phi>)} \\<union>\n                          X) \\<rhd> body : Sec (?A88 X Aa R S \\<phi>)\n      (?R88 X Aa R S \\<phi>) (?S88 X Aa R S \\<phi>)\n      (?\\<phi>88 X Aa R S \\<phi> (FIX (?\\<phi>88 X Aa R S \\<phi>)))\n 2. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Monotone (?\\<phi>88 X Aa R S \\<phi>)\n 3. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec Aa R S (FIX \\<phi>) =\n                         Sec (?A88 X Aa R S \\<phi>) (?R88 X Aa R S \\<phi>)\n                          (?S88 X Aa R S \\<phi>)\n                          (FIX (?\\<phi>88 X Aa R S \\<phi>))\n 4. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>; X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (\\<phi> (FIX \\<phi>))", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Monotone (?\\<phi>88 X Aa R S \\<phi>)\n 2. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> ({Sec Aa R S (FIX \\<phi>)} \\<union>\n                          X) \\<rhd> body : Sec (?A88 X Aa R S \\<phi>)\n      (?R88 X Aa R S \\<phi>) (?S88 X Aa R S \\<phi>)\n      (?\\<phi>88 X Aa R S \\<phi> (FIX (?\\<phi>88 X Aa R S \\<phi>)))\n 3. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec Aa R S (FIX \\<phi>) =\n                         Sec (?A88 X Aa R S \\<phi>) (?R88 X Aa R S \\<phi>)\n                          (?S88 X Aa R S \\<phi>)\n                          (FIX (?\\<phi>88 X Aa R S \\<phi>))\n 4. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>; X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (\\<phi> (FIX \\<phi>))", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> ({Sec Aa R S (FIX \\<phi>)} \\<union>\n                          X) \\<rhd> body : Sec (?A88 X Aa R S \\<phi>)\n      (?R88 X Aa R S \\<phi>) (?S88 X Aa R S \\<phi>) (\\<phi> (FIX \\<phi>))\n 2. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec Aa R S (FIX \\<phi>) =\n                         Sec (?A88 X Aa R S \\<phi>) (?R88 X Aa R S \\<phi>)\n                          (?S88 X Aa R S \\<phi>) (FIX \\<phi>)\n 3. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>; X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (\\<phi> (FIX \\<phi>))", "apply (simp add: Fix_lemma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Sec Aa R S (FIX \\<phi>) = Sec Aa R S (FIX \\<phi>)\n 2. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>; X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (\\<phi> (FIX \\<phi>))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X Aa R S \\<phi>.\n       \\<lbrakk>(insert (Sec Aa R S (\\<phi> (FIX \\<phi>))) X, body,\n                 Sec Aa R S (\\<phi> (FIX \\<phi>)))\n                \\<in> Deriv;\n        insert (Sec Aa R S (\\<phi> (FIX \\<phi>)))\n         X \\<rhd> body : Sec Aa R S (\\<phi> (FIX \\<phi>));\n        Monotone \\<phi>; X \\<rhd> Call : Sec Aa R S (FIX \\<phi>)\\<rbrakk>\n       \\<Longrightarrow> X \\<rhd> Call : Sec Aa R S (\\<phi> (FIX \\<phi>))", "apply (simp add: Fix_lemma)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open>End of theory HuntSands\\<close>"], ["", "end"]]}