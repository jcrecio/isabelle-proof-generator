{"file_name": "/home/qj213/afp-2021-10-22/thys/Stirling_Formula/Gamma_Asymptotics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stirling_Formula", "problem_names": ["lemma arg_of_real [simp]:\n  \"x > 0 \\<Longrightarrow> arg (complex_of_real x) = 0\"\n  \"x < 0 \\<Longrightarrow> arg (complex_of_real x) = pi\"", "lemma arg_conv_arctan:\n  assumes \"Re z > 0\"\n  shows   \"arg z = arctan (Im z / Re z)\"", "lemma mult_indicator_cong:\n  fixes f g :: \"_ \\<Rightarrow> 'a :: semiring_1\"\n  shows \"(\\<And>x. x \\<in> A \\<Longrightarrow> f x = g x) \\<Longrightarrow> indicator A x * f x = indicator A x * g x\"", "lemma has_absolute_integral_change_of_variables_1':\n  fixes f :: \"real \\<Rightarrow> real\" and g :: \"real \\<Rightarrow> real\"\n  assumes S: \"S \\<in> sets lebesgue\"\n    and der_g: \"\\<And>x. x \\<in> S \\<Longrightarrow> (g has_field_derivative g' x) (at x within S)\"\n    and inj: \"inj_on g S\"\n  shows \"(\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f(g x)) absolutely_integrable_on S \\<and>\n           integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f(g x)) = b\n     \\<longleftrightarrow> f absolutely_integrable_on (g ` S) \\<and> integral (g ` S) f = b\"", "lemma tendsto_of_real_0_I: \n  \"(f \\<longlongrightarrow> 0) G \\<Longrightarrow> ((\\<lambda>x. (of_real (f x))) \\<longlongrightarrow> (0 ::'a::real_normed_div_algebra)) G\"", "lemma negligible_atLeastAtMostI: \"b \\<le> a \\<Longrightarrow> negligible {a..(b::real)}\"", "lemma vector_derivative_cong_eq:\n  assumes \"eventually (\\<lambda>x. x \\<in> A \\<longrightarrow> f x = g x) (nhds x)\" \"x = y\" \"A = B\" \"x \\<in> A\"\n  shows   \"vector_derivative f (at x within A) = vector_derivative g (at y within B)\"", "lemma differentiable_of_real [simp]: \"of_real differentiable at x within A\"", "lemma higher_deriv_cong_ev:\n  assumes \"eventually (\\<lambda>x. f x = g x) (nhds x)\" \"x = y\"\n  shows   \"(deriv ^^ n) f x = (deriv ^^ n) g y\"", "lemma deriv_of_real [simp]: \n  \"at x within A \\<noteq> bot \\<Longrightarrow> vector_derivative of_real (at x within A) = 1\"", "lemma deriv_Re [simp]: \"deriv Re = (\\<lambda>_. 1)\"", "lemma vector_derivative_of_real_left:\n  assumes \"f differentiable at x\"\n  shows   \"vector_derivative (\\<lambda>x. of_real (f x)) (at x) = of_real (deriv f x)\"", "lemma vector_derivative_of_real_right:\n  assumes \"f field_differentiable at (of_real x)\"\n  shows   \"vector_derivative (\\<lambda>x. f (of_real x)) (at x) = deriv f (of_real x)\"", "lemma Ln_holomorphic [holomorphic_intros]:\n  assumes \"A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\"\n  shows   \"Ln holomorphic_on (A :: complex set)\"", "lemma higher_deriv_Polygamma:\n  assumes \"z \\<notin> \\<int>\\<^sub>\\<le>\\<^sub>0\"\n  shows   \"(deriv ^^ n) (Polygamma m) z = \n             Polygamma (m + n) (z :: 'a :: {real_normed_field,euclidean_space})\"", "lemma higher_deriv_cmult:\n  assumes \"f holomorphic_on A\" \"x \\<in> A\" \"open A\"\n  shows   \"(deriv ^^ j) (\\<lambda>x. c * f x) x = c * (deriv ^^ j) f x\"", "lemma higher_deriv_ln_Gamma_complex:\n  assumes \"(x::complex) \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\"\n  shows   \"(deriv ^^ j) ln_Gamma x = (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\"", "lemma higher_deriv_ln_Gamma_real:\n  assumes \"(x::real) > 0\"\n  shows   \"(deriv ^^ j) ln_Gamma x = (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\"", "lemma higher_deriv_ln_Gamma_complex_of_real:\n  assumes \"(x :: real) > 0\"\n  shows   \"(deriv ^^ j) ln_Gamma (complex_of_real x) = of_real ((deriv ^^ j) ln_Gamma x)\"", "lemma stirling_limit_aux1: \n  \"((\\<lambda>y. Ln (1 + z * of_real y) / of_real y) \\<longlongrightarrow> z) (at_right 0)\" for z :: complex", "lemma stirling_limit_aux2: \n  \"((\\<lambda>y. y * Ln (1 + z / of_real y)) \\<longlongrightarrow> z) at_top\" for z :: complex", "lemma Union_atLeastAtMost: \n  assumes \"N > 0\" \n  shows   \"(\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)}) = {0..real N}\"", "lemma zero_in_complex_cone [simp, intro]: \"a \\<le> b \\<Longrightarrow> 0 \\<in> complex_cone a b\"", "lemma complex_coneE:\n  assumes \"z \\<in> complex_cone a b\"\n  obtains r \\<alpha> where \"r \\<ge> 0\" \"\\<alpha> \\<in> {a..b}\" \"z = rcis r \\<alpha>\"", "lemma arg_cis [simp]:\n  assumes \"x \\<in> {-pi<..pi}\"\n  shows   \"arg (cis x) = x\"", "lemma arg_mult_of_real_left [simp]:\n  assumes \"r > 0\"\n  shows   \"arg (of_real r * z) = arg z\"", "lemma arg_mult_of_real_right [simp]:\n  assumes \"r > 0\"\n  shows   \"arg (z * of_real r) = arg z\"", "lemma arg_rcis [simp]:\n  assumes \"x \\<in> {-pi<..pi}\" \"r > 0\"\n  shows   \"arg (rcis r x) = x\"", "lemma rcis_in_complex_cone [intro]: \n  assumes \"\\<alpha> \\<in> {a..b}\" \"r \\<ge> 0\"\n  shows   \"rcis r \\<alpha> \\<in> complex_cone a b\"", "lemma arg_imp_in_complex_cone:\n  assumes \"arg z \\<in> {a..b}\"\n  shows   \"z \\<in> complex_cone a b\"", "lemma complex_cone_altdef:\n  assumes \"-pi < a\" \"a \\<le> b\" \"b \\<le> pi\"\n  shows   \"complex_cone a b = insert 0 {z. arg z \\<in> {a..b}}\"", "lemma nonneg_of_real_in_complex_cone [simp, intro]:\n  assumes \"x \\<ge> 0\" \"a \\<le> 0\" \"0 \\<le> b\"\n  shows   \"of_real x \\<in> complex_cone a b\"", "lemma one_in_complex_cone [simp, intro]: \"a \\<le> 0 \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> 1 \\<in> complex_cone a b\"", "lemma of_nat_in_complex_cone [simp, intro]: \"a \\<le> 0 \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> of_nat n \\<in> complex_cone a b\"", "lemma complex_cone_inter_nonpos_Reals:\n  assumes \"-pi < a\" \"a \\<le> b\" \"b < pi\"\n  shows   \"complex_cone a b \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {0}\"", "theorem \n  assumes a: \"a > 0\" and b: \"b > (0 :: real)\"\n  shows has_integral_Beta_real': \n          \"((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral Beta a b) {0<..}\"\n    and Beta_conv_nn_integral:\n          \"Beta a b = (\\<integral>\\<^sup>+u. ennreal (indicator {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) \\<partial>lborel)\"", "lemma has_integral_Beta2:\n  fixes a :: real\n  assumes \"a < -1/2\"\n  shows   \"((\\<lambda>x. (1 + x ^ 2) powr a) has_integral Beta (- a - 1 / 2) (1 / 2) / 2) {0<..}\"", "lemma has_integral_Beta3:\n  fixes a b :: real\n  assumes \"a < -1/2\" and \"b > 0\"\n  shows   \"((\\<lambda>x. (b + x ^ 2) powr a) has_integral\n             Beta (-a - 1/2) (1/2) / 2 * b powr (a + 1/2)) {0<..}\"", "lemma\n  assumes N: \"N > 0\"\n  shows   integrable_pbernpoly_1:\n            \"(\\<lambda>x. of_real (-pbernpoly 1 x) / (of_real x + s)) integrable_on {0..real N}\"\n  and     integral_pbernpoly_1_aux:\n            \"integral {0..real N} (\\<lambda>x. -of_real (pbernpoly 1 x) / (of_real x + s)) = approx N\"\n  and     has_integral_pbernpoly_1:\n            \"((\\<lambda>x. pbernpoly 1 x /(x + s)) has_integral \n              (\\<Sum>m<N. (of_nat m + 1 / 2 + s) * (ln (of_nat m + s) - \n                        ln (of_nat m + 1 + s)) + 1)) {0..real N}\"", "lemma integrable_ln_Gamma_aux:\n  shows   \"(\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n) integrable_on {0..real N}\"", "lemma integral_pbernpoly_1: \n  \"(\\<lambda>N. integral {0..real N} (\\<lambda>x. pbernpoly 1 x / (x + s)))\n     \\<longlonglongrightarrow> -ln_Gamma s - s + (s - 1 / 2) * ln s + ln (2 * pi) / 2\"", "lemma pbernpoly_integral_conv_pbernpoly_integral_Suc:\n  assumes \"n \\<ge> 1\"\n  shows   \"integral {0..real N} (\\<lambda>x. pbernpoly n x / (x + s) ^ n) =\n             of_real (pbernpoly (Suc n) (real N)) / (of_nat (Suc n) * (s + of_nat N) ^ n) -\n             of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) + of_nat n / of_nat (Suc n) * \n               integral {0..real N} (\\<lambda>x. of_real (pbernpoly (Suc n) x) / (of_real x + s) ^ Suc n)\"", "lemma pbernpoly_over_power_tendsto_0: \n  assumes \"n > 0\"\n  shows   \"(\\<lambda>x. of_real (pbernpoly (Suc n) (real x)) / (of_nat (Suc n) * (s + of_nat x) ^ n)) \\<longlonglongrightarrow> 0\"", "lemma convergent_stirling_integral:\n  assumes \"n > 0\"\n  shows   \"convergent (\\<lambda>N. integral {0..real N} \n             (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n))\" (is \"convergent (?f n)\")", "lemma stirling_integral_conv_stirling_integral_Suc:\n  assumes \"n > 0\"\n  shows   \"stirling_integral n s =\n             of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n             of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\"", "lemma stirling_integral_1_unfold:\n  assumes \"m > 0\"\n  shows   \"stirling_integral 1 s = stirling_integral m s / of_nat m - \n             (\\<Sum>k=1..<m. of_real (bernoulli (Suc k)) / (of_nat k * of_nat (Suc k) * s ^ k))\"", "lemma ln_Gamma_stirling_complex:\n  assumes \"m > 0\"\n  shows   \"ln_Gamma s = (s - 1 / 2) * ln s - s + ln (2 * pi) / 2 +\n             (\\<Sum>k=1..<m. of_real (bernoulli (Suc k)) / (of_nat k * of_nat (Suc k) * s ^ k)) - \n             stirling_integral m s / of_nat m\"", "lemma LIMSEQ_stirling_integral:\n  \"n > 0 \\<Longrightarrow> (\\<lambda>x. integral {0..real x} (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n))\n     \\<longlonglongrightarrow> stirling_integral n s\"", "lemmas has_integral_of_real = has_integral_linear[OF _ bounded_linear_of_real, unfolded o_def]", "lemmas integral_of_real = integral_linear[OF _ bounded_linear_of_real, unfolded o_def]", "lemma integrable_ln_Gamma_aux_real:\n  assumes \"0 < s\"\n  shows   \"(\\<lambda>x. pbernpoly n x / (x + s) ^ n) integrable_on {0..real N}\"", "lemma  \n  assumes \"x > 0\" \"n > 0\"\n  shows   stirling_integral_complex_of_real:\n            \"stirling_integral n (complex_of_real x) = of_real (stirling_integral n x)\"\n    and   LIMSEQ_stirling_integral_real:\n            \"(\\<lambda>N. integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n            \\<longlonglongrightarrow> stirling_integral n x\"\n    and   stirling_integral_real_convergent:\n            \"convergent (\\<lambda>N. integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\"", "lemma ln_Gamma_stirling_real:\n  assumes \"x > (0 :: real)\" \"m > (0::nat)\"\n  shows   \"ln_Gamma x = (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n              (\\<Sum>k = 1..<m. bernoulli (Suc k) / (of_nat k * of_nat (Suc k) * x ^ k)) -\n              stirling_integral m x / of_nat m\"", "lemma stirling_integral_bound_aux:\n  assumes n: \"n > (1::nat)\"\n  obtains c where \"\\<And>s. Re s > 0 \\<Longrightarrow> norm (stirling_integral n s) \\<le>  c / Re s ^ (n - 1)\"", "lemma stirling_integral_bound_aux_integral1:\n  fixes a b c :: real and n :: nat\n  assumes \"a \\<ge> 0\" \"b > 0\" \"c \\<ge> 0\" \"n > 1\" \"l < a - b\" \"r > a + b\"\n  shows \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n           2*c*(n / (n - 1))/b^(n-1) - c/(n-1) * (1/(a-l)^(n-1) + 1/(r-a)^(n-1))) {l..r}\"", "lemma stirling_integral_bound_aux_integral2:\n  fixes a b c :: real and n :: nat\n  assumes \"a \\<ge> 0\" \"b > 0\" \"c \\<ge> 0\" \"n > 1\"\n  obtains I where \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I) {l..r}\"\n                  \"I \\<le> 2 * c * (n / (n - 1)) / b ^ (n-1)\"", "lemma stirling_integral_bound_aux':\n  assumes n: \"n > (1::nat)\" and \\<alpha>: \"\\<alpha> \\<in> {0<..<pi}\"\n  obtains c where \"\\<And>s::complex. s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n                     norm (stirling_integral n s) \\<le> c / norm s ^ (n - 1)\"", "lemma stirling_integral_bound:\n  assumes \"n > 0\"\n  obtains c where \n    \"\\<And>s. Re s > 0 \\<Longrightarrow> norm (stirling_integral n s) \\<le> c / Re s ^ n\"", "lemma stirling_integral_bound':\n  assumes \"n > 0\" and \"\\<alpha> \\<in> {0<..<pi}\"\n  obtains c where \n    \"\\<And>s::complex. s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow> norm (stirling_integral n s) \\<le> c / norm s ^ n\"", "lemma stirling_integral_holomorphic [holomorphic_intros]:\n  assumes m: \"m > 0\" and \"A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\"\n  shows   \"stirling_integral m holomorphic_on A\"", "lemma stirling_integral_continuous_on_complex [continuous_intros]:\n  assumes m: \"m > 0\" and \"A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\"\n  shows   \"continuous_on A (stirling_integral m :: _ \\<Rightarrow> complex)\"", "lemma has_field_derivative_stirling_integral_complex:\n  fixes x :: complex\n  assumes \"x \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\" \"n > 0\"\n  shows   \"(stirling_integral n has_field_derivative deriv (stirling_integral n) x) (at x)\"", "lemma\n  assumes n: \"n > 0\" and \"x > 0\"\n  shows   deriv_stirling_integral_complex_of_real:\n            \"(deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n               complex_of_real ((deriv ^^ j) (stirling_integral n) x)\" (is \"?lhs x = ?rhs x\")\n  and     differentiable_stirling_integral_real:\n            \"(deriv ^^ j) (stirling_integral n) field_differentiable at x\" (is ?thesis2)", "lemma deriv_stirling_integral_real_bound:\n  assumes m: \"m > 0\"\n  shows   \"(deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x::real. 1 / x ^ (m + j))\"", "lemma stirling_sum_complex_of_real:\n  \"stirling_sum j m (complex_of_real x) = complex_of_real (stirling_sum j m x)\"", "lemma stirling_sum'_complex_of_real:\n  \"stirling_sum' j m (complex_of_real x) = complex_of_real (stirling_sum' j m x)\"", "lemma has_field_derivative_stirling_sum_complex [derivative_intros]:\n  \"Re x > 0 \\<Longrightarrow> (stirling_sum j m has_field_derivative stirling_sum (Suc j) m x) (at x)\"", "lemma has_field_derivative_stirling_sum_real [derivative_intros]:\n  \"x > (0::real) \\<Longrightarrow> (stirling_sum j m has_field_derivative stirling_sum (Suc j) m x) (at x)\"", "lemma has_field_derivative_stirling_sum'_complex [derivative_intros]:\n  assumes \"j > 0\" \"Re x > 0\"\n  shows   \"(stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x) (at x)\"", "lemma has_field_derivative_stirling_sum'_real [derivative_intros]:\n  assumes \"j > 0\" \"x > (0::real)\"\n  shows   \"(stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x) (at x)\"", "lemma higher_deriv_stirling_sum_complex:\n  \"Re x > 0 \\<Longrightarrow> (deriv ^^ i) (stirling_sum j m) x = stirling_sum (i + j) m x\"", "lemma Polygamma_approx_Suc: \"Polygamma_approx (Suc j) m = deriv (Polygamma_approx j m)\"", "lemma Polygamma_approx_0: \n  \"Polygamma_approx 0 m x = (x - 1/2) * ln x - x + of_real (ln (2*pi)) / 2 + stirling_sum 0 m x\"", "lemma Polygamma_approx_1_complex: \n  \"Re x > 0 \\<Longrightarrow> \n     Polygamma_approx (Suc 0) m x = ln x - 1 / (2*x) + stirling_sum (Suc 0) m x\"", "lemma Polygamma_approx_1_real: \n  \"x > (0 :: real) \\<Longrightarrow> \n     Polygamma_approx (Suc 0) m x = ln x - 1 / (2*x) + stirling_sum (Suc 0) m x\"", "lemma stirling_sum_2_conv_stirling_sum'_1:\n  fixes x :: \"'a :: {real_div_algebra, field_char_0}\"\n  assumes \"m > 0\" \"x \\<noteq> 0\"\n  shows   \"stirling_sum' 1 m x = 1 / x + 1 / (2 * x^2) + stirling_sum 2 m x\"", "lemma Polygamma_approx_2_real: \n  assumes \"x > (0::real)\" \"m > 0\"\n  shows   \"Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x\"", "lemma Polygamma_approx_2_complex: \n  assumes \"Re x > 0\" \"m > 0\"\n  shows   \"Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x\"", "lemma Polygamma_approx_ge_2_real: \n  assumes \"x > (0::real)\" \"m > 0\"\n  shows   \"Polygamma_approx (Suc (Suc j)) m x = stirling_sum' (Suc j) m x\"", "lemma Polygamma_approx_ge_2_complex:\n  assumes \"Re x > 0\" \"m > 0\"\n  shows   \"Polygamma_approx (Suc (Suc j)) m x = stirling_sum' (Suc j) m x\"", "lemma Polygamma_approx_complex_of_real:\n  assumes \"x > 0\" \"m > 0\"\n  shows   \"Polygamma_approx j m (complex_of_real x) = of_real (Polygamma_approx j m x)\"", "lemma higher_deriv_Polygamma_approx [simp]: \n  \"(deriv ^^ j) (Polygamma_approx i m) = Polygamma_approx (j + i) m\"", "lemma stirling_sum_holomorphic [holomorphic_intros]:\n  \"0 \\<notin> A \\<Longrightarrow> stirling_sum j m holomorphic_on A\"", "lemma Polygamma_approx_holomorphic [holomorphic_intros]:\n  \"Polygamma_approx j m holomorphic_on {s. Re s > 0}\"", "lemma higher_deriv_lnGamma_stirling:\n  assumes m: \"m > 0\"\n  shows   \"(\\<lambda>x::real. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\"", "lemma Polygamma_approx_1_real':\n  assumes x: \"(x::real) > 0\" and m: \"m > 0\"\n  shows   \"Polygamma_approx 1 m x = ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)\"", "theorem\n  assumes m: \"m > 0\"\n  shows   ln_Gamma_real_asymptotics:\n            \"(\\<lambda>x. ln_Gamma x - ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n                     (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k)) / x^k)))\n                \\<in> O(\\<lambda>x. 1 / x ^ m)\" (is ?th1)\n    and   Digamma_real_asymptotics:\n            \"(\\<lambda>x. Digamma x - (ln x - (\\<Sum>k=1..m. bernoulli' k / real k / x ^ k)))\n                \\<in> O(\\<lambda>x. 1 / (x ^ Suc m))\" (is ?th2)\n    and   Polygamma_real_asymptotics: \"j > 0 \\<Longrightarrow> \n             (\\<lambda>x. Polygamma j x - (- 1) ^ Suc j * (\\<Sum>k\\<le>m. bernoulli' k *\n                     pochhammer (real (Suc k)) (j - 1) / x ^ (k + j))) \n                \\<in> O(\\<lambda>x. 1 / x ^ (m+j+1))\" (is \"_ \\<Longrightarrow> ?th3\")", "lemma stirling_integral_bigo:\n  fixes m :: nat\n  assumes m: \"m > 0\"\n  shows   \"stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)\"", "theorem ln_Gamma_complex_asymptotics_explicit:\n  fixes m :: nat and \\<alpha> :: real\n  assumes \"m > 0\" and \"\\<alpha> \\<in> {0<..<pi}\"\n  obtains C :: real and R :: \"complex \\<Rightarrow> complex\"\n  where \"\\<forall>s::complex. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n               ln_Gamma s = (s - 1/2) * ln s - s + ln (2 * pi) / 2 +\n                            (\\<Sum>k=1..<m. bernoulli (k+1) / (k * (k+1) * s ^ k)) - R s\"\n    and \"\\<forall>s. s \\<noteq> 0 \\<and> \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow> norm (R s) \\<le> C / norm s ^ m\"", "lemma Gamma_complex_asymp_equiv:\n  \"Gamma \\<sim>[F] (\\<lambda>s. sqrt (2 * pi) * (s / exp 1) powr s / s powr (1 / 2))\""], "translations": [["", "lemma arg_of_real [simp]:\n  \"x > 0 \\<Longrightarrow> arg (complex_of_real x) = 0\"\n  \"x < 0 \\<Longrightarrow> arg (complex_of_real x) = pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < x \\<Longrightarrow> arg (complex_of_real x) = 0) &&&\n    (x < 0 \\<Longrightarrow> arg (complex_of_real x) = pi)", "by (rule arg_unique; simp add: complex_sgn_def scaleR_conv_of_real)+"], ["", "lemma arg_conv_arctan:\n  assumes \"Re z > 0\"\n  shows   \"arg z = arctan (Im z / Re z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg z = arctan (Im z / Re z)", "proof (rule arg_unique)"], ["proof (state)\ngoal (3 subgoals):\n 1. sgn z = cis (arctan (Im z / Re z))\n 2. - pi < arctan (Im z / Re z)\n 3. arctan (Im z / Re z) \\<le> pi", "show \"sgn z = cis (arctan (Im z / Re z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sgn z = cis (arctan (Im z / Re z))", "proof (rule complex_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. Re (sgn z) = Re (cis (arctan (Im z / Re z)))\n 2. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "have \"Re (cis (arctan (Im z / Re z))) = 1 / sqrt (1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (cis (arctan (Im z / Re z))) =\n    1 / sqrt (1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2)", "by (simp add: cos_arctan power_divide)"], ["proof (state)\nthis:\n  Re (cis (arctan (Im z / Re z))) =\n  1 / sqrt (1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. Re (sgn z) = Re (cis (arctan (Im z / Re z)))\n 2. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "also"], ["proof (state)\nthis:\n  Re (cis (arctan (Im z / Re z))) =\n  1 / sqrt (1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. Re (sgn z) = Re (cis (arctan (Im z / Re z)))\n 2. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "have \"1 + Im z ^ 2 / Re z ^ 2 = norm z ^ 2 / Re z ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2 = (cmod z)\\<^sup>2 / (Re z)\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  0 < Re z\n\ngoal (1 subgoal):\n 1. 1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2 = (cmod z)\\<^sup>2 / (Re z)\\<^sup>2", "by (simp add: cmod_def field_simps)"], ["proof (state)\nthis:\n  1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2 = (cmod z)\\<^sup>2 / (Re z)\\<^sup>2\n\ngoal (2 subgoals):\n 1. Re (sgn z) = Re (cis (arctan (Im z / Re z)))\n 2. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "also"], ["proof (state)\nthis:\n  1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2 = (cmod z)\\<^sup>2 / (Re z)\\<^sup>2\n\ngoal (2 subgoals):\n 1. Re (sgn z) = Re (cis (arctan (Im z / Re z)))\n 2. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "have \"1 / sqrt \\<dots> = Re z / norm z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / sqrt ((cmod z)\\<^sup>2 / (Re z)\\<^sup>2) = Re z / cmod z", "using assms"], ["proof (prove)\nusing this:\n  0 < Re z\n\ngoal (1 subgoal):\n 1. 1 / sqrt ((cmod z)\\<^sup>2 / (Re z)\\<^sup>2) = Re z / cmod z", "by (simp add: real_sqrt_divide)"], ["proof (state)\nthis:\n  1 / sqrt ((cmod z)\\<^sup>2 / (Re z)\\<^sup>2) = Re z / cmod z\n\ngoal (2 subgoals):\n 1. Re (sgn z) = Re (cis (arctan (Im z / Re z)))\n 2. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "finally"], ["proof (chain)\npicking this:\n  Re (cis (arctan (Im z / Re z))) = Re z / cmod z", "show \"Re (sgn z) = Re (cis (arctan (Im z / Re z)))\""], ["proof (prove)\nusing this:\n  Re (cis (arctan (Im z / Re z))) = Re z / cmod z\n\ngoal (1 subgoal):\n 1. Re (sgn z) = Re (cis (arctan (Im z / Re z)))", "by simp"], ["proof (state)\nthis:\n  Re (sgn z) = Re (cis (arctan (Im z / Re z)))\n\ngoal (1 subgoal):\n 1. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "have \"Im (cis (arctan (Im z / Re z))) = Im z / (Re z * sqrt (1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (cis (arctan (Im z / Re z))) =\n    Im z / (Re z * sqrt (1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2))", "by (simp add: sin_arctan field_simps)"], ["proof (state)\nthis:\n  Im (cis (arctan (Im z / Re z))) =\n  Im z / (Re z * sqrt (1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "also"], ["proof (state)\nthis:\n  Im (cis (arctan (Im z / Re z))) =\n  Im z / (Re z * sqrt (1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "have \"1 + Im z ^ 2 / Re z ^ 2 = norm z ^ 2 / Re z ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2 = (cmod z)\\<^sup>2 / (Re z)\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  0 < Re z\n\ngoal (1 subgoal):\n 1. 1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2 = (cmod z)\\<^sup>2 / (Re z)\\<^sup>2", "by (simp add: cmod_def field_simps)"], ["proof (state)\nthis:\n  1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2 = (cmod z)\\<^sup>2 / (Re z)\\<^sup>2\n\ngoal (1 subgoal):\n 1. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "also"], ["proof (state)\nthis:\n  1 + (Im z)\\<^sup>2 / (Re z)\\<^sup>2 = (cmod z)\\<^sup>2 / (Re z)\\<^sup>2\n\ngoal (1 subgoal):\n 1. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "have \"Im z / (Re z * sqrt \\<dots>) = Im z / norm z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im z / (Re z * sqrt ((cmod z)\\<^sup>2 / (Re z)\\<^sup>2)) = Im z / cmod z", "using assms"], ["proof (prove)\nusing this:\n  0 < Re z\n\ngoal (1 subgoal):\n 1. Im z / (Re z * sqrt ((cmod z)\\<^sup>2 / (Re z)\\<^sup>2)) = Im z / cmod z", "by (simp add: real_sqrt_divide)"], ["proof (state)\nthis:\n  Im z / (Re z * sqrt ((cmod z)\\<^sup>2 / (Re z)\\<^sup>2)) = Im z / cmod z\n\ngoal (1 subgoal):\n 1. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "finally"], ["proof (chain)\npicking this:\n  Im (cis (arctan (Im z / Re z))) = Im z / cmod z", "show \"Im (sgn z) = Im (cis (arctan (Im z / Re z)))\""], ["proof (prove)\nusing this:\n  Im (cis (arctan (Im z / Re z))) = Im z / cmod z\n\ngoal (1 subgoal):\n 1. Im (sgn z) = Im (cis (arctan (Im z / Re z)))", "by simp"], ["proof (state)\nthis:\n  Im (sgn z) = Im (cis (arctan (Im z / Re z)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sgn z = cis (arctan (Im z / Re z))\n\ngoal (2 subgoals):\n 1. - pi < arctan (Im z / Re z)\n 2. arctan (Im z / Re z) \\<le> pi", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. - pi < arctan (Im z / Re z)\n 2. arctan (Im z / Re z) \\<le> pi", "show \"arctan (Im z / Re z) > -pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi < arctan (Im z / Re z)", "by (rule le_less_trans[OF _ arctan_lbound]) auto"], ["proof (state)\nthis:\n  - pi < arctan (Im z / Re z)\n\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) \\<le> pi", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) \\<le> pi", "have \"arctan (Im z / Re z) < pi / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) < pi / 2", "by (rule arctan_ubound)"], ["proof (state)\nthis:\n  arctan (Im z / Re z) < pi / 2\n\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) \\<le> pi", "also"], ["proof (state)\nthis:\n  arctan (Im z / Re z) < pi / 2\n\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) \\<le> pi", "have \"\\<dots> \\<le> pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi / 2 \\<le> pi", "by simp"], ["proof (state)\nthis:\n  pi / 2 \\<le> pi\n\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) \\<le> pi", "finally"], ["proof (chain)\npicking this:\n  arctan (Im z / Re z) < pi", "show \"arctan (Im z / Re z) \\<le> pi\""], ["proof (prove)\nusing this:\n  arctan (Im z / Re z) < pi\n\ngoal (1 subgoal):\n 1. arctan (Im z / Re z) \\<le> pi", "by simp"], ["proof (state)\nthis:\n  arctan (Im z / Re z) \\<le> pi\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_indicator_cong:\n  fixes f g :: \"_ \\<Rightarrow> 'a :: semiring_1\"\n  shows \"(\\<And>x. x \\<in> A \\<Longrightarrow> f x = g x) \\<Longrightarrow> indicator A x * f x = indicator A x * g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> A \\<Longrightarrow> f x = g x) \\<Longrightarrow>\n    indicator A x * f x = indicator A x * g x", "by (auto simp: indicator_def)"], ["", "lemma has_absolute_integral_change_of_variables_1':\n  fixes f :: \"real \\<Rightarrow> real\" and g :: \"real \\<Rightarrow> real\"\n  assumes S: \"S \\<in> sets lebesgue\"\n    and der_g: \"\\<And>x. x \\<in> S \\<Longrightarrow> (g has_field_derivative g' x) (at x within S)\"\n    and inj: \"inj_on g S\"\n  shows \"(\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f(g x)) absolutely_integrable_on S \\<and>\n           integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f(g x)) = b\n     \\<longleftrightarrow> f absolutely_integrable_on (g ` S) \\<and> integral (g ` S) f = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n    (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n    (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)", "have \"(\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f(g x)) :: real ^ 1) absolutely_integrable_on S \\<and>\n           integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f(g x))) = (vec b :: real ^ 1)\n         \\<longleftrightarrow> (\\<lambda>x. vec (f x) :: real ^ 1) absolutely_integrable_on (g ` S) \\<and>\n           integral (g ` S) (\\<lambda>x. vec (f x)) = (vec b :: real ^ 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n     vec b) =\n    ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n     integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)", "using assms"], ["proof (prove)\nusing this:\n  S \\<in> sets lebesgue\n  ?x \\<in> S \\<Longrightarrow>\n  (g has_real_derivative g' ?x) (at ?x within S)\n  inj_on g S\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n     vec b) =\n    ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n     integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)", "unfolding has_field_derivative_iff_has_vector_derivative"], ["proof (prove)\nusing this:\n  S \\<in> sets lebesgue\n  ?x \\<in> S \\<Longrightarrow>\n  (g has_vector_derivative g' ?x) (at ?x within S)\n  inj_on g S\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n     vec b) =\n    ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n     integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)", "by (intro has_absolute_integral_change_of_variables_1 assms) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n   S \\<and>\n   integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n   vec b) =\n  ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n   integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n    (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) absolutely_integrable_on\n   S \\<and>\n   integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R vec (f (g x))) =\n   vec b) =\n  ((\\<lambda>x. vec (f x)) absolutely_integrable_on g ` S \\<and>\n   integral (g ` S) (\\<lambda>x. vec (f x)) = vec b)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     S \\<and>\n     integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n    (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)", "by (simp add: absolutely_integrable_on_1_iff integral_on_1_eq)"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n   S \\<and>\n   integral S (\\<lambda>x. \\<bar>g' x\\<bar> *\\<^sub>R f (g x)) = b) =\n  (f absolutely_integrable_on g ` S \\<and> integral (g ` S) f = b)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary Ln_times_of_nat:\n    \"\\<lbrakk>r > 0; z \\<noteq> 0\\<rbrakk> \\<Longrightarrow> Ln(of_nat r * z :: complex) = ln (of_nat r) + Ln(z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; z \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> Ln (of_nat r * z) = Ln (of_nat r) + Ln z", "using Ln_times_of_real[of \"of_nat r\" z]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < real r; z \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Ln (complex_of_real (real r) * z) =\n                    Ln (complex_of_real (real r)) + Ln z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; z \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> Ln (of_nat r * z) = Ln (of_nat r) + Ln z", "by simp"], ["", "lemma tendsto_of_real_0_I: \n  \"(f \\<longlongrightarrow> 0) G \\<Longrightarrow> ((\\<lambda>x. (of_real (f x))) \\<longlongrightarrow> (0 ::'a::real_normed_div_algebra)) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<longlongrightarrow> 0) G \\<Longrightarrow>\n    ((\\<lambda>x. of_real (f x)) \\<longlongrightarrow> (0::'a)) G", "by (subst (asm) tendsto_of_real_iff [symmetric]) simp"], ["", "lemma negligible_atLeastAtMostI: \"b \\<le> a \\<Longrightarrow> negligible {a..(b::real)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> a \\<Longrightarrow> negligible {a..b}", "by (cases \"b < a\") auto"], ["", "lemma vector_derivative_cong_eq:\n  assumes \"eventually (\\<lambda>x. x \\<in> A \\<longrightarrow> f x = g x) (nhds x)\" \"x = y\" \"A = B\" \"x \\<in> A\"\n  shows   \"vector_derivative f (at x within A) = vector_derivative g (at y within B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector_derivative f (at x within A) =\n    vector_derivative g (at y within B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vector_derivative f (at x within A) =\n    vector_derivative g (at y within B)", "from eventually_nhds_x_imp_x[OF assms(1)] assms(4)"], ["proof (chain)\npicking this:\n  x \\<in> A \\<longrightarrow> f x = g x\n  x \\<in> A", "have \"f x = g x\""], ["proof (prove)\nusing this:\n  x \\<in> A \\<longrightarrow> f x = g x\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. f x = g x", "by blast"], ["proof (state)\nthis:\n  f x = g x\n\ngoal (1 subgoal):\n 1. vector_derivative f (at x within A) =\n    vector_derivative g (at y within B)", "hence \"(\\<lambda>D. (f has_vector_derivative D) (at x within A)) = \n           (\\<lambda>D. (g has_vector_derivative D) (at x within A))\""], ["proof (prove)\nusing this:\n  f x = g x\n\ngoal (1 subgoal):\n 1. (\\<lambda>D. (f has_vector_derivative D) (at x within A)) =\n    (\\<lambda>D. (g has_vector_derivative D) (at x within A))", "using assms"], ["proof (prove)\nusing this:\n  f x = g x\n  \\<forall>\\<^sub>F x in nhds x. x \\<in> A \\<longrightarrow> f x = g x\n  x = y\n  A = B\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>D. (f has_vector_derivative D) (at x within A)) =\n    (\\<lambda>D. (g has_vector_derivative D) (at x within A))", "by (intro ext has_vector_derivative_cong_ev refl assms) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>D. (f has_vector_derivative D) (at x within A)) =\n  (\\<lambda>D. (g has_vector_derivative D) (at x within A))\n\ngoal (1 subgoal):\n 1. vector_derivative f (at x within A) =\n    vector_derivative g (at y within B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>D. (f has_vector_derivative D) (at x within A)) =\n  (\\<lambda>D. (g has_vector_derivative D) (at x within A))\n\ngoal (1 subgoal):\n 1. vector_derivative f (at x within A) =\n    vector_derivative g (at y within B)", "by (simp add: vector_derivative_def assms)"], ["proof (state)\nthis:\n  vector_derivative f (at x within A) = vector_derivative g (at y within B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma differentiable_of_real [simp]: \"of_real differentiable at x within A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_real differentiable at x within A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_real differentiable at x within A", "have \"(of_real has_vector_derivative 1) (at x within A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_real has_vector_derivative (1::'b)) (at x within A)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  (of_real has_vector_derivative (1::?'b1)) (at x within A)\n\ngoal (1 subgoal):\n 1. of_real differentiable at x within A", "thus ?thesis"], ["proof (prove)\nusing this:\n  (of_real has_vector_derivative (1::?'b1)) (at x within A)\n\ngoal (1 subgoal):\n 1. of_real differentiable at x within A", "by (rule differentiableI_vector)"], ["proof (state)\nthis:\n  of_real differentiable at x within A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma higher_deriv_cong_ev:\n  assumes \"eventually (\\<lambda>x. f x = g x) (nhds x)\" \"x = y\"\n  shows   \"(deriv ^^ n) f x = (deriv ^^ n) g y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ n) f x = (deriv ^^ n) g y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (deriv ^^ n) f x = (deriv ^^ n) g y", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in nhds x. f x = g x", "have \"eventually (\\<lambda>x. (deriv ^^ n) f x = (deriv ^^ n) g x) (nhds x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in nhds x. f x = g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds x. (deriv ^^ n) f x = (deriv ^^ n) g x", "proof (induction n arbitrary: f g)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<forall>\\<^sub>F x in nhds x. f x = g x \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in nhds x. (deriv ^^ 0) f x = (deriv ^^ 0) g x\n 2. \\<And>n f g.\n       \\<lbrakk>\\<And>f g.\n                   \\<forall>\\<^sub>F x in nhds x.\n                      f x = g x \\<Longrightarrow>\n                   \\<forall>\\<^sub>F x in nhds x.\n                      (deriv ^^ n) f x = (deriv ^^ n) g x;\n        \\<forall>\\<^sub>F x in nhds x. f x = g x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in nhds x.\n                            (deriv ^^ Suc n) f x = (deriv ^^ Suc n) g x", "case (Suc n)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in nhds x. ?f x = ?g x \\<Longrightarrow>\n  \\<forall>\\<^sub>F x in nhds x. (deriv ^^ n) ?f x = (deriv ^^ n) ?g x\n  \\<forall>\\<^sub>F x in nhds x. f x = g x\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<forall>\\<^sub>F x in nhds x. f x = g x \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in nhds x. (deriv ^^ 0) f x = (deriv ^^ 0) g x\n 2. \\<And>n f g.\n       \\<lbrakk>\\<And>f g.\n                   \\<forall>\\<^sub>F x in nhds x.\n                      f x = g x \\<Longrightarrow>\n                   \\<forall>\\<^sub>F x in nhds x.\n                      (deriv ^^ n) f x = (deriv ^^ n) g x;\n        \\<forall>\\<^sub>F x in nhds x. f x = g x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in nhds x.\n                            (deriv ^^ Suc n) f x = (deriv ^^ Suc n) g x", "from Suc.prems"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in nhds x. f x = g x", "have \"eventually (\\<lambda>y. eventually (\\<lambda>z. f z = g z) (nhds y)) (nhds x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in nhds x. f x = g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in nhds x. \\<forall>\\<^sub>F z in nhds y. f z = g z", "by (simp add: eventually_eventually)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in nhds x. \\<forall>\\<^sub>F z in nhds y. f z = g z\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<forall>\\<^sub>F x in nhds x. f x = g x \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in nhds x. (deriv ^^ 0) f x = (deriv ^^ 0) g x\n 2. \\<And>n f g.\n       \\<lbrakk>\\<And>f g.\n                   \\<forall>\\<^sub>F x in nhds x.\n                      f x = g x \\<Longrightarrow>\n                   \\<forall>\\<^sub>F x in nhds x.\n                      (deriv ^^ n) f x = (deriv ^^ n) g x;\n        \\<forall>\\<^sub>F x in nhds x. f x = g x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in nhds x.\n                            (deriv ^^ Suc n) f x = (deriv ^^ Suc n) g x", "hence \"eventually (\\<lambda>x. deriv f x = deriv g x) (nhds x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in nhds x. \\<forall>\\<^sub>F z in nhds y. f z = g z\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds x. deriv f x = deriv g x", "by eventually_elim (rule deriv_cong_ev, simp_all)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in nhds x. deriv f x = deriv g x\n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       \\<forall>\\<^sub>F x in nhds x. f x = g x \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in nhds x. (deriv ^^ 0) f x = (deriv ^^ 0) g x\n 2. \\<And>n f g.\n       \\<lbrakk>\\<And>f g.\n                   \\<forall>\\<^sub>F x in nhds x.\n                      f x = g x \\<Longrightarrow>\n                   \\<forall>\\<^sub>F x in nhds x.\n                      (deriv ^^ n) f x = (deriv ^^ n) g x;\n        \\<forall>\\<^sub>F x in nhds x. f x = g x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>\\<^sub>F x in nhds x.\n                            (deriv ^^ Suc n) f x = (deriv ^^ Suc n) g x", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in nhds x. deriv f x = deriv g x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds x.\n       (deriv ^^ Suc n) f x = (deriv ^^ Suc n) g x", "by (auto intro!: deriv_cong_ev Suc simp: funpow_Suc_right simp del: funpow.simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in nhds x. (deriv ^^ Suc n) f x = (deriv ^^ Suc n) g x\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       \\<forall>\\<^sub>F x in nhds x. f x = g x \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in nhds x. (deriv ^^ 0) f x = (deriv ^^ 0) g x", "qed auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in nhds x. (deriv ^^ n) f x = (deriv ^^ n) g x\n\ngoal (1 subgoal):\n 1. (deriv ^^ n) f x = (deriv ^^ n) g y", "from eventually_nhds_x_imp_x[OF this] assms(2)"], ["proof (chain)\npicking this:\n  (deriv ^^ n) f x = (deriv ^^ n) g x\n  x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  (deriv ^^ n) f x = (deriv ^^ n) g x\n  x = y\n\ngoal (1 subgoal):\n 1. (deriv ^^ n) f x = (deriv ^^ n) g y", "by simp"], ["proof (state)\nthis:\n  (deriv ^^ n) f x = (deriv ^^ n) g y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma deriv_of_real [simp]: \n  \"at x within A \\<noteq> bot \\<Longrightarrow> vector_derivative of_real (at x within A) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at x within A \\<noteq> bot \\<Longrightarrow>\n    vector_derivative of_real (at x within A) = (1::'a)", "by (auto intro!: vector_derivative_within derivative_eq_intros)"], ["", "lemma deriv_Re [simp]: \"deriv Re = (\\<lambda>_. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (\\<lambda>x. Re (complex_of_real x)) = (\\<lambda>_. 1)", "by (auto intro!: DERIV_imp_deriv simp: fun_eq_iff)"], ["", "lemma vector_derivative_of_real_left:\n  assumes \"f differentiable at x\"\n  shows   \"vector_derivative (\\<lambda>x. of_real (f x)) (at x) = of_real (deriv f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector_derivative (\\<lambda>x. of_real (f x)) (at x) =\n    of_real (deriv f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vector_derivative (\\<lambda>x. of_real (f x)) (at x) =\n    of_real (deriv f x)", "have \"vector_derivative (of_real \\<circ> f) (at x) = (of_real (deriv f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector_derivative (of_real \\<circ> f) (at x) = of_real (deriv f x)", "by (subst vector_derivative_chain_at)\n       (simp_all add: scaleR_conv_of_real field_derivative_eq_vector_derivative assms)"], ["proof (state)\nthis:\n  vector_derivative (of_real \\<circ> f) (at x) = of_real (deriv f x)\n\ngoal (1 subgoal):\n 1. vector_derivative (\\<lambda>x. of_real (f x)) (at x) =\n    of_real (deriv f x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  vector_derivative (of_real \\<circ> f) (at x) = of_real (deriv f x)\n\ngoal (1 subgoal):\n 1. vector_derivative (\\<lambda>x. of_real (f x)) (at x) =\n    of_real (deriv f x)", "by (simp add: o_def)"], ["proof (state)\nthis:\n  vector_derivative (\\<lambda>x. of_real (f x)) (at x) = of_real (deriv f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vector_derivative_of_real_right:\n  assumes \"f field_differentiable at (of_real x)\"\n  shows   \"vector_derivative (\\<lambda>x. f (of_real x)) (at x) = deriv f (of_real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector_derivative (\\<lambda>x. f (of_real x)) (at x) =\n    deriv f (of_real x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vector_derivative (\\<lambda>x. f (of_real x)) (at x) =\n    deriv f (of_real x)", "have \"vector_derivative (f \\<circ> of_real) (at x) = deriv f (of_real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector_derivative (f \\<circ> of_real) (at x) = deriv f (of_real x)", "using assms"], ["proof (prove)\nusing this:\n  f field_differentiable at (of_real x)\n\ngoal (1 subgoal):\n 1. vector_derivative (f \\<circ> of_real) (at x) = deriv f (of_real x)", "by (subst vector_derivative_chain_at_general) simp_all"], ["proof (state)\nthis:\n  vector_derivative (f \\<circ> of_real) (at x) = deriv f (of_real x)\n\ngoal (1 subgoal):\n 1. vector_derivative (\\<lambda>x. f (of_real x)) (at x) =\n    deriv f (of_real x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  vector_derivative (f \\<circ> of_real) (at x) = deriv f (of_real x)\n\ngoal (1 subgoal):\n 1. vector_derivative (\\<lambda>x. f (of_real x)) (at x) =\n    deriv f (of_real x)", "by (simp add: o_def)"], ["proof (state)\nthis:\n  vector_derivative (\\<lambda>x. f (of_real x)) (at x) = deriv f (of_real x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Ln_holomorphic [holomorphic_intros]:\n  assumes \"A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\"\n  shows   \"Ln holomorphic_on (A :: complex set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln holomorphic_on A", "proof (intro holomorphic_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> Ln field_differentiable at x within A", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> Ln field_differentiable at x within A", "assume \"z \\<in> A\""], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> Ln field_differentiable at x within A", "with assms"], ["proof (chain)\npicking this:\n  A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\n  z \\<in> A", "have \"(Ln has_field_derivative inverse z) (at z within A)\""], ["proof (prove)\nusing this:\n  A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. (Ln has_field_derivative inverse z) (at z within A)", "by (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  (Ln has_field_derivative inverse z) (at z within A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow> Ln field_differentiable at x within A", "thus \"Ln field_differentiable at z within A\""], ["proof (prove)\nusing this:\n  (Ln has_field_derivative inverse z) (at z within A)\n\ngoal (1 subgoal):\n 1. Ln field_differentiable at z within A", "by (auto simp: field_differentiable_def)"], ["proof (state)\nthis:\n  Ln field_differentiable at z within A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma higher_deriv_Polygamma:\n  assumes \"z \\<notin> \\<int>\\<^sub>\\<le>\\<^sub>0\"\n  shows   \"(deriv ^^ n) (Polygamma m) z = \n             Polygamma (m + n) (z :: 'a :: {real_normed_field,euclidean_space})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ n) (Polygamma m) z = Polygamma (m + n) z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (deriv ^^ n) (Polygamma m) z = Polygamma (m + n) z", "have \"eventually (\\<lambda>u. (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u) (nhds z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ 0) (Polygamma m) u = Polygamma (m + 0) u\n 2. \\<And>n.\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ n) (Polygamma m) u =\n          Polygamma (m + n) u \\<Longrightarrow>\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ Suc n) (Polygamma m) u = Polygamma (m + Suc n) u", "case (Suc n)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F u in nhds z.\n     (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ 0) (Polygamma m) u = Polygamma (m + 0) u\n 2. \\<And>n.\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ n) (Polygamma m) u =\n          Polygamma (m + n) u \\<Longrightarrow>\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ Suc n) (Polygamma m) u = Polygamma (m + Suc n) u", "from Suc.IH"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F u in nhds z.\n     (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u", "have \"eventually (\\<lambda>z. eventually (\\<lambda>u. (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u) (nhds z)) (nhds z)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F u in nhds z.\n     (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds z.\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u", "by (simp add: eventually_eventually)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in nhds z.\n     \\<forall>\\<^sub>F u in nhds z.\n        (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ 0) (Polygamma m) u = Polygamma (m + 0) u\n 2. \\<And>n.\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ n) (Polygamma m) u =\n          Polygamma (m + n) u \\<Longrightarrow>\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ Suc n) (Polygamma m) u = Polygamma (m + Suc n) u", "hence \"eventually (\\<lambda>z. deriv ((deriv ^^ n) (Polygamma m)) z = \n             deriv (Polygamma (m + n)) z) (nhds z)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in nhds z.\n     \\<forall>\\<^sub>F u in nhds z.\n        (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds z.\n       deriv ((deriv ^^ n) (Polygamma m)) z = deriv (Polygamma (m + n)) z", "by eventually_elim (intro deriv_cong_ev refl)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in nhds z.\n     deriv ((deriv ^^ n) (Polygamma m)) z = deriv (Polygamma (m + n)) z\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ 0) (Polygamma m) u = Polygamma (m + 0) u\n 2. \\<And>n.\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ n) (Polygamma m) u =\n          Polygamma (m + n) u \\<Longrightarrow>\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ Suc n) (Polygamma m) u = Polygamma (m + Suc n) u", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in nhds z.\n     deriv ((deriv ^^ n) (Polygamma m)) z = deriv (Polygamma (m + n)) z\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ 0) (Polygamma m) u = Polygamma (m + 0) u\n 2. \\<And>n.\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ n) (Polygamma m) u =\n          Polygamma (m + n) u \\<Longrightarrow>\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ Suc n) (Polygamma m) u = Polygamma (m + Suc n) u", "have \"eventually (\\<lambda>z. z \\<in> UNIV - \\<int>\\<^sub>\\<le>\\<^sub>0) (nhds z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds z. z \\<in> UNIV - \\<int>\\<^sub>\\<le>\\<^sub>0", "using assms"], ["proof (prove)\nusing this:\n  z \\<notin> \\<int>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in nhds z. z \\<in> UNIV - \\<int>\\<^sub>\\<le>\\<^sub>0", "by (intro eventually_nhds_in_open open_Diff open_UNIV) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in nhds z. z \\<in> UNIV - \\<int>\\<^sub>\\<le>\\<^sub>0\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ 0) (Polygamma m) u = Polygamma (m + 0) u\n 2. \\<And>n.\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ n) (Polygamma m) u =\n          Polygamma (m + n) u \\<Longrightarrow>\n       \\<forall>\\<^sub>F u in nhds z.\n          (deriv ^^ Suc n) (Polygamma m) u = Polygamma (m + Suc n) u", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F z in nhds z.\n     deriv ((deriv ^^ n) (Polygamma m)) z = deriv (Polygamma (m + n)) z\n  \\<forall>\\<^sub>F z in nhds z. z \\<in> UNIV - \\<int>\\<^sub>\\<le>\\<^sub>0", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in nhds z.\n     deriv ((deriv ^^ n) (Polygamma m)) z = deriv (Polygamma (m + n)) z\n  \\<forall>\\<^sub>F z in nhds z. z \\<in> UNIV - \\<int>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ Suc n) (Polygamma m) u = Polygamma (m + Suc n) u", "by eventually_elim (simp_all add: deriv_Polygamma)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F u in nhds z.\n     (deriv ^^ Suc n) (Polygamma m) u = Polygamma (m + Suc n) u\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F u in nhds z.\n       (deriv ^^ 0) (Polygamma m) u = Polygamma (m + 0) u", "qed simp_all"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F u in nhds z.\n     (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u\n\ngoal (1 subgoal):\n 1. (deriv ^^ n) (Polygamma m) z = Polygamma (m + n) z", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F u in nhds z.\n     (deriv ^^ n) (Polygamma m) u = Polygamma (m + n) u\n\ngoal (1 subgoal):\n 1. (deriv ^^ n) (Polygamma m) z = Polygamma (m + n) z", "by (rule eventually_nhds_x_imp_x)"], ["proof (state)\nthis:\n  (deriv ^^ n) (Polygamma m) z = Polygamma (m + n) z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma higher_deriv_cmult:\n  assumes \"f holomorphic_on A\" \"x \\<in> A\" \"open A\"\n  shows   \"(deriv ^^ j) (\\<lambda>x. c * f x) x = c * (deriv ^^ j) f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (\\<lambda>x. c * f x) x = c * (deriv ^^ j) f x", "using assms"], ["proof (prove)\nusing this:\n  f holomorphic_on A\n  x \\<in> A\n  open A\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (\\<lambda>x. c * f x) x = c * (deriv ^^ j) f x", "proof (induction j arbitrary: f x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ 0) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ 0) f x\n 2. \\<And>j f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n                   \\<Longrightarrow> (deriv ^^ j) (\\<lambda>x. c * f x) x =\n                                     c * (deriv ^^ j) f x;\n        f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ Suc j) f x", "case (Suc j f x)"], ["proof (state)\nthis:\n  \\<lbrakk>?f holomorphic_on A; ?x \\<in> A; open A\\<rbrakk>\n  \\<Longrightarrow> (deriv ^^ j) (\\<lambda>x. c * ?f x) ?x =\n                    c * (deriv ^^ j) ?f ?x\n  f holomorphic_on A\n  x \\<in> A\n  open A\n\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ 0) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ 0) f x\n 2. \\<And>j f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n                   \\<Longrightarrow> (deriv ^^ j) (\\<lambda>x. c * f x) x =\n                                     c * (deriv ^^ j) f x;\n        f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ Suc j) f x", "have \"deriv ((deriv ^^ j) (\\<lambda>x. c * f x)) x = deriv (\\<lambda>x. c * (deriv ^^ j) f x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv ((deriv ^^ j) (\\<lambda>x. c * f x)) x =\n    deriv (\\<lambda>x. c * (deriv ^^ j) f x) x", "using eventually_nhds_in_open[of A x] assms(2,3) Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>open A; x \\<in> A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> A\n  x \\<in> A\n  open A\n  f holomorphic_on A\n  x \\<in> A\n  open A\n\ngoal (1 subgoal):\n 1. deriv ((deriv ^^ j) (\\<lambda>x. c * f x)) x =\n    deriv (\\<lambda>x. c * (deriv ^^ j) f x) x", "by (intro deriv_cong_ev refl) (auto elim!: eventually_mono simp: Suc.IH)"], ["proof (state)\nthis:\n  deriv ((deriv ^^ j) (\\<lambda>x. c * f x)) x =\n  deriv (\\<lambda>x. c * (deriv ^^ j) f x) x\n\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ 0) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ 0) f x\n 2. \\<And>j f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n                   \\<Longrightarrow> (deriv ^^ j) (\\<lambda>x. c * f x) x =\n                                     c * (deriv ^^ j) f x;\n        f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ Suc j) f x", "also"], ["proof (state)\nthis:\n  deriv ((deriv ^^ j) (\\<lambda>x. c * f x)) x =\n  deriv (\\<lambda>x. c * (deriv ^^ j) f x) x\n\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ 0) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ 0) f x\n 2. \\<And>j f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n                   \\<Longrightarrow> (deriv ^^ j) (\\<lambda>x. c * f x) x =\n                                     c * (deriv ^^ j) f x;\n        f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ Suc j) f x", "have \"\\<dots> = c * deriv ((deriv ^^ j) f) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (\\<lambda>x. c * (deriv ^^ j) f x) x =\n    c * deriv ((deriv ^^ j) f) x", "using Suc.prems assms(2,3)"], ["proof (prove)\nusing this:\n  f holomorphic_on A\n  x \\<in> A\n  open A\n  x \\<in> A\n  open A\n\ngoal (1 subgoal):\n 1. deriv (\\<lambda>x. c * (deriv ^^ j) f x) x =\n    c * deriv ((deriv ^^ j) f) x", "by (intro deriv_cmult holomorphic_on_imp_differentiable_at holomorphic_higher_deriv) auto"], ["proof (state)\nthis:\n  deriv (\\<lambda>x. c * (deriv ^^ j) f x) x = c * deriv ((deriv ^^ j) f) x\n\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ 0) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ 0) f x\n 2. \\<And>j f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n                   \\<Longrightarrow> (deriv ^^ j) (\\<lambda>x. c * f x) x =\n                                     c * (deriv ^^ j) f x;\n        f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ Suc j) f x", "finally"], ["proof (chain)\npicking this:\n  deriv ((deriv ^^ j) (\\<lambda>x. c * f x)) x =\n  c * deriv ((deriv ^^ j) f) x", "show ?case"], ["proof (prove)\nusing this:\n  deriv ((deriv ^^ j) (\\<lambda>x. c * f x)) x =\n  c * deriv ((deriv ^^ j) f) x\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (\\<lambda>x. c * f x) x = c * (deriv ^^ Suc j) f x", "by simp"], ["proof (state)\nthis:\n  (deriv ^^ Suc j) (\\<lambda>x. c * f x) x = c * (deriv ^^ Suc j) f x\n\ngoal (1 subgoal):\n 1. \\<And>f x.\n       \\<lbrakk>f holomorphic_on A; x \\<in> A; open A\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ 0) (\\<lambda>x. c * f x) x =\n                         c * (deriv ^^ 0) f x", "qed simp_all"], ["", "lemma higher_deriv_ln_Gamma_complex:\n  assumes \"(x::complex) \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\"\n  shows   \"(deriv ^^ j) ln_Gamma x = (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "case (Suc j')"], ["proof (state)\nthis:\n  j = Suc j'\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "have \"(deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x", "using eventually_nhds_in_open[of \"UNIV - \\<real>\\<^sub>\\<le>\\<^sub>0\" x] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>open (UNIV - \\<real>\\<^sub>\\<le>\\<^sub>0);\n   x \\<in> UNIV - \\<real>\\<^sub>\\<le>\\<^sub>0\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x.\n                       y \\<in> UNIV - \\<real>\\<^sub>\\<le>\\<^sub>0\n  x \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x", "by (intro higher_deriv_cong_ev refl)\n       (auto elim!: eventually_mono simp: open_Diff deriv_ln_Gamma_complex)"], ["proof (state)\nthis:\n  (deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "also"], ["proof (state)\nthis:\n  (deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "have \"\\<dots> = Polygamma j' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j') Digamma x = Polygamma j' x", "using assms"], ["proof (prove)\nusing this:\n  x \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (deriv ^^ j') Digamma x = Polygamma j' x", "by (subst higher_deriv_Polygamma)\n       (auto elim!: nonpos_Ints_cases simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  (deriv ^^ j') Digamma x = Polygamma j' x\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "finally"], ["proof (chain)\npicking this:\n  (deriv ^^ j') (deriv ln_Gamma) x = Polygamma j' x", "show ?thesis"], ["proof (prove)\nusing this:\n  (deriv ^^ j') (deriv ln_Gamma) x = Polygamma j' x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "using Suc"], ["proof (prove)\nusing this:\n  (deriv ^^ j') (deriv ln_Gamma) x = Polygamma j' x\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "by (simp del: funpow.simps add: funpow_Suc_right)"], ["proof (state)\nthis:\n  (deriv ^^ j) ln_Gamma x =\n  (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n\ngoal (1 subgoal):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "qed simp_all"], ["", "lemma higher_deriv_ln_Gamma_real:\n  assumes \"(x::real) > 0\"\n  shows   \"(deriv ^^ j) ln_Gamma x = (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "case (Suc j')"], ["proof (state)\nthis:\n  j = Suc j'\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "have \"(deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x", "using eventually_nhds_in_open[of \"{0<..}\" x] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {0<..}; x \\<in> {0<..}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..}\n  0 < x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x", "by (intro higher_deriv_cong_ev refl)\n       (auto elim!: eventually_mono simp: open_Diff deriv_ln_Gamma_real)"], ["proof (state)\nthis:\n  (deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "also"], ["proof (state)\nthis:\n  (deriv ^^ j') (deriv ln_Gamma) x = (deriv ^^ j') Digamma x\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "have \"\\<dots> = Polygamma j' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j') Digamma x = Polygamma j' x", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j') Digamma x = Polygamma j' x", "by (subst higher_deriv_Polygamma)\n       (auto elim!: nonpos_Ints_cases simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  (deriv ^^ j') Digamma x = Polygamma j' x\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (deriv ^^ j) ln_Gamma x =\n       (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "finally"], ["proof (chain)\npicking this:\n  (deriv ^^ j') (deriv ln_Gamma) x = Polygamma j' x", "show ?thesis"], ["proof (prove)\nusing this:\n  (deriv ^^ j') (deriv ln_Gamma) x = Polygamma j' x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "using Suc"], ["proof (prove)\nusing this:\n  (deriv ^^ j') (deriv ln_Gamma) x = Polygamma j' x\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "by (simp del: funpow.simps add: funpow_Suc_right)"], ["proof (state)\nthis:\n  (deriv ^^ j) ln_Gamma x =\n  (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)\n\ngoal (1 subgoal):\n 1. j = 0 \\<Longrightarrow>\n    (deriv ^^ j) ln_Gamma x =\n    (if j = 0 then ln_Gamma x else Polygamma (j - 1) x)", "qed simp_all"], ["", "lemma higher_deriv_ln_Gamma_complex_of_real:\n  assumes \"(x :: real) > 0\"\n  shows   \"(deriv ^^ j) ln_Gamma (complex_of_real x) = of_real ((deriv ^^ j) ln_Gamma x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) ln_Gamma x)", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) ln_Gamma x)", "by (auto simp: higher_deriv_ln_Gamma_real higher_deriv_ln_Gamma_complex\n                   ln_Gamma_complex_of_real Polygamma_of_real)"], ["", "(* END TODO *)\n\n(* TODO: could be automated with Laurent series expansions in the future *)"], ["", "lemma stirling_limit_aux1: \n  \"((\\<lambda>y. Ln (1 + z * of_real y) / of_real y) \\<longlongrightarrow> z) (at_right 0)\" for z :: complex"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "proof (cases \"z = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z = 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)\n 2. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "case True"], ["proof (state)\nthis:\n  z = 0\n\ngoal (2 subgoals):\n 1. z = 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)\n 2. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "then"], ["proof (chain)\npicking this:\n  z = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  z = 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       Ln (1 + z * complex_of_real y) /\n       complex_of_real y) \\<longlongrightarrow>\n   z)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "case False"], ["proof (state)\nthis:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "have \"((\\<lambda>y. ln (1 + z * of_real y)) has_vector_derivative 1 * z) (at 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y. Ln (1 + z * complex_of_real y)) has_vector_derivative\n     1 * z)\n     (at 0)", "by (rule has_vector_derivative_real_field) (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>y. Ln (1 + z * complex_of_real y)) has_vector_derivative 1 * z)\n   (at 0)\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>y. Ln (1 + z * complex_of_real y)) has_vector_derivative 1 * z)\n   (at 0)", "have \"(\\<lambda>y. (Ln (1 + z * of_real y) - of_real y * z) / of_real \\<bar>y\\<bar>) \\<midarrow>0\\<rightarrow> 0\""], ["proof (prove)\nusing this:\n  ((\\<lambda>y. Ln (1 + z * complex_of_real y)) has_vector_derivative 1 * z)\n   (at 0)\n\ngoal (1 subgoal):\n 1. (\\<lambda>y.\n        (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n        complex_of_real \\<bar>y\\<bar>)\n    \\<midarrow>0\\<rightarrow> 0", "by (auto simp add: has_vector_derivative_def has_derivative_def netlimit_at \n          scaleR_conv_of_real field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>y.\n      (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n      complex_of_real \\<bar>y\\<bar>)\n  \\<midarrow>0\\<rightarrow> 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>y.\n      (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n      complex_of_real \\<bar>y\\<bar>)\n  \\<midarrow>0\\<rightarrow> 0", "have \"((\\<lambda>y. (Ln (1 + z * of_real y) - of_real y * z) / of_real \\<bar>y\\<bar>) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\nusing this:\n  (\\<lambda>y.\n      (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n      complex_of_real \\<bar>y\\<bar>)\n  \\<midarrow>0\\<rightarrow> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n         complex_of_real \\<bar>y\\<bar>) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "by (rule filterlim_mono[OF _ _ at_le]) simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n       complex_of_real \\<bar>y\\<bar>) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n       complex_of_real \\<bar>y\\<bar>) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "have \"?this \\<longleftrightarrow> ((\\<lambda>y. Ln (1 + z * of_real y) / (of_real y) - z) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n         complex_of_real \\<bar>y\\<bar>) \\<longlongrightarrow>\n     0)\n     (at_right 0) =\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) / complex_of_real y -\n         z) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "using eventually_at_right_less[of \"0::real\"]"], ["proof (prove)\nusing this:\n  eventually ((<) 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n         complex_of_real \\<bar>y\\<bar>) \\<longlongrightarrow>\n     0)\n     (at_right 0) =\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) / complex_of_real y -\n         z) \\<longlongrightarrow>\n     0)\n     (at_right 0)", "by (intro filterlim_cong refl) (auto elim!: eventually_mono simp: field_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       (Ln (1 + z * complex_of_real y) - complex_of_real y * z) /\n       complex_of_real \\<bar>y\\<bar>) \\<longlongrightarrow>\n   0)\n   (at_right 0) =\n  ((\\<lambda>y.\n       Ln (1 + z * complex_of_real y) / complex_of_real y -\n       z) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0 \\<Longrightarrow>\n    ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>y.\n       Ln (1 + z * complex_of_real y) / complex_of_real y -\n       z) \\<longlongrightarrow>\n   0)\n   (at_right 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>y.\n       Ln (1 + z * complex_of_real y) / complex_of_real y -\n       z) \\<longlongrightarrow>\n   0)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         Ln (1 + z * complex_of_real y) /\n         complex_of_real y) \\<longlongrightarrow>\n     z)\n     (at_right 0)", "by (simp only: LIM_zero_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>y.\n       Ln (1 + z * complex_of_real y) /\n       complex_of_real y) \\<longlongrightarrow>\n   z)\n   (at_right 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_limit_aux2: \n  \"((\\<lambda>y. y * Ln (1 + z / of_real y)) \\<longlongrightarrow> z) at_top\" for z :: complex"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         complex_of_real y *\n         Ln (1 + z / complex_of_real y)) \\<longlongrightarrow>\n     z)\n     at_top", "using stirling_limit_aux1[of z]"], ["proof (prove)\nusing this:\n  ((\\<lambda>y.\n       Ln (1 + z * complex_of_real y) /\n       complex_of_real y) \\<longlongrightarrow>\n   z)\n   (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>y.\n         complex_of_real y *\n         Ln (1 + z / complex_of_real y)) \\<longlongrightarrow>\n     z)\n     at_top", "by (subst filterlim_at_top_to_right) (simp add: field_simps)"], ["", "lemma Union_atLeastAtMost: \n  assumes \"N > 0\" \n  shows   \"(\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)}) = {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)}) = {0..real N}", "proof (intro equalityI subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{0..<N}.\n                   {real n..real (n + 1)}) \\<Longrightarrow>\n       x \\<in> {0..real N}\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{0..<N}.\n                   {real n..real (n + 1)}) \\<Longrightarrow>\n       x \\<in> {0..real N}\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})", "assume x: \"x \\<in> {0..real N}\""], ["proof (state)\nthis:\n  x \\<in> {0..real N}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{0..<N}.\n                   {real n..real (n + 1)}) \\<Longrightarrow>\n       x \\<in> {0..real N}\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})", "thus \"x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})\""], ["proof (prove)\nusing this:\n  x \\<in> {0..real N}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})", "proof (cases \"x = real N\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> {0..real N}; x = real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})\n 2. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "case True"], ["proof (state)\nthis:\n  x = real N\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> {0..real N}; x = real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})\n 2. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "with assms"], ["proof (chain)\npicking this:\n  0 < N\n  x = real N", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < N\n  x = real N\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})", "by (auto intro!: bexI[of _ \"N - 1\"])"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "case False"], ["proof (state)\nthis:\n  x \\<noteq> real N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "with x"], ["proof (chain)\npicking this:\n  x \\<in> {0..real N}\n  x \\<noteq> real N", "have x: \"x \\<ge> 0\" \"x < real N\""], ["proof (prove)\nusing this:\n  x \\<in> {0..real N}\n  x \\<noteq> real N\n\ngoal (1 subgoal):\n 1. 0 \\<le> x &&& x < real N", "by simp_all"], ["proof (state)\nthis:\n  0 \\<le> x\n  x < real N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "hence \"x \\<ge> real (nat \\<lfloor>x\\<rfloor>)\" \"x \\<le> real (nat \\<lfloor>x\\<rfloor> + 1)\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n  x < real N\n\ngoal (1 subgoal):\n 1. real (nat \\<lfloor>x\\<rfloor>) \\<le> x &&&\n    x \\<le> real (nat \\<lfloor>x\\<rfloor> + 1)", "by linarith+"], ["proof (state)\nthis:\n  real (nat \\<lfloor>x\\<rfloor>) \\<le> x\n  x \\<le> real (nat \\<lfloor>x\\<rfloor> + 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "moreover"], ["proof (state)\nthis:\n  real (nat \\<lfloor>x\\<rfloor>) \\<le> x\n  x \\<le> real (nat \\<lfloor>x\\<rfloor> + 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "from x"], ["proof (chain)\npicking this:\n  0 \\<le> x\n  x < real N", "have \"nat \\<lfloor>x\\<rfloor> < N\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n  x < real N\n\ngoal (1 subgoal):\n 1. nat \\<lfloor>x\\<rfloor> < N", "by linarith"], ["proof (state)\nthis:\n  nat \\<lfloor>x\\<rfloor> < N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "ultimately"], ["proof (chain)\npicking this:\n  real (nat \\<lfloor>x\\<rfloor>) \\<le> x\n  x \\<le> real (nat \\<lfloor>x\\<rfloor> + 1)\n  nat \\<lfloor>x\\<rfloor> < N", "have \"\\<exists>n\\<in>{0..<N}. x \\<in> {real n..real (n + 1)}\""], ["proof (prove)\nusing this:\n  real (nat \\<lfloor>x\\<rfloor>) \\<le> x\n  x \\<le> real (nat \\<lfloor>x\\<rfloor> + 1)\n  nat \\<lfloor>x\\<rfloor> < N\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>{0..<N}. x \\<in> {real n..real (n + 1)}", "by (intro bexI[of _ \"nat \\<lfloor>x\\<rfloor>\"]) simp_all"], ["proof (state)\nthis:\n  \\<exists>n\\<in>{0..<N}. x \\<in> {real n..real (n + 1)}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> {0..real N}; x \\<noteq> real N\\<rbrakk>\n    \\<Longrightarrow> x \\<in> (\\<Union>n\\<in>{0..<N}.\n                                  {real n..real (n + 1)})", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>{0..<N}. x \\<in> {real n..real (n + 1)}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})", "by blast"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{0..<N}.\n                   {real n..real (n + 1)}) \\<Longrightarrow>\n       x \\<in> {0..real N}", "qed auto"], ["", "subsection \\<open>Cones in the complex plane\\<close>"], ["", "definition complex_cone :: \"real \\<Rightarrow> real \\<Rightarrow> complex set\" where\n  \"complex_cone a b = {z. \\<exists>y\\<in>{a..b}. z = rcis (norm z) y}\""], ["", "abbreviation complex_cone' :: \"real \\<Rightarrow> complex set\" where\n  \"complex_cone' a \\<equiv> complex_cone (-a) a\""], ["", "lemma zero_in_complex_cone [simp, intro]: \"a \\<le> b \\<Longrightarrow> 0 \\<in> complex_cone a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> b \\<Longrightarrow> 0 \\<in> complex_cone a b", "by (auto simp: complex_cone_def)"], ["", "lemma complex_coneE:\n  assumes \"z \\<in> complex_cone a b\"\n  obtains r \\<alpha> where \"r \\<ge> 0\" \"\\<alpha> \\<in> {a..b}\" \"z = rcis r \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r \\<alpha>.\n        \\<lbrakk>0 \\<le> r; \\<alpha> \\<in> {a..b};\n         z = rcis r \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>r \\<alpha>.\n        \\<lbrakk>0 \\<le> r; \\<alpha> \\<in> {a..b};\n         z = rcis r \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  z \\<in> complex_cone a b", "obtain y where \"y \\<in> {a..b}\" \"z = rcis (norm z) y\""], ["proof (prove)\nusing this:\n  z \\<in> complex_cone a b\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> {a..b}; z = rcis (cmod z) y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding complex_cone_def"], ["proof (prove)\nusing this:\n  z \\<in> {z. \\<exists>y\\<in>{a..b}. z = rcis (cmod z) y}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> {a..b}; z = rcis (cmod z) y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> {a..b}\n  z = rcis (cmod z) y\n\ngoal (1 subgoal):\n 1. (\\<And>r \\<alpha>.\n        \\<lbrakk>0 \\<le> r; \\<alpha> \\<in> {a..b};\n         z = rcis r \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> {a..b}\n  z = rcis (cmod z) y\n\ngoal (1 subgoal):\n 1. thesis", "using that[of \"norm z\" y]"], ["proof (prove)\nusing this:\n  y \\<in> {a..b}\n  z = rcis (cmod z) y\n  \\<lbrakk>0 \\<le> cmod z; y \\<in> {a..b}; z = rcis (cmod z) y\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arg_cis [simp]:\n  assumes \"x \\<in> {-pi<..pi}\"\n  shows   \"arg (cis x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg (cis x) = x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> {- pi<..pi}\n\ngoal (1 subgoal):\n 1. arg (cis x) = x", "by (intro arg_unique) auto"], ["", "lemma arg_mult_of_real_left [simp]:\n  assumes \"r > 0\"\n  shows   \"arg (of_real r * z) = arg z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg (complex_of_real r * z) = arg z", "proof (cases \"z = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z = 0 \\<Longrightarrow> arg (complex_of_real r * z) = arg z\n 2. z \\<noteq> 0 \\<Longrightarrow> arg (complex_of_real r * z) = arg z", "case False"], ["proof (state)\nthis:\n  z \\<noteq> 0\n\ngoal (2 subgoals):\n 1. z = 0 \\<Longrightarrow> arg (complex_of_real r * z) = arg z\n 2. z \\<noteq> 0 \\<Longrightarrow> arg (complex_of_real r * z) = arg z", "thus ?thesis"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. arg (complex_of_real r * z) = arg z", "using arg_bounded[of z] assms"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n  - pi < arg z \\<and> arg z \\<le> pi\n  0 < r\n\ngoal (1 subgoal):\n 1. arg (complex_of_real r * z) = arg z", "by (intro arg_unique) (auto simp: sgn_mult sgn_of_real cis_arg)"], ["proof (state)\nthis:\n  arg (complex_of_real r * z) = arg z\n\ngoal (1 subgoal):\n 1. z = 0 \\<Longrightarrow> arg (complex_of_real r * z) = arg z", "qed auto"], ["", "lemma arg_mult_of_real_right [simp]:\n  assumes \"r > 0\"\n  shows   \"arg (z * of_real r) = arg z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg (z * complex_of_real r) = arg z", "by (subst mult.commute, subst arg_mult_of_real_left) (simp_all add: assms)"], ["", "lemma arg_rcis [simp]:\n  assumes \"x \\<in> {-pi<..pi}\" \"r > 0\"\n  shows   \"arg (rcis r x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg (rcis r x) = x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> {- pi<..pi}\n  0 < r\n\ngoal (1 subgoal):\n 1. arg (rcis r x) = x", "by (simp add: rcis_def)"], ["", "lemma rcis_in_complex_cone [intro]: \n  assumes \"\\<alpha> \\<in> {a..b}\" \"r \\<ge> 0\"\n  shows   \"rcis r \\<alpha> \\<in> complex_cone a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rcis r \\<alpha> \\<in> complex_cone a b", "using assms"], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> {a..b}\n  0 \\<le> r\n\ngoal (1 subgoal):\n 1. rcis r \\<alpha> \\<in> complex_cone a b", "by (auto simp: complex_cone_def)"], ["", "lemma arg_imp_in_complex_cone:\n  assumes \"arg z \\<in> {a..b}\"\n  shows   \"z \\<in> complex_cone a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> complex_cone a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<in> complex_cone a b", "have \"z = rcis (norm z) (arg z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = rcis (cmod z) (arg z)", "by (simp add: rcis_cmod_arg)"], ["proof (state)\nthis:\n  z = rcis (cmod z) (arg z)\n\ngoal (1 subgoal):\n 1. z \\<in> complex_cone a b", "also"], ["proof (state)\nthis:\n  z = rcis (cmod z) (arg z)\n\ngoal (1 subgoal):\n 1. z \\<in> complex_cone a b", "have \"\\<dots> \\<in> complex_cone a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rcis (cmod z) (arg z) \\<in> complex_cone a b", "using assms"], ["proof (prove)\nusing this:\n  arg z \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. rcis (cmod z) (arg z) \\<in> complex_cone a b", "by auto"], ["proof (state)\nthis:\n  rcis (cmod z) (arg z) \\<in> complex_cone a b\n\ngoal (1 subgoal):\n 1. z \\<in> complex_cone a b", "finally"], ["proof (chain)\npicking this:\n  z \\<in> complex_cone a b", "show ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> complex_cone a b\n\ngoal (1 subgoal):\n 1. z \\<in> complex_cone a b", "."], ["proof (state)\nthis:\n  z \\<in> complex_cone a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complex_cone_altdef:\n  assumes \"-pi < a\" \"a \\<le> b\" \"b \\<le> pi\"\n  shows   \"complex_cone a b = insert 0 {z. arg z \\<in> {a..b}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_cone a b = insert 0 {z. arg z \\<in> {a..b}}", "proof (intro equalityI subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> complex_cone a b \\<Longrightarrow>\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}}\n 2. \\<And>x.\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}} \\<Longrightarrow>\n       x \\<in> complex_cone a b", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> complex_cone a b \\<Longrightarrow>\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}}\n 2. \\<And>x.\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}} \\<Longrightarrow>\n       x \\<in> complex_cone a b", "assume \"z \\<in> complex_cone a b\""], ["proof (state)\nthis:\n  z \\<in> complex_cone a b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> complex_cone a b \\<Longrightarrow>\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}}\n 2. \\<And>x.\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}} \\<Longrightarrow>\n       x \\<in> complex_cone a b", "then"], ["proof (chain)\npicking this:\n  z \\<in> complex_cone a b", "obtain r \\<alpha> where *: \"r \\<ge> 0\" \"\\<alpha> \\<in> {a..b}\" \"z = rcis r \\<alpha>\""], ["proof (prove)\nusing this:\n  z \\<in> complex_cone a b\n\ngoal (1 subgoal):\n 1. (\\<And>r \\<alpha>.\n        \\<lbrakk>0 \\<le> r; \\<alpha> \\<in> {a..b};\n         z = rcis r \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: complex_coneE)"], ["proof (state)\nthis:\n  0 \\<le> r\n  \\<alpha> \\<in> {a..b}\n  z = rcis r \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> complex_cone a b \\<Longrightarrow>\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}}\n 2. \\<And>x.\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}} \\<Longrightarrow>\n       x \\<in> complex_cone a b", "have \"arg z \\<in> {a..b}\" if [simp]: \"z \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg z \\<in> {a..b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. arg z \\<in> {a..b}", "have \"r > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < r", "using that *"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n  0 \\<le> r\n  \\<alpha> \\<in> {a..b}\n  z = rcis r \\<alpha>\n\ngoal (1 subgoal):\n 1. 0 < r", "by (subst (asm) *) auto"], ["proof (state)\nthis:\n  0 < r\n\ngoal (1 subgoal):\n 1. arg z \\<in> {a..b}", "hence \"\\<alpha> \\<in> {a..b}\""], ["proof (prove)\nusing this:\n  0 < r\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<in> {a..b}", "using *(1,2) assms"], ["proof (prove)\nusing this:\n  0 < r\n  0 \\<le> r\n  \\<alpha> \\<in> {a..b}\n  - pi < a\n  a \\<le> b\n  b \\<le> pi\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<in> {a..b}", "by (auto simp: *(1))"], ["proof (state)\nthis:\n  \\<alpha> \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. arg z \\<in> {a..b}", "moreover"], ["proof (state)\nthis:\n  \\<alpha> \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. arg z \\<in> {a..b}", "from assms *(2)"], ["proof (chain)\npicking this:\n  - pi < a\n  a \\<le> b\n  b \\<le> pi\n  \\<alpha> \\<in> {a..b}", "have \"\\<alpha> \\<in> {-pi<..pi}\""], ["proof (prove)\nusing this:\n  - pi < a\n  a \\<le> b\n  b \\<le> pi\n  \\<alpha> \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<in> {- pi<..pi}", "by auto"], ["proof (state)\nthis:\n  \\<alpha> \\<in> {- pi<..pi}\n\ngoal (1 subgoal):\n 1. arg z \\<in> {a..b}", "ultimately"], ["proof (chain)\npicking this:\n  \\<alpha> \\<in> {a..b}\n  \\<alpha> \\<in> {- pi<..pi}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> {a..b}\n  \\<alpha> \\<in> {- pi<..pi}\n\ngoal (1 subgoal):\n 1. arg z \\<in> {a..b}", "using *(3) \\<open>r > 0\\<close>"], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> {a..b}\n  \\<alpha> \\<in> {- pi<..pi}\n  z = rcis r \\<alpha>\n  0 < r\n\ngoal (1 subgoal):\n 1. arg z \\<in> {a..b}", "by (subst *) auto"], ["proof (state)\nthis:\n  arg z \\<in> {a..b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<noteq> 0 \\<Longrightarrow> arg z \\<in> {a..b}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> complex_cone a b \\<Longrightarrow>\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}}\n 2. \\<And>x.\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}} \\<Longrightarrow>\n       x \\<in> complex_cone a b", "thus \"z \\<in> insert 0 {z. arg z \\<in> {a..b}}\""], ["proof (prove)\nusing this:\n  z \\<noteq> 0 \\<Longrightarrow> arg z \\<in> {a..b}\n\ngoal (1 subgoal):\n 1. z \\<in> insert 0 {z. arg z \\<in> {a..b}}", "by auto"], ["proof (state)\nthis:\n  z \\<in> insert 0 {z. arg z \\<in> {a..b}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert 0 {z. arg z \\<in> {a..b}} \\<Longrightarrow>\n       x \\<in> complex_cone a b", "qed (use assms in \\<open>auto intro: arg_imp_in_complex_cone\\<close>)"], ["", "lemma nonneg_of_real_in_complex_cone [simp, intro]:\n  assumes \"x \\<ge> 0\" \"a \\<le> 0\" \"0 \\<le> b\"\n  shows   \"of_real x \\<in> complex_cone a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> complex_cone a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> complex_cone a b", "from assms"], ["proof (chain)\npicking this:\n  0 \\<le> x\n  a \\<le> 0\n  0 \\<le> b", "have \"rcis x 0 \\<in> complex_cone a b\""], ["proof (prove)\nusing this:\n  0 \\<le> x\n  a \\<le> 0\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. rcis x 0 \\<in> complex_cone a b", "by (intro rcis_in_complex_cone) auto"], ["proof (state)\nthis:\n  rcis x 0 \\<in> complex_cone a b\n\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> complex_cone a b", "thus ?thesis"], ["proof (prove)\nusing this:\n  rcis x 0 \\<in> complex_cone a b\n\ngoal (1 subgoal):\n 1. complex_of_real x \\<in> complex_cone a b", "by simp"], ["proof (state)\nthis:\n  complex_of_real x \\<in> complex_cone a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma one_in_complex_cone [simp, intro]: \"a \\<le> 0 \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> 1 \\<in> complex_cone a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> 0; 0 \\<le> b\\<rbrakk>\n    \\<Longrightarrow> 1 \\<in> complex_cone a b", "using nonneg_of_real_in_complex_cone[of 1]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> 1; ?a \\<le> 0; 0 \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> complex_of_real 1 \\<in> complex_cone ?a ?b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> 0; 0 \\<le> b\\<rbrakk>\n    \\<Longrightarrow> 1 \\<in> complex_cone a b", "by (simp del: nonneg_of_real_in_complex_cone)"], ["", "lemma of_nat_in_complex_cone [simp, intro]: \"a \\<le> 0 \\<Longrightarrow> 0 \\<le> b \\<Longrightarrow> of_nat n \\<in> complex_cone a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> 0; 0 \\<le> b\\<rbrakk>\n    \\<Longrightarrow> of_nat n \\<in> complex_cone a b", "using nonneg_of_real_in_complex_cone[of \"real n\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> real n; ?a \\<le> 0; 0 \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> complex_of_real (real n) \\<in> complex_cone ?a ?b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> 0; 0 \\<le> b\\<rbrakk>\n    \\<Longrightarrow> of_nat n \\<in> complex_cone a b", "by (simp del: nonneg_of_real_in_complex_cone)"], ["", "subsection \\<open>Another integral representation of the Beta function\\<close>"], ["", "lemma complex_cone_inter_nonpos_Reals:\n  assumes \"-pi < a\" \"a \\<le> b\" \"b < pi\"\n  shows   \"complex_cone a b \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_cone a b \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {0}", "proof (safe elim!: nonpos_Reals_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x r.\n       \\<lbrakk>complex_of_real r \\<notin> {};\n        complex_of_real r \\<in> complex_cone a b; r \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> complex_of_real r = 0\n 2. \\<And>x. 0 \\<in> complex_cone a b\n 3. \\<And>x. 0 \\<in> \\<real>\\<^sub>\\<le>\\<^sub>0", "fix x :: real"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x r.\n       \\<lbrakk>complex_of_real r \\<notin> {};\n        complex_of_real r \\<in> complex_cone a b; r \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> complex_of_real r = 0\n 2. \\<And>x. 0 \\<in> complex_cone a b\n 3. \\<And>x. 0 \\<in> \\<real>\\<^sub>\\<le>\\<^sub>0", "assume \"complex_of_real x \\<in> complex_cone a b\" \"x \\<le> 0\""], ["proof (state)\nthis:\n  complex_of_real x \\<in> complex_cone a b\n  x \\<le> 0\n\ngoal (3 subgoals):\n 1. \\<And>x r.\n       \\<lbrakk>complex_of_real r \\<notin> {};\n        complex_of_real r \\<in> complex_cone a b; r \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> complex_of_real r = 0\n 2. \\<And>x. 0 \\<in> complex_cone a b\n 3. \\<And>x. 0 \\<in> \\<real>\\<^sub>\\<le>\\<^sub>0", "hence \"\\<not>(x < 0)\""], ["proof (prove)\nusing this:\n  complex_of_real x \\<in> complex_cone a b\n  x \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> x < 0", "using assms"], ["proof (prove)\nusing this:\n  complex_of_real x \\<in> complex_cone a b\n  x \\<le> 0\n  - pi < a\n  a \\<le> b\n  b < pi\n\ngoal (1 subgoal):\n 1. \\<not> x < 0", "by (intro notI) (auto simp: complex_cone_altdef)"], ["proof (state)\nthis:\n  \\<not> x < 0\n\ngoal (3 subgoals):\n 1. \\<And>x r.\n       \\<lbrakk>complex_of_real r \\<notin> {};\n        complex_of_real r \\<in> complex_cone a b; r \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> complex_of_real r = 0\n 2. \\<And>x. 0 \\<in> complex_cone a b\n 3. \\<And>x. 0 \\<in> \\<real>\\<^sub>\\<le>\\<^sub>0", "with \\<open>x \\<le> 0\\<close>"], ["proof (chain)\npicking this:\n  x \\<le> 0\n  \\<not> x < 0", "show \"complex_of_real x = 0\""], ["proof (prove)\nusing this:\n  x \\<le> 0\n  \\<not> x < 0\n\ngoal (1 subgoal):\n 1. complex_of_real x = 0", "by auto"], ["proof (state)\nthis:\n  complex_of_real x = 0\n\ngoal (2 subgoals):\n 1. \\<And>x. 0 \\<in> complex_cone a b\n 2. \\<And>x. 0 \\<in> \\<real>\\<^sub>\\<le>\\<^sub>0", "qed (use assms in auto)"], ["", "theorem \n  assumes a: \"a > 0\" and b: \"b > (0 :: real)\"\n  shows has_integral_Beta_real': \n          \"((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral Beta a b) {0<..}\"\n    and Beta_conv_nn_integral:\n          \"Beta a b = (\\<integral>\\<^sup>+u. ennreal (indicator {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..} &&&\n    ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "define I where \n    \"I = (\\<integral>\\<^sup>+u. ennreal (indicator {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) \\<partial>lborel)\""], ["proof (state)\nthis:\n  I =\n  \\<integral>\\<^sup>+ u. ennreal\n                          (indicat_real {0<..} u * u powr (b - 1) /\n                           (1 + u) powr (a + b))\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"Gamma (a + b) > 0\" \"Beta a b > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Gamma (a + b) &&& 0 < Beta a b", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n  0 < b\n\ngoal (1 subgoal):\n 1. 0 < Gamma (a + b) &&& 0 < Beta a b", "by (simp_all add: add_pos_pos Beta_def)"], ["proof (state)\nthis:\n  0 < Gamma (a + b)\n  0 < Beta a b\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "from a b"], ["proof (chain)\npicking this:\n  0 < a\n  0 < b", "have \"ennreal (Gamma a * Gamma b) =\n    (\\<integral>\\<^sup>+ t. ennreal (indicator {0..} t * t powr (a - 1) / exp t) \\<partial>lborel) *\n    (\\<integral>\\<^sup>+ t. ennreal (indicator {0..} t * t powr (b - 1) / exp t) \\<partial>lborel)\""], ["proof (prove)\nusing this:\n  0 < a\n  0 < b\n\ngoal (1 subgoal):\n 1. ennreal (Gamma a * Gamma b) =\n    \\<integral>\\<^sup>+ t. ennreal\n                            (indicat_real {0..} t * t powr (a - 1) / exp t)\n                       \\<partial>lborel *\n    \\<integral>\\<^sup>+ t. ennreal\n                            (indicat_real {0..} t * t powr (b - 1) / exp t)\n                       \\<partial>lborel", "by (subst ennreal_mult') (simp_all add: Gamma_conv_nn_integral_real)"], ["proof (state)\nthis:\n  ennreal (Gamma a * Gamma b) =\n  \\<integral>\\<^sup>+ t. ennreal\n                          (indicat_real {0..} t * t powr (a - 1) / exp t)\n                     \\<partial>lborel *\n  \\<integral>\\<^sup>+ t. ennreal\n                          (indicat_real {0..} t * t powr (b - 1) / exp t)\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  ennreal (Gamma a * Gamma b) =\n  \\<integral>\\<^sup>+ t. ennreal\n                          (indicat_real {0..} t * t powr (a - 1) / exp t)\n                     \\<partial>lborel *\n  \\<integral>\\<^sup>+ t. ennreal\n                          (indicat_real {0..} t * t powr (b - 1) / exp t)\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+t. \\<integral>\\<^sup>+u. ennreal (indicator {0..} t * t powr (a - 1) / exp t) *\n                            ennreal (indicator {0..} u * u powr (b - 1) / exp u) \\<partial>lborel \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. ennreal\n                            (indicat_real {0..} t * t powr (a - 1) / exp t)\n                       \\<partial>lborel *\n    \\<integral>\\<^sup>+ t. ennreal\n                            (indicat_real {0..} t * t powr (b - 1) / exp t)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ u.\n          ennreal (indicat_real {0..} t * t powr (a - 1) / exp t) *\n          ennreal (indicat_real {0..} u * u powr (b - 1) / exp u)\n        \\<partial>lborel\n                       \\<partial>lborel", "by (simp add: nn_integral_cmult nn_integral_multc)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. ennreal\n                          (indicat_real {0..} t * t powr (a - 1) / exp t)\n                     \\<partial>lborel *\n  \\<integral>\\<^sup>+ t. ennreal\n                          (indicat_real {0..} t * t powr (b - 1) / exp t)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ u.\n        ennreal (indicat_real {0..} t * t powr (a - 1) / exp t) *\n        ennreal (indicat_real {0..} u * u powr (b - 1) / exp u)\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. ennreal\n                          (indicat_real {0..} t * t powr (a - 1) / exp t)\n                     \\<partial>lborel *\n  \\<integral>\\<^sup>+ t. ennreal\n                          (indicat_real {0..} t * t powr (b - 1) / exp t)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ u.\n        ennreal (indicat_real {0..} t * t powr (a - 1) / exp t) *\n        ennreal (indicat_real {0..} u * u powr (b - 1) / exp u)\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+t. indicator {0<..} t * (\\<integral>\\<^sup>+u. indicator {0..} u * t powr (a - 1) * u powr (b - 1)\n                            / exp (t + u) \\<partial>lborel) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ u.\n          ennreal (indicat_real {0..} t * t powr (a - 1) / exp t) *\n          ennreal (indicat_real {0..} u * u powr (b - 1) / exp u)\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n            exp (t + x))\n        \\<partial>lborel\n                       \\<partial>lborel", "by (intro nn_integral_cong_AE AE_I[of _ _ \"{0}\"])\n       (auto simp: indicator_def divide_ennreal ennreal_mult' [symmetric] exp_add mult_ac)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ u.\n        ennreal (indicat_real {0..} t * t powr (a - 1) / exp t) *\n        ennreal (indicat_real {0..} u * u powr (b - 1) / exp u)\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n          exp (t + x))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ u.\n        ennreal (indicat_real {0..} t * t powr (a - 1) / exp t) *\n        ennreal (indicat_real {0..} u * u powr (b - 1) / exp u)\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n          exp (t + x))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+t. indicator {0<..} t * (\\<integral>\\<^sup>+u. indicator {0..} u * t powr (a - 1) * u powr (b - 1)\n                            / exp (t + u) \n                    \\<partial>(density (distr lborel borel ((*) t)) (\\<lambda>x. ennreal \\<bar>t\\<bar>))) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n            exp (t + x))\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n            exp (t + x))\n        \\<partial>density (distr lborel borel ((*) t))\n                   (\\<lambda>x. ennreal \\<bar>t\\<bar>)\n                       \\<partial>lborel", "by (intro nn_integral_cong mult_indicator_cong, subst lborel_distr_mult' [symmetric]) auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n          exp (t + x))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n          exp (t + x))\n      \\<partial>density (distr lborel borel ((*) t))\n                 (\\<lambda>x. ennreal \\<bar>t\\<bar>)\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n          exp (t + x))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n          exp (t + x))\n      \\<partial>density (distr lborel borel ((*) t))\n                 (\\<lambda>x. ennreal \\<bar>t\\<bar>)\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+(t::real). indicator {0<..} t * (\\<integral>\\<^sup>+u. \n                     indicator {0..} (u * t) * t powr a *\n                     (u * t) powr (b - 1) / exp (t + t * u) \\<partial>lborel) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n            exp (t + x))\n        \\<partial>density (distr lborel borel ((*) t))\n                   (\\<lambda>x. ennreal \\<bar>t\\<bar>)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0..} (x * t) * t powr a * (x * t) powr (b - 1) /\n            exp (t + t * x))\n        \\<partial>lborel\n                       \\<partial>lborel", "by (intro nn_integral_cong mult_indicator_cong)\n       (auto simp: nn_integral_density nn_integral_distr algebra_simps powr_diff\n             simp flip: ennreal_mult)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n          exp (t + x))\n      \\<partial>density (distr lborel borel ((*) t))\n                 (\\<lambda>x. ennreal \\<bar>t\\<bar>)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} (x * t) * t powr a * (x * t) powr (b - 1) /\n          exp (t + t * x))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} x * t powr (a - 1) * x powr (b - 1) /\n          exp (t + x))\n      \\<partial>density (distr lborel borel ((*) t))\n                 (\\<lambda>x. ennreal \\<bar>t\\<bar>)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} (x * t) * t powr a * (x * t) powr (b - 1) /\n          exp (t + t * x))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+(t::real). \\<integral>\\<^sup>+u. indicator ({0<..}\\<times>{0..}) (t, u) *\n                     t powr a * (u * t) powr (b - 1) / exp (t * (u + 1)) \\<partial>lborel \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0..} (x * t) * t powr a * (x * t) powr (b - 1) /\n            exp (t + t * x))\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr a *\n            (x * t) powr (b - 1) /\n            exp (t * (x + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel", "by (subst nn_integral_cmult [symmetric], simp, intro nn_integral_cong)\n       (auto simp: indicator_def zero_le_mult_iff algebra_simps)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} (x * t) * t powr a * (x * t) powr (b - 1) /\n          exp (t + t * x))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr a *\n          (x * t) powr (b - 1) /\n          exp (t * (x + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. indicator {0<..} t *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0..} (x * t) * t powr a * (x * t) powr (b - 1) /\n          exp (t + t * x))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr a *\n          (x * t) powr (b - 1) /\n          exp (t * (x + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+(t::real). \\<integral>\\<^sup>+u. indicator ({0<..}\\<times>{0..}) (t, u) *\n                     t powr (a + b - 1) * u powr (b - 1) / exp (t * (u + 1)) \\<partial>lborel \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr a *\n            (x * t) powr (b - 1) /\n            exp (t * (x + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real ({0<..} \\<times> {0..}) (t, x) *\n            t powr (a + b - 1) *\n            x powr (b - 1) /\n            exp (t * (x + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel", "by (intro nn_integral_cong) (auto simp: powr_add powr_diff indicator_def powr_mult field_simps)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr a *\n          (x * t) powr (b - 1) /\n          exp (t * (x + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr (a + b - 1) *\n          x powr (b - 1) /\n          exp (t * (x + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr a *\n          (x * t) powr (b - 1) /\n          exp (t * (x + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr (a + b - 1) *\n          x powr (b - 1) /\n          exp (t * (x + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+(u::real). \\<integral>\\<^sup>+t. indicator ({0<..}\\<times>{0..}) (t, u) *\n                     t powr (a + b - 1) * u powr (b - 1) / exp (t * (u + 1)) \\<partial>lborel \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real ({0<..} \\<times> {0..}) (t, x) *\n            t powr (a + b - 1) *\n            x powr (b - 1) /\n            exp (t * (x + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real ({0<..} \\<times> {0..}) (x, u) *\n            x powr (a + b - 1) *\n            u powr (b - 1) /\n            exp (x * (u + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel", "by (rule lborel_pair.Fubini') auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr (a + b - 1) *\n          x powr (b - 1) /\n          exp (t * (x + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (x, u) * x powr (a + b - 1) *\n          u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (t, x) * t powr (a + b - 1) *\n          x powr (b - 1) /\n          exp (t * (x + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (x, u) * x powr (a + b - 1) *\n          u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+(u::real). indicator {0..} u * (\\<integral>\\<^sup>+t. indicator {0<..} t *\n                     t powr (a + b - 1) * u powr (b - 1) / exp (t * (u + 1)) \\<partial>lborel) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real ({0<..} \\<times> {0..}) (x, u) *\n            x powr (a + b - 1) *\n            u powr (b - 1) /\n            exp (x * (u + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ u. indicator {0..} u *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n            exp (x * (u + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel", "by (intro nn_integral_cong mult_indicator_cong) (auto simp: indicator_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (x, u) * x powr (a + b - 1) *\n          u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. indicator {0..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0..}) (x, u) * x powr (a + b - 1) *\n          u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. indicator {0..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+(u::real). indicator {0<..} u * (\\<integral>\\<^sup>+t. indicator {0<..} t *\n                     t powr (a + b - 1) * u powr (b - 1) / exp (t * (u + 1)) \\<partial>lborel) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ u. indicator {0..} u *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n            exp (x * (u + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n            exp (x * (u + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel", "by (intro nn_integral_cong_AE AE_I[of _ _ \"{0}\"]) (auto simp: indicator_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. indicator {0..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. indicator {0..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+(u::real). indicator {0<..} u * (\\<integral>\\<^sup>+t. indicator {0<..} t *\n                     t powr (a + b - 1) * u powr (b - 1) / exp (t * (u + 1)) \n                    \\<partial>(density (distr lborel borel ((*) (1/(1+u)))) (\\<lambda>x. ennreal \\<bar>1/(1+u)\\<bar>))) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n            exp (x * (u + 1)))\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n            exp (x * (u + 1)))\n        \\<partial>density (distr lborel borel ((*) (1 / (1 + u))))\n                   (\\<lambda>x. ennreal \\<bar>1 / (1 + u)\\<bar>)\n                       \\<partial>lborel", "by (intro nn_integral_cong mult_indicator_cong, subst lborel_distr_mult' [symmetric]) auto"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>density (distr lborel borel ((*) (1 / (1 + u))))\n                 (\\<lambda>x. ennreal \\<bar>1 / (1 + u)\\<bar>)\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>density (distr lborel borel ((*) (1 / (1 + u))))\n                 (\\<lambda>x. ennreal \\<bar>1 / (1 + u)\\<bar>)\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+(u::real). indicator {0<..} u * \n                    (\\<integral>\\<^sup>+t. ennreal (1 / (u + 1)) * ennreal (indicator {0<..} (t / (u + 1)) *\n                     (t / (1+u)) powr (a + b - 1) * u powr (b - 1) / exp t)\n                    \\<partial>lborel) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                           \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n            exp (x * (u + 1)))\n        \\<partial>density (distr lborel borel ((*) (1 / (1 + u))))\n                   (\\<lambda>x. ennreal \\<bar>1 / (1 + u)\\<bar>)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                           \\<integral>\\<^sup>+ t.\n          ennreal (1 / (u + 1)) *\n          ennreal\n           (indicat_real {0<..} (t / (u + 1)) *\n            (t / (1 + u)) powr (a + b - 1) *\n            u powr (b - 1) /\n            exp t)\n        \\<partial>lborel\n                       \\<partial>lborel", "by (intro nn_integral_cong mult_indicator_cong)\n       (auto simp: nn_integral_distr nn_integral_density add_ac)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>density (distr lborel borel ((*) (1 / (1 + u))))\n                 (\\<lambda>x. ennreal \\<bar>1 / (1 + u)\\<bar>)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ t.\n        ennreal (1 / (u + 1)) *\n        ennreal\n         (indicat_real {0<..} (t / (u + 1)) *\n          (t / (1 + u)) powr (a + b - 1) *\n          u powr (b - 1) /\n          exp t)\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real {0<..} x * x powr (a + b - 1) * u powr (b - 1) /\n          exp (x * (u + 1)))\n      \\<partial>density (distr lborel borel ((*) (1 / (1 + u))))\n                 (\\<lambda>x. ennreal \\<bar>1 / (1 + u)\\<bar>)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ t.\n        ennreal (1 / (u + 1)) *\n        ennreal\n         (indicat_real {0<..} (t / (u + 1)) *\n          (t / (1 + u)) powr (a + b - 1) *\n          u powr (b - 1) /\n          exp t)\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+u. \\<integral>\\<^sup>+t. indicator ({0<..}\\<times>{0<..}) (u, t) * \n                    1/(u+1) * (t / (u+1)) powr (a + b - 1) * u powr (b - 1) / exp t\n                    \\<partial>lborel \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                           \\<integral>\\<^sup>+ t.\n          ennreal (1 / (u + 1)) *\n          ennreal\n           (indicat_real {0<..} (t / (u + 1)) *\n            (t / (1 + u)) powr (a + b - 1) *\n            u powr (b - 1) /\n            exp t)\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real ({0<..} \\<times> {0<..}) (u, x) * 1 / (u + 1) *\n            (x / (u + 1)) powr (a + b - 1) *\n            u powr (b - 1) /\n            exp x)\n        \\<partial>lborel\n                       \\<partial>lborel", "by (subst nn_integral_cmult [symmetric], simp, intro nn_integral_cong)\n       (auto simp: indicator_def field_simps divide_ennreal simp flip: ennreal_mult ennreal_mult')"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ t.\n        ennreal (1 / (u + 1)) *\n        ennreal\n         (indicat_real {0<..} (t / (u + 1)) *\n          (t / (1 + u)) powr (a + b - 1) *\n          u powr (b - 1) /\n          exp t)\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0<..}) (u, x) * 1 / (u + 1) *\n          (x / (u + 1)) powr (a + b - 1) *\n          u powr (b - 1) /\n          exp x)\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. indicator {0<..} u *\n                         \\<integral>\\<^sup>+ t.\n        ennreal (1 / (u + 1)) *\n        ennreal\n         (indicat_real {0<..} (t / (u + 1)) *\n          (t / (1 + u)) powr (a + b - 1) *\n          u powr (b - 1) /\n          exp t)\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0<..}) (u, x) * 1 / (u + 1) *\n          (x / (u + 1)) powr (a + b - 1) *\n          u powr (b - 1) /\n          exp x)\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = (\\<integral>\\<^sup>+u. \\<integral>\\<^sup>+t. ennreal (indicator {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) *\n                            ennreal (indicator {0<..} t * t powr (a + b - 1) / exp t)\n                    \\<partial>lborel \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n          ennreal\n           (indicat_real ({0<..} \\<times> {0<..}) (u, x) * 1 / (u + 1) *\n            (x / (u + 1)) powr (a + b - 1) *\n            u powr (b - 1) /\n            exp x)\n        \\<partial>lborel\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ t.\n          ennreal\n           (indicat_real {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) *\n          ennreal (indicat_real {0<..} t * t powr (a + b - 1) / exp t)\n        \\<partial>lborel\n                       \\<partial>lborel", "by (intro nn_integral_cong)\n       (auto simp: indicator_def powr_add powr_diff powr_divide powr_minus divide_simps add_ac\n             simp flip: ennreal_mult)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0<..}) (u, x) * 1 / (u + 1) *\n          (x / (u + 1)) powr (a + b - 1) *\n          u powr (b - 1) /\n          exp x)\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ t.\n        ennreal\n         (indicat_real {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) *\n        ennreal (indicat_real {0<..} t * t powr (a + b - 1) / exp t)\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ x.\n        ennreal\n         (indicat_real ({0<..} \\<times> {0<..}) (u, x) * 1 / (u + 1) *\n          (x / (u + 1)) powr (a + b - 1) *\n          u powr (b - 1) /\n          exp x)\n      \\<partial>lborel\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ t.\n        ennreal\n         (indicat_real {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) *\n        ennreal (indicat_real {0<..} t * t powr (a + b - 1) / exp t)\n      \\<partial>lborel\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = I * (\\<integral>\\<^sup>+t. indicator {0<..} t * t powr (a + b - 1) / exp t \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ t.\n          ennreal\n           (indicat_real {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) *\n          ennreal (indicat_real {0<..} t * t powr (a + b - 1) / exp t)\n        \\<partial>lborel\n                       \\<partial>lborel =\n    I *\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * x powr (a + b - 1) /\n                             exp x)\n                       \\<partial>lborel", "by (simp add: nn_integral_cmult nn_integral_multc I_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ t.\n        ennreal\n         (indicat_real {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) *\n        ennreal (indicat_real {0<..} t * t powr (a + b - 1) / exp t)\n      \\<partial>lborel\n                     \\<partial>lborel =\n  I *\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * x powr (a + b - 1) /\n                           exp x)\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ u. \\<integral>\\<^sup>+ t.\n        ennreal\n         (indicat_real {0<..} u * u powr (b - 1) / (1 + u) powr (a + b)) *\n        ennreal (indicat_real {0<..} t * t powr (a + b - 1) / exp t)\n      \\<partial>lborel\n                     \\<partial>lborel =\n  I *\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * x powr (a + b - 1) /\n                           exp x)\n                     \\<partial>lborel\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"(\\<integral>\\<^sup>+t. indicator {0<..} t * t powr (a + b - 1) / exp t \\<partial>lborel) =\n               ennreal (Gamma (a + b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * x powr (a + b - 1) /\n                             exp x)\n                       \\<partial>lborel =\n    ennreal (Gamma (a + b))", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n  0 < b\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * x powr (a + b - 1) /\n                             exp x)\n                       \\<partial>lborel =\n    ennreal (Gamma (a + b))", "by (subst Gamma_conv_nn_integral_real)\n       (auto intro!: nn_integral_cong_AE[OF AE_I[of _ _ \"{0}\"]] \n             simp: indicator_def split: if_splits)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * x powr (a + b - 1) /\n                           exp x)\n                     \\<partial>lborel =\n  ennreal (Gamma (a + b))\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "finally"], ["proof (chain)\npicking this:\n  ennreal (Gamma a * Gamma b) = I * ennreal (Gamma (a + b))", "have \"ennreal (Gamma a * Gamma b) = I * ennreal (Gamma (a + b))\""], ["proof (prove)\nusing this:\n  ennreal (Gamma a * Gamma b) = I * ennreal (Gamma (a + b))\n\ngoal (1 subgoal):\n 1. ennreal (Gamma a * Gamma b) = I * ennreal (Gamma (a + b))", "."], ["proof (state)\nthis:\n  ennreal (Gamma a * Gamma b) = I * ennreal (Gamma (a + b))\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "hence \"ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n           I * ennreal (Gamma (a + b)) / ennreal (Gamma (a + b))\""], ["proof (prove)\nusing this:\n  ennreal (Gamma a * Gamma b) = I * ennreal (Gamma (a + b))\n\ngoal (1 subgoal):\n 1. ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n    I * ennreal (Gamma (a + b)) / ennreal (Gamma (a + b))", "by simp"], ["proof (state)\nthis:\n  ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n  I * ennreal (Gamma (a + b)) / ennreal (Gamma (a + b))\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n  I * ennreal (Gamma (a + b)) / ennreal (Gamma (a + b))\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I * ennreal (Gamma (a + b)) / ennreal (Gamma (a + b)) = I", "using \\<open>Gamma (a + b) > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < Gamma (a + b)\n\ngoal (1 subgoal):\n 1. I * ennreal (Gamma (a + b)) / ennreal (Gamma (a + b)) = I", "by (intro ennreal_mult_divide_eq) (auto simp: )"], ["proof (state)\nthis:\n  I * ennreal (Gamma (a + b)) / ennreal (Gamma (a + b)) = I\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  I * ennreal (Gamma (a + b)) / ennreal (Gamma (a + b)) = I\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n               ennreal (Gamma a * Gamma b / Gamma (a + b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n    ennreal (Gamma a * Gamma b / Gamma (a + b))", "using assms"], ["proof (prove)\nusing this:\n  0 < a\n  0 < b\n\ngoal (1 subgoal):\n 1. ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n    ennreal (Gamma a * Gamma b / Gamma (a + b))", "by (intro divide_ennreal) auto"], ["proof (state)\nthis:\n  ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n  ennreal (Gamma a * Gamma b / Gamma (a + b))\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "also"], ["proof (state)\nthis:\n  ennreal (Gamma a * Gamma b) / ennreal (Gamma (a + b)) =\n  ennreal (Gamma a * Gamma b / Gamma (a + b))\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "have \"\\<dots> = ennreal (Beta a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (Gamma a * Gamma b / Gamma (a + b)) = ennreal (Beta a b)", "by (simp add: Beta_def)"], ["proof (state)\nthis:\n  ennreal (Gamma a * Gamma b / Gamma (a + b)) = ennreal (Beta a b)\n\ngoal (2 subgoals):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}\n 2. ennreal (Beta a b) =\n    \\<integral>\\<^sup>+ u. ennreal\n                            (indicat_real {0<..} u * u powr (b - 1) /\n                             (1 + u) powr (a + b))\n                       \\<partial>lborel", "finally"], ["proof (chain)\npicking this:\n  ennreal (Beta a b) = I", "show *: \"ennreal (Beta a b) = I\""], ["proof (prove)\nusing this:\n  ennreal (Beta a b) = I\n\ngoal (1 subgoal):\n 1. ennreal (Beta a b) = I", "."], ["proof (state)\nthis:\n  ennreal (Beta a b) = I\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}", "define f where \"f = (\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b))\""], ["proof (state)\nthis:\n  f = (\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}", "have \"((\\<lambda>u. indicator {0<..} u * f u) has_integral Beta a b) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>u. indicat_real {0<..} u * f u) has_integral Beta a b) UNIV", "using * \\<open>Beta a b > 0\\<close>"], ["proof (prove)\nusing this:\n  ennreal (Beta a b) = I\n  0 < Beta a b\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u. indicat_real {0<..} u * f u) has_integral Beta a b) UNIV", "by (subst has_integral_iff_nn_integral_lebesgue)\n       (auto simp: f_def measurable_completion nn_integral_completion I_def mult_ac)"], ["proof (state)\nthis:\n  ((\\<lambda>u. indicat_real {0<..} u * f u) has_integral Beta a b) UNIV\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>u. indicat_real {0<..} u * f u) has_integral Beta a b) UNIV\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}", "have \"(\\<lambda>u. indicator {0<..} u * f u) = (\\<lambda>u. if u \\<in> {0<..} then f u else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>u. indicat_real {0<..} u * f u) =\n    (\\<lambda>u. if u \\<in> {0<..} then f u else 0)", "by (auto simp: fun_eq_iff)"], ["proof (state)\nthis:\n  (\\<lambda>u. indicat_real {0<..} u * f u) =\n  (\\<lambda>u. if u \\<in> {0<..} then f u else 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}", "also"], ["proof (state)\nthis:\n  (\\<lambda>u. indicat_real {0<..} u * f u) =\n  (\\<lambda>u. if u \\<in> {0<..} then f u else 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}", "have \"(\\<dots> has_integral Beta a b) UNIV \\<longleftrightarrow> (f has_integral Beta a b) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>u. if u \\<in> {0<..} then f u else 0) has_integral Beta a b)\n     UNIV =\n    (f has_integral Beta a b) {0<..}", "by (rule has_integral_restrict_UNIV)"], ["proof (state)\nthis:\n  ((\\<lambda>u. if u \\<in> {0<..} then f u else 0) has_integral Beta a b)\n   UNIV =\n  (f has_integral Beta a b) {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u. u powr (b - 1) / (1 + u) powr (a + b)) has_integral\n     Beta a b)\n     {0<..}", "finally"], ["proof (chain)\npicking this:\n  (f has_integral Beta a b) {0<..}", "show \\<dots>"], ["proof (prove)\nusing this:\n  (f has_integral Beta a b) {0<..}\n\ngoal (1 subgoal):\n 1. (f has_integral Beta a b) {0<..}", "by (simp add: f_def)"], ["proof (state)\nthis:\n  (f has_integral Beta a b) {0<..}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_integral_Beta2:\n  fixes a :: real\n  assumes \"a < -1/2\"\n  shows   \"((\\<lambda>x. (1 + x ^ 2) powr a) has_integral Beta (- a - 1 / 2) (1 / 2) / 2) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "define f where \"f = (\\<lambda>u. u powr (-1/2) / (1 + u) powr (-a))\""], ["proof (state)\nthis:\n  f = (\\<lambda>u. u powr (- 1 / 2) / (1 + u) powr - a)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "define C where \"C = Beta (-a-1/2) (1/2)\""], ["proof (state)\nthis:\n  C = Beta (- a - 1 / 2) (1 / 2)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "have I: \"(f has_integral C) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f has_integral C) {0<..}", "using has_integral_Beta_real'[of \"-a-1/2\" \"1/2\"] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < - a - 1 / 2; 0 < 1 / 2\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>u.\n                         u powr (1 / 2 - 1) /\n                         (1 + u) powr (- a - 1 / 2 + 1 / 2)) has_integral\n                     Beta (- a - 1 / 2) (1 / 2))\n                     {0<..}\n  a < - 1 / 2\n\ngoal (1 subgoal):\n 1. (f has_integral C) {0<..}", "by (simp_all add: diff_divide_distrib f_def C_def)"], ["proof (state)\nthis:\n  (f has_integral C) {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "define g where \"g = (\\<lambda>x. x ^ 2 :: real)\""], ["proof (state)\nthis:\n  g = power2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "have bij: \"bij_betw g {0<..} {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw g {0<..} {0<..}", "by (intro bij_betwI[of _ _ _ sqrt]) (auto simp: g_def)"], ["proof (state)\nthis:\n  bij_betw g {0<..} {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "have \"(f absolutely_integrable_on g ` {0<..} \\<and> integral (g ` {0<..}) f = C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f absolutely_integrable_on g ` {0<..} \\<and> integral (g ` {0<..}) f = C", "using I bij"], ["proof (prove)\nusing this:\n  (f has_integral C) {0<..}\n  bij_betw g {0<..} {0<..}\n\ngoal (1 subgoal):\n 1. f absolutely_integrable_on g ` {0<..} \\<and> integral (g ` {0<..}) f = C", "by (simp add: bij_betw_def has_integral_iff absolutely_integrable_on_def f_def)"], ["proof (state)\nthis:\n  f absolutely_integrable_on g ` {0<..} \\<and> integral (g ` {0<..}) f = C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "also"], ["proof (state)\nthis:\n  f absolutely_integrable_on g ` {0<..} \\<and> integral (g ` {0<..}) f = C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "have \"?this \\<longleftrightarrow> ((\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on {0<..} \\<and>\n                         integral {0<..} (\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) = C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f absolutely_integrable_on g ` {0<..} \\<and>\n     integral (g ` {0<..}) f = C) =\n    ((\\<lambda>x.\n         \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     {0<..} \\<and>\n     integral {0<..} (\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) = C)", "using bij"], ["proof (prove)\nusing this:\n  bij_betw g {0<..} {0<..}\n\ngoal (1 subgoal):\n 1. (f absolutely_integrable_on g ` {0<..} \\<and>\n     integral (g ` {0<..}) f = C) =\n    ((\\<lambda>x.\n         \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n     {0<..} \\<and>\n     integral {0<..} (\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) = C)", "by (intro has_absolute_integral_change_of_variables_1' [symmetric])\n                 (auto intro!: derivative_eq_intros simp: g_def bij_betw_def)"], ["proof (state)\nthis:\n  (f absolutely_integrable_on g ` {0<..} \\<and>\n   integral (g ` {0<..}) f = C) =\n  ((\\<lambda>x.\n       \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n   {0<..} \\<and>\n   integral {0<..} (\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) = C)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n  {0<..} \\<and>\n  integral {0<..} (\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) = C", "have \"((\\<lambda>x. \\<bar>2 * x\\<bar> * f (g x)) has_integral C) {0<..}\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) absolutely_integrable_on\n  {0<..} \\<and>\n  integral {0<..} (\\<lambda>x. \\<bar>2 * x\\<bar> *\\<^sub>R f (g x)) = C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<bar>2 * x\\<bar> * f (g x)) has_integral C) {0<..}", "by (simp add: absolutely_integrable_on_def f_def has_integral_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<bar>2 * x\\<bar> * f (g x)) has_integral C) {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<bar>2 * x\\<bar> * f (g x)) has_integral C) {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "have \"?this \\<longleftrightarrow> ((\\<lambda>x::real. 2 * (1 + x\\<^sup>2) powr a) has_integral C) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<bar>2 * x\\<bar> * f (g x)) has_integral C) {0<..} =\n    ((\\<lambda>x. 2 * (1 + x\\<^sup>2) powr a) has_integral C) {0<..}", "by (intro has_integral_cong) (auto simp: f_def g_def powr_def exp_minus ln_realpow field_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<bar>2 * x\\<bar> * f (g x)) has_integral C) {0<..} =\n  ((\\<lambda>x. 2 * (1 + x\\<^sup>2) powr a) has_integral C) {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. 2 * (1 + x\\<^sup>2) powr a) has_integral C) {0<..}", "have \"((\\<lambda>x::real. 1/2 * (2 * (1 + x\\<^sup>2) powr a)) has_integral 1/2 * C) {0<..}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. 2 * (1 + x\\<^sup>2) powr a) has_integral C) {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 1 / 2 * (2 * (1 + x\\<^sup>2) powr a)) has_integral\n     1 / 2 * C)\n     {0<..}", "by (intro has_integral_mult_right)"], ["proof (state)\nthis:\n  ((\\<lambda>x. 1 / 2 * (2 * (1 + x\\<^sup>2) powr a)) has_integral\n   1 / 2 * C)\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. 1 / 2 * (2 * (1 + x\\<^sup>2) powr a)) has_integral\n   1 / 2 * C)\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2)\n     {0<..}", "by (simp add: C_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. (1 + x\\<^sup>2) powr a) has_integral\n   Beta (- a - 1 / 2) (1 / 2) / 2)\n   {0<..}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_integral_Beta3:\n  fixes a b :: real\n  assumes \"a < -1/2\" and \"b > 0\"\n  shows   \"((\\<lambda>x. (b + x ^ 2) powr a) has_integral\n             Beta (-a - 1/2) (1/2) / 2 * b powr (a + 1/2)) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "define C where \"C = Beta (- a - 1 / 2) (1 / 2) / 2\""], ["proof (state)\nthis:\n  C = Beta (- a - 1 / 2) (1 / 2) / 2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "have int: \"nn_integral lborel (\\<lambda>x. indicator {0<..} x * (1 + x ^ 2) powr a) = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    ennreal C", "using nn_integral_has_integral_lebesgue[OF _ has_integral_Beta2[OF assms(1)]]"], ["proof (prove)\nusing this:\n  (\\<And>x. 0 \\<le> (1 + x\\<^sup>2) powr a) \\<Longrightarrow>\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal (Beta (- a - 1 / 2) (1 / 2) / 2)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    ennreal C", "by (auto simp: C_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "have \"nn_integral lborel (\\<lambda>x. indicator {0<..} x * (b + x ^ 2) powr a) =\n        (\\<integral>\\<^sup>+x. ennreal (indicat_real {0<..} (x * sqrt b) * (b + (x * sqrt b)\\<^sup>2) powr a * sqrt b) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} (x * sqrt b) *\n                             (b + (x * sqrt b)\\<^sup>2) powr a *\n                             sqrt b)\n                       \\<partial>lborel", "using assms"], ["proof (prove)\nusing this:\n  a < - 1 / 2\n  0 < b\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} (x * sqrt b) *\n                             (b + (x * sqrt b)\\<^sup>2) powr a *\n                             sqrt b)\n                       \\<partial>lborel", "by (subst lborel_distr_mult'[of \"sqrt b\"])\n       (auto simp: nn_integral_density nn_integral_distr mult_ac simp flip: ennreal_mult)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} (x * sqrt b) *\n                           (b + (x * sqrt b)\\<^sup>2) powr a *\n                           sqrt b)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} (x * sqrt b) *\n                           (b + (x * sqrt b)\\<^sup>2) powr a *\n                           sqrt b)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "have \"\\<dots> = (\\<integral>\\<^sup>+x. ennreal (indicat_real {0<..} x * (b * (1 + x ^ 2)) powr a * sqrt b) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} (x * sqrt b) *\n                             (b + (x * sqrt b)\\<^sup>2) powr a *\n                             sqrt b)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x *\n                             (b * (1 + x\\<^sup>2)) powr a *\n                             sqrt b)\n                       \\<partial>lborel", "using assms"], ["proof (prove)\nusing this:\n  a < - 1 / 2\n  0 < b\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} (x * sqrt b) *\n                             (b + (x * sqrt b)\\<^sup>2) powr a *\n                             sqrt b)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x *\n                             (b * (1 + x\\<^sup>2)) powr a *\n                             sqrt b)\n                       \\<partial>lborel", "by (intro nn_integral_cong) (auto simp: indicator_def field_simps zero_less_mult_iff)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} (x * sqrt b) *\n                           (b + (x * sqrt b)\\<^sup>2) powr a *\n                           sqrt b)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x *\n                           (b * (1 + x\\<^sup>2)) powr a *\n                           sqrt b)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} (x * sqrt b) *\n                           (b + (x * sqrt b)\\<^sup>2) powr a *\n                           sqrt b)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x *\n                           (b * (1 + x\\<^sup>2)) powr a *\n                           sqrt b)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "have \"\\<dots> = (\\<integral>\\<^sup>+x. ennreal (indicat_real {0<..} x * b powr (a + 1/2) * (1 + x ^ 2) powr a) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x *\n                             (b * (1 + x\\<^sup>2)) powr a *\n                             sqrt b)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * b powr (a + 1 / 2) *\n                             (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel", "using assms"], ["proof (prove)\nusing this:\n  a < - 1 / 2\n  0 < b\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x *\n                             (b * (1 + x\\<^sup>2)) powr a *\n                             sqrt b)\n                       \\<partial>lborel =\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * b powr (a + 1 / 2) *\n                             (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel", "by (intro nn_integral_cong) (auto simp: indicator_def powr_add powr_half_sqrt powr_mult)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x *\n                           (b * (1 + x\\<^sup>2)) powr a *\n                           sqrt b)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * b powr (a + 1 / 2) *\n                           (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x *\n                           (b * (1 + x\\<^sup>2)) powr a *\n                           sqrt b)\n                     \\<partial>lborel =\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * b powr (a + 1 / 2) *\n                           (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "have \"\\<dots> = b powr (a + 1/2) * (\\<integral>\\<^sup>+x. ennreal (indicat_real {0<..} x * (1 + x ^ 2) powr a) \\<partial>lborel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * b powr (a + 1 / 2) *\n                             (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    ennreal (b powr (a + 1 / 2)) *\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel", "using assms"], ["proof (prove)\nusing this:\n  a < - 1 / 2\n  0 < b\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * b powr (a + 1 / 2) *\n                             (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    ennreal (b powr (a + 1 / 2)) *\n    \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel", "by (subst nn_integral_cmult [symmetric]) (simp_all add: mult_ac flip: ennreal_mult)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * b powr (a + 1 / 2) *\n                           (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal (b powr (a + 1 / 2)) *\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * b powr (a + 1 / 2) *\n                           (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal (b powr (a + 1 / 2)) *\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "have \"(\\<integral>\\<^sup>+x. ennreal (indicat_real {0<..} x * (1 + x ^ 2) powr a) \\<partial>lborel) = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    ennreal C", "using int"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal C\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    ennreal C", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (1 + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal C\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "have \"ennreal (b powr (a + 1/2)) * ennreal C = ennreal (C * b powr (a + 1/2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (b powr (a + 1 / 2)) * ennreal C =\n    ennreal (C * b powr (a + 1 / 2))", "using assms"], ["proof (prove)\nusing this:\n  a < - 1 / 2\n  0 < b\n\ngoal (1 subgoal):\n 1. ennreal (b powr (a + 1 / 2)) * ennreal C =\n    ennreal (C * b powr (a + 1 / 2))", "by (subst ennreal_mult) (auto simp: C_def mult_ac Beta_def)"], ["proof (state)\nthis:\n  ennreal (b powr (a + 1 / 2)) * ennreal C =\n  ennreal (C * b powr (a + 1 / 2))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal (C * b powr (a + 1 / 2))", "have *: \"(\\<integral>\\<^sup>+ x. ennreal (indicat_real {0<..} x * (b + x\\<^sup>2) powr a) \\<partial>lborel) = \\<dots>\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal (C * b powr (a + 1 / 2))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. ennreal\n                            (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                       \\<partial>lborel =\n    ennreal (C * b powr (a + 1 / 2))", "."], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal (C * b powr (a + 1 / 2))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "hence \"((\\<lambda>x. indicator {0<..} x * (b + x^2) powr a) has_integral C * b powr (a + 1/2)) UNIV\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal (C * b powr (a + 1 / 2))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         indicat_real {0<..} x * (b + x\\<^sup>2) powr a) has_integral\n     C * b powr (a + 1 / 2))\n     UNIV", "using assms"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. ennreal\n                          (indicat_real {0<..} x * (b + x\\<^sup>2) powr a)\n                     \\<partial>lborel =\n  ennreal (C * b powr (a + 1 / 2))\n  a < - 1 / 2\n  0 < b\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         indicat_real {0<..} x * (b + x\\<^sup>2) powr a) has_integral\n     C * b powr (a + 1 / 2))\n     UNIV", "by (subst has_integral_iff_nn_integral_lebesgue)\n       (auto simp: C_def measurable_completion nn_integral_completion Beta_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. indicat_real {0<..} x * (b + x\\<^sup>2) powr a) has_integral\n   C * b powr (a + 1 / 2))\n   UNIV\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. indicat_real {0<..} x * (b + x\\<^sup>2) powr a) has_integral\n   C * b powr (a + 1 / 2))\n   UNIV\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "have \"(\\<lambda>x. indicator {0<..} x * (b + x^2) powr a) =\n             (\\<lambda>x. if x \\<in> {0<..} then (b + x^2) powr a else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. indicat_real {0<..} x * (b + x\\<^sup>2) powr a) =\n    (\\<lambda>x. if x \\<in> {0<..} then (b + x\\<^sup>2) powr a else 0)", "by (auto simp: fun_eq_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x. indicat_real {0<..} x * (b + x\\<^sup>2) powr a) =\n  (\\<lambda>x. if x \\<in> {0<..} then (b + x\\<^sup>2) powr a else 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       if x \\<in> {0<..} then (b + x\\<^sup>2) powr a else 0) has_integral\n   C * b powr (a + 1 / 2))\n   UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       if x \\<in> {0<..} then (b + x\\<^sup>2) powr a else 0) has_integral\n   C * b powr (a + 1 / 2))\n   UNIV\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n     Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n     {0<..}", "by (subst (asm) has_integral_restrict_UNIV) (auto simp: C_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. (b + x\\<^sup>2) powr a) has_integral\n   Beta (- a - 1 / 2) (1 / 2) / 2 * b powr (a + 1 / 2))\n   {0<..}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Asymptotics of the real $\\log\\Gamma$ function and its derivatives\\<close>"], ["", "text \\<open>\n  This is the error term that occurs in the expansion of @{term ln_Gamma}. It can be shown to \n  be of order $O(s^{-n})$.\n\\<close>"], ["", "definition stirling_integral :: \"nat \\<Rightarrow> 'a :: {real_normed_div_algebra, banach} \\<Rightarrow> 'a\" where\n  \"stirling_integral n s = \n     lim (\\<lambda>N. integral {0..N} (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n))\""], ["", "context\n  fixes s :: complex assumes s: \"s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\"\n  fixes approx :: \"nat \\<Rightarrow> complex\"\n  defines \"approx \\<equiv> (\\<lambda>N. \n    (\\<Sum>n = 1..<N. s / of_nat n - ln (1 + s / of_nat n)) - (euler_mascheroni * s + ln s) - \\<comment> \\<open>\\<open>\\<longrightarrow> ln_Gamma s\\<close>\\<close>\n    (ln_Gamma (of_nat N) - ln (2 * pi / of_nat N) / 2 - of_nat N * ln (of_nat N) + of_nat N) - \\<comment> \\<open>\\<open>\\<longrightarrow> 0\\<close>\\<close>\n    s * (harm (N - 1) - ln (of_nat (N - 1)) - euler_mascheroni) + \\<comment> \\<open>\\<open>\\<longrightarrow> 0\\<close>\\<close>\n    s * (ln (of_nat N + s) - ln (of_nat (N - 1))) - \\<comment> \\<open>\\<open>\\<longrightarrow> 0\\<close>\\<close>\n    (1/2) * (ln (of_nat N + s) - ln (of_nat N)) +       \\<comment> \\<open>\\<open>\\<longrightarrow> 0\\<close>\\<close>\n    of_nat N * (ln (of_nat N + s) - ln (of_nat N)) -  \\<comment> \\<open>\\<open>\\<longrightarrow> s\\<close>\\<close>\n    (s - 1/2) * ln s - ln (2 * pi) / 2)\"\nbegin"], ["", "qualified"], ["", "lemma\n  assumes N: \"N > 0\"\n  shows   integrable_pbernpoly_1:\n            \"(\\<lambda>x. of_real (-pbernpoly 1 x) / (of_real x + s)) integrable_on {0..real N}\"\n  and     integral_pbernpoly_1_aux:\n            \"integral {0..real N} (\\<lambda>x. -of_real (pbernpoly 1 x) / (of_real x + s)) = approx N\"\n  and     has_integral_pbernpoly_1:\n            \"((\\<lambda>x. pbernpoly 1 x /(x + s)) has_integral \n              (\\<Sum>m<N. (of_nat m + 1 / 2 + s) * (ln (of_nat m + s) - \n                        ln (of_nat m + 1 + s)) + 1)) {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N} &&&\n    integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N &&&\n    ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N}\n 2. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 3. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "let ?A = \"(\\<lambda>n. {of_nat n..of_nat (n+1)}) ` {0..<N}\""], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N}\n 2. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 3. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "have has_integral: \n    \"((\\<lambda>x. -pbernpoly 1 x / (x + s)) has_integral \n             (of_nat n + 1/2 + s) * (ln (of_nat (n + 1) + s) - ln (of_nat n + s)) - 1) \n           {of_nat n..of_nat (n + 1)}\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real (- pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (of_nat n + 1 / 2 + s) *\n     (Ln (of_nat (n + 1) + s) - Ln (of_nat n + s)) -\n     1)\n     {real n..real (n + 1)}", "proof (rule has_integral_spike)"], ["proof (state)\ngoal (3 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> {real n..real (n + 1)} - ?S \\<Longrightarrow>\n       complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) = ?f x\n 3. (?f has_integral\n     (of_nat n + 1 / 2 + s) *\n     (Ln (of_nat (n + 1) + s) - Ln (of_nat n + s)) -\n     1)\n     {real n..real (n + 1)}", "have \"((\\<lambda>x. (of_nat n + 1/2 + s) * (1 / (x + s)) - 1) has_integral \n              (of_nat n + 1/2 + s) * (ln (of_real (real (n + 1)) + s) - ln (of_real (real n) + s)) - 1) \n            {of_nat n..of_nat (n + 1)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) -\n         1) has_integral\n     (of_nat n + 1 / 2 + s) *\n     (Ln (complex_of_real (real (n + 1)) + s) -\n      Ln (complex_of_real (real n) + s)) -\n     1)\n     {real n..real (n + 1)}", "using s has_integral_const_real[of 1 \"of_nat n\" \"of_nat (n + 1)\"]"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  ((\\<lambda>x. 1::?'a1) has_integral\n   Henstock_Kurzweil_Integration.content {real n..real (n + 1)} *\\<^sub>R\n   (1::?'a1))\n   {real n..real (n + 1)}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) -\n         1) has_integral\n     (of_nat n + 1 / 2 + s) *\n     (Ln (complex_of_real (real (n + 1)) + s) -\n      Ln (complex_of_real (real n) + s)) -\n     1)\n     {real n..real (n + 1)}", "by (intro has_integral_diff has_integral_mult_right fundamental_theorem_of_calculus)\n         (auto intro!: derivative_eq_intros has_vector_derivative_real_field\n               simp: has_field_derivative_iff_has_vector_derivative [symmetric] field_simps\n                     complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) -\n       1) has_integral\n   (of_nat n + 1 / 2 + s) *\n   (Ln (complex_of_real (real (n + 1)) + s) -\n    Ln (complex_of_real (real n) + s)) -\n   1)\n   {real n..real (n + 1)}\n\ngoal (3 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> {real n..real (n + 1)} - ?S \\<Longrightarrow>\n       complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) = ?f x\n 3. (?f has_integral\n     (of_nat n + 1 / 2 + s) *\n     (Ln (of_nat (n + 1) + s) - Ln (of_nat n + s)) -\n     1)\n     {real n..real (n + 1)}", "thus \"((\\<lambda>x. (of_nat n + 1/2 + s) * (1 / (x + s)) - 1) has_integral \n              (of_nat n + 1/2 + s) * (ln (of_nat (n + 1) + s) - ln (of_nat n + s)) - 1) \n            {of_nat n..of_nat (n + 1)}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) -\n       1) has_integral\n   (of_nat n + 1 / 2 + s) *\n   (Ln (complex_of_real (real (n + 1)) + s) -\n    Ln (complex_of_real (real n) + s)) -\n   1)\n   {real n..real (n + 1)}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) -\n         1) has_integral\n     (of_nat n + 1 / 2 + s) *\n     (Ln (of_nat (n + 1) + s) - Ln (of_nat n + s)) -\n     1)\n     {real n..real (n + 1)}", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) -\n       1) has_integral\n   (of_nat n + 1 / 2 + s) * (Ln (of_nat (n + 1) + s) - Ln (of_nat n + s)) -\n   1)\n   {real n..real (n + 1)}\n\ngoal (2 subgoals):\n 1. negligible ?S\n 2. \\<And>x.\n       x \\<in> {real n..real (n + 1)} - ?S \\<Longrightarrow>\n       complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n       (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1", "show \"-pbernpoly 1 x / (x + s) = (of_nat n + 1/2 + s) * (1 / (x + s)) - 1\"\n         if \"x \\<in> {of_nat n..of_nat (n + 1)} - {of_nat (n + 1)}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n    (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n    (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1", "have x: \"x \\<ge> real n\" \"x < real (n + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n \\<le> x &&& x < real (n + 1)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> {real n..real (n + 1)} - {real (n + 1)}\n\ngoal (1 subgoal):\n 1. real n \\<le> x &&& x < real (n + 1)", "by simp_all"], ["proof (state)\nthis:\n  real n \\<le> x\n  x < real (n + 1)\n\ngoal (1 subgoal):\n 1. complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n    (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1", "hence \"floor x = int n\""], ["proof (prove)\nusing this:\n  real n \\<le> x\n  x < real (n + 1)\n\ngoal (1 subgoal):\n 1. \\<lfloor>x\\<rfloor> = int n", "by linarith"], ["proof (state)\nthis:\n  \\<lfloor>x\\<rfloor> = int n\n\ngoal (1 subgoal):\n 1. complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n    (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1", "moreover"], ["proof (state)\nthis:\n  \\<lfloor>x\\<rfloor> = int n\n\ngoal (1 subgoal):\n 1. complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n    (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1", "from s x"], ["proof (chain)\npicking this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  real n \\<le> x\n  x < real (n + 1)", "have \"complex_of_real x \\<noteq> -s\""], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  real n \\<le> x\n  x < real (n + 1)\n\ngoal (1 subgoal):\n 1. complex_of_real x \\<noteq> - s", "by (auto simp add: complex_eq_iff complex_nonpos_Reals_iff simp del: of_nat_Suc)"], ["proof (state)\nthis:\n  complex_of_real x \\<noteq> - s\n\ngoal (1 subgoal):\n 1. complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n    (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1", "ultimately"], ["proof (chain)\npicking this:\n  \\<lfloor>x\\<rfloor> = int n\n  complex_of_real x \\<noteq> - s", "show \"-pbernpoly 1 x / (x + s) = (of_nat n + 1/2 + s) * (1 / (x + s)) - 1\""], ["proof (prove)\nusing this:\n  \\<lfloor>x\\<rfloor> = int n\n  complex_of_real x \\<noteq> - s\n\ngoal (1 subgoal):\n 1. complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n    (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1", "by (auto simp: pbernpoly_def bernpoly_def frac_def divide_simps add_eq_0_iff2)"], ["proof (state)\nthis:\n  complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s) =\n  (of_nat n + 1 / 2 + s) * (1 / (complex_of_real x + s)) - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> {real n..real (n + 1)} - {real (n + 1)} \\<Longrightarrow>\n  complex_of_real (- pbernpoly 1 ?x1) / (complex_of_real ?x1 + s) =\n  (of_nat n + 1 / 2 + s) * (1 / (complex_of_real ?x1 + s)) - 1\n\ngoal (1 subgoal):\n 1. negligible {real (n + 1)}", "qed simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) /\n       (complex_of_real x + s)) has_integral\n   (of_nat ?n1 + 1 / 2 + s) *\n   (Ln (of_nat (?n1 + 1) + s) - Ln (of_nat ?n1 + s)) -\n   1)\n   {real ?n1..real (?n1 + 1)}\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N}\n 2. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 3. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "hence *: \"\\<And>I. I\\<in>?A \\<Longrightarrow> ((\\<lambda>x. -pbernpoly 1 x / (x + s)) has_integral \n              (Inf I + 1/2 + s) * (ln (Inf I + 1 + s) - ln (Inf I + s)) - 1) I\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) /\n       (complex_of_real x + s)) has_integral\n   (of_nat ?n1 + 1 / 2 + s) *\n   (Ln (of_nat (?n1 + 1) + s) - Ln (of_nat ?n1 + s)) -\n   1)\n   {real ?n1..real (?n1 + 1)}\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       I \\<in> (\\<lambda>n. {real n..real (n + 1)}) `\n               {0..<N} \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (- pbernpoly 1 x) /\n            (complex_of_real x + s)) has_integral\n        (complex_of_real (Inf I) + 1 / 2 + s) *\n        (Ln (complex_of_real (Inf I) + 1 + s) -\n         Ln (complex_of_real (Inf I) + s)) -\n        1)\n        I", "by (auto simp: add_ac)"], ["proof (state)\nthis:\n  ?I1 \\<in> (\\<lambda>n. {real n..real (n + 1)}) ` {0..<N} \\<Longrightarrow>\n  ((\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) /\n       (complex_of_real x + s)) has_integral\n   (complex_of_real (Inf ?I1) + 1 / 2 + s) *\n   (Ln (complex_of_real (Inf ?I1) + 1 + s) -\n    Ln (complex_of_real (Inf ?I1) + s)) -\n   1)\n   ?I1\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N}\n 2. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 3. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "have \"((\\<lambda>x. - pbernpoly 1 x / (x + s)) has_integral\n          (\\<Sum>I\\<in>?A. (Inf I + 1 / 2 + s) * (ln (Inf I + 1 + s) - ln (Inf I + s)) - 1))\n          (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})\" (is \"(_ has_integral ?i) _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real (- pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n        (complex_of_real (Inf I) + 1 / 2 + s) *\n        (Ln (complex_of_real (Inf I) + 1 + s) -\n         Ln (complex_of_real (Inf I) + s)) -\n        1))\n     (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})", "apply (intro has_integral_Union * finite_imageI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite {0..<N}\n 2. \\<And>S.\n       S \\<in> (\\<lambda>n. {real n..real (n + 1)}) `\n               {0..<N} \\<Longrightarrow>\n       S \\<in> (\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}\n 3. pairwise (\\<lambda>S S'. negligible (S \\<inter> S'))\n     ((\\<lambda>n. {real n..real (n + 1)}) ` {0..<N})", "apply (force intro!: negligible_atLeastAtMostI pairwiseI)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) /\n       (complex_of_real x + s)) has_integral\n   (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n      (complex_of_real (Inf I) + 1 / 2 + s) *\n      (Ln (complex_of_real (Inf I) + 1 + s) -\n       Ln (complex_of_real (Inf I) + s)) -\n      1))\n   (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N}\n 2. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 3. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "hence has_integral: \"((\\<lambda>x. - pbernpoly 1 x / (x + s)) has_integral ?i) {0..real N}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) /\n       (complex_of_real x + s)) has_integral\n   (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n      (complex_of_real (Inf I) + 1 / 2 + s) *\n      (Ln (complex_of_real (Inf I) + 1 + s) -\n       Ln (complex_of_real (Inf I) + s)) -\n      1))\n   (\\<Union>n\\<in>{0..<N}. {real n..real (n + 1)})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real (- pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n        (complex_of_real (Inf I) + 1 / 2 + s) *\n        (Ln (complex_of_real (Inf I) + 1 + s) -\n         Ln (complex_of_real (Inf I) + s)) -\n        1))\n     {0..real N}", "by (subst has_integral_spike_set_eq)\n       (use Union_atLeastAtMost assms in \\<open>auto simp: intro!: empty_imp_negligible\\<close>)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) /\n       (complex_of_real x + s)) has_integral\n   (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n      (complex_of_real (Inf I) + 1 / 2 + s) *\n      (Ln (complex_of_real (Inf I) + 1 + s) -\n       Ln (complex_of_real (Inf I) + s)) -\n      1))\n   {0..real N}\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N}\n 2. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 3. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "hence \"(\\<lambda>x. - pbernpoly 1 x / (x + s)) integrable_on {0..real N}\"\n    and integral:   \"integral {0..real N} (\\<lambda>x. - pbernpoly 1 x / (x + s)) = ?i\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) /\n       (complex_of_real x + s)) has_integral\n   (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n      (complex_of_real (Inf I) + 1 / 2 + s) *\n      (Ln (complex_of_real (Inf I) + 1 + s) -\n       Ln (complex_of_real (Inf I) + s)) -\n      1))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N} &&&\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)) =\n    (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n       (complex_of_real (Inf I) + 1 / 2 + s) *\n       (Ln (complex_of_real (Inf I) + 1 + s) -\n        Ln (complex_of_real (Inf I) + s)) -\n       1)", "by (simp_all add: has_integral_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      complex_of_real (- pbernpoly 1 x) /\n      (complex_of_real x + s)) integrable_on\n  {0..real N}\n  integral {0..real N}\n   (\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)) =\n  (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n     (complex_of_real (Inf I) + 1 / 2 + s) *\n     (Ln (complex_of_real (Inf I) + 1 + s) -\n      Ln (complex_of_real (Inf I) + s)) -\n     1)\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N}\n 2. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 3. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "show \"(\\<lambda>x. - pbernpoly 1 x / (x + s)) integrable_on {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (- pbernpoly 1 x) /\n        (complex_of_real x + s)) integrable_on\n    {0..real N}", "by fact"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      complex_of_real (- pbernpoly 1 x) /\n      (complex_of_real x + s)) integrable_on\n  {0..real N}\n\ngoal (2 subgoals):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 2. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "note has_integral_neg[OF has_integral]"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       - (complex_of_real (- pbernpoly 1 x) /\n          (complex_of_real x + s))) has_integral\n   - (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n        (complex_of_real (Inf I) + 1 / 2 + s) *\n        (Ln (complex_of_real (Inf I) + 1 + s) -\n         Ln (complex_of_real (Inf I) + s)) -\n        1))\n   {0..real N}\n\ngoal (2 subgoals):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 2. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       - (complex_of_real (- pbernpoly 1 x) /\n          (complex_of_real x + s))) has_integral\n   - (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n        (complex_of_real (Inf I) + 1 / 2 + s) *\n        (Ln (complex_of_real (Inf I) + 1 + s) -\n         Ln (complex_of_real (Inf I) + s)) -\n        1))\n   {0..real N}\n\ngoal (2 subgoals):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 2. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "have \"-?i = (\\<Sum>x<N. (of_nat x + 1 / 2 + s) * (ln (of_nat x + s) - ln (of_nat x + 1 + s)) + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n         (complex_of_real (Inf I) + 1 / 2 + s) *\n         (Ln (complex_of_real (Inf I) + 1 + s) -\n          Ln (complex_of_real (Inf I) + s)) -\n         1) =\n    (\\<Sum>x<N.\n        (of_nat x + 1 / 2 + s) *\n        (Ln (of_nat x + s) - Ln (of_nat x + 1 + s)) +\n        1)", "by (subst sum.reindex) \n       (simp_all add: inj_on_def atLeast0LessThan algebra_simps sum_negf [symmetric])"], ["proof (state)\nthis:\n  - (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n       (complex_of_real (Inf I) + 1 / 2 + s) *\n       (Ln (complex_of_real (Inf I) + 1 + s) -\n        Ln (complex_of_real (Inf I) + s)) -\n       1) =\n  (\\<Sum>x<N.\n      (of_nat x + 1 / 2 + s) * (Ln (of_nat x + s) - Ln (of_nat x + 1 + s)) +\n      1)\n\ngoal (2 subgoals):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N\n 2. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>m<N.\n         (of_nat m + 1 / 2 + s) *\n         (Ln (of_nat m + s) - Ln (of_nat m + 1 + s)) +\n         1))\n     {0..real N}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       - (complex_of_real (- pbernpoly 1 x) /\n          (complex_of_real x + s))) has_integral\n   (\\<Sum>x<N.\n       (of_nat x + 1 / 2 + s) *\n       (Ln (of_nat x + s) - Ln (of_nat x + 1 + s)) +\n       1))\n   {0..real N}", "show has_integral: \n    \"((\\<lambda>x. of_real (pbernpoly 1 x) / (of_real x + s)) has_integral \\<dots>) {0..real N}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       - (complex_of_real (- pbernpoly 1 x) /\n          (complex_of_real x + s))) has_integral\n   (\\<Sum>x<N.\n       (of_nat x + 1 / 2 + s) *\n       (Ln (of_nat x + s) - Ln (of_nat x + 1 + s)) +\n       1))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real (pbernpoly 1 x) /\n         (complex_of_real x + s)) has_integral\n     (\\<Sum>x<N.\n         (of_nat x + 1 / 2 + s) *\n         (Ln (of_nat x + s) - Ln (of_nat x + 1 + s)) +\n         1))\n     {0..real N}", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real (pbernpoly 1 x) /\n       (complex_of_real x + s)) has_integral\n   (\\<Sum>x<N.\n       (of_nat x + 1 / 2 + s) *\n       (Ln (of_nat x + s) - Ln (of_nat x + 1 + s)) +\n       1))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "note integral"], ["proof (state)\nthis:\n  integral {0..real N}\n   (\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)) =\n  (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n     (complex_of_real (Inf I) + 1 / 2 + s) *\n     (Ln (complex_of_real (Inf I) + 1 + s) -\n      Ln (complex_of_real (Inf I) + s)) -\n     1)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  integral {0..real N}\n   (\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)) =\n  (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n     (complex_of_real (Inf I) + 1 / 2 + s) *\n     (Ln (complex_of_real (Inf I) + 1 + s) -\n      Ln (complex_of_real (Inf I) + s)) -\n     1)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"?i = (\\<Sum>n<N. (of_nat n + 1 / 2 + s) * \n                    (ln (of_nat n + 1 + s) - ln (of_nat n + s))) - N\" (is \"_ = ?S - _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n       (complex_of_real (Inf I) + 1 / 2 + s) *\n       (Ln (complex_of_real (Inf I) + 1 + s) -\n        Ln (complex_of_real (Inf I) + s)) -\n       1) =\n    (\\<Sum>n<N.\n        (of_nat n + 1 / 2 + s) *\n        (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) -\n    of_nat N", "by (subst sum.reindex) (simp_all add: inj_on_def sum_subtractf atLeast0LessThan)"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n     (complex_of_real (Inf I) + 1 / 2 + s) *\n     (Ln (complex_of_real (Inf I) + 1 + s) -\n      Ln (complex_of_real (Inf I) + s)) -\n     1) =\n  (\\<Sum>n<N.\n      (of_nat n + 1 / 2 + s) *\n      (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) -\n  of_nat N\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>I\\<in>(\\<lambda>n. {real n..real (n + 1)}) ` {0..<N}.\n     (complex_of_real (Inf I) + 1 / 2 + s) *\n     (Ln (complex_of_real (Inf I) + 1 + s) -\n      Ln (complex_of_real (Inf I) + s)) -\n     1) =\n  (\\<Sum>n<N.\n      (of_nat n + 1 / 2 + s) *\n      (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) -\n  of_nat N\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"?S = (\\<Sum>n<N. of_nat n * (ln (of_nat n + 1 + s) - ln (of_nat n + s))) +\n                    (s + 1 / 2) * (\\<Sum>n<N. ln (of_nat (Suc n) + s) - ln (of_nat n + s))\" \n    (is \"_ = ?S1 + _ * ?S2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<N.\n        (of_nat n + 1 / 2 + s) *\n        (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n    (\\<Sum>n<N. of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) +\n    (s + 1 / 2) * (\\<Sum>n<N. Ln (of_nat (Suc n) + s) - Ln (of_nat n + s))", "by (simp add: algebra_simps sum.distrib sum_subtractf sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>n<N.\n      (of_nat n + 1 / 2 + s) *\n      (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n  (\\<Sum>n<N. of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) +\n  (s + 1 / 2) * (\\<Sum>n<N. Ln (of_nat (Suc n) + s) - Ln (of_nat n + s))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n<N.\n      (of_nat n + 1 / 2 + s) *\n      (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n  (\\<Sum>n<N. of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) +\n  (s + 1 / 2) * (\\<Sum>n<N. Ln (of_nat (Suc n) + s) - Ln (of_nat n + s))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"?S2 = ln (of_nat N + s) - ln s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<N. Ln (of_nat (Suc n) + s) - Ln (of_nat n + s)) =\n    Ln (of_nat N + s) - Ln s", "by (subst sum_lessThan_telescope) simp"], ["proof (state)\nthis:\n  (\\<Sum>n<N. Ln (of_nat (Suc n) + s) - Ln (of_nat n + s)) =\n  Ln (of_nat N + s) - Ln s\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n<N. Ln (of_nat (Suc n) + s) - Ln (of_nat n + s)) =\n  Ln (of_nat N + s) - Ln s\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"?S1 = (\\<Sum>n=1..<N. of_nat n * (ln (of_nat n + 1 + s) - ln (of_nat n + s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n<N. of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n    (\\<Sum>n = 1..<N.\n        of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s)))", "by (intro sum.mono_neutral_right) auto"], ["proof (state)\nthis:\n  (\\<Sum>n<N. of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n  (\\<Sum>n = 1..<N. of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s)))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n<N. of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n  (\\<Sum>n = 1..<N. of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s)))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"\\<dots> = (\\<Sum>n=1..<N. of_nat n * ln (of_nat n + 1 + s)) - (\\<Sum>n=1..<N. of_nat n * ln (of_nat n + s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..<N.\n        of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n    (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + 1 + s)) -\n    (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + s))", "by (simp add: algebra_simps sum_subtractf)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N.\n      of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n  (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + 1 + s)) -\n  (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + s))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N.\n      of_nat n * (Ln (of_nat n + 1 + s) - Ln (of_nat n + s))) =\n  (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + 1 + s)) -\n  (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + s))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"(\\<Sum>n=1..<N. of_nat n * ln (of_nat n + 1 + s)) = \n               (\\<Sum>n=1..<N. (of_nat n - 1) * ln (of_nat n + s)) + (N - 1) * ln (of_nat N + s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + 1 + s)) =\n    (\\<Sum>n = 1..<N. (of_nat n - 1) * Ln (of_nat n + s)) +\n    of_nat (N - 1) * Ln (of_nat N + s)", "by (induction N) (simp_all add: add_ac of_nat_diff)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + 1 + s)) =\n  (\\<Sum>n = 1..<N. (of_nat n - 1) * Ln (of_nat n + s)) +\n  of_nat (N - 1) * Ln (of_nat N + s)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + 1 + s)) =\n  (\\<Sum>n = 1..<N. (of_nat n - 1) * Ln (of_nat n + s)) +\n  of_nat (N - 1) * Ln (of_nat N + s)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"\\<dots> - (\\<Sum>n = 1..<N. of_nat n * ln (of_nat n + s)) =\n               -(\\<Sum>n=1..<N. ln (of_nat n + s)) + (N - 1) * ln (of_nat N + s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..<N. (of_nat n - 1) * Ln (of_nat n + s)) +\n    of_nat (N - 1) * Ln (of_nat N + s) -\n    (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + s)) =\n    - (\\<Sum>n = 1..<N. Ln (of_nat n + s)) +\n    of_nat (N - 1) * Ln (of_nat N + s)", "by (induction N) (simp_all add: algebra_simps)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. (of_nat n - 1) * Ln (of_nat n + s)) +\n  of_nat (N - 1) * Ln (of_nat N + s) -\n  (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + s)) =\n  - (\\<Sum>n = 1..<N. Ln (of_nat n + s)) +\n  of_nat (N - 1) * Ln (of_nat N + s)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. (of_nat n - 1) * Ln (of_nat n + s)) +\n  of_nat (N - 1) * Ln (of_nat N + s) -\n  (\\<Sum>n = 1..<N. of_nat n * Ln (of_nat n + s)) =\n  - (\\<Sum>n = 1..<N. Ln (of_nat n + s)) +\n  of_nat (N - 1) * Ln (of_nat N + s)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "from s"], ["proof (chain)\npicking this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "have neq: \"s + of_nat x \\<noteq> 0\" for x"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. s + of_nat x \\<noteq> 0", "by (auto simp:  complex_nonpos_Reals_iff complex_eq_iff)"], ["proof (state)\nthis:\n  s + of_nat ?x1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "hence \"(\\<Sum>n=1..<N. ln (of_nat n + s)) = (\\<Sum>n=1..<N. ln (of_nat n) + ln (1 + s/n))\""], ["proof (prove)\nusing this:\n  s + of_nat ?x1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..<N. Ln (of_nat n + s)) =\n    (\\<Sum>n = 1..<N. Ln (of_nat n) + Ln (1 + s / of_nat n))", "by (intro sum.cong refl, subst Ln_times_of_nat [symmetric]) (auto simp: divide_simps add_ac)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. Ln (of_nat n + s)) =\n  (\\<Sum>n = 1..<N. Ln (of_nat n) + Ln (1 + s / of_nat n))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. Ln (of_nat n + s)) =\n  (\\<Sum>n = 1..<N. Ln (of_nat n) + Ln (1 + s / of_nat n))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"\\<dots> = ln (fact (N - 1)) + (\\<Sum>n=1..<N. ln (1 + s/n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..<N. Ln (of_nat n) + Ln (1 + s / of_nat n)) =\n    Ln (fact (N - 1)) + (\\<Sum>n = 1..<N. Ln (1 + s / of_nat n))", "by (induction N) (simp_all add: Ln_times_of_nat fact_reduce add_ac)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. Ln (of_nat n) + Ln (1 + s / of_nat n)) =\n  Ln (fact (N - 1)) + (\\<Sum>n = 1..<N. Ln (1 + s / of_nat n))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. Ln (of_nat n) + Ln (1 + s / of_nat n)) =\n  Ln (fact (N - 1)) + (\\<Sum>n = 1..<N. Ln (1 + s / of_nat n))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"(\\<Sum>n=1..<N. ln (1 + s/n)) = -(\\<Sum>n=1..<N. s / n - ln (1 + s/n)) + s * (\\<Sum>n=1..<N. 1 / of_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..<N. Ln (1 + s / of_nat n)) =\n    - (\\<Sum>n = 1..<N. s / of_nat n - Ln (1 + s / of_nat n)) +\n    s * (\\<Sum>n = 1..<N. 1 / of_nat n)", "by (simp add: sum_distrib_left sum_subtractf)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. Ln (1 + s / of_nat n)) =\n  - (\\<Sum>n = 1..<N. s / of_nat n - Ln (1 + s / of_nat n)) +\n  s * (\\<Sum>n = 1..<N. 1 / of_nat n)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. Ln (1 + s / of_nat n)) =\n  - (\\<Sum>n = 1..<N. s / of_nat n - Ln (1 + s / of_nat n)) +\n  s * (\\<Sum>n = 1..<N. 1 / of_nat n)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "from N"], ["proof (chain)\npicking this:\n  0 < N", "have \"ln (fact (N - 1)) = ln_Gamma (of_nat N :: complex)\""], ["proof (prove)\nusing this:\n  0 < N\n\ngoal (1 subgoal):\n 1. Ln (fact (N - 1)) = ln_Gamma (of_nat N)", "by (simp add: ln_Gamma_complex_conv_fact)"], ["proof (state)\nthis:\n  Ln (fact (N - 1)) = ln_Gamma (of_nat N)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  Ln (fact (N - 1)) = ln_Gamma (of_nat N)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"{1..<N} = {1..N - 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1..<N} = {1..N - 1}", "by auto"], ["proof (state)\nthis:\n  {1..<N} = {1..N - 1}\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "hence \"(\\<Sum>n = 1..<N. 1 / of_nat n) = (harm (N - 1) :: complex)\""], ["proof (prove)\nusing this:\n  {1..<N} = {1..N - 1}\n\ngoal (1 subgoal):\n 1. (\\<Sum>n = 1..<N. 1 / of_nat n) = harm (N - 1)", "by (simp add: harm_def divide_simps)"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. 1 / of_nat n) = harm (N - 1)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "also"], ["proof (state)\nthis:\n  (\\<Sum>n = 1..<N. 1 / of_nat n) = harm (N - 1)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "have \"- (ln_Gamma (of_nat N) + (- (\\<Sum>n = 1..<N. s / of_nat n - ln (1 + s / of_nat n)) +\n                 s * harm (N - 1))) + of_nat (N - 1) * ln (of_nat N + s) +\n                (s + 1 / 2) * (ln (of_nat N + s) - ln s) - of_nat N = approx N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (ln_Gamma (of_nat N) +\n       (- (\\<Sum>n = 1..<N. s / of_nat n - Ln (1 + s / of_nat n)) +\n        s * harm (N - 1))) +\n    of_nat (N - 1) * Ln (of_nat N + s) +\n    (s + 1 / 2) * (Ln (of_nat N + s) - Ln s) -\n    of_nat N =\n    approx N", "using N"], ["proof (prove)\nusing this:\n  0 < N\n\ngoal (1 subgoal):\n 1. - (ln_Gamma (of_nat N) +\n       (- (\\<Sum>n = 1..<N. s / of_nat n - Ln (1 + s / of_nat n)) +\n        s * harm (N - 1))) +\n    of_nat (N - 1) * Ln (of_nat N + s) +\n    (s + 1 / 2) * (Ln (of_nat N + s) - Ln s) -\n    of_nat N =\n    approx N", "by (simp add: field_simps of_nat_diff ln_div approx_def Ln_of_nat \n                          ln_Gamma_complex_of_real [symmetric])"], ["proof (state)\nthis:\n  - (ln_Gamma (of_nat N) +\n     (- (\\<Sum>n = 1..<N. s / of_nat n - Ln (1 + s / of_nat n)) +\n      s * harm (N - 1))) +\n  of_nat (N - 1) * Ln (of_nat N + s) +\n  (s + 1 / 2) * (Ln (of_nat N + s) - Ln s) -\n  of_nat N =\n  approx N\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "finally"], ["proof (chain)\npicking this:\n  integral {0..real N}\n   (\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)) =\n  approx N", "show \"integral {0..of_nat N} (\\<lambda>x. -of_real (pbernpoly 1 x) / (of_real x + s)) = \\<dots>\""], ["proof (prove)\nusing this:\n  integral {0..real N}\n   (\\<lambda>x.\n       complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)) =\n  approx N\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n    approx N", "by simp"], ["proof (state)\nthis:\n  integral {0..real N}\n   (\\<lambda>x.\n       - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n  approx N\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma integrable_ln_Gamma_aux:\n  shows   \"(\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n) integrable_on {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "proof (cases \"n = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 1 \\<Longrightarrow>\n    (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}\n 2. n \\<noteq> 1 \\<Longrightarrow>\n    (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "case True"], ["proof (state)\nthis:\n  n = 1\n\ngoal (2 subgoals):\n 1. n = 1 \\<Longrightarrow>\n    (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}\n 2. n \\<noteq> 1 \\<Longrightarrow>\n    (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "with s"], ["proof (chain)\npicking this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  n = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  n = 1\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "using integrable_neg[OF integrable_pbernpoly_1[of N]]"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  n = 1\n  0 < N \\<Longrightarrow>\n  (\\<lambda>x.\n      - (complex_of_real (- pbernpoly 1 x) /\n         (complex_of_real x + s))) integrable_on\n  {0..real N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "by (cases \"N = 0\") (simp_all add: integrable_negligible)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      complex_of_real (pbernpoly n x) /\n      (complex_of_real x + s) ^ n) integrable_on\n  {0..real N}\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow>\n    (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow>\n    (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow>\n    (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "from s"], ["proof (chain)\npicking this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "have \"of_real x + s \\<noteq> 0\" if \"x \\<ge> 0\" for x"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "using that"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "by (auto simp: complex_eq_iff add_eq_0_iff2 complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow> complex_of_real ?x + s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 1 \\<Longrightarrow>\n    (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "with False s"], ["proof (chain)\npicking this:\n  n \\<noteq> 1\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 \\<le> ?x \\<Longrightarrow> complex_of_real ?x + s \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> 1\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 \\<le> ?x \\<Longrightarrow> complex_of_real ?x + s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly n x) /\n        (complex_of_real x + s) ^ n) integrable_on\n    {0..real N}", "by (auto intro!: integrable_continuous_real continuous_intros)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      complex_of_real (pbernpoly n x) /\n      (complex_of_real x + s) ^ n) integrable_on\n  {0..real N}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  This following proof is based on ``Rudiments of the theory of the gamma function'' \n  by Bruce Berndt~\\cite{berndt}.\n\\<close>"], ["", "qualified"], ["", "lemma integral_pbernpoly_1: \n  \"(\\<lambda>N. integral {0..real N} (\\<lambda>x. pbernpoly 1 x / (x + s)))\n     \\<longlonglongrightarrow> -ln_Gamma s - s + (s - 1 / 2) * ln s + ln (2 * pi) / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "have neq: \"s + of_real x \\<noteq> 0\" if \"x \\<ge> 0\" for x :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. s + complex_of_real x \\<noteq> 0", "using that s"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. s + complex_of_real x \\<noteq> 0", "by (auto simp: complex_eq_iff complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow> s + complex_of_real ?x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "have \"(approx \\<longlongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s - (s - 1/2) * ln s - ln (2 * pi) / 2) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. approx\n    \\<longlonglongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s -\n                              (s - 1 / 2) * Ln s -\n                              complex_of_real (ln (2 * pi) / 2)", "unfolding approx_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        (\\<Sum>n = 1..<N. s / of_nat n - Ln (1 + s / of_nat n)) -\n        (euler_mascheroni * s + Ln s) -\n        complex_of_real\n         (ln_Gamma (real N) - ln (2 * pi / real N) / 2 -\n          real N * ln (real N) +\n          real N) -\n        s * (harm (N - 1) - Ln (of_nat (N - 1)) - euler_mascheroni) +\n        s * (Ln (of_nat N + s) - Ln (of_nat (N - 1))) -\n        1 / 2 * (Ln (of_nat N + s) - Ln (of_nat N)) +\n        of_nat N * (Ln (of_nat N + s) - Ln (of_nat N)) -\n        (s - 1 / 2) * Ln s -\n        complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s -\n                              (s - 1 / 2) * Ln s -\n                              complex_of_real (ln (2 * pi) / 2)", "proof (intro tendsto_add tendsto_diff)"], ["proof (state)\ngoal (8 subgoals):\n 1. (\\<lambda>x.\n        (\\<Sum>n = 1..<x. s / of_nat n - Ln (1 + s / of_nat n)) -\n        (euler_mascheroni * s + Ln s))\n    \\<longlonglongrightarrow> ln_Gamma s\n 2. (\\<lambda>x.\n        complex_of_real\n         (ln_Gamma (real x) - ln (2 * pi / real x) / 2 -\n          real x * ln (real x) +\n          real x))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 5. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 6. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 7. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 8. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "from s"], ["proof (chain)\npicking this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "have s': \"s \\<notin> \\<int>\\<^sub>\\<le>\\<^sub>0\""], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<int>\\<^sub>\\<le>\\<^sub>0", "by (auto simp: complex_nonpos_Reals_iff elim!: nonpos_Ints_cases)"], ["proof (state)\nthis:\n  s \\<notin> \\<int>\\<^sub>\\<le>\\<^sub>0\n\ngoal (8 subgoals):\n 1. (\\<lambda>x.\n        (\\<Sum>n = 1..<x. s / of_nat n - Ln (1 + s / of_nat n)) -\n        (euler_mascheroni * s + Ln s))\n    \\<longlonglongrightarrow> ln_Gamma s\n 2. (\\<lambda>x.\n        complex_of_real\n         (ln_Gamma (real x) - ln (2 * pi / real x) / 2 -\n          real x * ln (real x) +\n          real x))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 5. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 6. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 7. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 8. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"(\\<lambda>n. \\<Sum>i=1..<n. s / of_nat i - ln (1 + s / of_nat i)) \\<longlonglongrightarrow> \n             ln_Gamma s + euler_mascheroni * s + ln s\" (is \"?f \\<longlonglongrightarrow> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i = 1..<n. s / of_nat i - Ln (1 + s / of_nat i))\n    \\<longlonglongrightarrow> ln_Gamma s + euler_mascheroni * s + Ln s", "using ln_Gamma_series'_aux[OF s']"], ["proof (prove)\nusing this:\n  (\\<lambda>k. s / of_nat (Suc k) - Ln (1 + s / of_nat (Suc k))) sums\n  (ln_Gamma s + euler_mascheroni * s + Ln s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i = 1..<n. s / of_nat i - Ln (1 + s / of_nat i))\n    \\<longlonglongrightarrow> ln_Gamma s + euler_mascheroni * s + Ln s", "unfolding sums_def"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>k<n. s / of_nat (Suc k) - Ln (1 + s / of_nat (Suc k)))\n  \\<longlonglongrightarrow> ln_Gamma s + euler_mascheroni * s + Ln s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. \\<Sum>i = 1..<n. s / of_nat i - Ln (1 + s / of_nat i))\n    \\<longlonglongrightarrow> ln_Gamma s + euler_mascheroni * s + Ln s", "by (subst filterlim_sequentially_Suc [symmetric], subst (asm) sum.atLeast1_atMost_eq [symmetric]) \n         (simp add: atLeastLessThanSuc_atLeastAtMost)"], ["proof (state)\nthis:\n  (\\<lambda>n. \\<Sum>i = 1..<n. s / of_nat i - Ln (1 + s / of_nat i))\n  \\<longlonglongrightarrow> ln_Gamma s + euler_mascheroni * s + Ln s\n\ngoal (8 subgoals):\n 1. (\\<lambda>x.\n        (\\<Sum>n = 1..<x. s / of_nat n - Ln (1 + s / of_nat n)) -\n        (euler_mascheroni * s + Ln s))\n    \\<longlonglongrightarrow> ln_Gamma s\n 2. (\\<lambda>x.\n        complex_of_real\n         (ln_Gamma (real x) - ln (2 * pi / real x) / 2 -\n          real x * ln (real x) +\n          real x))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 5. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 6. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 7. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 8. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "thus \"((\\<lambda>n. ?f n - (euler_mascheroni * s + ln s)) \\<longlongrightarrow> ln_Gamma s) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<Sum>i = 1..<n. s / of_nat i - Ln (1 + s / of_nat i))\n  \\<longlonglongrightarrow> ln_Gamma s + euler_mascheroni * s + Ln s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        (\\<Sum>i = 1..<n. s / of_nat i - Ln (1 + s / of_nat i)) -\n        (euler_mascheroni * s + Ln s))\n    \\<longlonglongrightarrow> ln_Gamma s", "by (auto intro: tendsto_eq_intros)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      (\\<Sum>i = 1..<n. s / of_nat i - Ln (1 + s / of_nat i)) -\n      (euler_mascheroni * s + Ln s))\n  \\<longlonglongrightarrow> ln_Gamma s\n\ngoal (7 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real\n         (ln_Gamma (real x) - ln (2 * pi / real x) / 2 -\n          real x * ln (real x) +\n          real x))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 5. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 6. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 7. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. (\\<lambda>x.\n        complex_of_real\n         (ln_Gamma (real x) - ln (2 * pi / real x) / 2 -\n          real x * ln (real x) +\n          real x))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 5. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 6. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 7. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "show \"(\\<lambda>x. complex_of_real (ln_Gamma (real x) - ln (2 * pi / real x) / 2 - \n                 real x * ln (real x) + real x)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real\n         (ln_Gamma (real x) - ln (2 * pi / real x) / 2 -\n          real x * ln (real x) +\n          real x))\n    \\<longlonglongrightarrow> 0", "proof (intro tendsto_of_real_0_I \n             filterlim_compose[OF tendsto_sandwich filterlim_real_sequentially])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F n in at_top.\n       ?f2 n \\<le> ln_Gamma n - ln (2 * pi / n) / 2 - n * ln n + n\n 2. \\<forall>\\<^sub>F n in at_top.\n       ln_Gamma n - ln (2 * pi / n) / 2 - n * ln n + n \\<le> ?h2 n\n 3. (?f2 \\<longlongrightarrow> 0) at_top\n 4. (?h2 \\<longlongrightarrow> 0) at_top", "show \"eventually (\\<lambda>x::real. ln_Gamma x - ln (2 * pi / x) / 2 - x * ln x + x \\<ge> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln_Gamma x - ln (2 * pi / x) / 2 - x * ln x + x", "using eventually_ge_at_top[of \"1::real\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 1) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       0 \\<le> ln_Gamma x - ln (2 * pi / x) / 2 - x * ln x + x", "by eventually_elim (insert ln_Gamma_bounds(1), simp add: algebra_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     0 \\<le> ln_Gamma x - ln (2 * pi / x) / 2 - x * ln x + x\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F n in at_top.\n       ln_Gamma n - ln (2 * pi / n) / 2 - n * ln n + n \\<le> ?h2 n\n 2. ((\\<lambda>x. 0) \\<longlongrightarrow> 0) at_top\n 3. (?h2 \\<longlongrightarrow> 0) at_top", "show \"eventually (\\<lambda>x::real. ln_Gamma x - ln (2 * pi / x) / 2 - x * ln x + x \\<le> \n              1 / 12 * inverse x) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln_Gamma x - ln (2 * pi / x) / 2 - x * ln x + x\n       \\<le> 1 / 12 * inverse x", "using eventually_ge_at_top[of \"1::real\"]"], ["proof (prove)\nusing this:\n  eventually ((\\<le>) 1) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       ln_Gamma x - ln (2 * pi / x) / 2 - x * ln x + x\n       \\<le> 1 / 12 * inverse x", "by eventually_elim (insert ln_Gamma_bounds(2), simp add: field_simps)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     ln_Gamma x - ln (2 * pi / x) / 2 - x * ln x + x\n     \\<le> 1 / 12 * inverse x\n\ngoal (2 subgoals):\n 1. ((\\<lambda>x. 0) \\<longlongrightarrow> 0) at_top\n 2. ((\\<lambda>x. 1 / 12 * inverse x) \\<longlongrightarrow> 0) at_top", "show \"((\\<lambda>x::real. 1 / 12 * inverse x) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 1 / 12 * inverse x) \\<longlongrightarrow> 0) at_top", "by (intro tendsto_mult_right_zero tendsto_inverse_0_at_top filterlim_ident)"], ["proof (state)\nthis:\n  ((\\<lambda>x. 1 / 12 * inverse x) \\<longlongrightarrow> 0) at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. 0) \\<longlongrightarrow> 0) at_top", "qed simp_all"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      complex_of_real\n       (ln_Gamma (real x) - ln (2 * pi / real x) / 2 -\n        real x * ln (real x) +\n        real x))\n  \\<longlonglongrightarrow> 0\n\ngoal (6 subgoals):\n 1. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 5. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 6. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 5. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 6. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"(\\<lambda>x. s * of_real (harm (x - 1) - ln (real (x - 1)) - euler_mascheroni)) \\<longlonglongrightarrow> \n            s * of_real (euler_mascheroni - euler_mascheroni)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        s *\n        complex_of_real\n         (harm (x - 1) - ln (real (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> s *\n                              complex_of_real\n                               (euler_mascheroni - euler_mascheroni)", "by (subst filterlim_sequentially_Suc [symmetric], intro tendsto_intros) \n         (insert euler_mascheroni_LIMSEQ, simp_all)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      s *\n      complex_of_real (harm (x - 1) - ln (real (x - 1)) - euler_mascheroni))\n  \\<longlonglongrightarrow> s *\n                            complex_of_real\n                             (euler_mascheroni - euler_mascheroni)\n\ngoal (6 subgoals):\n 1. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 5. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 6. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      s *\n      complex_of_real (harm (x - 1) - ln (real (x - 1)) - euler_mascheroni))\n  \\<longlonglongrightarrow> s *\n                            complex_of_real\n                             (euler_mascheroni - euler_mascheroni)\n\ngoal (6 subgoals):\n 1. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 5. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 6. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"?this \\<longleftrightarrow> (\\<lambda>x. s * (harm (x - 1) - ln (of_nat (x - 1)) - euler_mascheroni)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        s *\n        complex_of_real\n         (harm (x - 1) - ln (real (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> s *\n                              complex_of_real\n                               (euler_mascheroni - euler_mascheroni) =\n    (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0", "by (intro filterlim_cong refl eventually_mono[OF eventually_gt_at_top[of \"1::nat\"]]) \n         (auto simp: Ln_of_nat of_real_harm)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      s *\n      complex_of_real (harm (x - 1) - ln (real (x - 1)) - euler_mascheroni))\n  \\<longlonglongrightarrow> s *\n                            complex_of_real\n                             (euler_mascheroni - euler_mascheroni) =\n  (\\<lambda>x. s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n  \\<longlonglongrightarrow> 0\n\ngoal (6 subgoals):\n 1. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 4. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 5. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 6. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n  \\<longlonglongrightarrow> 0", "show \"(\\<lambda>x. s * (harm (x - 1) - ln (of_nat (x - 1)) - euler_mascheroni)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n    \\<longlonglongrightarrow> 0", "."], ["proof (state)\nthis:\n  (\\<lambda>x. s * (harm (x - 1) - Ln (of_nat (x - 1)) - euler_mascheroni))\n  \\<longlonglongrightarrow> 0\n\ngoal (5 subgoals):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 4. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 5. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 4. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 5. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"((\\<lambda>x. ln (1 + (s + 1) / of_real x)) \\<longlongrightarrow> ln (1 + 0)) at_top\" (is ?P)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Ln (1 + (s + 1) / complex_of_real x)) \\<longlongrightarrow>\n     Ln (1 + 0))\n     at_top", "by (intro tendsto_intros tendsto_divide_0[OF tendsto_const]) \n         (simp_all add: filterlim_ident filterlim_at_infinity_conv_norm_at_top filterlim_abs_real)"], ["proof (state)\nthis:\n  ((\\<lambda>x. Ln (1 + (s + 1) / complex_of_real x)) \\<longlongrightarrow>\n   Ln (1 + 0))\n   at_top\n\ngoal (5 subgoals):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 4. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 5. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. Ln (1 + (s + 1) / complex_of_real x)) \\<longlongrightarrow>\n   Ln (1 + 0))\n   at_top\n\ngoal (5 subgoals):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 4. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 5. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"ln (of_real (x + 1) + s) - ln (complex_of_real x) = ln (1 + (s + 1) / of_real x)\" \n      if \"x > 1\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (complex_of_real (x + 1) + s) - Ln (complex_of_real x) =\n    Ln (1 + (s + 1) / complex_of_real x)", "using that s"], ["proof (prove)\nusing this:\n  1 < x\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. Ln (complex_of_real (x + 1) + s) - Ln (complex_of_real x) =\n    Ln (1 + (s + 1) / complex_of_real x)", "using Ln_divide_of_real[of x \"of_real (x + 1) + s\", symmetric] neq[of \"x+1\"]"], ["proof (prove)\nusing this:\n  1 < x\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  \\<lbrakk>0 < x; complex_of_real (x + 1) + s \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Ln (complex_of_real (x + 1) + s) -\n                    complex_of_real (ln x) =\n                    Ln ((complex_of_real (x + 1) + s) / complex_of_real x)\n  0 \\<le> x + 1 \\<Longrightarrow> s + complex_of_real (x + 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Ln (complex_of_real (x + 1) + s) - Ln (complex_of_real x) =\n    Ln (1 + (s + 1) / complex_of_real x)", "by (simp add: field_simps Ln_of_real)"], ["proof (state)\nthis:\n  1 < ?x \\<Longrightarrow>\n  Ln (complex_of_real (?x + 1) + s) - Ln (complex_of_real ?x) =\n  Ln (1 + (s + 1) / complex_of_real ?x)\n\ngoal (5 subgoals):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 4. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 5. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "hence \"?P \\<longleftrightarrow> ((\\<lambda>x. ln (of_real (x + 1) + s) - ln (of_real x)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  1 < ?x \\<Longrightarrow>\n  Ln (complex_of_real (?x + 1) + s) - Ln (complex_of_real ?x) =\n  Ln (1 + (s + 1) / complex_of_real ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Ln (1 + (s + 1) / complex_of_real x)) \\<longlongrightarrow>\n     Ln (1 + 0))\n     at_top =\n    ((\\<lambda>x.\n         Ln (complex_of_real (x + 1) + s) -\n         Ln (complex_of_real x)) \\<longlongrightarrow>\n     0)\n     at_top", "by (intro filterlim_cong refl) \n         (auto intro: eventually_mono[OF eventually_gt_at_top[of \"1::real\"]])"], ["proof (state)\nthis:\n  ((\\<lambda>x. Ln (1 + (s + 1) / complex_of_real x)) \\<longlongrightarrow>\n   Ln (1 + 0))\n   at_top =\n  ((\\<lambda>x.\n       Ln (complex_of_real (x + 1) + s) -\n       Ln (complex_of_real x)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (5 subgoals):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 4. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 5. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       Ln (complex_of_real (x + 1) + s) -\n       Ln (complex_of_real x)) \\<longlongrightarrow>\n   0)\n   at_top", "have \"((\\<lambda>n. ln (of_real (real n + 1) + s) - ln (of_real (real n))) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       Ln (complex_of_real (x + 1) + s) -\n       Ln (complex_of_real x)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        Ln (complex_of_real (real n + 1) + s) -\n        Ln (complex_of_real (real n)))\n    \\<longlonglongrightarrow> 0", "by (rule filterlim_compose[OF _ filterlim_real_sequentially])"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      Ln (complex_of_real (real n + 1) + s) - Ln (complex_of_real (real n)))\n  \\<longlonglongrightarrow> 0\n\ngoal (5 subgoals):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 4. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 5. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "hence \"((\\<lambda>n. ln (of_nat n + s) - ln (of_nat (n - 1))) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      Ln (complex_of_real (real n + 1) + s) - Ln (complex_of_real (real n)))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Ln (of_nat n + s) - Ln (of_nat (n - 1)))\n    \\<longlonglongrightarrow> 0", "by (subst filterlim_sequentially_Suc [symmetric]) (simp add: add_ac)"], ["proof (state)\nthis:\n  (\\<lambda>n. Ln (of_nat n + s) - Ln (of_nat (n - 1)))\n  \\<longlonglongrightarrow> 0\n\ngoal (5 subgoals):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 3. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 4. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 5. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "thus \"(\\<lambda>x. s * (ln (of_nat x + s) - ln (of_nat (x - 1)))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. Ln (of_nat n + s) - Ln (of_nat (n - 1)))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n    \\<longlonglongrightarrow> 0", "by (rule tendsto_mult_right_zero)"], ["proof (state)\nthis:\n  (\\<lambda>x. s * (Ln (of_nat x + s) - Ln (of_nat (x - 1))))\n  \\<longlonglongrightarrow> 0\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 3. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 4. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 3. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 4. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"((\\<lambda>x. ln (1 + s / of_real x)) \\<longlongrightarrow> ln (1 + 0)) at_top\" (is ?P)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n     Ln (1 + 0))\n     at_top", "by (intro tendsto_intros tendsto_divide_0[OF tendsto_const]) \n         (simp_all add: filterlim_ident  filterlim_at_infinity_conv_norm_at_top filterlim_abs_real)"], ["proof (state)\nthis:\n  ((\\<lambda>x. Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n   Ln (1 + 0))\n   at_top\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 3. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 4. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n   Ln (1 + 0))\n   at_top\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 3. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 4. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"ln (of_real x + s) - ln (of_real x) = ln (1 + s / of_real x)\" if \"x > 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (complex_of_real x + s) - Ln (complex_of_real x) =\n    Ln (1 + s / complex_of_real x)", "using Ln_divide_of_real[of x \"of_real x + s\"] neq[of x] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < x; complex_of_real x + s \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Ln ((complex_of_real x + s) / complex_of_real x) =\n                    Ln (complex_of_real x + s) - complex_of_real (ln x)\n  0 \\<le> x \\<Longrightarrow> s + complex_of_real x \\<noteq> 0\n  0 < x\n\ngoal (1 subgoal):\n 1. Ln (complex_of_real x + s) - Ln (complex_of_real x) =\n    Ln (1 + s / complex_of_real x)", "by (auto simp: field_simps Ln_of_real)"], ["proof (state)\nthis:\n  0 < ?x \\<Longrightarrow>\n  Ln (complex_of_real ?x + s) - Ln (complex_of_real ?x) =\n  Ln (1 + s / complex_of_real ?x)\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 3. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 4. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "hence \"?P \\<longleftrightarrow> ((\\<lambda>x. ln (of_real x + s) - ln (of_real x)) \\<longlongrightarrow> 0) at_top\""], ["proof (prove)\nusing this:\n  0 < ?x \\<Longrightarrow>\n  Ln (complex_of_real ?x + s) - Ln (complex_of_real ?x) =\n  Ln (1 + s / complex_of_real ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n     Ln (1 + 0))\n     at_top =\n    ((\\<lambda>x.\n         Ln (complex_of_real x + s) -\n         Ln (complex_of_real x)) \\<longlongrightarrow>\n     0)\n     at_top", "using s"], ["proof (prove)\nusing this:\n  0 < ?x \\<Longrightarrow>\n  Ln (complex_of_real ?x + s) - Ln (complex_of_real ?x) =\n  Ln (1 + s / complex_of_real ?x)\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n     Ln (1 + 0))\n     at_top =\n    ((\\<lambda>x.\n         Ln (complex_of_real x + s) -\n         Ln (complex_of_real x)) \\<longlongrightarrow>\n     0)\n     at_top", "by (intro filterlim_cong refl) \n                 (auto intro: eventually_mono [OF eventually_gt_at_top[of \"1::real\"]])"], ["proof (state)\nthis:\n  ((\\<lambda>x. Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n   Ln (1 + 0))\n   at_top =\n  ((\\<lambda>x.\n       Ln (complex_of_real x + s) -\n       Ln (complex_of_real x)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 3. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 4. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       Ln (complex_of_real x + s) -\n       Ln (complex_of_real x)) \\<longlongrightarrow>\n   0)\n   at_top", "have \"(\\<lambda>x. (1/2) * (ln (of_real (real x) + s) - ln (of_real (real x)))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       Ln (complex_of_real x + s) -\n       Ln (complex_of_real x)) \\<longlongrightarrow>\n   0)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        1 / 2 *\n        (Ln (complex_of_real (real x) + s) - Ln (complex_of_real (real x))))\n    \\<longlonglongrightarrow> 0", "by (rule tendsto_mult_right_zero[OF filterlim_compose[OF _ filterlim_real_sequentially]])"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      1 / 2 *\n      (Ln (complex_of_real (real x) + s) - Ln (complex_of_real (real x))))\n  \\<longlonglongrightarrow> 0\n\ngoal (4 subgoals):\n 1. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0\n 2. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 3. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 4. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "thus \"(\\<lambda>x. (1/2) * (ln (of_nat x + s) - ln (of_nat x))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      1 / 2 *\n      (Ln (complex_of_real (real x) + s) - Ln (complex_of_real (real x))))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> 0", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. 1 / 2 * (Ln (of_nat x + s) - Ln (of_nat x)))\n  \\<longlonglongrightarrow> 0\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 2. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 3. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 2. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 3. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"((\\<lambda>x. x * (ln (1 + s / of_real x))) \\<longlongrightarrow> s) at_top\" (is ?P)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x *\n         Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n     s)\n     at_top", "by (rule stirling_limit_aux2)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real x *\n       Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n   s)\n   at_top\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 2. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 3. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real x *\n       Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n   s)\n   at_top\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 2. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 3. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "have \"ln (1 + s / of_real x) = ln (of_real x + s) - ln (of_real x)\" if \"x > 1\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (1 + s / complex_of_real x) =\n    Ln (complex_of_real x + s) - Ln (complex_of_real x)", "using that s Ln_divide_of_real [of x \"of_real x + s\", symmetric] neq[of x]"], ["proof (prove)\nusing this:\n  1 < x\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  \\<lbrakk>0 < x; complex_of_real x + s \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Ln (complex_of_real x + s) - complex_of_real (ln x) =\n                    Ln ((complex_of_real x + s) / complex_of_real x)\n  0 \\<le> x \\<Longrightarrow> s + complex_of_real x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Ln (1 + s / complex_of_real x) =\n    Ln (complex_of_real x + s) - Ln (complex_of_real x)", "by (auto simp: Ln_of_real field_simps)"], ["proof (state)\nthis:\n  1 < ?x \\<Longrightarrow>\n  Ln (1 + s / complex_of_real ?x) =\n  Ln (complex_of_real ?x + s) - Ln (complex_of_real ?x)\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 2. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 3. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "hence \"?P \\<longleftrightarrow> ((\\<lambda>x. of_real x * (ln (of_real x + s) - ln (of_real x))) \\<longlongrightarrow> s) at_top\""], ["proof (prove)\nusing this:\n  1 < ?x \\<Longrightarrow>\n  Ln (1 + s / complex_of_real ?x) =\n  Ln (complex_of_real ?x + s) - Ln (complex_of_real ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real x *\n         Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n     s)\n     at_top =\n    ((\\<lambda>x.\n         complex_of_real x *\n         (Ln (complex_of_real x + s) -\n          Ln (complex_of_real x))) \\<longlongrightarrow>\n     s)\n     at_top", "by (intro filterlim_cong refl) \n         (auto intro: eventually_mono[OF eventually_gt_at_top[of \"1::real\"]])"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real x *\n       Ln (1 + s / complex_of_real x)) \\<longlongrightarrow>\n   s)\n   at_top =\n  ((\\<lambda>x.\n       complex_of_real x *\n       (Ln (complex_of_real x + s) -\n        Ln (complex_of_real x))) \\<longlongrightarrow>\n   s)\n   at_top\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 2. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 3. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       complex_of_real x *\n       (Ln (complex_of_real x + s) -\n        Ln (complex_of_real x))) \\<longlongrightarrow>\n   s)\n   at_top", "have \"(\\<lambda>n. of_real (real n) * (ln (of_real (real n) + s) - ln (of_real (real n)))) \\<longlonglongrightarrow> s\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       complex_of_real x *\n       (Ln (complex_of_real x + s) -\n        Ln (complex_of_real x))) \\<longlongrightarrow>\n   s)\n   at_top\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        complex_of_real (real n) *\n        (Ln (complex_of_real (real n) + s) - Ln (complex_of_real (real n))))\n    \\<longlonglongrightarrow> s", "by (rule filterlim_compose[OF _ filterlim_real_sequentially])"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      complex_of_real (real n) *\n      (Ln (complex_of_real (real n) + s) - Ln (complex_of_real (real n))))\n  \\<longlonglongrightarrow> s\n\ngoal (3 subgoals):\n 1. (\\<lambda>x. of_nat x * (Ln (of_nat x + s) - Ln (of_nat x)))\n    \\<longlonglongrightarrow> s\n 2. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 3. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "thus \"(\\<lambda>n. of_nat n * (ln (of_nat n + s) - ln (of_nat n))) \\<longlonglongrightarrow> s\""], ["proof (prove)\nusing this:\n  (\\<lambda>n.\n      complex_of_real (real n) *\n      (Ln (complex_of_real (real n) + s) - Ln (complex_of_real (real n))))\n  \\<longlonglongrightarrow> s\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. of_nat n * (Ln (of_nat n + s) - Ln (of_nat n)))\n    \\<longlonglongrightarrow> s", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. of_nat n * (Ln (of_nat n + s) - Ln (of_nat n)))\n  \\<longlonglongrightarrow> s\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. (s - 1 / 2) * Ln s)\n    \\<longlonglongrightarrow> (s - 1 / 2) * Ln s\n 2. (\\<lambda>x. complex_of_real (ln (2 * pi) / 2))\n    \\<longlonglongrightarrow> complex_of_real (ln (2 * pi) / 2)", "qed simp_all"], ["proof (state)\nthis:\n  approx\n  \\<longlonglongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s -\n                            (s - 1 / 2) * Ln s -\n                            complex_of_real (ln (2 * pi) / 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "also"], ["proof (state)\nthis:\n  approx\n  \\<longlonglongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s -\n                            (s - 1 / 2) * Ln s -\n                            complex_of_real (ln (2 * pi) / 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "have \"?this \\<longleftrightarrow> ((\\<lambda>N. integral {0..real N} (\\<lambda>x. -pbernpoly 1 x / (x + s))) \\<longlongrightarrow>\n                         ln_Gamma s + s - (s - 1/2) * ln s - ln (2 * pi) / 2) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. approx\n    \\<longlonglongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s -\n                              (s - 1 / 2) * Ln s -\n                              complex_of_real (ln (2 * pi) / 2) =\n    (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> ln_Gamma s + s - (s - 1 / 2) * Ln s -\n                              complex_of_real (ln (2 * pi) / 2)", "using integral_pbernpoly_1_aux"], ["proof (prove)\nusing this:\n  0 < ?N \\<Longrightarrow>\n  integral {0..real ?N}\n   (\\<lambda>x.\n       - complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)) =\n  approx ?N\n\ngoal (1 subgoal):\n 1. approx\n    \\<longlonglongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s -\n                              (s - 1 / 2) * Ln s -\n                              complex_of_real (ln (2 * pi) / 2) =\n    (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> ln_Gamma s + s - (s - 1 / 2) * Ln s -\n                              complex_of_real (ln (2 * pi) / 2)", "by (intro filterlim_cong refl) \n       (auto intro: eventually_mono[OF eventually_gt_at_top[of \"0::nat\"]])"], ["proof (state)\nthis:\n  approx\n  \\<longlonglongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s -\n                            (s - 1 / 2) * Ln s -\n                            complex_of_real (ln (2 * pi) / 2) =\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)))\n  \\<longlonglongrightarrow> ln_Gamma s + s - (s - 1 / 2) * Ln s -\n                            complex_of_real (ln (2 * pi) / 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "also"], ["proof (state)\nthis:\n  approx\n  \\<longlonglongrightarrow> ln_Gamma s - 0 - 0 + 0 - 0 + s -\n                            (s - 1 / 2) * Ln s -\n                            complex_of_real (ln (2 * pi) / 2) =\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s)))\n  \\<longlonglongrightarrow> ln_Gamma s + s - (s - 1 / 2) * Ln s -\n                            complex_of_real (ln (2 * pi) / 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "have \"(\\<lambda>N. integral {0..real N} (\\<lambda>x. -pbernpoly 1 x / (x + s))) =\n               (\\<lambda>N. -integral {0..real N} (\\<lambda>x. pbernpoly 1 x / (x + s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s))) =\n    (\\<lambda>N.\n        - integral {0..real N}\n           (\\<lambda>x.\n               complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))", "by (simp add: fun_eq_iff)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (- pbernpoly 1 x) / (complex_of_real x + s))) =\n  (\\<lambda>N.\n      - integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>N.\n      - integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n  \\<longlonglongrightarrow> ln_Gamma s + s - (s - 1 / 2) * Ln s -\n                            complex_of_real (ln (2 * pi) / 2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      - integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n  \\<longlonglongrightarrow> ln_Gamma s + s - (s - 1 / 2) * Ln s -\n                            complex_of_real (ln (2 * pi) / 2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n    \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                              complex_of_real (ln (2 * pi) / 2)", "by (simp add: tendsto_minus_cancel_left [symmetric] algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n  \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                            complex_of_real (ln (2 * pi) / 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "qualified"], ["", "lemma pbernpoly_integral_conv_pbernpoly_integral_Suc:\n  assumes \"n \\<ge> 1\"\n  shows   \"integral {0..real N} (\\<lambda>x. pbernpoly n x / (x + s) ^ n) =\n             of_real (pbernpoly (Suc n) (real N)) / (of_nat (Suc n) * (s + of_nat N) ^ n) -\n             of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) + of_nat n / of_nat (Suc n) * \n               integral {0..real N} (\\<lambda>x. of_real (pbernpoly (Suc n) x) / (of_real x + s) ^ Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "note [derivative_intros] = has_field_derivative_pbernpoly_Suc'"], ["proof (state)\nthis:\n  \\<lbrakk>(?f has_real_derivative ?D) (at ?x within ?s);\n   2 \\<le> ?n \\<or> ?f ?x \\<notin> \\<int>\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x.\n                         pbernpoly (Suc ?n) (?f x)) has_real_derivative\n                     real (Suc ?n) * pbernpoly ?n (?f ?x) * ?D)\n                     (at ?x within ?s)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "define I where \"I = -of_real (pbernpoly (Suc n) (of_nat N)) / (of_nat (Suc n) * (of_nat N + s) ^ n) +\n            of_real (bernoulli (Suc n) / real (Suc n)) / s ^ n +\n            integral {0..real N} (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n)\""], ["proof (state)\nthis:\n  I =\n  - complex_of_real (pbernpoly (Suc n) (real N)) /\n  (of_nat (Suc n) * (of_nat N + s) ^ n) +\n  complex_of_real (bernoulli (Suc n) / real (Suc n)) / s ^ n +\n  integral {0..real N}\n   (\\<lambda>x.\n       complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "have \"((\\<lambda>x. (-of_nat n * inverse (of_real x + s) ^ Suc n) * \n          (of_real (pbernpoly (Suc n) x) / (of_nat (Suc n))))\n          has_integral -I) {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         - of_nat n * inverse (complex_of_real x + s) ^ Suc n *\n         (complex_of_real (pbernpoly (Suc n) x) /\n          of_nat (Suc n))) has_integral\n     - I)\n     {0..real N}", "proof (rule integration_by_parts_interior_strong[OF bounded_bilinear_mult])"], ["proof (state)\ngoal (7 subgoals):\n 1. finite ?s\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N} ?f\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       (?f has_vector_derivative\n        - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n        (at x)\n 6. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            of_nat (Suc n)) has_vector_derivative\n        ?g' x)\n        (at x)\n 7. ((\\<lambda>x. ?f x * ?g' x) has_integral\n     ?f (real N) *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     ?f 0 * (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "fix x :: real"], ["proof (state)\ngoal (7 subgoals):\n 1. finite ?s\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N} ?f\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       (?f has_vector_derivative\n        - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n        (at x)\n 6. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            of_nat (Suc n)) has_vector_derivative\n        ?g' x)\n        (at x)\n 7. ((\\<lambda>x. ?f x * ?g' x) has_integral\n     ?f (real N) *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     ?f 0 * (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "assume x: \"x \\<in> {0<..<real N} - real ` {0..N}\""], ["proof (state)\nthis:\n  x \\<in> {0<..<real N} - real ` {0..N}\n\ngoal (7 subgoals):\n 1. finite ?s\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N} ?f\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       (?f has_vector_derivative\n        - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n        (at x)\n 6. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            of_nat (Suc n)) has_vector_derivative\n        ?g' x)\n        (at x)\n 7. ((\\<lambda>x. ?f x * ?g' x) has_integral\n     ?f (real N) *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     ?f 0 * (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "have \"x \\<notin> \\<int>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> \\<int>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> \\<int> \\<Longrightarrow> False", "assume \"x \\<in> \\<int>\""], ["proof (state)\nthis:\n  x \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. x \\<in> \\<int> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<int>", "obtain n where \"x = of_int n\""], ["proof (prove)\nusing this:\n  x \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. (\\<And>n. x = real_of_int n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: Ints_cases)"], ["proof (state)\nthis:\n  x = real_of_int n\n\ngoal (1 subgoal):\n 1. x \\<in> \\<int> \\<Longrightarrow> False", "with x"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<real N} - real ` {0..N}\n  x = real_of_int n", "have x': \"x = of_nat (nat n)\""], ["proof (prove)\nusing this:\n  x \\<in> {0<..<real N} - real ` {0..N}\n  x = real_of_int n\n\ngoal (1 subgoal):\n 1. x = real (nat n)", "by simp"], ["proof (state)\nthis:\n  x = real (nat n)\n\ngoal (1 subgoal):\n 1. x \\<in> \\<int> \\<Longrightarrow> False", "from x"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<real N} - real ` {0..N}", "show False"], ["proof (prove)\nusing this:\n  x \\<in> {0<..<real N} - real ` {0..N}\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: x')"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> \\<int>\n\ngoal (7 subgoals):\n 1. finite ?s\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N} ?f\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       (?f has_vector_derivative\n        - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n        (at x)\n 6. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            of_nat (Suc n)) has_vector_derivative\n        ?g' x)\n        (at x)\n 7. ((\\<lambda>x. ?f x * ?g' x) has_integral\n     ?f (real N) *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     ?f 0 * (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "hence \"((\\<lambda>x. of_real (pbernpoly (Suc n) x / of_nat (Suc n))) has_vector_derivative\n        complex_of_real (pbernpoly n x)) (at x)\""], ["proof (prove)\nusing this:\n  x \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real\n          (pbernpoly (Suc n) x / real (Suc n))) has_vector_derivative\n     complex_of_real (pbernpoly n x))\n     (at x)", "by (intro has_vector_derivative_of_real) (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real\n        (pbernpoly (Suc n) x / real (Suc n))) has_vector_derivative\n   complex_of_real (pbernpoly n x))\n   (at x)\n\ngoal (7 subgoals):\n 1. finite ?s\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N} ?f\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       (?f has_vector_derivative\n        - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n        (at x)\n 6. \\<And>x.\n       x \\<in> {0<..<real N} - ?s \\<Longrightarrow>\n       ((\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            of_nat (Suc n)) has_vector_derivative\n        ?g' x)\n        (at x)\n 7. ((\\<lambda>x. ?f x * ?g' x) has_integral\n     ?f (real N) *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     ?f 0 * (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "thus \"((\\<lambda>x. of_real (pbernpoly (Suc n) x) / of_nat (Suc n)) has_vector_derivative\n            complex_of_real (pbernpoly n x)) (at x)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       complex_of_real\n        (pbernpoly (Suc n) x / real (Suc n))) has_vector_derivative\n   complex_of_real (pbernpoly n x))\n   (at x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         of_nat (Suc n)) has_vector_derivative\n     complex_of_real (pbernpoly n x))\n     (at x)", "by simp"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       complex_of_real (pbernpoly (Suc n) x) /\n       of_nat (Suc n)) has_vector_derivative\n   complex_of_real (pbernpoly n x))\n   (at x)\n\ngoal (6 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N} ?f\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. \\<And>x.\n       x \\<in> {0<..<real N} - real ` {0..N} \\<Longrightarrow>\n       (?f has_vector_derivative\n        - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n        (at x)\n 6. ((\\<lambda>x. ?f x * complex_of_real (pbernpoly n x)) has_integral\n     ?f (real N) *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     ?f 0 * (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "from x s"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<real N} - real ` {0..N}\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "have \"complex_of_real x + s \\<noteq> 0\""], ["proof (prove)\nusing this:\n  x \\<in> {0<..<real N} - real ` {0..N}\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "by (auto simp: complex_eq_iff complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  complex_of_real x + s \\<noteq> 0\n\ngoal (6 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N} ?f\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. \\<And>x.\n       x \\<in> {0<..<real N} - real ` {0..N} \\<Longrightarrow>\n       (?f has_vector_derivative\n        - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n        (at x)\n 6. ((\\<lambda>x. ?f x * complex_of_real (pbernpoly n x)) has_integral\n     ?f (real N) *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     ?f 0 * (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "thus \"((\\<lambda>x. inverse (of_real x + s) ^ n) has_vector_derivative \n             - of_nat n * inverse (of_real x + s) ^ Suc n) (at x)\""], ["proof (prove)\nusing this:\n  complex_of_real x + s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. inverse (complex_of_real x + s) ^ n) has_vector_derivative\n     - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n     (at x)", "using x s assms"], ["proof (prove)\nusing this:\n  complex_of_real x + s \\<noteq> 0\n  x \\<in> {0<..<real N} - real ` {0..N}\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. inverse (complex_of_real x + s) ^ n) has_vector_derivative\n     - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n     (at x)", "by (auto intro!: derivative_eq_intros has_vector_derivative_real_field simp: divide_simps power_add [symmetric]\n               simp del: power_Suc)"], ["proof (state)\nthis:\n  ((\\<lambda>x. inverse (complex_of_real x + s) ^ n) has_vector_derivative\n   - of_nat n * inverse (complex_of_real x + s) ^ Suc n)\n   (at x)\n\ngoal (5 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N}\n     (\\<lambda>x. inverse (complex_of_real x + s) ^ n)\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     inverse (complex_of_real (real N) + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     inverse (complex_of_real 0 + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N}\n     (\\<lambda>x. inverse (complex_of_real x + s) ^ n)\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     inverse (complex_of_real (real N) + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     inverse (complex_of_real 0 + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "have \"complex_of_real x + s \\<noteq> 0\" if \"x \\<ge> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "using that s"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "by (auto simp: complex_eq_iff complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow> complex_of_real ?x + s \\<noteq> 0\n\ngoal (5 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N\n 3. continuous_on {0..real N}\n     (\\<lambda>x. inverse (complex_of_real x + s) ^ n)\n 4. continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n 5. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     inverse (complex_of_real (real N) + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     inverse (complex_of_real 0 + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "thus \"continuous_on {0..real N} (\\<lambda>x. inverse (of_real x + s) ^ n)\" \n         \"continuous_on {0..real N} (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\""], ["proof (prove)\nusing this:\n  0 \\<le> ?x \\<Longrightarrow> complex_of_real ?x + s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. continuous_on {0..real N}\n     (\\<lambda>x. inverse (complex_of_real x + s) ^ n) &&&\n    continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))", "using assms s"], ["proof (prove)\nusing this:\n  0 \\<le> ?x \\<Longrightarrow> complex_of_real ?x + s \\<noteq> 0\n  1 \\<le> n\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. continuous_on {0..real N}\n     (\\<lambda>x. inverse (complex_of_real x + s) ^ n) &&&\n    continuous_on {0..real N}\n     (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))", "by (auto intro!: continuous_intros simp del: of_nat_Suc)"], ["proof (state)\nthis:\n  continuous_on {0..real N}\n   (\\<lambda>x. inverse (complex_of_real x + s) ^ n)\n  continuous_on {0..real N}\n   (\\<lambda>x. complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))\n\ngoal (3 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N\n 3. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     inverse (complex_of_real (real N) + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     inverse (complex_of_real 0 + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N\n 3. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     inverse (complex_of_real (real N) + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     inverse (complex_of_real 0 + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "have \"((\\<lambda>x. inverse (of_real x + s) ^ n * of_real (pbernpoly n x)) has_integral\n            pbernpoly (Suc n) (of_nat N) / (of_nat (Suc n) * (of_nat N + s) ^ n) -\n            of_real (bernoulli (Suc n) / real (Suc n)) / s ^ n - -I) {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     complex_of_real (pbernpoly (Suc n) (real N)) /\n     (of_nat (Suc n) * (of_nat N + s) ^ n) -\n     complex_of_real (bernoulli (Suc n) / real (Suc n)) / s ^ n -\n     - I)\n     {0..real N}", "using integrable_ln_Gamma_aux[of n N] assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      complex_of_real (pbernpoly n x) /\n      (complex_of_real x + s) ^ n) integrable_on\n  {0..real N}\n  1 \\<le> n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     complex_of_real (pbernpoly (Suc n) (real N)) /\n     (of_nat (Suc n) * (of_nat N + s) ^ n) -\n     complex_of_real (bernoulli (Suc n) / real (Suc n)) / s ^ n -\n     - I)\n     {0..real N}", "by (auto simp: I_def has_integral_integral divide_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       inverse (complex_of_real x + s) ^ n *\n       complex_of_real (pbernpoly n x)) has_integral\n   complex_of_real (pbernpoly (Suc n) (real N)) /\n   (of_nat (Suc n) * (of_nat N + s) ^ n) -\n   complex_of_real (bernoulli (Suc n) / real (Suc n)) / s ^ n -\n   - I)\n   {0..real N}\n\ngoal (3 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N\n 3. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     inverse (complex_of_real (real N) + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     inverse (complex_of_real 0 + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "thus \"((\\<lambda>x. inverse (of_real x + s) ^ n * of_real (pbernpoly n x)) has_integral\n              inverse (of_real (real N) + s) ^ n * (of_real (pbernpoly (Suc n) (real N)) / \n                  of_nat (Suc n)) -\n              inverse (of_real 0 + s) ^ n * (of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) - - I)\n            {0..real N}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       inverse (complex_of_real x + s) ^ n *\n       complex_of_real (pbernpoly n x)) has_integral\n   complex_of_real (pbernpoly (Suc n) (real N)) /\n   (of_nat (Suc n) * (of_nat N + s) ^ n) -\n   complex_of_real (bernoulli (Suc n) / real (Suc n)) / s ^ n -\n   - I)\n   {0..real N}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         inverse (complex_of_real x + s) ^ n *\n         complex_of_real (pbernpoly n x)) has_integral\n     inverse (complex_of_real (real N) + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n     inverse (complex_of_real 0 + s) ^ n *\n     (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n     - I)\n     {0..real N}", "by (simp_all add: field_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       inverse (complex_of_real x + s) ^ n *\n       complex_of_real (pbernpoly n x)) has_integral\n   inverse (complex_of_real (real N) + s) ^ n *\n   (complex_of_real (pbernpoly (Suc n) (real N)) / of_nat (Suc n)) -\n   inverse (complex_of_real 0 + s) ^ n *\n   (complex_of_real (pbernpoly (Suc n) 0) / of_nat (Suc n)) -\n   - I)\n   {0..real N}\n\ngoal (2 subgoals):\n 1. finite (real ` {0..N})\n 2. 0 \\<le> real N", "qed simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       - of_nat n * inverse (complex_of_real x + s) ^ Suc n *\n       (complex_of_real (pbernpoly (Suc n) x) /\n        of_nat (Suc n))) has_integral\n   - I)\n   {0..real N}\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       - of_nat n * inverse (complex_of_real x + s) ^ Suc n *\n       (complex_of_real (pbernpoly (Suc n) x) /\n        of_nat (Suc n))) has_integral\n   - I)\n   {0..real N}\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "have \"(\\<lambda>x. - of_nat n * inverse (of_real x + s) ^ Suc n * (of_real (pbernpoly (Suc n) x) /\n                         of_nat (Suc n))) =\n             (\\<lambda>x. - (of_nat n / of_nat (Suc n) * of_real (pbernpoly (Suc n) x) / \n                         (of_real x + s) ^ Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        - of_nat n * inverse (complex_of_real x + s) ^ Suc n *\n        (complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))) =\n    (\\<lambda>x.\n        - (of_nat n / of_nat (Suc n) *\n           complex_of_real (pbernpoly (Suc n) x) /\n           (complex_of_real x + s) ^ Suc n))", "by (simp add: divide_simps fun_eq_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      - of_nat n * inverse (complex_of_real x + s) ^ Suc n *\n      (complex_of_real (pbernpoly (Suc n) x) / of_nat (Suc n))) =\n  (\\<lambda>x.\n      - (of_nat n / of_nat (Suc n) * complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n))\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       - (of_nat n / of_nat (Suc n) *\n          complex_of_real (pbernpoly (Suc n) x) /\n          (complex_of_real x + s) ^ Suc n)) has_integral\n   - I)\n   {0..real N}", "have \"((\\<lambda>x. - (of_nat n / of_nat (Suc n) * of_real (pbernpoly (Suc n) x) /\n                            (of_real x + s) ^ Suc n)) has_integral - I) {0..real N}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       - (of_nat n / of_nat (Suc n) *\n          complex_of_real (pbernpoly (Suc n) x) /\n          (complex_of_real x + s) ^ Suc n)) has_integral\n   - I)\n   {0..real N}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         - (of_nat n / of_nat (Suc n) *\n            complex_of_real (pbernpoly (Suc n) x) /\n            (complex_of_real x + s) ^ Suc n)) has_integral\n     - I)\n     {0..real N}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       - (of_nat n / of_nat (Suc n) *\n          complex_of_real (pbernpoly (Suc n) x) /\n          (complex_of_real x + s) ^ Suc n)) has_integral\n   - I)\n   {0..real N}\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "from has_integral_neg[OF this]"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       - (- (of_nat n / of_nat (Suc n) *\n             complex_of_real (pbernpoly (Suc n) x) /\n             (complex_of_real x + s) ^ Suc n))) has_integral\n   - (- I))\n   {0..real N}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       - (- (of_nat n / of_nat (Suc n) *\n             complex_of_real (pbernpoly (Suc n) x) /\n             (complex_of_real x + s) ^ Suc n))) has_integral\n   - (- I))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n    complex_of_real (pbernpoly (Suc n) (real N)) /\n    (of_nat (Suc n) * (s + of_nat N) ^ n) -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n    of_nat n / of_nat (Suc n) *\n    integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly (Suc n) x) /\n         (complex_of_real x + s) ^ Suc n)", "by (auto simp add: I_def has_integral_iff algebra_simps integral_mult_right [symmetric] \n             simp del: power_Suc of_nat_Suc )"], ["proof (state)\nthis:\n  integral {0..real N}\n   (\\<lambda>x.\n       complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n  complex_of_real (pbernpoly (Suc n) (real N)) /\n  (of_nat (Suc n) * (s + of_nat N) ^ n) -\n  complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n  of_nat n / of_nat (Suc n) *\n  integral {0..real N}\n   (\\<lambda>x.\n       complex_of_real (pbernpoly (Suc n) x) /\n       (complex_of_real x + s) ^ Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pbernpoly_over_power_tendsto_0: \n  assumes \"n > 0\"\n  shows   \"(\\<lambda>x. of_real (pbernpoly (Suc n) (real x)) / (of_nat (Suc n) * (s + of_nat x) ^ n)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "from s"], ["proof (chain)\npicking this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "have neq: \"s + of_nat n \\<noteq> 0\" for n"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. s + of_nat n \\<noteq> 0", "by (auto simp: complex_eq_iff complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  s + of_nat ?n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "from bounded_pbernpoly[of \"Suc n\"]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly (Suc n) x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "guess c"], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>x. norm (pbernpoly (Suc n) x) \\<le> c) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  norm (pbernpoly (Suc n) ?x) \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "note c = this"], ["proof (state)\nthis:\n  norm (pbernpoly (Suc n) ?x) \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "have \"eventually (\\<lambda>x. real x + Re s > 0) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. 0 < real x + Re s", "by real_asymp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially. 0 < real x + Re s\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "hence \"eventually (\\<lambda>x. norm (of_real (pbernpoly (Suc n) (real x)) / \n                                    (of_nat (Suc n) * (s + of_nat x) ^ n)) \\<le>\n                          (c / real (Suc n)) / (real x + Re s) ^ n) at_top\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially. 0 < real x + Re s\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (complex_of_real (pbernpoly (Suc n) (real x)) /\n         (of_nat (Suc n) * (s + of_nat x) ^ n))\n       \\<le> c / real (Suc n) / (real x + Re s) ^ n", "using eventually_gt_at_top[of \"0::nat\"]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially. 0 < real x + Re s\n  eventually ((<) 0) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (complex_of_real (pbernpoly (Suc n) (real x)) /\n         (of_nat (Suc n) * (s + of_nat x) ^ n))\n       \\<le> c / real (Suc n) / (real x + Re s) ^ n", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < real x + Re s; 0 < x\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (complex_of_real (pbernpoly (Suc n) (real x)) /\n                           (of_nat (Suc n) * (s + of_nat x) ^ n))\n                         \\<le> c / real (Suc n) / (real x + Re s) ^ n", "case (elim x)"], ["proof (state)\nthis:\n  0 < real x + Re s\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < real x + Re s; 0 < x\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (complex_of_real (pbernpoly (Suc n) (real x)) /\n                           (of_nat (Suc n) * (s + of_nat x) ^ n))\n                         \\<le> c / real (Suc n) / (real x + Re s) ^ n", "have \"norm (of_real (pbernpoly (Suc n) (real x)) / \n                                    (of_nat (Suc n) * (s + of_nat x) ^ n)) \\<le>\n            (c / real (Suc n)) / norm (s + of_nat x) ^ n\" (is \"_ \\<le> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (complex_of_real (pbernpoly (Suc n) (real x)) /\n      (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<le> c / real (Suc n) / cmod (s + of_nat x) ^ n", "using c[of x]"], ["proof (prove)\nusing this:\n  norm (pbernpoly (Suc n) (real x)) \\<le> c\n\ngoal (1 subgoal):\n 1. cmod\n     (complex_of_real (pbernpoly (Suc n) (real x)) /\n      (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<le> c / real (Suc n) / cmod (s + of_nat x) ^ n", "by (auto simp: norm_divide norm_mult norm_power neq field_simps simp del: of_nat_Suc)"], ["proof (state)\nthis:\n  cmod\n   (complex_of_real (pbernpoly (Suc n) (real x)) /\n    (of_nat (Suc n) * (s + of_nat x) ^ n))\n  \\<le> c / real (Suc n) / cmod (s + of_nat x) ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < real x + Re s; 0 < x\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (complex_of_real (pbernpoly (Suc n) (real x)) /\n                           (of_nat (Suc n) * (s + of_nat x) ^ n))\n                         \\<le> c / real (Suc n) / (real x + Re s) ^ n", "also"], ["proof (state)\nthis:\n  cmod\n   (complex_of_real (pbernpoly (Suc n) (real x)) /\n    (of_nat (Suc n) * (s + of_nat x) ^ n))\n  \\<le> c / real (Suc n) / cmod (s + of_nat x) ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < real x + Re s; 0 < x\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (complex_of_real (pbernpoly (Suc n) (real x)) /\n                           (of_nat (Suc n) * (s + of_nat x) ^ n))\n                         \\<le> c / real (Suc n) / (real x + Re s) ^ n", "have \"(real x + Re s) \\<le> cmod (s + of_nat x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real x + Re s \\<le> cmod (s + of_nat x)", "using complex_Re_le_cmod[of \"s + of_nat x\"] s"], ["proof (prove)\nusing this:\n  Re (s + of_nat x) \\<le> cmod (s + of_nat x)\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. real x + Re s \\<le> cmod (s + of_nat x)", "by (auto simp add: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  real x + Re s \\<le> cmod (s + of_nat x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < real x + Re s; 0 < x\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (complex_of_real (pbernpoly (Suc n) (real x)) /\n                           (of_nat (Suc n) * (s + of_nat x) ^ n))\n                         \\<le> c / real (Suc n) / (real x + Re s) ^ n", "hence \"?rhs \\<le> (c / real (Suc n)) / (real x + Re s) ^ n\""], ["proof (prove)\nusing this:\n  real x + Re s \\<le> cmod (s + of_nat x)\n\ngoal (1 subgoal):\n 1. c / real (Suc n) / cmod (s + of_nat x) ^ n\n    \\<le> c / real (Suc n) / (real x + Re s) ^ n", "using s elim c[of 0] neq[of x]"], ["proof (prove)\nusing this:\n  real x + Re s \\<le> cmod (s + of_nat x)\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 < real x + Re s\n  0 < x\n  norm (pbernpoly (Suc n) 0) \\<le> c\n  s + of_nat x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c / real (Suc n) / cmod (s + of_nat x) ^ n\n    \\<le> c / real (Suc n) / (real x + Re s) ^ n", "by (intro divide_left_mono power_mono mult_pos_pos divide_nonneg_pos zero_less_power) auto"], ["proof (state)\nthis:\n  c / real (Suc n) / cmod (s + of_nat x) ^ n\n  \\<le> c / real (Suc n) / (real x + Re s) ^ n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < real x + Re s; 0 < x\\<rbrakk>\n       \\<Longrightarrow> cmod\n                          (complex_of_real (pbernpoly (Suc n) (real x)) /\n                           (of_nat (Suc n) * (s + of_nat x) ^ n))\n                         \\<le> c / real (Suc n) / (real x + Re s) ^ n", "finally"], ["proof (chain)\npicking this:\n  cmod\n   (complex_of_real (pbernpoly (Suc n) (real x)) /\n    (of_nat (Suc n) * (s + of_nat x) ^ n))\n  \\<le> c / real (Suc n) / (real x + Re s) ^ n", "show ?case"], ["proof (prove)\nusing this:\n  cmod\n   (complex_of_real (pbernpoly (Suc n) (real x)) /\n    (of_nat (Suc n) * (s + of_nat x) ^ n))\n  \\<le> c / real (Suc n) / (real x + Re s) ^ n\n\ngoal (1 subgoal):\n 1. cmod\n     (complex_of_real (pbernpoly (Suc n) (real x)) /\n      (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<le> c / real (Suc n) / (real x + Re s) ^ n", "."], ["proof (state)\nthis:\n  cmod\n   (complex_of_real (pbernpoly (Suc n) (real x)) /\n    (of_nat (Suc n) * (s + of_nat x) ^ n))\n  \\<le> c / real (Suc n) / (real x + Re s) ^ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     cmod\n      (complex_of_real (pbernpoly (Suc n) (real x)) /\n       (of_nat (Suc n) * (s + of_nat x) ^ n))\n     \\<le> c / real (Suc n) / (real x + Re s) ^ n\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially.\n     cmod\n      (complex_of_real (pbernpoly (Suc n) (real x)) /\n       (of_nat (Suc n) * (s + of_nat x) ^ n))\n     \\<le> c / real (Suc n) / (real x + Re s) ^ n\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "have \"(\\<lambda>x. (c / real (Suc n)) / (real x + Re s) ^ n) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c / real (Suc n) / (real x + Re s) ^ n)\n    \\<longlonglongrightarrow> 0", "using \\<open>n > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c / real (Suc n) / (real x + Re s) ^ n)\n    \\<longlonglongrightarrow> 0", "by real_asymp"], ["proof (state)\nthis:\n  (\\<lambda>x. c / real (Suc n) / (real x + Re s) ^ n)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F x in sequentially.\n     cmod\n      (complex_of_real (pbernpoly (Suc n) (real x)) /\n       (of_nat (Suc n) * (s + of_nat x) ^ n))\n     \\<le> c / real (Suc n) / (real x + Re s) ^ n\n  (\\<lambda>x. c / real (Suc n) / (real x + Re s) ^ n)\n  \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in sequentially.\n     cmod\n      (complex_of_real (pbernpoly (Suc n) (real x)) /\n       (of_nat (Suc n) * (s + of_nat x) ^ n))\n     \\<le> c / real (Suc n) / (real x + Re s) ^ n\n  (\\<lambda>x. c / real (Suc n) / (real x + Re s) ^ n)\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly (Suc n) (real x)) /\n        (of_nat (Suc n) * (s + of_nat x) ^ n))\n    \\<longlonglongrightarrow> 0", "by (rule Lim_null_comparison)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      complex_of_real (pbernpoly (Suc n) (real x)) /\n      (of_nat (Suc n) * (s + of_nat x) ^ n))\n  \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma convergent_stirling_integral:\n  assumes \"n > 0\"\n  shows   \"convergent (\\<lambda>N. integral {0..real N} \n             (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n))\" (is \"convergent (?f n)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>N.\n         integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>N.\n         integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))", "have \"convergent (?f (Suc n))\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>a.\n         integral {0..real a}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc n) x) /\n              (complex_of_real x + s) ^ Suc n))", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. convergent\n     (\\<lambda>a.\n         integral {0..real a}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc 0) x) /\n              (complex_of_real x + s) ^ Suc 0))\n 2. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. convergent\n     (\\<lambda>a.\n         integral {0..real a}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc 0) x) /\n              (complex_of_real x + s) ^ Suc 0))\n 2. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>a.\n         integral {0..real a}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc 0) x) /\n              (complex_of_real x + s) ^ Suc 0))", "using integral_pbernpoly_1"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly 1 x) / (complex_of_real x + s)))\n  \\<longlonglongrightarrow> - ln_Gamma s - s + (s - 1 / 2) * Ln s +\n                            complex_of_real (ln (2 * pi) / 2)\n\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>a.\n         integral {0..real a}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc 0) x) /\n              (complex_of_real x + s) ^ Suc 0))", "by (auto intro!: convergentI)"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc 0) x) /\n            (complex_of_real x + s) ^ Suc 0))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "case (Suc n)"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            (complex_of_real x + s) ^ Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "have \"convergent (\\<lambda>N. ?f (Suc n) N -\n            of_real (pbernpoly (Suc (Suc n)) (real N)) / \n                (of_nat (Suc (Suc n)) * (s + of_nat N) ^ Suc n) +\n            of_real (bernoulli (Suc (Suc n)) / (real (Suc (Suc n)))) / s ^ Suc n)\" \n      (is \"convergent ?g\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>N.\n         integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc n) x) /\n              (complex_of_real x + s) ^ Suc n) -\n         complex_of_real (pbernpoly (Suc (Suc n)) (real N)) /\n         (of_nat (Suc (Suc n)) * (s + of_nat N) ^ Suc n) +\n         complex_of_real (bernoulli (Suc (Suc n)) / real (Suc (Suc n))) /\n         s ^ Suc n)", "by (intro convergent_add convergent_diff Suc \n            convergent_const convergentI[OF pbernpoly_over_power_tendsto_0]) simp_all"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>N.\n       integral {0..real N}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            (complex_of_real x + s) ^ Suc n) -\n       complex_of_real (pbernpoly (Suc (Suc n)) (real N)) /\n       (of_nat (Suc (Suc n)) * (s + of_nat N) ^ Suc n) +\n       complex_of_real (bernoulli (Suc (Suc n)) / real (Suc (Suc n))) /\n       s ^ Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "also"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>N.\n       integral {0..real N}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            (complex_of_real x + s) ^ Suc n) -\n       complex_of_real (pbernpoly (Suc (Suc n)) (real N)) /\n       (of_nat (Suc (Suc n)) * (s + of_nat N) ^ Suc n) +\n       complex_of_real (bernoulli (Suc (Suc n)) / real (Suc (Suc n))) /\n       s ^ Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "have \"?g = (\\<lambda>N. of_nat (Suc n) / of_nat (Suc (Suc n)) * ?f (Suc (Suc n)) N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly (Suc n) x) /\n             (complex_of_real x + s) ^ Suc n) -\n        complex_of_real (pbernpoly (Suc (Suc n)) (real N)) /\n        (of_nat (Suc (Suc n)) * (s + of_nat N) ^ Suc n) +\n        complex_of_real (bernoulli (Suc (Suc n)) / real (Suc (Suc n))) /\n        s ^ Suc n) =\n    (\\<lambda>N.\n        of_nat (Suc n) / of_nat (Suc (Suc n)) *\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly (Suc (Suc n)) x) /\n             (complex_of_real x + s) ^ Suc (Suc n)))", "using s"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly (Suc n) x) /\n             (complex_of_real x + s) ^ Suc n) -\n        complex_of_real (pbernpoly (Suc (Suc n)) (real N)) /\n        (of_nat (Suc (Suc n)) * (s + of_nat N) ^ Suc n) +\n        complex_of_real (bernoulli (Suc (Suc n)) / real (Suc (Suc n))) /\n        s ^ Suc n) =\n    (\\<lambda>N.\n        of_nat (Suc n) / of_nat (Suc (Suc n)) *\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly (Suc (Suc n)) x) /\n             (complex_of_real x + s) ^ Suc (Suc n)))", "by (subst pbernpoly_integral_conv_pbernpoly_integral_Suc) \n         (auto simp: fun_eq_iff field_simps simp del: of_nat_Suc power_Suc)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly (Suc n) x) /\n           (complex_of_real x + s) ^ Suc n) -\n      complex_of_real (pbernpoly (Suc (Suc n)) (real N)) /\n      (of_nat (Suc (Suc n)) * (s + of_nat N) ^ Suc n) +\n      complex_of_real (bernoulli (Suc (Suc n)) / real (Suc (Suc n))) /\n      s ^ Suc n) =\n  (\\<lambda>N.\n      of_nat (Suc n) / of_nat (Suc (Suc n)) *\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly (Suc (Suc n)) x) /\n           (complex_of_real x + s) ^ Suc (Suc n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "also"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly (Suc n) x) /\n           (complex_of_real x + s) ^ Suc n) -\n      complex_of_real (pbernpoly (Suc (Suc n)) (real N)) /\n      (of_nat (Suc (Suc n)) * (s + of_nat N) ^ Suc n) +\n      complex_of_real (bernoulli (Suc (Suc n)) / real (Suc (Suc n))) /\n      s ^ Suc n) =\n  (\\<lambda>N.\n      of_nat (Suc n) / of_nat (Suc (Suc n)) *\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly (Suc (Suc n)) x) /\n           (complex_of_real x + s) ^ Suc (Suc n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "have \"convergent \\<dots> \\<longleftrightarrow> convergent (?f (Suc (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>N.\n         of_nat (Suc n) / of_nat (Suc (Suc n)) *\n         integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc (Suc n)) x) /\n              (complex_of_real x + s) ^ Suc (Suc n))) =\n    convergent\n     (\\<lambda>a.\n         integral {0..real a}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc (Suc n)) x) /\n              (complex_of_real x + s) ^ Suc (Suc n)))", "by (intro convergent_mult_const_iff) (simp_all del: of_nat_Suc)"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>N.\n       of_nat (Suc n) / of_nat (Suc (Suc n)) *\n       integral {0..real N}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc (Suc n)) x) /\n            (complex_of_real x + s) ^ Suc (Suc n))) =\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc (Suc n)) x) /\n            (complex_of_real x + s) ^ Suc (Suc n)))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc n) x) /\n                 (complex_of_real x + s) ^ Suc n)) \\<Longrightarrow>\n       convergent\n        (\\<lambda>a.\n            integral {0..real a}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly (Suc (Suc n)) x) /\n                 (complex_of_real x + s) ^ Suc (Suc n)))", "finally"], ["proof (chain)\npicking this:\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc (Suc n)) x) /\n            (complex_of_real x + s) ^ Suc (Suc n)))", "show ?case"], ["proof (prove)\nusing this:\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc (Suc n)) x) /\n            (complex_of_real x + s) ^ Suc (Suc n)))\n\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>a.\n         integral {0..real a}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly (Suc (Suc n)) x) /\n              (complex_of_real x + s) ^ Suc (Suc n)))", "."], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc (Suc n)) x) /\n            (complex_of_real x + s) ^ Suc (Suc n)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc ?n) x) /\n            (complex_of_real x + s) ^ Suc ?n))\n\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>N.\n         integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))", "from this[of \"n - 1\"] assms"], ["proof (chain)\npicking this:\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc (n - 1)) x) /\n            (complex_of_real x + s) ^ Suc (n - 1)))\n  0 < n", "show ?thesis"], ["proof (prove)\nusing this:\n  convergent\n   (\\<lambda>a.\n       integral {0..real a}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc (n - 1)) x) /\n            (complex_of_real x + s) ^ Suc (n - 1)))\n  0 < n\n\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>N.\n         integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))", "by simp"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>N.\n       integral {0..real N}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_conv_stirling_integral_Suc:\n  assumes \"n > 0\"\n  shows   \"stirling_integral n s =\n             of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n             of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "have \"(\\<lambda>N. of_real (pbernpoly (Suc n) (real N)) / (of_nat (Suc n) * (s + of_nat N) ^ n) -\n             of_real (bernoulli (Suc n)) / (real (Suc n) * s ^ n) +\n             integral {0..real N} (\\<lambda>x. of_nat n / of_nat (Suc n) * \n                (of_real (pbernpoly (Suc n) x) / (of_real x + s) ^ Suc n)))\n           \\<longlonglongrightarrow> 0 - of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n                   of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s\" (is \"?f \\<longlonglongrightarrow> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        complex_of_real (pbernpoly (Suc n) (real N)) /\n        (of_nat (Suc n) * (s + of_nat N) ^ n) -\n        complex_of_real (bernoulli (Suc n)) /\n        (complex_of_real (real (Suc n)) * s ^ n) +\n        integral {0..real N}\n         (\\<lambda>x.\n             of_nat n / of_nat (Suc n) *\n             (complex_of_real (pbernpoly (Suc n) x) /\n              (complex_of_real x + s) ^ Suc n)))\n    \\<longlonglongrightarrow> 0 -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n) +\n                              of_nat n / of_nat (Suc n) *\n                              stirling_integral (Suc n) s", "unfolding stirling_integral_def integral_mult_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        complex_of_real (pbernpoly (Suc n) (real N)) /\n        (of_nat (Suc n) * (s + of_nat N) ^ n) -\n        complex_of_real (bernoulli (Suc n)) /\n        (complex_of_real (real (Suc n)) * s ^ n) +\n        of_nat n / of_nat (Suc n) *\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly (Suc n) x) /\n             (complex_of_real x + s) ^ Suc n))\n    \\<longlonglongrightarrow> 0 -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n) +\n                              of_nat n / of_nat (Suc n) *\n                              lim (\\<lambda>x.\nintegral {0..real x}\n (\\<lambda>x.\n     complex_of_real (pbernpoly (Suc n) x) /\n     (complex_of_real x + s) ^ Suc n))", "using convergent_stirling_integral[of \"Suc n\"] assms s"], ["proof (prove)\nusing this:\n  0 < Suc n \\<Longrightarrow>\n  convergent\n   (\\<lambda>N.\n       integral {0..real N}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly (Suc n) x) /\n            (complex_of_real x + s) ^ Suc n))\n  0 < n\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        complex_of_real (pbernpoly (Suc n) (real N)) /\n        (of_nat (Suc n) * (s + of_nat N) ^ n) -\n        complex_of_real (bernoulli (Suc n)) /\n        (complex_of_real (real (Suc n)) * s ^ n) +\n        of_nat n / of_nat (Suc n) *\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly (Suc n) x) /\n             (complex_of_real x + s) ^ Suc n))\n    \\<longlonglongrightarrow> 0 -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n) +\n                              of_nat n / of_nat (Suc n) *\n                              lim (\\<lambda>x.\nintegral {0..real x}\n (\\<lambda>x.\n     complex_of_real (pbernpoly (Suc n) x) /\n     (complex_of_real x + s) ^ Suc n))", "by (intro tendsto_intros pbernpoly_over_power_tendsto_0)\n       (auto simp: convergent_LIMSEQ_iff simp del: of_nat_Suc)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      complex_of_real (pbernpoly (Suc n) (real N)) /\n      (of_nat (Suc n) * (s + of_nat N) ^ n) -\n      complex_of_real (bernoulli (Suc n)) /\n      (complex_of_real (real (Suc n)) * s ^ n) +\n      integral {0..real N}\n       (\\<lambda>x.\n           of_nat n / of_nat (Suc n) *\n           (complex_of_real (pbernpoly (Suc n) x) /\n            (complex_of_real x + s) ^ Suc n)))\n  \\<longlonglongrightarrow> 0 -\n                            complex_of_real (bernoulli (Suc n)) /\n                            (of_nat (Suc n) * s ^ n) +\n                            of_nat n / of_nat (Suc n) *\n                            stirling_integral (Suc n) s\n\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "also"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      complex_of_real (pbernpoly (Suc n) (real N)) /\n      (of_nat (Suc n) * (s + of_nat N) ^ n) -\n      complex_of_real (bernoulli (Suc n)) /\n      (complex_of_real (real (Suc n)) * s ^ n) +\n      integral {0..real N}\n       (\\<lambda>x.\n           of_nat n / of_nat (Suc n) *\n           (complex_of_real (pbernpoly (Suc n) x) /\n            (complex_of_real x + s) ^ Suc n)))\n  \\<longlonglongrightarrow> 0 -\n                            complex_of_real (bernoulli (Suc n)) /\n                            (of_nat (Suc n) * s ^ n) +\n                            of_nat n / of_nat (Suc n) *\n                            stirling_integral (Suc n) s\n\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "have \"?this \\<longleftrightarrow> (\\<lambda>N. integral {0..real N} \n               (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n)) \\<longlonglongrightarrow>\n               of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n                 of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        complex_of_real (pbernpoly (Suc n) (real N)) /\n        (of_nat (Suc n) * (s + of_nat N) ^ n) -\n        complex_of_real (bernoulli (Suc n)) /\n        (complex_of_real (real (Suc n)) * s ^ n) +\n        integral {0..real N}\n         (\\<lambda>x.\n             of_nat n / of_nat (Suc n) *\n             (complex_of_real (pbernpoly (Suc n) x) /\n              (complex_of_real x + s) ^ Suc n)))\n    \\<longlonglongrightarrow> 0 -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n) +\n                              of_nat n / of_nat (Suc n) *\n                              stirling_integral (Suc n) s =\n    (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<longlonglongrightarrow> of_nat n / of_nat (Suc n) *\n                              stirling_integral (Suc n) s -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n)", "using eventually_gt_at_top[of \"0::nat\"] pbernpoly_integral_conv_pbernpoly_integral_Suc[of n] \n          assms"], ["proof (prove)\nusing this:\n  eventually ((<) 0) sequentially\n  1 \\<le> n \\<Longrightarrow>\n  integral {0..real ?N}\n   (\\<lambda>x.\n       complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n  complex_of_real (pbernpoly (Suc n) (real ?N)) /\n  (of_nat (Suc n) * (s + of_nat ?N) ^ n) -\n  complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n  of_nat n / of_nat (Suc n) *\n  integral {0..real ?N}\n   (\\<lambda>x.\n       complex_of_real (pbernpoly (Suc n) x) /\n       (complex_of_real x + s) ^ Suc n)\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        complex_of_real (pbernpoly (Suc n) (real N)) /\n        (of_nat (Suc n) * (s + of_nat N) ^ n) -\n        complex_of_real (bernoulli (Suc n)) /\n        (complex_of_real (real (Suc n)) * s ^ n) +\n        integral {0..real N}\n         (\\<lambda>x.\n             of_nat n / of_nat (Suc n) *\n             (complex_of_real (pbernpoly (Suc n) x) /\n              (complex_of_real x + s) ^ Suc n)))\n    \\<longlonglongrightarrow> 0 -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n) +\n                              of_nat n / of_nat (Suc n) *\n                              stirling_integral (Suc n) s =\n    (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<longlonglongrightarrow> of_nat n / of_nat (Suc n) *\n                              stirling_integral (Suc n) s -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n)", "unfolding integral_mult_right"], ["proof (prove)\nusing this:\n  eventually ((<) 0) sequentially\n  1 \\<le> n \\<Longrightarrow>\n  integral {0..real ?N}\n   (\\<lambda>x.\n       complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) =\n  complex_of_real (pbernpoly (Suc n) (real ?N)) /\n  (of_nat (Suc n) * (s + of_nat ?N) ^ n) -\n  complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n) +\n  of_nat n / of_nat (Suc n) *\n  integral {0..real ?N}\n   (\\<lambda>x.\n       complex_of_real (pbernpoly (Suc n) x) /\n       (complex_of_real x + s) ^ Suc n)\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        complex_of_real (pbernpoly (Suc n) (real N)) /\n        (of_nat (Suc n) * (s + of_nat N) ^ n) -\n        complex_of_real (bernoulli (Suc n)) /\n        (complex_of_real (real (Suc n)) * s ^ n) +\n        of_nat n / of_nat (Suc n) *\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly (Suc n) x) /\n             (complex_of_real x + s) ^ Suc n))\n    \\<longlonglongrightarrow> 0 -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n) +\n                              of_nat n / of_nat (Suc n) *\n                              stirling_integral (Suc n) s =\n    (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<longlonglongrightarrow> of_nat n / of_nat (Suc n) *\n                              stirling_integral (Suc n) s -\n                              complex_of_real (bernoulli (Suc n)) /\n                              (of_nat (Suc n) * s ^ n)", "by (intro filterlim_cong refl) (auto elim!: eventually_mono simp del: power_Suc)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      complex_of_real (pbernpoly (Suc n) (real N)) /\n      (of_nat (Suc n) * (s + of_nat N) ^ n) -\n      complex_of_real (bernoulli (Suc n)) /\n      (complex_of_real (real (Suc n)) * s ^ n) +\n      integral {0..real N}\n       (\\<lambda>x.\n           of_nat n / of_nat (Suc n) *\n           (complex_of_real (pbernpoly (Suc n) x) /\n            (complex_of_real x + s) ^ Suc n)))\n  \\<longlonglongrightarrow> 0 -\n                            complex_of_real (bernoulli (Suc n)) /\n                            (of_nat (Suc n) * s ^ n) +\n                            of_nat n / of_nat (Suc n) *\n                            stirling_integral (Suc n) s =\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<longlonglongrightarrow> of_nat n / of_nat (Suc n) *\n                            stirling_integral (Suc n) s -\n                            complex_of_real (bernoulli (Suc n)) /\n                            (of_nat (Suc n) * s ^ n)\n\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<longlonglongrightarrow> of_nat n / of_nat (Suc n) *\n                            stirling_integral (Suc n) s -\n                            complex_of_real (bernoulli (Suc n)) /\n                            (of_nat (Suc n) * s ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<longlonglongrightarrow> of_nat n / of_nat (Suc n) *\n                            stirling_integral (Suc n) s -\n                            complex_of_real (bernoulli (Suc n)) /\n                            (of_nat (Suc n) * s ^ n)\n\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "unfolding stirling_integral_def[of n]"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<longlonglongrightarrow> of_nat n / of_nat (Suc n) *\n                            stirling_integral (Suc n) s -\n                            complex_of_real (bernoulli (Suc n)) /\n                            (of_nat (Suc n) * s ^ n)\n\ngoal (1 subgoal):\n 1. lim (\\<lambda>x.\n            integral {0..real x}\n             (\\<lambda>x.\n                 complex_of_real (pbernpoly n x) /\n                 (complex_of_real x + s) ^ n)) =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "by (rule limI)"], ["proof (state)\nthis:\n  stirling_integral n s =\n  of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n  complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_1_unfold:\n  assumes \"m > 0\"\n  shows   \"stirling_integral 1 s = stirling_integral m s / of_nat m - \n             (\\<Sum>k=1..<m. of_real (bernoulli (Suc k)) / (of_nat k * of_nat (Suc k) * s ^ k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "have \"stirling_integral 1 s = stirling_integral (Suc m) s / of_nat (Suc m) -\n          (\\<Sum>k=1..<Suc m. of_real (bernoulli (Suc k)) / (of_nat k * of_nat (Suc k) * s ^ k))\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc m) s / of_nat (Suc m) -\n    (\\<Sum>k = 1..<Suc m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "proof (induction m)"], ["proof (state)\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "case (Suc m)"], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral (Suc m) s / of_nat (Suc m) -\n  (\\<Sum>k = 1..<Suc m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "let ?C = \"(\\<Sum>k = 1..<Suc m. of_real (bernoulli (Suc k)) / (of_nat k * of_nat (Suc k) * s ^ k))\""], ["proof (state)\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "note Suc.IH"], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral (Suc m) s / of_nat (Suc m) -\n  (\\<Sum>k = 1..<Suc m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "also"], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral (Suc m) s / of_nat (Suc m) -\n  (\\<Sum>k = 1..<Suc m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "have \"stirling_integral (Suc m) s / of_nat (Suc m) = \n                 stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n                 of_real (bernoulli (Suc (Suc m))) / \n                   (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m)\"\n      (is \"_ = ?A - ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral (Suc m) s / of_nat (Suc m) =\n    stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n    complex_of_real (bernoulli (Suc (Suc m))) /\n    (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m)", "by (subst stirling_integral_conv_stirling_integral_Suc)\n                            (simp_all del: of_nat_Suc power_Suc add: divide_simps)"], ["proof (state)\nthis:\n  stirling_integral (Suc m) s / of_nat (Suc m) =\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  complex_of_real (bernoulli (Suc (Suc m))) /\n  (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m)\n\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "also"], ["proof (state)\nthis:\n  stirling_integral (Suc m) s / of_nat (Suc m) =\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  complex_of_real (bernoulli (Suc (Suc m))) /\n  (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m)\n\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "have \"?A - ?B - ?C = ?A - (?B + ?C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n    complex_of_real (bernoulli (Suc (Suc m))) /\n    (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) -\n    (\\<Sum>k = 1..<Suc m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) =\n    stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n    (complex_of_real (bernoulli (Suc (Suc m))) /\n     (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) +\n     (\\<Sum>k = 1..<Suc m.\n         complex_of_real (bernoulli (Suc k)) /\n         (of_nat k * of_nat (Suc k) * s ^ k)))", "by (rule diff_diff_eq)"], ["proof (state)\nthis:\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  complex_of_real (bernoulli (Suc (Suc m))) /\n  (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) -\n  (\\<Sum>k = 1..<Suc m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k)) =\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  (complex_of_real (bernoulli (Suc (Suc m))) /\n   (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) +\n   (\\<Sum>k = 1..<Suc m.\n       complex_of_real (bernoulli (Suc k)) /\n       (of_nat k * of_nat (Suc k) * s ^ k)))\n\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "also"], ["proof (state)\nthis:\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  complex_of_real (bernoulli (Suc (Suc m))) /\n  (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) -\n  (\\<Sum>k = 1..<Suc m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k)) =\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  (complex_of_real (bernoulli (Suc (Suc m))) /\n   (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) +\n   (\\<Sum>k = 1..<Suc m.\n       complex_of_real (bernoulli (Suc k)) /\n       (of_nat k * of_nat (Suc k) * s ^ k)))\n\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "have \"?B + ?C = (\\<Sum>k = 1..<Suc (Suc m). of_real (bernoulli (Suc k)) /\n                             (of_nat k * of_nat (Suc k) * s ^ k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real (bernoulli (Suc (Suc m))) /\n    (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) +\n    (\\<Sum>k = 1..<Suc m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) =\n    (\\<Sum>k = 1..<Suc (Suc m).\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "using s"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. complex_of_real (bernoulli (Suc (Suc m))) /\n    (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) +\n    (\\<Sum>k = 1..<Suc m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) =\n    (\\<Sum>k = 1..<Suc (Suc m).\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  complex_of_real (bernoulli (Suc (Suc m))) /\n  (of_nat (Suc m) * of_nat (Suc (Suc m)) * s ^ Suc m) +\n  (\\<Sum>k = 1..<Suc m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k)) =\n  (\\<Sum>k = 1..<Suc (Suc m).\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (2 subgoals):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))\n 2. \\<And>m.\n       stirling_integral 1 s =\n       stirling_integral (Suc m) s / of_nat (Suc m) -\n       (\\<Sum>k = 1..<Suc m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) \\<Longrightarrow>\n       stirling_integral 1 s =\n       stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n       (\\<Sum>k = 1..<Suc (Suc m).\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k))", "finally"], ["proof (chain)\npicking this:\n  stirling_integral 1 s =\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  (\\<Sum>k = 1..<Suc (Suc m).\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))", "show ?case"], ["proof (prove)\nusing this:\n  stirling_integral 1 s =\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  (\\<Sum>k = 1..<Suc (Suc m).\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n    (\\<Sum>k = 1..<Suc (Suc m).\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "."], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral (Suc (Suc m)) s / of_nat (Suc (Suc m)) -\n  (\\<Sum>k = 1..<Suc (Suc m).\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral (Suc 0) s / of_nat (Suc 0) -\n    (\\<Sum>k = 1..<Suc 0.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "qed simp_all"], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral (Suc ?m) s / of_nat (Suc ?m) -\n  (\\<Sum>k = 1..<Suc ?m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "note this[of \"m - 1\"]"], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral (Suc (m - 1)) s / of_nat (Suc (m - 1)) -\n  (\\<Sum>k = 1..<Suc (m - 1).\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "also"], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral (Suc (m - 1)) s / of_nat (Suc (m - 1)) -\n  (\\<Sum>k = 1..<Suc (m - 1).\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "from assms"], ["proof (chain)\npicking this:\n  0 < m", "have \"Suc (m - 1) = m\""], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. Suc (m - 1) = m", "by simp"], ["proof (state)\nthis:\n  Suc (m - 1) = m\n\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "finally"], ["proof (chain)\npicking this:\n  stirling_integral 1 s =\n  stirling_integral m s / of_nat m -\n  (\\<Sum>k = 1..<m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))", "show ?thesis"], ["proof (prove)\nusing this:\n  stirling_integral 1 s =\n  stirling_integral m s / of_nat m -\n  (\\<Sum>k = 1..<m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "."], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral m s / of_nat m -\n  (\\<Sum>k = 1..<m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_Gamma_stirling_complex:\n  assumes \"m > 0\"\n  shows   \"ln_Gamma s = (s - 1 / 2) * ln s - s + ln (2 * pi) / 2 +\n             (\\<Sum>k=1..<m. of_real (bernoulli (Suc k)) / (of_nat k * of_nat (Suc k) * s ^ k)) - \n             stirling_integral m s / of_nat m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) -\n    stirling_integral m s / of_nat m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) -\n    stirling_integral m s / of_nat m", "have \"ln_Gamma s = (s - 1 / 2) * ln s - s + ln (2 * pi) / 2 - stirling_integral 1 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) -\n    stirling_integral 1 s", "using limI[OF integral_pbernpoly_1]"], ["proof (prove)\nusing this:\n  lim (\\<lambda>N.\n          integral {0..real N}\n           (\\<lambda>x.\n               complex_of_real (pbernpoly 1 x) / (complex_of_real x + s))) =\n  - ln_Gamma s - s + (s - 1 / 2) * Ln s + complex_of_real (ln (2 * pi) / 2)\n\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) -\n    stirling_integral 1 s", "by (simp add: stirling_integral_def algebra_simps)"], ["proof (state)\nthis:\n  ln_Gamma s =\n  (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) -\n  stirling_integral 1 s\n\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) -\n    stirling_integral m s / of_nat m", "also"], ["proof (state)\nthis:\n  ln_Gamma s =\n  (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) -\n  stirling_integral 1 s\n\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) -\n    stirling_integral m s / of_nat m", "have \"stirling_integral 1 s = stirling_integral m s / of_nat m -\n               (\\<Sum>k = 1..<m. of_real (bernoulli (Suc k)) / (of_nat k * of_nat (Suc k) * s ^ k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. stirling_integral 1 s =\n    stirling_integral m s / of_nat m -\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k))", "by (rule stirling_integral_1_unfold)"], ["proof (state)\nthis:\n  stirling_integral 1 s =\n  stirling_integral m s / of_nat m -\n  (\\<Sum>k = 1..<m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k))\n\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) -\n    stirling_integral m s / of_nat m", "finally"], ["proof (chain)\npicking this:\n  ln_Gamma s =\n  (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) -\n  (stirling_integral m s / of_nat m -\n   (\\<Sum>k = 1..<m.\n       complex_of_real (bernoulli (Suc k)) /\n       (of_nat k * of_nat (Suc k) * s ^ k)))", "show ?thesis"], ["proof (prove)\nusing this:\n  ln_Gamma s =\n  (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) -\n  (stirling_integral m s / of_nat m -\n   (\\<Sum>k = 1..<m.\n       complex_of_real (bernoulli (Suc k)) /\n       (of_nat k * of_nat (Suc k) * s ^ k)))\n\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n    (\\<Sum>k = 1..<m.\n        complex_of_real (bernoulli (Suc k)) /\n        (of_nat k * of_nat (Suc k) * s ^ k)) -\n    stirling_integral m s / of_nat m", "by simp"], ["proof (state)\nthis:\n  ln_Gamma s =\n  (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n  (\\<Sum>k = 1..<m.\n      complex_of_real (bernoulli (Suc k)) /\n      (of_nat k * of_nat (Suc k) * s ^ k)) -\n  stirling_integral m s / of_nat m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LIMSEQ_stirling_integral:\n  \"n > 0 \\<Longrightarrow> (\\<lambda>x. integral {0..real x} (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n))\n     \\<longlonglongrightarrow> stirling_integral n s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    (\\<lambda>x.\n        integral {0..real x}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<longlonglongrightarrow> stirling_integral n s", "unfolding stirling_integral_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    (\\<lambda>x.\n        integral {0..real x}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<longlonglongrightarrow> lim (\\<lambda>x.\nintegral {0..real x}\n (\\<lambda>x.\n     complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))", "using convergent_stirling_integral[of n]"], ["proof (prove)\nusing this:\n  0 < n \\<Longrightarrow>\n  convergent\n   (\\<lambda>N.\n       integral {0..real N}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    (\\<lambda>x.\n        integral {0..real x}\n         (\\<lambda>x.\n             complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<longlonglongrightarrow> lim (\\<lambda>x.\nintegral {0..real x}\n (\\<lambda>x.\n     complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))", "by (simp only: convergent_LIMSEQ_iff)"], ["", "end"], ["", "lemmas has_integral_of_real = has_integral_linear[OF _ bounded_linear_of_real, unfolded o_def]"], ["", "lemmas integral_of_real = integral_linear[OF _ bounded_linear_of_real, unfolded o_def]"], ["", "lemma integrable_ln_Gamma_aux_real:\n  assumes \"0 < s\"\n  shows   \"(\\<lambda>x. pbernpoly n x / (x + s) ^ n) integrable_on {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. pbernpoly n x / (x + s) ^ n) integrable_on {0..real N}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. pbernpoly n x / (x + s) ^ n) integrable_on {0..real N}", "have \"(\\<lambda>x. complex_of_real (pbernpoly n x / (x + s) ^ n)) integrable_on {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly n x / (x + s) ^ n)) integrable_on\n    {0..real N}", "using integrable_ln_Gamma_aux[of \"of_real s\" n N] assms"], ["proof (prove)\nusing this:\n  complex_of_real s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<Longrightarrow>\n  (\\<lambda>x.\n      complex_of_real (pbernpoly n x) /\n      (complex_of_real x + complex_of_real s) ^ n) integrable_on\n  {0..real N}\n  0 < s\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        complex_of_real (pbernpoly n x / (x + s) ^ n)) integrable_on\n    {0..real N}", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. complex_of_real (pbernpoly n x / (x + s) ^ n)) integrable_on\n  {0..real N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. pbernpoly n x / (x + s) ^ n) integrable_on {0..real N}", "from integrable_linear[OF this bounded_linear_Re]"], ["proof (chain)\npicking this:\n  Re \\<circ>\n  (\\<lambda>x. complex_of_real (pbernpoly n x / (x + s) ^ n)) integrable_on\n  {0..real N}", "show ?thesis"], ["proof (prove)\nusing this:\n  Re \\<circ>\n  (\\<lambda>x. complex_of_real (pbernpoly n x / (x + s) ^ n)) integrable_on\n  {0..real N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. pbernpoly n x / (x + s) ^ n) integrable_on {0..real N}", "by (simp only: o_def Re_complex_of_real)"], ["proof (state)\nthis:\n  (\\<lambda>x. pbernpoly n x / (x + s) ^ n) integrable_on {0..real N}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  \n  assumes \"x > 0\" \"n > 0\"\n  shows   stirling_integral_complex_of_real:\n            \"stirling_integral n (complex_of_real x) = of_real (stirling_integral n x)\"\n    and   LIMSEQ_stirling_integral_real:\n            \"(\\<lambda>N. integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n            \\<longlonglongrightarrow> stirling_integral n x\"\n    and   stirling_integral_real_convergent:\n            \"convergent (\\<lambda>N. integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x) &&&\n    (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> stirling_integral n x &&&\n    convergent\n     (\\<lambda>N.\n         integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x)\n 2. (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> stirling_integral n x\n 3. convergent\n     (\\<lambda>N.\n         integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))", "have \"(\\<lambda>N. integral {0..real N} (\\<lambda>t. of_real (pbernpoly n t / (t + x) ^ n)))\n           \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>t. complex_of_real (pbernpoly n t / (t + x) ^ n)))\n    \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)", "using LIMSEQ_stirling_integral[of \"complex_of_real x\" n] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>complex_of_real x \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0;\n   0 < n\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>xa.\n                        integral {0..real xa}\n                         (\\<lambda>xa.\n                             complex_of_real (pbernpoly n xa) /\n                             (complex_of_real xa + complex_of_real x) ^ n))\n                    \\<longlonglongrightarrow> stirling_integral n\n         (complex_of_real x)\n  0 < x\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N}\n         (\\<lambda>t. complex_of_real (pbernpoly n t / (t + x) ^ n)))\n    \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>t. complex_of_real (pbernpoly n t / (t + x) ^ n)))\n  \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)\n\ngoal (3 subgoals):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x)\n 2. (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> stirling_integral n x\n 3. convergent\n     (\\<lambda>N.\n         integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))", "hence \"(\\<lambda>N. of_real (integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n)))\n           \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>t. complex_of_real (pbernpoly n t / (t + x) ^ n)))\n  \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        complex_of_real\n         (integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n)))\n    \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)", "using integrable_ln_Gamma_aux_real[OF assms(1), of n]"], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      integral {0..real N}\n       (\\<lambda>t. complex_of_real (pbernpoly n t / (t + x) ^ n)))\n  \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)\n  (\\<lambda>xa. pbernpoly n xa / (xa + x) ^ n) integrable_on {0..real ?N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        complex_of_real\n         (integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n)))\n    \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)", "by (subst (asm) integral_of_real) simp"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      complex_of_real\n       (integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n)))\n  \\<longlonglongrightarrow> stirling_integral n (complex_of_real x)\n\ngoal (3 subgoals):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x)\n 2. (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> stirling_integral n x\n 3. convergent\n     (\\<lambda>N.\n         integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))", "from tendsto_Re[OF this]"], ["proof (chain)\npicking this:\n  (\\<lambda>xa.\n      Re (complex_of_real\n           (integral {0..real xa}\n             (\\<lambda>t. pbernpoly n t / (t + x) ^ n))))\n  \\<longlonglongrightarrow> Re (stirling_integral n (complex_of_real x))", "have \"(\\<lambda>N. integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n           \\<longlonglongrightarrow> Re (stirling_integral n (complex_of_real x))\""], ["proof (prove)\nusing this:\n  (\\<lambda>xa.\n      Re (complex_of_real\n           (integral {0..real xa}\n             (\\<lambda>t. pbernpoly n t / (t + x) ^ n))))\n  \\<longlonglongrightarrow> Re (stirling_integral n (complex_of_real x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> Re (stirling_integral n (complex_of_real x))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n  \\<longlonglongrightarrow> Re (stirling_integral n (complex_of_real x))\n\ngoal (3 subgoals):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x)\n 2. (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> stirling_integral n x\n 3. convergent\n     (\\<lambda>N.\n         integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))", "thus \"convergent (\\<lambda>N. integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\""], ["proof (prove)\nusing this:\n  (\\<lambda>N.\n      integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n  \\<longlonglongrightarrow> Re (stirling_integral n (complex_of_real x))\n\ngoal (1 subgoal):\n 1. convergent\n     (\\<lambda>N.\n         integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))", "by (rule convergentI)"], ["proof (state)\nthis:\n  convergent\n   (\\<lambda>N.\n       integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n\ngoal (2 subgoals):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x)\n 2. (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> stirling_integral n x", "thus \"(\\<lambda>N. integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n          \\<longlonglongrightarrow> stirling_integral n x\""], ["proof (prove)\nusing this:\n  convergent\n   (\\<lambda>N.\n       integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> stirling_integral n x", "unfolding stirling_integral_def"], ["proof (prove)\nusing this:\n  convergent\n   (\\<lambda>N.\n       integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n\ngoal (1 subgoal):\n 1. (\\<lambda>N.\n        integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n    \\<longlonglongrightarrow> lim (\\<lambda>xa.\nintegral {0..real xa}\n (\\<lambda>xa. of_real (pbernpoly n xa) / (of_real xa + x) ^ n))", "by (simp add: convergent_LIMSEQ_iff)"], ["proof (state)\nthis:\n  (\\<lambda>N.\n      integral {0..real N} (\\<lambda>t. pbernpoly n t / (t + x) ^ n))\n  \\<longlonglongrightarrow> stirling_integral n x\n\ngoal (1 subgoal):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x)", "from tendsto_of_real[OF this, where 'a = complex] \n       integrable_ln_Gamma_aux_real[OF assms(1), of n]"], ["proof (chain)\npicking this:\n  (\\<lambda>xa.\n      complex_of_real\n       (integral {0..real xa} (\\<lambda>t. pbernpoly n t / (t + x) ^ n)))\n  \\<longlonglongrightarrow> complex_of_real (stirling_integral n x)\n  (\\<lambda>xa. pbernpoly n xa / (xa + x) ^ n) integrable_on {0..real ?N}", "have \"(\\<lambda>xa. integral {0..real xa} \n                    (\\<lambda>xa. complex_of_real (pbernpoly n xa) / (complex_of_real xa + x) ^ n))\n             \\<longlonglongrightarrow> complex_of_real (stirling_integral n x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>xa.\n      complex_of_real\n       (integral {0..real xa} (\\<lambda>t. pbernpoly n t / (t + x) ^ n)))\n  \\<longlonglongrightarrow> complex_of_real (stirling_integral n x)\n  (\\<lambda>xa. pbernpoly n xa / (xa + x) ^ n) integrable_on {0..real ?N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>xa.\n        integral {0..real xa}\n         (\\<lambda>xa.\n             complex_of_real (pbernpoly n xa) /\n             (complex_of_real xa + complex_of_real x) ^ n))\n    \\<longlonglongrightarrow> complex_of_real (stirling_integral n x)", "by (subst (asm) integral_of_real [symmetric]) simp_all"], ["proof (state)\nthis:\n  (\\<lambda>xa.\n      integral {0..real xa}\n       (\\<lambda>xa.\n           complex_of_real (pbernpoly n xa) /\n           (complex_of_real xa + complex_of_real x) ^ n))\n  \\<longlonglongrightarrow> complex_of_real (stirling_integral n x)\n\ngoal (1 subgoal):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x)", "from LIMSEQ_unique[OF this LIMSEQ_stirling_integral[of \"complex_of_real x\" n]] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>complex_of_real x \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0;\n   0 < n\\<rbrakk>\n  \\<Longrightarrow> complex_of_real (stirling_integral n x) =\n                    stirling_integral n (complex_of_real x)\n  0 < x\n  0 < n", "show \"stirling_integral n (complex_of_real x) = of_real (stirling_integral n x)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>complex_of_real x \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0;\n   0 < n\\<rbrakk>\n  \\<Longrightarrow> complex_of_real (stirling_integral n x) =\n                    stirling_integral n (complex_of_real x)\n  0 < x\n  0 < n\n\ngoal (1 subgoal):\n 1. stirling_integral n (complex_of_real x) =\n    complex_of_real (stirling_integral n x)", "by simp"], ["proof (state)\nthis:\n  stirling_integral n (complex_of_real x) =\n  complex_of_real (stirling_integral n x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ln_Gamma_stirling_real:\n  assumes \"x > (0 :: real)\" \"m > (0::nat)\"\n  shows   \"ln_Gamma x = (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n              (\\<Sum>k = 1..<m. bernoulli (Suc k) / (of_nat k * of_nat (Suc k) * x ^ k)) -\n              stirling_integral m x / of_nat m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln_Gamma x =\n    (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ln_Gamma x =\n    (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m", "from assms"], ["proof (chain)\npicking this:\n  0 < x\n  0 < m", "have \"complex_of_real (ln_Gamma x) = ln_Gamma (complex_of_real x)\""], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. complex_of_real (ln_Gamma x) = ln_Gamma (complex_of_real x)", "by (simp add: ln_Gamma_complex_of_real)"], ["proof (state)\nthis:\n  complex_of_real (ln_Gamma x) = ln_Gamma (complex_of_real x)\n\ngoal (1 subgoal):\n 1. ln_Gamma x =\n    (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m", "also"], ["proof (state)\nthis:\n  complex_of_real (ln_Gamma x) = ln_Gamma (complex_of_real x)\n\ngoal (1 subgoal):\n 1. ln_Gamma x =\n    (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m", "have \"ln_Gamma (complex_of_real x) = complex_of_real (\n                (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n                (\\<Sum>k = 1..<m. bernoulli (Suc k) / (of_nat k * of_nat (Suc k) * x ^ k)) -\n                stirling_integral m x / of_nat m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ln_Gamma (complex_of_real x) =\n    complex_of_real\n     ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n      (\\<Sum>k = 1..<m.\n          bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n      stirling_integral m x / real m)", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. ln_Gamma (complex_of_real x) =\n    complex_of_real\n     ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n      (\\<Sum>k = 1..<m.\n          bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n      stirling_integral m x / real m)", "by (subst ln_Gamma_stirling_complex[of _ m])\n       (simp_all add: Ln_of_real stirling_integral_complex_of_real)"], ["proof (state)\nthis:\n  ln_Gamma (complex_of_real x) =\n  complex_of_real\n   ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m)\n\ngoal (1 subgoal):\n 1. ln_Gamma x =\n    (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m", "finally"], ["proof (chain)\npicking this:\n  complex_of_real (ln_Gamma x) =\n  complex_of_real\n   ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m)", "show ?thesis"], ["proof (prove)\nusing this:\n  complex_of_real (ln_Gamma x) =\n  complex_of_real\n   ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m)\n\ngoal (1 subgoal):\n 1. ln_Gamma x =\n    (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n    (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n    stirling_integral m x / real m", "by (subst (asm) of_real_eq_iff)"], ["proof (state)\nthis:\n  ln_Gamma x =\n  (x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n  (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k) * x ^ k)) -\n  stirling_integral m x / real m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_bound_aux:\n  assumes n: \"n > (1::nat)\"\n  obtains c where \"\\<And>s. Re s > 0 \\<Longrightarrow> norm (stirling_integral n s) \\<le>  c / Re s ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain c where c: \"norm (pbernpoly n x) \\<le> c\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule bounded_pbernpoly[of n]) blast"], ["proof (state)\nthis:\n  norm (pbernpoly n ?x) \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have c': \"pbernpoly n x \\<le> c\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. pbernpoly n x \\<le> c", "using c[of x]"], ["proof (prove)\nusing this:\n  norm (pbernpoly n x) \\<le> c\n\ngoal (1 subgoal):\n 1. pbernpoly n x \\<le> c", "by (simp add: abs_real_def split: if_splits)"], ["proof (state)\nthis:\n  pbernpoly n ?x \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from c[of 0]"], ["proof (chain)\npicking this:\n  norm (pbernpoly n 0) \\<le> c", "have c_nonneg: \"c \\<ge> 0\""], ["proof (prove)\nusing this:\n  norm (pbernpoly n 0) \\<le> c\n\ngoal (1 subgoal):\n 1. 0 \\<le> c", "by simp"], ["proof (state)\nthis:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"norm (stirling_integral n s) \\<le> c / (real n - 1) / Re s ^ (n - 1)\" if s: \"Re s > 0\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (stirling_integral n s) \\<le> c / (real n - 1) / Re s ^ (n - 1)", "proof (rule Lim_norm_ubound[OF _ LIMSEQ_stirling_integral])"], ["proof (state)\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n\n 4. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (integral {0..real x}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "have pos: \"x + norm s > 0\" if \"x \\<ge> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x + cmod s", "using s that"], ["proof (prove)\nusing this:\n  0 < Re s\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. 0 < x + cmod s", "by (intro add_nonneg_pos) auto"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow> 0 < ?x + cmod s\n\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n\n 4. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (integral {0..real x}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "have nz: \"of_real x + s \\<noteq> 0\" if \"x \\<ge> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "using s that"], ["proof (prove)\nusing this:\n  0 < Re s\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "by (auto simp: complex_eq_iff)"], ["proof (state)\nthis:\n  0 \\<le> ?x \\<Longrightarrow> complex_of_real ?x + s \\<noteq> 0\n\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n\n 4. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (integral {0..real x}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "let ?bound = \"\\<lambda>N. c / (Re s ^ (n - 1) * (real n - 1)) - \n                        c / ((real N + Re s) ^ (n - 1) * (real n - 1))\""], ["proof (state)\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n\n 4. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (integral {0..real x}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "show \"eventually (\\<lambda>N. norm (integral {0..real N} \n              (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n)) \\<le> \n            c / (real n - 1) / Re s ^ (n - 1)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F N in sequentially.\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "using eventually_gt_at_top[of \"0::nat\"]"], ["proof (prove)\nusing this:\n  eventually ((<) 0) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F N in sequentially.\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "case (elim N)"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "let ?F = \"\\<lambda>x. -c / ((x + Re s) ^ (n - 1) * (real n - 1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "from n s"], ["proof (chain)\npicking this:\n  1 < n\n  0 < Re s", "have \"((\\<lambda>x. c / (x + Re s) ^ n) has_integral (?F (real N) - ?F 0)) {0..real N}\""], ["proof (prove)\nusing this:\n  1 < n\n  0 < Re s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / (x + Re s) ^ n) has_integral\n     - c / ((real N + Re s) ^ (n - 1) * (real n - 1)) -\n     - c / ((0 + Re s) ^ (n - 1) * (real n - 1)))\n     {0..real N}", "by (intro fundamental_theorem_of_calculus)\n           (auto intro!: derivative_eq_intros simp: divide_simps power_diff add_eq_0_iff2\n                   has_field_derivative_iff_has_vector_derivative [symmetric])"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (x + Re s) ^ n) has_integral\n   - c / ((real N + Re s) ^ (n - 1) * (real n - 1)) -\n   - c / ((0 + Re s) ^ (n - 1) * (real n - 1)))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (x + Re s) ^ n) has_integral\n   - c / ((real N + Re s) ^ (n - 1) * (real n - 1)) -\n   - c / ((0 + Re s) ^ (n - 1) * (real n - 1)))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "have \"?F (real N) - ?F 0 = ?bound N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - c / ((real N + Re s) ^ (n - 1) * (real n - 1)) -\n    - c / ((0 + Re s) ^ (n - 1) * (real n - 1)) =\n    c / (Re s ^ (n - 1) * (real n - 1)) -\n    c / ((real N + Re s) ^ (n - 1) * (real n - 1))", "by simp"], ["proof (state)\nthis:\n  - c / ((real N + Re s) ^ (n - 1) * (real n - 1)) -\n  - c / ((0 + Re s) ^ (n - 1) * (real n - 1)) =\n  c / (Re s ^ (n - 1) * (real n - 1)) -\n  c / ((real N + Re s) ^ (n - 1) * (real n - 1))\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. c / (x + Re s) ^ n) has_integral\n   c / (Re s ^ (n - 1) * (real n - 1)) -\n   c / ((real N + Re s) ^ (n - 1) * (real n - 1)))\n   {0..real N}", "have *: \"((\\<lambda>x. c / (x + Re s) ^ n) has_integral ?bound N) {0..real N}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. c / (x + Re s) ^ n) has_integral\n   c / (Re s ^ (n - 1) * (real n - 1)) -\n   c / ((real N + Re s) ^ (n - 1) * (real n - 1)))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / (x + Re s) ^ n) has_integral\n     c / (Re s ^ (n - 1) * (real n - 1)) -\n     c / ((real N + Re s) ^ (n - 1) * (real n - 1)))\n     {0..real N}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (x + Re s) ^ n) has_integral\n   c / (Re s ^ (n - 1) * (real n - 1)) -\n   c / ((real N + Re s) ^ (n - 1) * (real n - 1)))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "have \"norm (integral {0..real N} (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n)) \\<le>\n              integral {0..real N} (\\<lambda>x. c / (x + Re s) ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> integral {0..real N} (\\<lambda>x. c / (x + Re s) ^ n)", "proof (intro integral_norm_bound_integral integrable_ln_Gamma_aux s ballI)"], ["proof (state)\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x. c / (x + Re s) ^ n) integrable_on {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / (x + Re s) ^ n", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x. c / (x + Re s) ^ n) integrable_on {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / (x + Re s) ^ n", "assume x: \"x \\<in> {0..real N}\""], ["proof (state)\nthis:\n  x \\<in> {0..real N}\n\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x. c / (x + Re s) ^ n) integrable_on {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / (x + Re s) ^ n", "have \"norm (of_real (pbernpoly n x) / (of_real x + s) ^ n) \\<le> c / norm (of_real x + s) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "unfolding norm_divide norm_power"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x)) /\n    cmod (complex_of_real x + s) ^ n\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "using c"], ["proof (prove)\nusing this:\n  norm (pbernpoly n ?x) \\<le> c\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x)) /\n    cmod (complex_of_real x + s) ^ n\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "by (intro divide_right_mono) simp_all"], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / cmod (complex_of_real x + s) ^ n\n\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x. c / (x + Re s) ^ n) integrable_on {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / (x + Re s) ^ n", "also"], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / cmod (complex_of_real x + s) ^ n\n\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x. c / (x + Re s) ^ n) integrable_on {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / (x + Re s) ^ n", "have \"\\<dots> \\<le> c / (x + Re s) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / cmod (complex_of_real x + s) ^ n \\<le> c / (x + Re s) ^ n", "using x c c_nonneg s nz[of x] complex_Re_le_cmod[of \"of_real x + s\"]"], ["proof (prove)\nusing this:\n  x \\<in> {0..real N}\n  norm (pbernpoly n ?x) \\<le> c\n  0 \\<le> c\n  0 < Re s\n  0 \\<le> x \\<Longrightarrow> complex_of_real x + s \\<noteq> 0\n  Re (complex_of_real x + s) \\<le> cmod (complex_of_real x + s)\n\ngoal (1 subgoal):\n 1. c / cmod (complex_of_real x + s) ^ n \\<le> c / (x + Re s) ^ n", "by (intro divide_left_mono power_mono mult_pos_pos zero_less_power add_nonneg_pos) auto"], ["proof (state)\nthis:\n  c / cmod (complex_of_real x + s) ^ n \\<le> c / (x + Re s) ^ n\n\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x. c / (x + Re s) ^ n) integrable_on {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / (x + Re s) ^ n", "finally"], ["proof (chain)\npicking this:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / (x + Re s) ^ n", "show \"norm (of_real (pbernpoly n x) / (of_real x + s) ^ n) \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / (x + Re s) ^ n\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n    \\<le> c / (x + Re s) ^ n", "."], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / (x + Re s) ^ n\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x. c / (x + Re s) ^ n) integrable_on {0..real N}", "qed (insert n s * pos nz c, auto simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> integral {0..real N} (\\<lambda>x. c / (x + Re s) ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> integral {0..real N} (\\<lambda>x. c / (x + Re s) ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "have \"\\<dots> = ?bound N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {0..real N} (\\<lambda>x. c / (x + Re s) ^ n) =\n    c / (Re s ^ (n - 1) * (real n - 1)) -\n    c / ((real N + Re s) ^ (n - 1) * (real n - 1))", "using *"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. c / (x + Re s) ^ n) has_integral\n   c / (Re s ^ (n - 1) * (real n - 1)) -\n   c / ((real N + Re s) ^ (n - 1) * (real n - 1)))\n   {0..real N}\n\ngoal (1 subgoal):\n 1. integral {0..real N} (\\<lambda>x. c / (x + Re s) ^ n) =\n    c / (Re s ^ (n - 1) * (real n - 1)) -\n    c / ((real N + Re s) ^ (n - 1) * (real n - 1))", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {0..real N} (\\<lambda>x. c / (x + Re s) ^ n) =\n  c / (Re s ^ (n - 1) * (real n - 1)) -\n  c / ((real N + Re s) ^ (n - 1) * (real n - 1))\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  integral {0..real N} (\\<lambda>x. c / (x + Re s) ^ n) =\n  c / (Re s ^ (n - 1) * (real n - 1)) -\n  c / ((real N + Re s) ^ (n - 1) * (real n - 1))\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "have \"\\<dots> \\<le> c / (Re s ^ (n - 1) * (real n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / (Re s ^ (n - 1) * (real n - 1)) -\n    c / ((real N + Re s) ^ (n - 1) * (real n - 1))\n    \\<le> c / (Re s ^ (n - 1) * (real n - 1))", "using c_nonneg elim s n"], ["proof (prove)\nusing this:\n  0 \\<le> c\n  0 < N\n  0 < Re s\n  1 < n\n\ngoal (1 subgoal):\n 1. c / (Re s ^ (n - 1) * (real n - 1)) -\n    c / ((real N + Re s) ^ (n - 1) * (real n - 1))\n    \\<le> c / (Re s ^ (n - 1) * (real n - 1))", "by simp"], ["proof (state)\nthis:\n  c / (Re s ^ (n - 1) * (real n - 1)) -\n  c / ((real N + Re s) ^ (n - 1) * (real n - 1))\n  \\<le> c / (Re s ^ (n - 1) * (real n - 1))\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  c / (Re s ^ (n - 1) * (real n - 1)) -\n  c / ((real N + Re s) ^ (n - 1) * (real n - 1))\n  \\<le> c / (Re s ^ (n - 1) * (real n - 1))\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "have \"\\<dots> = c / (real n - 1) / (Re s ^ (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / (Re s ^ (n - 1) * (real n - 1)) = c / (real n - 1) / Re s ^ (n - 1)", "by simp"], ["proof (state)\nthis:\n  c / (Re s ^ (n - 1) * (real n - 1)) = c / (real n - 1) / Re s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> c / (real n - 1) / Re s ^ (n - 1)", "finally"], ["proof (chain)\npicking this:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> c / (real n - 1) / Re s ^ (n - 1)", "show \"norm (integral {0..real N} (\\<lambda>x. of_real (pbernpoly n x) /\n                      (of_real x + s) ^ n)) \\<le> c / (real n - 1) / Re s ^ (n - 1)\""], ["proof (prove)\nusing this:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> c / (real n - 1) / Re s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> c / (real n - 1) / Re s ^ (n - 1)", "."], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> c / (real n - 1) / Re s ^ (n - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F N in sequentially.\n     cmod\n      (integral {0..real N}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n     \\<le> c / (real n - 1) / Re s ^ (n - 1)\n\ngoal (3 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n", "qed (insert s n, simp_all add: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  0 < Re ?s \\<Longrightarrow>\n  cmod (stirling_integral n ?s) \\<le> c / (real n - 1) / Re ?s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  0 < Re ?s \\<Longrightarrow>\n  cmod (stirling_integral n ?s) \\<le> c / (real n - 1) / Re ?s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_bound_aux_integral1:\n  fixes a b c :: real and n :: nat\n  assumes \"a \\<ge> 0\" \"b > 0\" \"c \\<ge> 0\" \"n > 1\" \"l < a - b\" \"r > a + b\"\n  shows \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n           2*c*(n / (n - 1))/b^(n-1) - c/(n-1) * (1/(a-l)^(n-1) + 1/(r-a)^(n-1))) {l..r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "define x1 x2 where \"x1 = a - b\" and \"x2 = a + b\""], ["proof (state)\nthis:\n  x1 = a - b\n  x2 = a + b\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "define F1 where \"F1 = (\\<lambda>x::real. c / (a - x) ^ (n - 1) / (n - 1))\""], ["proof (state)\nthis:\n  F1 = (\\<lambda>x. c / (a - x) ^ (n - 1) / real (n - 1))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "define F3 where \"F3 = (\\<lambda>x::real. -c / (x - a) ^ (n - 1) / (n - 1))\""], ["proof (state)\nthis:\n  F3 = (\\<lambda>x. - c / (x - a) ^ (n - 1) / real (n - 1))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have deriv: \"(F1 has_vector_derivative (c / (a - x) ^ n)) (at x within A)\"\n              \"(F3 has_vector_derivative (c / (x - a) ^ n)) (at x within A)\"\n    if \"x \\<noteq> a\" for x :: real and A"], ["proof (prove)\ngoal (1 subgoal):\n 1. (F1 has_vector_derivative c / (a - x) ^ n) (at x within A) &&&\n    (F3 has_vector_derivative c / (x - a) ^ n) (at x within A)", "unfolding F1_def F3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         c / (a - x) ^ (n - 1) / real (n - 1)) has_vector_derivative\n     c / (a - x) ^ n)\n     (at x within A) &&&\n    ((\\<lambda>x.\n         - c / (x - a) ^ (n - 1) / real (n - 1)) has_vector_derivative\n     c / (x - a) ^ n)\n     (at x within A)", "using assms that"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         c / (a - x) ^ (n - 1) / real (n - 1)) has_vector_derivative\n     c / (a - x) ^ n)\n     (at x within A) &&&\n    ((\\<lambda>x.\n         - c / (x - a) ^ (n - 1) / real (n - 1)) has_vector_derivative\n     c / (x - a) ^ n)\n     (at x within A)", "by (auto intro!: derivative_eq_intros simp: divide_simps power_diff add_eq_0_iff2\n             simp flip: has_field_derivative_iff_has_vector_derivative)"], ["proof (state)\nthis:\n  ?x \\<noteq> a \\<Longrightarrow>\n  (F1 has_vector_derivative c / (a - ?x) ^ n) (at ?x within ?A)\n  ?x \\<noteq> a \\<Longrightarrow>\n  (F3 has_vector_derivative c / (?x - a) ^ n) (at ?x within ?A)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "from assms"], ["proof (chain)\npicking this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r", "have \"((\\<lambda>x. c / (a - x) ^ n) has_integral (F1 x1 - F1 l)) {l..x1}\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / (a - x) ^ n) has_integral F1 x1 - F1 l) {l..x1}", "by (intro fundamental_theorem_of_calculus deriv) (auto simp: x1_def max_def split: if_splits)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (a - x) ^ n) has_integral F1 x1 - F1 l) {l..x1}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (a - x) ^ n) has_integral F1 x1 - F1 l) {l..x1}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"?this \\<longleftrightarrow> ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral (F1 x1 - F1 l)) {l..x1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / (a - x) ^ n) has_integral F1 x1 - F1 l) {l..x1} =\n    ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     F1 x1 - F1 l)\n     {l..x1}", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / (a - x) ^ n) has_integral F1 x1 - F1 l) {l..x1} =\n    ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     F1 x1 - F1 l)\n     {l..x1}", "by (intro has_integral_spike_finite_eq[of \"{l}\"]) (auto simp: x1_def max_def split: if_splits)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (a - x) ^ n) has_integral F1 x1 - F1 l) {l..x1} =\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral F1 x1 - F1 l)\n   {l..x1}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral F1 x1 - F1 l)\n   {l..x1}", "have I1: \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral (F1 x1 - F1 l)) {l..x1}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral F1 x1 - F1 l)\n   {l..x1}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     F1 x1 - F1 l)\n     {l..x1}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral F1 x1 - F1 l)\n   {l..x1}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"((\\<lambda>x. c / b ^ n) has_integral (x2 - x1) * c / b ^ n) {x1..x2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / b ^ n) has_integral (x2 - x1) * c / b ^ n) {x1..x2}", "using has_integral_const_real[of \"c / b ^ n\" x1 x2] assms"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. c / b ^ n) has_integral\n   Henstock_Kurzweil_Integration.content {x1..x2} *\\<^sub>R (c / b ^ n))\n   {x1..x2}\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / b ^ n) has_integral (x2 - x1) * c / b ^ n) {x1..x2}", "by (simp add: x1_def x2_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / b ^ n) has_integral (x2 - x1) * c / b ^ n) {x1..x2}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / b ^ n) has_integral (x2 - x1) * c / b ^ n) {x1..x2}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"?this \\<longleftrightarrow> ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral ((x2 - x1) * c / b ^ n)) {x1..x2}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / b ^ n) has_integral (x2 - x1) * c / b ^ n) {x1..x2} =\n    ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     (x2 - x1) * c / b ^ n)\n     {x1..x2}", "by (intro has_integral_spike_finite_eq[of \"{x1, x2}\"])\n       (auto simp: x1_def x2_def split: if_splits)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / b ^ n) has_integral (x2 - x1) * c / b ^ n) {x1..x2} =\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   (x2 - x1) * c / b ^ n)\n   {x1..x2}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   (x2 - x1) * c / b ^ n)\n   {x1..x2}", "have I2: \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral ((x2 - x1) * c / b ^ n)) {x1..x2}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   (x2 - x1) * c / b ^ n)\n   {x1..x2}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     (x2 - x1) * c / b ^ n)\n     {x1..x2}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   (x2 - x1) * c / b ^ n)\n   {x1..x2}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "from assms"], ["proof (chain)\npicking this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r", "have I3: \"((\\<lambda>x. c / (x - a) ^ n) has_integral (F3 r - F3 x2)) {x2..r}\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / (x - a) ^ n) has_integral F3 r - F3 x2) {x2..r}", "by (intro fundamental_theorem_of_calculus deriv) (auto simp: x2_def min_def split: if_splits)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (x - a) ^ n) has_integral F3 r - F3 x2) {x2..r}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (x - a) ^ n) has_integral F3 r - F3 x2) {x2..r}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"?this \\<longleftrightarrow> ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral (F3 r - F3 x2)) {x2..r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / (x - a) ^ n) has_integral F3 r - F3 x2) {x2..r} =\n    ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     F3 r - F3 x2)\n     {x2..r}", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / (x - a) ^ n) has_integral F3 r - F3 x2) {x2..r} =\n    ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     F3 r - F3 x2)\n     {x2..r}", "by (intro has_integral_spike_finite_eq[of \"{r}\"]) (auto simp: x2_def min_def split: if_splits)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / (x - a) ^ n) has_integral F3 r - F3 x2) {x2..r} =\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral F3 r - F3 x2)\n   {x2..r}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral F3 r - F3 x2)\n   {x2..r}", "have I3: \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral (F3 r - F3 x2)) {x2..r}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral F3 r - F3 x2)\n   {x2..r}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     F3 r - F3 x2)\n     {x2..r}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral F3 r - F3 x2)\n   {x2..r}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral (F1 x1 - F1 l) + ((x2 - x1) * c / b ^ n) + (F3 r - F3 x2)) {l..r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     F1 x1 - F1 l + (x2 - x1) * c / b ^ n + (F3 r - F3 x2))\n     {l..r}", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     F1 x1 - F1 l + (x2 - x1) * c / b ^ n + (F3 r - F3 x2))\n     {l..r}", "by (intro has_integral_combine[OF _ _ has_integral_combine[OF _ _ I1 I2] I3])\n       (auto simp: x1_def x2_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   F1 x1 - F1 l + (x2 - x1) * c / b ^ n + (F3 r - F3 x2))\n   {l..r}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   F1 x1 - F1 l + (x2 - x1) * c / b ^ n + (F3 r - F3 x2))\n   {l..r}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"(F1 x1 - F1 l) + ((x2 - x1) * c / b ^ n) + (F3 r - F3 x2) =\n             F1 x1 - F1 l + F3 r - F3 x2 + (x2 - x1) * c / b ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F1 x1 - F1 l + (x2 - x1) * c / b ^ n + (F3 r - F3 x2) =\n    F1 x1 - F1 l + F3 r - F3 x2 + (x2 - x1) * c / b ^ n", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  F1 x1 - F1 l + (x2 - x1) * c / b ^ n + (F3 r - F3 x2) =\n  F1 x1 - F1 l + F3 r - F3 x2 + (x2 - x1) * c / b ^ n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  F1 x1 - F1 l + (x2 - x1) * c / b ^ n + (F3 r - F3 x2) =\n  F1 x1 - F1 l + F3 r - F3 x2 + (x2 - x1) * c / b ^ n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"x2 - x1 = 2 * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x2 - x1 = 2 * b", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. x2 - x1 = 2 * b", "by (simp add: x2_def x1_def min_def max_def)"], ["proof (state)\nthis:\n  x2 - x1 = 2 * b\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  x2 - x1 = 2 * b\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"2 * b * c / b ^ n = 2 * c / b ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * b * c / b ^ n = 2 * c / b ^ (n - 1)", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. 2 * b * c / b ^ n = 2 * c / b ^ (n - 1)", "by (simp add: power_diff field_simps)"], ["proof (state)\nthis:\n  2 * b * c / b ^ n = 2 * c / b ^ (n - 1)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  2 * b * c / b ^ n = 2 * c / b ^ (n - 1)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"F1 x1 - F1 l + F3 r - F3 x2 =\n               c/(n-1) * (2/b^(n-1) - 1/(a-l)^(n-1) - 1/(r-a)^(n-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F1 x1 - F1 l + F3 r - F3 x2 =\n    c / real (n - 1) *\n    (2 / b ^ (n - 1) - 1 / (a - l) ^ (n - 1) - 1 / (r - a) ^ (n - 1))", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. F1 x1 - F1 l + F3 r - F3 x2 =\n    c / real (n - 1) *\n    (2 / b ^ (n - 1) - 1 / (a - l) ^ (n - 1) - 1 / (r - a) ^ (n - 1))", "by (simp add: x1_def x2_def F1_def F3_def field_simps)"], ["proof (state)\nthis:\n  F1 x1 - F1 l + F3 r - F3 x2 =\n  c / real (n - 1) *\n  (2 / b ^ (n - 1) - 1 / (a - l) ^ (n - 1) - 1 / (r - a) ^ (n - 1))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  F1 x1 - F1 l + F3 r - F3 x2 =\n  c / real (n - 1) *\n  (2 / b ^ (n - 1) - 1 / (a - l) ^ (n - 1) - 1 / (r - a) ^ (n - 1))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"\\<dots> + 2 * c / b ^ (n - 1) =\n             2*c*(1 + 1/(n-1))/b^(n-1) - c/(n-1) * (1/(a-l)^(n-1) + 1/(r-a)^(n-1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / real (n - 1) *\n    (2 / b ^ (n - 1) - 1 / (a - l) ^ (n - 1) - 1 / (r - a) ^ (n - 1)) +\n    2 * c / b ^ (n - 1) =\n    2 * c * (1 + 1 / real (n - 1)) / b ^ (n - 1) -\n    c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1))", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. c / real (n - 1) *\n    (2 / b ^ (n - 1) - 1 / (a - l) ^ (n - 1) - 1 / (r - a) ^ (n - 1)) +\n    2 * c / b ^ (n - 1) =\n    2 * c * (1 + 1 / real (n - 1)) / b ^ (n - 1) -\n    c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1))", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  c / real (n - 1) *\n  (2 / b ^ (n - 1) - 1 / (a - l) ^ (n - 1) - 1 / (r - a) ^ (n - 1)) +\n  2 * c / b ^ (n - 1) =\n  2 * c * (1 + 1 / real (n - 1)) / b ^ (n - 1) -\n  c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "also"], ["proof (state)\nthis:\n  c / real (n - 1) *\n  (2 / b ^ (n - 1) - 1 / (a - l) ^ (n - 1) - 1 / (r - a) ^ (n - 1)) +\n  2 * c / b ^ (n - 1) =\n  2 * c * (1 + 1 / real (n - 1)) / b ^ (n - 1) -\n  c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "have \"1 + 1 / (n - 1) = n / (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 + 1 / real (n - 1) = real n / real (n - 1)", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n  l < a - b\n  a + b < r\n\ngoal (1 subgoal):\n 1. 1 + 1 / real (n - 1) = real n / real (n - 1)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  1 + 1 / real (n - 1) = real n / real (n - 1)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n   c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n   {l..r}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n   c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n   {l..r}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n     {l..r}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n   2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n   c / real (n - 1) * (1 / (a - l) ^ (n - 1) + 1 / (r - a) ^ (n - 1)))\n   {l..r}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_bound_aux_integral2:\n  fixes a b c :: real and n :: nat\n  assumes \"a \\<ge> 0\" \"b > 0\" \"c \\<ge> 0\" \"n > 1\"\n  obtains I where \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I) {l..r}\"\n                  \"I \\<le> 2 * c * (n / (n - 1)) / b ^ (n-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define l' where \"l' = min l (a - b - 1)\""], ["proof (state)\nthis:\n  l' = min l (a - b - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define r' where \"r' = max r (a + b + 1)\""], ["proof (state)\nthis:\n  r' = max r (a + b + 1)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define A where \"A = 2 * c * (n / (n - 1)) / b ^ (n - 1)\""], ["proof (state)\nthis:\n  A = 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define B where \"B = c / real (n - 1) * (1 / (a - l') ^ (n - 1) + 1 / (r' - a) ^ (n - 1))\""], ["proof (state)\nthis:\n  B = c / real (n - 1) * (1 / (a - l') ^ (n - 1) + 1 / (r' - a) ^ (n - 1))\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have has_int: \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral (A - B)) {l'..r'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral A - B)\n     {l'..r'}", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral A - B)\n     {l'..r'}", "unfolding A_def B_def"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n     2 * c * (real n / real (n - 1)) / b ^ (n - 1) -\n     c / real (n - 1) * (1 / (a - l') ^ (n - 1) + 1 / (r' - a) ^ (n - 1)))\n     {l'..r'}", "by (intro stirling_integral_bound_aux_integral1) (auto simp: l'_def r'_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral A - B)\n   {l'..r'}\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) integrable_on {l..r}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) integrable_on {l..r}", "by (rule integrable_on_subinterval[OF has_integral_integrable[OF has_int]])\n       (auto simp: l'_def r'_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) integrable_on {l..r}\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) integrable_on {l..r}", "obtain I where has_int': \"((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I) {l..r}\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) integrable_on {l..r}\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I)\n         {l..r} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: integrable_on_def)"], ["proof (state)\nthis:\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I) {l..r}\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n", "have \"I \\<le> A - B\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n\ngoal (1 subgoal):\n 1. I \\<le> A - B", "by (intro has_integral_subset_le[OF _ has_int' has_int]) (auto simp: l'_def r'_def)"], ["proof (state)\nthis:\n  I \\<le> A - B\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  I \\<le> A - B\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> \\<le> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - B \\<le> A", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 < b\n  0 \\<le> c\n  1 < n\n\ngoal (1 subgoal):\n 1. A - B \\<le> A", "by (simp add: B_def l'_def r'_def)"], ["proof (state)\nthis:\n  A - B \\<le> A\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral\n                  I)\n                  {l..r};\n         I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  I \\<le> A", "show ?thesis"], ["proof (prove)\nusing this:\n  I \\<le> A\n\ngoal (1 subgoal):\n 1. thesis", "using that[of I] has_int'"], ["proof (prove)\nusing this:\n  I \\<le> A\n  \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I)\n            {l..r};\n   I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I) {l..r}\n\ngoal (1 subgoal):\n 1. thesis", "unfolding A_def"], ["proof (prove)\nusing this:\n  I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\n  \\<lbrakk>((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I)\n            {l..r};\n   I \\<le> 2 * c * (real n / real (n - 1)) / b ^ (n - 1)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ((\\<lambda>x. c / max b \\<bar>x - a\\<bar> ^ n) has_integral I) {l..r}\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_bound_aux':\n  assumes n: \"n > (1::nat)\" and \\<alpha>: \"\\<alpha> \\<in> {0<..<pi}\"\n  obtains c where \"\\<And>s::complex. s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n                     norm (stirling_integral n s) \\<le> c / norm s ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain c where c: \"norm (pbernpoly n x) \\<le> c\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>x. norm (pbernpoly n x) \\<le> c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule bounded_pbernpoly[of n]) blast"], ["proof (state)\nthis:\n  norm (pbernpoly n ?x) \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have c': \"pbernpoly n x \\<le> c\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. pbernpoly n x \\<le> c", "using c[of x]"], ["proof (prove)\nusing this:\n  norm (pbernpoly n x) \\<le> c\n\ngoal (1 subgoal):\n 1. pbernpoly n x \\<le> c", "by (simp add: abs_real_def split: if_splits)"], ["proof (state)\nthis:\n  pbernpoly n ?x \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from c[of 0]"], ["proof (chain)\npicking this:\n  norm (pbernpoly n 0) \\<le> c", "have c_nonneg: \"c \\<ge> 0\""], ["proof (prove)\nusing this:\n  norm (pbernpoly n 0) \\<le> c\n\ngoal (1 subgoal):\n 1. 0 \\<le> c", "by simp"], ["proof (state)\nthis:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define D where \"D = c * Beta (- (real_of_int (- int n) / 2) - 1 / 2) (1 / 2) / 2\""], ["proof (state)\nthis:\n  D = c * Beta (- (real_of_int (- int n) / 2) - 1 / 2) (1 / 2) / 2\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define C where \"C = max D (2*c*(n/(n-1))/sin \\<alpha>^(n-1))\""], ["proof (state)\nthis:\n  C = max D (2 * c * (real n / real (n - 1)) / sin \\<alpha> ^ (n - 1))\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have *: \"norm (stirling_integral n s) \\<le> C / norm s ^ (n - 1)\"\n    if s: \"s \\<in> complex_cone' \\<alpha> - {0}\" for s :: complex"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (stirling_integral n s) \\<le> C / cmod s ^ (n - 1)", "proof (rule Lim_norm_ubound[OF _ LIMSEQ_stirling_integral])"], ["proof (state)\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n\n 4. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (integral {0..real x}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> C / cmod s ^ (n - 1)", "from s \\<alpha>"], ["proof (chain)\npicking this:\n  s \\<in> complex_cone' \\<alpha> - {0}\n  \\<alpha> \\<in> {0<..<pi}", "have arg: \"\\<bar>arg s\\<bar> \\<le> \\<alpha>\""], ["proof (prove)\nusing this:\n  s \\<in> complex_cone' \\<alpha> - {0}\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. \\<bar>arg s\\<bar> \\<le> \\<alpha>", "by (auto simp: complex_cone_altdef)"], ["proof (state)\nthis:\n  \\<bar>arg s\\<bar> \\<le> \\<alpha>\n\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n\n 4. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (integral {0..real x}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> C / cmod s ^ (n - 1)", "have s': \"s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "using complex_cone_inter_nonpos_Reals[of \"-\\<alpha>\" \\<alpha>] \\<alpha> s"], ["proof (prove)\nusing this:\n  \\<lbrakk>- pi < - \\<alpha>; - \\<alpha> \\<le> \\<alpha>;\n   \\<alpha> < pi\\<rbrakk>\n  \\<Longrightarrow> complex_cone' \\<alpha> \\<inter>\n                    \\<real>\\<^sub>\\<le>\\<^sub>0 =\n                    {0}\n  \\<alpha> \\<in> {0<..<pi}\n  s \\<in> complex_cone' \\<alpha> - {0}\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n\n 4. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (integral {0..real x}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> C / cmod s ^ (n - 1)", "from s"], ["proof (chain)\npicking this:\n  s \\<in> complex_cone' \\<alpha> - {0}", "have [simp]: \"s \\<noteq> 0\""], ["proof (prove)\nusing this:\n  s \\<in> complex_cone' \\<alpha> - {0}\n\ngoal (1 subgoal):\n 1. s \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> 0\n\ngoal (4 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n\n 4. \\<forall>\\<^sub>F x in sequentially.\n       cmod\n        (integral {0..real x}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> C / cmod s ^ (n - 1)", "show \"eventually (\\<lambda>N. norm (integral {0..real N}\n              (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n)) \\<le> \n            C / norm s ^ (n - 1)) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F N in sequentially.\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> C / cmod s ^ (n - 1)", "using eventually_gt_at_top[of \"0::nat\"]"], ["proof (prove)\nusing this:\n  eventually ((<) 0) sequentially\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F N in sequentially.\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> C / cmod s ^ (n - 1)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> C / cmod s ^ (n - 1)", "case (elim N)"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. \\<And>N.\n       0 < N \\<Longrightarrow>\n       cmod\n        (integral {0..real N}\n          (\\<lambda>x.\n              complex_of_real (pbernpoly n x) /\n              (complex_of_real x + s) ^ n))\n       \\<le> C / cmod s ^ (n - 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "proof (cases \"Re s > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "case True"], ["proof (state)\nthis:\n  0 < Re s\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have int: \"((\\<lambda>x. c * (x^2 + norm s^2) powr (-n / 2)) has_integral\n                  D * (norm s ^ 2) powr (-n / 2 + 1 / 2)) {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n         (real_of_int (- int n) / 2)) has_integral\n     D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n     {0<..}", "using has_integral_mult_left[OF has_integral_Beta3[of \"-n/2\" \"norm s ^ 2\"], of c] assms True"], ["proof (prove)\nusing this:\n  \\<lbrakk>real_of_int (- int n) / 2 < - 1 / 2;\n   0 < (cmod s)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x.\n                         ((cmod s)\\<^sup>2 + x\\<^sup>2) powr\n                         (real_of_int (- int n) / 2) *\n                         c) has_integral\n                     Beta (- (real_of_int (- int n) / 2) - 1 / 2) (1 / 2) /\n                     2 *\n                     (cmod s)\\<^sup>2 powr\n                     (real_of_int (- int n) / 2 + 1 / 2) *\n                     c)\n                     {0<..}\n  1 < n\n  \\<alpha> \\<in> {0<..<pi}\n  0 < Re s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n         (real_of_int (- int n) / 2)) has_integral\n     D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n     {0<..}", "unfolding D_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>real_of_int (- int n) / 2 < - 1 / 2;\n   0 < (cmod s)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>x.\n                         ((cmod s)\\<^sup>2 + x\\<^sup>2) powr\n                         (real_of_int (- int n) / 2) *\n                         c) has_integral\n                     Beta (- (real_of_int (- int n) / 2) - 1 / 2) (1 / 2) /\n                     2 *\n                     (cmod s)\\<^sup>2 powr\n                     (real_of_int (- int n) / 2 + 1 / 2) *\n                     c)\n                     {0<..}\n  1 < n\n  \\<alpha> \\<in> {0<..<pi}\n  0 < Re s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n         (real_of_int (- int n) / 2)) has_integral\n     c * Beta (- (real_of_int (- int n) / 2) - 1 / 2) (1 / 2) / 2 *\n     (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n     {0<..}", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n       (real_of_int (- int n) / 2)) has_integral\n   D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n   {0<..}\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "hence int': \"((\\<lambda>x. c * (x^2 + norm s^2) powr (-n / 2)) has_integral\n                  D * (norm s ^ 2) powr (-n / 2 + 1 / 2)) {0..}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n       (real_of_int (- int n) / 2)) has_integral\n   D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n   {0<..}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n         (real_of_int (- int n) / 2)) has_integral\n     D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n     {0..}", "by (subst has_integral_interior [symmetric]) simp_all"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n       (real_of_int (- int n) / 2)) has_integral\n   D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n   {0..}\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "hence integrable: \"(\\<lambda>x. c * (x^2 + norm s^2) powr (-n / 2)) integrable_on {0..}\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n       (real_of_int (- int n) / 2)) has_integral\n   D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n   {0..}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0..}", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      c *\n      (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n      (real_of_int (- int n) / 2)) integrable_on\n  {0..}\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"norm (integral {0..real N} (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n)) \\<le>\n                integral {0..real N} (\\<lambda>x. c * (x^2 + norm s^2) powr (-n / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> integral {0..real N}\n           (\\<lambda>x.\n               c *\n               (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n               (real_of_int (- int n) / 2))", "proof (intro integral_norm_bound_integral s ballI integrable_ln_Gamma_aux)"], ["proof (state)\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "have [simp]: \"{0<..} - {0::real..} = {}\" \"{0..} - {0<..} = {0::real}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0<..} - {0..} = {} &&& {0..} - {0<..} = {0}", "by auto"], ["proof (state)\nthis:\n  {0<..} - {0..} = {}\n  {0..} - {0<..} = {0}\n\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "have \"(\\<lambda>x. c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)) integrable_on {0<..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0<..}", "using int"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n       (real_of_int (- int n) / 2)) has_integral\n   D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n   {0<..}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0<..}", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      c *\n      (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n      (real_of_int (- int n) / 2)) integrable_on\n  {0<..}\n\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      c *\n      (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n      (real_of_int (- int n) / 2)) integrable_on\n  {0<..}\n\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "have \"?this \\<longleftrightarrow> (\\<lambda>x. c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)) integrable_on {0..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n         (real_of_int (- int n) / 2)) integrable_on\n     {0<..}) =\n    ((\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n         (real_of_int (- int n) / 2)) integrable_on\n     {0..})", "by (intro integrable_spike_set_eq) auto"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n       (real_of_int (- int n) / 2)) integrable_on\n   {0<..}) =\n  ((\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n       (real_of_int (- int n) / 2)) integrable_on\n   {0..})\n\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      c *\n      (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n      (real_of_int (- int n) / 2)) integrable_on\n  {0..}", "show \"(\\<lambda>x. c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)) integrable_on\n                   {0..real N}\""], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      c *\n      (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n      (real_of_int (- int n) / 2)) integrable_on\n  {0..}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        c *\n        (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n        (real_of_int (- int n) / 2)) integrable_on\n    {0..real N}", "by (rule integrable_on_subinterval) auto"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      c *\n      (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n      (real_of_int (- int n) / 2)) integrable_on\n  {0..real N}\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "assume x: \"x \\<in> {0..real N}\""], ["proof (state)\nthis:\n  x \\<in> {0..real N}\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "have nz: \"complex_of_real x + s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "using True x"], ["proof (prove)\nusing this:\n  0 < Re s\n  x \\<in> {0..real N}\n\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "by (auto simp: complex_eq_iff)"], ["proof (state)\nthis:\n  complex_of_real x + s \\<noteq> 0\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "have \"norm (of_real (pbernpoly n x) / (of_real x + s) ^ n) \\<le> c / norm (of_real x + s) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "unfolding norm_divide norm_power"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x)) /\n    cmod (complex_of_real x + s) ^ n\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "using c"], ["proof (prove)\nusing this:\n  norm (pbernpoly n ?x) \\<le> c\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x)) /\n    cmod (complex_of_real x + s) ^ n\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "by (intro divide_right_mono) simp_all"], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / cmod (complex_of_real x + s) ^ n\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "also"], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / cmod (complex_of_real x + s) ^ n\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "have \"\\<dots> \\<le> c / sqrt (x ^ 2 + norm s ^ 2) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / cmod (complex_of_real x + s) ^ n\n    \\<le> c / sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) ^ n", "proof (intro divide_left_mono mult_pos_pos zero_less_power power_mono)"], ["proof (state)\ngoal (5 subgoals):\n 1. sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) \\<le> cmod (complex_of_real x + s)\n 2. 0 \\<le> sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2)\n 3. 0 \\<le> c\n 4. 0 < cmod (complex_of_real x + s)\n 5. 0 < sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2)", "show \"sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) \\<le> cmod (complex_of_real x + s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) \\<le> cmod (complex_of_real x + s)", "using x True"], ["proof (prove)\nusing this:\n  x \\<in> {0..real N}\n  0 < Re s\n\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) \\<le> cmod (complex_of_real x + s)", "by (simp add: cmod_def algebra_simps power2_eq_square)"], ["proof (state)\nthis:\n  sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) \\<le> cmod (complex_of_real x + s)\n\ngoal (4 subgoals):\n 1. 0 \\<le> sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2)\n 2. 0 \\<le> c\n 3. 0 < cmod (complex_of_real x + s)\n 4. 0 < sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2)", "qed (use x True c_nonneg assms nz in \\<open>auto simp: add_nonneg_pos\\<close>)"], ["proof (state)\nthis:\n  c / cmod (complex_of_real x + s) ^ n\n  \\<le> c / sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) ^ n\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "also"], ["proof (state)\nthis:\n  c / cmod (complex_of_real x + s) ^ n\n  \\<le> c / sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) ^ n\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "have \"sqrt (x ^ 2 + norm s ^ 2) ^ n = (x ^ 2 + norm s ^ 2) powr (1/2 * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) ^ n =\n    (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (1 / 2 * real n)", "by (subst powr_powr [symmetric], subst powr_realpow)\n               (auto simp: powr_half_sqrt add_nonneg_pos)"], ["proof (state)\nthis:\n  sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) ^ n =\n  (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (1 / 2 * real n)\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "also"], ["proof (state)\nthis:\n  sqrt (x\\<^sup>2 + (cmod s)\\<^sup>2) ^ n =\n  (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (1 / 2 * real n)\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "have \"c / \\<dots> = c * (x^2 + norm s^2) powr (-n / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (1 / 2 * real n) =\n    c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "by (simp add: powr_minus field_simps)"], ["proof (state)\nthis:\n  c / (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (1 / 2 * real n) =\n  c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "finally"], ["proof (chain)\npicking this:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "show \"norm (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n    \\<le> c *\n          (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)", "."], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "qed fact+"], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> integral {0..real N}\n         (\\<lambda>x.\n             c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n             (real_of_int (- int n) / 2))\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> integral {0..real N}\n         (\\<lambda>x.\n             c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n             (real_of_int (- int n) / 2))\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> \\<le> integral {0..} (\\<lambda>x. c * (x^2 + norm s^2) powr (-n / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2))\n    \\<le> integral {0..}\n           (\\<lambda>x.\n               c *\n               (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n               (real_of_int (- int n) / 2))", "using c_nonneg"], ["proof (prove)\nusing this:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2))\n    \\<le> integral {0..}\n           (\\<lambda>x.\n               c *\n               (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n               (real_of_int (- int n) / 2))", "by (intro integral_subset_le integrable integrable_on_subinterval[OF integrable]) auto"], ["proof (state)\nthis:\n  integral {0..real N}\n   (\\<lambda>x.\n       c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2))\n  \\<le> integral {0..}\n         (\\<lambda>x.\n             c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n             (real_of_int (- int n) / 2))\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  integral {0..real N}\n   (\\<lambda>x.\n       c * (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2))\n  \\<le> integral {0..}\n         (\\<lambda>x.\n             c *\n             (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n             (real_of_int (- int n) / 2))\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> = D * (norm s ^ 2) powr (-n / 2 + 1 / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {0..}\n     (\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)) =\n    D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2)", "using int'"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr\n       (real_of_int (- int n) / 2)) has_integral\n   D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2))\n   {0..}\n\ngoal (1 subgoal):\n 1. integral {0..}\n     (\\<lambda>x.\n         c *\n         (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)) =\n    D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2)", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {0..}\n   (\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)) =\n  D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2)\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  integral {0..}\n   (\\<lambda>x.\n       c *\n       (x\\<^sup>2 + (cmod s)\\<^sup>2) powr (real_of_int (- int n) / 2)) =\n  D * (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2)\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"(norm s ^ 2) powr (-n / 2 + 1 / 2) = norm s powr (2 * (-n / 2 + 1 / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2) =\n    cmod s powr (2 * (real_of_int (- int n) / 2 + 1 / 2))", "by (subst powr_powr [symmetric]) auto"], ["proof (state)\nthis:\n  (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2) =\n  cmod s powr (2 * (real_of_int (- int n) / 2 + 1 / 2))\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  (cmod s)\\<^sup>2 powr (real_of_int (- int n) / 2 + 1 / 2) =\n  cmod s powr (2 * (real_of_int (- int n) / 2 + 1 / 2))\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> = norm s powr (-real (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod s powr (2 * (real_of_int (- int n) / 2 + 1 / 2)) =\n    cmod s powr - real (n - 1)", "using assms"], ["proof (prove)\nusing this:\n  1 < n\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. cmod s powr (2 * (real_of_int (- int n) / 2 + 1 / 2)) =\n    cmod s powr - real (n - 1)", "by (simp add: of_nat_diff)"], ["proof (state)\nthis:\n  cmod s powr (2 * (real_of_int (- int n) / 2 + 1 / 2)) =\n  cmod s powr - real (n - 1)\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  cmod s powr (2 * (real_of_int (- int n) / 2 + 1 / 2)) =\n  cmod s powr - real (n - 1)\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"D * \\<dots> = D / norm s ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D * cmod s powr - real (n - 1) = D / cmod s ^ (n - 1)", "by (auto simp: powr_minus powr_realpow field_simps)"], ["proof (state)\nthis:\n  D * cmod s powr - real (n - 1) = D / cmod s ^ (n - 1)\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  D * cmod s powr - real (n - 1) = D / cmod s ^ (n - 1)\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> \\<le> C / norm s ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D / cmod s ^ (n - 1) \\<le> C / cmod s ^ (n - 1)", "by (intro divide_right_mono) (auto simp: C_def)"], ["proof (state)\nthis:\n  D / cmod s ^ (n - 1) \\<le> C / cmod s ^ (n - 1)\n\ngoal (2 subgoals):\n 1. 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)\n 2. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "finally"], ["proof (chain)\npicking this:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> C / cmod s ^ (n - 1)", "show \"norm (integral {0..real N} (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n)) \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> C / cmod s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "."], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> C / cmod s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "case False"], ["proof (state)\nthis:\n  \\<not> 0 < Re s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"cos \\<bar>arg s\\<bar> = cos (arg s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos \\<bar>arg s\\<bar> = cos (arg s)", "by (simp add: abs_if)"], ["proof (state)\nthis:\n  cos \\<bar>arg s\\<bar> = cos (arg s)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  cos \\<bar>arg s\\<bar> = cos (arg s)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"cos (arg s) = Re (rcis (norm s) (arg s)) / norm s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (arg s) = Re (rcis (cmod s) (arg s)) / cmod s", "by (subst Re_rcis) auto"], ["proof (state)\nthis:\n  cos (arg s) = Re (rcis (cmod s) (arg s)) / cmod s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  cos (arg s) = Re (rcis (cmod s) (arg s)) / cmod s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> = Re s / norm s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (rcis (cmod s) (arg s)) / cmod s = Re s / cmod s", "by (subst rcis_cmod_arg) auto"], ["proof (state)\nthis:\n  Re (rcis (cmod s) (arg s)) / cmod s = Re s / cmod s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  Re (rcis (cmod s) (arg s)) / cmod s = Re s / cmod s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> \\<le> cos (pi / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re s / cmod s \\<le> cos (pi / 2)", "using False"], ["proof (prove)\nusing this:\n  \\<not> 0 < Re s\n\ngoal (1 subgoal):\n 1. Re s / cmod s \\<le> cos (pi / 2)", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  Re s / cmod s \\<le> cos (pi / 2)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "finally"], ["proof (chain)\npicking this:\n  cos \\<bar>arg s\\<bar> \\<le> cos (pi / 2)", "have \"\\<bar>arg s\\<bar> \\<ge> pi / 2\""], ["proof (prove)\nusing this:\n  cos \\<bar>arg s\\<bar> \\<le> cos (pi / 2)\n\ngoal (1 subgoal):\n 1. pi / 2 \\<le> \\<bar>arg s\\<bar>", "using arg \\<alpha>"], ["proof (prove)\nusing this:\n  cos \\<bar>arg s\\<bar> \\<le> cos (pi / 2)\n  \\<bar>arg s\\<bar> \\<le> \\<alpha>\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. pi / 2 \\<le> \\<bar>arg s\\<bar>", "by (subst (asm) cos_mono_le_eq) auto"], ["proof (state)\nthis:\n  pi / 2 \\<le> \\<bar>arg s\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"sin \\<alpha> * norm s = sin (pi - \\<alpha>) * norm s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin \\<alpha> * cmod s = sin (pi - \\<alpha>) * cmod s", "by simp"], ["proof (state)\nthis:\n  sin \\<alpha> * cmod s = sin (pi - \\<alpha>) * cmod s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  sin \\<alpha> * cmod s = sin (pi - \\<alpha>) * cmod s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> \\<le> sin (pi - \\<bar>arg s\\<bar>) * norm s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (pi - \\<alpha>) * cmod s \\<le> sin (pi - \\<bar>arg s\\<bar>) * cmod s", "using \\<alpha> arg \\<open>\\<bar>arg s\\<bar> \\<ge> pi / 2\\<close>"], ["proof (prove)\nusing this:\n  \\<alpha> \\<in> {0<..<pi}\n  \\<bar>arg s\\<bar> \\<le> \\<alpha>\n  pi / 2 \\<le> \\<bar>arg s\\<bar>\n\ngoal (1 subgoal):\n 1. sin (pi - \\<alpha>) * cmod s \\<le> sin (pi - \\<bar>arg s\\<bar>) * cmod s", "by (intro mult_right_mono sin_monotone_2pi_le) auto"], ["proof (state)\nthis:\n  sin (pi - \\<alpha>) * cmod s \\<le> sin (pi - \\<bar>arg s\\<bar>) * cmod s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  sin (pi - \\<alpha>) * cmod s \\<le> sin (pi - \\<bar>arg s\\<bar>) * cmod s\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"sin \\<bar>arg s\\<bar> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> sin \\<bar>arg s\\<bar>", "using arg_bounded[of s]"], ["proof (prove)\nusing this:\n  - pi < arg s \\<and> arg s \\<le> pi\n\ngoal (1 subgoal):\n 1. 0 \\<le> sin \\<bar>arg s\\<bar>", "by (intro sin_ge_zero) auto"], ["proof (state)\nthis:\n  0 \\<le> sin \\<bar>arg s\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "hence \"sin (pi - \\<bar>arg s\\<bar>) = \\<bar>sin \\<bar>arg s\\<bar>\\<bar>\""], ["proof (prove)\nusing this:\n  0 \\<le> sin \\<bar>arg s\\<bar>\n\ngoal (1 subgoal):\n 1. sin (pi - \\<bar>arg s\\<bar>) = \\<bar>sin \\<bar>arg s\\<bar>\\<bar>", "by simp"], ["proof (state)\nthis:\n  sin (pi - \\<bar>arg s\\<bar>) = \\<bar>sin \\<bar>arg s\\<bar>\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  sin (pi - \\<bar>arg s\\<bar>) = \\<bar>sin \\<bar>arg s\\<bar>\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> = \\<bar>sin (arg s)\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>sin \\<bar>arg s\\<bar>\\<bar> = \\<bar>sin (arg s)\\<bar>", "by (simp add: abs_if)"], ["proof (state)\nthis:\n  \\<bar>sin \\<bar>arg s\\<bar>\\<bar> = \\<bar>sin (arg s)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  \\<bar>sin \\<bar>arg s\\<bar>\\<bar> = \\<bar>sin (arg s)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> * norm s = \\<bar>Im (rcis (norm s) (arg s))\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>sin (arg s)\\<bar> * cmod s =\n    \\<bar>Im (rcis (cmod s) (arg s))\\<bar>", "by (simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>sin (arg s)\\<bar> * cmod s = \\<bar>Im (rcis (cmod s) (arg s))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  \\<bar>sin (arg s)\\<bar> * cmod s = \\<bar>Im (rcis (cmod s) (arg s))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> = \\<bar>Im s\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>Im (rcis (cmod s) (arg s))\\<bar> = \\<bar>Im s\\<bar>", "by (subst rcis_cmod_arg) auto"], ["proof (state)\nthis:\n  \\<bar>Im (rcis (cmod s) (arg s))\\<bar> = \\<bar>Im s\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "finally"], ["proof (chain)\npicking this:\n  sin \\<alpha> * cmod s \\<le> \\<bar>Im s\\<bar>", "have abs_Im_ge: \"\\<bar>Im s\\<bar> \\<ge> sin \\<alpha> * norm s\""], ["proof (prove)\nusing this:\n  sin \\<alpha> * cmod s \\<le> \\<bar>Im s\\<bar>\n\ngoal (1 subgoal):\n 1. sin \\<alpha> * cmod s \\<le> \\<bar>Im s\\<bar>", "."], ["proof (state)\nthis:\n  sin \\<alpha> * cmod s \\<le> \\<bar>Im s\\<bar>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have [simp]: \"Im s \\<noteq> 0\" \"s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im s \\<noteq> 0 &&& s \\<noteq> 0", "using s \\<open>s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\\<close> False"], ["proof (prove)\nusing this:\n  s \\<in> complex_cone' \\<alpha> - {0}\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  \\<not> 0 < Re s\n\ngoal (1 subgoal):\n 1. Im s \\<noteq> 0 &&& s \\<noteq> 0", "by (auto simp: cmod_def zero_le_mult_iff complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  Im s \\<noteq> 0\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"sin \\<alpha> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < sin \\<alpha>", "using assms"], ["proof (prove)\nusing this:\n  1 < n\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. 0 < sin \\<alpha>", "by (intro sin_gt_zero) auto"], ["proof (state)\nthis:\n  0 < sin \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "obtain I where I: \"((\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) has_integral I) {0..real N}\"\n                          \"I \\<le> 2*c*(n/(n-1)) / \\<bar>Im s\\<bar> ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x.\n                      c /\n                      max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^\n                      n) has_integral\n                  I)\n                  {0..real N};\n         I \\<le> 2 * c * (real n / real (n - 1)) /\n                 \\<bar>Im s\\<bar> ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using s c_nonneg assms False \n                stirling_integral_bound_aux_integral2[of \"-Re s\" \"\\<bar>Im s\\<bar>\" c n 0 \"real N\"]"], ["proof (prove)\nusing this:\n  s \\<in> complex_cone' \\<alpha> - {0}\n  0 \\<le> c\n  1 < n\n  \\<alpha> \\<in> {0<..<pi}\n  \\<not> 0 < Re s\n  \\<lbrakk>0 \\<le> - Re s; 0 < \\<bar>Im s\\<bar>; 0 \\<le> c; 1 < n;\n   \\<And>I.\n      \\<lbrakk>((\\<lambda>x.\n                    c /\n                    max \\<bar>Im s\\<bar> \\<bar>x - - Re s\\<bar> ^\n                    n) has_integral\n                I)\n                {0..real N};\n       I \\<le> 2 * c * (real n / real (n - 1)) /\n               \\<bar>Im s\\<bar> ^ (n - 1)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        \\<lbrakk>((\\<lambda>x.\n                      c /\n                      max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^\n                      n) has_integral\n                  I)\n                  {0..real N};\n         I \\<le> 2 * c * (real n / real (n - 1)) /\n                 \\<bar>Im s\\<bar> ^ (n - 1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) has_integral\n   I)\n   {0..real N}\n  I \\<le> 2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"norm (integral {0..real N} (\\<lambda>x. of_real (pbernpoly n x) / (of_real x + s) ^ n)) \\<le>\n                integral {0..real N} (\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> integral {0..real N}\n           (\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n)", "proof (intro integral_norm_bound_integral integrable_ln_Gamma_aux s ballI)"], ["proof (state)\ngoal (3 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. (\\<lambda>x.\n        c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) integrable_on\n    {0..real N}\n 3. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "show \"(\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) integrable_on {0..real N}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) integrable_on\n    {0..real N}", "using I(1)"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) has_integral\n   I)\n   {0..real N}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) integrable_on\n    {0..real N}", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) integrable_on\n  {0..real N}\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "assume x: \"x \\<in> {0..real N}\""], ["proof (state)\nthis:\n  x \\<in> {0..real N}\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "have nz: \"complex_of_real x + s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complex_of_real x + s \\<noteq> 0", "by (auto simp: complex_eq_iff)"], ["proof (state)\nthis:\n  complex_of_real x + s \\<noteq> 0\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "have \"norm (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) \\<le>\n                  c / norm (complex_of_real x + s) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "unfolding norm_divide norm_power"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x)) /\n    cmod (complex_of_real x + s) ^ n\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "using c[of x]"], ["proof (prove)\nusing this:\n  norm (pbernpoly n x) \\<le> c\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x)) /\n    cmod (complex_of_real x + s) ^ n\n    \\<le> c / cmod (complex_of_real x + s) ^ n", "by (intro divide_right_mono) simp_all"], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / cmod (complex_of_real x + s) ^ n\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "also"], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / cmod (complex_of_real x + s) ^ n\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "have \"\\<dots> \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / cmod (complex_of_real x + s) ^ n\n    \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "using c_nonneg nz abs_Re_le_cmod[of \"of_real x + s\"] abs_Im_le_cmod[of \"of_real x + s\"]"], ["proof (prove)\nusing this:\n  0 \\<le> c\n  complex_of_real x + s \\<noteq> 0\n  \\<bar>Re (complex_of_real x + s)\\<bar> \\<le> cmod (complex_of_real x + s)\n  \\<bar>Im (complex_of_real x + s)\\<bar> \\<le> cmod (complex_of_real x + s)\n\ngoal (1 subgoal):\n 1. c / cmod (complex_of_real x + s) ^ n\n    \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "by (intro divide_left_mono power_mono mult_pos_pos zero_less_power)\n               (auto simp: less_max_iff_disj)"], ["proof (state)\nthis:\n  c / cmod (complex_of_real x + s) ^ n\n  \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n\n\ngoal (2 subgoals):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 2. \\<And>x.\n       x \\<in> {0..real N} \\<Longrightarrow>\n       cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n       \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "finally"], ["proof (chain)\npicking this:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "show \"norm (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n) \\<le> \\<dots>\""], ["proof (prove)\nusing this:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n    \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n", "."], ["proof (state)\nthis:\n  cmod (complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n)\n  \\<le> c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "qed (auto simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> integral {0..real N}\n         (\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> integral {0..real N}\n         (\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> \\<le> 2*c*(n/(n-1)) / \\<bar>Im s\\<bar> ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n)\n    \\<le> 2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)", "using I"], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n) has_integral\n   I)\n   {0..real N}\n  I \\<le> 2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)\n\ngoal (1 subgoal):\n 1. integral {0..real N}\n     (\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n)\n    \\<le> 2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)", "by (simp add: has_integral_iff)"], ["proof (state)\nthis:\n  integral {0..real N}\n   (\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n)\n  \\<le> 2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  integral {0..real N}\n   (\\<lambda>x. c / max \\<bar>Im s\\<bar> \\<bar>x + Re s\\<bar> ^ n)\n  \\<le> 2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> \\<le> 2*c*(n/(n-1)) / (sin \\<alpha> * norm s) ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)\n    \\<le> 2 * c * (real n / real (n - 1)) /\n          (sin \\<alpha> * cmod s) ^ (n - 1)", "using \\<open>sin \\<alpha> > 0\\<close> s c_nonneg abs_Im_ge"], ["proof (prove)\nusing this:\n  0 < sin \\<alpha>\n  s \\<in> complex_cone' \\<alpha> - {0}\n  0 \\<le> c\n  sin \\<alpha> * cmod s \\<le> \\<bar>Im s\\<bar>\n\ngoal (1 subgoal):\n 1. 2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)\n    \\<le> 2 * c * (real n / real (n - 1)) /\n          (sin \\<alpha> * cmod s) ^ (n - 1)", "by (intro divide_left_mono mult_pos_pos zero_less_power power_mono mult_nonneg_nonneg) auto"], ["proof (state)\nthis:\n  2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)\n  \\<le> 2 * c * (real n / real (n - 1)) / (sin \\<alpha> * cmod s) ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  2 * c * (real n / real (n - 1)) / \\<bar>Im s\\<bar> ^ (n - 1)\n  \\<le> 2 * c * (real n / real (n - 1)) / (sin \\<alpha> * cmod s) ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> = 2*c*(n/(n-1))/sin \\<alpha>^(n-1) / norm s ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * c * (real n / real (n - 1)) / (sin \\<alpha> * cmod s) ^ (n - 1) =\n    2 * c * (real n / real (n - 1)) / sin \\<alpha> ^ (n - 1) /\n    cmod s ^ (n - 1)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  2 * c * (real n / real (n - 1)) / (sin \\<alpha> * cmod s) ^ (n - 1) =\n  2 * c * (real n / real (n - 1)) / sin \\<alpha> ^ (n - 1) /\n  cmod s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "also"], ["proof (state)\nthis:\n  2 * c * (real n / real (n - 1)) / (sin \\<alpha> * cmod s) ^ (n - 1) =\n  2 * c * (real n / real (n - 1)) / sin \\<alpha> ^ (n - 1) /\n  cmod s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "have \"\\<dots> \\<le> C / norm s ^ (n - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * c * (real n / real (n - 1)) / sin \\<alpha> ^ (n - 1) /\n    cmod s ^ (n - 1)\n    \\<le> C / cmod s ^ (n - 1)", "by (intro divide_right_mono) (auto simp: C_def)"], ["proof (state)\nthis:\n  2 * c * (real n / real (n - 1)) / sin \\<alpha> ^ (n - 1) /\n  cmod s ^ (n - 1)\n  \\<le> C / cmod s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < Re s \\<Longrightarrow>\n    cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "finally"], ["proof (chain)\npicking this:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> C / cmod s ^ (n - 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> C / cmod s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. cmod\n     (integral {0..real N}\n       (\\<lambda>x.\n           complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n    \\<le> C / cmod s ^ (n - 1)", "."], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> C / cmod s ^ (n - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cmod\n   (integral {0..real N}\n     (\\<lambda>x.\n         complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n  \\<le> C / cmod s ^ (n - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F N in sequentially.\n     cmod\n      (integral {0..real N}\n        (\\<lambda>x.\n            complex_of_real (pbernpoly n x) / (complex_of_real x + s) ^ n))\n     \\<le> C / cmod s ^ (n - 1)\n\ngoal (3 subgoals):\n 1. sequentially \\<noteq> bot\n 2. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n 3. 0 < n", "qed (use that assms complex_cone_inter_nonpos_Reals[of \"-\\<alpha>\" \\<alpha>] \\<alpha> in auto)"], ["proof (state)\nthis:\n  ?s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n  cmod (stirling_integral n ?s) \\<le> C / cmod ?s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ (n - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n  cmod (stirling_integral n ?s) \\<le> C / cmod ?s ^ (n - 1)\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_bound:\n  assumes \"n > 0\"\n  obtains c where \n    \"\\<And>s. Re s > 0 \\<Longrightarrow> norm (stirling_integral n s) \\<le> c / Re s ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "let ?f = \"\\<lambda>s. of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n                  of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from stirling_integral_bound_aux[of \"Suc n\"] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>1 < Suc n;\n   \\<And>c.\n      (\\<And>s.\n          0 < Re s \\<Longrightarrow>\n          cmod (stirling_integral (Suc n) s)\n          \\<le> c / Re s ^ (Suc n - 1)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  0 < n", "obtain c where \n    c: \"\\<And>s. Re s > 0 \\<Longrightarrow> norm (stirling_integral (Suc n) s) \\<le> c / Re s ^ n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < Suc n;\n   \\<And>c.\n      (\\<And>s.\n          0 < Re s \\<Longrightarrow>\n          cmod (stirling_integral (Suc n) s)\n          \\<le> c / Re s ^ (Suc n - 1)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  0 < n\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral (Suc n) s)\n            \\<le> c / Re s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < Re ?s1 \\<Longrightarrow>\n  cmod (stirling_integral (Suc n) ?s1) \\<le> c / Re ?s1 ^ n\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define c1 where \"c1 = real n / real (Suc n) * c\""], ["proof (state)\nthis:\n  c1 = real n / real (Suc n) * c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define c2 where \"c2 = \\<bar>bernoulli (Suc n)\\<bar> / real (Suc n)\""], ["proof (state)\nthis:\n  c2 = \\<bar>bernoulli (Suc n)\\<bar> / real (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have c2_nonneg: \"c2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> c2", "by (simp add: c2_def)"], ["proof (state)\nthis:\n  0 \\<le> c2\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            0 < Re s \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / Re s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule that)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "fix s :: complex"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "assume s: \"Re s > 0\""], ["proof (state)\nthis:\n  0 < Re s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "hence s': \"s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\""], ["proof (prove)\nusing this:\n  0 < Re s\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by (auto simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "have \"stirling_integral n s = ?f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "using s' assms"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 < n\n\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "by (rule stirling_integral_conv_stirling_integral_Suc)"], ["proof (state)\nthis:\n  stirling_integral n s =\n  of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n  complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "also"], ["proof (state)\nthis:\n  stirling_integral n s =\n  of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n  complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "have \"norm \\<dots> \\<le> norm (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n                           norm (of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n      complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n    \\<le> cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n          cmod\n           (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))", "by (rule norm_triangle_ineq4)"], ["proof (state)\nthis:\n  cmod\n   (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n  \\<le> cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n        cmod\n         (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "also"], ["proof (state)\nthis:\n  cmod\n   (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n  \\<le> cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n        cmod\n         (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "have \"\\<dots> = real n / real (Suc n) * norm (stirling_integral (Suc n) s) +\n                      c2 / norm s ^ n\" (is \"_ = ?A + ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n    cmod (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)) =\n    real n / real (Suc n) * cmod (stirling_integral (Suc n) s) +\n    c2 / cmod s ^ n", "by (simp add: norm_divide norm_mult norm_power c2_def field_simps del: of_nat_Suc)"], ["proof (state)\nthis:\n  cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n  cmod (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)) =\n  real n / real (Suc n) * cmod (stirling_integral (Suc n) s) +\n  c2 / cmod s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "also"], ["proof (state)\nthis:\n  cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n  cmod (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)) =\n  real n / real (Suc n) * cmod (stirling_integral (Suc n) s) +\n  c2 / cmod s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "have \"?A \\<le> real n / real (Suc n) * (c / Re s ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n / real (Suc n) * cmod (stirling_integral (Suc n) s)\n    \\<le> real n / real (Suc n) * (c / Re s ^ n)", "by (intro mult_left_mono c s) simp_all"], ["proof (state)\nthis:\n  real n / real (Suc n) * cmod (stirling_integral (Suc n) s)\n  \\<le> real n / real (Suc n) * (c / Re s ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "also"], ["proof (state)\nthis:\n  real n / real (Suc n) * cmod (stirling_integral (Suc n) s)\n  \\<le> real n / real (Suc n) * (c / Re s ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "have \"\\<dots> = c1 / Re s ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n / real (Suc n) * (c / Re s ^ n) = c1 / Re s ^ n", "by (simp add: c1_def)"], ["proof (state)\nthis:\n  real n / real (Suc n) * (c / Re s ^ n) = c1 / Re s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "also"], ["proof (state)\nthis:\n  real n / real (Suc n) * (c / Re s ^ n) = c1 / Re s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "have \"c2 / norm s ^ n \\<le> c2 / Re s ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c2 / cmod s ^ n \\<le> c2 / Re s ^ n", "using s c2_nonneg"], ["proof (prove)\nusing this:\n  0 < Re s\n  0 \\<le> c2\n\ngoal (1 subgoal):\n 1. c2 / cmod s ^ n \\<le> c2 / Re s ^ n", "by (intro divide_left_mono power_mono complex_Re_le_cmod mult_pos_pos zero_less_power) auto"], ["proof (state)\nthis:\n  c2 / cmod s ^ n \\<le> c2 / Re s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "also"], ["proof (state)\nthis:\n  c2 / cmod s ^ n \\<le> c2 / Re s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "have \"c1 / Re s ^ n + c2 / Re s ^ n = (c1 + c2) / Re s ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c1 / Re s ^ n + c2 / Re s ^ n = (c1 + c2) / Re s ^ n", "using s"], ["proof (prove)\nusing this:\n  0 < Re s\n\ngoal (1 subgoal):\n 1. c1 / Re s ^ n + c2 / Re s ^ n = (c1 + c2) / Re s ^ n", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  c1 / Re s ^ n + c2 / Re s ^ n = (c1 + c2) / Re s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       0 < Re s \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / Re s ^ n", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x + c2 / cmod s ^ n \\<le> y + c2 / cmod s ^ n;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      c1 / Re s ^ n + x \\<le> c1 / Re s ^ n + y\\<rbrakk>\n  \\<Longrightarrow> cmod (stirling_integral n s) \\<le> (c1 + c2) / Re s ^ n", "show \"norm (stirling_integral n s) \\<le> (c1 + c2) / Re s ^ n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x y.\n              x \\<le> y \\<Longrightarrow>\n              x + c2 / cmod s ^ n \\<le> y + c2 / cmod s ^ n;\n   \\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      c1 / Re s ^ n + x \\<le> c1 / Re s ^ n + y\\<rbrakk>\n  \\<Longrightarrow> cmod (stirling_integral n s) \\<le> (c1 + c2) / Re s ^ n\n\ngoal (1 subgoal):\n 1. cmod (stirling_integral n s) \\<le> (c1 + c2) / Re s ^ n", "by - simp_all"], ["proof (state)\nthis:\n  cmod (stirling_integral n s) \\<le> (c1 + c2) / Re s ^ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_bound':\n  assumes \"n > 0\" and \"\\<alpha> \\<in> {0<..<pi}\"\n  obtains c where \n    \"\\<And>s::complex. s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow> norm (stirling_integral n s) \\<le> c / norm s ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "let ?f = \"\\<lambda>s. of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n                  of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from stirling_integral_bound_aux'[of \"Suc n\"] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>1 < Suc n; ?\\<alpha> \\<in> {0<..<pi};\n   \\<And>c.\n      (\\<And>s.\n          s \\<in> complex_cone' ?\\<alpha> - {0} \\<Longrightarrow>\n          cmod (stirling_integral (Suc n) s)\n          \\<le> c / cmod s ^ (Suc n - 1)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  0 < n\n  \\<alpha> \\<in> {0<..<pi}", "obtain c where \n    c: \"\\<And>s::complex. s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            norm (stirling_integral (Suc n) s) \\<le> c / norm s ^ n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>1 < Suc n; ?\\<alpha> \\<in> {0<..<pi};\n   \\<And>c.\n      (\\<And>s.\n          s \\<in> complex_cone' ?\\<alpha> - {0} \\<Longrightarrow>\n          cmod (stirling_integral (Suc n) s)\n          \\<le> c / cmod s ^ (Suc n - 1)) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  0 < n\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral (Suc n) s)\n            \\<le> c / cmod s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ?s1 \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n  cmod (stirling_integral (Suc n) ?s1) \\<le> c / cmod ?s1 ^ n\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define c1 where \"c1 = real n / real (Suc n) * c\""], ["proof (state)\nthis:\n  c1 = real n / real (Suc n) * c\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "define c2 where \"c2 = \\<bar>bernoulli (Suc n)\\<bar> / real (Suc n)\""], ["proof (state)\nthis:\n  c2 = \\<bar>bernoulli (Suc n)\\<bar> / real (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have c2_nonneg: \"c2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> c2", "by (simp add: c2_def)"], ["proof (state)\nthis:\n  0 \\<le> c2\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral n s)\n            \\<le> c / cmod s ^ n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule that)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "fix s :: complex"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "assume s: \"s \\<in> complex_cone' \\<alpha> - {0}\""], ["proof (state)\nthis:\n  s \\<in> complex_cone' \\<alpha> - {0}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "have s': \"s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "using complex_cone_inter_nonpos_Reals[of \"-\\<alpha>\" \\<alpha>] assms s"], ["proof (prove)\nusing this:\n  \\<lbrakk>- pi < - \\<alpha>; - \\<alpha> \\<le> \\<alpha>;\n   \\<alpha> < pi\\<rbrakk>\n  \\<Longrightarrow> complex_cone' \\<alpha> \\<inter>\n                    \\<real>\\<^sub>\\<le>\\<^sub>0 =\n                    {0}\n  0 < n\n  \\<alpha> \\<in> {0<..<pi}\n  s \\<in> complex_cone' \\<alpha> - {0}\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "have \"stirling_integral n s = ?f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "using s' assms"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 < n\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. stirling_integral n s =\n    of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)", "by (intro stirling_integral_conv_stirling_integral_Suc) auto"], ["proof (state)\nthis:\n  stirling_integral n s =\n  of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n  complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "also"], ["proof (state)\nthis:\n  stirling_integral n s =\n  of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n  complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "have \"norm \\<dots> \\<le> norm (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n                           norm (of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n      complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n    \\<le> cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n          cmod\n           (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))", "by (rule norm_triangle_ineq4)"], ["proof (state)\nthis:\n  cmod\n   (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n  \\<le> cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n        cmod\n         (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "also"], ["proof (state)\nthis:\n  cmod\n   (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s -\n    complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n  \\<le> cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n        cmod\n         (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "have \"\\<dots> = real n / real (Suc n) * norm (stirling_integral (Suc n) s) +\n                      c2 / norm s ^ n\" (is \"_ = ?A + ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n    cmod (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)) =\n    real n / real (Suc n) * cmod (stirling_integral (Suc n) s) +\n    c2 / cmod s ^ n", "by (simp add: norm_divide norm_mult norm_power c2_def field_simps del: of_nat_Suc)"], ["proof (state)\nthis:\n  cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n  cmod (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)) =\n  real n / real (Suc n) * cmod (stirling_integral (Suc n) s) +\n  c2 / cmod s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "also"], ["proof (state)\nthis:\n  cmod (of_nat n / of_nat (Suc n) * stirling_integral (Suc n) s) +\n  cmod (complex_of_real (bernoulli (Suc n)) / (of_nat (Suc n) * s ^ n)) =\n  real n / real (Suc n) * cmod (stirling_integral (Suc n) s) +\n  c2 / cmod s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "have \"?A \\<le> real n / real (Suc n) * (c / norm s ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n / real (Suc n) * cmod (stirling_integral (Suc n) s)\n    \\<le> real n / real (Suc n) * (c / cmod s ^ n)", "by (intro mult_left_mono c s) simp_all"], ["proof (state)\nthis:\n  real n / real (Suc n) * cmod (stirling_integral (Suc n) s)\n  \\<le> real n / real (Suc n) * (c / cmod s ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "also"], ["proof (state)\nthis:\n  real n / real (Suc n) * cmod (stirling_integral (Suc n) s)\n  \\<le> real n / real (Suc n) * (c / cmod s ^ n)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "have \"\\<dots> = c1 / norm s ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real n / real (Suc n) * (c / cmod s ^ n) = c1 / cmod s ^ n", "by (simp add: c1_def)"], ["proof (state)\nthis:\n  real n / real (Suc n) * (c / cmod s ^ n) = c1 / cmod s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "also"], ["proof (state)\nthis:\n  real n / real (Suc n) * (c / cmod s ^ n) = c1 / cmod s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "have \"c1 / norm s ^ n + c2 / norm s ^ n = (c1 + c2) / norm s ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c1 / cmod s ^ n + c2 / cmod s ^ n = (c1 + c2) / cmod s ^ n", "using s"], ["proof (prove)\nusing this:\n  s \\<in> complex_cone' \\<alpha> - {0}\n\ngoal (1 subgoal):\n 1. c1 / cmod s ^ n + c2 / cmod s ^ n = (c1 + c2) / cmod s ^ n", "by (simp add: divide_simps)"], ["proof (state)\nthis:\n  c1 / cmod s ^ n + c2 / cmod s ^ n = (c1 + c2) / cmod s ^ n\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n       cmod (stirling_integral n s) \\<le> ?c / cmod s ^ n", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + c2 / cmod s ^ n \\<le> y + c2 / cmod s ^ n) \\<Longrightarrow>\n  cmod (stirling_integral n s) \\<le> (c1 + c2) / cmod s ^ n", "show \"norm (stirling_integral n s) \\<le> (c1 + c2) / norm s ^ n\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + c2 / cmod s ^ n \\<le> y + c2 / cmod s ^ n) \\<Longrightarrow>\n  cmod (stirling_integral n s) \\<le> (c1 + c2) / cmod s ^ n\n\ngoal (1 subgoal):\n 1. cmod (stirling_integral n s) \\<le> (c1 + c2) / cmod s ^ n", "by - simp_all"], ["proof (state)\nthis:\n  cmod (stirling_integral n s) \\<le> (c1 + c2) / cmod s ^ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_holomorphic [holomorphic_intros]:\n  assumes m: \"m > 0\" and \"A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\"\n  shows   \"stirling_integral m holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral m holomorphic_on A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stirling_integral m holomorphic_on A", "from assms"], ["proof (chain)\npicking this:\n  0 < m\n  A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}", "have [simp]: \"z \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\" if \"z \\<in> A\" for z"], ["proof (prove)\nusing this:\n  0 < m\n  A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\n\ngoal (1 subgoal):\n 1. z \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "using that"], ["proof (prove)\nusing this:\n  0 < m\n  A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. z \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  ?z \\<in> A \\<Longrightarrow> ?z \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. stirling_integral m holomorphic_on A", "let ?f = \"\\<lambda>s::complex. of_nat m * ((s - 1 / 2) * Ln s - s + of_real (ln (2 * pi) / 2) +\n          (\\<Sum>k=1..<m. of_real (bernoulli (Suc k)) / (of_nat k * of_nat (Suc k) * s ^ k)) - \n          ln_Gamma s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. stirling_integral m holomorphic_on A", "have \"?f holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        of_nat m *\n        ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n         (\\<Sum>k = 1..<m.\n             complex_of_real (bernoulli (Suc k)) /\n             (of_nat k * of_nat (Suc k) * s ^ k)) -\n         ln_Gamma s)) holomorphic_on\n    A", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n  A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        of_nat m *\n        ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n         (\\<Sum>k = 1..<m.\n             complex_of_real (bernoulli (Suc k)) /\n             (of_nat k * of_nat (Suc k) * s ^ k)) -\n         ln_Gamma s)) holomorphic_on\n    A", "by (auto intro!: holomorphic_intros simp del: of_nat_Suc elim!: nonpos_Reals_cases)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      of_nat m *\n      ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n       (\\<Sum>k = 1..<m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) -\n       ln_Gamma s)) holomorphic_on\n  A\n\ngoal (1 subgoal):\n 1. stirling_integral m holomorphic_on A", "also"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      of_nat m *\n      ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n       (\\<Sum>k = 1..<m.\n           complex_of_real (bernoulli (Suc k)) /\n           (of_nat k * of_nat (Suc k) * s ^ k)) -\n       ln_Gamma s)) holomorphic_on\n  A\n\ngoal (1 subgoal):\n 1. stirling_integral m holomorphic_on A", "have \"?this \\<longleftrightarrow> stirling_integral m holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s.\n         of_nat m *\n         ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n          (\\<Sum>k = 1..<m.\n              complex_of_real (bernoulli (Suc k)) /\n              (of_nat k * of_nat (Suc k) * s ^ k)) -\n          ln_Gamma s)) holomorphic_on\n     A) =\n    (stirling_integral m holomorphic_on A)", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n  A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s.\n         of_nat m *\n         ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n          (\\<Sum>k = 1..<m.\n              complex_of_real (bernoulli (Suc k)) /\n              (of_nat k * of_nat (Suc k) * s ^ k)) -\n          ln_Gamma s)) holomorphic_on\n     A) =\n    (stirling_integral m holomorphic_on A)", "by (intro holomorphic_cong refl) \n                   (simp_all add: field_simps ln_Gamma_stirling_complex)"], ["proof (state)\nthis:\n  ((\\<lambda>s.\n       of_nat m *\n       ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n        (\\<Sum>k = 1..<m.\n            complex_of_real (bernoulli (Suc k)) /\n            (of_nat k * of_nat (Suc k) * s ^ k)) -\n        ln_Gamma s)) holomorphic_on\n   A) =\n  (stirling_integral m holomorphic_on A)\n\ngoal (1 subgoal):\n 1. stirling_integral m holomorphic_on A", "finally"], ["proof (chain)\npicking this:\n  stirling_integral m holomorphic_on A", "show \"stirling_integral m holomorphic_on A\""], ["proof (prove)\nusing this:\n  stirling_integral m holomorphic_on A\n\ngoal (1 subgoal):\n 1. stirling_integral m holomorphic_on A", "."], ["proof (state)\nthis:\n  stirling_integral m holomorphic_on A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stirling_integral_continuous_on_complex [continuous_intros]:\n  assumes m: \"m > 0\" and \"A \\<inter> \\<real>\\<^sub>\\<le>\\<^sub>0 = {}\"\n  shows   \"continuous_on A (stirling_integral m :: _ \\<Rightarrow> complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on A (stirling_integral m)", "by (intro holomorphic_on_imp_continuous_on stirling_integral_holomorphic assms)"], ["", "lemma has_field_derivative_stirling_integral_complex:\n  fixes x :: complex\n  assumes \"x \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\" \"n > 0\"\n  shows   \"(stirling_integral n has_field_derivative deriv (stirling_integral n) x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (stirling_integral n has_field_derivative deriv (stirling_integral n) x)\n     (at x)", "using assms"], ["proof (prove)\nusing this:\n  x \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 < n\n\ngoal (1 subgoal):\n 1. (stirling_integral n has_field_derivative deriv (stirling_integral n) x)\n     (at x)", "by (intro holomorphic_derivI[OF stirling_integral_holomorphic, of n  \"-\\<real>\\<^sub>\\<le>\\<^sub>0\"]) auto"], ["", "lemma\n  assumes n: \"n > 0\" and \"x > 0\"\n  shows   deriv_stirling_integral_complex_of_real:\n            \"(deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n               complex_of_real ((deriv ^^ j) (stirling_integral n) x)\" (is \"?lhs x = ?rhs x\")\n  and     differentiable_stirling_integral_real:\n            \"(deriv ^^ j) (stirling_integral n) field_differentiable at x\" (is ?thesis2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x) &&&\n    (deriv ^^ j) (stirling_integral n) field_differentiable at x", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x)\n 2. (deriv ^^ j) (stirling_integral n) field_differentiable at x", "let ?A = \"{s. Re s > 0}\""], ["proof (state)\ngoal (2 subgoals):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x)\n 2. (deriv ^^ j) (stirling_integral n) field_differentiable at x", "let ?f = \"\\<lambda>j x. (deriv ^^ j) (stirling_integral n) (complex_of_real x)\""], ["proof (state)\ngoal (2 subgoals):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x)\n 2. (deriv ^^ j) (stirling_integral n) field_differentiable at x", "let ?f' = \"\\<lambda>j x. complex_of_real ((deriv ^^ j) (stirling_integral n) x)\""], ["proof (state)\ngoal (2 subgoals):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x)\n 2. (deriv ^^ j) (stirling_integral n) field_differentiable at x", "have [simp]: \"open ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open {s. 0 < Re s}", "by (simp add: open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  open {s. 0 < Re s}\n\ngoal (2 subgoals):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x)\n 2. (deriv ^^ j) (stirling_integral n) field_differentiable at x", "have \"?lhs x = ?rhs x \\<and> (deriv ^^ j) (stirling_integral n) field_differentiable at x\" \n    if \"x > 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x) \\<and>\n    (deriv ^^ j) (stirling_integral n) field_differentiable at x", "using that"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x) \\<and>\n    (deriv ^^ j) (stirling_integral n) field_differentiable at x", "proof (induction j arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_integral n) (complex_of_real x) =\n       complex_of_real ((deriv ^^ 0) (stirling_integral n) x) \\<and>\n       (deriv ^^ 0) (stirling_integral n) field_differentiable at x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "case 0"], ["proof (state)\nthis:\n  0 < x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_integral n) (complex_of_real x) =\n       complex_of_real ((deriv ^^ 0) (stirling_integral n) x) \\<and>\n       (deriv ^^ 0) (stirling_integral n) field_differentiable at x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "have \"((\\<lambda>x. Re (stirling_integral n (of_real x))) has_field_derivative \n                  Re (deriv (\\<lambda>x. stirling_integral n x) (of_real x))) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re (stirling_integral n (complex_of_real x))) has_real_derivative\n     Re (deriv (stirling_integral n) (complex_of_real x)))\n     (at x)", "using 0 n"], ["proof (prove)\nusing this:\n  0 < x\n  0 < n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re (stirling_integral n (complex_of_real x))) has_real_derivative\n     Re (deriv (stirling_integral n) (complex_of_real x)))\n     (at x)", "by (auto intro!: derivative_intros has_vector_derivative_real_field\n                 field_differentiable_derivI holomorphic_on_imp_differentiable_at[of _ ?A]\n                 stirling_integral_holomorphic simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re (stirling_integral n (complex_of_real x))) has_real_derivative\n   Re (deriv (stirling_integral n) (complex_of_real x)))\n   (at x)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_integral n) (complex_of_real x) =\n       complex_of_real ((deriv ^^ 0) (stirling_integral n) x) \\<and>\n       (deriv ^^ 0) (stirling_integral n) field_differentiable at x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re (stirling_integral n (complex_of_real x))) has_real_derivative\n   Re (deriv (stirling_integral n) (complex_of_real x)))\n   (at x)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_integral n) (complex_of_real x) =\n       complex_of_real ((deriv ^^ 0) (stirling_integral n) x) \\<and>\n       (deriv ^^ 0) (stirling_integral n) field_differentiable at x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "have \"?this \\<longleftrightarrow> (stirling_integral n has_field_derivative \n             Re (deriv (\\<lambda>x. stirling_integral n x) (of_real x))) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re (stirling_integral n (complex_of_real x))) has_real_derivative\n     Re (deriv (stirling_integral n) (complex_of_real x)))\n     (at x) =\n    (stirling_integral n has_real_derivative\n     Re (deriv (stirling_integral n) (complex_of_real x)))\n     (at x)", "using eventually_nhds_in_open[of \"{0<..}\" x] 0 n"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {0<..}; x \\<in> {0<..}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..}\n  0 < x\n  0 < n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re (stirling_integral n (complex_of_real x))) has_real_derivative\n     Re (deriv (stirling_integral n) (complex_of_real x)))\n     (at x) =\n    (stirling_integral n has_real_derivative\n     Re (deriv (stirling_integral n) (complex_of_real x)))\n     (at x)", "by (intro has_field_derivative_cong_ev refl) \n         (auto elim!: eventually_mono simp: stirling_integral_complex_of_real)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re (stirling_integral n (complex_of_real x))) has_real_derivative\n   Re (deriv (stirling_integral n) (complex_of_real x)))\n   (at x) =\n  (stirling_integral n has_real_derivative\n   Re (deriv (stirling_integral n) (complex_of_real x)))\n   (at x)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_integral n) (complex_of_real x) =\n       complex_of_real ((deriv ^^ 0) (stirling_integral n) x) \\<and>\n       (deriv ^^ 0) (stirling_integral n) field_differentiable at x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "finally"], ["proof (chain)\npicking this:\n  (stirling_integral n has_real_derivative\n   Re (deriv (stirling_integral n) (complex_of_real x)))\n   (at x)", "have \"stirling_integral n field_differentiable at x\""], ["proof (prove)\nusing this:\n  (stirling_integral n has_real_derivative\n   Re (deriv (stirling_integral n) (complex_of_real x)))\n   (at x)\n\ngoal (1 subgoal):\n 1. stirling_integral n field_differentiable at x", "by (auto simp: field_differentiable_def)"], ["proof (state)\nthis:\n  stirling_integral n field_differentiable at x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_integral n) (complex_of_real x) =\n       complex_of_real ((deriv ^^ 0) (stirling_integral n) x) \\<and>\n       (deriv ^^ 0) (stirling_integral n) field_differentiable at x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "with 0 n"], ["proof (chain)\npicking this:\n  0 < x\n  0 < n\n  stirling_integral n field_differentiable at x", "show ?case"], ["proof (prove)\nusing this:\n  0 < x\n  0 < n\n  stirling_integral n field_differentiable at x\n\ngoal (1 subgoal):\n 1. (deriv ^^ 0) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ 0) (stirling_integral n) x) \\<and>\n    (deriv ^^ 0) (stirling_integral n) field_differentiable at x", "by (auto simp: stirling_integral_complex_of_real)"], ["proof (state)\nthis:\n  (deriv ^^ 0) (stirling_integral n) (complex_of_real x) =\n  complex_of_real ((deriv ^^ 0) (stirling_integral n) x) \\<and>\n  (deriv ^^ 0) (stirling_integral n) field_differentiable at x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "case (Suc j x)"], ["proof (state)\nthis:\n  0 < ?x \\<Longrightarrow>\n  (deriv ^^ j) (stirling_integral n) (complex_of_real ?x) =\n  complex_of_real ((deriv ^^ j) (stirling_integral n) ?x) \\<and>\n  (deriv ^^ j) (stirling_integral n) field_differentiable at ?x\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "note IH = conjunct1[OF Suc.IH] conjunct2[OF Suc.IH]"], ["proof (state)\nthis:\n  0 < ?x1 \\<Longrightarrow>\n  (deriv ^^ j) (stirling_integral n) (complex_of_real ?x1) =\n  complex_of_real ((deriv ^^ j) (stirling_integral n) ?x1)\n  0 < ?x1 \\<Longrightarrow>\n  (deriv ^^ j) (stirling_integral n) field_differentiable at ?x1\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "have *: \"(deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n                 of_real ((deriv ^^ Suc j) (stirling_integral n) x)\" if x: \"x > 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)", "have \"deriv ((deriv ^^ j) (stirling_integral n)) (complex_of_real x) =\n              vector_derivative (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (of_real x)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv ((deriv ^^ j) (stirling_integral n)) (complex_of_real x) =\n    vector_derivative\n     (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (complex_of_real x))\n     (at x)", "using n x"], ["proof (prove)\nusing this:\n  0 < n\n  0 < x\n\ngoal (1 subgoal):\n 1. deriv ((deriv ^^ j) (stirling_integral n)) (complex_of_real x) =\n    vector_derivative\n     (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (complex_of_real x))\n     (at x)", "by (intro vector_derivative_of_real_right [symmetric] \n                   holomorphic_on_imp_differentiable_at[of _ ?A] holomorphic_higher_deriv\n                   stirling_integral_holomorphic) (auto simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  deriv ((deriv ^^ j) (stirling_integral n)) (complex_of_real x) =\n  vector_derivative\n   (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (complex_of_real x))\n   (at x)\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)", "also"], ["proof (state)\nthis:\n  deriv ((deriv ^^ j) (stirling_integral n)) (complex_of_real x) =\n  vector_derivative\n   (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (complex_of_real x))\n   (at x)\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)", "have \"\\<dots> = vector_derivative (\\<lambda>x. of_real ((deriv ^^ j) (stirling_integral n) x)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector_derivative\n     (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (complex_of_real x))\n     (at x) =\n    vector_derivative\n     (\\<lambda>x. complex_of_real ((deriv ^^ j) (stirling_integral n) x))\n     (at x)", "using eventually_nhds_in_open[of \"{0<..}\" x] x"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {0<..}; x \\<in> {0<..}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..}\n  0 < x\n\ngoal (1 subgoal):\n 1. vector_derivative\n     (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (complex_of_real x))\n     (at x) =\n    vector_derivative\n     (\\<lambda>x. complex_of_real ((deriv ^^ j) (stirling_integral n) x))\n     (at x)", "by (intro vector_derivative_cong_eq) (auto elim!: eventually_mono simp: IH(1))"], ["proof (state)\nthis:\n  vector_derivative\n   (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (complex_of_real x))\n   (at x) =\n  vector_derivative\n   (\\<lambda>x. complex_of_real ((deriv ^^ j) (stirling_integral n) x))\n   (at x)\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)", "also"], ["proof (state)\nthis:\n  vector_derivative\n   (\\<lambda>x. (deriv ^^ j) (stirling_integral n) (complex_of_real x))\n   (at x) =\n  vector_derivative\n   (\\<lambda>x. complex_of_real ((deriv ^^ j) (stirling_integral n) x))\n   (at x)\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)", "have \"\\<dots> = of_real (deriv ((deriv ^^ j) (stirling_integral n)) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vector_derivative\n     (\\<lambda>x. complex_of_real ((deriv ^^ j) (stirling_integral n) x))\n     (at x) =\n    complex_of_real (deriv ((deriv ^^ j) (stirling_integral n)) x)", "by (intro vector_derivative_of_real_left holomorphic_on_imp_differentiable_at[of _ ?A]\n              field_differentiable_imp_differentiable IH(2) x)"], ["proof (state)\nthis:\n  vector_derivative\n   (\\<lambda>x. complex_of_real ((deriv ^^ j) (stirling_integral n) x))\n   (at x) =\n  complex_of_real (deriv ((deriv ^^ j) (stirling_integral n)) x)\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)", "finally"], ["proof (chain)\npicking this:\n  deriv ((deriv ^^ j) (stirling_integral n)) (complex_of_real x) =\n  complex_of_real (deriv ((deriv ^^ j) (stirling_integral n)) x)", "show ?thesis"], ["proof (prove)\nusing this:\n  deriv ((deriv ^^ j) (stirling_integral n)) (complex_of_real x) =\n  complex_of_real (deriv ((deriv ^^ j) (stirling_integral n)) x)\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)", "by simp"], ["proof (state)\nthis:\n  (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n  complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?x \\<Longrightarrow>\n  (deriv ^^ Suc j) (stirling_integral n) (complex_of_real ?x) =\n  complex_of_real ((deriv ^^ Suc j) (stirling_integral n) ?x)\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "have \"((\\<lambda>x. Re ((deriv ^^ Suc j) (stirling_integral n) (of_real x))) has_field_derivative \n             Re (deriv ((deriv ^^ Suc j) (stirling_integral n)) (of_real x))) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re ((deriv ^^ Suc j) (stirling_integral n)\n              (complex_of_real x))) has_real_derivative\n     Re (deriv ((deriv ^^ Suc j) (stirling_integral n))\n          (complex_of_real x)))\n     (at x)", "using Suc.prems n"], ["proof (prove)\nusing this:\n  0 < x\n  0 < n\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re ((deriv ^^ Suc j) (stirling_integral n)\n              (complex_of_real x))) has_real_derivative\n     Re (deriv ((deriv ^^ Suc j) (stirling_integral n))\n          (complex_of_real x)))\n     (at x)", "by (intro derivative_intros has_vector_derivative_real_field field_differentiable_derivI\n                holomorphic_on_imp_differentiable_at[of _ ?A] stirling_integral_holomorphic\n                holomorphic_higher_deriv) (auto simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re ((deriv ^^ Suc j) (stirling_integral n)\n            (complex_of_real x))) has_real_derivative\n   Re (deriv ((deriv ^^ Suc j) (stirling_integral n)) (complex_of_real x)))\n   (at x)\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re ((deriv ^^ Suc j) (stirling_integral n)\n            (complex_of_real x))) has_real_derivative\n   Re (deriv ((deriv ^^ Suc j) (stirling_integral n)) (complex_of_real x)))\n   (at x)\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "have \"?this \\<longleftrightarrow> ((deriv ^^ Suc j) (stirling_integral n) has_field_derivative \n                  Re (deriv ((deriv ^^ Suc j) (stirling_integral n)) (of_real x))) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re ((deriv ^^ Suc j) (stirling_integral n)\n              (complex_of_real x))) has_real_derivative\n     Re (deriv ((deriv ^^ Suc j) (stirling_integral n))\n          (complex_of_real x)))\n     (at x) =\n    ((deriv ^^ Suc j) (stirling_integral n) has_real_derivative\n     Re (deriv ((deriv ^^ Suc j) (stirling_integral n))\n          (complex_of_real x)))\n     (at x)", "using eventually_nhds_in_open[of \"{0<..}\" x] Suc.prems *"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {0<..}; x \\<in> {0<..}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..}\n  0 < x\n  0 < ?x \\<Longrightarrow>\n  (deriv ^^ Suc j) (stirling_integral n) (complex_of_real ?x) =\n  complex_of_real ((deriv ^^ Suc j) (stirling_integral n) ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         Re ((deriv ^^ Suc j) (stirling_integral n)\n              (complex_of_real x))) has_real_derivative\n     Re (deriv ((deriv ^^ Suc j) (stirling_integral n))\n          (complex_of_real x)))\n     (at x) =\n    ((deriv ^^ Suc j) (stirling_integral n) has_real_derivative\n     Re (deriv ((deriv ^^ Suc j) (stirling_integral n))\n          (complex_of_real x)))\n     (at x)", "by (intro has_field_derivative_cong_ev refl) (auto elim!: eventually_mono)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       Re ((deriv ^^ Suc j) (stirling_integral n)\n            (complex_of_real x))) has_real_derivative\n   Re (deriv ((deriv ^^ Suc j) (stirling_integral n)) (complex_of_real x)))\n   (at x) =\n  ((deriv ^^ Suc j) (stirling_integral n) has_real_derivative\n   Re (deriv ((deriv ^^ Suc j) (stirling_integral n)) (complex_of_real x)))\n   (at x)\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "finally"], ["proof (chain)\npicking this:\n  ((deriv ^^ Suc j) (stirling_integral n) has_real_derivative\n   Re (deriv ((deriv ^^ Suc j) (stirling_integral n)) (complex_of_real x)))\n   (at x)", "have \"(deriv ^^ Suc j) (stirling_integral n) field_differentiable at x\""], ["proof (prove)\nusing this:\n  ((deriv ^^ Suc j) (stirling_integral n) has_real_derivative\n   Re (deriv ((deriv ^^ Suc j) (stirling_integral n)) (complex_of_real x)))\n   (at x)\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) field_differentiable at x", "by (auto simp: field_differentiable_def)"], ["proof (state)\nthis:\n  (deriv ^^ Suc j) (stirling_integral n) field_differentiable at x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n                   complex_of_real\n                    ((deriv ^^ j) (stirling_integral n) x) \\<and>\n                   (deriv ^^ j) (stirling_integral n) field_differentiable\n                   at x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc j) (stirling_integral n)\n                          (complex_of_real x) =\n                         complex_of_real\n                          ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n                         (deriv ^^ Suc j)\n                          (stirling_integral n) field_differentiable\n                         at x", "with *[OF Suc.prems]"], ["proof (chain)\npicking this:\n  (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n  complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)\n  (deriv ^^ Suc j) (stirling_integral n) field_differentiable at x", "show ?case"], ["proof (prove)\nusing this:\n  (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n  complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x)\n  (deriv ^^ Suc j) (stirling_integral n) field_differentiable at x\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n    (deriv ^^ Suc j) (stirling_integral n) field_differentiable at x", "by blast"], ["proof (state)\nthis:\n  (deriv ^^ Suc j) (stirling_integral n) (complex_of_real x) =\n  complex_of_real ((deriv ^^ Suc j) (stirling_integral n) x) \\<and>\n  (deriv ^^ Suc j) (stirling_integral n) field_differentiable at x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?x \\<Longrightarrow>\n  (deriv ^^ j) (stirling_integral n) (complex_of_real ?x) =\n  complex_of_real ((deriv ^^ j) (stirling_integral n) ?x) \\<and>\n  (deriv ^^ j) (stirling_integral n) field_differentiable at ?x\n\ngoal (2 subgoals):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x)\n 2. (deriv ^^ j) (stirling_integral n) field_differentiable at x", "from this[OF assms(2)]"], ["proof (chain)\npicking this:\n  (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n  complex_of_real ((deriv ^^ j) (stirling_integral n) x) \\<and>\n  (deriv ^^ j) (stirling_integral n) field_differentiable at x", "show \"?lhs x = ?rhs x\" ?thesis2"], ["proof (prove)\nusing this:\n  (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n  complex_of_real ((deriv ^^ j) (stirling_integral n) x) \\<and>\n  (deriv ^^ j) (stirling_integral n) field_differentiable at x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) (stirling_integral n) x) &&&\n    (deriv ^^ j) (stirling_integral n) field_differentiable at x", "by blast+"], ["proof (state)\nthis:\n  (deriv ^^ j) (stirling_integral n) (complex_of_real x) =\n  complex_of_real ((deriv ^^ j) (stirling_integral n) x)\n  (deriv ^^ j) (stirling_integral n) field_differentiable at x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Unfortunately, asymptotic power series cannot, in general, be differentiated. However, since \n  @{term ln_Gamma} is holomorphic on the entire positive real half-space, we can differentiate \n  its asymptotic expansion after all.\n\n  To do this, we use an ad-hoc version of the more general approach outlined in Erdelyi's\n  ``Asymptotic Expansions'' for holomorphic functions: We bound the value of the $j$-th derivative \n  of the remainder term at some value $x$ by applying Cauchy's integral formula along a circle \n  centred at $x$ with radius $\\frac{1}{2} x$.\n\\<close>"], ["", "lemma deriv_stirling_integral_real_bound:\n  assumes m: \"m > 0\"\n  shows   \"(deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x::real. 1 / x ^ (m + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "from stirling_integral_bound[OF m]"], ["proof (chain)\npicking this:\n  (\\<And>c.\n      (\\<And>s.\n          0 < Re s \\<Longrightarrow>\n          cmod (stirling_integral m s) \\<le> c / Re s ^ m) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis", "guess c"], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>s.\n          0 < Re s \\<Longrightarrow>\n          cmod (stirling_integral m s) \\<le> c / Re s ^ m) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  0 < Re ?s \\<Longrightarrow>\n  cmod (stirling_integral m ?s) \\<le> c / Re ?s ^ m\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "note c = this"], ["proof (state)\nthis:\n  0 < Re ?s \\<Longrightarrow>\n  cmod (stirling_integral m ?s) \\<le> c / Re ?s ^ m\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "have \"0 \\<le> cmod (stirling_integral m 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> cmod (stirling_integral m 1)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> cmod (stirling_integral m 1)\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "also"], ["proof (state)\nthis:\n  0 \\<le> cmod (stirling_integral m 1)\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "have \"\\<dots> \\<le> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (stirling_integral m 1) \\<le> c", "using c[of 1]"], ["proof (prove)\nusing this:\n  0 < Re 1 \\<Longrightarrow> cmod (stirling_integral m 1) \\<le> c / Re 1 ^ m\n\ngoal (1 subgoal):\n 1. cmod (stirling_integral m 1) \\<le> c", "by simp"], ["proof (state)\nthis:\n  cmod (stirling_integral m 1) \\<le> c\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> c", "have c_nonneg: \"c \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. 0 \\<le> c", "."], ["proof (state)\nthis:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "define B where \"B = c * 2 ^ (m + Suc j)\""], ["proof (state)\nthis:\n  B = c * 2 ^ (m + Suc j)\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "define B' where \"B' = B * fact j / 2\""], ["proof (state)\nthis:\n  B' = B * fact j / 2\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "have \"eventually (\\<lambda>x::real. norm ((deriv ^^ j) (stirling_integral m) x) \\<le> \n          B' * norm (1 / x ^ (m+ j))) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm ((deriv ^^ j) (stirling_integral m) x)\n       \\<le> B' * norm (1 / x ^ (m + j))", "using eventually_gt_at_top[of \"0::real\"]"], ["proof (prove)\nusing this:\n  eventually ((<) 0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       norm ((deriv ^^ j) (stirling_integral m) x)\n       \\<le> B' * norm (1 / x ^ (m + j))", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       norm ((deriv ^^ j) (stirling_integral m) x)\n       \\<le> B' * norm (1 / x ^ (m + j))", "case (elim x)"], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       norm ((deriv ^^ j) (stirling_integral m) x)\n       \\<le> B' * norm (1 / x ^ (m + j))", "have \"s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\" if \"s \\<in> cball (of_real x) (x/2)\" for s :: complex"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "have \"x - Re s \\<le> norm (of_real x - s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - Re s \\<le> cmod (complex_of_real x - s)", "using complex_Re_le_cmod[of \"of_real x - s\"]"], ["proof (prove)\nusing this:\n  Re (complex_of_real x - s) \\<le> cmod (complex_of_real x - s)\n\ngoal (1 subgoal):\n 1. x - Re s \\<le> cmod (complex_of_real x - s)", "by simp"], ["proof (state)\nthis:\n  x - Re s \\<le> cmod (complex_of_real x - s)\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "also"], ["proof (state)\nthis:\n  x - Re s \\<le> cmod (complex_of_real x - s)\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "from that"], ["proof (chain)\npicking this:\n  s \\<in> cball (complex_of_real x) (x / 2)", "have \"\\<dots> \\<le> x/2\""], ["proof (prove)\nusing this:\n  s \\<in> cball (complex_of_real x) (x / 2)\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real x - s) \\<le> x / 2", "by (simp add: dist_complex_def)"], ["proof (state)\nthis:\n  cmod (complex_of_real x - s) \\<le> x / 2\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "finally"], ["proof (chain)\npicking this:\n  x - Re s \\<le> x / 2", "show ?thesis"], ["proof (prove)\nusing this:\n  x - Re s \\<le> x / 2\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "using elim"], ["proof (prove)\nusing this:\n  x - Re s \\<le> x / 2\n  0 < x\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by (auto simp: complex_nonpos_Reals_iff)"], ["proof (state)\nthis:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?s \\<in> cball (complex_of_real x) (x / 2) \\<Longrightarrow>\n  ?s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       norm ((deriv ^^ j) (stirling_integral m) x)\n       \\<le> B' * norm (1 / x ^ (m + j))", "hence \"((\\<lambda>u. stirling_integral m u / (u - of_real x) ^ Suc j) has_contour_integral\n            complex_of_real (2 * pi) * \\<i> / fact j * \n              (deriv ^^ j) (stirling_integral m) (of_real x)) (circlepath (of_real x) (x/2))\""], ["proof (prove)\nusing this:\n  ?s \\<in> cball (complex_of_real x) (x / 2) \\<Longrightarrow>\n  ?s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         stirling_integral m u /\n         (u - complex_of_real x) ^ Suc j) has_contour_integral\n     complex_of_real (2 * pi) * \\<i> / fact j *\n     (deriv ^^ j) (stirling_integral m) (complex_of_real x))\n     (circlepath (complex_of_real x) (x / 2))", "using m elim"], ["proof (prove)\nusing this:\n  ?s \\<in> cball (complex_of_real x) (x / 2) \\<Longrightarrow>\n  ?s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 < m\n  0 < x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>u.\n         stirling_integral m u /\n         (u - complex_of_real x) ^ Suc j) has_contour_integral\n     complex_of_real (2 * pi) * \\<i> / fact j *\n     (deriv ^^ j) (stirling_integral m) (complex_of_real x))\n     (circlepath (complex_of_real x) (x / 2))", "by (intro Cauchy_has_contour_integral_higher_derivative_circlepath \n                stirling_integral_continuous_on_complex stirling_integral_holomorphic) auto"], ["proof (state)\nthis:\n  ((\\<lambda>u.\n       stirling_integral m u /\n       (u - complex_of_real x) ^ Suc j) has_contour_integral\n   complex_of_real (2 * pi) * \\<i> / fact j *\n   (deriv ^^ j) (stirling_integral m) (complex_of_real x))\n   (circlepath (complex_of_real x) (x / 2))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       norm ((deriv ^^ j) (stirling_integral m) x)\n       \\<le> B' * norm (1 / x ^ (m + j))", "hence \"norm (of_real (2 * pi) * \\<i> / fact j * (deriv ^^ j) (stirling_integral m) (of_real x)) \\<le>\n            B / x ^ (m + Suc j) * (2 * pi * (x / 2))\""], ["proof (prove)\nusing this:\n  ((\\<lambda>u.\n       stirling_integral m u /\n       (u - complex_of_real x) ^ Suc j) has_contour_integral\n   complex_of_real (2 * pi) * \\<i> / fact j *\n   (deriv ^^ j) (stirling_integral m) (complex_of_real x))\n   (circlepath (complex_of_real x) (x / 2))\n\ngoal (1 subgoal):\n 1. cmod\n     (complex_of_real (2 * pi) * \\<i> / fact j *\n      (deriv ^^ j) (stirling_integral m) (complex_of_real x))\n    \\<le> B / x ^ (m + Suc j) * (2 * pi * (x / 2))", "proof (rule has_contour_integral_bound_circlepath)"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "fix u :: complex"], ["proof (state)\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "assume dist: \"norm (u - of_real x) = x / 2\""], ["proof (state)\nthis:\n  cmod (u - complex_of_real x) = x / 2\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "have \"Re (of_real x - u) \\<le> norm (of_real x - u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (complex_of_real x - u) \\<le> cmod (complex_of_real x - u)", "by (rule complex_Re_le_cmod)"], ["proof (state)\nthis:\n  Re (complex_of_real x - u) \\<le> cmod (complex_of_real x - u)\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "also"], ["proof (state)\nthis:\n  Re (complex_of_real x - u) \\<le> cmod (complex_of_real x - u)\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "have \"\\<dots> = x / 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (complex_of_real x - u) = x / 2", "using dist"], ["proof (prove)\nusing this:\n  cmod (u - complex_of_real x) = x / 2\n\ngoal (1 subgoal):\n 1. cmod (complex_of_real x - u) = x / 2", "by (simp add: norm_minus_commute)"], ["proof (state)\nthis:\n  cmod (complex_of_real x - u) = x / 2\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "finally"], ["proof (chain)\npicking this:\n  Re (complex_of_real x - u) \\<le> x / 2", "have Re_u: \"Re u \\<ge> x/2\""], ["proof (prove)\nusing this:\n  Re (complex_of_real x - u) \\<le> x / 2\n\ngoal (1 subgoal):\n 1. x / 2 \\<le> Re u", "using elim"], ["proof (prove)\nusing this:\n  Re (complex_of_real x - u) \\<le> x / 2\n  0 < x\n\ngoal (1 subgoal):\n 1. x / 2 \\<le> Re u", "by simp"], ["proof (state)\nthis:\n  x / 2 \\<le> Re u\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "have \"norm (stirling_integral m u / (u - of_real x) ^ Suc j) \\<le> \n              c / Re u ^ m / (x / 2) ^ Suc j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (stirling_integral m u / (u - complex_of_real x) ^ Suc j)\n    \\<le> c / Re u ^ m / (x / 2) ^ Suc j", "using Re_u elim"], ["proof (prove)\nusing this:\n  x / 2 \\<le> Re u\n  0 < x\n\ngoal (1 subgoal):\n 1. cmod (stirling_integral m u / (u - complex_of_real x) ^ Suc j)\n    \\<le> c / Re u ^ m / (x / 2) ^ Suc j", "unfolding norm_divide norm_power dist"], ["proof (prove)\nusing this:\n  x / 2 \\<le> Re u\n  0 < x\n\ngoal (1 subgoal):\n 1. cmod (stirling_integral m u) / (x / 2) ^ Suc j\n    \\<le> c / Re u ^ m / (x / 2) ^ Suc j", "by (intro divide_right_mono zero_le_power c) simp_all"], ["proof (state)\nthis:\n  cmod (stirling_integral m u / (u - complex_of_real x) ^ Suc j)\n  \\<le> c / Re u ^ m / (x / 2) ^ Suc j\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "also"], ["proof (state)\nthis:\n  cmod (stirling_integral m u / (u - complex_of_real x) ^ Suc j)\n  \\<le> c / Re u ^ m / (x / 2) ^ Suc j\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "have \"\\<dots> \\<le> c / (x/2) ^ m / (x / 2) ^ Suc j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / Re u ^ m / (x / 2) ^ Suc j \\<le> c / (x / 2) ^ m / (x / 2) ^ Suc j", "using c_nonneg elim Re_u"], ["proof (prove)\nusing this:\n  0 \\<le> c\n  0 < x\n  x / 2 \\<le> Re u\n\ngoal (1 subgoal):\n 1. c / Re u ^ m / (x / 2) ^ Suc j \\<le> c / (x / 2) ^ m / (x / 2) ^ Suc j", "by (intro divide_right_mono divide_left_mono power_mono) simp_all"], ["proof (state)\nthis:\n  c / Re u ^ m / (x / 2) ^ Suc j \\<le> c / (x / 2) ^ m / (x / 2) ^ Suc j\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "also"], ["proof (state)\nthis:\n  c / Re u ^ m / (x / 2) ^ Suc j \\<le> c / (x / 2) ^ m / (x / 2) ^ Suc j\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "have \"\\<dots> = B / x ^ (m + Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c / (x / 2) ^ m / (x / 2) ^ Suc j = B / x ^ (m + Suc j)", "using elim"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. c / (x / 2) ^ m / (x / 2) ^ Suc j = B / x ^ (m + Suc j)", "by (simp add: B_def field_simps power_add)"], ["proof (state)\nthis:\n  c / (x / 2) ^ m / (x / 2) ^ Suc j = B / x ^ (m + Suc j)\n\ngoal (3 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2\n 3. \\<And>xa.\n       cmod (xa - complex_of_real x) = x / 2 \\<Longrightarrow>\n       cmod (stirling_integral m xa / (xa - complex_of_real x) ^ Suc j)\n       \\<le> B / x ^ (m + Suc j)", "finally"], ["proof (chain)\npicking this:\n  cmod (stirling_integral m u / (u - complex_of_real x) ^ Suc j)\n  \\<le> B / x ^ (m + Suc j)", "show \"norm (stirling_integral m u / (u - of_real x) ^ Suc j) \\<le> B / x ^ (m + Suc j)\""], ["proof (prove)\nusing this:\n  cmod (stirling_integral m u / (u - complex_of_real x) ^ Suc j)\n  \\<le> B / x ^ (m + Suc j)\n\ngoal (1 subgoal):\n 1. cmod (stirling_integral m u / (u - complex_of_real x) ^ Suc j)\n    \\<le> B / x ^ (m + Suc j)", "."], ["proof (state)\nthis:\n  cmod (stirling_integral m u / (u - complex_of_real x) ^ Suc j)\n  \\<le> B / x ^ (m + Suc j)\n\ngoal (2 subgoals):\n 1. 0 \\<le> B / x ^ (m + Suc j)\n 2. 0 < x / 2", "qed (insert elim c_nonneg, auto simp: B_def simp del: power_Suc)"], ["proof (state)\nthis:\n  cmod\n   (complex_of_real (2 * pi) * \\<i> / fact j *\n    (deriv ^^ j) (stirling_integral m) (complex_of_real x))\n  \\<le> B / x ^ (m + Suc j) * (2 * pi * (x / 2))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       norm ((deriv ^^ j) (stirling_integral m) x)\n       \\<le> B' * norm (1 / x ^ (m + j))", "hence \"cmod ((deriv ^^ j) (stirling_integral m) (of_real x)) \\<le> B' / x ^ (j + m)\""], ["proof (prove)\nusing this:\n  cmod\n   (complex_of_real (2 * pi) * \\<i> / fact j *\n    (deriv ^^ j) (stirling_integral m) (complex_of_real x))\n  \\<le> B / x ^ (m + Suc j) * (2 * pi * (x / 2))\n\ngoal (1 subgoal):\n 1. cmod ((deriv ^^ j) (stirling_integral m) (complex_of_real x))\n    \\<le> B' / x ^ (j + m)", "using elim"], ["proof (prove)\nusing this:\n  cmod\n   (complex_of_real (2 * pi) * \\<i> / fact j *\n    (deriv ^^ j) (stirling_integral m) (complex_of_real x))\n  \\<le> B / x ^ (m + Suc j) * (2 * pi * (x / 2))\n  0 < x\n\ngoal (1 subgoal):\n 1. cmod ((deriv ^^ j) (stirling_integral m) (complex_of_real x))\n    \\<le> B' / x ^ (j + m)", "by (simp add: field_simps norm_divide norm_mult norm_power B'_def)"], ["proof (state)\nthis:\n  cmod ((deriv ^^ j) (stirling_integral m) (complex_of_real x))\n  \\<le> B' / x ^ (j + m)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       norm ((deriv ^^ j) (stirling_integral m) x)\n       \\<le> B' * norm (1 / x ^ (m + j))", "with elim m"], ["proof (chain)\npicking this:\n  0 < x\n  0 < m\n  cmod ((deriv ^^ j) (stirling_integral m) (complex_of_real x))\n  \\<le> B' / x ^ (j + m)", "show ?case"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n  cmod ((deriv ^^ j) (stirling_integral m) (complex_of_real x))\n  \\<le> B' / x ^ (j + m)\n\ngoal (1 subgoal):\n 1. norm ((deriv ^^ j) (stirling_integral m) x)\n    \\<le> B' * norm (1 / x ^ (m + j))", "by (simp_all add: add_ac deriv_stirling_integral_complex_of_real)"], ["proof (state)\nthis:\n  norm ((deriv ^^ j) (stirling_integral m) x)\n  \\<le> B' * norm (1 / x ^ (m + j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     norm ((deriv ^^ j) (stirling_integral m) x)\n     \\<le> B' * norm (1 / x ^ (m + j))\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_top.\n     norm ((deriv ^^ j) (stirling_integral m) x)\n     \\<le> B' * norm (1 / x ^ (m + j))\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "by (rule bigoI)"], ["proof (state)\nthis:\n  (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\n\ngoal:\nNo subgoals!", "qed"], ["", "definition stirling_sum where\n  \"stirling_sum j m x = \n     (-1) ^ j * (\\<Sum>k = 1..<m. (of_real (bernoulli (Suc k)) * pochhammer (of_nat k) j / (of_nat k *\n                                 of_nat (Suc k))) * inverse x ^ (k + j))\""], ["", "definition stirling_sum' where\n  \"stirling_sum' j m x = \n     (-1) ^ (Suc j) * (\\<Sum>k\\<le>m. (of_real (bernoulli' k) * \n       pochhammer (of_nat (Suc k)) (j - 1) * inverse x ^ (k + j)))\""], ["", "lemma stirling_sum_complex_of_real:\n  \"stirling_sum j m (complex_of_real x) = complex_of_real (stirling_sum j m x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_sum j m (complex_of_real x) =\n    complex_of_real (stirling_sum j m x)", "by (simp add: stirling_sum_def pochhammer_of_real [symmetric] del: of_nat_Suc)"], ["", "lemma stirling_sum'_complex_of_real:\n  \"stirling_sum' j m (complex_of_real x) = complex_of_real (stirling_sum' j m x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_sum' j m (complex_of_real x) =\n    complex_of_real (stirling_sum' j m x)", "by (simp add: stirling_sum'_def pochhammer_of_real [symmetric] del: of_nat_Suc)"], ["", "lemma has_field_derivative_stirling_sum_complex [derivative_intros]:\n  \"Re x > 0 \\<Longrightarrow> (stirling_sum j m has_field_derivative stirling_sum (Suc j) m x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re x \\<Longrightarrow>\n    (stirling_sum j m has_field_derivative stirling_sum (Suc j) m x) (at x)", "unfolding stirling_sum_def [abs_def] sum_distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re x \\<Longrightarrow>\n    ((\\<lambda>x.\n         \\<Sum>n = 1..<m.\n            (- 1) ^ j *\n            (complex_of_real (bernoulli (Suc n)) * pochhammer (of_nat n) j /\n             (of_nat n * of_nat (Suc n)) *\n             inverse x ^ (n + j))) has_field_derivative\n     (\\<Sum>n = 1..<m.\n         (- 1) ^ Suc j *\n         (complex_of_real (bernoulli (Suc n)) *\n          pochhammer (of_nat n) (Suc j) /\n          (of_nat n * of_nat (Suc n)) *\n          inverse x ^ (n + Suc j))))\n     (at x)", "by (rule DERIV_sum) (auto intro!: derivative_eq_intros simp del: of_nat_Suc \n                              simp: pochhammer_Suc power_diff)"], ["", "lemma has_field_derivative_stirling_sum_real [derivative_intros]:\n  \"x > (0::real) \\<Longrightarrow> (stirling_sum j m has_field_derivative stirling_sum (Suc j) m x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    (stirling_sum j m has_real_derivative stirling_sum (Suc j) m x) (at x)", "unfolding stirling_sum_def [abs_def] sum_distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    ((\\<lambda>x.\n         \\<Sum>n = 1..<m.\n            (- 1) ^ j *\n            (of_real (bernoulli (Suc n)) * pochhammer (real n) j /\n             (real n * real (Suc n)) *\n             inverse x ^ (n + j))) has_real_derivative\n     (\\<Sum>n = 1..<m.\n         (- 1) ^ Suc j *\n         (of_real (bernoulli (Suc n)) * pochhammer (real n) (Suc j) /\n          (real n * real (Suc n)) *\n          inverse x ^ (n + Suc j))))\n     (at x)", "by (rule DERIV_sum) (auto intro!: derivative_eq_intros simp del: of_nat_Suc \n                              simp: pochhammer_Suc power_diff)"], ["", "lemma has_field_derivative_stirling_sum'_complex [derivative_intros]:\n  assumes \"j > 0\" \"Re x > 0\"\n  shows   \"(stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "case (Suc j')"], ["proof (state)\nthis:\n  j = Suc j'\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "from assms"], ["proof (chain)\npicking this:\n  0 < j\n  0 < Re x", "have [simp]: \"x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < j\n  0 < Re x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "define c where \"c = (\\<lambda>n. (-1) ^ Suc j * complex_of_real (bernoulli' n) * \n                          pochhammer (of_nat (Suc n)) j')\""], ["proof (state)\nthis:\n  c =\n  (\\<lambda>n.\n      (- 1) ^ Suc j * complex_of_real (bernoulli' n) *\n      pochhammer (of_nat (Suc n)) j')\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "define T where \"T = (\\<lambda>n x. c n * inverse x ^ (j + n))\""], ["proof (state)\nthis:\n  T = (\\<lambda>n x. c n * inverse x ^ (j + n))\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "define T' where \"T' = (\\<lambda>n x. - (of_nat (j + n)) * c n * inverse x ^ (Suc (j + n)))\""], ["proof (state)\nthis:\n  T' = (\\<lambda>n x. - of_nat (j + n) * c n * inverse x ^ Suc (j + n))\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "have \"((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_field_derivative (\\<Sum>k\\<le>m. T' k x)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_field_derivative\n     (\\<Sum>k\\<le>m. T' k x))\n     (at x)", "using assms Suc"], ["proof (prove)\nusing this:\n  0 < j\n  0 < Re x\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_field_derivative\n     (\\<Sum>k\\<le>m. T' k x))\n     (at x)", "by (intro DERIV_sum)\n       (auto simp: T_def T'_def intro!: derivative_eq_intros \n             simp: field_simps power_add [symmetric]  simp del: of_nat_Suc power_Suc of_nat_add)"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_field_derivative\n   (\\<Sum>k\\<le>m. T' k x))\n   (at x)\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_field_derivative\n   (\\<Sum>k\\<le>m. T' k x))\n   (at x)\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "have \"(\\<lambda>x. (\\<Sum>k\\<le>m. T k x)) = stirling_sum' j m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>k\\<le>m. T k x) = stirling_sum' j m", "by (simp add: Suc T_def c_def stirling_sum'_def fun_eq_iff add_ac mult.assoc sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>k\\<le>m. T k x) = stirling_sum' j m\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>k\\<le>m. T k x) = stirling_sum' j m\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "have \"(\\<Sum>k\\<le>m. T' k x) = stirling_sum' (Suc j) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>m. T' k x) = stirling_sum' (Suc j) m x", "by (simp add: T'_def c_def Suc stirling_sum'_def sum_distrib_left \n          sum_distrib_right algebra_simps pochhammer_Suc)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>m. T' k x) = stirling_sum' (Suc j) m x\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n        (at x)", "finally"], ["proof (chain)\npicking this:\n  (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x) (at x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x) (at x)\n\ngoal (1 subgoal):\n 1. (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)", "."], ["proof (state)\nthis:\n  (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x) (at x)\n\ngoal (1 subgoal):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x)\n     (at x)", "qed (insert assms, simp_all)"], ["", "lemma has_field_derivative_stirling_sum'_real [derivative_intros]:\n  assumes \"j > 0\" \"x > (0::real)\"\n  shows   \"(stirling_sum' j m has_field_derivative stirling_sum' (Suc j) m x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "case (Suc j')"], ["proof (state)\nthis:\n  j = Suc j'\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "from assms"], ["proof (chain)\npicking this:\n  0 < j\n  0 < x", "have [simp]: \"x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < j\n  0 < x\n\ngoal (1 subgoal):\n 1. x \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "define c where \"c = (\\<lambda>n. (-1) ^ Suc j * (bernoulli' n) * pochhammer (of_nat (Suc n)) j')\""], ["proof (state)\nthis:\n  c =\n  (\\<lambda>n. (- 1) ^ Suc j * bernoulli' n * pochhammer (real (Suc n)) j')\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "define T where \"T = (\\<lambda>n x. c n * inverse x ^ (j + n))\""], ["proof (state)\nthis:\n  T = (\\<lambda>n x. c n * inverse x ^ (j + n))\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "define T' where \"T' = (\\<lambda>n x. - (of_nat (j + n)) * c n * inverse x ^ (Suc (j + n)))\""], ["proof (state)\nthis:\n  T' = (\\<lambda>n x. - real (j + n) * c n * inverse x ^ Suc (j + n))\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "have \"((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_field_derivative (\\<Sum>k\\<le>m. T' k x)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_real_derivative\n     (\\<Sum>k\\<le>m. T' k x))\n     (at x)", "using assms Suc"], ["proof (prove)\nusing this:\n  0 < j\n  0 < x\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_real_derivative\n     (\\<Sum>k\\<le>m. T' k x))\n     (at x)", "by (intro DERIV_sum)\n       (auto simp: T_def T'_def intro!: derivative_eq_intros \n             simp: field_simps power_add [symmetric]  simp del: of_nat_Suc power_Suc of_nat_add)"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_real_derivative\n   (\\<Sum>k\\<le>m. T' k x))\n   (at x)\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. \\<Sum>k\\<le>m. T k x) has_real_derivative\n   (\\<Sum>k\\<le>m. T' k x))\n   (at x)\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "have \"(\\<lambda>x. (\\<Sum>k\\<le>m. T k x)) = stirling_sum' j m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>k\\<le>m. T k x) = stirling_sum' j m", "by (simp add: Suc T_def c_def stirling_sum'_def fun_eq_iff add_ac mult.assoc sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>k\\<le>m. T k x) = stirling_sum' j m\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<Sum>k\\<le>m. T k x) = stirling_sum' j m\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "have \"(\\<Sum>k\\<le>m. T' k x) = stirling_sum' (Suc j) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>m. T' k x) = stirling_sum' (Suc j) m x", "by (simp add: T'_def c_def Suc stirling_sum'_def sum_distrib_left \n          sum_distrib_right algebra_simps pochhammer_Suc)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>m. T' k x) = stirling_sum' (Suc j) m x\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x)\n        (at x)", "finally"], ["proof (chain)\npicking this:\n  (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n\ngoal (1 subgoal):\n 1. (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)", "."], ["proof (state)\nthis:\n  (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)\n\ngoal (1 subgoal):\n 1. j = 0 \\<Longrightarrow>\n    (stirling_sum' j m has_real_derivative stirling_sum' (Suc j) m x) (at x)", "qed (insert assms, simp_all)"], ["", "lemma higher_deriv_stirling_sum_complex:\n  \"Re x > 0 \\<Longrightarrow> (deriv ^^ i) (stirling_sum j m) x = stirling_sum (i + j) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re x \\<Longrightarrow>\n    (deriv ^^ i) (stirling_sum j m) x = stirling_sum (i + j) m x", "proof (induction i arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < Re x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_sum j m) x = stirling_sum (0 + j) m x\n 2. \\<And>i x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   (deriv ^^ i) (stirling_sum j m) x =\n                   stirling_sum (i + j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc i) (stirling_sum j m) x =\n                         stirling_sum (Suc i + j) m x", "case (Suc i)"], ["proof (state)\nthis:\n  0 < Re ?x \\<Longrightarrow>\n  (deriv ^^ i) (stirling_sum j m) ?x = stirling_sum (i + j) m ?x\n  0 < Re x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < Re x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_sum j m) x = stirling_sum (0 + j) m x\n 2. \\<And>i x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   (deriv ^^ i) (stirling_sum j m) x =\n                   stirling_sum (i + j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc i) (stirling_sum j m) x =\n                         stirling_sum (Suc i + j) m x", "have \"deriv ((deriv ^^ i) (stirling_sum j m)) x = deriv (stirling_sum (i + j) m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv ((deriv ^^ i) (stirling_sum j m)) x =\n    deriv (stirling_sum (i + j) m) x", "using eventually_nhds_in_open[of \"{x. Re x > 0}\" x] Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {x. 0 < Re x}; x \\<in> {x. 0 < Re x}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {x. 0 < Re x}\n  0 < Re x\n\ngoal (1 subgoal):\n 1. deriv ((deriv ^^ i) (stirling_sum j m)) x =\n    deriv (stirling_sum (i + j) m) x", "by (intro deriv_cong_ev refl) (auto elim!: eventually_mono simp: open_halfspace_Re_gt Suc.IH)"], ["proof (state)\nthis:\n  deriv ((deriv ^^ i) (stirling_sum j m)) x =\n  deriv (stirling_sum (i + j) m) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < Re x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_sum j m) x = stirling_sum (0 + j) m x\n 2. \\<And>i x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   (deriv ^^ i) (stirling_sum j m) x =\n                   stirling_sum (i + j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc i) (stirling_sum j m) x =\n                         stirling_sum (Suc i + j) m x", "also"], ["proof (state)\nthis:\n  deriv ((deriv ^^ i) (stirling_sum j m)) x =\n  deriv (stirling_sum (i + j) m) x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < Re x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_sum j m) x = stirling_sum (0 + j) m x\n 2. \\<And>i x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   (deriv ^^ i) (stirling_sum j m) x =\n                   stirling_sum (i + j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc i) (stirling_sum j m) x =\n                         stirling_sum (Suc i + j) m x", "from Suc.prems"], ["proof (chain)\npicking this:\n  0 < Re x", "have \"\\<dots> = stirling_sum (Suc (i + j)) m x\""], ["proof (prove)\nusing this:\n  0 < Re x\n\ngoal (1 subgoal):\n 1. deriv (stirling_sum (i + j) m) x = stirling_sum (Suc (i + j)) m x", "by (intro DERIV_imp_deriv has_field_derivative_stirling_sum_complex)"], ["proof (state)\nthis:\n  deriv (stirling_sum (i + j) m) x = stirling_sum (Suc (i + j)) m x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < Re x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_sum j m) x = stirling_sum (0 + j) m x\n 2. \\<And>i x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   (deriv ^^ i) (stirling_sum j m) x =\n                   stirling_sum (i + j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> (deriv ^^ Suc i) (stirling_sum j m) x =\n                         stirling_sum (Suc i + j) m x", "finally"], ["proof (chain)\npicking this:\n  deriv ((deriv ^^ i) (stirling_sum j m)) x = stirling_sum (Suc (i + j)) m x", "show ?case"], ["proof (prove)\nusing this:\n  deriv ((deriv ^^ i) (stirling_sum j m)) x = stirling_sum (Suc (i + j)) m x\n\ngoal (1 subgoal):\n 1. (deriv ^^ Suc i) (stirling_sum j m) x = stirling_sum (Suc i + j) m x", "by simp"], ["proof (state)\nthis:\n  (deriv ^^ Suc i) (stirling_sum j m) x = stirling_sum (Suc i + j) m x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < Re x \\<Longrightarrow>\n       (deriv ^^ 0) (stirling_sum j m) x = stirling_sum (0 + j) m x", "qed simp_all"], ["", "definition Polygamma_approx :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a \\<Rightarrow> 'a :: {real_normed_field, ln}\" where\n  \"Polygamma_approx j m = \n     (deriv ^^ j) (\\<lambda>x. (x - 1 / 2) * ln x - x + of_real (ln (2 * pi)) / 2 + stirling_sum 0 m x)\""], ["", "lemma Polygamma_approx_Suc: \"Polygamma_approx (Suc j) m = deriv (Polygamma_approx j m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc j) m = deriv (Polygamma_approx j m)", "by (simp add: Polygamma_approx_def)"], ["", "lemma Polygamma_approx_0: \n  \"Polygamma_approx 0 m x = (x - 1/2) * ln x - x + of_real (ln (2*pi)) / 2 + stirling_sum 0 m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx 0 m x =\n    (x - (1::'a) / (2::'a)) * ln x - x + of_real (ln (2 * pi)) / (2::'a) +\n    stirling_sum 0 m x", "by (simp add: Polygamma_approx_def)"], ["", "lemma Polygamma_approx_1_complex: \n  \"Re x > 0 \\<Longrightarrow> \n     Polygamma_approx (Suc 0) m x = ln x - 1 / (2*x) + stirling_sum (Suc 0) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re x \\<Longrightarrow>\n    Polygamma_approx (Suc 0) m x =\n    Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x", "unfolding Polygamma_approx_Suc Polygamma_approx_0"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Re x \\<Longrightarrow>\n    deriv\n     (\\<lambda>x.\n         (x - 1 / 2) * Ln x - x + complex_of_real (ln (2 * pi)) / 2 +\n         stirling_sum 0 m x)\n     x =\n    Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x", "by (intro DERIV_imp_deriv) \n     (auto intro!: derivative_eq_intros elim!: nonpos_Reals_cases simp: field_simps)"], ["", "lemma Polygamma_approx_1_real: \n  \"x > (0 :: real) \\<Longrightarrow> \n     Polygamma_approx (Suc 0) m x = ln x - 1 / (2*x) + stirling_sum (Suc 0) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    Polygamma_approx (Suc 0) m x =\n    ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x", "unfolding Polygamma_approx_Suc Polygamma_approx_0"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < x \\<Longrightarrow>\n    deriv\n     (\\<lambda>x.\n         (x - 1 / 2) * ln x - x + of_real (ln (2 * pi)) / 2 +\n         stirling_sum 0 m x)\n     x =\n    ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x", "by (intro DERIV_imp_deriv) \n     (auto intro!: derivative_eq_intros elim!: nonpos_Reals_cases simp: field_simps)"], ["", "lemma stirling_sum_2_conv_stirling_sum'_1:\n  fixes x :: \"'a :: {real_div_algebra, field_char_0}\"\n  assumes \"m > 0\" \"x \\<noteq> 0\"\n  shows   \"stirling_sum' 1 m x = 1 / x + 1 / (2 * x^2) + stirling_sum 2 m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "have pochhammer_2: \"pochhammer (of_nat k) 2 = of_nat k * of_nat (Suc k)\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. pochhammer (of_nat k) 2 = of_nat k * of_nat (Suc k)", "by (simp add: pochhammer_Suc eval_nat_numeral add_ac)"], ["proof (state)\nthis:\n  pochhammer (of_nat ?k1) 2 = of_nat ?k1 * of_nat (Suc ?k1)\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "have \"stirling_sum 2 m x = \n          (\\<Sum>k = Suc 0..<m. of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_sum 2 m x =\n    (\\<Sum>k = Suc 0..<m.\n        of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))", "unfolding stirling_sum_def pochhammer_2 power2_minus power_one mult_1_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 1..<m.\n        of_real (bernoulli (Suc k)) * (of_nat k * of_nat (Suc k)) /\n        (of_nat k * of_nat (Suc k)) *\n        inverse x ^ (k + 2)) =\n    (\\<Sum>k = Suc 0..<m.\n        of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))", "by (intro sum.cong refl)\n       (simp_all add: stirling_sum_def pochhammer_2 power2_eq_square divide_simps bernoulli'_def\n                 del: of_nat_Suc power_Suc)"], ["proof (state)\nthis:\n  stirling_sum 2 m x =\n  (\\<Sum>k = Suc 0..<m.\n      of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "also"], ["proof (state)\nthis:\n  stirling_sum 2 m x =\n  (\\<Sum>k = Suc 0..<m.\n      of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "have \"1 / (2 * x^2) + \\<dots> = \n               (\\<Sum>k=0..<m. of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) / ((2::'a) * x\\<^sup>2) +\n    (\\<Sum>k = Suc 0..<m.\n        of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k)) =\n    (\\<Sum>k = 0..<m.\n        of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n  x \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (1::'a) / ((2::'a) * x\\<^sup>2) +\n    (\\<Sum>k = Suc 0..<m.\n        of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k)) =\n    (\\<Sum>k = 0..<m.\n        of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))", "by (subst (2) sum.atLeast_Suc_lessThan) (simp_all add: power2_eq_square field_simps)"], ["proof (state)\nthis:\n  (1::'a) / ((2::'a) * x\\<^sup>2) +\n  (\\<Sum>k = Suc 0..<m.\n      of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k)) =\n  (\\<Sum>k = 0..<m. of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "also"], ["proof (state)\nthis:\n  (1::'a) / ((2::'a) * x\\<^sup>2) +\n  (\\<Sum>k = Suc 0..<m.\n      of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k)) =\n  (\\<Sum>k = 0..<m. of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k))\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "have \"1 / x + \\<dots> = (\\<Sum>k=0..<Suc m. of_real (bernoulli' k) * inverse x ^ Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) / x +\n    (\\<Sum>k = 0..<m.\n        of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k)) =\n    (\\<Sum>k = 0..<Suc m. of_real (bernoulli' k) * inverse x ^ Suc k)", "by (subst sum.atLeast0_lessThan_Suc_shift) (simp_all add: bernoulli'_def divide_simps)"], ["proof (state)\nthis:\n  (1::'a) / x +\n  (\\<Sum>k = 0..<m.\n      of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k)) =\n  (\\<Sum>k = 0..<Suc m. of_real (bernoulli' k) * inverse x ^ Suc k)\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "also"], ["proof (state)\nthis:\n  (1::'a) / x +\n  (\\<Sum>k = 0..<m.\n      of_real (bernoulli' (Suc k)) * inverse x ^ Suc (Suc k)) =\n  (\\<Sum>k = 0..<Suc m. of_real (bernoulli' k) * inverse x ^ Suc k)\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "have \"\\<dots> = (\\<Sum>k\\<le>m. of_real (bernoulli' k) * inverse x ^ Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<Suc m. of_real (bernoulli' k) * inverse x ^ Suc k) =\n    (\\<Sum>k\\<le>m. of_real (bernoulli' k) * inverse x ^ Suc k)", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<Suc m. of_real (bernoulli' k) * inverse x ^ Suc k) =\n  (\\<Sum>k\\<le>m. of_real (bernoulli' k) * inverse x ^ Suc k)\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<Suc m. of_real (bernoulli' k) * inverse x ^ Suc k) =\n  (\\<Sum>k\\<le>m. of_real (bernoulli' k) * inverse x ^ Suc k)\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "have \"\\<dots> = stirling_sum' 1 m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k\\<le>m. of_real (bernoulli' k) * inverse x ^ Suc k) =\n    stirling_sum' 1 m x", "by (simp add: stirling_sum'_def)"], ["proof (state)\nthis:\n  (\\<Sum>k\\<le>m. of_real (bernoulli' k) * inverse x ^ Suc k) =\n  stirling_sum' 1 m x\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "finally"], ["proof (chain)\npicking this:\n  (1::'a) / x + ((1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x) =\n  stirling_sum' 1 m x", "show ?thesis"], ["proof (prove)\nusing this:\n  (1::'a) / x + ((1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x) =\n  stirling_sum' 1 m x\n\ngoal (1 subgoal):\n 1. stirling_sum' 1 m x =\n    (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x", "by (simp add: add_ac)"], ["proof (state)\nthis:\n  stirling_sum' 1 m x =\n  (1::'a) / x + (1::'a) / ((2::'a) * x\\<^sup>2) + stirling_sum 2 m x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Polygamma_approx_2_real: \n  assumes \"x > (0::real)\" \"m > 0\"\n  shows   \"Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "have \"Polygamma_approx (Suc (Suc 0)) m x = deriv (Polygamma_approx (Suc 0) m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x =\n    deriv (Polygamma_approx (Suc 0) m) x", "by (simp add: Polygamma_approx_Suc)"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc 0)) m x = deriv (Polygamma_approx (Suc 0) m) x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "also"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc 0)) m x = deriv (Polygamma_approx (Suc 0) m) x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "have \"\\<dots> = deriv (\\<lambda>x. ln x - 1 / (2*x) + stirling_sum (Suc 0) m x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (Polygamma_approx (Suc 0) m) x =\n    deriv (\\<lambda>x. ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x", "using eventually_nhds_in_open[of \"{0<..}\" x] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {0<..}; x \\<in> {0<..}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..}\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. deriv (Polygamma_approx (Suc 0) m) x =\n    deriv (\\<lambda>x. ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x", "by (intro deriv_cong_ev) (auto elim!: eventually_mono simp: Polygamma_approx_1_real)"], ["proof (state)\nthis:\n  deriv (Polygamma_approx (Suc 0) m) x =\n  deriv (\\<lambda>x. ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "also"], ["proof (state)\nthis:\n  deriv (Polygamma_approx (Suc 0) m) x =\n  deriv (\\<lambda>x. ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "have \"\\<dots> = 1 / x + 1 / (2*x^2) + stirling_sum (Suc (Suc 0)) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (\\<lambda>x. ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x =\n    1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. deriv (\\<lambda>x. ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x =\n    1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x", "by (intro DERIV_imp_deriv) (auto intro!: derivative_eq_intros \n           elim!: nonpos_Reals_cases simp: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  deriv (\\<lambda>x. ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x =\n  1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "also"], ["proof (state)\nthis:\n  deriv (\\<lambda>x. ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x =\n  1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "have \"\\<dots> = stirling_sum' 1 m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x =\n    stirling_sum' 1 m x", "using stirling_sum_2_conv_stirling_sum'_1[of m x] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < m; x \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> stirling_sum' 1 m x =\n                    1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum 2 m x\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. 1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x =\n    stirling_sum' 1 m x", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x =\n  stirling_sum' 1 m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "finally"], ["proof (chain)\npicking this:\n  Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "show ?thesis"], ["proof (prove)\nusing this:\n  Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "."], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Polygamma_approx_2_complex: \n  assumes \"Re x > 0\" \"m > 0\"\n  shows   \"Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "have \"Polygamma_approx (Suc (Suc 0)) m x = deriv (Polygamma_approx (Suc 0) m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x =\n    deriv (Polygamma_approx (Suc 0) m) x", "by (simp add: Polygamma_approx_Suc)"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc 0)) m x = deriv (Polygamma_approx (Suc 0) m) x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "also"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc 0)) m x = deriv (Polygamma_approx (Suc 0) m) x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "have \"\\<dots> = deriv (\\<lambda>x. ln x - 1 / (2*x) + stirling_sum (Suc 0) m x) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (Polygamma_approx (Suc 0) m) x =\n    deriv (\\<lambda>x. Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x", "using eventually_nhds_in_open[of \"{s. Re s > 0}\" x] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {s. 0 < Re s}; x \\<in> {s. 0 < Re s}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {s. 0 < Re s}\n  0 < Re x\n  0 < m\n\ngoal (1 subgoal):\n 1. deriv (Polygamma_approx (Suc 0) m) x =\n    deriv (\\<lambda>x. Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x", "by (intro deriv_cong_ev)\n       (auto simp: open_halfspace_Re_gt elim!: eventually_mono simp: Polygamma_approx_1_complex)"], ["proof (state)\nthis:\n  deriv (Polygamma_approx (Suc 0) m) x =\n  deriv (\\<lambda>x. Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "also"], ["proof (state)\nthis:\n  deriv (Polygamma_approx (Suc 0) m) x =\n  deriv (\\<lambda>x. Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "have \"\\<dots> = 1 / x + 1 / (2*x^2) + stirling_sum (Suc (Suc 0)) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (\\<lambda>x. Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x =\n    1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x", "using assms"], ["proof (prove)\nusing this:\n  0 < Re x\n  0 < m\n\ngoal (1 subgoal):\n 1. deriv (\\<lambda>x. Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x =\n    1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x", "by (intro DERIV_imp_deriv) (auto intro!: derivative_eq_intros \n           elim!: nonpos_Reals_cases simp: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  deriv (\\<lambda>x. Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x =\n  1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "also"], ["proof (state)\nthis:\n  deriv (\\<lambda>x. Ln x - 1 / (2 * x) + stirling_sum (Suc 0) m x) x =\n  1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "have \"\\<dots> = stirling_sum' 1 m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x =\n    stirling_sum' 1 m x", "using stirling_sum_2_conv_stirling_sum'_1[of m x] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < m; x \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> stirling_sum' 1 m x =\n                    1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum 2 m x\n  0 < Re x\n  0 < m\n\ngoal (1 subgoal):\n 1. 1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x =\n    stirling_sum' 1 m x", "by (subst stirling_sum_2_conv_stirling_sum'_1) (auto simp: eval_nat_numeral)"], ["proof (state)\nthis:\n  1 / x + 1 / (2 * x\\<^sup>2) + stirling_sum (Suc (Suc 0)) m x =\n  stirling_sum' 1 m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "finally"], ["proof (chain)\npicking this:\n  Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "show ?thesis"], ["proof (prove)\nusing this:\n  Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x", "."], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' 1 m x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Polygamma_approx_ge_2_real: \n  assumes \"x > (0::real)\" \"m > 0\"\n  shows   \"Polygamma_approx (Suc (Suc j)) m x = stirling_sum' (Suc j) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc j)) m x = stirling_sum' (Suc j) m x", "using assms(1)"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc j)) m x = stirling_sum' (Suc j) m x", "proof (induction j arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' (Suc 0) m x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "case (0 x)"], ["proof (state)\nthis:\n  0 < x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' (Suc 0) m x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "with assms"], ["proof (chain)\npicking this:\n  0 < x\n  0 < m\n  0 < x", "show ?case"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n  0 < x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' (Suc 0) m x", "by (simp add: Polygamma_approx_2_real)"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' (Suc 0) m x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "case (Suc j x)"], ["proof (state)\nthis:\n  0 < ?x \\<Longrightarrow>\n  Polygamma_approx (Suc (Suc j)) m ?x = stirling_sum' (Suc j) m ?x\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "have \"Polygamma_approx (Suc (Suc (Suc j))) m x = deriv (Polygamma_approx (Suc (Suc j)) m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc (Suc j))) m x =\n    deriv (Polygamma_approx (Suc (Suc j)) m) x", "by (simp add: Polygamma_approx_Suc)"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc (Suc j))) m x =\n  deriv (Polygamma_approx (Suc (Suc j)) m) x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "also"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc (Suc j))) m x =\n  deriv (Polygamma_approx (Suc (Suc j)) m) x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "have \"\\<dots> = deriv (stirling_sum' (Suc j) m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (Polygamma_approx (Suc (Suc j)) m) x =\n    deriv (stirling_sum' (Suc j) m) x", "using eventually_nhds_in_open[of \"{0<..}\" x] Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {0<..}; x \\<in> {0<..}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..}\n  0 < x\n\ngoal (1 subgoal):\n 1. deriv (Polygamma_approx (Suc (Suc j)) m) x =\n    deriv (stirling_sum' (Suc j) m) x", "by (intro deriv_cong_ev refl) (auto elim!: eventually_mono simp: Suc.IH)"], ["proof (state)\nthis:\n  deriv (Polygamma_approx (Suc (Suc j)) m) x =\n  deriv (stirling_sum' (Suc j) m) x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "also"], ["proof (state)\nthis:\n  deriv (Polygamma_approx (Suc (Suc j)) m) x =\n  deriv (stirling_sum' (Suc j) m) x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "have \"\\<dots> = stirling_sum' (Suc (Suc j)) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (stirling_sum' (Suc j) m) x = stirling_sum' (Suc (Suc j)) m x", "using Suc.prems"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. deriv (stirling_sum' (Suc j) m) x = stirling_sum' (Suc (Suc j)) m x", "by (intro DERIV_imp_deriv derivative_intros) simp_all"], ["proof (state)\nthis:\n  deriv (stirling_sum' (Suc j) m) x = stirling_sum' (Suc (Suc j)) m x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "finally"], ["proof (chain)\npicking this:\n  Polygamma_approx (Suc (Suc (Suc j))) m x = stirling_sum' (Suc (Suc j)) m x", "show ?case"], ["proof (prove)\nusing this:\n  Polygamma_approx (Suc (Suc (Suc j))) m x = stirling_sum' (Suc (Suc j)) m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc (Suc j))) m x =\n    stirling_sum' (Suc (Suc j)) m x", "."], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc (Suc j))) m x = stirling_sum' (Suc (Suc j)) m x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Polygamma_approx_ge_2_complex:\n  assumes \"Re x > 0\" \"m > 0\"\n  shows   \"Polygamma_approx (Suc (Suc j)) m x = stirling_sum' (Suc j) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc j)) m x = stirling_sum' (Suc j) m x", "using assms(1)"], ["proof (prove)\nusing this:\n  0 < Re x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc j)) m x = stirling_sum' (Suc j) m x", "proof (induction j arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < Re x \\<Longrightarrow>\n       Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' (Suc 0) m x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "case (0 x)"], ["proof (state)\nthis:\n  0 < Re x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 < Re x \\<Longrightarrow>\n       Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' (Suc 0) m x\n 2. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "with assms"], ["proof (chain)\npicking this:\n  0 < Re x\n  0 < m\n  0 < Re x", "show ?case"], ["proof (prove)\nusing this:\n  0 < Re x\n  0 < m\n  0 < Re x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' (Suc 0) m x", "by (simp add: Polygamma_approx_2_complex)"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc 0)) m x = stirling_sum' (Suc 0) m x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "case (Suc j x)"], ["proof (state)\nthis:\n  0 < Re ?x \\<Longrightarrow>\n  Polygamma_approx (Suc (Suc j)) m ?x = stirling_sum' (Suc j) m ?x\n  0 < Re x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "have \"Polygamma_approx (Suc (Suc (Suc j))) m x = deriv (Polygamma_approx (Suc (Suc j)) m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc (Suc j))) m x =\n    deriv (Polygamma_approx (Suc (Suc j)) m) x", "by (simp add: Polygamma_approx_Suc)"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc (Suc j))) m x =\n  deriv (Polygamma_approx (Suc (Suc j)) m) x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "also"], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc (Suc j))) m x =\n  deriv (Polygamma_approx (Suc (Suc j)) m) x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "have \"\\<dots> = deriv (stirling_sum' (Suc j) m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (Polygamma_approx (Suc (Suc j)) m) x =\n    deriv (stirling_sum' (Suc j) m) x", "using eventually_nhds_in_open[of \"{x. Re x > 0}\" x] Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>open {x. 0 < Re x}; x \\<in> {x. 0 < Re x}\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F y in nhds x. y \\<in> {x. 0 < Re x}\n  0 < Re x\n\ngoal (1 subgoal):\n 1. deriv (Polygamma_approx (Suc (Suc j)) m) x =\n    deriv (stirling_sum' (Suc j) m) x", "by (intro deriv_cong_ev refl) (auto elim!: eventually_mono simp: Suc.IH open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  deriv (Polygamma_approx (Suc (Suc j)) m) x =\n  deriv (stirling_sum' (Suc j) m) x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "also"], ["proof (state)\nthis:\n  deriv (Polygamma_approx (Suc (Suc j)) m) x =\n  deriv (stirling_sum' (Suc j) m) x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "have \"\\<dots> = stirling_sum' (Suc (Suc j)) m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv (stirling_sum' (Suc j) m) x = stirling_sum' (Suc (Suc j)) m x", "using Suc.prems"], ["proof (prove)\nusing this:\n  0 < Re x\n\ngoal (1 subgoal):\n 1. deriv (stirling_sum' (Suc j) m) x = stirling_sum' (Suc (Suc j)) m x", "by (intro DERIV_imp_deriv derivative_intros) simp_all"], ["proof (state)\nthis:\n  deriv (stirling_sum' (Suc j) m) x = stirling_sum' (Suc (Suc j)) m x\n\ngoal (1 subgoal):\n 1. \\<And>j x.\n       \\<lbrakk>\\<And>x.\n                   0 < Re x \\<Longrightarrow>\n                   Polygamma_approx (Suc (Suc j)) m x =\n                   stirling_sum' (Suc j) m x;\n        0 < Re x\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx (Suc (Suc (Suc j))) m x =\n                         stirling_sum' (Suc (Suc j)) m x", "finally"], ["proof (chain)\npicking this:\n  Polygamma_approx (Suc (Suc (Suc j))) m x = stirling_sum' (Suc (Suc j)) m x", "show ?case"], ["proof (prove)\nusing this:\n  Polygamma_approx (Suc (Suc (Suc j))) m x = stirling_sum' (Suc (Suc j)) m x\n\ngoal (1 subgoal):\n 1. Polygamma_approx (Suc (Suc (Suc j))) m x =\n    stirling_sum' (Suc (Suc j)) m x", "."], ["proof (state)\nthis:\n  Polygamma_approx (Suc (Suc (Suc j))) m x = stirling_sum' (Suc (Suc j)) m x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Polygamma_approx_complex_of_real:\n  assumes \"x > 0\" \"m > 0\"\n  shows   \"Polygamma_approx j m (complex_of_real x) = of_real (Polygamma_approx j m x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx j m (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    Polygamma_approx j m (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       Polygamma_approx j m (complex_of_real x) =\n       complex_of_real (Polygamma_approx j m x)", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. j = 0 \\<Longrightarrow>\n    Polygamma_approx j m (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)\n 2. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       Polygamma_approx j m (complex_of_real x) =\n       complex_of_real (Polygamma_approx j m x)", "with assms"], ["proof (chain)\npicking this:\n  0 < x\n  0 < m\n  j = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n  j = 0\n\ngoal (1 subgoal):\n 1. Polygamma_approx j m (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)", "by (simp add: Polygamma_approx_0 Ln_of_real stirling_sum_complex_of_real)"], ["proof (state)\nthis:\n  Polygamma_approx j m (complex_of_real x) =\n  complex_of_real (Polygamma_approx j m x)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       Polygamma_approx j m (complex_of_real x) =\n       complex_of_real (Polygamma_approx j m x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       Polygamma_approx j m (complex_of_real x) =\n       complex_of_real (Polygamma_approx j m x)", "case [simp]: (Suc j')"], ["proof (state)\nthis:\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j = Suc nat \\<Longrightarrow>\n       Polygamma_approx j m (complex_of_real x) =\n       complex_of_real (Polygamma_approx j m x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. Polygamma_approx j m (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)", "proof (cases j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>j = Suc j'; j' = 0\\<rbrakk>\n    \\<Longrightarrow> Polygamma_approx j m (complex_of_real x) =\n                      complex_of_real (Polygamma_approx j m x)\n 2. \\<And>nat.\n       \\<lbrakk>j = Suc j'; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx j m (complex_of_real x) =\n                         complex_of_real (Polygamma_approx j m x)", "case 0"], ["proof (state)\nthis:\n  j' = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>j = Suc j'; j' = 0\\<rbrakk>\n    \\<Longrightarrow> Polygamma_approx j m (complex_of_real x) =\n                      complex_of_real (Polygamma_approx j m x)\n 2. \\<And>nat.\n       \\<lbrakk>j = Suc j'; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx j m (complex_of_real x) =\n                         complex_of_real (Polygamma_approx j m x)", "with assms"], ["proof (chain)\npicking this:\n  0 < x\n  0 < m\n  j' = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n  j' = 0\n\ngoal (1 subgoal):\n 1. Polygamma_approx j m (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)", "by (simp add: Polygamma_approx_1_complex \n                    Polygamma_approx_1_real stirling_sum_complex_of_real Ln_of_real)"], ["proof (state)\nthis:\n  Polygamma_approx j m (complex_of_real x) =\n  complex_of_real (Polygamma_approx j m x)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>j = Suc j'; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx j m (complex_of_real x) =\n                         complex_of_real (Polygamma_approx j m x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>j = Suc j'; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx j m (complex_of_real x) =\n                         complex_of_real (Polygamma_approx j m x)", "case (Suc j'')"], ["proof (state)\nthis:\n  j' = Suc j''\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>j = Suc j'; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> Polygamma_approx j m (complex_of_real x) =\n                         complex_of_real (Polygamma_approx j m x)", "with assms"], ["proof (chain)\npicking this:\n  0 < x\n  0 < m\n  j' = Suc j''", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n  j' = Suc j''\n\ngoal (1 subgoal):\n 1. Polygamma_approx j m (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)", "by (simp add: Polygamma_approx_ge_2_complex Polygamma_approx_ge_2_real \n                    stirling_sum'_complex_of_real)"], ["proof (state)\nthis:\n  Polygamma_approx j m (complex_of_real x) =\n  complex_of_real (Polygamma_approx j m x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Polygamma_approx j m (complex_of_real x) =\n  complex_of_real (Polygamma_approx j m x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma higher_deriv_Polygamma_approx [simp]: \n  \"(deriv ^^ j) (Polygamma_approx i m) = Polygamma_approx (j + i) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (Polygamma_approx i m) = Polygamma_approx (j + i) m", "by (simp add: Polygamma_approx_def funpow_add)"], ["", "lemma stirling_sum_holomorphic [holomorphic_intros]:\n  \"0 \\<notin> A \\<Longrightarrow> stirling_sum j m holomorphic_on A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin> A \\<Longrightarrow> stirling_sum j m holomorphic_on A", "unfolding stirling_sum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin> A \\<Longrightarrow>\n    (\\<lambda>x.\n        (- 1) ^ j *\n        (\\<Sum>k = 1..<m.\n            complex_of_real (bernoulli (Suc k)) * pochhammer (of_nat k) j /\n            (of_nat k * of_nat (Suc k)) *\n            inverse x ^ (k + j))) holomorphic_on\n    A", "by (intro holomorphic_intros) auto"], ["", "lemma Polygamma_approx_holomorphic [holomorphic_intros]:\n  \"Polygamma_approx j m holomorphic_on {s. Re s > 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx j m holomorphic_on {s. 0 < Re s}", "unfolding Polygamma_approx_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j)\n     (\\<lambda>x.\n         (x - 1 / 2) * Ln x - x + complex_of_real (ln (2 * pi)) / 2 +\n         stirling_sum 0 m x) holomorphic_on\n    {s. 0 < Re s}", "by (intro holomorphic_intros) (auto simp: open_halfspace_Re_gt elim!: nonpos_Reals_cases)"], ["", "lemma higher_deriv_lnGamma_stirling:\n  assumes m: \"m > 0\"\n  shows   \"(\\<lambda>x::real. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "have \"eventually (\\<lambda>x. \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n                          inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>) at_top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "using eventually_gt_at_top[of \"0::real\"]"], ["proof (prove)\nusing this:\n  eventually ((<) 0) at_top\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_top.\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "case (elim x)"], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "note x = this"], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "have \"\\<forall>\\<^sub>F y in nhds (complex_of_real x). y \\<in> - \\<real>\\<^sub>\\<le>\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in nhds (complex_of_real x).\n       y \\<in> - \\<real>\\<^sub>\\<le>\\<^sub>0", "using elim"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in nhds (complex_of_real x).\n       y \\<in> - \\<real>\\<^sub>\\<le>\\<^sub>0", "by (intro eventually_nhds_in_open) auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in nhds (complex_of_real x).\n     y \\<in> - \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "hence \"(deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x) (complex_of_real x) =\n            (deriv ^^ j) (\\<lambda>x. (-inverse (of_nat m)) * stirling_integral m x) (complex_of_real x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in nhds (complex_of_real x).\n     y \\<in> - \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x)\n     (complex_of_real x) =\n    (deriv ^^ j) (\\<lambda>x. - inverse (of_nat m) * stirling_integral m x)\n     (complex_of_real x)", "using x m"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in nhds (complex_of_real x).\n     y \\<in> - \\<real>\\<^sub>\\<le>\\<^sub>0\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x)\n     (complex_of_real x) =\n    (deriv ^^ j) (\\<lambda>x. - inverse (of_nat m) * stirling_integral m x)\n     (complex_of_real x)", "by (intro higher_deriv_cong_ev refl)\n         (auto elim!: eventually_mono simp: ln_Gamma_stirling_complex Polygamma_approx_def \n            field_simps open_halfspace_Re_gt stirling_sum_def)"], ["proof (state)\nthis:\n  (deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x)\n   (complex_of_real x) =\n  (deriv ^^ j) (\\<lambda>x. - inverse (of_nat m) * stirling_integral m x)\n   (complex_of_real x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "also"], ["proof (state)\nthis:\n  (deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x)\n   (complex_of_real x) =\n  (deriv ^^ j) (\\<lambda>x. - inverse (of_nat m) * stirling_integral m x)\n   (complex_of_real x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "have \"\\<dots> = - inverse (of_nat m) * (deriv ^^ j) (stirling_integral m) (of_real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (\\<lambda>x. - inverse (of_nat m) * stirling_integral m x)\n     (complex_of_real x) =\n    - inverse (of_nat m) *\n    (deriv ^^ j) (stirling_integral m) (complex_of_real x)", "using x m"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (\\<lambda>x. - inverse (of_nat m) * stirling_integral m x)\n     (complex_of_real x) =\n    - inverse (of_nat m) *\n    (deriv ^^ j) (stirling_integral m) (complex_of_real x)", "by (intro higher_deriv_cmult[of _ \"-\\<real>\\<^sub>\\<le>\\<^sub>0\"] stirling_integral_holomorphic)\n         (auto simp: open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  (deriv ^^ j) (\\<lambda>x. - inverse (of_nat m) * stirling_integral m x)\n   (complex_of_real x) =\n  - inverse (of_nat m) *\n  (deriv ^^ j) (stirling_integral m) (complex_of_real x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "also"], ["proof (state)\nthis:\n  (deriv ^^ j) (\\<lambda>x. - inverse (of_nat m) * stirling_integral m x)\n   (complex_of_real x) =\n  - inverse (of_nat m) *\n  (deriv ^^ j) (stirling_integral m) (complex_of_real x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "have \"(deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x) (complex_of_real x) = \n                 (deriv ^^ j) ln_Gamma (of_real x) - (deriv ^^ j) (Polygamma_approx 0 m) (of_real x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x)\n     (complex_of_real x) =\n    (deriv ^^ j) ln_Gamma (complex_of_real x) -\n    (deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x)", "using x"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x)\n     (complex_of_real x) =\n    (deriv ^^ j) ln_Gamma (complex_of_real x) -\n    (deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x)", "by (intro higher_deriv_diff[of _ \"{s. Re s > 0}\"])\n         (auto intro!: holomorphic_intros elim!: nonpos_Reals_cases simp: open_halfspace_Re_gt)"], ["proof (state)\nthis:\n  (deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x)\n   (complex_of_real x) =\n  (deriv ^^ j) ln_Gamma (complex_of_real x) -\n  (deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "also"], ["proof (state)\nthis:\n  (deriv ^^ j) (\\<lambda>x. ln_Gamma x - Polygamma_approx 0 m x)\n   (complex_of_real x) =\n  (deriv ^^ j) ln_Gamma (complex_of_real x) -\n  (deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "have \"(deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x) =\n                 of_real (Polygamma_approx j m x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)", "using x m"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x) =\n    complex_of_real (Polygamma_approx j m x)", "by (simp add: Polygamma_approx_complex_of_real)"], ["proof (state)\nthis:\n  (deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x) =\n  complex_of_real (Polygamma_approx j m x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "also"], ["proof (state)\nthis:\n  (deriv ^^ j) (Polygamma_approx 0 m) (complex_of_real x) =\n  complex_of_real (Polygamma_approx j m x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "have \"norm (- inverse (of_nat m) * (deriv ^^ j) (stirling_integral m) (complex_of_real x)) = \n                 inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (- inverse (of_nat m) *\n      (deriv ^^ j) (stirling_integral m) (complex_of_real x)) =\n    inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "using x m"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. cmod\n     (- inverse (of_nat m) *\n      (deriv ^^ j) (stirling_integral m) (complex_of_real x)) =\n    inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "by (simp add: norm_mult norm_inverse deriv_stirling_integral_complex_of_real)"], ["proof (state)\nthis:\n  cmod\n   (- inverse (of_nat m) *\n    (deriv ^^ j) (stirling_integral m) (complex_of_real x)) =\n  inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "also"], ["proof (state)\nthis:\n  cmod\n   (- inverse (of_nat m) *\n    (deriv ^^ j) (stirling_integral m) (complex_of_real x)) =\n  inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "have \"(deriv ^^ j) ln_Gamma (complex_of_real x) = of_real ((deriv ^^ j) ln_Gamma x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) ln_Gamma x)", "using x"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) ln_Gamma (complex_of_real x) =\n    complex_of_real ((deriv ^^ j) ln_Gamma x)", "by (simp add: higher_deriv_ln_Gamma_complex_of_real)"], ["proof (state)\nthis:\n  (deriv ^^ j) ln_Gamma (complex_of_real x) =\n  complex_of_real ((deriv ^^ j) ln_Gamma x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "also"], ["proof (state)\nthis:\n  (deriv ^^ j) ln_Gamma (complex_of_real x) =\n  complex_of_real ((deriv ^^ j) ln_Gamma x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "have \"norm (\\<dots> - of_real (Polygamma_approx j m x)) = \n                 \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod\n     (complex_of_real ((deriv ^^ j) ln_Gamma x) -\n      complex_of_real (Polygamma_approx j m x)) =\n    \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar>", "by (simp only: of_real_diff [symmetric] norm_of_real)"], ["proof (state)\nthis:\n  cmod\n   (complex_of_real ((deriv ^^ j) ln_Gamma x) -\n    complex_of_real (Polygamma_approx j m x)) =\n  \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 < x \\<Longrightarrow>\n       \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n       inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "finally"], ["proof (chain)\npicking this:\n  \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n  inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "show ?case"], ["proof (prove)\nusing this:\n  \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n  inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n    inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>", "."], ["proof (state)\nthis:\n  \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n  inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_top.\n     \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar> =\n     inverse (real m) * \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "from bigthetaI_cong[OF this] m"], ["proof (chain)\npicking this:\n  (\\<lambda>x. \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar>)\n  \\<in> \\<Theta>(\\<lambda>x.\n                    inverse (real m) *\n                    \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>)\n  0 < m", "have \"(\\<lambda>x::real. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x) \\<in> \n             \\<Theta>(\\<lambda>x. (deriv ^^ j) (stirling_integral m) x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<bar>(deriv ^^ j) ln_Gamma x - Polygamma_approx j m x\\<bar>)\n  \\<in> \\<Theta>(\\<lambda>x.\n                    inverse (real m) *\n                    \\<bar>(deriv ^^ j) (stirling_integral m) x\\<bar>)\n  0 < m\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> \\<Theta>((deriv ^^ j) (stirling_integral m))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n  \\<in> \\<Theta>((deriv ^^ j) (stirling_integral m))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n  \\<in> \\<Theta>((deriv ^^ j) (stirling_integral m))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "have \"(\\<lambda>x::real. (deriv ^^ j) (stirling_integral m) x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "using m"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "by (rule deriv_stirling_integral_real_bound)"], ["proof (state)\nthis:\n  (deriv ^^ j) (stirling_integral m) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n  \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n  \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "."], ["proof (state)\nthis:\n  (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n  \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Polygamma_approx_1_real':\n  assumes x: \"(x::real) > 0\" and m: \"m > 0\"\n  shows   \"Polygamma_approx 1 m x = ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "have \"Polygamma_approx 1 m x = ln x - (1 / (2 * x) + \n          (\\<Sum>k=Suc 0..<m. bernoulli (Suc k) * inverse x ^ Suc k / real (Suc k)))\"\n    (is \"_ = _ - (_ + ?S)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x -\n    (1 / (2 * x) +\n     (\\<Sum>k = Suc 0..<m.\n         bernoulli (Suc k) * inverse x ^ Suc k / real (Suc k)))", "using x"], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x -\n    (1 / (2 * x) +\n     (\\<Sum>k = Suc 0..<m.\n         bernoulli (Suc k) * inverse x ^ Suc k / real (Suc k)))", "by (simp add: Polygamma_approx_1_real stirling_sum_def)"], ["proof (state)\nthis:\n  Polygamma_approx 1 m x =\n  ln x -\n  (1 / (2 * x) +\n   (\\<Sum>k = Suc 0..<m.\n       bernoulli (Suc k) * inverse x ^ Suc k / real (Suc k)))\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "also"], ["proof (state)\nthis:\n  Polygamma_approx 1 m x =\n  ln x -\n  (1 / (2 * x) +\n   (\\<Sum>k = Suc 0..<m.\n       bernoulli (Suc k) * inverse x ^ Suc k / real (Suc k)))\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "have \"?S = (\\<Sum>k=Suc 0..<m. bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = Suc 0..<m.\n        bernoulli (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n    (\\<Sum>k = Suc 0..<m.\n        bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))", "by (intro sum.cong refl) (simp_all add: bernoulli'_def)"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..<m.\n      bernoulli (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n  (\\<Sum>k = Suc 0..<m.\n      bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = Suc 0..<m.\n      bernoulli (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n  (\\<Sum>k = Suc 0..<m.\n      bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "have \"1 / (2 * x) + \\<dots> = \n               (\\<Sum>k=0..<m. bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (2 * x) +\n    (\\<Sum>k = Suc 0..<m.\n        bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n    (\\<Sum>k = 0..<m. bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))", "using m"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. 1 / (2 * x) +\n    (\\<Sum>k = Suc 0..<m.\n        bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n    (\\<Sum>k = 0..<m. bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))", "by (subst (2) sum.atLeast_Suc_lessThan) (simp_all add: field_simps)"], ["proof (state)\nthis:\n  1 / (2 * x) +\n  (\\<Sum>k = Suc 0..<m.\n      bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n  (\\<Sum>k = 0..<m. bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "also"], ["proof (state)\nthis:\n  1 / (2 * x) +\n  (\\<Sum>k = Suc 0..<m.\n      bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n  (\\<Sum>k = 0..<m. bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k))\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "have \"\\<dots> = (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<m.\n        bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n    (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  0 < m\n\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<m.\n        bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n    (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "by (subst sum.shift_bounds_Suc_ivl [symmetric]) (simp add: atLeastLessThanSuc_atLeastAtMost)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<m. bernoulli' (Suc k) * inverse x ^ Suc k / real (Suc k)) =\n  (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "finally"], ["proof (chain)\npicking this:\n  Polygamma_approx 1 m x =\n  ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "show ?thesis"], ["proof (prove)\nusing this:\n  Polygamma_approx 1 m x =\n  ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)\n\ngoal (1 subgoal):\n 1. Polygamma_approx 1 m x =\n    ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)", "."], ["proof (state)\nthis:\n  Polygamma_approx 1 m x =\n  ln x - (\\<Sum>k = Suc 0..m. bernoulli' k * inverse x ^ k / real k)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem\n  assumes m: \"m > 0\"\n  shows   ln_Gamma_real_asymptotics:\n            \"(\\<lambda>x. ln_Gamma x - ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n                     (\\<Sum>k = 1..<m. bernoulli (Suc k) / (real k * real (Suc k)) / x^k)))\n                \\<in> O(\\<lambda>x. 1 / x ^ m)\" (is ?th1)\n    and   Digamma_real_asymptotics:\n            \"(\\<lambda>x. Digamma x - (ln x - (\\<Sum>k=1..m. bernoulli' k / real k / x ^ k)))\n                \\<in> O(\\<lambda>x. 1 / (x ^ Suc m))\" (is ?th2)\n    and   Polygamma_real_asymptotics: \"j > 0 \\<Longrightarrow> \n             (\\<lambda>x. Polygamma j x - (- 1) ^ Suc j * (\\<Sum>k\\<le>m. bernoulli' k *\n                     pochhammer (real (Suc k)) (j - 1) / x ^ (k + j))) \n                \\<in> O(\\<lambda>x. 1 / x ^ (m+j+1))\" (is \"_ \\<Longrightarrow> ?th3\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln_Gamma x -\n        ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n         (\\<Sum>k = 1..<m.\n             bernoulli (Suc k) / (real k * real (Suc k)) / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ m) &&&\n    (\\<lambda>x.\n        Digamma x -\n        (ln x - (\\<Sum>k = 1..m. bernoulli' k / real k / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ Suc m) &&&\n    (0 < j \\<Longrightarrow>\n     (\\<lambda>x.\n         Polygamma j x -\n         (- 1) ^ Suc j *\n         (\\<Sum>k\\<le>m.\n             bernoulli' k * pochhammer (real (Suc k)) (j - 1) /\n             x ^ (k + j)))\n     \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1)))", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        ln_Gamma x -\n        ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n         (\\<Sum>k = 1..<m.\n             bernoulli (Suc k) / (real k * real (Suc k)) / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ m)\n 2. (\\<lambda>x.\n        Digamma x -\n        (ln x - (\\<Sum>k = 1..m. bernoulli' k / real k / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ Suc m)\n 3. 0 < j \\<Longrightarrow>\n    (\\<lambda>x.\n        Polygamma j x -\n        (- 1) ^ Suc j *\n        (\\<Sum>k\\<le>m.\n            bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))", "define G :: \"nat \\<Rightarrow> real \\<Rightarrow> real\" where \n    \"G = (\\<lambda>m. if m = 0 then ln_Gamma else Polygamma (m - 1))\""], ["proof (state)\nthis:\n  G = (\\<lambda>m. if m = 0 then ln_Gamma else Polygamma (m - 1))\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        ln_Gamma x -\n        ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n         (\\<Sum>k = 1..<m.\n             bernoulli (Suc k) / (real k * real (Suc k)) / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ m)\n 2. (\\<lambda>x.\n        Digamma x -\n        (ln x - (\\<Sum>k = 1..m. bernoulli' k / real k / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ Suc m)\n 3. 0 < j \\<Longrightarrow>\n    (\\<lambda>x.\n        Polygamma j x -\n        (- 1) ^ Suc j *\n        (\\<Sum>k\\<le>m.\n            bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))", "have *: \"(\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\"\n    if \"\\<And>x::real. x > 0 \\<Longrightarrow> Polygamma_approx j m x = h x\" for j h"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "have \"(\\<lambda>x. G j x - h x) \\<in> \n            \\<Theta>(\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\" (is \"_ \\<in> \\<Theta>(?f)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. G j x - h x)\n    \\<in> \\<Theta>(\\<lambda>x.\n                      (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)", "using that"], ["proof (prove)\nusing this:\n  0 < ?x \\<Longrightarrow> Polygamma_approx j m ?x = h ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. G j x - h x)\n    \\<in> \\<Theta>(\\<lambda>x.\n                      (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)", "by (intro bigthetaI_cong) (auto intro: eventually_mono[OF eventually_gt_at_top[of \"0::real\"]]\n            simp del: funpow.simps simp: higher_deriv_ln_Gamma_real G_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. G j x - h x)\n  \\<in> \\<Theta>(\\<lambda>x.\n                    (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. G j x - h x)\n  \\<in> \\<Theta>(\\<lambda>x.\n                    (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "have \"?f \\<in> O(\\<lambda>x::real. 1 / x ^ (m + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "using m"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "by (rule higher_deriv_lnGamma_stirling)"], ["proof (state)\nthis:\n  (\\<lambda>x. (deriv ^^ j) ln_Gamma x - Polygamma_approx j m x)\n  \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))", "."], ["proof (state)\nthis:\n  (\\<lambda>x. G j x - h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<And>x.\n      0 < x \\<Longrightarrow>\n      Polygamma_approx ?j m x = ?h x) \\<Longrightarrow>\n  (\\<lambda>x. G ?j x - ?h x) \\<in> O(\\<lambda>x. 1 / x ^ (m + ?j))\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        ln_Gamma x -\n        ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n         (\\<Sum>k = 1..<m.\n             bernoulli (Suc k) / (real k * real (Suc k)) / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ m)\n 2. (\\<lambda>x.\n        Digamma x -\n        (ln x - (\\<Sum>k = 1..m. bernoulli' k / real k / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ Suc m)\n 3. 0 < j \\<Longrightarrow>\n    (\\<lambda>x.\n        Polygamma j x -\n        (- 1) ^ Suc j *\n        (\\<Sum>k\\<le>m.\n            bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))", "note [[simproc del: simplify_landau_sum]]"], ["proof (state)\nthis:\n  TERM _\n\ngoal (3 subgoals):\n 1. (\\<lambda>x.\n        ln_Gamma x -\n        ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n         (\\<Sum>k = 1..<m.\n             bernoulli (Suc k) / (real k * real (Suc k)) / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ m)\n 2. (\\<lambda>x.\n        Digamma x -\n        (ln x - (\\<Sum>k = 1..m. bernoulli' k / real k / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ Suc m)\n 3. 0 < j \\<Longrightarrow>\n    (\\<lambda>x.\n        Polygamma j x -\n        (- 1) ^ Suc j *\n        (\\<Sum>k\\<le>m.\n            bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))", "from *[OF Polygamma_approx_0] assms"], ["proof (chain)\npicking this:\n  (\\<lambda>x.\n      G 0 x -\n      ((x - 1 / 2) * ln x - x + of_real (ln (2 * pi)) / 2 +\n       stirling_sum 0 m x))\n  \\<in> O(\\<lambda>x. 1 / x ^ (m + 0))\n  0 < m", "show ?th1"], ["proof (prove)\nusing this:\n  (\\<lambda>x.\n      G 0 x -\n      ((x - 1 / 2) * ln x - x + of_real (ln (2 * pi)) / 2 +\n       stirling_sum 0 m x))\n  \\<in> O(\\<lambda>x. 1 / x ^ (m + 0))\n  0 < m\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        ln_Gamma x -\n        ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n         (\\<Sum>k = 1..<m.\n             bernoulli (Suc k) / (real k * real (Suc k)) / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ m)", "by (simp add: G_def Polygamma_approx_0 stirling_sum_def field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      ln_Gamma x -\n      ((x - 1 / 2) * ln x - x + ln (2 * pi) / 2 +\n       (\\<Sum>k = 1..<m.\n           bernoulli (Suc k) / (real k * real (Suc k)) / x ^ k)))\n  \\<in> O(\\<lambda>x. 1 / x ^ m)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x.\n        Digamma x -\n        (ln x - (\\<Sum>k = 1..m. bernoulli' k / real k / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ Suc m)\n 2. 0 < j \\<Longrightarrow>\n    (\\<lambda>x.\n        Polygamma j x -\n        (- 1) ^ Suc j *\n        (\\<Sum>k\\<le>m.\n            bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))", "from *[OF Polygamma_approx_1_real'] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. 0 < x \\<Longrightarrow> 0 < x;\n   \\<And>x. 0 < x \\<Longrightarrow> 0 < m\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        G 1 x -\n                        (ln x -\n                         (\\<Sum>k = Suc 0..m.\n                             bernoulli' k * inverse x ^ k / real k)))\n                    \\<in> O(\\<lambda>x. 1 / x ^ (m + 1))\n  0 < m", "show ?th2"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. 0 < x \\<Longrightarrow> 0 < x;\n   \\<And>x. 0 < x \\<Longrightarrow> 0 < m\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        G 1 x -\n                        (ln x -\n                         (\\<Sum>k = Suc 0..m.\n                             bernoulli' k * inverse x ^ k / real k)))\n                    \\<in> O(\\<lambda>x. 1 / x ^ (m + 1))\n  0 < m\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        Digamma x -\n        (ln x - (\\<Sum>k = 1..m. bernoulli' k / real k / x ^ k)))\n    \\<in> O(\\<lambda>x. 1 / x ^ Suc m)", "by (simp add: G_def field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      Digamma x - (ln x - (\\<Sum>k = 1..m. bernoulli' k / real k / x ^ k)))\n  \\<in> O(\\<lambda>x. 1 / x ^ Suc m)\n\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow>\n    (\\<lambda>x.\n        Polygamma j x -\n        (- 1) ^ Suc j *\n        (\\<Sum>k\\<le>m.\n            bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))", "assume j: \"j > 0\""], ["proof (state)\nthis:\n  0 < j\n\ngoal (1 subgoal):\n 1. 0 < j \\<Longrightarrow>\n    (\\<lambda>x.\n        Polygamma j x -\n        (- 1) ^ Suc j *\n        (\\<Sum>k\\<le>m.\n            bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))", "from *[OF Polygamma_approx_ge_2_real, of \"j - 1\"] assms j"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>x. 0 < x \\<Longrightarrow> 0 < x;\n   \\<And>x. 0 < x \\<Longrightarrow> 0 < m\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        G (Suc (Suc (j - 1))) x -\n                        stirling_sum' (Suc (j - 1)) m x)\n                    \\<in> O(\\<lambda>x. 1 / x ^ (m + Suc (Suc (j - 1))))\n  0 < m\n  0 < j", "show ?th3"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x. 0 < x \\<Longrightarrow> 0 < x;\n   \\<And>x. 0 < x \\<Longrightarrow> 0 < m\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        G (Suc (Suc (j - 1))) x -\n                        stirling_sum' (Suc (j - 1)) m x)\n                    \\<in> O(\\<lambda>x. 1 / x ^ (m + Suc (Suc (j - 1))))\n  0 < m\n  0 < j\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        Polygamma j x -\n        (- 1) ^ Suc j *\n        (\\<Sum>k\\<le>m.\n            bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n    \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))", "by (simp add: G_def stirling_sum'_def power_add power_diff field_simps)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      Polygamma j x -\n      (- 1) ^ Suc j *\n      (\\<Sum>k\\<le>m.\n          bernoulli' k * pochhammer (real (Suc k)) (j - 1) / x ^ (k + j)))\n  \\<in> O(\\<lambda>x. 1 / x ^ (m + j + 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Asymptotics of the complex Gamma function\\<close>"], ["", "text \\<open>\n  The \\<open>m\\<close>-th order remainder of Stirling's formula for $\\log\\Gamma$ is $O(s^{-m})$ uniformly over\n  any complex cone $\\text{arg}(z) \\leq \\alpha$, $z\\neq 0$ for any angle\n  $\\alpha\\in(0, \\pi)$. This means that there is bounded by $c z^{-m}$ for some constant $c$ for\n  all $z$ in this cone.\n\\<close>"], ["", "context\n  fixes F and \\<alpha>\n  assumes \\<alpha>: \"\\<alpha> \\<in> {0<..<pi}\"\n  defines \"F \\<equiv> principal (complex_cone' \\<alpha> - {0})\"\nbegin"], ["", "lemma stirling_integral_bigo:\n  fixes m :: nat\n  assumes m: \"m > 0\"\n  shows   \"stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "obtain c where c: \"\\<And>s. s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow> norm (stirling_integral m s) \\<le> c / norm s ^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral m s)\n            \\<le> c / cmod s ^ m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using stirling_integral_bound'[OF \\<open>m > 0\\<close> \\<alpha>]"], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>s.\n          s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n          cmod (stirling_integral m s)\n          \\<le> c / cmod s ^ m) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral m s)\n            \\<le> c / cmod s ^ m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n  cmod (stirling_integral m ?s) \\<le> c / cmod ?s ^ m\n\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "have \"0 \\<le> norm (stirling_integral m 1 :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> cmod (stirling_integral m 1)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> cmod (stirling_integral m 1)\n\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "also"], ["proof (state)\nthis:\n  0 \\<le> cmod (stirling_integral m 1)\n\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "have \"\\<dots> \\<le> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (stirling_integral m 1) \\<le> c", "using c[of 1] \\<alpha>"], ["proof (prove)\nusing this:\n  1 \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n  cmod (stirling_integral m 1) \\<le> c / cmod 1 ^ m\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. cmod (stirling_integral m 1) \\<le> c", "by simp"], ["proof (state)\nthis:\n  cmod (stirling_integral m 1) \\<le> c\n\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> c", "have \"c \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. 0 \\<le> c", "."], ["proof (state)\nthis:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "have \"eventually (\\<lambda>s. s \\<in> complex_cone' \\<alpha> - {0}) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in F. s \\<in> complex_cone' \\<alpha> - {0}", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in principal (complex_cone' \\<alpha> - {0}).\n       s \\<in> complex_cone' \\<alpha> - {0}", "by (auto simp: eventually_principal)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in F. s \\<in> complex_cone' \\<alpha> - {0}\n\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "hence \"eventually (\\<lambda>s. norm (stirling_integral m s) \\<le>\n                     c * norm (1 / s ^ m)) F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in F. s \\<in> complex_cone' \\<alpha> - {0}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in F.\n       cmod (stirling_integral m s) \\<le> c * cmod (1 / s ^ m)", "by eventually_elim (use c in \\<open>simp add: norm_divide norm_power\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in F.\n     cmod (stirling_integral m s) \\<le> c * cmod (1 / s ^ m)\n\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "thus \"stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in F.\n     cmod (stirling_integral m s) \\<le> c * cmod (1 / s ^ m)\n\ngoal (1 subgoal):\n 1. stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)", "by (intro bigoI[of _ c]) auto"], ["proof (state)\nthis:\n  stirling_integral m \\<in> O[F](\\<lambda>s. 1 / s ^ m)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\n  The following is a more explicit statement of this:\n\\<close>"], ["", "theorem ln_Gamma_complex_asymptotics_explicit:\n  fixes m :: nat and \\<alpha> :: real\n  assumes \"m > 0\" and \"\\<alpha> \\<in> {0<..<pi}\"\n  obtains C :: real and R :: \"complex \\<Rightarrow> complex\"\n  where \"\\<forall>s::complex. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n               ln_Gamma s = (s - 1/2) * ln s - s + ln (2 * pi) / 2 +\n                            (\\<Sum>k=1..<m. bernoulli (k+1) / (k * (k+1) * s ^ k)) - R s\"\n    and \"\\<forall>s. s \\<noteq> 0 \\<and> \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow> norm (R s) \\<le> C / norm s ^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>R C.\n        \\<lbrakk>\\<forall>s.\n                    s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n                    ln_Gamma s =\n                    (s - 1 / 2) * Ln s - s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (k + 1)) /\n                        (of_nat (k * (k + 1)) * s ^ k)) -\n                    R s;\n         \\<forall>s.\n            s \\<noteq> 0 \\<and>\n            \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n            cmod (R s) \\<le> C / cmod s ^ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>R C.\n        \\<lbrakk>\\<forall>s.\n                    s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n                    ln_Gamma s =\n                    (s - 1 / 2) * Ln s - s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (k + 1)) /\n                        (of_nat (k * (k + 1)) * s ^ k)) -\n                    R s;\n         \\<forall>s.\n            s \\<noteq> 0 \\<and>\n            \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n            cmod (R s) \\<le> C / cmod s ^ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain c where c: \"\\<And>s. s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow> norm (stirling_integral m s) \\<le> c / norm s ^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral m s)\n            \\<le> c / cmod s ^ m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using stirling_integral_bound'[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>c.\n      (\\<And>s.\n          s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n          cmod (stirling_integral m s)\n          \\<le> c / cmod s ^ m) \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        (\\<And>s.\n            s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n            cmod (stirling_integral m s)\n            \\<le> c / cmod s ^ m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n  cmod (stirling_integral m ?s) \\<le> c / cmod ?s ^ m\n\ngoal (1 subgoal):\n 1. (\\<And>R C.\n        \\<lbrakk>\\<forall>s.\n                    s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n                    ln_Gamma s =\n                    (s - 1 / 2) * Ln s - s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (k + 1)) /\n                        (of_nat (k * (k + 1)) * s ^ k)) -\n                    R s;\n         \\<forall>s.\n            s \\<noteq> 0 \\<and>\n            \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n            cmod (R s) \\<le> C / cmod s ^ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"0 \\<le> norm (stirling_integral m 1 :: complex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> cmod (stirling_integral m 1)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> cmod (stirling_integral m 1)\n\ngoal (1 subgoal):\n 1. (\\<And>R C.\n        \\<lbrakk>\\<forall>s.\n                    s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n                    ln_Gamma s =\n                    (s - 1 / 2) * Ln s - s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (k + 1)) /\n                        (of_nat (k * (k + 1)) * s ^ k)) -\n                    R s;\n         \\<forall>s.\n            s \\<noteq> 0 \\<and>\n            \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n            cmod (R s) \\<le> C / cmod s ^ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  0 \\<le> cmod (stirling_integral m 1)\n\ngoal (1 subgoal):\n 1. (\\<And>R C.\n        \\<lbrakk>\\<forall>s.\n                    s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n                    ln_Gamma s =\n                    (s - 1 / 2) * Ln s - s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (k + 1)) /\n                        (of_nat (k * (k + 1)) * s ^ k)) -\n                    R s;\n         \\<forall>s.\n            s \\<noteq> 0 \\<and>\n            \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n            cmod (R s) \\<le> C / cmod s ^ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<dots> \\<le> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (stirling_integral m 1) \\<le> c", "using c[of 1] assms"], ["proof (prove)\nusing this:\n  1 \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n  cmod (stirling_integral m 1) \\<le> c / cmod 1 ^ m\n  0 < m\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. cmod (stirling_integral m 1) \\<le> c", "by simp"], ["proof (state)\nthis:\n  cmod (stirling_integral m 1) \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<And>R C.\n        \\<lbrakk>\\<forall>s.\n                    s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n                    ln_Gamma s =\n                    (s - 1 / 2) * Ln s - s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (k + 1)) /\n                        (of_nat (k * (k + 1)) * s ^ k)) -\n                    R s;\n         \\<forall>s.\n            s \\<noteq> 0 \\<and>\n            \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n            cmod (R s) \\<le> C / cmod s ^ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> c", "have \"c \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. 0 \\<le> c", "."], ["proof (state)\nthis:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. (\\<And>R C.\n        \\<lbrakk>\\<forall>s.\n                    s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n                    ln_Gamma s =\n                    (s - 1 / 2) * Ln s - s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (k + 1)) /\n                        (of_nat (k * (k + 1)) * s ^ k)) -\n                    R s;\n         \\<forall>s.\n            s \\<noteq> 0 \\<and>\n            \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n            cmod (R s) \\<le> C / cmod s ^ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define R where \"R = (\\<lambda>s::complex. stirling_integral m s / of_nat m)\""], ["proof (state)\nthis:\n  R = (\\<lambda>s. stirling_integral m s / of_nat m)\n\ngoal (1 subgoal):\n 1. (\\<And>R C.\n        \\<lbrakk>\\<forall>s.\n                    s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n                    ln_Gamma s =\n                    (s - 1 / 2) * Ln s - s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (k + 1)) /\n                        (of_nat (k * (k + 1)) * s ^ k)) -\n                    R s;\n         \\<forall>s.\n            s \\<noteq> 0 \\<and>\n            \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n            cmod (R s) \\<le> C / cmod s ^ m\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (rule that)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>s.\n       s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n       ln_Gamma s =\n       (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n       (\\<Sum>k = 1..<m.\n           complex_of_real (bernoulli (k + 1)) /\n           (of_nat (k * (k + 1)) * s ^ k)) -\n       ?R s\n 2. \\<forall>s.\n       s \\<noteq> 0 \\<and>\n       \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n       cmod (?R s) \\<le> ?C / cmod s ^ m", "from ln_Gamma_stirling_complex[of _ m] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>?s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0; 0 < m\\<rbrakk>\n  \\<Longrightarrow> ln_Gamma ?s =\n                    (?s - 1 / 2) * Ln ?s - ?s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (Suc k)) /\n                        (of_nat k * of_nat (Suc k) * ?s ^ k)) -\n                    stirling_integral m ?s / of_nat m\n  0 < m\n  \\<alpha> \\<in> {0<..<pi}", "show\n           \"\\<forall>s::complex. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n               ln_Gamma s = (s - 1 / 2) * ln s - s + ln (2 * pi) / 2 +\n               (\\<Sum>k=1..<m. bernoulli (k+1) / (k * (k+1) * s ^ k)) - R s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0; 0 < m\\<rbrakk>\n  \\<Longrightarrow> ln_Gamma ?s =\n                    (?s - 1 / 2) * Ln ?s - ?s +\n                    complex_of_real (ln (2 * pi) / 2) +\n                    (\\<Sum>k = 1..<m.\n                        complex_of_real (bernoulli (Suc k)) /\n                        (of_nat k * of_nat (Suc k) * ?s ^ k)) -\n                    stirling_integral m ?s / of_nat m\n  0 < m\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n       ln_Gamma s =\n       (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n       (\\<Sum>k = 1..<m.\n           complex_of_real (bernoulli (k + 1)) /\n           (of_nat (k * (k + 1)) * s ^ k)) -\n       R s", "by (auto simp add: R_def algebra_simps)"], ["proof (state)\nthis:\n  \\<forall>s.\n     s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0 \\<longrightarrow>\n     ln_Gamma s =\n     (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) +\n     (\\<Sum>k = 1..<m.\n         complex_of_real (bernoulli (k + 1)) /\n         (of_nat (k * (k + 1)) * s ^ k)) -\n     R s\n\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s \\<noteq> 0 \\<and>\n       \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n       cmod (R s) \\<le> ?C / cmod s ^ m", "show \"\\<forall>s. s \\<noteq> 0 \\<and> \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow> cmod (R s) \\<le> c / real m / cmod s ^ m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s.\n       s \\<noteq> 0 \\<and>\n       \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n       cmod (R s) \\<le> c / real m / cmod s ^ m", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<noteq> 0; \\<bar>arg s\\<bar> \\<le> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> cmod (R s) \\<le> c / real m / cmod s ^ m", "case (1 s)"], ["proof (state)\nthis:\n  s \\<noteq> 0\n  \\<bar>arg s\\<bar> \\<le> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<noteq> 0; \\<bar>arg s\\<bar> \\<le> \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> cmod (R s) \\<le> c / real m / cmod s ^ m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cmod (R s) \\<le> c / real m / cmod s ^ m", "using 1 c[of s] assms"], ["proof (prove)\nusing this:\n  s \\<noteq> 0\n  \\<bar>arg s\\<bar> \\<le> \\<alpha>\n  s \\<in> complex_cone' \\<alpha> - {0} \\<Longrightarrow>\n  cmod (stirling_integral m s) \\<le> c / cmod s ^ m\n  0 < m\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. cmod (R s) \\<le> c / real m / cmod s ^ m", "by (auto simp: complex_cone_altdef abs_le_iff R_def norm_divide field_simps)"], ["proof (state)\nthis:\n  cmod (R s) \\<le> c / real m / cmod s ^ m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s.\n     s \\<noteq> 0 \\<and> \\<bar>arg s\\<bar> \\<le> \\<alpha> \\<longrightarrow>\n     cmod (R s) \\<le> c / real m / cmod s ^ m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Lastly, we can also derive the asymptotics of $\\Gamma$ itself:\n  \\[\\Gamma(z) \\sim \\sqrt{2\\pi / z} \\left(\\frac{z}{e}\\right)^z\\]\n  uniformly for $|z|\\to\\infty$ within the cone $\\text{arg}(z) \\leq \\alpha$ for $\\alpha\\in(0,\\pi)$:\n\\<close>"], ["", "context\n  fixes F and \\<alpha>\n  assumes \\<alpha>: \"\\<alpha> \\<in> {0<..<pi}\"\n  defines \"F \\<equiv> inf at_infinity (principal (complex_cone' \\<alpha>))\"\nbegin"], ["", "lemma Gamma_complex_asymp_equiv:\n  \"Gamma \\<sim>[F] (\\<lambda>s. sqrt (2 * pi) * (s / exp 1) powr s / s powr (1 / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "define I :: \"complex \\<Rightarrow> complex\" where \"I = stirling_integral 1\""], ["proof (state)\nthis:\n  I = stirling_integral 1\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "have \"eventually (\\<lambda>s. s \\<in> complex_cone' \\<alpha>) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in F. s \\<in> complex_cone' \\<alpha>", "by (auto simp: eventually_inf_principal F_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in F. s \\<in> complex_cone' \\<alpha>\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in F. s \\<in> complex_cone' \\<alpha>\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "have \"eventually (\\<lambda>s. s \\<noteq> 0) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in F. s \\<noteq> 0", "unfolding F_def eventually_inf_principal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity.\n       x \\<in> complex_cone' \\<alpha> \\<longrightarrow> x \\<noteq> 0", "using eventually_not_equal_at_infinity"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_infinity. x \\<noteq> ?a\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity.\n       x \\<in> complex_cone' \\<alpha> \\<longrightarrow> x \\<noteq> 0", "by eventually_elim auto"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in F. s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F s in F. s \\<in> complex_cone' \\<alpha>\n  \\<forall>\\<^sub>F s in F. s \\<noteq> 0", "have \"eventually (\\<lambda>s. Gamma s =\n                     sqrt (2 * pi) * (s / exp 1) powr s / s powr (1 / 2) / exp (I s)) F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in F. s \\<in> complex_cone' \\<alpha>\n  \\<forall>\\<^sub>F s in F. s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F s in F.\n       Gamma s =\n       complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s /\n       s powr (1 / 2) /\n       exp (I s)", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "case (elim s)"], ["proof (state)\nthis:\n  s \\<in> complex_cone' \\<alpha>\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "from elim"], ["proof (chain)\npicking this:\n  s \\<in> complex_cone' \\<alpha>\n  s \\<noteq> 0", "have s': \"s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\""], ["proof (prove)\nusing this:\n  s \\<in> complex_cone' \\<alpha>\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "using complex_cone_inter_nonpos_Reals[of \"-\\<alpha>\" \\<alpha>] \\<alpha>"], ["proof (prove)\nusing this:\n  s \\<in> complex_cone' \\<alpha>\n  s \\<noteq> 0\n  \\<lbrakk>- pi < - \\<alpha>; - \\<alpha> \\<le> \\<alpha>;\n   \\<alpha> < pi\\<rbrakk>\n  \\<Longrightarrow> complex_cone' \\<alpha> \\<inter>\n                    \\<real>\\<^sub>\\<le>\\<^sub>0 =\n                    {0}\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "from elim"], ["proof (chain)\npicking this:\n  s \\<in> complex_cone' \\<alpha>\n  s \\<noteq> 0", "have [simp]: \"s \\<noteq> 0\""], ["proof (prove)\nusing this:\n  s \\<in> complex_cone' \\<alpha>\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "from s'"], ["proof (chain)\npicking this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "have \"Gamma s = exp (ln_Gamma s)\""], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. Gamma s = exp (ln_Gamma s)", "unfolding Gamma_complex_altdef"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (if s \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0 then 0 else exp (ln_Gamma s)) =\n    exp (ln_Gamma s)", "using nonpos_Ints_subset_nonpos_Reals"], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n  \\<int>\\<^sub>\\<le>\\<^sub>0 \\<subseteq> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. (if s \\<in> \\<int>\\<^sub>\\<le>\\<^sub>0 then 0 else exp (ln_Gamma s)) =\n    exp (ln_Gamma s)", "by auto"], ["proof (state)\nthis:\n  Gamma s = exp (ln_Gamma s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "also"], ["proof (state)\nthis:\n  Gamma s = exp (ln_Gamma s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "from s'"], ["proof (chain)\npicking this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0", "have \"ln_Gamma s = (s-1/2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) - I s\""], ["proof (prove)\nusing this:\n  s \\<notin> \\<real>\\<^sub>\\<le>\\<^sub>0\n\ngoal (1 subgoal):\n 1. ln_Gamma s =\n    (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) - I s", "by (subst ln_Gamma_stirling_complex[of _ 1]) (simp_all add: exp_add exp_diff I_def)"], ["proof (state)\nthis:\n  ln_Gamma s =\n  (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) - I s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "also"], ["proof (state)\nthis:\n  ln_Gamma s =\n  (s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) - I s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "have \"exp \\<dots> = exp ((s - 1 / 2) * Ln s) / exp s *\n                        exp (complex_of_real (ln (2 * pi) / 2)) / exp (I s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) - I s) =\n    exp ((s - 1 / 2) * Ln s) / exp s *\n    exp (complex_of_real (ln (2 * pi) / 2)) /\n    exp (I s)", "unfolding exp_diff exp_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. exp ((s - 1 / 2) * Ln s) / exp s *\n    exp (complex_of_real (ln (2 * pi) / 2)) /\n    exp (I s) =\n    exp ((s - 1 / 2) * Ln s) / exp s *\n    exp (complex_of_real (ln (2 * pi) / 2)) /\n    exp (I s)", "by (simp add: exp_diff exp_add)"], ["proof (state)\nthis:\n  exp ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) - I s) =\n  exp ((s - 1 / 2) * Ln s) / exp s *\n  exp (complex_of_real (ln (2 * pi) / 2)) /\n  exp (I s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "also"], ["proof (state)\nthis:\n  exp ((s - 1 / 2) * Ln s - s + complex_of_real (ln (2 * pi) / 2) - I s) =\n  exp ((s - 1 / 2) * Ln s) / exp s *\n  exp (complex_of_real (ln (2 * pi) / 2)) /\n  exp (I s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "have \"exp ((s - 1 / 2) * Ln s) = s powr (s - 1 / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp ((s - 1 / 2) * Ln s) = s powr (s - 1 / 2)", "by (simp add: powr_def)"], ["proof (state)\nthis:\n  exp ((s - 1 / 2) * Ln s) = s powr (s - 1 / 2)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "also"], ["proof (state)\nthis:\n  exp ((s - 1 / 2) * Ln s) = s powr (s - 1 / 2)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "have \"exp (complex_of_real (ln (2 * pi) / 2)) = sqrt (2 * pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (complex_of_real (ln (2 * pi) / 2)) =\n    complex_of_real (sqrt (2 * pi))", "by (subst exp_of_real) (auto simp: powr_def simp flip: powr_half_sqrt)"], ["proof (state)\nthis:\n  exp (complex_of_real (ln (2 * pi) / 2)) = complex_of_real (sqrt (2 * pi))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "also"], ["proof (state)\nthis:\n  exp (complex_of_real (ln (2 * pi) / 2)) = complex_of_real (sqrt (2 * pi))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "have \"exp s = exp 1 powr s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp s = exp 1 powr s", "by (simp add: powr_def)"], ["proof (state)\nthis:\n  exp s = exp 1 powr s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "also"], ["proof (state)\nthis:\n  exp s = exp 1 powr s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "have \"s powr (s - 1 / 2) / exp 1 powr s = (s powr s / exp 1 powr s) / s powr (1/2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s powr (s - 1 / 2) / exp 1 powr s =\n    s powr s / exp 1 powr s / s powr (1 / 2)", "by (subst powr_diff) auto"], ["proof (state)\nthis:\n  s powr (s - 1 / 2) / exp 1 powr s =\n  s powr s / exp 1 powr s / s powr (1 / 2)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "also"], ["proof (state)\nthis:\n  s powr (s - 1 / 2) / exp 1 powr s =\n  s powr s / exp 1 powr s / s powr (1 / 2)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "have *: \"Ln (s / exp 1) = Ln s - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ln (s / exp 1) = Ln s - 1", "using Ln_divide_of_real[of \"exp 1\" s]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < exp 1; s \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> Ln (s / complex_of_real (exp 1)) =\n                    Ln s - complex_of_real (ln (exp 1))\n\ngoal (1 subgoal):\n 1. Ln (s / exp 1) = Ln s - 1", "by (simp flip: exp_of_real)"], ["proof (state)\nthis:\n  Ln (s / exp 1) = Ln s - 1\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "hence \"s powr s / exp 1 powr s = (s / exp 1) powr s\""], ["proof (prove)\nusing this:\n  Ln (s / exp 1) = Ln s - 1\n\ngoal (1 subgoal):\n 1. s powr s / exp 1 powr s = (s / exp 1) powr s", "unfolding powr_def"], ["proof (prove)\nusing this:\n  Ln (s / exp 1) = Ln s - 1\n\ngoal (1 subgoal):\n 1. (if s = 0 then 0 else exp (s * Ln s)) /\n    (if exp 1 = 0 then 0 else exp (s * Ln (exp 1))) =\n    (if s / exp 1 = 0 then 0 else exp (s * Ln (s / exp 1)))", "by (subst *) (auto simp: exp_diff field_simps)"], ["proof (state)\nthis:\n  s powr s / exp 1 powr s = (s / exp 1) powr s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s \\<in> complex_cone' \\<alpha>; s \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Gamma s =\n                         complex_of_real (sqrt (2 * pi)) *\n                         (s / exp 1) powr s /\n                         s powr (1 / 2) /\n                         exp (I s)", "finally"], ["proof (chain)\npicking this:\n  Gamma s =\n  (s / exp 1) powr s / s powr (1 / 2) * complex_of_real (sqrt (2 * pi)) /\n  exp (I s)", "show \"Gamma s = sqrt (2 * pi) * (s / exp 1) powr s / s powr (1 / 2) / exp (I s)\""], ["proof (prove)\nusing this:\n  Gamma s =\n  (s / exp 1) powr s / s powr (1 / 2) * complex_of_real (sqrt (2 * pi)) /\n  exp (I s)\n\ngoal (1 subgoal):\n 1. Gamma s =\n    complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s / s powr (1 / 2) /\n    exp (I s)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  Gamma s =\n  complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s / s powr (1 / 2) /\n  exp (I s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F s in F.\n     Gamma s =\n     complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s / s powr (1 / 2) /\n     exp (I s)\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "hence \"Gamma \\<sim>[F] (\\<lambda>s. sqrt (2 * pi) * (s / exp 1) powr s / s powr (1 / 2) / exp (I s))\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F s in F.\n     Gamma s =\n     complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s / s powr (1 / 2) /\n     exp (I s)\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2) /\n                        exp (I s))", "by (rule asymp_equiv_refl_ev)"], ["proof (state)\nthis:\n  Gamma \\<sim>[F] (\\<lambda>s.\n                      complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s /\n                      s powr (1 / 2) /\n                      exp (I s))\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "also"], ["proof (state)\nthis:\n  Gamma \\<sim>[F] (\\<lambda>s.\n                      complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s /\n                      s powr (1 / 2) /\n                      exp (I s))\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "have \"\\<dots> \\<sim>[F] (\\<lambda>s. sqrt (2 * pi) * (s / exp 1) powr s / s powr (1 / 2) / 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s /\n        s powr (1 / 2) /\n        exp (I s)) \\<sim>[F] (\\<lambda>s.\n                                 complex_of_real (sqrt (2 * pi)) *\n                                 (s / exp 1) powr s /\n                                 s powr (1 / 2) /\n                                 1)", "proof (intro asymp_equiv_intros)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "have \"F \\<le> principal (complex_cone' \\<alpha> - {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<le> principal (complex_cone' \\<alpha> - {0})", "unfolding le_principal F_def eventually_inf_principal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity.\n       x \\<in> complex_cone' \\<alpha> \\<longrightarrow>\n       x \\<in> complex_cone' \\<alpha> - {0}", "using eventually_not_equal_at_infinity"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F x in at_infinity. x \\<noteq> ?a\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity.\n       x \\<in> complex_cone' \\<alpha> \\<longrightarrow>\n       x \\<in> complex_cone' \\<alpha> - {0}", "by eventually_elim auto"], ["proof (state)\nthis:\n  F \\<le> principal (complex_cone' \\<alpha> - {0})\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "moreover"], ["proof (state)\nthis:\n  F \\<le> principal (complex_cone' \\<alpha> - {0})\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "have \"I \\<in> O[principal (complex_cone' \\<alpha> - {0})](\\<lambda>s. 1 / s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<in> O[principal (complex_cone' \\<alpha> - {0})]((/) 1)", "using stirling_integral_bigo[of \\<alpha> 1] \\<alpha>"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<alpha> \\<in> {0<..<pi}; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> stirling_integral 1\n                    \\<in> O[principal\n                             (complex_cone' \\<alpha> -\n                              {0})](\\<lambda>s. 1 / s ^ 1)\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. I \\<in> O[principal (complex_cone' \\<alpha> - {0})]((/) 1)", "unfolding F_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<alpha> \\<in> {0<..<pi}; 0 < 1\\<rbrakk>\n  \\<Longrightarrow> stirling_integral 1\n                    \\<in> O[principal\n                             (complex_cone' \\<alpha> -\n                              {0})](\\<lambda>s. 1 / s ^ 1)\n  \\<alpha> \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. I \\<in> O[principal (complex_cone' \\<alpha> - {0})]((/) 1)", "by (simp add: I_def)"], ["proof (state)\nthis:\n  I \\<in> O[principal (complex_cone' \\<alpha> - {0})]((/) 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "ultimately"], ["proof (chain)\npicking this:\n  F \\<le> principal (complex_cone' \\<alpha> - {0})\n  I \\<in> O[principal (complex_cone' \\<alpha> - {0})]((/) 1)", "have \"I \\<in> O[F](\\<lambda>s. 1 / s)\""], ["proof (prove)\nusing this:\n  F \\<le> principal (complex_cone' \\<alpha> - {0})\n  I \\<in> O[principal (complex_cone' \\<alpha> - {0})]((/) 1)\n\ngoal (1 subgoal):\n 1. I \\<in> O[F]((/) 1)", "by (rule landau_o.big.filter_mono)"], ["proof (state)\nthis:\n  I \\<in> O[F]((/) 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "also"], ["proof (state)\nthis:\n  I \\<in> O[F]((/) 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "have \"(\\<lambda>s. 1 / s) \\<in> o[F](\\<lambda>s. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (/) 1 \\<in> o[F](\\<lambda>s. 1)", "proof (rule landau_o.smallI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. cmod (1 / x) \\<le> c * cmod 1", "fix c :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. cmod (1 / x) \\<le> c * cmod 1", "assume c: \"c > 0\""], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. cmod (1 / x) \\<le> c * cmod 1", "hence \"eventually (\\<lambda>z::complex. norm z \\<ge> 1 / c) at_infinity\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at_infinity. 1 / c \\<le> cmod z", "by (auto simp: eventually_at_infinity)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at_infinity. 1 / c \\<le> cmod z\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. cmod (1 / x) \\<le> c * cmod 1", "moreover"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at_infinity. 1 / c \\<le> cmod z\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. cmod (1 / x) \\<le> c * cmod 1", "have \"eventually (\\<lambda>z::complex. z \\<noteq> 0) at_infinity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in at_infinity. z \\<noteq> 0", "by (rule eventually_not_equal_at_infinity)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in at_infinity. z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       0 < c \\<Longrightarrow>\n       \\<forall>\\<^sub>F x in F. cmod (1 / x) \\<le> c * cmod 1", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>\\<^sub>F z in at_infinity. 1 / c \\<le> cmod z\n  \\<forall>\\<^sub>F z in at_infinity. z \\<noteq> 0", "show \"eventually (\\<lambda>z::complex. norm (1 / z) \\<le> c * norm (1 :: complex)) F\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in at_infinity. 1 / c \\<le> cmod z\n  \\<forall>\\<^sub>F z in at_infinity. z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F z in F. cmod (1 / z) \\<le> c * cmod 1", "unfolding F_def eventually_inf_principal"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F z in at_infinity. 1 / c \\<le> cmod z\n  \\<forall>\\<^sub>F z in at_infinity. z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_infinity.\n       x \\<in> complex_cone' \\<alpha> \\<longrightarrow>\n       cmod (1 / x) \\<le> c * cmod 1", "by eventually_elim (use \\<open>c > 0\\<close> in \\<open>auto simp: norm_divide field_simps\\<close>)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F z in F. cmod (1 / z) \\<le> c * cmod 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (/) 1 \\<in> o[F](\\<lambda>s. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "finally"], ["proof (chain)\npicking this:\n  I \\<in> o[F](\\<lambda>s. 1)", "have \"I \\<in> o[F](\\<lambda>s. 1)\""], ["proof (prove)\nusing this:\n  I \\<in> o[F](\\<lambda>s. 1)\n\ngoal (1 subgoal):\n 1. I \\<in> o[F](\\<lambda>s. 1)", "."], ["proof (state)\nthis:\n  I \\<in> o[F](\\<lambda>s. 1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "from smalloD_tendsto[OF this]"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. I x / 1) \\<longlongrightarrow> 0) F", "have [tendsto_intros]: \"(I \\<longlongrightarrow> 0) F\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. I x / 1) \\<longlongrightarrow> 0) F\n\ngoal (1 subgoal):\n 1. (I \\<longlongrightarrow> 0) F", "by simp"], ["proof (state)\nthis:\n  (I \\<longlongrightarrow> 0) F\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "show \"(\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)", "by (rule asymp_equivI' tendsto_eq_intros refl | simp)+"], ["proof (state)\nthis:\n  (\\<lambda>x. exp (I x)) \\<sim>[F] (\\<lambda>x. 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s /\n      s powr (1 / 2) /\n      exp (I s)) \\<sim>[F] (\\<lambda>s.\n                               complex_of_real (sqrt (2 * pi)) *\n                               (s / exp 1) powr s /\n                               s powr (1 / 2) /\n                               1)\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "finally"], ["proof (chain)\npicking this:\n  (\\<And>c d.\n      c \\<sim>[F] d \\<Longrightarrow> c \\<sim>[F] d) \\<Longrightarrow>\n  Gamma \\<sim>[F] (\\<lambda>a.\n                      complex_of_real (sqrt (2 * pi)) * (a / exp 1) powr a /\n                      a powr (1 / 2) /\n                      1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>c d.\n      c \\<sim>[F] d \\<Longrightarrow> c \\<sim>[F] d) \\<Longrightarrow>\n  Gamma \\<sim>[F] (\\<lambda>a.\n                      complex_of_real (sqrt (2 * pi)) * (a / exp 1) powr a /\n                      a powr (1 / 2) /\n                      1)\n\ngoal (1 subgoal):\n 1. Gamma \\<sim>[F] (\\<lambda>s.\n                        complex_of_real (sqrt (2 * pi)) *\n                        (s / exp 1) powr s /\n                        s powr (1 / 2))", "by simp"], ["proof (state)\nthis:\n  Gamma \\<sim>[F] (\\<lambda>s.\n                      complex_of_real (sqrt (2 * pi)) * (s / exp 1) powr s /\n                      s powr (1 / 2))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}