{"file_name": "/home/qj213/afp-2021-10-22/thys/Fermat3_4/Quad_Form.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Fermat3_4", "problem_names": ["lemma best_division_abs: \"(n::int) > 0 \\<Longrightarrow> \\<exists> k. 2 * \\<bar>a - k*n\\<bar> \\<le> n\"", "lemma prime_power_dvd_cancel_right:\n  \"p ^ n dvd a\" if \"prime (p::'a::semiring_gcd)\" \"\\<not> p dvd b\" \"p ^ n dvd a * b\"", "lemma abs_eq_impl_unitfactor: \"\\<bar>a::int\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> \\<exists> u. a = u*b \\<and> \\<bar>u\\<bar>=1\"", "lemma prime_3_nat: \"prime (3::nat)\"", "lemma qfN_pos: \"\\<lbrakk> N \\<ge> 1; is_qfN A N \\<rbrakk> \\<Longrightarrow> A \\<ge> 0\"", "lemma qfN_zero: \"\\<lbrakk> (N::int) \\<ge> 1; a^2 + N*b^2 = 0 \\<rbrakk> \\<Longrightarrow> (a = 0 \\<and> b = 0)\"", "lemma qfN_mult1: \"((a::int)^2 + N*b^2)*(c^2 + N*d^2)\n  = (a*c+N*b*d)^2 + N*(a*d-b*c)^2\"", "lemma qfN_mult2: \"((a::int)^2 + N*b^2)*(c^2 + N*d^2)\n  = (a*c-N*b*d)^2 + N*(a*d+b*c)^2\"", "lemma qfN_div_prime:\n  fixes p :: int\n  assumes ass: \"prime (p^2+N*q^2) \\<and> (p^2+N*q^2) dvd (a^2+N*b^2)\"\n  shows \"\\<exists> u v. a^2+N*b^2 = (u^2+N*v^2)*(p^2+N*q^2)\n                \\<and> (\\<exists> e. a = p*u+e*N*q*v \\<and> b = p*v - e*q*u \\<and> \\<bar>e\\<bar>=1)\"", "lemma qfN_power_div_prime:\n  fixes P :: int\n  assumes ass: \"prime P \\<and> odd P \\<and> P dvd A \\<and> P^n = p^2+N*q^2\n  \\<and> A^n = a^2+N*b^2 \\<and> coprime a b \\<and> coprime p (N*q) \\<and> n>0\"\n  shows \"\\<exists> u v. a^2+N*b^2 = (u^2 + N*v^2)*(p^2+N*q^2) \\<and> coprime u v\n                \\<and> (\\<exists> e. a = p*u+e*N*q*v \\<and> b = p*v-e*q*u \\<and> \\<bar>e\\<bar> = 1)\"", "lemma qfN_primedivisor_not:\n  assumes ass: \"prime P \\<and> Q > 0 \\<and> is_qfN (P*Q) N \\<and> \\<not> is_qfN P N\"\n  shows \"\\<exists> R. (prime R \\<and> R dvd Q \\<and> \\<not> is_qfN R N)\"", "lemma prime_factor_int:\n  fixes k :: int\n  assumes \"\\<bar>k\\<bar> \\<noteq> 1\"\n  obtains p where \"prime p\" \"p dvd k\"", "lemma qfN_oddprime_cube:\n  \"\\<lbrakk> prime (p^2+N*q^2::int); odd (p^2+N*q^2); p \\<noteq> 0; N \\<ge> 1 \\<rbrakk>\n  \\<Longrightarrow> \\<exists> a b. (p^2+N*q^2)^3 = a^2 + N*b^2 \\<and> coprime a (N*b)\"", "lemma qfN_prime_unique:\n  \"\\<lbrakk> prime (a^2+N*b^2::int); N > 1; a^2+N*b^2 = c^2+N*d^2 \\<rbrakk>\n  \\<Longrightarrow> (\\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> \\<bar>b\\<bar> = \\<bar>d\\<bar>)\"", "lemma qfN_square_prime:\n  assumes ass:\n  \"prime (p^2+N*q^2::int) \\<and> N>1 \\<and> (p^2+N*q^2)^2 = r^2+N*s^2 \\<and> coprime r s\"\n  shows \"\\<bar>r\\<bar> = \\<bar>p^2-N*q^2\\<bar> \\<and> \\<bar>s\\<bar> = \\<bar>2*p*q\\<bar>\"", "lemma qfN_cube_prime:\n  assumes ass: \"prime (p^2 + N*q^2::int) \\<and> N > 1\n  \\<and> (p^2 + N*q^2)^3 = a^2 + N*b^2 \\<and> coprime a b\"\n  shows \"\\<bar>a\\<bar> = \\<bar>p^3- 3*N*p*q^2\\<bar> \\<and> \\<bar>b\\<bar> = \\<bar>3*p^2*q-N*q^3\\<bar>\"", "lemma qf3_even: \"even (a^2+3*b^2) \\<Longrightarrow> \\<exists> B. a^2+3*b^2 = 4*B \\<and> is_qfN B 3\"", "lemma qf3_even_general: \"\\<lbrakk> is_qfN A 3; even A \\<rbrakk>\n  \\<Longrightarrow> \\<exists> B. A = 4*B \\<and> is_qfN B 3\"", "lemma qf3_oddprimedivisor_not:\n  assumes ass: \"prime P \\<and> odd P \\<and> Q>0 \\<and> is_qfN (P*Q) 3 \\<and> \\<not> is_qfN P 3\"\n  shows \"\\<exists> R. prime R \\<and> odd R \\<and> R dvd Q \\<and> \\<not> is_qfN R 3\"", "lemma qf3_oddprimedivisor:\n  \"\\<lbrakk> prime (P::int); odd P; coprime a b; P dvd (a^2+3*b^2) \\<rbrakk>\n  \\<Longrightarrow> is_qfN P 3\"", "lemma qf3_cube_prime_impl_cube_form:\n  assumes ab_relprime: \"coprime a b\" and abP: \"P^3 = a^2 + 3*b^2\"\n  and P: \"prime P \\<and> odd P\"\n  shows \"is_cube_form a b\"", "lemma cube_form_mult: \"\\<lbrakk> is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1 \\<rbrakk>\n  \\<Longrightarrow> is_cube_form (a*c+e*3*b*d) (a*d-e*b*c)\"", "lemma qf3_cube_primelist_impl_cube_form: \"\\<lbrakk> (\\<forall>p\\<in>set_mset ps. prime p); odd (int (\\<Prod>i\\<in>#ps. i)) \\<rbrakk> \\<Longrightarrow>\n  (!! a b. coprime a b \\<Longrightarrow> a^2 + 3*b^2 = (int(\\<Prod>i\\<in>#ps. i))^3 \\<Longrightarrow> is_cube_form a b)\"", "lemma qf3_cube_impl_cube_form:\n  assumes ass: \"coprime a b \\<and> a^2 + 3*b^2 = w^3 \\<and> odd w\"\n  shows \"is_cube_form a b\"", "lemma Legendre_zmult: \"\\<lbrakk> p > 2; prime p \\<rbrakk>\n  \\<Longrightarrow> (Legendre (a*b) p) = (Legendre a p)*(Legendre b p)\"", "lemma Legendre_1mod6: \"prime (6*m+1) \\<Longrightarrow> Legendre (-3) (6*m+1) = 1\"", "lemma qf3_prime_exists: \"prime (6*m+1::int) \\<Longrightarrow> \\<exists> x y. 6*m+1 = x^2 + 3*y^2\""], "translations": [["", "lemma best_division_abs: \"(n::int) > 0 \\<Longrightarrow> \\<exists> k. 2 * \\<bar>a - k*n\\<bar> \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "assume a: \"n > 0\""], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "define k where \"k = a div n\""], ["proof (state)\nthis:\n  k = a div n\n\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "have h: \"a - k * n = a mod n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - k * n = a mod n", "by (simp add: div_mult_mod_eq algebra_simps k_def)"], ["proof (state)\nthis:\n  a - k * n = a mod n\n\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "thus ?thesis"], ["proof (prove)\nusing this:\n  a - k * n = a mod n\n\ngoal (1 subgoal):\n 1. \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "proof (cases \"2 * (a mod n) \\<le> n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a - k * n = a mod n; 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n\n 2. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "case True"], ["proof (state)\nthis:\n  2 * (a mod n) \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a - k * n = a mod n; 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n\n 2. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "hence \"2 * \\<bar>a - k*n\\<bar> \\<le> n\""], ["proof (prove)\nusing this:\n  2 * (a mod n) \\<le> n\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "using h pos_mod_sign a"], ["proof (prove)\nusing this:\n  2 * (a mod n) \\<le> n\n  a - k * n = a mod n\n  (0::?'a) < ?b \\<Longrightarrow> (0::?'a) \\<le> ?a mod ?b\n  0 < n\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "by auto"], ["proof (state)\nthis:\n  2 * \\<bar>a - k * n\\<bar> \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a - k * n = a mod n; 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n\n 2. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "thus ?thesis"], ["proof (prove)\nusing this:\n  2 * \\<bar>a - k * n\\<bar> \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "by blast"], ["proof (state)\nthis:\n  \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "case False"], ["proof (state)\nthis:\n  \\<not> 2 * (a mod n) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "hence \"2 * (n - a mod n) \\<le> n\""], ["proof (prove)\nusing this:\n  \\<not> 2 * (a mod n) \\<le> n\n\ngoal (1 subgoal):\n 1. 2 * (n - a mod n) \\<le> n", "by auto"], ["proof (state)\nthis:\n  2 * (n - a mod n) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "have \"a - (k+1)*n = a mod n - n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - (k + 1) * n = a mod n - n", "using h"], ["proof (prove)\nusing this:\n  a - k * n = a mod n\n\ngoal (1 subgoal):\n 1. a - (k + 1) * n = a mod n - n", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  a - (k + 1) * n = a mod n - n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "hence \"2 * \\<bar>a - (k+1)*n\\<bar> \\<le> n\""], ["proof (prove)\nusing this:\n  a - (k + 1) * n = a mod n - n\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>a - (k + 1) * n\\<bar> \\<le> n", "using h pos_mod_bound[of n a] a False"], ["proof (prove)\nusing this:\n  a - (k + 1) * n = a mod n - n\n  a - k * n = a mod n\n  0 < n \\<Longrightarrow> a mod n < n\n  0 < n\n  \\<not> 2 * (a mod n) \\<le> n\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>a - (k + 1) * n\\<bar> \\<le> n", "by fastforce"], ["proof (state)\nthis:\n  2 * \\<bar>a - (k + 1) * n\\<bar> \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a - k * n = a mod n; \\<not> 2 * (a mod n) \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "thus ?thesis"], ["proof (prove)\nusing this:\n  2 * \\<bar>a - (k + 1) * n\\<bar> \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n", "by blast"], ["proof (state)\nthis:\n  \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k. 2 * \\<bar>a - k * n\\<bar> \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prime_power_dvd_cancel_right:\n  \"p ^ n dvd a\" if \"prime (p::'a::semiring_gcd)\" \"\\<not> p dvd b\" \"p ^ n dvd a * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ n dvd a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p ^ n dvd a", "from that"], ["proof (chain)\npicking this:\n  prime p\n  \\<not> p dvd b\n  p ^ n dvd a * b", "have \"coprime p b\""], ["proof (prove)\nusing this:\n  prime p\n  \\<not> p dvd b\n  p ^ n dvd a * b\n\ngoal (1 subgoal):\n 1. coprime p b", "by (auto intro: prime_imp_coprime)"], ["proof (state)\nthis:\n  coprime p b\n\ngoal (1 subgoal):\n 1. p ^ n dvd a", "with that"], ["proof (chain)\npicking this:\n  prime p\n  \\<not> p dvd b\n  p ^ n dvd a * b\n  coprime p b", "show ?thesis"], ["proof (prove)\nusing this:\n  prime p\n  \\<not> p dvd b\n  p ^ n dvd a * b\n  coprime p b\n\ngoal (1 subgoal):\n 1. p ^ n dvd a", "by (simp add: coprime_dvd_mult_left_iff)"], ["proof (state)\nthis:\n  p ^ n dvd a\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  is_qfN :: \"int \\<Rightarrow> int \\<Rightarrow> bool\" where\n  \"is_qfN A N \\<longleftrightarrow> (\\<exists> x y. A = x^2 + N*y^2)\""], ["", "definition\n  is_cube_form :: \"int \\<Rightarrow> int \\<Rightarrow> bool\" where\n  \"is_cube_form a b \\<longleftrightarrow> (\\<exists> p q. a = p^3 - 9*p*q^2 \\<and> b = 3*p^2*q - 3*q^3)\""], ["", "private"], ["", "lemma abs_eq_impl_unitfactor: \"\\<bar>a::int\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> \\<exists> u. a = u*b \\<and> \\<bar>u\\<bar>=1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow>\n    \\<exists>u. a = u * b \\<and> \\<bar>u\\<bar> = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow>\n    \\<exists>u. a = u * b \\<and> \\<bar>u\\<bar> = 1", "assume \"\\<bar>a\\<bar> = \\<bar>b\\<bar>\""], ["proof (state)\nthis:\n  \\<bar>a\\<bar> = \\<bar>b\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow>\n    \\<exists>u. a = u * b \\<and> \\<bar>u\\<bar> = 1", "hence \"a = 1*b \\<or> a = (-1)*b\""], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar> = \\<bar>b\\<bar>\n\ngoal (1 subgoal):\n 1. a = 1 * b \\<or> a = - 1 * b", "by arith"], ["proof (state)\nthis:\n  a = 1 * b \\<or> a = - 1 * b\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow>\n    \\<exists>u. a = u * b \\<and> \\<bar>u\\<bar> = 1", "then"], ["proof (chain)\npicking this:\n  a = 1 * b \\<or> a = - 1 * b", "obtain u where \"a = u*b \\<and> (u=1 \\<or> u=-1)\""], ["proof (prove)\nusing this:\n  a = 1 * b \\<or> a = - 1 * b\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        a = u * b \\<and> (u = 1 \\<or> u = - 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a = u * b \\<and> (u = 1 \\<or> u = - 1)\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow>\n    \\<exists>u. a = u * b \\<and> \\<bar>u\\<bar> = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  a = u * b \\<and> (u = 1 \\<or> u = - 1)\n\ngoal (1 subgoal):\n 1. \\<exists>u. a = u * b \\<and> \\<bar>u\\<bar> = 1", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. a = u * b \\<and> \\<bar>u\\<bar> = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma prime_3_nat: \"prime (3::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 3", "by auto"], ["", "subsection \\<open>Basic facts if $N \\ge 1$\\<close>"], ["", "lemma qfN_pos: \"\\<lbrakk> N \\<ge> 1; is_qfN A N \\<rbrakk> \\<Longrightarrow> A \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; is_qfN A N\\<rbrakk> \\<Longrightarrow> 0 \\<le> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; is_qfN A N\\<rbrakk> \\<Longrightarrow> 0 \\<le> A", "assume N: \"N \\<ge> 1\" and \"is_qfN A N\""], ["proof (state)\nthis:\n  1 \\<le> N\n  is_qfN A N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; is_qfN A N\\<rbrakk> \\<Longrightarrow> 0 \\<le> A", "then"], ["proof (chain)\npicking this:\n  1 \\<le> N\n  is_qfN A N", "obtain a b where ab: \"A = a^2 + N*b^2\""], ["proof (prove)\nusing this:\n  1 \\<le> N\n  is_qfN A N\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        A = a\\<^sup>2 + N * b\\<^sup>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: is_qfN_def)"], ["proof (state)\nthis:\n  A = a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; is_qfN A N\\<rbrakk> \\<Longrightarrow> 0 \\<le> A", "have \"N*b^2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> N * b\\<^sup>2", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "assume \"b = 0\""], ["proof (state)\nthis:\n  b = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  b = 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> N * b\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  0 \\<le> N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "assume \"\\<not> b = 0\""], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "hence \" b^2 > 0\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < b\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  0 < b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "from N"], ["proof (chain)\npicking this:\n  1 \\<le> N", "have \"N>0\""], ["proof (prove)\nusing this:\n  1 \\<le> N\n\ngoal (1 subgoal):\n 1. 0 < N", "by simp"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  0 < b\\<^sup>2\n  0 < N", "have \"N*b^2 > N*0\""], ["proof (prove)\nusing this:\n  0 < b\\<^sup>2\n  0 < N\n\ngoal (1 subgoal):\n 1. N * 0 < N * b\\<^sup>2", "by (auto simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  N * 0 < N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  N * 0 < N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> N * b\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  0 \\<le> N * b\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; is_qfN A N\\<rbrakk> \\<Longrightarrow> 0 \\<le> A", "with ab"], ["proof (chain)\npicking this:\n  A = a\\<^sup>2 + N * b\\<^sup>2\n  0 \\<le> N * b\\<^sup>2", "have \"A \\<ge> a^2\""], ["proof (prove)\nusing this:\n  A = a\\<^sup>2 + N * b\\<^sup>2\n  0 \\<le> N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 \\<le> A", "by auto"], ["proof (state)\nthis:\n  a\\<^sup>2 \\<le> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; is_qfN A N\\<rbrakk> \\<Longrightarrow> 0 \\<le> A", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 \\<le> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; is_qfN A N\\<rbrakk> \\<Longrightarrow> 0 \\<le> A", "have \"a^2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a\\<^sup>2", "by (rule zero_le_power2)"], ["proof (state)\nthis:\n  0 \\<le> a\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; is_qfN A N\\<rbrakk> \\<Longrightarrow> 0 \\<le> A", "ultimately"], ["proof (chain)\npicking this:\n  a\\<^sup>2 \\<le> A\n  0 \\<le> a\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  a\\<^sup>2 \\<le> A\n  0 \\<le> a\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> A", "by arith"], ["proof (state)\nthis:\n  0 \\<le> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfN_zero: \"\\<lbrakk> (N::int) \\<ge> 1; a^2 + N*b^2 = 0 \\<rbrakk> \\<Longrightarrow> (a = 0 \\<and> b = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; a\\<^sup>2 + N * b\\<^sup>2 = 0\\<rbrakk>\n    \\<Longrightarrow> a = 0 \\<and> b = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; a\\<^sup>2 + N * b\\<^sup>2 = 0\\<rbrakk>\n    \\<Longrightarrow> a = 0 \\<and> b = 0", "assume N: \"N \\<ge> 1\" and abN: \"a^2 + N*b^2 = 0\""], ["proof (state)\nthis:\n  1 \\<le> N\n  a\\<^sup>2 + N * b\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> N; a\\<^sup>2 + N * b\\<^sup>2 = 0\\<rbrakk>\n    \\<Longrightarrow> a = 0 \\<and> b = 0", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = 0 \\<and> b = 0", "proof (rule ccontr, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<noteq> 0 \\<Longrightarrow> False\n 2. b \\<noteq> 0 \\<Longrightarrow> False", "assume \"a \\<noteq> 0\""], ["proof (state)\nthis:\n  a \\<noteq> 0\n\ngoal (2 subgoals):\n 1. a \\<noteq> 0 \\<Longrightarrow> False\n 2. b \\<noteq> 0 \\<Longrightarrow> False", "hence \"a^2 > 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < a\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < a\\<^sup>2\n\ngoal (2 subgoals):\n 1. a \\<noteq> 0 \\<Longrightarrow> False\n 2. b \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < a\\<^sup>2\n\ngoal (2 subgoals):\n 1. a \\<noteq> 0 \\<Longrightarrow> False\n 2. b \\<noteq> 0 \\<Longrightarrow> False", "have \"N*b^2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> N * b\\<^sup>2", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "assume \"b = 0\""], ["proof (state)\nthis:\n  b = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  b = 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> N * b\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  0 \\<le> N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "assume \"\\<not> b = 0\""], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "hence \" b^2 > 0\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < b\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  0 < b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "from N"], ["proof (chain)\npicking this:\n  1 \\<le> N", "have \"N>0\""], ["proof (prove)\nusing this:\n  1 \\<le> N\n\ngoal (1 subgoal):\n 1. 0 < N", "by simp"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  0 < b\\<^sup>2\n  0 < N", "have \"N*b^2 > N*0\""], ["proof (prove)\nusing this:\n  0 < b\\<^sup>2\n  0 < N\n\ngoal (1 subgoal):\n 1. N * 0 < N * b\\<^sup>2", "by (auto simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  N * 0 < N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> 0 \\<le> N * b\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  N * 0 < N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> N * b\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  0 \\<le> N * b\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> N * b\\<^sup>2\n\ngoal (2 subgoals):\n 1. a \\<noteq> 0 \\<Longrightarrow> False\n 2. b \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  0 < a\\<^sup>2\n  0 \\<le> N * b\\<^sup>2", "have \"a^2 + N*b^2 > 0\""], ["proof (prove)\nusing this:\n  0 < a\\<^sup>2\n  0 \\<le> N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < a\\<^sup>2 + N * b\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  0 < a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (2 subgoals):\n 1. a \\<noteq> 0 \\<Longrightarrow> False\n 2. b \\<noteq> 0 \\<Longrightarrow> False", "with abN"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = 0\n  0 < a\\<^sup>2 + N * b\\<^sup>2", "show False"], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = 0\n  0 < a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "assume \"b \\<noteq> 0\""], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "hence \"b^2>0\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < b\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "from N"], ["proof (chain)\npicking this:\n  1 \\<le> N", "have \"N>0\""], ["proof (prove)\nusing this:\n  1 \\<le> N\n\ngoal (1 subgoal):\n 1. 0 < N", "by simp"], ["proof (state)\nthis:\n  0 < N\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  0 < b\\<^sup>2\n  0 < N", "have \"N*b^2>N*0\""], ["proof (prove)\nusing this:\n  0 < b\\<^sup>2\n  0 < N\n\ngoal (1 subgoal):\n 1. N * 0 < N * b\\<^sup>2", "by (auto simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  N * 0 < N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "hence \"N*b^2 > 0\""], ["proof (prove)\nusing this:\n  N * 0 < N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < N * b\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "have \"a^2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a\\<^sup>2", "by (rule zero_le_power2)"], ["proof (state)\nthis:\n  0 \\<le> a\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  0 < N * b\\<^sup>2\n  0 \\<le> a\\<^sup>2", "have \"a^2 + N*b^2 > 0\""], ["proof (prove)\nusing this:\n  0 < N * b\\<^sup>2\n  0 \\<le> a\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < a\\<^sup>2 + N * b\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  0 < a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "with abN"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = 0\n  0 < a\\<^sup>2 + N * b\\<^sup>2", "show False"], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = 0\n  0 < a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = 0 \\<and> b = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Multiplication and division\\<close>"], ["", "lemma qfN_mult1: \"((a::int)^2 + N*b^2)*(c^2 + N*d^2)\n  = (a*c+N*b*d)^2 + N*(a*d-b*c)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n    (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2", "by (simp add: eval_nat_numeral field_simps)"], ["", "lemma qfN_mult2: \"((a::int)^2 + N*b^2)*(c^2 + N*d^2)\n  = (a*c-N*b*d)^2 + N*(a*d+b*c)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n    (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2", "by (simp add: eval_nat_numeral field_simps)"], ["", "corollary is_qfN_mult: \"is_qfN A N \\<Longrightarrow> is_qfN B N \\<Longrightarrow> is_qfN (A*B) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_qfN A N; is_qfN B N\\<rbrakk>\n    \\<Longrightarrow> is_qfN (A * B) N", "by (unfold is_qfN_def, auto, auto simp only: qfN_mult1)"], ["", "corollary is_qfN_power: \"(n::nat) > 0 \\<Longrightarrow> is_qfN A N \\<Longrightarrow> is_qfN (A^n) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; is_qfN A N\\<rbrakk> \\<Longrightarrow> is_qfN (A ^ n) N", "by (induct n, auto, case_tac \"n=0\", auto simp add: is_qfN_mult)"], ["", "lemma qfN_div_prime:\n  fixes p :: int\n  assumes ass: \"prime (p^2+N*q^2) \\<and> (p^2+N*q^2) dvd (a^2+N*b^2)\"\n  shows \"\\<exists> u v. a^2+N*b^2 = (u^2+N*v^2)*(p^2+N*q^2)\n                \\<and> (\\<exists> e. a = p*u+e*N*q*v \\<and> b = p*v - e*q*u \\<and> \\<bar>e\\<bar>=1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "let ?P = \"p^2+N*q^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "let ?A = \"a^2+N*b^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "from ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2", "obtain U where U: \"?A = ?P*U\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        a\\<^sup>2 + N * b\\<^sup>2 =\n        (p\\<^sup>2 + N * q\\<^sup>2) * U \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: dvd_def)"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2) * U\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have \"\\<exists> e. ?P dvd b*p + e*a*q \\<and> \\<bar>e\\<bar> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "have \"?P dvd (b*p + a*q)*(b*p - a*q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)", "have \"(b*p + a*q)*(b*p - a*q)= b^2*?P - q^2*?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b * p + a * q) * (b * p - a * q) =\n    b\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2) -\n    q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  (b * p + a * q) * (b * p - a * q) =\n  b\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2) -\n  q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)", "also"], ["proof (state)\nthis:\n  (b * p + a * q) * (b * p - a * q) =\n  b\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2) -\n  q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)", "from U"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2) * U", "have \"\\<dots> = (b^2 - q^2*U)*?P\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2) * U\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2) -\n    q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2) =\n    (b\\<^sup>2 - q\\<^sup>2 * U) * (p\\<^sup>2 + N * q\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  b\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2) -\n  q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2) =\n  (b\\<^sup>2 - q\\<^sup>2 * U) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)", "finally"], ["proof (chain)\npicking this:\n  (b * p + a * q) * (b * p - a * q) =\n  (b\\<^sup>2 - q\\<^sup>2 * U) * (p\\<^sup>2 + N * q\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (b * p + a * q) * (b * p - a * q) =\n  (b\\<^sup>2 - q\\<^sup>2 * U) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "with ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\n  p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)", "have \"?P dvd (b*p + a*q) \\<or> ?P dvd (b*p - a*q)\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\n  p\\<^sup>2 + N * q\\<^sup>2 dvd (b * p + a * q) * (b * p - a * q)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<or>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q", "by (simp add: nat_abs_mult_distrib prime_int_iff prime_dvd_mult_iff)"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "moreover"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "{"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "assume \"?P dvd b*p + a*q\""], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "hence \"?P dvd b*p + 1*a*q \\<and> \\<bar>1\\<bar> = (1::int)\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "}"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "moreover"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "{"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "assume \"?P dvd b*p - a*q\""], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "hence \"?P dvd b*p + (-1)*a*q \\<and> \\<bar>-1\\<bar> = (1::int)\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + - 1 * a * q \\<and>\n    \\<bar>- 1\\<bar> = 1", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + - 1 * a * q \\<and>\n  \\<bar>- 1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "}"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + - 1 * a * q \\<and>\n  \\<bar>- 1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "ultimately"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + - 1 * a * q \\<and>\n  \\<bar>- 1\\<bar> = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + a * q \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p - a * q \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + - 1 * a * q \\<and>\n  \\<bar>- 1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e.\n       p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n       \\<bar>e\\<bar> = 1", "by blast"], ["proof (state)\nthis:\n  \\<exists>e.\n     p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n     \\<bar>e\\<bar> = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e.\n     p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n     \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "then"], ["proof (chain)\npicking this:\n  \\<exists>e.\n     p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n     \\<bar>e\\<bar> = 1", "obtain v e where v: \"b*p + e*a*q = ?P*v\" and e: \"\\<bar>e\\<bar> = 1\""], ["proof (prove)\nusing this:\n  \\<exists>e.\n     p\\<^sup>2 + N * q\\<^sup>2 dvd b * p + e * a * q \\<and>\n     \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. (\\<And>e v.\n        \\<lbrakk>b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v;\n         \\<bar>e\\<bar> = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: dvd_def)"], ["proof (state)\nthis:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have \"?P dvd a*p - e*N*b*q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "assume e1: \"e = 1\""], ["proof (state)\nthis:\n  e = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "from U"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2) * U", "have \"U * ?P^2 = ?A * ?P\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2) * U\n\ngoal (1 subgoal):\n 1. U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n    (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "with e1"], ["proof (chain)\npicking this:\n  e = 1\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*(b*p+e*a*q)^2\""], ["proof (prove)\nusing this:\n  e = 1\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) =\n    (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2", "by (simp only: qfN_mult2 add.commute mult_1_left)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "with v"], ["proof (chain)\npicking this:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*v^2*?P^2\""], ["proof (prove)\nusing this:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2 =\n    (a * p - e * N * b * q)\\<^sup>2 +\n    N * v\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "by (simp only: power_mult_distrib ac_simps)"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 +\n  N * v\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "finally"], ["proof (chain)\npicking this:\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 +\n  N * v\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "have \"(a*p-e*N*b*q)^2 = ?P^2*(U-N*v^2)\""], ["proof (prove)\nusing this:\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 +\n  N * v\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 =\n    (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 * (U - N * v\\<^sup>2)", "by (simp add: ac_simps left_diff_distrib)"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 * (U - N * v\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "hence \"?P^2 dvd (a*p - e*N*b*q)^2\""], ["proof (prove)\nusing this:\n  (a * p - e * N * b * q)\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 * (U - N * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2", "by (rule dvdI)"], ["proof (state)\nthis:\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "assume \"\\<not> e=1\""], ["proof (state)\nthis:\n  e \\<noteq> 1\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "with e"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1\n  e \\<noteq> 1", "have e1: \"e=-1\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n  e \\<noteq> 1\n\ngoal (1 subgoal):\n 1. e = - 1", "by auto"], ["proof (state)\nthis:\n  e = - 1\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "from U"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2) * U", "have \"U * ?P^2 = ?A * ?P\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2) * U\n\ngoal (1 subgoal):\n 1. U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n    (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "with e1"], ["proof (chain)\npicking this:\n  e = - 1\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*( -(b*p+e*a*q))^2\""], ["proof (prove)\nusing this:\n  e = - 1\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) =\n    (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2", "by (simp add: qfN_mult1)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*(b*p+e*a*q)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n    (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2", "by (simp only: power2_minus)"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "with v"], ["proof (chain)\npicking this:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*v^2*?P^2\""], ["proof (prove)\nusing this:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2 =\n    (a * p - e * N * b * q)\\<^sup>2 +\n    N * v\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "by (simp only: power_mult_distrib ac_simps)"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 +\n  N * v\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "finally"], ["proof (chain)\npicking this:\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 +\n  N * v\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "have \"(a*p-e*N*b*q)^2 = ?P^2*(U-N*v^2)\""], ["proof (prove)\nusing this:\n  U * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 +\n  N * v\\<^sup>2 * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 =\n    (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 * (U - N * v\\<^sup>2)", "by (simp add: ac_simps left_diff_distrib)"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 * (U - N * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "hence \"?P^2 dvd (a*p-e*N*b*q)^2\""], ["proof (prove)\nusing this:\n  (a * p - e * N * b * q)\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 * (U - N * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2", "by (rule dvdI)"], ["proof (state)\nthis:\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "then"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q", "obtain u where u: \"a*p - e*N*b*q = ?P*u\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a * p - e * N * b * q\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        a * p - e * N * b * q =\n        (p\\<^sup>2 + N * q\\<^sup>2) * u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: dvd_def)"], ["proof (state)\nthis:\n  a * p - e * N * b * q = (p\\<^sup>2 + N * q\\<^sup>2) * u\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "from e"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1", "have e2_1: \"e * e = 1\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. e * e = 1", "using abs_mult_self_eq [of e]"], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n  \\<bar>e\\<bar> * \\<bar>e\\<bar> = e * e\n\ngoal (1 subgoal):\n 1. e * e = 1", "by simp"], ["proof (state)\nthis:\n  e * e = 1\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have a: \"a = p*u + e*N*q*v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "have \"(p*u + e*N*q*v)*?P = p*(?P*u) + (e*N*q)*(?P*v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p * u + e * N * q * v) * (p\\<^sup>2 + N * q\\<^sup>2) =\n    p * ((p\\<^sup>2 + N * q\\<^sup>2) * u) +\n    e * N * q * ((p\\<^sup>2 + N * q\\<^sup>2) * v)", "by (simp only: distrib_right ac_simps)"], ["proof (state)\nthis:\n  (p * u + e * N * q * v) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * u) +\n  e * N * q * ((p\\<^sup>2 + N * q\\<^sup>2) * v)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "also"], ["proof (state)\nthis:\n  (p * u + e * N * q * v) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * u) +\n  e * N * q * ((p\\<^sup>2 + N * q\\<^sup>2) * v)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "with v u"], ["proof (chain)\npicking this:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  a * p - e * N * b * q = (p\\<^sup>2 + N * q\\<^sup>2) * u\n  (p * u + e * N * q * v) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * u) +\n  e * N * q * ((p\\<^sup>2 + N * q\\<^sup>2) * v)", "have \"\\<dots> = p*(a*p - e*N*b*q) + (e*N*q)*(b*p + e*a*q)\""], ["proof (prove)\nusing this:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  a * p - e * N * b * q = (p\\<^sup>2 + N * q\\<^sup>2) * u\n  (p * u + e * N * q * v) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * u) +\n  e * N * q * ((p\\<^sup>2 + N * q\\<^sup>2) * v)\n\ngoal (1 subgoal):\n 1. p * ((p\\<^sup>2 + N * q\\<^sup>2) * u) +\n    e * N * q * ((p\\<^sup>2 + N * q\\<^sup>2) * v) =\n    p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q)", "by simp"], ["proof (state)\nthis:\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * u) +\n  e * N * q * ((p\\<^sup>2 + N * q\\<^sup>2) * v) =\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "also"], ["proof (state)\nthis:\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * u) +\n  e * N * q * ((p\\<^sup>2 + N * q\\<^sup>2) * v) =\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "have \"\\<dots> = a*(p^2 + e*e*N*q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n    a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)", "by (simp add: power2_eq_square distrib_left ac_simps right_diff_distrib)"], ["proof (state)\nthis:\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "also"], ["proof (state)\nthis:\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "with e2_1"], ["proof (chain)\npicking this:\n  e * e = 1\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)", "have \"\\<dots> = a*?P\""], ["proof (prove)\nusing this:\n  e * e = 1\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a * (p\\<^sup>2 + e * e * N * q\\<^sup>2) =\n    a * (p\\<^sup>2 + N * q\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2) = a * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "finally"], ["proof (chain)\npicking this:\n  (p * u + e * N * q * v) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  a * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"(a-(p*u+e*N*q*v))*?P = 0\""], ["proof (prove)\nusing this:\n  (p * u + e * N * q * v) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  a * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (a - (p * u + e * N * q * v)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0", "by auto"], ["proof (state)\nthis:\n  (a - (p * u + e * N * q * v)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "moreover"], ["proof (state)\nthis:\n  (a - (p * u + e * N * q * v)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "from ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2", "have \"?P \\<noteq> 0\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "ultimately"], ["proof (chain)\npicking this:\n  (a - (p * u + e * N * q * v)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (a - (p * u + e * N * q * v)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "by simp"], ["proof (state)\nthis:\n  a = p * u + e * N * q * v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = p * u + e * N * q * v\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "moreover"], ["proof (state)\nthis:\n  a = p * u + e * N * q * v\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have b: \"b = p*v-e*q*u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "have \"(p*v-e*q*u)*?P = p*(?P*v) - (e*q)*(?P*u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p * v - e * q * u) * (p\\<^sup>2 + N * q\\<^sup>2) =\n    p * ((p\\<^sup>2 + N * q\\<^sup>2) * v) -\n    e * q * ((p\\<^sup>2 + N * q\\<^sup>2) * u)", "by (simp only: left_diff_distrib ac_simps)"], ["proof (state)\nthis:\n  (p * v - e * q * u) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * v) -\n  e * q * ((p\\<^sup>2 + N * q\\<^sup>2) * u)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "also"], ["proof (state)\nthis:\n  (p * v - e * q * u) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * v) -\n  e * q * ((p\\<^sup>2 + N * q\\<^sup>2) * u)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "with v u"], ["proof (chain)\npicking this:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  a * p - e * N * b * q = (p\\<^sup>2 + N * q\\<^sup>2) * u\n  (p * v - e * q * u) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * v) -\n  e * q * ((p\\<^sup>2 + N * q\\<^sup>2) * u)", "have \"\\<dots> = p*(b*p+e*a*q) - e*q*(a*p-e*N*b*q)\""], ["proof (prove)\nusing this:\n  b * p + e * a * q = (p\\<^sup>2 + N * q\\<^sup>2) * v\n  a * p - e * N * b * q = (p\\<^sup>2 + N * q\\<^sup>2) * u\n  (p * v - e * q * u) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * v) -\n  e * q * ((p\\<^sup>2 + N * q\\<^sup>2) * u)\n\ngoal (1 subgoal):\n 1. p * ((p\\<^sup>2 + N * q\\<^sup>2) * v) -\n    e * q * ((p\\<^sup>2 + N * q\\<^sup>2) * u) =\n    p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q)", "by simp"], ["proof (state)\nthis:\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * v) -\n  e * q * ((p\\<^sup>2 + N * q\\<^sup>2) * u) =\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "also"], ["proof (state)\nthis:\n  p * ((p\\<^sup>2 + N * q\\<^sup>2) * v) -\n  e * q * ((p\\<^sup>2 + N * q\\<^sup>2) * u) =\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "have \"\\<dots> = b*(p^2 + e*e*N*q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n    b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)", "by (simp add: power2_eq_square distrib_left ac_simps right_diff_distrib)"], ["proof (state)\nthis:\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "also"], ["proof (state)\nthis:\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "with e2_1"], ["proof (chain)\npicking this:\n  e * e = 1\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)", "have \"\\<dots> = b * ?P\""], ["proof (prove)\nusing this:\n  e * e = 1\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. b * (p\\<^sup>2 + e * e * N * q\\<^sup>2) =\n    b * (p\\<^sup>2 + N * q\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2) = b * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "finally"], ["proof (chain)\npicking this:\n  (p * v - e * q * u) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  b * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"(b-(p*v-e*q*u))*?P = 0\""], ["proof (prove)\nusing this:\n  (p * v - e * q * u) * (p\\<^sup>2 + N * q\\<^sup>2) =\n  b * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (b - (p * v - e * q * u)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0", "by auto"], ["proof (state)\nthis:\n  (b - (p * v - e * q * u)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "moreover"], ["proof (state)\nthis:\n  (b - (p * v - e * q * u)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "from ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2", "have \"?P \\<noteq> 0\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "ultimately"], ["proof (chain)\npicking this:\n  (b - (p * v - e * q * u)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (b - (p * v - e * q * u)) * (p\\<^sup>2 + N * q\\<^sup>2) = 0\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "by simp"], ["proof (state)\nthis:\n  b = p * v - e * q * u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b = p * v - e * q * u\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "moreover"], ["proof (state)\nthis:\n  b = p * v - e * q * u\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have \"?A = (u^2 + N*v^2)*?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n 2. \\<not> ?P \\<Longrightarrow>\n    a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "assume \"e=1\""], ["proof (state)\nthis:\n  e = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n 2. \\<not> ?P \\<Longrightarrow>\n    a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "with a and b"], ["proof (chain)\npicking this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  e = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  e = 1\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "by (simp add: qfN_mult1 ac_simps)"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "assume \"\\<not> e=1\""], ["proof (state)\nthis:\n  e \\<noteq> 1\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "with e"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1\n  e \\<noteq> 1", "have \"e=-1\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n  e \\<noteq> 1\n\ngoal (1 subgoal):\n 1. e = - 1", "by simp"], ["proof (state)\nthis:\n  e = - 1\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "with a and b"], ["proof (chain)\npicking this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  e = - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  e = - 1\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 =\n    (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "by (simp add: qfN_mult2 ac_simps)"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "from e"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1", "have \"\\<bar>e\\<bar> = 1\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>e\\<bar> = 1", "."], ["proof (state)\nthis:\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "ultimately"], ["proof (chain)\npicking this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n  \\<bar>e\\<bar> = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "by blast"], ["proof (state)\nthis:\n  \\<exists>u v.\n     a\\<^sup>2 + N * b\\<^sup>2 =\n     (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n     (\\<exists>e.\n         a = p * u + e * N * q * v \\<and>\n         b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary qfN_div_prime_weak:\n  \"\\<lbrakk> prime (p^2+N*q^2::int); (p^2+N*q^2) dvd (a^2+N*b^2) \\<rbrakk>\n  \\<Longrightarrow> \\<exists> u v. a^2+N*b^2 = (u^2+N*v^2)*(p^2+N*q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u v.\n                         a\\<^sup>2 + N * b\\<^sup>2 =\n                         (u\\<^sup>2 + N * v\\<^sup>2) *\n                         (p\\<^sup>2 + N * q\\<^sup>2)", "apply (subgoal_tac \"\\<exists> u v. a^2+N*b^2 = (u^2+N*v^2)*(p^2+N*q^2)\n    \\<and> (\\<exists> e. a = p*u+e*N*q*v \\<and> b = p*v - e*q*u \\<and> \\<bar>e\\<bar>=1)\", blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u v.\n                         a\\<^sup>2 + N * b\\<^sup>2 =\n                         (u\\<^sup>2 + N * v\\<^sup>2) *\n                         (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n                         (\\<exists>e.\n                             a = p * u + e * N * q * v \\<and>\n                             b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "apply (rule qfN_div_prime, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary qfN_div_prime_general: \"\\<lbrakk> prime P; P dvd A; is_qfN A N; is_qfN P N \\<rbrakk>\n  \\<Longrightarrow> \\<exists> Q. A = Q*P \\<and> is_qfN Q N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime P; P dvd A; is_qfN A N; is_qfN P N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q. A = Q * P \\<and> is_qfN Q N", "apply (subgoal_tac \"\\<exists> u v. A = (u^2+N*v^2)*P\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>prime P; P dvd A; is_qfN A N; is_qfN P N;\n     \\<exists>u v. A = (u\\<^sup>2 + N * v\\<^sup>2) * P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q. A = Q * P \\<and> is_qfN Q N\n 2. \\<lbrakk>prime P; P dvd A; is_qfN A N; is_qfN P N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u v. A = (u\\<^sup>2 + N * v\\<^sup>2) * P", "apply (unfold is_qfN_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa y ya.\n       \\<lbrakk>prime (xa\\<^sup>2 + N * ya\\<^sup>2);\n        xa\\<^sup>2 + N * ya\\<^sup>2 dvd x\\<^sup>2 + N * y\\<^sup>2;\n        A = x\\<^sup>2 + N * y\\<^sup>2;\n        P = xa\\<^sup>2 + N * ya\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u v.\n                            x\\<^sup>2 + N * y\\<^sup>2 =\n                            (u\\<^sup>2 + N * v\\<^sup>2) *\n                            (xa\\<^sup>2 + N * ya\\<^sup>2)", "apply (simp only: qfN_div_prime_weak)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma qfN_power_div_prime:\n  fixes P :: int\n  assumes ass: \"prime P \\<and> odd P \\<and> P dvd A \\<and> P^n = p^2+N*q^2\n  \\<and> A^n = a^2+N*b^2 \\<and> coprime a b \\<and> coprime p (N*q) \\<and> n>0\"\n  shows \"\\<exists> u v. a^2+N*b^2 = (u^2 + N*v^2)*(p^2+N*q^2) \\<and> coprime u v\n                \\<and> (\\<exists> e. a = p*u+e*N*q*v \\<and> b = p*v-e*q*u \\<and> \\<bar>e\\<bar> = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have \"P dvd A \\<and> n>0\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. P dvd A \\<and> 0 < n", "by simp"], ["proof (state)\nthis:\n  P dvd A \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "hence \"P^n dvd A^n\""], ["proof (prove)\nusing this:\n  P dvd A \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. P ^ n dvd A ^ n", "by simp"], ["proof (state)\nthis:\n  P ^ n dvd A ^ n\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "then"], ["proof (chain)\npicking this:\n  P ^ n dvd A ^ n", "obtain U where U: \"A^n = U*P^n\""], ["proof (prove)\nusing this:\n  P ^ n dvd A ^ n\n\ngoal (1 subgoal):\n 1. (\\<And>U. A ^ n = U * P ^ n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: dvd_def ac_simps)"], ["proof (state)\nthis:\n  A ^ n = U * P ^ n\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have \"coprime a b\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. coprime a b", "by blast"], ["proof (state)\nthis:\n  coprime a b\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have \"\\<exists> e. P^n dvd b*p + e*a*q \\<and> \\<bar>e\\<bar> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "have Pn_dvd_prod: \"P^n dvd (b*p + a*q)*(b*p - a*q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "have \"(b*p + a*q)*(b*p - a*q) = (b*p)^2 - (a*q)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b * p + a * q) * (b * p - a * q) = (b * p)\\<^sup>2 - (a * q)\\<^sup>2", "by (simp add: power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  (b * p + a * q) * (b * p - a * q) = (b * p)\\<^sup>2 - (a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "also"], ["proof (state)\nthis:\n  (b * p + a * q) * (b * p - a * q) = (b * p)\\<^sup>2 - (a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "have \"\\<dots> = b^2 * p^2 + b^2*N*q^2 - b^2*N*q^2 - a^2*q^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b * p)\\<^sup>2 - (a * q)\\<^sup>2 =\n    b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n    b\\<^sup>2 * N * q\\<^sup>2 -\n    a\\<^sup>2 * q\\<^sup>2", "by (simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  (b * p)\\<^sup>2 - (a * q)\\<^sup>2 =\n  b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n  b\\<^sup>2 * N * q\\<^sup>2 -\n  a\\<^sup>2 * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "also"], ["proof (state)\nthis:\n  (b * p)\\<^sup>2 - (a * q)\\<^sup>2 =\n  b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n  b\\<^sup>2 * N * q\\<^sup>2 -\n  a\\<^sup>2 * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  (b * p)\\<^sup>2 - (a * q)\\<^sup>2 =\n  b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n  b\\<^sup>2 * N * q\\<^sup>2 -\n  a\\<^sup>2 * q\\<^sup>2", "have \"\\<dots> = b^2*P^n - q^2*A^n\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  (b * p)\\<^sup>2 - (a * q)\\<^sup>2 =\n  b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n  b\\<^sup>2 * N * q\\<^sup>2 -\n  a\\<^sup>2 * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n    b\\<^sup>2 * N * q\\<^sup>2 -\n    a\\<^sup>2 * q\\<^sup>2 =\n    b\\<^sup>2 * P ^ n - q\\<^sup>2 * A ^ n", "by (simp only: ac_simps distrib_right distrib_left)"], ["proof (state)\nthis:\n  b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n  b\\<^sup>2 * N * q\\<^sup>2 -\n  a\\<^sup>2 * q\\<^sup>2 =\n  b\\<^sup>2 * P ^ n - q\\<^sup>2 * A ^ n\n\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "also"], ["proof (state)\nthis:\n  b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n  b\\<^sup>2 * N * q\\<^sup>2 -\n  a\\<^sup>2 * q\\<^sup>2 =\n  b\\<^sup>2 * P ^ n - q\\<^sup>2 * A ^ n\n\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "with U"], ["proof (chain)\npicking this:\n  A ^ n = U * P ^ n\n  b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n  b\\<^sup>2 * N * q\\<^sup>2 -\n  a\\<^sup>2 * q\\<^sup>2 =\n  b\\<^sup>2 * P ^ n - q\\<^sup>2 * A ^ n", "have \"\\<dots> = (b^2-q^2*U)*P^n\""], ["proof (prove)\nusing this:\n  A ^ n = U * P ^ n\n  b\\<^sup>2 * p\\<^sup>2 + b\\<^sup>2 * N * q\\<^sup>2 -\n  b\\<^sup>2 * N * q\\<^sup>2 -\n  a\\<^sup>2 * q\\<^sup>2 =\n  b\\<^sup>2 * P ^ n - q\\<^sup>2 * A ^ n\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 * P ^ n - q\\<^sup>2 * A ^ n =\n    (b\\<^sup>2 - q\\<^sup>2 * U) * P ^ n", "by (simp only: left_diff_distrib)"], ["proof (state)\nthis:\n  b\\<^sup>2 * P ^ n - q\\<^sup>2 * A ^ n =\n  (b\\<^sup>2 - q\\<^sup>2 * U) * P ^ n\n\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "finally"], ["proof (chain)\npicking this:\n  (b * p + a * q) * (b * p - a * q) = (b\\<^sup>2 - q\\<^sup>2 * U) * P ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  (b * p + a * q) * (b * p - a * q) = (b\\<^sup>2 - q\\<^sup>2 * U) * P ^ n\n\ngoal (1 subgoal):\n 1. P ^ n dvd (b * p + a * q) * (b * p - a * q)", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  P ^ n dvd (b * p + a * q) * (b * p - a * q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P ^ n dvd (b * p + a * q) * (b * p - a * q)\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "have \"P^n dvd (b*p + a*q) \\<or> P^n dvd (b*p - a*q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "have PdvdPn: \"P dvd P^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P dvd P ^ n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P dvd P ^ n", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have \"\\<exists> m. n = Suc m\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. \\<exists>m. n = Suc m", "by (simp add: not0_implies_Suc)"], ["proof (state)\nthis:\n  \\<exists>m. n = Suc m\n\ngoal (1 subgoal):\n 1. P dvd P ^ n", "then"], ["proof (chain)\npicking this:\n  \\<exists>m. n = Suc m", "obtain m where \"n = Suc m\""], ["proof (prove)\nusing this:\n  \\<exists>m. n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>m. n = Suc m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  n = Suc m\n\ngoal (1 subgoal):\n 1. P dvd P ^ n", "hence \"P^n = P*(P^m)\""], ["proof (prove)\nusing this:\n  n = Suc m\n\ngoal (1 subgoal):\n 1. P ^ n = P * P ^ m", "by auto"], ["proof (state)\nthis:\n  P ^ n = P * P ^ m\n\ngoal (1 subgoal):\n 1. P dvd P ^ n", "thus ?thesis"], ["proof (prove)\nusing this:\n  P ^ n = P * P ^ m\n\ngoal (1 subgoal):\n 1. P dvd P ^ n", "by auto"], ["proof (state)\nthis:\n  P dvd P ^ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P dvd P ^ n\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "have \"\\<not> P dvd b*p+a*q \\<or>  \\<not> P dvd b*p-a*q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> P dvd b * p + a * q \\<or> \\<not> P dvd b * p - a * q", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "assume \"P dvd b*p+a*q \\<and> P dvd b*p-a*q\""], ["proof (state)\nthis:\n  P dvd b * p + a * q \\<and> P dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "hence \"P dvd (b*p+a*q)+(b*p-a*q) \\<and> P dvd (b*p+a*q)-(b*p-a*q)\""], ["proof (prove)\nusing this:\n  P dvd b * p + a * q \\<and> P dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q + (b * p - a * q) \\<and>\n    P dvd b * p + a * q - (b * p - a * q)", "by (simp only: dvd_add, simp only: dvd_diff)"], ["proof (state)\nthis:\n  P dvd b * p + a * q + (b * p - a * q) \\<and>\n  P dvd b * p + a * q - (b * p - a * q)\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "hence \"P dvd 2*(b*p) \\<and> P dvd 2*(a*q)\""], ["proof (prove)\nusing this:\n  P dvd b * p + a * q + (b * p - a * q) \\<and>\n  P dvd b * p + a * q - (b * p - a * q)\n\ngoal (1 subgoal):\n 1. P dvd 2 * (b * p) \\<and> P dvd 2 * (a * q)", "by (simp only: mult_2, auto)"], ["proof (state)\nthis:\n  P dvd 2 * (b * p) \\<and> P dvd 2 * (a * q)\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd 2 * (b * p) \\<and> P dvd 2 * (a * q)", "have \"(P dvd 2 \\<or> P dvd b*p) \\<and> (P dvd 2 \\<or> P dvd a*q)\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd 2 * (b * p) \\<and> P dvd 2 * (a * q)\n\ngoal (1 subgoal):\n 1. (P dvd 2 \\<or> P dvd b * p) \\<and> (P dvd 2 \\<or> P dvd a * q)", "using prime_dvd_multD"], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd 2 * (b * p) \\<and> P dvd 2 * (a * q)\n  \\<lbrakk>prime ?p; ?p dvd ?a * ?b\\<rbrakk>\n  \\<Longrightarrow> ?p dvd ?a \\<or> ?p dvd ?b\n\ngoal (1 subgoal):\n 1. (P dvd 2 \\<or> P dvd b * p) \\<and> (P dvd 2 \\<or> P dvd a * q)", "by blast"], ["proof (state)\nthis:\n  (P dvd 2 \\<or> P dvd b * p) \\<and> (P dvd 2 \\<or> P dvd a * q)\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "hence \"P dvd 2 \\<or> (P dvd b*p \\<and> P dvd a*q)\""], ["proof (prove)\nusing this:\n  (P dvd 2 \\<or> P dvd b * p) \\<and> (P dvd 2 \\<or> P dvd a * q)\n\ngoal (1 subgoal):\n 1. P dvd 2 \\<or> P dvd b * p \\<and> P dvd a * q", "by auto"], ["proof (state)\nthis:\n  P dvd 2 \\<or> P dvd b * p \\<and> P dvd a * q\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  P dvd 2 \\<or> P dvd b * p \\<and> P dvd a * q\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "have \"\\<not> P dvd 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> P dvd 2", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. P dvd 2 \\<Longrightarrow> False", "assume pdvd2: \"P dvd 2\""], ["proof (state)\nthis:\n  P dvd 2\n\ngoal (1 subgoal):\n 1. P dvd 2 \\<Longrightarrow> False", "have \"P \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<le> 2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> P \\<le> 2 \\<Longrightarrow> False", "assume \"\\<not> P \\<le> 2\""], ["proof (state)\nthis:\n  \\<not> P \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<not> P \\<le> 2 \\<Longrightarrow> False", "hence Pl2: \"P > 2\""], ["proof (prove)\nusing this:\n  \\<not> P \\<le> 2\n\ngoal (1 subgoal):\n 1. 2 < P", "by simp"], ["proof (state)\nthis:\n  2 < P\n\ngoal (1 subgoal):\n 1. \\<not> P \\<le> 2 \\<Longrightarrow> False", "with pdvd2"], ["proof (chain)\npicking this:\n  P dvd 2\n  2 < P", "show False"], ["proof (prove)\nusing this:\n  P dvd 2\n  2 < P\n\ngoal (1 subgoal):\n 1. False", "by (simp add: zdvd_not_zless)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<le> 2\n\ngoal (1 subgoal):\n 1. P dvd 2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  P \\<le> 2\n\ngoal (1 subgoal):\n 1. P dvd 2 \\<Longrightarrow> False", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have \"P > 1\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. 1 < P", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  1 < P\n\ngoal (1 subgoal):\n 1. P dvd 2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  P \\<le> 2\n  1 < P", "have \"P=2\""], ["proof (prove)\nusing this:\n  P \\<le> 2\n  1 < P\n\ngoal (1 subgoal):\n 1. P = 2", "by auto"], ["proof (state)\nthis:\n  P = 2\n\ngoal (1 subgoal):\n 1. P dvd 2 \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P = 2", "have \"odd 2\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P = 2\n\ngoal (1 subgoal):\n 1. odd (2::'a)", "by simp"], ["proof (state)\nthis:\n  odd (2::?'a1)\n\ngoal (1 subgoal):\n 1. P dvd 2 \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  odd (2::?'a1)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> P dvd 2\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  P dvd 2 \\<or> P dvd b * p \\<and> P dvd a * q\n  \\<not> P dvd 2", "have \"P dvd b*p \\<and> P dvd a*q\""], ["proof (prove)\nusing this:\n  P dvd 2 \\<or> P dvd b * p \\<and> P dvd a * q\n  \\<not> P dvd 2\n\ngoal (1 subgoal):\n 1. P dvd b * p \\<and> P dvd a * q", "by auto"], ["proof (state)\nthis:\n  P dvd b * p \\<and> P dvd a * q\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd b * p \\<and> P dvd a * q", "have \"(P dvd b \\<or> P dvd p) \\<and> (P dvd a \\<or> P dvd q)\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd b * p \\<and> P dvd a * q\n\ngoal (1 subgoal):\n 1. (P dvd b \\<or> P dvd p) \\<and> (P dvd a \\<or> P dvd q)", "using prime_dvd_multD"], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd b * p \\<and> P dvd a * q\n  \\<lbrakk>prime ?p; ?p dvd ?a * ?b\\<rbrakk>\n  \\<Longrightarrow> ?p dvd ?a \\<or> ?p dvd ?b\n\ngoal (1 subgoal):\n 1. (P dvd b \\<or> P dvd p) \\<and> (P dvd a \\<or> P dvd q)", "by blast"], ["proof (state)\nthis:\n  (P dvd b \\<or> P dvd p) \\<and> (P dvd a \\<or> P dvd q)\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (P dvd b \\<or> P dvd p) \\<and> (P dvd a \\<or> P dvd q)\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "have \"\\<not> P dvd p \\<and> \\<not> P dvd q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> P dvd p \\<and> \\<not> P dvd q", "proof (auto dest: ccontr)"], ["proof (state)\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "assume Pdvdp: \"P dvd p\""], ["proof (state)\nthis:\n  P dvd p\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "hence \"P dvd p^2\""], ["proof (prove)\nusing this:\n  P dvd p\n\ngoal (1 subgoal):\n 1. P dvd p\\<^sup>2", "by (simp only: dvd_mult power2_eq_square)"], ["proof (state)\nthis:\n  P dvd p\\<^sup>2\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "with PdvdPn"], ["proof (chain)\npicking this:\n  P dvd P ^ n\n  P dvd p\\<^sup>2", "have \"P dvd P^n-p^2\""], ["proof (prove)\nusing this:\n  P dvd P ^ n\n  P dvd p\\<^sup>2\n\ngoal (1 subgoal):\n 1. P dvd P ^ n - p\\<^sup>2", "by (simp only: dvd_diff)"], ["proof (state)\nthis:\n  P dvd P ^ n - p\\<^sup>2\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd P ^ n - p\\<^sup>2", "have \"P dvd N*(q*q)\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd P ^ n - p\\<^sup>2\n\ngoal (1 subgoal):\n 1. P dvd N * (q * q)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  P dvd N * (q * q)\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd N * (q * q)", "have h1: \"P dvd N \\<or> P dvd (q*q)\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd N * (q * q)\n\ngoal (1 subgoal):\n 1. P dvd N \\<or> P dvd q * q", "using prime_dvd_multD"], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd N * (q * q)\n  \\<lbrakk>prime ?p; ?p dvd ?a * ?b\\<rbrakk>\n  \\<Longrightarrow> ?p dvd ?a \\<or> ?p dvd ?b\n\ngoal (1 subgoal):\n 1. P dvd N \\<or> P dvd q * q", "by blast"], ["proof (state)\nthis:\n  P dvd N \\<or> P dvd q * q\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  P dvd N \\<or> P dvd q * q\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  P dvd N \\<or> P dvd q * q\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "assume \"P dvd (q*q)\""], ["proof (state)\nthis:\n  P dvd q * q\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "hence \"P dvd q\""], ["proof (prove)\nusing this:\n  P dvd q * q\n\ngoal (1 subgoal):\n 1. P dvd q", "using prime_dvd_multD ass"], ["proof (prove)\nusing this:\n  P dvd q * q\n  \\<lbrakk>prime ?p; ?p dvd ?a * ?b\\<rbrakk>\n  \\<Longrightarrow> ?p dvd ?a \\<or> ?p dvd ?b\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. P dvd q", "by blast"], ["proof (state)\nthis:\n  P dvd q\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  P dvd q * q \\<Longrightarrow> P dvd q\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  P dvd N \\<or> P dvd q * q\n  P dvd q * q \\<Longrightarrow> P dvd q", "have \"P dvd N*q\""], ["proof (prove)\nusing this:\n  P dvd N \\<or> P dvd q * q\n  P dvd q * q \\<Longrightarrow> P dvd q\n\ngoal (1 subgoal):\n 1. P dvd N * q", "by fastforce"], ["proof (state)\nthis:\n  P dvd N * q\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "with Pdvdp"], ["proof (chain)\npicking this:\n  P dvd p\n  P dvd N * q", "have \"P dvd gcd p (N*q)\""], ["proof (prove)\nusing this:\n  P dvd p\n  P dvd N * q\n\ngoal (1 subgoal):\n 1. P dvd gcd p (N * q)", "by simp"], ["proof (state)\nthis:\n  P dvd gcd p (N * q)\n\ngoal (2 subgoals):\n 1. P dvd p \\<Longrightarrow> False\n 2. P dvd q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd gcd p (N * q)", "show False"], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd gcd p (N * q)\n\ngoal (1 subgoal):\n 1. False", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "assume \"P dvd q\""], ["proof (state)\nthis:\n  P dvd q\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "hence PdvdNq: \"P dvd N*q\""], ["proof (prove)\nusing this:\n  P dvd q\n\ngoal (1 subgoal):\n 1. P dvd N * q", "by simp"], ["proof (state)\nthis:\n  P dvd N * q\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "hence \"P dvd N*q*q\""], ["proof (prove)\nusing this:\n  P dvd N * q\n\ngoal (1 subgoal):\n 1. P dvd N * q * q", "by simp"], ["proof (state)\nthis:\n  P dvd N * q * q\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "hence \"P dvd N*q^2\""], ["proof (prove)\nusing this:\n  P dvd N * q * q\n\ngoal (1 subgoal):\n 1. P dvd N * q\\<^sup>2", "by (simp add: power2_eq_square ac_simps)"], ["proof (state)\nthis:\n  P dvd N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "with PdvdPn"], ["proof (chain)\npicking this:\n  P dvd P ^ n\n  P dvd N * q\\<^sup>2", "have \"P dvd P^n-N*q^2\""], ["proof (prove)\nusing this:\n  P dvd P ^ n\n  P dvd N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. P dvd P ^ n - N * q\\<^sup>2", "by (simp only: dvd_diff)"], ["proof (state)\nthis:\n  P dvd P ^ n - N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd P ^ n - N * q\\<^sup>2", "have \"P dvd p*p\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd P ^ n - N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. P dvd p * p", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  P dvd p * p\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd p * p", "have \"P dvd p\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd p * p\n\ngoal (1 subgoal):\n 1. P dvd p", "by (auto dest: prime_dvd_multD)"], ["proof (state)\nthis:\n  P dvd p\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "with PdvdNq"], ["proof (chain)\npicking this:\n  P dvd N * q\n  P dvd p", "have \"P dvd gcd p (N*q)\""], ["proof (prove)\nusing this:\n  P dvd N * q\n  P dvd p\n\ngoal (1 subgoal):\n 1. P dvd gcd p (N * q)", "by auto"], ["proof (state)\nthis:\n  P dvd gcd p (N * q)\n\ngoal (1 subgoal):\n 1. P dvd q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd gcd p (N * q)", "show False"], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd gcd p (N * q)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: prime_int_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> P dvd p \\<and> \\<not> P dvd q\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (P dvd b \\<or> P dvd p) \\<and> (P dvd a \\<or> P dvd q)\n  \\<not> P dvd p \\<and> \\<not> P dvd q", "have \"P dvd a \\<and> P dvd b\""], ["proof (prove)\nusing this:\n  (P dvd b \\<or> P dvd p) \\<and> (P dvd a \\<or> P dvd q)\n  \\<not> P dvd p \\<and> \\<not> P dvd q\n\ngoal (1 subgoal):\n 1. P dvd a \\<and> P dvd b", "by auto"], ["proof (state)\nthis:\n  P dvd a \\<and> P dvd b\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "hence \"P dvd gcd a b\""], ["proof (prove)\nusing this:\n  P dvd a \\<and> P dvd b\n\ngoal (1 subgoal):\n 1. P dvd gcd a b", "by simp"], ["proof (state)\nthis:\n  P dvd gcd a b\n\ngoal (1 subgoal):\n 1. P dvd b * p + a * q \\<and> P dvd b * p - a * q \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd gcd a b", "show False"], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  P dvd gcd a b\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: prime_int_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> P dvd b * p + a * q \\<or> \\<not> P dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "moreover"], ["proof (state)\nthis:\n  \\<not> P dvd b * p + a * q \\<or> \\<not> P dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "{"], ["proof (state)\nthis:\n  \\<not> P dvd b * p + a * q \\<or> \\<not> P dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "assume \"\\<not> P dvd b*p+a*q\""], ["proof (state)\nthis:\n  \\<not> P dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "with Pn_dvd_prod and ass"], ["proof (chain)\npicking this:\n  P ^ n dvd (b * p + a * q) * (b * p - a * q)\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  \\<not> P dvd b * p + a * q", "have \"P^n dvd b*p-a*q\""], ["proof (prove)\nusing this:\n  P ^ n dvd (b * p + a * q) * (b * p - a * q)\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  \\<not> P dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p - a * q", "by (rule_tac b=\"b*p+a*q\" in prime_power_dvd_cancel_right, auto simp add: mult.commute)"], ["proof (state)\nthis:\n  P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "}"], ["proof (state)\nthis:\n  \\<not> P dvd b * p + a * q \\<Longrightarrow> P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "moreover"], ["proof (state)\nthis:\n  \\<not> P dvd b * p + a * q \\<Longrightarrow> P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "{"], ["proof (state)\nthis:\n  \\<not> P dvd b * p + a * q \\<Longrightarrow> P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "assume \"\\<not> P dvd b*p-a*q\""], ["proof (state)\nthis:\n  \\<not> P dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "with Pn_dvd_prod and ass"], ["proof (chain)\npicking this:\n  P ^ n dvd (b * p + a * q) * (b * p - a * q)\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  \\<not> P dvd b * p - a * q", "have \"P^n dvd b*p+a*q\""], ["proof (prove)\nusing this:\n  P ^ n dvd (b * p + a * q) * (b * p - a * q)\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  \\<not> P dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q", "by (rule_tac a=\"b*p+a*q\" in prime_power_dvd_cancel_right, simp)"], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "}"], ["proof (state)\nthis:\n  \\<not> P dvd b * p - a * q \\<Longrightarrow> P ^ n dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> P dvd b * p + a * q \\<or> \\<not> P dvd b * p - a * q\n  \\<not> P dvd b * p + a * q \\<Longrightarrow> P ^ n dvd b * p - a * q\n  \\<not> P dvd b * p - a * q \\<Longrightarrow> P ^ n dvd b * p + a * q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> P dvd b * p + a * q \\<or> \\<not> P dvd b * p - a * q\n  \\<not> P dvd b * p + a * q \\<Longrightarrow> P ^ n dvd b * p - a * q\n  \\<not> P dvd b * p - a * q \\<Longrightarrow> P ^ n dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q", "by auto"], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "moreover"], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "{"], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "assume \"P^n dvd b*p + a*q\""], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "hence \"P^n dvd b*p + 1*a*q \\<and> \\<bar>1\\<bar> = (1::int)\""], ["proof (prove)\nusing this:\n  P ^ n dvd b * p + a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1", "by simp"], ["proof (state)\nthis:\n  P ^ n dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "}"], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q \\<Longrightarrow>\n  P ^ n dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "moreover"], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q \\<Longrightarrow>\n  P ^ n dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "{"], ["proof (state)\nthis:\n  P ^ n dvd b * p + a * q \\<Longrightarrow>\n  P ^ n dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "assume \"P^n dvd b*p - a*q\""], ["proof (state)\nthis:\n  P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "hence \"P^n dvd b*p + (-1)*a*q \\<and> \\<bar>-1\\<bar> = (1::int)\""], ["proof (prove)\nusing this:\n  P ^ n dvd b * p - a * q\n\ngoal (1 subgoal):\n 1. P ^ n dvd b * p + - 1 * a * q \\<and> \\<bar>- 1\\<bar> = 1", "by simp"], ["proof (state)\nthis:\n  P ^ n dvd b * p + - 1 * a * q \\<and> \\<bar>- 1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "}"], ["proof (state)\nthis:\n  P ^ n dvd b * p - a * q \\<Longrightarrow>\n  P ^ n dvd b * p + - 1 * a * q \\<and> \\<bar>- 1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "ultimately"], ["proof (chain)\npicking this:\n  P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q\n  P ^ n dvd b * p + a * q \\<Longrightarrow>\n  P ^ n dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n  P ^ n dvd b * p - a * q \\<Longrightarrow>\n  P ^ n dvd b * p + - 1 * a * q \\<and> \\<bar>- 1\\<bar> = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  P ^ n dvd b * p + a * q \\<or> P ^ n dvd b * p - a * q\n  P ^ n dvd b * p + a * q \\<Longrightarrow>\n  P ^ n dvd b * p + 1 * a * q \\<and> \\<bar>1\\<bar> = 1\n  P ^ n dvd b * p - a * q \\<Longrightarrow>\n  P ^ n dvd b * p + - 1 * a * q \\<and> \\<bar>- 1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "by blast"], ["proof (state)\nthis:\n  \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "then"], ["proof (chain)\npicking this:\n  \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1", "obtain v e where v: \"b*p + e*a*q = P^n*v\" and e: \"\\<bar>e\\<bar> = 1\""], ["proof (prove)\nusing this:\n  \\<exists>e. P ^ n dvd b * p + e * a * q \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. (\\<And>e v.\n        \\<lbrakk>b * p + e * a * q = P ^ n * v; \\<bar>e\\<bar> = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: dvd_def)"], ["proof (state)\nthis:\n  b * p + e * a * q = P ^ n * v\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have \"P^n dvd a*p - e*N*b*q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ^ n dvd a * p - e * N * b * q", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "assume e1: \"e = 1\""], ["proof (state)\nthis:\n  e = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "from U"], ["proof (chain)\npicking this:\n  A ^ n = U * P ^ n", "have \"(P^n)^2*U = A^n*P^n\""], ["proof (prove)\nusing this:\n  A ^ n = U * P ^ n\n\ngoal (1 subgoal):\n 1. (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n", "by (simp add: power2_eq_square ac_simps)"], ["proof (state)\nthis:\n  (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "with e1 ass"], ["proof (chain)\npicking this:\n  e = 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*(b*p+e*a*q)^2\""], ["proof (prove)\nusing this:\n  e = 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n\n\ngoal (1 subgoal):\n 1. A ^ n * P ^ n =\n    (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2", "by (simp only: qfN_mult2 add.commute mult_1_left)"], ["proof (state)\nthis:\n  A ^ n * P ^ n =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  A ^ n * P ^ n =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "with v"], ["proof (chain)\npicking this:\n  b * p + e * a * q = P ^ n * v\n  A ^ n * P ^ n =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2", "have \"\\<dots> = (a*p-e*N*b*q)^2 + (P^n)^2*(N*v^2)\""], ["proof (prove)\nusing this:\n  b * p + e * a * q = P ^ n * v\n  A ^ n * P ^ n =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2 =\n    (a * p - e * N * b * q)\\<^sup>2 + (P ^ n)\\<^sup>2 * (N * v\\<^sup>2)", "by (simp only: power_mult_distrib ac_simps)"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + (P ^ n)\\<^sup>2 * (N * v\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "finally"], ["proof (chain)\npicking this:\n  (P ^ n)\\<^sup>2 * U =\n  (a * p - e * N * b * q)\\<^sup>2 + (P ^ n)\\<^sup>2 * (N * v\\<^sup>2)", "have \"(a*p-e*N*b*q)^2 = (P^n)^2*U - (P^n)^2*N*v^2\""], ["proof (prove)\nusing this:\n  (P ^ n)\\<^sup>2 * U =\n  (a * p - e * N * b * q)\\<^sup>2 + (P ^ n)\\<^sup>2 * (N * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 =\n    (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 =\n  (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 =\n  (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "have \"\\<dots> = (P^n)^2 * (U - N*v^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2 =\n    (P ^ n)\\<^sup>2 * (U - N * v\\<^sup>2)", "by (simp only: right_diff_distrib)"], ["proof (state)\nthis:\n  (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2 =\n  (P ^ n)\\<^sup>2 * (U - N * v\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "finally"], ["proof (chain)\npicking this:\n  (a * p - e * N * b * q)\\<^sup>2 = (P ^ n)\\<^sup>2 * (U - N * v\\<^sup>2)", "have \"(P^n)^2 dvd (a*p - e*N*b*q)^2\""], ["proof (prove)\nusing this:\n  (a * p - e * N * b * q)\\<^sup>2 = (P ^ n)\\<^sup>2 * (U - N * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (P ^ n)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2", "by (rule dvdI)"], ["proof (state)\nthis:\n  (P ^ n)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q\n 2. \\<not> ?P \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P ^ n)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. P ^ n dvd a * p - e * N * b * q", "by simp"], ["proof (state)\nthis:\n  P ^ n dvd a * p - e * N * b * q\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "assume \"\\<not> e=1\""], ["proof (state)\nthis:\n  e \\<noteq> 1\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "with e"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1\n  e \\<noteq> 1", "have e1: \"e=-1\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n  e \\<noteq> 1\n\ngoal (1 subgoal):\n 1. e = - 1", "by auto"], ["proof (state)\nthis:\n  e = - 1\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "from U"], ["proof (chain)\npicking this:\n  A ^ n = U * P ^ n", "have \"(P^n)^2 * U = A^n * P^n\""], ["proof (prove)\nusing this:\n  A ^ n = U * P ^ n\n\ngoal (1 subgoal):\n 1. (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "with e1 ass"], ["proof (chain)\npicking this:\n  e = - 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*( -(b*p+e*a*q))^2\""], ["proof (prove)\nusing this:\n  e = - 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  (P ^ n)\\<^sup>2 * U = A ^ n * P ^ n\n\ngoal (1 subgoal):\n 1. A ^ n * P ^ n =\n    (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2", "by (simp add: qfN_mult1)"], ["proof (state)\nthis:\n  A ^ n * P ^ n =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  A ^ n * P ^ n =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*(b*p+e*a*q)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n    (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2", "by (simp only: power2_minus)"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "with v and ass"], ["proof (chain)\npicking this:\n  b * p + e * a * q = P ^ n * v\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2", "have \"\\<dots> = (a*p-e*N*b*q)^2 + N*v^2*(P^n)^2\""], ["proof (prove)\nusing this:\n  b * p + e * a * q = P ^ n * v\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  (a * p - e * N * b * q)\\<^sup>2 + N * (- (b * p + e * a * q))\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2 =\n    (a * p - e * N * b * q)\\<^sup>2 + N * v\\<^sup>2 * (P ^ n)\\<^sup>2", "by (simp only: power_mult_distrib ac_simps)"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 + N * (b * p + e * a * q)\\<^sup>2 =\n  (a * p - e * N * b * q)\\<^sup>2 + N * v\\<^sup>2 * (P ^ n)\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "finally"], ["proof (chain)\npicking this:\n  (P ^ n)\\<^sup>2 * U =\n  (a * p - e * N * b * q)\\<^sup>2 + N * v\\<^sup>2 * (P ^ n)\\<^sup>2", "have \"(a*p-e*N*b*q)^2 = (P^n)^2*U-(P^n)^2*N*v^2\""], ["proof (prove)\nusing this:\n  (P ^ n)\\<^sup>2 * U =\n  (a * p - e * N * b * q)\\<^sup>2 + N * v\\<^sup>2 * (P ^ n)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * p - e * N * b * q)\\<^sup>2 =\n    (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 =\n  (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "also"], ["proof (state)\nthis:\n  (a * p - e * N * b * q)\\<^sup>2 =\n  (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "have \"\\<dots> = (P^n)^2 * (U - N*v^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2 =\n    (P ^ n)\\<^sup>2 * (U - N * v\\<^sup>2)", "by (simp only: right_diff_distrib)"], ["proof (state)\nthis:\n  (P ^ n)\\<^sup>2 * U - (P ^ n)\\<^sup>2 * N * v\\<^sup>2 =\n  (P ^ n)\\<^sup>2 * (U - N * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "finally"], ["proof (chain)\npicking this:\n  (a * p - e * N * b * q)\\<^sup>2 = (P ^ n)\\<^sup>2 * (U - N * v\\<^sup>2)", "have \"(P^n)^2 dvd (a*p-e*N*b*q)^2\""], ["proof (prove)\nusing this:\n  (a * p - e * N * b * q)\\<^sup>2 = (P ^ n)\\<^sup>2 * (U - N * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (P ^ n)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2", "by (rule dvdI)"], ["proof (state)\nthis:\n  (P ^ n)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow> P ^ n dvd a * p - e * N * b * q", "thus ?thesis"], ["proof (prove)\nusing this:\n  (P ^ n)\\<^sup>2 dvd (a * p - e * N * b * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. P ^ n dvd a * p - e * N * b * q", "by simp"], ["proof (state)\nthis:\n  P ^ n dvd a * p - e * N * b * q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P ^ n dvd a * p - e * N * b * q\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "then"], ["proof (chain)\npicking this:\n  P ^ n dvd a * p - e * N * b * q", "obtain u where u: \"a*p - e*N*b*q = P^n*u\""], ["proof (prove)\nusing this:\n  P ^ n dvd a * p - e * N * b * q\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        a * p - e * N * b * q = P ^ n * u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: dvd_def)"], ["proof (state)\nthis:\n  a * p - e * N * b * q = P ^ n * u\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "from e"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1", "have e2_1: \"e * e = 1\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. e * e = 1", "using abs_mult_self_eq [of e]"], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n  \\<bar>e\\<bar> * \\<bar>e\\<bar> = e * e\n\ngoal (1 subgoal):\n 1. e * e = 1", "by simp"], ["proof (state)\nthis:\n  e * e = 1\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have a: \"a = p*u + e*N*q*v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have \"(p*u + e*N*q*v)*P^n = p*(P^n*u) + (e*N*q)*(P^n*v)\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. (p * u + e * N * q * v) * P ^ n =\n    p * (P ^ n * u) + e * N * q * (P ^ n * v)", "by (simp only: distrib_right ac_simps)"], ["proof (state)\nthis:\n  (p * u + e * N * q * v) * P ^ n =\n  p * (P ^ n * u) + e * N * q * (P ^ n * v)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "also"], ["proof (state)\nthis:\n  (p * u + e * N * q * v) * P ^ n =\n  p * (P ^ n * u) + e * N * q * (P ^ n * v)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "with v and u"], ["proof (chain)\npicking this:\n  b * p + e * a * q = P ^ n * v\n  a * p - e * N * b * q = P ^ n * u\n  (p * u + e * N * q * v) * P ^ n =\n  p * (P ^ n * u) + e * N * q * (P ^ n * v)", "have \"\\<dots> = p*(a*p - e*N*b*q) + (e*N*q)*(b*p + e*a*q)\""], ["proof (prove)\nusing this:\n  b * p + e * a * q = P ^ n * v\n  a * p - e * N * b * q = P ^ n * u\n  (p * u + e * N * q * v) * P ^ n =\n  p * (P ^ n * u) + e * N * q * (P ^ n * v)\n\ngoal (1 subgoal):\n 1. p * (P ^ n * u) + e * N * q * (P ^ n * v) =\n    p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q)", "by simp"], ["proof (state)\nthis:\n  p * (P ^ n * u) + e * N * q * (P ^ n * v) =\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "also"], ["proof (state)\nthis:\n  p * (P ^ n * u) + e * N * q * (P ^ n * v) =\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "have \"\\<dots> = a*(p^2 + e*e*N*q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n    a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)", "by (simp add: power2_eq_square distrib_left ac_simps right_diff_distrib)"], ["proof (state)\nthis:\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "also"], ["proof (state)\nthis:\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "with e2_1 and ass"], ["proof (chain)\npicking this:\n  e * e = 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)", "have \"\\<dots> = a*P^n\""], ["proof (prove)\nusing this:\n  e * e = 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  p * (a * p - e * N * b * q) + e * N * q * (b * p + e * a * q) =\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a * (p\\<^sup>2 + e * e * N * q\\<^sup>2) = a * P ^ n", "by simp"], ["proof (state)\nthis:\n  a * (p\\<^sup>2 + e * e * N * q\\<^sup>2) = a * P ^ n\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "finally"], ["proof (chain)\npicking this:\n  (p * u + e * N * q * v) * P ^ n = a * P ^ n", "have \"(a-(p*u+e*N*q*v))*P^n = 0\""], ["proof (prove)\nusing this:\n  (p * u + e * N * q * v) * P ^ n = a * P ^ n\n\ngoal (1 subgoal):\n 1. (a - (p * u + e * N * q * v)) * P ^ n = 0", "by auto"], ["proof (state)\nthis:\n  (a - (p * u + e * N * q * v)) * P ^ n = 0\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "moreover"], ["proof (state)\nthis:\n  (a - (p * u + e * N * q * v)) * P ^ n = 0\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have \"P^n \\<noteq> 0\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. P ^ n \\<noteq> 0", "by (unfold prime_int_iff, auto)"], ["proof (state)\nthis:\n  P ^ n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "ultimately"], ["proof (chain)\npicking this:\n  (a - (p * u + e * N * q * v)) * P ^ n = 0\n  P ^ n \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (a - (p * u + e * N * q * v)) * P ^ n = 0\n  P ^ n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. a = p * u + e * N * q * v", "by auto"], ["proof (state)\nthis:\n  a = p * u + e * N * q * v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = p * u + e * N * q * v\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "moreover"], ["proof (state)\nthis:\n  a = p * u + e * N * q * v\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have b: \"b = p*v-e*q*u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have \"(p*v-e*q*u)*P^n = p*(P^n*v) - (e*q)*(P^n*u)\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. (p * v - e * q * u) * P ^ n = p * (P ^ n * v) - e * q * (P ^ n * u)", "by (simp only: left_diff_distrib ac_simps)"], ["proof (state)\nthis:\n  (p * v - e * q * u) * P ^ n = p * (P ^ n * v) - e * q * (P ^ n * u)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "also"], ["proof (state)\nthis:\n  (p * v - e * q * u) * P ^ n = p * (P ^ n * v) - e * q * (P ^ n * u)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "with v u"], ["proof (chain)\npicking this:\n  b * p + e * a * q = P ^ n * v\n  a * p - e * N * b * q = P ^ n * u\n  (p * v - e * q * u) * P ^ n = p * (P ^ n * v) - e * q * (P ^ n * u)", "have \"\\<dots> = p*(b*p+e*a*q) - e*q*(a*p-e*N*b*q)\""], ["proof (prove)\nusing this:\n  b * p + e * a * q = P ^ n * v\n  a * p - e * N * b * q = P ^ n * u\n  (p * v - e * q * u) * P ^ n = p * (P ^ n * v) - e * q * (P ^ n * u)\n\ngoal (1 subgoal):\n 1. p * (P ^ n * v) - e * q * (P ^ n * u) =\n    p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q)", "by simp"], ["proof (state)\nthis:\n  p * (P ^ n * v) - e * q * (P ^ n * u) =\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "also"], ["proof (state)\nthis:\n  p * (P ^ n * v) - e * q * (P ^ n * u) =\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "have \"\\<dots> = b*(p^2 + e*e*N*q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n    b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)", "by (simp add: power2_eq_square distrib_left ac_simps right_diff_distrib)"], ["proof (state)\nthis:\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "also"], ["proof (state)\nthis:\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "with e2_1 and ass"], ["proof (chain)\npicking this:\n  e * e = 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)", "have \"\\<dots> = b * P^n\""], ["proof (prove)\nusing this:\n  e * e = 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  p * (b * p + e * a * q) - e * q * (a * p - e * N * b * q) =\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. b * (p\\<^sup>2 + e * e * N * q\\<^sup>2) = b * P ^ n", "by simp"], ["proof (state)\nthis:\n  b * (p\\<^sup>2 + e * e * N * q\\<^sup>2) = b * P ^ n\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "finally"], ["proof (chain)\npicking this:\n  (p * v - e * q * u) * P ^ n = b * P ^ n", "have \"(b-(p*v-e*q*u))*P^n = 0\""], ["proof (prove)\nusing this:\n  (p * v - e * q * u) * P ^ n = b * P ^ n\n\ngoal (1 subgoal):\n 1. (b - (p * v - e * q * u)) * P ^ n = 0", "by auto"], ["proof (state)\nthis:\n  (b - (p * v - e * q * u)) * P ^ n = 0\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "moreover"], ["proof (state)\nthis:\n  (b - (p * v - e * q * u)) * P ^ n = 0\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have \"P^n \\<noteq> 0\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. P ^ n \\<noteq> 0", "by (unfold prime_int_iff, auto)"], ["proof (state)\nthis:\n  P ^ n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "ultimately"], ["proof (chain)\npicking this:\n  (b - (p * v - e * q * u)) * P ^ n = 0\n  P ^ n \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (b - (p * v - e * q * u)) * P ^ n = 0\n  P ^ n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b = p * v - e * q * u", "by auto"], ["proof (state)\nthis:\n  b = p * v - e * q * u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b = p * v - e * q * u\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "moreover"], ["proof (state)\nthis:\n  b = p * v - e * q * u\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have \"A^n = (u^2 + N*v^2)*P^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n\n 2. \\<not> ?P \\<Longrightarrow> A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "assume \"e=1\""], ["proof (state)\nthis:\n  e = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n\n 2. \\<not> ?P \\<Longrightarrow> A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "with a and b and ass"], ["proof (chain)\npicking this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  e = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  e = 1\n\ngoal (1 subgoal):\n 1. A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "by (simp add: qfN_mult1 ac_simps)"], ["proof (state)\nthis:\n  A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "assume \"\\<not> e=1\""], ["proof (state)\nthis:\n  e \\<noteq> 1\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "with e"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1\n  e \\<noteq> 1", "have \"e=-1\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n  e \\<noteq> 1\n\ngoal (1 subgoal):\n 1. e = - 1", "by simp"], ["proof (state)\nthis:\n  e = - 1\n\ngoal (1 subgoal):\n 1. e \\<noteq> 1 \\<Longrightarrow>\n    A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "with a and b and ass"], ["proof (chain)\npicking this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  e = - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n  e = - 1\n\ngoal (1 subgoal):\n 1. A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n", "by (simp add: qfN_mult2 ac_simps)"], ["proof (state)\nthis:\n  A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "moreover"], ["proof (state)\nthis:\n  A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "have \"coprime u v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime u v", "using \\<open>coprime a b\\<close>"], ["proof (prove)\nusing this:\n  coprime a b\n\ngoal (1 subgoal):\n 1. coprime u v", "proof (rule coprime_imp_coprime)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lbrakk>\\<not> is_unit e; e dvd u; e dvd v\\<rbrakk>\n       \\<Longrightarrow> e dvd a\n 2. \\<And>e.\n       \\<lbrakk>\\<not> is_unit e; e dvd u; e dvd v\\<rbrakk>\n       \\<Longrightarrow> e dvd b", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lbrakk>\\<not> is_unit e; e dvd u; e dvd v\\<rbrakk>\n       \\<Longrightarrow> e dvd a\n 2. \\<And>e.\n       \\<lbrakk>\\<not> is_unit e; e dvd u; e dvd v\\<rbrakk>\n       \\<Longrightarrow> e dvd b", "assume \"w dvd u\" \"w dvd v\""], ["proof (state)\nthis:\n  w dvd u\n  w dvd v\n\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lbrakk>\\<not> is_unit e; e dvd u; e dvd v\\<rbrakk>\n       \\<Longrightarrow> e dvd a\n 2. \\<And>e.\n       \\<lbrakk>\\<not> is_unit e; e dvd u; e dvd v\\<rbrakk>\n       \\<Longrightarrow> e dvd b", "then"], ["proof (chain)\npicking this:\n  w dvd u\n  w dvd v", "have \"w dvd u*p + v*(e*N*q) \\<and> w dvd v*p - u*(e*q)\""], ["proof (prove)\nusing this:\n  w dvd u\n  w dvd v\n\ngoal (1 subgoal):\n 1. w dvd u * p + v * (e * N * q) \\<and> w dvd v * p - u * (e * q)", "by simp"], ["proof (state)\nthis:\n  w dvd u * p + v * (e * N * q) \\<and> w dvd v * p - u * (e * q)\n\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lbrakk>\\<not> is_unit e; e dvd u; e dvd v\\<rbrakk>\n       \\<Longrightarrow> e dvd a\n 2. \\<And>e.\n       \\<lbrakk>\\<not> is_unit e; e dvd u; e dvd v\\<rbrakk>\n       \\<Longrightarrow> e dvd b", "with a b"], ["proof (chain)\npicking this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  w dvd u * p + v * (e * N * q) \\<and> w dvd v * p - u * (e * q)", "show \"w dvd a\" \"w dvd b\""], ["proof (prove)\nusing this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  w dvd u * p + v * (e * N * q) \\<and> w dvd v * p - u * (e * q)\n\ngoal (1 subgoal):\n 1. w dvd a &&& w dvd b", "by (auto simp only: ac_simps)"], ["proof (state)\nthis:\n  w dvd a\n  w dvd b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime u v\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "moreover"], ["proof (state)\nthis:\n  coprime u v\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "from e and ass"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n", "have\n    \"\\<bar>e\\<bar> = 1 \\<and> A^n = a^2+N*b^2 \\<and> P^n = p^2+N*q^2\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n  prime P \\<and>\n  odd P \\<and>\n  P dvd A \\<and>\n  P ^ n = p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b \\<and> coprime p (N * q) \\<and> 0 < n\n\ngoal (1 subgoal):\n 1. \\<bar>e\\<bar> = 1 \\<and>\n    A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n    P ^ n = p\\<^sup>2 + N * q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<bar>e\\<bar> = 1 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and> P ^ n = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "ultimately"], ["proof (chain)\npicking this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n\n  coprime u v\n  \\<bar>e\\<bar> = 1 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and> P ^ n = p\\<^sup>2 + N * q\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  a = p * u + e * N * q * v\n  b = p * v - e * q * u\n  A ^ n = (u\\<^sup>2 + N * v\\<^sup>2) * P ^ n\n  coprime u v\n  \\<bar>e\\<bar> = 1 \\<and>\n  A ^ n = a\\<^sup>2 + N * b\\<^sup>2 \\<and> P ^ n = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + N * b\\<^sup>2 =\n       (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = p * u + e * N * q * v \\<and>\n           b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)", "by auto"], ["proof (state)\nthis:\n  \\<exists>u v.\n     a\\<^sup>2 + N * b\\<^sup>2 =\n     (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n     coprime u v \\<and>\n     (\\<exists>e.\n         a = p * u + e * N * q * v \\<and>\n         b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfN_primedivisor_not:\n  assumes ass: \"prime P \\<and> Q > 0 \\<and> is_qfN (P*Q) N \\<and> \\<not> is_qfN P N\"\n  shows \"\\<exists> R. (prime R \\<and> R dvd Q \\<and> \\<not> is_qfN R N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R. prime R \\<and> R dvd Q \\<and> \\<not> is_qfN R N", "proof (rule ccontr, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> is_qfN R N \\<Longrightarrow>\n    False", "assume ass2: \"\\<forall> R. R dvd Q \\<longrightarrow> prime R \\<longrightarrow> is_qfN R N\""], ["proof (state)\nthis:\n  \\<forall>R. R dvd Q \\<longrightarrow> prime R \\<longrightarrow> is_qfN R N\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> is_qfN R N \\<Longrightarrow>\n    False", "define ps where \"ps = prime_factorization (nat Q)\""], ["proof (state)\nthis:\n  ps = prime_factorization (nat Q)\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> is_qfN R N \\<Longrightarrow>\n    False", "from ass"], ["proof (chain)\npicking this:\n  prime P \\<and> 0 < Q \\<and> is_qfN (P * Q) N \\<and> \\<not> is_qfN P N", "have ps: \"(\\<forall>p\\<in>set_mset ps. prime p) \\<and> Q = int (\\<Prod>i\\<in>#ps. i)\""], ["proof (prove)\nusing this:\n  prime P \\<and> 0 < Q \\<and> is_qfN (P * Q) N \\<and> \\<not> is_qfN P N\n\ngoal (1 subgoal):\n 1. (\\<forall>p\\<in>#ps. prime p) \\<and> Q = int (\\<Prod>i\\<in>#ps. i)", "by (auto simp: ps_def prod_mset_prime_factorization_int)"], ["proof (state)\nthis:\n  (\\<forall>p\\<in>#ps. prime p) \\<and> Q = int (\\<Prod>i\\<in>#ps. i)\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> is_qfN R N \\<Longrightarrow>\n    False", "have ps_lemma: \"((\\<forall>p\\<in>set_mset ps. prime p) \\<and> is_qfN (P*int(\\<Prod>i\\<in>#ps. i)) N\n    \\<and> (\\<forall>R. (prime R \\<and> R dvd int(\\<Prod>i\\<in>#ps. i)) \\<longrightarrow> is_qfN R N)) \\<Longrightarrow> False\"\n    (is \"?B ps \\<Longrightarrow> False\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>p\\<in>#ps. prime p) \\<and>\n    is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n    (\\<forall>R.\n        prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n        is_qfN R N) \\<Longrightarrow>\n    False", "proof (induct ps)"], ["proof (state)\ngoal (2 subgoals):\n 1. Multiset.Ball {#} prime \\<and>\n    is_qfN (P * int (\\<Prod>i\\<in>#{#}. i)) N \\<and>\n    (\\<forall>R.\n        prime R \\<and> R dvd int (\\<Prod>i\\<in>#{#}. i) \\<longrightarrow>\n        is_qfN R N) \\<Longrightarrow>\n    False\n 2. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "case empty"], ["proof (state)\nthis:\n  (\\<forall>a\\<in>#{#}. prime a) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#{#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#{#}. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (2 subgoals):\n 1. Multiset.Ball {#} prime \\<and>\n    is_qfN (P * int (\\<Prod>i\\<in>#{#}. i)) N \\<and>\n    (\\<forall>R.\n        prime R \\<and> R dvd int (\\<Prod>i\\<in>#{#}. i) \\<longrightarrow>\n        is_qfN R N) \\<Longrightarrow>\n    False\n 2. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"is_qfN P N\""], ["proof (prove)\nusing this:\n  (\\<forall>a\\<in>#{#}. prime a) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#{#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#{#}. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. is_qfN P N", "by simp"], ["proof (state)\nthis:\n  is_qfN P N\n\ngoal (2 subgoals):\n 1. Multiset.Ball {#} prime \\<and>\n    is_qfN (P * int (\\<Prod>i\\<in>#{#}. i)) N \\<and>\n    (\\<forall>R.\n        prime R \\<and> R dvd int (\\<Prod>i\\<in>#{#}. i) \\<longrightarrow>\n        is_qfN R N) \\<Longrightarrow>\n    False\n 2. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and> 0 < Q \\<and> is_qfN (P * Q) N \\<and> \\<not> is_qfN P N\n  is_qfN P N", "show False"], ["proof (prove)\nusing this:\n  prime P \\<and> 0 < Q \\<and> is_qfN (P * Q) N \\<and> \\<not> is_qfN P N\n  is_qfN P N\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "case (add p ps)"], ["proof (state)\nthis:\n  (\\<forall>a\\<in>#ps. prime a) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False\n  (\\<forall>a\\<in>#add_mset p ps. prime a) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#add_mset p ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#add_mset p ps. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "hence ass3: \"?B ps \\<Longrightarrow> False\"\n      and IH: \"?B (ps + {#p#})\""], ["proof (prove)\nusing this:\n  (\\<forall>a\\<in>#ps. prime a) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False\n  (\\<forall>a\\<in>#add_mset p ps. prime a) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#add_mset p ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#add_mset p ps. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. ((\\<forall>p\\<in>#ps. prime p) \\<and>\n     is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n     (\\<forall>R.\n         prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n         is_qfN R N) \\<Longrightarrow>\n     False) &&&\n    (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n    is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n    (\\<forall>R.\n        prime R \\<and>\n        R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n        is_qfN R N)", "by simp_all"], ["proof (state)\nthis:\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False\n  (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "hence p: \"prime (int p)\" and \"int p dvd int(\\<Prod>i\\<in>#ps + {#p#}. i)\""], ["proof (prove)\nusing this:\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False\n  (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. prime (int p) &&& int p dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)", "by auto"], ["proof (state)\nthis:\n  prime (int p)\n  int p dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  prime (int p)\n  int p dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "with IH"], ["proof (chain)\npicking this:\n  (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n      is_qfN R N)\n  prime (int p)\n  int p dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)", "have pqfN: \"is_qfN (int p) N\"\n      and \"int p dvd P*int(\\<Prod>i\\<in>#ps + {#p#}. i)\" and \"is_qfN (P*int(\\<Prod>i\\<in>#ps + {#p#}. i)) N\""], ["proof (prove)\nusing this:\n  (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n      is_qfN R N)\n  prime (int p)\n  int p dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)\n\ngoal (1 subgoal):\n 1. is_qfN (int p) N &&&\n    int p dvd P * int (\\<Prod>i\\<in>#ps + {#p#}. i) &&&\n    is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N", "by auto"], ["proof (state)\nthis:\n  is_qfN (int p) N\n  int p dvd P * int (\\<Prod>i\\<in>#ps + {#p#}. i)\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  prime (int p)\n  int p dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)\n  is_qfN (int p) N\n  int p dvd P * int (\\<Prod>i\\<in>#ps + {#p#}. i)\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N", "obtain S where S: \"P*int(\\<Prod>i\\<in>#ps + {#p#}. i) = S*(int p) \\<and> is_qfN S N\""], ["proof (prove)\nusing this:\n  prime (int p)\n  int p dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)\n  is_qfN (int p) N\n  int p dvd P * int (\\<Prod>i\\<in>#ps + {#p#}. i)\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        P * int (\\<Prod>i\\<in>#ps + {#p#}. i) = S * int p \\<and>\n        is_qfN S N \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using qfN_div_prime_general"], ["proof (prove)\nusing this:\n  prime (int p)\n  int p dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)\n  is_qfN (int p) N\n  int p dvd P * int (\\<Prod>i\\<in>#ps + {#p#}. i)\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N\n  \\<lbrakk>prime ?P; ?P dvd ?A; is_qfN ?A ?N; is_qfN ?P ?N\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q. ?A = Q * ?P \\<and> is_qfN Q ?N\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        P * int (\\<Prod>i\\<in>#ps + {#p#}. i) = S * int p \\<and>\n        is_qfN S N \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P * int (\\<Prod>i\\<in>#ps + {#p#}. i) = S * int p \\<and> is_qfN S N\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"(int p)*(P* int(\\<Prod>i\\<in>#ps. i) - S) = 0\""], ["proof (prove)\nusing this:\n  P * int (\\<Prod>i\\<in>#ps + {#p#}. i) = S * int p \\<and> is_qfN S N\n\ngoal (1 subgoal):\n 1. int p * (P * int (\\<Prod>i\\<in>#ps. i) - S) = 0", "by auto"], ["proof (state)\nthis:\n  int p * (P * int (\\<Prod>i\\<in>#ps. i) - S) = 0\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "with p S"], ["proof (chain)\npicking this:\n  prime (int p)\n  P * int (\\<Prod>i\\<in>#ps + {#p#}. i) = S * int p \\<and> is_qfN S N\n  int p * (P * int (\\<Prod>i\\<in>#ps. i) - S) = 0", "have \"is_qfN (P*int(\\<Prod>i\\<in>#ps. i)) N\""], ["proof (prove)\nusing this:\n  prime (int p)\n  P * int (\\<Prod>i\\<in>#ps + {#p#}. i) = S * int p \\<and> is_qfN S N\n  int p * (P * int (\\<Prod>i\\<in>#ps. i) - S) = 0\n\ngoal (1 subgoal):\n 1. is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N", "by (auto simp add: prime_int_iff)"], ["proof (state)\nthis:\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "from IH"], ["proof (chain)\npicking this:\n  (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n      is_qfN R N)", "have \"(\\<forall>p\\<in>set_mset ps. prime p)\""], ["proof (prove)\nusing this:\n  (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>#ps. prime p", "by simp"], ["proof (state)\nthis:\n  \\<forall>p\\<in>#ps. prime p\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<forall>p\\<in>#ps. prime p\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "from IH"], ["proof (chain)\npicking this:\n  (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n      is_qfN R N)", "have \"\\<forall> R. prime R \\<and> R dvd int(\\<Prod>i\\<in>#ps. i) \\<longrightarrow> is_qfN R N\""], ["proof (prove)\nusing this:\n  (\\<forall>p\\<in>#ps + {#p#}. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps + {#p#}. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and>\n      R dvd int (\\<Prod>i\\<in>#ps + {#p#}. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n       is_qfN R N", "by auto"], ["proof (state)\nthis:\n  \\<forall>R.\n     prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n     is_qfN R N\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N\n  \\<forall>p\\<in>#ps. prime p\n  \\<forall>R.\n     prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n     is_qfN R N", "have \"?B ps\""], ["proof (prove)\nusing this:\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N\n  \\<forall>p\\<in>#ps. prime p\n  \\<forall>R.\n     prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n     is_qfN R N\n\ngoal (1 subgoal):\n 1. (\\<forall>p\\<in>#ps. prime p) \\<and>\n    is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n    (\\<forall>R.\n        prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n        is_qfN R N)", "by simp"], ["proof (state)\nthis:\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. \\<And>x ps.\n       \\<lbrakk>Multiset.Ball ps prime \\<and>\n                is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n                (\\<forall>R.\n                    prime R \\<and>\n                    R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n                    is_qfN R N) \\<Longrightarrow>\n                False;\n        Multiset.Ball (add_mset x ps) prime \\<and>\n        is_qfN (P * int (\\<Prod>i\\<in>#add_mset x ps. i)) N \\<and>\n        (\\<forall>R.\n            prime R \\<and>\n            R dvd int (\\<Prod>i\\<in>#add_mset x ps. i) \\<longrightarrow>\n            is_qfN R N)\\<rbrakk>\n       \\<Longrightarrow> False", "with ass3"], ["proof (chain)\npicking this:\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N)", "show False"], ["proof (prove)\nusing this:\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> is_qfN R N \\<Longrightarrow>\n    False", "with ps ass2 ass"], ["proof (chain)\npicking this:\n  (\\<forall>p\\<in>#ps. prime p) \\<and> Q = int (\\<Prod>i\\<in>#ps. i)\n  \\<forall>R. R dvd Q \\<longrightarrow> prime R \\<longrightarrow> is_qfN R N\n  prime P \\<and> 0 < Q \\<and> is_qfN (P * Q) N \\<and> \\<not> is_qfN P N\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False", "show False"], ["proof (prove)\nusing this:\n  (\\<forall>p\\<in>#ps. prime p) \\<and> Q = int (\\<Prod>i\\<in>#ps. i)\n  \\<forall>R. R dvd Q \\<longrightarrow> prime R \\<longrightarrow> is_qfN R N\n  prime P \\<and> 0 < Q \\<and> is_qfN (P * Q) N \\<and> \\<not> is_qfN P N\n  (\\<forall>p\\<in>#ps. prime p) \\<and>\n  is_qfN (P * int (\\<Prod>i\\<in>#ps. i)) N \\<and>\n  (\\<forall>R.\n      prime R \\<and> R dvd int (\\<Prod>i\\<in>#ps. i) \\<longrightarrow>\n      is_qfN R N) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prime_factor_int:\n  fixes k :: int\n  assumes \"\\<bar>k\\<bar> \\<noteq> 1\"\n  obtains p where \"prime p\" \"p dvd k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; p dvd k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  k = 0", "have \"prime (2::int)\" and \"2 dvd k\""], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. prime 2 &&& even k", "by simp_all"], ["proof (state)\nthis:\n  prime 2\n  even k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k = 0\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>prime ?p; ?p dvd k\\<rbrakk> \\<Longrightarrow> thesis\n  prime 2\n  even k", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime ?p; ?p dvd k\\<rbrakk> \\<Longrightarrow> thesis\n  prime 2\n  even k\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "with assms prime_divisor_exists [of k]"], ["proof (chain)\npicking this:\n  \\<bar>k\\<bar> \\<noteq> 1\n  \\<lbrakk>k \\<noteq> 0; \\<not> is_unit k\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b. b dvd k \\<and> prime b\n  k \\<noteq> 0", "obtain p where \"prime p\" \"p dvd k\""], ["proof (prove)\nusing this:\n  \\<bar>k\\<bar> \\<noteq> 1\n  \\<lbrakk>k \\<noteq> 0; \\<not> is_unit k\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b. b dvd k \\<and> prime b\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>prime p; p dvd k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prime p\n  p dvd k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>p.\n                \\<lbrakk>prime p; p dvd k\\<rbrakk> \\<Longrightarrow> thesis;\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>prime ?p; ?p dvd k\\<rbrakk> \\<Longrightarrow> thesis\n  prime p\n  p dvd k", "show thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime ?p; ?p dvd k\\<rbrakk> \\<Longrightarrow> thesis\n  prime p\n  p dvd k\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfN_oddprime_cube:\n  \"\\<lbrakk> prime (p^2+N*q^2::int); odd (p^2+N*q^2); p \\<noteq> 0; N \\<ge> 1 \\<rbrakk>\n  \\<Longrightarrow> \\<exists> a b. (p^2+N*q^2)^3 = a^2 + N*b^2 \\<and> coprime a (N*b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "let ?P = \"p^2+N*q^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "assume P: \"prime ?P\" and Podd: \"odd ?P\" and p0: \"p \\<noteq> 0\" and N1: \"N \\<ge> 1\""], ["proof (state)\nthis:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  odd (p\\<^sup>2 + N * q\\<^sup>2)\n  p \\<noteq> 0\n  1 \\<le> N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "have suc23: \"3 = Suc 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 = Suc 2", "by simp"], ["proof (state)\nthis:\n  3 = Suc 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "let ?a = \"p*(p^2 - 3*N*q^2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "let ?b = \"q*(3*p^2 - N*q^2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "have abP: \"?P^3 = ?a^2 + N*?b^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n    (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2 +\n    N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n  (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2 +\n  N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "have \"?P dvd p\" if h1: \"gcd ?b ?a \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "let ?h = \"gcd ?b ?a\""], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "have h2: \"?h \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n             (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n           (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"?h = 0 \\<or> ?h = 1 \\<or> ?h > 1\""], ["proof (prove)\nusing this:\n  0 \\<le> gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n           (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n     (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n    0 \\<or>\n    gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n     (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n    1 \\<or>\n    1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n         (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "by arith"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<or>\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  1 \\<or>\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with h1"], ["proof (chain)\npicking this:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq>\n  1\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<or>\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  1 \\<or>\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "have \"?h =0 \\<or> ?h >1\""], ["proof (prove)\nusing this:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq>\n  1\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<or>\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  1 \\<or>\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n     (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n    0 \\<or>\n    1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n         (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<or>\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "moreover"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<or>\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "{"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<or>\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "assume \"?h = 0\""], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"?a = 0 \\<and> ?b = 0\""], ["proof (prove)\nusing this:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0\n\ngoal (1 subgoal):\n 1. p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) = 0 \\<and>\n    q * (3 * p\\<^sup>2 - N * q\\<^sup>2) = 0", "by auto"], ["proof (state)\nthis:\n  p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) = 0 \\<and>\n  q * (3 * p\\<^sup>2 - N * q\\<^sup>2) = 0\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with abP"], ["proof (chain)\npicking this:\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n  (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2 +\n  N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2\n  p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) = 0 \\<and>\n  q * (3 * p\\<^sup>2 - N * q\\<^sup>2) = 0", "have \"?P^3 = 0\""], ["proof (prove)\nusing this:\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n  (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2 +\n  N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2\n  p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) = 0 \\<and>\n  q * (3 * p\\<^sup>2 - N * q\\<^sup>2) = 0\n\ngoal (1 subgoal):\n 1. (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = 0", "by auto"], ["proof (state)\nthis:\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = 0\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with P"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = 0", "have False"], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = 0\n\ngoal (1 subgoal):\n 1. False", "by (unfold prime_int_iff, auto)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "}"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "moreover"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "{"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "assume \"?h > 1\""], ["proof (state)\nthis:\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "then"], ["proof (chain)\npicking this:\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "have \"\\<exists>g. prime g \\<and> g dvd ?h\""], ["proof (prove)\nusing this:\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       prime g \\<and>\n       g dvd\n       gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n        (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "using prime_factor_int [of ?h]"], ["proof (prove)\nusing this:\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  \\<lbrakk>\\<bar>gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n                  (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<bar> \\<noteq>\n           1;\n   \\<And>pa.\n      \\<lbrakk>prime pa;\n       pa dvd\n       gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n        (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       prime g \\<and>\n       g dvd\n       gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n        (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     prime g \\<and>\n     g dvd\n     gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n      (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "then"], ["proof (chain)\npicking this:\n  \\<exists>g.\n     prime g \\<and>\n     g dvd\n     gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n      (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "obtain g where g: \"prime g\" \"g dvd ?h\""], ["proof (prove)\nusing this:\n  \\<exists>g.\n     prime g \\<and>\n     g dvd\n     gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n      (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>prime g;\n         g dvd\n         gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n          (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "then"], ["proof (chain)\npicking this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "have \"g dvd ?b \\<and> g dvd ?a\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. g dvd q * (3 * p\\<^sup>2 - N * q\\<^sup>2) \\<and>\n    g dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  g dvd q * (3 * p\\<^sup>2 - N * q\\<^sup>2) \\<and>\n  g dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g dvd q * (3 * p\\<^sup>2 - N * q\\<^sup>2) \\<and>\n  g dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)", "have g1: \"g dvd q \\<or> g dvd 3*p^2-N*q^2\"\n        and g2: \"g dvd p \\<or> g dvd p^2 - 3*N*q^2\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g dvd q * (3 * p\\<^sup>2 - N * q\\<^sup>2) \\<and>\n  g dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. g dvd q \\<or> g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2 &&&\n    g dvd p \\<or> g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2", "by (auto dest: prime_dvd_multD)"], ["proof (state)\nthis:\n  g dvd q \\<or> g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2\n  g dvd p \\<or> g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "from g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "have gpos: \"g \\<ge> 0\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 0 \\<le> g", "by (auto simp only: prime_int_iff)"], ["proof (state)\nthis:\n  0 \\<le> g\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "have \"g dvd ?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 + N * q\\<^sup>2", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "assume \"g dvd q\""], ["proof (state)\nthis:\n  g dvd q\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "hence gNq: \"g dvd N*q^2\""], ["proof (prove)\nusing this:\n  g dvd q\n\ngoal (1 subgoal):\n 1. g dvd N * q\\<^sup>2", "by (auto simp add: dvd_def power2_eq_square)"], ["proof (state)\nthis:\n  g dvd N * q\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 + N * q\\<^sup>2", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "assume gp: \"g dvd p\""], ["proof (state)\nthis:\n  g dvd p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "hence \"g dvd p^2\""], ["proof (prove)\nusing this:\n  g dvd p\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2", "by (auto simp add: dvd_def power2_eq_square)"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "with gNq"], ["proof (chain)\npicking this:\n  g dvd N * q\\<^sup>2\n  g dvd p\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  g dvd N * q\\<^sup>2\n  g dvd p\\<^sup>2\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 + N * q\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "assume \"\\<not> g dvd p\""], ["proof (state)\nthis:\n  \\<not> g dvd p\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "with g2"], ["proof (chain)\npicking this:\n  g dvd p \\<or> g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  \\<not> g dvd p", "have \"g dvd p^2 - 3*N*q^2\""], ["proof (prove)\nusing this:\n  g dvd p \\<or> g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  \\<not> g dvd p\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "from gNq"], ["proof (chain)\npicking this:\n  g dvd N * q\\<^sup>2", "have \"g dvd 4*(N*q^2)\""], ["proof (prove)\nusing this:\n  g dvd N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. g dvd 4 * (N * q\\<^sup>2)", "by (rule dvd_mult)"], ["proof (state)\nthis:\n  g dvd 4 * (N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  g dvd 4 * (N * q\\<^sup>2)", "have \"g dvd p^2 - 3*(N*q^2) + 4*(N*q^2)\""], ["proof (prove)\nusing this:\n  g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  g dvd 4 * (N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2)", "by (simp only: ac_simps dvd_add)"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "have \"p^2 - 3*(N*q^2)+4*(N*q^2) = p^2 + N*q^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2) =\n    p\\<^sup>2 + N * q\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2) =\n  p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  g dvd p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2)\n  p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2) =\n  p\\<^sup>2 + N * q\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  g dvd p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2)\n  p\\<^sup>2 - 3 * (N * q\\<^sup>2) + 4 * (N * q\\<^sup>2) =\n  p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 + N * q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd q \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> g dvd q \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "assume \"\\<not> g dvd q\""], ["proof (state)\nthis:\n  \\<not> g dvd q\n\ngoal (1 subgoal):\n 1. \\<not> g dvd q \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "with g1"], ["proof (chain)\npicking this:\n  g dvd q \\<or> g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2\n  \\<not> g dvd q", "have gpq: \"g dvd 3*p^2-N*q^2\""], ["proof (prove)\nusing this:\n  g dvd q \\<or> g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2\n  \\<not> g dvd q\n\ngoal (1 subgoal):\n 1. g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd q \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 + N * q\\<^sup>2", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "assume \"g dvd p\""], ["proof (state)\nthis:\n  g dvd p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "hence \"g dvd 4*p^2\""], ["proof (prove)\nusing this:\n  g dvd p\n\ngoal (1 subgoal):\n 1. g dvd 4 * p\\<^sup>2", "by (auto simp add: dvd_def power2_eq_square)"], ["proof (state)\nthis:\n  g dvd 4 * p\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "with gpq"], ["proof (chain)\npicking this:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2\n  g dvd 4 * p\\<^sup>2", "have \" g dvd 4*p^2 - (3*p^2 - N*q^2)\""], ["proof (prove)\nusing this:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2\n  g dvd 4 * p\\<^sup>2\n\ngoal (1 subgoal):\n 1. g dvd 4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2)", "by (simp only: dvd_diff)"], ["proof (state)\nthis:\n  g dvd 4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  g dvd 4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "have \"4*p^2 - (3*p^2 - N*q^2) = p^2 + N*q^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2) =\n    p\\<^sup>2 + N * q\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2) =\n  p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2\n 2. \\<not> ?P \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  g dvd 4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2)\n  4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2) =\n  p\\<^sup>2 + N * q\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  g dvd 4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2)\n  4 * p\\<^sup>2 - (3 * p\\<^sup>2 - N * q\\<^sup>2) =\n  p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 + N * q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "assume \"\\<not> g dvd p\""], ["proof (state)\nthis:\n  \\<not> g dvd p\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "with g2"], ["proof (chain)\npicking this:\n  g dvd p \\<or> g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  \\<not> g dvd p", "have \"g dvd p^2 - 3*N*q^2\""], ["proof (prove)\nusing this:\n  g dvd p \\<or> g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  \\<not> g dvd p\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "with gpq"], ["proof (chain)\npicking this:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2\n  g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2", "have \"g dvd 3*p^2-N*q^2 - (p^2 - 3*N*q^2)\""], ["proof (prove)\nusing this:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2\n  g dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2)", "by (simp only: dvd_diff)"], ["proof (state)\nthis:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "have \"3*p^2-N*q^2 - (p^2 - 3*N*q^2) = 2*?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2) =\n    2 * (p\\<^sup>2 + N * q\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2) =\n  2 * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2)\n  3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2) =\n  2 * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"g dvd 2*?P\""], ["proof (prove)\nusing this:\n  g dvd 3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2)\n  3 * p\\<^sup>2 - N * q\\<^sup>2 - (p\\<^sup>2 - 3 * N * q\\<^sup>2) =\n  2 * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. g dvd 2 * (p\\<^sup>2 + N * q\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  g dvd 2 * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "with g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g dvd 2 * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"g dvd 2 \\<or> g dvd ?P\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g dvd 2 * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<or> g dvd p\\<^sup>2 + N * q\\<^sup>2", "by (simp only: prime_dvd_multD)"], ["proof (state)\nthis:\n  g dvd 2 \\<or> g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  g dvd 2 \\<or> g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "have \"\\<not> g dvd 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> g dvd 2", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "assume gdvd2: \"g dvd 2\""], ["proof (state)\nthis:\n  g dvd 2\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "have \"g \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<le> 2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> g \\<le> 2 \\<Longrightarrow> False", "assume \"\\<not> g \\<le> 2\""], ["proof (state)\nthis:\n  \\<not> g \\<le> 2\n\ngoal (1 subgoal):\n 1. \\<not> g \\<le> 2 \\<Longrightarrow> False", "hence \"g > 2\""], ["proof (prove)\nusing this:\n  \\<not> g \\<le> 2\n\ngoal (1 subgoal):\n 1. 2 < g", "by simp"], ["proof (state)\nthis:\n  2 < g\n\ngoal (1 subgoal):\n 1. \\<not> g \\<le> 2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  2 < g\n\ngoal (1 subgoal):\n 1. \\<not> g \\<le> 2 \\<Longrightarrow> False", "have \"(0::int) < 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2", "by auto"], ["proof (state)\nthis:\n  0 < 2\n\ngoal (1 subgoal):\n 1. \\<not> g \\<le> 2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  2 < g\n  0 < 2", "have \"\\<not> g dvd 2\""], ["proof (prove)\nusing this:\n  2 < g\n  0 < 2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd 2", "by (auto simp only: zdvd_not_zless)"], ["proof (state)\nthis:\n  \\<not> g dvd 2\n\ngoal (1 subgoal):\n 1. \\<not> g \\<le> 2 \\<Longrightarrow> False", "with gdvd2"], ["proof (chain)\npicking this:\n  g dvd 2\n  \\<not> g dvd 2", "show False"], ["proof (prove)\nusing this:\n  g dvd 2\n  \\<not> g dvd 2\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g \\<le> 2\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  g \\<le> 2\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "from g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "have \"g \\<ge> 2\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 2 \\<le> g", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  2 \\<le> g\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  g \\<le> 2\n  2 \\<le> g", "have \"g = 2\""], ["proof (prove)\nusing this:\n  g \\<le> 2\n  2 \\<le> g\n\ngoal (1 subgoal):\n 1. g = 2", "by auto"], ["proof (state)\nthis:\n  g = 2\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "with g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g = 2", "have \"2 dvd ?a \\<and> 2 dvd ?b\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g = 2\n\ngoal (1 subgoal):\n 1. even (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<and>\n    even (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  even (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<and>\n  even (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "hence \"2 dvd ?a^2 \\<and> 2 dvd N*?b^2\""], ["proof (prove)\nusing this:\n  even (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<and>\n  even (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. even ((p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2) \\<and>\n    even (N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  even ((p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2) \\<and>\n  even (N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "with abP"], ["proof (chain)\npicking this:\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n  (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2 +\n  N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2\n  even ((p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2) \\<and>\n  even (N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2)", "have \"2 dvd ?P^3\""], ["proof (prove)\nusing this:\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n  (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2 +\n  N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2\n  even ((p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2) \\<and>\n  even (N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)", "by (simp only: dvd_add)"], ["proof (state)\nthis:\n  even ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "hence \"even (?P^3)\""], ["proof (prove)\nusing this:\n  even ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)\n\ngoal (1 subgoal):\n 1. even ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)", "by auto"], ["proof (state)\nthis:\n  even ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  even ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "have \"odd (?P^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)", "using Podd"], ["proof (prove)\nusing this:\n  odd (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. odd ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)", "by simp"], ["proof (state)\nthis:\n  odd ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)\n\ngoal (1 subgoal):\n 1. g dvd 2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  even ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)\n  odd ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)", "show False"], ["proof (prove)\nusing this:\n  even ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)\n  odd ((p\\<^sup>2 + N * q\\<^sup>2) ^ 3)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> g dvd 2\n\ngoal (1 subgoal):\n 1. \\<not> g dvd p \\<Longrightarrow> g dvd p\\<^sup>2 + N * q\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  g dvd 2 \\<or> g dvd p\\<^sup>2 + N * q\\<^sup>2\n  \\<not> g dvd 2", "show ?thesis"], ["proof (prove)\nusing this:\n  g dvd 2 \\<or> g dvd p\\<^sup>2 + N * q\\<^sup>2\n  \\<not> g dvd 2\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 + N * q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with P gpos"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  0 \\<le> g\n  g dvd p\\<^sup>2 + N * q\\<^sup>2", "have \"g = 1 \\<or> g = ?P\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  0 \\<le> g\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. g = 1 \\<or> g = p\\<^sup>2 + N * q\\<^sup>2", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  g = 1 \\<or> g = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g = 1 \\<or> g = p\\<^sup>2 + N * q\\<^sup>2", "have \"g = ?P\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g = 1 \\<or> g = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. g = p\\<^sup>2 + N * q\\<^sup>2", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  g = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g = p\\<^sup>2 + N * q\\<^sup>2", "have Pab: \"?P dvd ?a \\<and> ?P dvd ?b\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) \\<and>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd q * (3 * p\\<^sup>2 - N * q\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd q * (3 * p\\<^sup>2 - N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "from Pab P"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd q * (3 * p\\<^sup>2 - N * q\\<^sup>2)\n  prime (p\\<^sup>2 + N * q\\<^sup>2)", "have \"?P dvd p \\<or> ?P dvd p^2- 3*N*q^2\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd q * (3 * p\\<^sup>2 - N * q\\<^sup>2)\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<or>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2", "by (auto dest: prime_dvd_multD)"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "moreover"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "{"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "assume \"?P dvd p^2 - 3*N*q^2\""], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "moreover"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "have \"?P dvd 3*(p^2 + N*q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 3 * (p\\<^sup>2 + N * q\\<^sup>2)", "by (auto simp only: dvd_refl dvd_mult)"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 3 * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "ultimately"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 3 * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"?P dvd p^2- 3*N*q^2 + 3*(p^2+N*q^2)\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 3 * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd\n    p\\<^sup>2 - 3 * N * q\\<^sup>2 + 3 * (p\\<^sup>2 + N * q\\<^sup>2)", "by (simp only: dvd_add)"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd\n  p\\<^sup>2 - 3 * N * q\\<^sup>2 + 3 * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"?P dvd 4*p^2\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd\n  p\\<^sup>2 - 3 * N * q\\<^sup>2 + 3 * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 * p\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4 * p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with P"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4 * p\\<^sup>2", "have \"?P dvd 4 \\<or> ?P dvd p^2\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4 * p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<or>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2", "by (simp only: prime_dvd_multD)"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "moreover"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "have \"\\<not> ?P dvd 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd 4", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "assume Pdvd4: \"?P dvd 4\""], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "have \"?P \\<le> 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4 \\<Longrightarrow> False", "assume \"\\<not> ?P \\<le> 4\""], ["proof (state)\nthis:\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4\n\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4 \\<Longrightarrow> False", "hence \"?P > 4\""], ["proof (prove)\nusing this:\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4\n\ngoal (1 subgoal):\n 1. 4 < p\\<^sup>2 + N * q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  4 < p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  4 < p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4 \\<Longrightarrow> False", "have \"(0::int) < 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 4", "by auto"], ["proof (state)\nthis:\n  0 < 4\n\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  4 < p\\<^sup>2 + N * q\\<^sup>2\n  0 < 4", "have \"\\<not> ?P dvd 4\""], ["proof (prove)\nusing this:\n  4 < p\\<^sup>2 + N * q\\<^sup>2\n  0 < 4\n\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd 4", "by (auto simp only: zdvd_not_zless)"], ["proof (state)\nthis:\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4 \\<Longrightarrow> False", "with Pdvd4"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd 4", "show False"], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "from P"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)", "have \"?P \\<ge> 2\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 2 \\<le> p\\<^sup>2 + N * q\\<^sup>2", "by (auto simp add: prime_int_iff)"], ["proof (state)\nthis:\n  2 \\<le> p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  2 \\<le> p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "have \"?P \\<noteq> 2 \\<and> ?P \\<noteq> 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 2 \\<and>\n    p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 4", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 = 2 \\<or>\n    p\\<^sup>2 + N * q\\<^sup>2 = 4 \\<Longrightarrow>\n    False", "assume \"?P = 2 \\<or> ?P = 4\""], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 = 2 \\<or> p\\<^sup>2 + N * q\\<^sup>2 = 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 = 2 \\<or>\n    p\\<^sup>2 + N * q\\<^sup>2 = 4 \\<Longrightarrow>\n    False", "hence \"even ?P\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 = 2 \\<or> p\\<^sup>2 + N * q\\<^sup>2 = 4\n\ngoal (1 subgoal):\n 1. even (p\\<^sup>2 + N * q\\<^sup>2)", "by fastforce"], ["proof (state)\nthis:\n  even (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 = 2 \\<or>\n    p\\<^sup>2 + N * q\\<^sup>2 = 4 \\<Longrightarrow>\n    False", "with Podd"], ["proof (chain)\npicking this:\n  odd (p\\<^sup>2 + N * q\\<^sup>2)\n  even (p\\<^sup>2 + N * q\\<^sup>2)", "show False"], ["proof (prove)\nusing this:\n  odd (p\\<^sup>2 + N * q\\<^sup>2)\n  even (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 2 \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4\n  2 \\<le> p\\<^sup>2 + N * q\\<^sup>2\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 2 \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 4", "have \"?P = 3\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 \\<le> 4\n  2 \\<le> p\\<^sup>2 + N * q\\<^sup>2\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 2 \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 \\<noteq> 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 = 3", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 = 3\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "with Pdvd4"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n  p\\<^sup>2 + N * q\\<^sup>2 = 3", "have \"(3::int) dvd 4\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n  p\\<^sup>2 + N * q\\<^sup>2 = 3\n\ngoal (1 subgoal):\n 1. 3 dvd 4", "by simp"], ["proof (state)\nthis:\n  3 dvd 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  3 dvd 4\n\ngoal (1 subgoal):\n 1. False", "by arith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "ultimately"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd 4", "have \"?P dvd p*p\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd 4 \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd 4\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p * p", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p * p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with P"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p * p", "have ?thesis"], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p * p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "by (auto dest: prime_dvd_multD)"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "}"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd\n  p\\<^sup>2 - 3 * N * q\\<^sup>2 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "ultimately"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  p\\<^sup>2 + N * q\\<^sup>2 dvd\n  p\\<^sup>2 - 3 * N * q\\<^sup>2 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p", "show ?thesis"], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<or>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\\<^sup>2 - 3 * N * q\\<^sup>2\n  p\\<^sup>2 + N * q\\<^sup>2 dvd\n  p\\<^sup>2 - 3 * N * q\\<^sup>2 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "}"], ["proof (state)\nthis:\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "ultimately"], ["proof (chain)\npicking this:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<or>\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p", "show ?thesis"], ["proof (prove)\nusing this:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<or>\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) =\n  0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  1 < gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n       (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "by blast"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq>\n  1 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "moreover"], ["proof (state)\nthis:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq>\n  1 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "have \"?P dvd p\" if h1: \"gcd N ?a \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "let ?h = \"gcd N ?a\""], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "have h2: \"?h \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"?h = 0 \\<or> ?h = 1 \\<or> ?h > 1\""], ["proof (prove)\nusing this:\n  0 \\<le> gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n    gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 1 \\<or>\n    1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "by arith"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 1 \\<or>\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with h1"], ["proof (chain)\npicking this:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq> 1\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 1 \\<or>\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "have \"?h =0 \\<or> ?h >1\""], ["proof (prove)\nusing this:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq> 1\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 1 \\<or>\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n    1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "moreover"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "{"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "assume \"?h = 0\""], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"N = 0 \\<and> ?a = 0\""], ["proof (prove)\nusing this:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0\n\ngoal (1 subgoal):\n 1. N = 0 \\<and> p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) = 0", "by auto"], ["proof (state)\nthis:\n  N = 0 \\<and> p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) = 0\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"N = 0\""], ["proof (prove)\nusing this:\n  N = 0 \\<and> p * (p\\<^sup>2 - 3 * N * q\\<^sup>2) = 0\n\ngoal (1 subgoal):\n 1. N = 0", "by arith"], ["proof (state)\nthis:\n  N = 0\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with N1"], ["proof (chain)\npicking this:\n  1 \\<le> N\n  N = 0", "have False"], ["proof (prove)\nusing this:\n  1 \\<le> N\n  N = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "}"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "moreover"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "{"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "assume \"?h > 1\""], ["proof (state)\nthis:\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "then"], ["proof (chain)\npicking this:\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "have \"\\<exists>g. prime g \\<and> g dvd ?h\""], ["proof (prove)\nusing this:\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       prime g \\<and> g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "using prime_factor_int [of ?h]"], ["proof (prove)\nusing this:\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  \\<lbrakk>\\<bar>gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<bar> \\<noteq>\n           1;\n   \\<And>pa.\n      \\<lbrakk>prime pa;\n       pa dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>g.\n       prime g \\<and> g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  \\<exists>g.\n     prime g \\<and> g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "then"], ["proof (chain)\npicking this:\n  \\<exists>g.\n     prime g \\<and> g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "obtain g where g: \"prime g\" \"g dvd ?h\""], ["proof (prove)\nusing this:\n  \\<exists>g.\n     prime g \\<and> g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>prime g;\n         g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence gN: \"g dvd N\" and \"g dvd ?a\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. g dvd N &&& g dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  g dvd N\n  g dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"g dvd p*p^2 - N*(3*p*q^2)\""], ["proof (prove)\nusing this:\n  g dvd N\n  g dvd p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. g dvd p * p\\<^sup>2 - N * (3 * p * q\\<^sup>2)", "by (auto simp only: right_diff_distrib ac_simps)"], ["proof (state)\nthis:\n  g dvd p * p\\<^sup>2 - N * (3 * p * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with gN"], ["proof (chain)\npicking this:\n  g dvd N\n  g dvd p * p\\<^sup>2 - N * (3 * p * q\\<^sup>2)", "have \"g dvd p*p^2 - N*(3*p*q^2) + N*(3*p*q^2)\""], ["proof (prove)\nusing this:\n  g dvd N\n  g dvd p * p\\<^sup>2 - N * (3 * p * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. g dvd p * p\\<^sup>2 - N * (3 * p * q\\<^sup>2) + N * (3 * p * q\\<^sup>2)", "by (simp only: dvd_add dvd_mult2)"], ["proof (state)\nthis:\n  g dvd p * p\\<^sup>2 - N * (3 * p * q\\<^sup>2) + N * (3 * p * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"g dvd p*p^2\""], ["proof (prove)\nusing this:\n  g dvd p * p\\<^sup>2 - N * (3 * p * q\\<^sup>2) + N * (3 * p * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. g dvd p * p\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  g dvd p * p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g dvd p * p\\<^sup>2", "have \"g dvd p \\<or> g dvd p*p\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g dvd p * p\\<^sup>2\n\ngoal (1 subgoal):\n 1. g dvd p \\<or> g dvd p * p", "by (simp add: prime_dvd_multD power2_eq_square)"], ["proof (state)\nthis:\n  g dvd p \\<or> g dvd p * p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g dvd p \\<or> g dvd p * p", "have gp: \"g dvd p\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g dvd p \\<or> g dvd p * p\n\ngoal (1 subgoal):\n 1. g dvd p", "by (auto dest: prime_dvd_multD)"], ["proof (state)\nthis:\n  g dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "hence \"g dvd p^2\""], ["proof (prove)\nusing this:\n  g dvd p\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with gN"], ["proof (chain)\npicking this:\n  g dvd N\n  g dvd p\\<^sup>2", "have gP: \"g dvd ?P\""], ["proof (prove)\nusing this:\n  g dvd N\n  g dvd p\\<^sup>2\n\ngoal (1 subgoal):\n 1. g dvd p\\<^sup>2 + N * q\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "from g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))", "have \"g \\<ge> 0\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. 0 \\<le> g", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  0 \\<le> g\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with gP P g"], ["proof (chain)\npicking this:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  0 \\<le> g", "have \"g = 1 \\<or> g = ?P\""], ["proof (prove)\nusing this:\n  g dvd p\\<^sup>2 + N * q\\<^sup>2\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  0 \\<le> g\n\ngoal (1 subgoal):\n 1. g = 1 \\<or> g = p\\<^sup>2 + N * q\\<^sup>2", "by (auto dest: primes_dvd_imp_eq)"], ["proof (state)\nthis:\n  g = 1 \\<or> g = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with g"], ["proof (chain)\npicking this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g = 1 \\<or> g = p\\<^sup>2 + N * q\\<^sup>2", "have \"g = ?P\""], ["proof (prove)\nusing this:\n  prime g\n  g dvd gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  g = 1 \\<or> g = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. g = p\\<^sup>2 + N * q\\<^sup>2", "by (auto simp only: prime_int_iff)"], ["proof (state)\nthis:\n  g = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "with gp"], ["proof (chain)\npicking this:\n  g dvd p\n  g = p\\<^sup>2 + N * q\\<^sup>2", "have ?thesis"], ["proof (prove)\nusing this:\n  g dvd p\n  g = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "}"], ["proof (state)\nthis:\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "ultimately"], ["proof (chain)\npicking this:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p", "show ?thesis"], ["proof (prove)\nusing this:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<or>\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) = 0 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  1 < gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq> 1 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "moreover"], ["proof (state)\nthis:\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq> 1 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "have \"\\<not> ?P dvd p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd p", "proof (rule ccontr, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<Longrightarrow> False", "assume Pdvdp: \"?P dvd p\""], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<Longrightarrow> False", "have \"p^2 \\<ge> ?P^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n           \\<le> p\\<^sup>2 \\<Longrightarrow>\n    False", "assume \"\\<not> p^2 \\<ge> ?P^2\""], ["proof (state)\nthis:\n  \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n           \\<le> p\\<^sup>2 \\<Longrightarrow>\n    False", "hence pP: \"p^2 < ?P^2\""], ["proof (prove)\nusing this:\n  \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n           \\<le> p\\<^sup>2 \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  p\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n           \\<le> p\\<^sup>2 \\<Longrightarrow>\n    False", "with p0"], ["proof (chain)\npicking this:\n  p \\<noteq> 0\n  p\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "have \"p^2 > 0\""], ["proof (prove)\nusing this:\n  p \\<noteq> 0\n  p\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < p\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < p\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n           \\<le> p\\<^sup>2 \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  p\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n  0 < p\\<^sup>2", "have \"\\<not> ?P^2 dvd p^2\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n  0 < p\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd p\\<^sup>2", "by (simp add: zdvd_not_zless)"], ["proof (state)\nthis:\n  \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd p\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n           \\<le> p\\<^sup>2 \\<Longrightarrow>\n    False", "with Pdvdp"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd p\\<^sup>2", "show False"], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  \\<not> (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 dvd p\\<^sup>2\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<Longrightarrow> False", "with P"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2", "have \"?P*1 < ?P*?P\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2)\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2\n\ngoal (1 subgoal):\n 1. (p\\<^sup>2 + N * q\\<^sup>2) * 1\n    < (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "unfolding prime_int_iff"], ["proof (prove)\nusing this:\n  1 < p\\<^sup>2 + N * q\\<^sup>2 \\<and>\n  (\\<forall>m.\n      0 \\<le> m \\<and> m dvd p\\<^sup>2 + N * q\\<^sup>2 \\<longrightarrow>\n      m = 1 \\<or> m = p\\<^sup>2 + N * q\\<^sup>2)\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2\n\ngoal (1 subgoal):\n 1. (p\\<^sup>2 + N * q\\<^sup>2) * 1\n    < (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "by (auto simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  (p\\<^sup>2 + N * q\\<^sup>2) * 1\n  < (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2\n  (p\\<^sup>2 + N * q\\<^sup>2) * 1\n  < (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"p^2 > ?P\""], ["proof (prove)\nusing this:\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 \\<le> p\\<^sup>2\n  (p\\<^sup>2 + N * q\\<^sup>2) * 1\n  < (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 < p\\<^sup>2", "by (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 < p\\<^sup>2\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<Longrightarrow> False", "hence neg: \"N*q^2 < 0\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 < p\\<^sup>2\n\ngoal (1 subgoal):\n 1. N * q\\<^sup>2 < 0", "by auto"], ["proof (state)\nthis:\n  N * q\\<^sup>2 < 0\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd p \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have \"is_qfN (0^2 + N*q^2) N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_qfN (0\\<^sup>2 + N * q\\<^sup>2) N", "by (auto simp only: is_qfN_def)"], ["proof (state)\nthis:\n  is_qfN (0\\<^sup>2 + N * q\\<^sup>2) N\n\ngoal (1 subgoal):\n 1. False", "with N1"], ["proof (chain)\npicking this:\n  1 \\<le> N\n  is_qfN (0\\<^sup>2 + N * q\\<^sup>2) N", "have \"0^2 +N*q^2 \\<ge> 0\""], ["proof (prove)\nusing this:\n  1 \\<le> N\n  is_qfN (0\\<^sup>2 + N * q\\<^sup>2) N\n\ngoal (1 subgoal):\n 1. 0 \\<le> 0\\<^sup>2 + N * q\\<^sup>2", "by (rule qfN_pos)"], ["proof (state)\nthis:\n  0 \\<le> 0\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. False", "with neg"], ["proof (chain)\npicking this:\n  N * q\\<^sup>2 < 0\n  0 \\<le> 0\\<^sup>2 + N * q\\<^sup>2", "show False"], ["proof (prove)\nusing this:\n  N * q\\<^sup>2 < 0\n  0 \\<le> 0\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "ultimately"], ["proof (chain)\npicking this:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq>\n  1 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq> 1 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd p", "have \"gcd ?a ?b = 1\" \"gcd ?a N = 1\""], ["proof (prove)\nusing this:\n  gcd (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n   (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq>\n  1 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  gcd N (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) \\<noteq> 1 \\<Longrightarrow>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd p\n  \\<not> p\\<^sup>2 + N * q\\<^sup>2 dvd p\n\ngoal (1 subgoal):\n 1. gcd (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n     (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)) =\n    1 &&&\n    gcd (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) N = 1", "by (auto simp add: ac_simps)"], ["proof (state)\nthis:\n  gcd (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)) =\n  1\n  gcd (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) N = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "then"], ["proof (chain)\npicking this:\n  gcd (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)) =\n  1\n  gcd (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) N = 1", "have \"coprime ?a ?b\" \"coprime ?a N \""], ["proof (prove)\nusing this:\n  gcd (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)) =\n  1\n  gcd (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) N = 1\n\ngoal (1 subgoal):\n 1. coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n     (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)) &&&\n    coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) N", "by (auto simp only: gcd_eq_1_imp_coprime)"], ["proof (state)\nthis:\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) N\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "then"], ["proof (chain)\npicking this:\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) N", "have \"coprime ?a (N * ?b)\""], ["proof (prove)\nusing this:\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2)) N\n\ngoal (1 subgoal):\n 1. coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n     (N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)))", "by simp"], ["proof (state)\nthis:\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (p\\<^sup>2 + N * q\\<^sup>2);\n     odd (p\\<^sup>2 + N * q\\<^sup>2); p \\<noteq> 0; 1 \\<le> N\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n                         a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n                         coprime a (N * b)", "with abP"], ["proof (chain)\npicking this:\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n  (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2 +\n  N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 =\n  (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\\<^sup>2 +\n  N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2))\\<^sup>2\n  coprime (p * (p\\<^sup>2 - 3 * N * q\\<^sup>2))\n   (N * (q * (3 * p\\<^sup>2 - N * q\\<^sup>2)))\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n       coprime a (N * b)", "by blast"], ["proof (state)\nthis:\n  \\<exists>a b.\n     (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n     coprime a (N * b)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Uniqueness ($N>1$)\\<close>"], ["", "lemma qfN_prime_unique:\n  \"\\<lbrakk> prime (a^2+N*b^2::int); N > 1; a^2+N*b^2 = c^2+N*d^2 \\<rbrakk>\n  \\<Longrightarrow> (\\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> \\<bar>b\\<bar> = \\<bar>d\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "let ?P = \"a^2+N*b^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "assume P: \"prime ?P\" and N: \"N > 1\" and abcdN: \"?P = c^2 + N*d^2\""], ["proof (state)\nthis:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  1 < N\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "have mult: \"(a*d+b*c)*(a*d-b*c) = ?P*(d^2-b^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * d + b * c) * (a * d - b * c) =\n    (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (a * d + b * c) * (a * d - b * c) =\n    (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)", "have \"(a*d+b*c)*(a*d-b*c) = (a^2 + N*b^2)*d^2 - b^2*(c^2 + N*d^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * d + b * c) * (a * d - b * c) =\n    (a\\<^sup>2 + N * b\\<^sup>2) * d\\<^sup>2 -\n    b\\<^sup>2 * (c\\<^sup>2 + N * d\\<^sup>2)", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * d\\<^sup>2 -\n  b\\<^sup>2 * (c\\<^sup>2 + N * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (a * d + b * c) * (a * d - b * c) =\n    (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)", "with abcdN"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * d\\<^sup>2 -\n  b\\<^sup>2 * (c\\<^sup>2 + N * d\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * d\\<^sup>2 -\n  b\\<^sup>2 * (c\\<^sup>2 + N * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (a * d + b * c) * (a * d - b * c) =\n    (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "have \"?P dvd a*d+b*c \\<or> ?P dvd a*d-b*c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n    a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n    a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c", "from mult"], ["proof (chain)\npicking this:\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)", "have \"?P dvd (a*d+b*c)*(a*d-b*c)\""], ["proof (prove)\nusing this:\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 dvd (a * d + b * c) * (a * d - b * c)", "by simp"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd (a * d + b * c) * (a * d - b * c)\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n    a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c", "with P"], ["proof (chain)\npicking this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  a\\<^sup>2 + N * b\\<^sup>2 dvd (a * d + b * c) * (a * d - b * c)", "show ?thesis"], ["proof (prove)\nusing this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  a\\<^sup>2 + N * b\\<^sup>2 dvd (a * d + b * c) * (a * d - b * c)\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n    a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c", "by (auto dest: prime_dvd_multD)"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "{"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "assume \"?P dvd a*d+b*c\""], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "then"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c", "obtain Q where Q: \"a*d+b*c = ?P*Q\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        a * d + b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  a * d + b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "from abcdN"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2", "have \"?P^2 = (a^2 + N*b^2) * (c^2 + N*d^2)\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 =\n    (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "also"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "have \"\\<dots> = (a*c-N*b*d)^2 + N*(a*d+b*c)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n    (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2", "by (rule qfN_mult2)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n  (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "also"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n  (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "with Q"], ["proof (chain)\npicking this:\n  a * d + b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n  (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2", "have \"\\<dots> = (a*c-N*b*d)^2 + N*Q^2*?P^2\""], ["proof (prove)\nusing this:\n  a * d + b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n  (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2 =\n    (a * c - N * b * d)\\<^sup>2 +\n    N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "by (simp add: ac_simps power_mult_distrib)"], ["proof (state)\nthis:\n  (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2 =\n  (a * c - N * b * d)\\<^sup>2 +\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "also"], ["proof (state)\nthis:\n  (a * c - N * b * d)\\<^sup>2 + N * (a * d + b * c)\\<^sup>2 =\n  (a * c - N * b * d)\\<^sup>2 +\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "have \"\\<dots> \\<ge> N*Q^2*?P^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n    \\<le> (a * c - N * b * d)\\<^sup>2 +\n          N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  \\<le> (a * c - N * b * d)\\<^sup>2 +\n        N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "finally"], ["proof (chain)\npicking this:\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "have pos: \"?P^2 \\<ge> ?P^2*(Q^2*N)\""], ["proof (prove)\nusing this:\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n    \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "have \"b^2 = d^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b\\<^sup>2 = d\\<^sup>2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "assume \"b^2 \\<noteq> d^2\""], ["proof (state)\nthis:\n  b\\<^sup>2 \\<noteq> d\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "with P mult Q"], ["proof (chain)\npicking this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)\n  a * d + b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n  b\\<^sup>2 \\<noteq> d\\<^sup>2", "have \"Q \\<noteq> 0\""], ["proof (prove)\nusing this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)\n  a * d + b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n  b\\<^sup>2 \\<noteq> d\\<^sup>2\n\ngoal (1 subgoal):\n 1. Q \\<noteq> 0", "by (unfold prime_int_iff, auto)"], ["proof (state)\nthis:\n  Q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "hence \"Q^2 > 0\""], ["proof (prove)\nusing this:\n  Q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < Q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < Q\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < Q\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "with N"], ["proof (chain)\npicking this:\n  1 < N\n  0 < Q\\<^sup>2", "have \"Q^2*N > Q^2*1\""], ["proof (prove)\nusing this:\n  1 < N\n  0 < Q\\<^sup>2\n\ngoal (1 subgoal):\n 1. Q\\<^sup>2 * 1 < Q\\<^sup>2 * N", "by (simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  Q\\<^sup>2 * 1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  0 < Q\\<^sup>2\n  Q\\<^sup>2 * 1 < Q\\<^sup>2 * N", "have \"Q^2*N > 1\""], ["proof (prove)\nusing this:\n  0 < Q\\<^sup>2\n  Q\\<^sup>2 * 1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. 1 < Q\\<^sup>2 * N", "by arith"], ["proof (state)\nthis:\n  1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "with P"], ["proof (chain)\npicking this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  1 < Q\\<^sup>2 * N", "have \"?P^2 > 0\""], ["proof (prove)\nusing this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. 0 < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  0 < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  1 < Q\\<^sup>2 * N\n  0 < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "have \"?P^2*1 < ?P^2*(Q^2*N)\""], ["proof (prove)\nusing this:\n  1 < Q\\<^sup>2 * N\n  0 < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * 1\n    < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)", "by (simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * 1\n  < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "with pos"], ["proof (chain)\npicking this:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * 1\n  < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)", "show False"], ["proof (prove)\nusing this:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * 1\n  < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "}"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<Longrightarrow>\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<Longrightarrow>\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "{"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<Longrightarrow>\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "assume \"?P dvd a*d-b*c\""], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "then"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c", "obtain Q where Q: \"a*d-b*c = ?P*Q\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        a * d - b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  a * d - b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "from abcdN"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2", "have \"?P^2 = (a^2 + N*b^2) * (c^2 + N*d^2)\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 =\n    (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "also"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "have \"\\<dots> = (a*c+N*b*d)^2 + N*(a*d-b*c)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n    (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2", "by (rule qfN_mult1)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n  (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "also"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n  (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "with Q"], ["proof (chain)\npicking this:\n  a * d - b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n  (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2", "have \"\\<dots> = (a*c+N*b*d)^2 + N*Q^2*?P^2\""], ["proof (prove)\nusing this:\n  a * d - b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n  (a\\<^sup>2 + N * b\\<^sup>2) * (c\\<^sup>2 + N * d\\<^sup>2) =\n  (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2 =\n    (a * c + N * b * d)\\<^sup>2 +\n    N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "by (simp add: ac_simps power_mult_distrib)"], ["proof (state)\nthis:\n  (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2 =\n  (a * c + N * b * d)\\<^sup>2 +\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "also"], ["proof (state)\nthis:\n  (a * c + N * b * d)\\<^sup>2 + N * (a * d - b * c)\\<^sup>2 =\n  (a * c + N * b * d)\\<^sup>2 +\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "have \"\\<dots> \\<ge> N*Q^2*?P^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n    \\<le> (a * c + N * b * d)\\<^sup>2 +\n          N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  \\<le> (a * c + N * b * d)\\<^sup>2 +\n        N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "finally"], ["proof (chain)\npicking this:\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "have pos: \"?P^2 \\<ge> ?P^2*(Q^2*N)\""], ["proof (prove)\nusing this:\n  N * Q\\<^sup>2 * (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n    \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "have \"b^2 = d^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b\\<^sup>2 = d\\<^sup>2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "assume \"b^2 \\<noteq> d^2\""], ["proof (state)\nthis:\n  b\\<^sup>2 \\<noteq> d\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "with P mult Q"], ["proof (chain)\npicking this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)\n  a * d - b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n  b\\<^sup>2 \\<noteq> d\\<^sup>2", "have \"Q \\<noteq> 0\""], ["proof (prove)\nusing this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  (a * d + b * c) * (a * d - b * c) =\n  (a\\<^sup>2 + N * b\\<^sup>2) * (d\\<^sup>2 - b\\<^sup>2)\n  a * d - b * c = (a\\<^sup>2 + N * b\\<^sup>2) * Q\n  b\\<^sup>2 \\<noteq> d\\<^sup>2\n\ngoal (1 subgoal):\n 1. Q \\<noteq> 0", "by (unfold prime_int_iff, auto)"], ["proof (state)\nthis:\n  Q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "hence \"Q^2 > 0\""], ["proof (prove)\nusing this:\n  Q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < Q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < Q\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < Q\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "with N"], ["proof (chain)\npicking this:\n  1 < N\n  0 < Q\\<^sup>2", "have \"Q^2*N > Q^2*1\""], ["proof (prove)\nusing this:\n  1 < N\n  0 < Q\\<^sup>2\n\ngoal (1 subgoal):\n 1. Q\\<^sup>2 * 1 < Q\\<^sup>2 * N", "by (simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  Q\\<^sup>2 * 1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  0 < Q\\<^sup>2\n  Q\\<^sup>2 * 1 < Q\\<^sup>2 * N", "have \"Q^2*N > 1\""], ["proof (prove)\nusing this:\n  0 < Q\\<^sup>2\n  Q\\<^sup>2 * 1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. 1 < Q\\<^sup>2 * N", "by arith"], ["proof (state)\nthis:\n  1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "with P"], ["proof (chain)\npicking this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  1 < Q\\<^sup>2 * N", "have \"?P^2 > 0\""], ["proof (prove)\nusing this:\n  prime (a\\<^sup>2 + N * b\\<^sup>2)\n  1 < Q\\<^sup>2 * N\n\ngoal (1 subgoal):\n 1. 0 < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  0 < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  1 < Q\\<^sup>2 * N\n  0 < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2", "have \"?P^2*1 < ?P^2 * (Q^2*N)\""], ["proof (prove)\nusing this:\n  1 < Q\\<^sup>2 * N\n  0 < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * 1\n    < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)", "by (simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * 1\n  < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 \\<noteq> d\\<^sup>2 \\<Longrightarrow> False", "with pos"], ["proof (chain)\npicking this:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * 1\n  < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)", "show False"], ["proof (prove)\nusing this:\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n  \\<le> (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2\n  (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * 1\n  < (a\\<^sup>2 + N * b\\<^sup>2)\\<^sup>2 * (Q\\<^sup>2 * N)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "}"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c \\<Longrightarrow>\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<Longrightarrow>\n  b\\<^sup>2 = d\\<^sup>2\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c \\<Longrightarrow>\n  b\\<^sup>2 = d\\<^sup>2", "have bd: \"b^2 = d^2\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<or>\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d + b * c \\<Longrightarrow>\n  b\\<^sup>2 = d\\<^sup>2\n  a\\<^sup>2 + N * b\\<^sup>2 dvd a * d - b * c \\<Longrightarrow>\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 = d\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "moreover"], ["proof (state)\nthis:\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "with abcdN"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\n  b\\<^sup>2 = d\\<^sup>2", "have \"a^2 = c^2\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\n  b\\<^sup>2 = d\\<^sup>2\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 = c\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  a\\<^sup>2 = c\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prime (a\\<^sup>2 + N * b\\<^sup>2); 1 < N;\n     a\\<^sup>2 + N * b\\<^sup>2 = c\\<^sup>2 + N * d\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and>\n                      \\<bar>b\\<bar> = \\<bar>d\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  b\\<^sup>2 = d\\<^sup>2\n  a\\<^sup>2 = c\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  b\\<^sup>2 = d\\<^sup>2\n  a\\<^sup>2 = c\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> \\<bar>b\\<bar> = \\<bar>d\\<bar>", "by (auto simp only: power2_eq_iff)"], ["proof (state)\nthis:\n  \\<bar>a\\<bar> = \\<bar>c\\<bar> \\<and> \\<bar>b\\<bar> = \\<bar>d\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfN_square_prime:\n  assumes ass:\n  \"prime (p^2+N*q^2::int) \\<and> N>1 \\<and> (p^2+N*q^2)^2 = r^2+N*s^2 \\<and> coprime r s\"\n  shows \"\\<bar>r\\<bar> = \\<bar>p^2-N*q^2\\<bar> \\<and> \\<bar>s\\<bar> = \\<bar>2*p*q\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "let ?P = \"p^2 + N*q^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "let ?A = \"r^2 + N*s^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "from ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s", "have P1: \"?P > 1\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n\ngoal (1 subgoal):\n 1. 1 < p\\<^sup>2 + N * q\\<^sup>2", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "from ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s", "have APP: \"?A = ?P*?P\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 + N * s\\<^sup>2 =\n    (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "by (simp only: power2_eq_square)"], ["proof (state)\nthis:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "with ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)", "have \"prime ?P \\<and> ?P dvd ?A\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd r\\<^sup>2 + N * s\\<^sup>2", "by (simp add: dvdI)"], ["proof (state)\nthis:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd r\\<^sup>2 + N * s\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "then"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd r\\<^sup>2 + N * s\\<^sup>2", "obtain u v e where uve:\n    \"?A = (u^2+N*v^2)*?P \\<and> r = p*u+e*N*q*v \\<and> s = p*v - e*q*u \\<and> \\<bar>e\\<bar>=1\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd r\\<^sup>2 + N * s\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>u v e.\n        r\\<^sup>2 + N * s\\<^sup>2 =\n        (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n        r = p * u + e * N * q * v \\<and>\n        s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (frule_tac p=\"p\" in qfN_div_prime, auto)"], ["proof (state)\nthis:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "with APP P1 ass"], ["proof (chain)\npicking this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1", "have \"prime (u^2+N*v^2) \\<and> N>1 \\<and> u^2 + N*v^2 = ?P\""], ["proof (prove)\nusing this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. prime (u\\<^sup>2 + N * v\\<^sup>2) \\<and>\n    1 < N \\<and> u\\<^sup>2 + N * v\\<^sup>2 = p\\<^sup>2 + N * q\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  prime (u\\<^sup>2 + N * v\\<^sup>2) \\<and>\n  1 < N \\<and> u\\<^sup>2 + N * v\\<^sup>2 = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "hence \"\\<bar>u\\<bar> = \\<bar>p\\<bar> \\<and> \\<bar>v\\<bar> = \\<bar>q\\<bar>\""], ["proof (prove)\nusing this:\n  prime (u\\<^sup>2 + N * v\\<^sup>2) \\<and>\n  1 < N \\<and> u\\<^sup>2 + N * v\\<^sup>2 = p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>u\\<bar> = \\<bar>p\\<bar> \\<and> \\<bar>v\\<bar> = \\<bar>q\\<bar>", "by (auto dest: qfN_prime_unique)"], ["proof (state)\nthis:\n  \\<bar>u\\<bar> = \\<bar>p\\<bar> \\<and> \\<bar>v\\<bar> = \\<bar>q\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "then"], ["proof (chain)\npicking this:\n  \\<bar>u\\<bar> = \\<bar>p\\<bar> \\<and> \\<bar>v\\<bar> = \\<bar>q\\<bar>", "obtain f g where f: \"u = f*p \\<and> \\<bar>f\\<bar> = 1\" and g: \"v = g*q \\<and> \\<bar>g\\<bar> = 1\""], ["proof (prove)\nusing this:\n  \\<bar>u\\<bar> = \\<bar>p\\<bar> \\<and> \\<bar>v\\<bar> = \\<bar>q\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<And>f g.\n        \\<lbrakk>u = f * p \\<and> \\<bar>f\\<bar> = 1;\n         v = g * q \\<and> \\<bar>g\\<bar> = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: abs_eq_impl_unitfactor)"], ["proof (state)\nthis:\n  u = f * p \\<and> \\<bar>f\\<bar> = 1\n  v = g * q \\<and> \\<bar>g\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "with uve"], ["proof (chain)\npicking this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  u = f * p \\<and> \\<bar>f\\<bar> = 1\n  v = g * q \\<and> \\<bar>g\\<bar> = 1", "have \"r = f*p*p + (e*g)*N*q*q \\<and> s = g*p*q - (e*f)*p*q\""], ["proof (prove)\nusing this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  u = f * p \\<and> \\<bar>f\\<bar> = 1\n  v = g * q \\<and> \\<bar>g\\<bar> = 1\n\ngoal (1 subgoal):\n 1. r = f * p * p + e * g * N * q * q \\<and> s = g * p * q - e * f * p * q", "by simp"], ["proof (state)\nthis:\n  r = f * p * p + e * g * N * q * q \\<and> s = g * p * q - e * f * p * q\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "hence rs: \"r = f*p^2 + (e*g)*N*q^2 \\<and> s = (g - e*f)*p*q\""], ["proof (prove)\nusing this:\n  r = f * p * p + e * g * N * q * q \\<and> s = g * p * q - e * f * p * q\n\ngoal (1 subgoal):\n 1. r = f * p\\<^sup>2 + e * g * N * q\\<^sup>2 \\<and> s = (g - e * f) * p * q", "by (auto simp only: power2_eq_square left_diff_distrib)"], ["proof (state)\nthis:\n  r = f * p\\<^sup>2 + e * g * N * q\\<^sup>2 \\<and> s = (g - e * f) * p * q\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "moreover"], ["proof (state)\nthis:\n  r = f * p\\<^sup>2 + e * g * N * q\\<^sup>2 \\<and> s = (g - e * f) * p * q\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "have \"s \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> 0", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "assume s0: \"s=0\""], ["proof (state)\nthis:\n  s = 0\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "hence \"gcd r s = \\<bar>r\\<bar>\""], ["proof (prove)\nusing this:\n  s = 0\n\ngoal (1 subgoal):\n 1. gcd r s = \\<bar>r\\<bar>", "by simp"], ["proof (state)\nthis:\n  gcd r s = \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n  gcd r s = \\<bar>r\\<bar>", "have \"\\<bar>r\\<bar> = 1\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n  gcd r s = \\<bar>r\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = 1", "by simp"], ["proof (state)\nthis:\n  \\<bar>r\\<bar> = 1\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "hence \"r^2 = 1\""], ["proof (prove)\nusing this:\n  \\<bar>r\\<bar> = 1\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 = 1", "by (auto simp add: power2_eq_1_iff)"], ["proof (state)\nthis:\n  r\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "with s0"], ["proof (chain)\npicking this:\n  s = 0\n  r\\<^sup>2 = 1", "have \"?A = 1\""], ["proof (prove)\nusing this:\n  s = 0\n  r\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 + N * s\\<^sup>2 = 1", "by simp"], ["proof (state)\nthis:\n  r\\<^sup>2 + N * s\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  r\\<^sup>2 + N * s\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "have \"?P^2 > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "from P1"], ["proof (chain)\npicking this:\n  1 < p\\<^sup>2 + N * q\\<^sup>2", "have \"1 < ?P \\<and> (0::int) \\<le>  1 \\<and> (0::nat) < 2\""], ["proof (prove)\nusing this:\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. 1 < p\\<^sup>2 + N * q\\<^sup>2 \\<and> 0 \\<le> 1 \\<and> 0 < 2", "by auto"], ["proof (state)\nthis:\n  1 < p\\<^sup>2 + N * q\\<^sup>2 \\<and> 0 \\<le> 1 \\<and> 0 < 2\n\ngoal (1 subgoal):\n 1. 1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "hence \"?P^2 > 1^2\""], ["proof (prove)\nusing this:\n  1 < p\\<^sup>2 + N * q\\<^sup>2 \\<and> 0 \\<le> 1 \\<and> 0 < 2\n\ngoal (1 subgoal):\n 1. 1\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "by (simp only: power_strict_mono)"], ["proof (state)\nthis:\n  1\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  1\\<^sup>2 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "from ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s", "have \"?A = ?P^2\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = r\\<^sup>2 + N * s\\<^sup>2 \\<and>\n  coprime r s\n\ngoal (1 subgoal):\n 1. r\\<^sup>2 + N * s\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  r\\<^sup>2 + N * s\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. s = 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  r\\<^sup>2 + N * s\\<^sup>2 = 1\n  1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n  r\\<^sup>2 + N * s\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "show False"], ["proof (prove)\nusing this:\n  r\\<^sup>2 + N * s\\<^sup>2 = 1\n  1 < (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n  r\\<^sup>2 + N * s\\<^sup>2 = (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  r = f * p\\<^sup>2 + e * g * N * q\\<^sup>2 \\<and> s = (g - e * f) * p * q\n  s \\<noteq> 0", "have \"g \\<noteq> e*f\""], ["proof (prove)\nusing this:\n  r = f * p\\<^sup>2 + e * g * N * q\\<^sup>2 \\<and> s = (g - e * f) * p * q\n  s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. g \\<noteq> e * f", "by auto"], ["proof (state)\nthis:\n  g \\<noteq> e * f\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "moreover"], ["proof (state)\nthis:\n  g \\<noteq> e * f\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "from f g uve"], ["proof (chain)\npicking this:\n  u = f * p \\<and> \\<bar>f\\<bar> = 1\n  v = g * q \\<and> \\<bar>g\\<bar> = 1\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1", "have \"\\<bar>g\\<bar> = \\<bar>e*f\\<bar>\""], ["proof (prove)\nusing this:\n  u = f * p \\<and> \\<bar>f\\<bar> = 1\n  v = g * q \\<and> \\<bar>g\\<bar> = 1\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>g\\<bar> = \\<bar>e * f\\<bar>", "unfolding abs_mult"], ["proof (prove)\nusing this:\n  u = f * p \\<and> \\<bar>f\\<bar> = 1\n  v = g * q \\<and> \\<bar>g\\<bar> = 1\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>g\\<bar> = \\<bar>e\\<bar> * \\<bar>f\\<bar>", "by presburger"], ["proof (state)\nthis:\n  \\<bar>g\\<bar> = \\<bar>e * f\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  g \\<noteq> e * f\n  \\<bar>g\\<bar> = \\<bar>e * f\\<bar>", "have gef: \"g = -(e*f)\""], ["proof (prove)\nusing this:\n  g \\<noteq> e * f\n  \\<bar>g\\<bar> = \\<bar>e * f\\<bar>\n\ngoal (1 subgoal):\n 1. g = - (e * f)", "by arith"], ["proof (state)\nthis:\n  g = - (e * f)\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "from uve"], ["proof (chain)\npicking this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1", "have \"e * - (e * f) = - f\""], ["proof (prove)\nusing this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. e * - (e * f) = - f", "using abs_mult_self_eq [of e]"], ["proof (prove)\nusing this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  \\<bar>e\\<bar> * \\<bar>e\\<bar> = e * e\n\ngoal (1 subgoal):\n 1. e * - (e * f) = - f", "by simp"], ["proof (state)\nthis:\n  e * - (e * f) = - f\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "hence \"r = f*(p^2 - N*q^2) \\<and> s = (-e*f)*2*p*q\""], ["proof (prove)\nusing this:\n  e * - (e * f) = - f\n\ngoal (1 subgoal):\n 1. r = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> s = - e * f * 2 * p * q", "using rs gef"], ["proof (prove)\nusing this:\n  e * - (e * f) = - f\n  r = f * p\\<^sup>2 + e * g * N * q\\<^sup>2 \\<and> s = (g - e * f) * p * q\n  g = - (e * f)\n\ngoal (1 subgoal):\n 1. r = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> s = - e * f * 2 * p * q", "unfolding right_diff_distrib"], ["proof (prove)\nusing this:\n  e * - (e * f) = - f\n  r = f * p\\<^sup>2 + e * g * N * q\\<^sup>2 \\<and> s = (g - e * f) * p * q\n  g = - (e * f)\n\ngoal (1 subgoal):\n 1. r = f * p\\<^sup>2 - f * (N * q\\<^sup>2) \\<and> s = - e * f * 2 * p * q", "by auto"], ["proof (state)\nthis:\n  r = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> s = - e * f * 2 * p * q\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "hence \"\\<bar>r\\<bar> = \\<bar>f\\<bar> * \\<bar>p^2-N*q^2\\<bar>\n    \\<and> \\<bar>s\\<bar> = \\<bar>e\\<bar>*\\<bar>f\\<bar>*\\<bar>2*p*q\\<bar>\""], ["proof (prove)\nusing this:\n  r = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> s = - e * f * 2 * p * q\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> =\n    \\<bar>f\\<bar> * \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>e\\<bar> * \\<bar>f\\<bar> * \\<bar>2 * p * q\\<bar>", "by (auto simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>r\\<bar> =\n  \\<bar>f\\<bar> * \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>s\\<bar> = \\<bar>e\\<bar> * \\<bar>f\\<bar> * \\<bar>2 * p * q\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "with uve f g"], ["proof (chain)\npicking this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  u = f * p \\<and> \\<bar>f\\<bar> = 1\n  v = g * q \\<and> \\<bar>g\\<bar> = 1\n  \\<bar>r\\<bar> =\n  \\<bar>f\\<bar> * \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>s\\<bar> = \\<bar>e\\<bar> * \\<bar>f\\<bar> * \\<bar>2 * p * q\\<bar>", "show ?thesis"], ["proof (prove)\nusing this:\n  r\\<^sup>2 + N * s\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  r = p * u + e * N * q * v \\<and>\n  s = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  u = f * p \\<and> \\<bar>f\\<bar> = 1\n  v = g * q \\<and> \\<bar>g\\<bar> = 1\n  \\<bar>r\\<bar> =\n  \\<bar>f\\<bar> * \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>s\\<bar> = \\<bar>e\\<bar> * \\<bar>f\\<bar> * \\<bar>2 * p * q\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>", "by (auto simp only: mult_1_left)"], ["proof (state)\nthis:\n  \\<bar>r\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>s\\<bar> = \\<bar>2 * p * q\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qfN_cube_prime:\n  assumes ass: \"prime (p^2 + N*q^2::int) \\<and> N > 1\n  \\<and> (p^2 + N*q^2)^3 = a^2 + N*b^2 \\<and> coprime a b\"\n  shows \"\\<bar>a\\<bar> = \\<bar>p^3- 3*N*p*q^2\\<bar> \\<and> \\<bar>b\\<bar> = \\<bar>3*p^2*q-N*q^3\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "let ?P = \"p^2 + N*q^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "let ?A = \"a^2 + N*b^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "from ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b", "have \"coprime a b\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n\ngoal (1 subgoal):\n 1. coprime a b", "by blast"], ["proof (state)\nthis:\n  coprime a b\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "from ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b", "have P1: \"?P > 1\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n\ngoal (1 subgoal):\n 1. 1 < p\\<^sup>2 + N * q\\<^sup>2", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "with ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n  1 < p\\<^sup>2 + N * q\\<^sup>2", "have APP: \"?A = ?P*?P^2\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + N * b\\<^sup>2 =\n    (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "by (simp add: power2_eq_square power3_eq_cube)"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "with ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2", "have \"prime ?P \\<and> ?P dvd ?A\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n    p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2", "by (simp add: dvdI)"], ["proof (state)\nthis:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "then"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2", "obtain u v e where uve:\n    \"?A = (u^2+N*v^2)*?P \\<and> a = p*u+e*N*q*v \\<and> b = p*v-e*q*u \\<and> \\<bar>e\\<bar>=1\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\\<^sup>2 + N * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>u v e.\n        a\\<^sup>2 + N * b\\<^sup>2 =\n        (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n        a = p * u + e * N * q * v \\<and>\n        b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (frule_tac p=\"p\" in qfN_div_prime, auto)"], ["proof (state)\nthis:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "have \"coprime u v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime u v", "proof (rule coprimeI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "assume \"c dvd u\" \"c dvd v\""], ["proof (state)\nthis:\n  c dvd u\n  c dvd v\n\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "with uve"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  c dvd u\n  c dvd v", "have \"c dvd a\" \"c dvd b\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  c dvd u\n  c dvd v\n\ngoal (1 subgoal):\n 1. c dvd a &&& c dvd b", "by simp_all"], ["proof (state)\nthis:\n  c dvd a\n  c dvd b\n\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "with \\<open>coprime a b\\<close>"], ["proof (chain)\npicking this:\n  coprime a b\n  c dvd a\n  c dvd b", "show \"is_unit c\""], ["proof (prove)\nusing this:\n  coprime a b\n  c dvd a\n  c dvd b\n\ngoal (1 subgoal):\n 1. is_unit c", "by (rule coprime_common_divisor)"], ["proof (state)\nthis:\n  is_unit c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime u v\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "with P1 uve APP ass"], ["proof (chain)\npicking this:\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n  coprime u v", "have \"prime ?P \\<and> N > 1 \\<and> ?P^2 = u^2+N*v^2\n    \\<and> coprime u v\""], ["proof (prove)\nusing this:\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (p\\<^sup>2 + N * q\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n  coprime u v\n\ngoal (1 subgoal):\n 1. prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n    1 < N \\<and>\n    (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = u\\<^sup>2 + N * v\\<^sup>2 \\<and>\n    coprime u v", "by (auto simp add: ac_simps)"], ["proof (state)\nthis:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = u\\<^sup>2 + N * v\\<^sup>2 \\<and>\n  coprime u v\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "hence \"\\<bar>u\\<bar> = \\<bar>p^2-N*q^2\\<bar> \\<and> \\<bar>v\\<bar> = \\<bar>2*p*q\\<bar>\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2)\\<^sup>2 = u\\<^sup>2 + N * v\\<^sup>2 \\<and>\n  coprime u v\n\ngoal (1 subgoal):\n 1. \\<bar>u\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>v\\<bar> = \\<bar>2 * p * q\\<bar>", "by (rule qfN_square_prime)"], ["proof (state)\nthis:\n  \\<bar>u\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>v\\<bar> = \\<bar>2 * p * q\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "then"], ["proof (chain)\npicking this:\n  \\<bar>u\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>v\\<bar> = \\<bar>2 * p * q\\<bar>", "obtain f g where f: \"u = f*(p^2-N*q^2) \\<and> \\<bar>f\\<bar> = 1\"\n    and g: \"v = g*(2*p*q) \\<and> \\<bar>g\\<bar> = 1\""], ["proof (prove)\nusing this:\n  \\<bar>u\\<bar> = \\<bar>p\\<^sup>2 - N * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>v\\<bar> = \\<bar>2 * p * q\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<And>f g.\n        \\<lbrakk>u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and>\n                 \\<bar>f\\<bar> = 1;\n         v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: abs_eq_impl_unitfactor)"], ["proof (state)\nthis:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "with uve"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1", "have \"a = p*f*(p^2-N*q^2) + e*N*q*g*2*p*q\n    \\<and> b = p*g*2*p*q -e*q*f*(p^2-N*q^2)\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n\ngoal (1 subgoal):\n 1. a =\n    p * f * (p\\<^sup>2 - N * q\\<^sup>2) + e * N * q * g * 2 * p * q \\<and>\n    b = p * g * 2 * p * q - e * q * f * (p\\<^sup>2 - N * q\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  a = p * f * (p\\<^sup>2 - N * q\\<^sup>2) + e * N * q * g * 2 * p * q \\<and>\n  b = p * g * 2 * p * q - e * q * f * (p\\<^sup>2 - N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "hence ab: \"a = f*p*p^2 + -f*N*p*q^2 + 2*e*g*N*p*q^2\n    \\<and> b = 2*g*p^2*q - e*f*p^2*q + e*f*N*q*q^2\""], ["proof (prove)\nusing this:\n  a = p * f * (p\\<^sup>2 - N * q\\<^sup>2) + e * N * q * g * 2 * p * q \\<and>\n  b = p * g * 2 * p * q - e * q * f * (p\\<^sup>2 - N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a =\n    f * p * p\\<^sup>2 + - f * N * p * q\\<^sup>2 +\n    2 * e * g * N * p * q\\<^sup>2 \\<and>\n    b =\n    2 * g * p\\<^sup>2 * q - e * f * p\\<^sup>2 * q +\n    e * f * N * q * q\\<^sup>2", "by (auto simp add: ac_simps right_diff_distrib power2_eq_square)"], ["proof (state)\nthis:\n  a =\n  f * p * p\\<^sup>2 + - f * N * p * q\\<^sup>2 +\n  2 * e * g * N * p * q\\<^sup>2 \\<and>\n  b =\n  2 * g * p\\<^sup>2 * q - e * f * p\\<^sup>2 * q + e * f * N * q * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "from f"], ["proof (chain)\npicking this:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1", "have f2: \"f\\<^sup>2 = 1\""], ["proof (prove)\nusing this:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n\ngoal (1 subgoal):\n 1. f\\<^sup>2 = 1", "using abs_mult_self_eq [of f]"], ["proof (prove)\nusing this:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  \\<bar>f\\<bar> * \\<bar>f\\<bar> = f * f\n\ngoal (1 subgoal):\n 1. f\\<^sup>2 = 1", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  f\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "from g"], ["proof (chain)\npicking this:\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1", "have g2: \"g\\<^sup>2 = 1\""], ["proof (prove)\nusing this:\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n\ngoal (1 subgoal):\n 1. g\\<^sup>2 = 1", "using abs_mult_self_eq [of g]"], ["proof (prove)\nusing this:\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n  \\<bar>g\\<bar> * \\<bar>g\\<bar> = g * g\n\ngoal (1 subgoal):\n 1. g\\<^sup>2 = 1", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  g\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "have \"e \\<noteq> f*g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<noteq> f * g", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "assume efg: \"e = f*g\""], ["proof (state)\nthis:\n  e = f * g\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "with ab g2"], ["proof (chain)\npicking this:\n  a =\n  f * p * p\\<^sup>2 + - f * N * p * q\\<^sup>2 +\n  2 * e * g * N * p * q\\<^sup>2 \\<and>\n  b =\n  2 * g * p\\<^sup>2 * q - e * f * p\\<^sup>2 * q + e * f * N * q * q\\<^sup>2\n  g\\<^sup>2 = 1\n  e = f * g", "have \"a = f*p*p^2+f*N*p*q^2\""], ["proof (prove)\nusing this:\n  a =\n  f * p * p\\<^sup>2 + - f * N * p * q\\<^sup>2 +\n  2 * e * g * N * p * q\\<^sup>2 \\<and>\n  b =\n  2 * g * p\\<^sup>2 * q - e * f * p\\<^sup>2 * q + e * f * N * q * q\\<^sup>2\n  g\\<^sup>2 = 1\n  e = f * g\n\ngoal (1 subgoal):\n 1. a = f * p * p\\<^sup>2 + f * N * p * q\\<^sup>2", "by (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  a = f * p * p\\<^sup>2 + f * N * p * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "hence \"a = (f*p)*?P\""], ["proof (prove)\nusing this:\n  a = f * p * p\\<^sup>2 + f * N * p * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. a = f * p * (p\\<^sup>2 + N * q\\<^sup>2)", "by (auto simp add: distrib_left ac_simps)"], ["proof (state)\nthis:\n  a = f * p * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "hence Pa: \"?P dvd a\""], ["proof (prove)\nusing this:\n  a = f * p * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd a", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "have \"e * f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e * f = g", "using f2 power2_eq_square[of f] efg"], ["proof (prove)\nusing this:\n  f\\<^sup>2 = 1\n  f\\<^sup>2 = f * f\n  e = f * g\n\ngoal (1 subgoal):\n 1. e * f = g", "by simp"], ["proof (state)\nthis:\n  e * f = g\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "with ab"], ["proof (chain)\npicking this:\n  a =\n  f * p * p\\<^sup>2 + - f * N * p * q\\<^sup>2 +\n  2 * e * g * N * p * q\\<^sup>2 \\<and>\n  b =\n  2 * g * p\\<^sup>2 * q - e * f * p\\<^sup>2 * q + e * f * N * q * q\\<^sup>2\n  e * f = g", "have \"b = g*p^2*q+g*N*q*q^2\""], ["proof (prove)\nusing this:\n  a =\n  f * p * p\\<^sup>2 + - f * N * p * q\\<^sup>2 +\n  2 * e * g * N * p * q\\<^sup>2 \\<and>\n  b =\n  2 * g * p\\<^sup>2 * q - e * f * p\\<^sup>2 * q + e * f * N * q * q\\<^sup>2\n  e * f = g\n\ngoal (1 subgoal):\n 1. b = g * p\\<^sup>2 * q + g * N * q * q\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  b = g * p\\<^sup>2 * q + g * N * q * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "hence \"b = (g*q)*?P\""], ["proof (prove)\nusing this:\n  b = g * p\\<^sup>2 * q + g * N * q * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. b = g * q * (p\\<^sup>2 + N * q\\<^sup>2)", "by (auto simp add: distrib_left ac_simps)"], ["proof (state)\nthis:\n  b = g * q * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "hence \"?P dvd b\""], ["proof (prove)\nusing this:\n  b = g * q * (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd b", "by auto"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "with Pa"], ["proof (chain)\npicking this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b", "have \"?P dvd gcd a b\""], ["proof (prove)\nusing this:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd a\n  p\\<^sup>2 + N * q\\<^sup>2 dvd b\n\ngoal (1 subgoal):\n 1. p\\<^sup>2 + N * q\\<^sup>2 dvd gcd a b", "by simp"], ["proof (state)\nthis:\n  p\\<^sup>2 + N * q\\<^sup>2 dvd gcd a b\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n  p\\<^sup>2 + N * q\\<^sup>2 dvd gcd a b", "have \"?P dvd 1\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  1 < N \\<and>\n  (p\\<^sup>2 + N * q\\<^sup>2) ^ 3 = a\\<^sup>2 + N * b\\<^sup>2 \\<and>\n  coprime a b\n  p\\<^sup>2 + N * q\\<^sup>2 dvd gcd a b\n\ngoal (1 subgoal):\n 1. is_unit (p\\<^sup>2 + N * q\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  is_unit (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. e = f * g \\<Longrightarrow> False", "with P1"], ["proof (chain)\npicking this:\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n  is_unit (p\\<^sup>2 + N * q\\<^sup>2)", "show False"], ["proof (prove)\nusing this:\n  1 < p\\<^sup>2 + N * q\\<^sup>2\n  is_unit (p\\<^sup>2 + N * q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<noteq> f * g\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "moreover"], ["proof (state)\nthis:\n  e \\<noteq> f * g\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "from f g uve"], ["proof (chain)\npicking this:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1", "have \"\\<bar>e\\<bar> = \\<bar>f*g\\<bar>\""], ["proof (prove)\nusing this:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>e\\<bar> = \\<bar>f * g\\<bar>", "unfolding abs_mult"], ["proof (prove)\nusing this:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n  a\\<^sup>2 + N * b\\<^sup>2 =\n  (u\\<^sup>2 + N * v\\<^sup>2) * (p\\<^sup>2 + N * q\\<^sup>2) \\<and>\n  a = p * u + e * N * q * v \\<and>\n  b = p * v - e * q * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<bar>e\\<bar> = \\<bar>f\\<bar> * \\<bar>g\\<bar>", "by auto"], ["proof (state)\nthis:\n  \\<bar>e\\<bar> = \\<bar>f * g\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "ultimately"], ["proof (chain)\npicking this:\n  e \\<noteq> f * g\n  \\<bar>e\\<bar> = \\<bar>f * g\\<bar>", "have \"e = -(f*g)\""], ["proof (prove)\nusing this:\n  e \\<noteq> f * g\n  \\<bar>e\\<bar> = \\<bar>f * g\\<bar>\n\ngoal (1 subgoal):\n 1. e = - (f * g)", "by arith"], ["proof (state)\nthis:\n  e = - (f * g)\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "hence \"e * g = -f\" \"e * f = -g\""], ["proof (prove)\nusing this:\n  e = - (f * g)\n\ngoal (1 subgoal):\n 1. e * g = - f &&& e * f = - g", "using f2 g2"], ["proof (prove)\nusing this:\n  e = - (f * g)\n  f\\<^sup>2 = 1\n  g\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e * g = - f &&& e * f = - g", "unfolding power2_eq_square"], ["proof (prove)\nusing this:\n  e = - (f * g)\n  f * f = 1\n  g * g = 1\n\ngoal (1 subgoal):\n 1. e * g = - f &&& e * f = - g", "by auto"], ["proof (state)\nthis:\n  e * g = - f\n  e * f = - g\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "with ab"], ["proof (chain)\npicking this:\n  a =\n  f * p * p\\<^sup>2 + - f * N * p * q\\<^sup>2 +\n  2 * e * g * N * p * q\\<^sup>2 \\<and>\n  b =\n  2 * g * p\\<^sup>2 * q - e * f * p\\<^sup>2 * q + e * f * N * q * q\\<^sup>2\n  e * g = - f\n  e * f = - g", "have \"a = f*p*p^2 - 3*f*N*p*q^2 \\<and> b = 3*g*p^2*q - g*N*q*q^2\""], ["proof (prove)\nusing this:\n  a =\n  f * p * p\\<^sup>2 + - f * N * p * q\\<^sup>2 +\n  2 * e * g * N * p * q\\<^sup>2 \\<and>\n  b =\n  2 * g * p\\<^sup>2 * q - e * f * p\\<^sup>2 * q + e * f * N * q * q\\<^sup>2\n  e * g = - f\n  e * f = - g\n\ngoal (1 subgoal):\n 1. a = f * p * p\\<^sup>2 - 3 * f * N * p * q\\<^sup>2 \\<and>\n    b = 3 * g * p\\<^sup>2 * q - g * N * q * q\\<^sup>2", "by (simp add: mult.assoc)"], ["proof (state)\nthis:\n  a = f * p * p\\<^sup>2 - 3 * f * N * p * q\\<^sup>2 \\<and>\n  b = 3 * g * p\\<^sup>2 * q - g * N * q * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "hence \"a = f*(p^3 - 3*N*p*q^2) \\<and> b = g*( 3*p^2*q - N*q^3 )\""], ["proof (prove)\nusing this:\n  a = f * p * p\\<^sup>2 - 3 * f * N * p * q\\<^sup>2 \\<and>\n  b = 3 * g * p\\<^sup>2 * q - g * N * q * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. a = f * (p ^ 3 - 3 * N * p * q\\<^sup>2) \\<and>\n    b = g * (3 * p\\<^sup>2 * q - N * q ^ 3)", "by (auto simp only: right_diff_distrib ac_simps power2_eq_square power3_eq_cube)"], ["proof (state)\nthis:\n  a = f * (p ^ 3 - 3 * N * p * q\\<^sup>2) \\<and>\n  b = g * (3 * p\\<^sup>2 * q - N * q ^ 3)\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "with f g"], ["proof (chain)\npicking this:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n  a = f * (p ^ 3 - 3 * N * p * q\\<^sup>2) \\<and>\n  b = g * (3 * p\\<^sup>2 * q - N * q ^ 3)", "show ?thesis"], ["proof (prove)\nusing this:\n  u = f * (p\\<^sup>2 - N * q\\<^sup>2) \\<and> \\<bar>f\\<bar> = 1\n  v = g * (2 * p * q) \\<and> \\<bar>g\\<bar> = 1\n  a = f * (p ^ 3 - 3 * N * p * q\\<^sup>2) \\<and>\n  b = g * (3 * p\\<^sup>2 * q - N * q ^ 3)\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>", "by (auto simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * N * p * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - N * q ^ 3\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The case $N=3$\\<close>"], ["", "lemma qf3_even: \"even (a^2+3*b^2) \\<Longrightarrow> \\<exists> B. a^2+3*b^2 = 4*B \\<and> is_qfN B 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "let ?A = \"a^2+3*b^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "assume even: \"even ?A\""], ["proof (state)\nthis:\n  even (a\\<^sup>2 + 3 * b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "have \"(odd a \\<and> odd b) \\<or> (even a \\<and> even b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd a \\<and> odd b \\<or> even a \\<and> even b", "proof (rule ccontr, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>even a; odd b\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "assume \"even a\" and \"odd b\""], ["proof (state)\nthis:\n  even a\n  odd b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>even a; odd b\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "hence \"even (a^2) \\<and> odd (b^2)\""], ["proof (prove)\nusing this:\n  even a\n  odd b\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2) \\<and> odd (b\\<^sup>2)", "by (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  even (a\\<^sup>2) \\<and> odd (b\\<^sup>2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>even a; odd b\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  even (a\\<^sup>2) \\<and> odd (b\\<^sup>2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>even a; odd b\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "have \"odd 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd (3::'a)", "by simp"], ["proof (state)\nthis:\n  odd (3::?'a1)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>even a; odd b\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  even (a\\<^sup>2) \\<and> odd (b\\<^sup>2)\n  odd (3::?'a1)", "have \"odd ?A\""], ["proof (prove)\nusing this:\n  even (a\\<^sup>2) \\<and> odd (b\\<^sup>2)\n  odd (3::?'a1)\n\ngoal (1 subgoal):\n 1. odd (a\\<^sup>2 + 3 * b\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  odd (a\\<^sup>2 + 3 * b\\<^sup>2)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>even a; odd b\\<rbrakk> \\<Longrightarrow> False\n 2. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "with even"], ["proof (chain)\npicking this:\n  even (a\\<^sup>2 + 3 * b\\<^sup>2)\n  odd (a\\<^sup>2 + 3 * b\\<^sup>2)", "show False"], ["proof (prove)\nusing this:\n  even (a\\<^sup>2 + 3 * b\\<^sup>2)\n  odd (a\\<^sup>2 + 3 * b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "assume \"odd a\" and \"even b\""], ["proof (state)\nthis:\n  odd a\n  even b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "hence \"odd (a^2) \\<and> even (b^2)\""], ["proof (prove)\nusing this:\n  odd a\n  even b\n\ngoal (1 subgoal):\n 1. odd (a\\<^sup>2) \\<and> even (b\\<^sup>2)", "by (auto simp add: power2_eq_square)"], ["proof (state)\nthis:\n  odd (a\\<^sup>2) \\<and> even (b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  odd (a\\<^sup>2) \\<and> even (b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "hence \"even (b^2*3)\""], ["proof (prove)\nusing this:\n  odd (a\\<^sup>2) \\<and> even (b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even (b\\<^sup>2 * 3)", "by simp"], ["proof (state)\nthis:\n  even (b\\<^sup>2 * 3)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  odd (a\\<^sup>2) \\<and> even (b\\<^sup>2)\n  even (b\\<^sup>2 * 3)", "have \"odd (b^2*3+a^2)\""], ["proof (prove)\nusing this:\n  odd (a\\<^sup>2) \\<and> even (b\\<^sup>2)\n  even (b\\<^sup>2 * 3)\n\ngoal (1 subgoal):\n 1. odd (b\\<^sup>2 * 3 + a\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  odd (b\\<^sup>2 * 3 + a\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "hence \"odd ?A\""], ["proof (prove)\nusing this:\n  odd (b\\<^sup>2 * 3 + a\\<^sup>2)\n\ngoal (1 subgoal):\n 1. odd (a\\<^sup>2 + 3 * b\\<^sup>2)", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  odd (a\\<^sup>2 + 3 * b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>even b; odd a\\<rbrakk> \\<Longrightarrow> False", "with even"], ["proof (chain)\npicking this:\n  even (a\\<^sup>2 + 3 * b\\<^sup>2)\n  odd (a\\<^sup>2 + 3 * b\\<^sup>2)", "show False"], ["proof (prove)\nusing this:\n  even (a\\<^sup>2 + 3 * b\\<^sup>2)\n  odd (a\\<^sup>2 + 3 * b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  odd a \\<and> odd b \\<or> even a \\<and> even b\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "moreover"], ["proof (state)\nthis:\n  odd a \\<and> odd b \\<or> even a \\<and> even b\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "{"], ["proof (state)\nthis:\n  odd a \\<and> odd b \\<or> even a \\<and> even b\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "assume \"even a \\<and> even b\""], ["proof (state)\nthis:\n  even a \\<and> even b\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "then"], ["proof (chain)\npicking this:\n  even a \\<and> even b", "obtain c d where abcd: \"a = 2*c \\<and> b = 2*d\""], ["proof (prove)\nusing this:\n  even a \\<and> even b\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        a = 2 * c \\<and> b = 2 * d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using evenE[of a] evenE[of b]"], ["proof (prove)\nusing this:\n  even a \\<and> even b\n  \\<lbrakk>even a; \\<And>b. a = 2 * b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>even b; \\<And>ba. b = 2 * ba \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        a = 2 * c \\<and> b = 2 * d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by meson"], ["proof (state)\nthis:\n  a = 2 * c \\<and> b = 2 * d\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "hence \"?A = 4*(c^2 + 3*d^2)\""], ["proof (prove)\nusing this:\n  a = 2 * c \\<and> b = 2 * d\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * (c\\<^sup>2 + 3 * d\\<^sup>2)", "by (simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * (c\\<^sup>2 + 3 * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * (c\\<^sup>2 + 3 * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "have \"is_qfN (c^2+3*d^2) 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_qfN (c\\<^sup>2 + 3 * d\\<^sup>2) 3", "by (unfold is_qfN_def, auto)"], ["proof (state)\nthis:\n  is_qfN (c\\<^sup>2 + 3 * d\\<^sup>2) 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "ultimately"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * (c\\<^sup>2 + 3 * d\\<^sup>2)\n  is_qfN (c\\<^sup>2 + 3 * d\\<^sup>2) 3", "have ?thesis"], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * (c\\<^sup>2 + 3 * d\\<^sup>2)\n  is_qfN (c\\<^sup>2 + 3 * d\\<^sup>2) 3\n\ngoal (1 subgoal):\n 1. \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "by blast"], ["proof (state)\nthis:\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "}"], ["proof (state)\nthis:\n  even a \\<and> even b \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "moreover"], ["proof (state)\nthis:\n  even a \\<and> even b \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "{"], ["proof (state)\nthis:\n  even a \\<and> even b \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "assume \"odd a \\<and> odd b\""], ["proof (state)\nthis:\n  odd a \\<and> odd b\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "then"], ["proof (chain)\npicking this:\n  odd a \\<and> odd b", "obtain c d where abcd: \"a = 2*c+1 \\<and> b = 2*d+1\""], ["proof (prove)\nusing this:\n  odd a \\<and> odd b\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        a = 2 * c + 1 \\<and> b = 2 * d + 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using oddE[of a] oddE[of b]"], ["proof (prove)\nusing this:\n  odd a \\<and> odd b\n  \\<lbrakk>odd a; \\<And>b. a = 2 * b + 1 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>odd b;\n   \\<And>ba. b = 2 * ba + 1 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        a = 2 * c + 1 \\<and> b = 2 * d + 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by meson"], ["proof (state)\nthis:\n  a = 2 * c + 1 \\<and> b = 2 * d + 1\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "have \"odd (c-d) \\<or> even (c-d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd (c - d) \\<or> even (c - d)", "by blast"], ["proof (state)\nthis:\n  odd (c - d) \\<or> even (c - d)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "moreover"], ["proof (state)\nthis:\n  odd (c - d) \\<or> even (c - d)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "{"], ["proof (state)\nthis:\n  odd (c - d) \\<or> even (c - d)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "assume \"even (c-d)\""], ["proof (state)\nthis:\n  even (c - d)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "then"], ["proof (chain)\npicking this:\n  even (c - d)", "obtain e where \"c-d = 2*e\""], ["proof (prove)\nusing this:\n  even (c - d)\n\ngoal (1 subgoal):\n 1. (\\<And>e. c - d = 2 * e \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using evenE"], ["proof (prove)\nusing this:\n  even (c - d)\n  \\<lbrakk>even ?a;\n   \\<And>b. ?a = (2::?'a) * b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>e. c - d = 2 * e \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c - d = 2 * e\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "with abcd"], ["proof (chain)\npicking this:\n  a = 2 * c + 1 \\<and> b = 2 * d + 1\n  c - d = 2 * e", "have e1: \"a-b = 4*e\""], ["proof (prove)\nusing this:\n  a = 2 * c + 1 \\<and> b = 2 * d + 1\n  c - d = 2 * e\n\ngoal (1 subgoal):\n 1. a - b = 4 * e", "by arith"], ["proof (state)\nthis:\n  a - b = 4 * e\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "hence e2: \"a+3*b = 4*(e+b)\""], ["proof (prove)\nusing this:\n  a - b = 4 * e\n\ngoal (1 subgoal):\n 1. a + 3 * b = 4 * (e + b)", "by auto"], ["proof (state)\nthis:\n  a + 3 * b = 4 * (e + b)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "have \"4*?A = (a+3*b)^2 + 3*(a-b)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n    (a + 3 * b)\\<^sup>2 + 3 * (a - b)\\<^sup>2", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (a + 3 * b)\\<^sup>2 + 3 * (a - b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "also"], ["proof (state)\nthis:\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (a + 3 * b)\\<^sup>2 + 3 * (a - b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "with e1 e2"], ["proof (chain)\npicking this:\n  a - b = 4 * e\n  a + 3 * b = 4 * (e + b)\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (a + 3 * b)\\<^sup>2 + 3 * (a - b)\\<^sup>2", "have \"\\<dots> = (4*(e+b))^2+3*(4*e)^2\""], ["proof (prove)\nusing this:\n  a - b = 4 * e\n  a + 3 * b = 4 * (e + b)\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (a + 3 * b)\\<^sup>2 + 3 * (a - b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a + 3 * b)\\<^sup>2 + 3 * (a - b)\\<^sup>2 =\n    (4 * (e + b))\\<^sup>2 + 3 * (4 * e)\\<^sup>2", "by (simp(no_asm_simp))"], ["proof (state)\nthis:\n  (a + 3 * b)\\<^sup>2 + 3 * (a - b)\\<^sup>2 =\n  (4 * (e + b))\\<^sup>2 + 3 * (4 * e)\\<^sup>2\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "finally"], ["proof (chain)\npicking this:\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (4 * (e + b))\\<^sup>2 + 3 * (4 * e)\\<^sup>2", "have \"?A = 4*((e+b)^2 + 3*e^2)\""], ["proof (prove)\nusing this:\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (4 * (e + b))\\<^sup>2 + 3 * (4 * e)\\<^sup>2\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * ((e + b)\\<^sup>2 + 3 * e\\<^sup>2)", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * ((e + b)\\<^sup>2 + 3 * e\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * ((e + b)\\<^sup>2 + 3 * e\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "have \"is_qfN ((e+b)^2 + 3*e^2) 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_qfN ((e + b)\\<^sup>2 + 3 * e\\<^sup>2) 3", "by (unfold is_qfN_def, auto)"], ["proof (state)\nthis:\n  is_qfN ((e + b)\\<^sup>2 + 3 * e\\<^sup>2) 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "ultimately"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * ((e + b)\\<^sup>2 + 3 * e\\<^sup>2)\n  is_qfN ((e + b)\\<^sup>2 + 3 * e\\<^sup>2) 3", "have ?thesis"], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * ((e + b)\\<^sup>2 + 3 * e\\<^sup>2)\n  is_qfN ((e + b)\\<^sup>2 + 3 * e\\<^sup>2) 3\n\ngoal (1 subgoal):\n 1. \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "by blast"], ["proof (state)\nthis:\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "}"], ["proof (state)\nthis:\n  even (c - d) \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "moreover"], ["proof (state)\nthis:\n  even (c - d) \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "{"], ["proof (state)\nthis:\n  even (c - d) \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "assume \"odd (c-d)\""], ["proof (state)\nthis:\n  odd (c - d)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "then"], ["proof (chain)\npicking this:\n  odd (c - d)", "obtain e where \"c-d = 2*e+1\""], ["proof (prove)\nusing this:\n  odd (c - d)\n\ngoal (1 subgoal):\n 1. (\\<And>e. c - d = 2 * e + 1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using oddE"], ["proof (prove)\nusing this:\n  odd (c - d)\n  \\<lbrakk>odd ?a;\n   \\<And>b. ?a = (2::?'a) * b + (1::?'a) \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>e. c - d = 2 * e + 1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  c - d = 2 * e + 1\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "with abcd"], ["proof (chain)\npicking this:\n  a = 2 * c + 1 \\<and> b = 2 * d + 1\n  c - d = 2 * e + 1", "have e1: \"a+b = 4*(e+d+1)\""], ["proof (prove)\nusing this:\n  a = 2 * c + 1 \\<and> b = 2 * d + 1\n  c - d = 2 * e + 1\n\ngoal (1 subgoal):\n 1. a + b = 4 * (e + d + 1)", "by auto"], ["proof (state)\nthis:\n  a + b = 4 * (e + d + 1)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "hence e2: \"a- 3*b = 4*(e+d-b+1)\""], ["proof (prove)\nusing this:\n  a + b = 4 * (e + d + 1)\n\ngoal (1 subgoal):\n 1. a - 3 * b = 4 * (e + d - b + 1)", "by auto"], ["proof (state)\nthis:\n  a - 3 * b = 4 * (e + d - b + 1)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "have \"4*?A = (a- 3*b)^2 + 3*(a+b)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n    (a - 3 * b)\\<^sup>2 + 3 * (a + b)\\<^sup>2", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (a - 3 * b)\\<^sup>2 + 3 * (a + b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "also"], ["proof (state)\nthis:\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (a - 3 * b)\\<^sup>2 + 3 * (a + b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "with e1 e2"], ["proof (chain)\npicking this:\n  a + b = 4 * (e + d + 1)\n  a - 3 * b = 4 * (e + d - b + 1)\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (a - 3 * b)\\<^sup>2 + 3 * (a + b)\\<^sup>2", "have \"\\<dots> = (4*(e+d-b+1))^2 +3*(4*(e+d+1))^2\""], ["proof (prove)\nusing this:\n  a + b = 4 * (e + d + 1)\n  a - 3 * b = 4 * (e + d - b + 1)\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (a - 3 * b)\\<^sup>2 + 3 * (a + b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (a - 3 * b)\\<^sup>2 + 3 * (a + b)\\<^sup>2 =\n    (4 * (e + d - b + 1))\\<^sup>2 + 3 * (4 * (e + d + 1))\\<^sup>2", "by (simp (no_asm_simp))"], ["proof (state)\nthis:\n  (a - 3 * b)\\<^sup>2 + 3 * (a + b)\\<^sup>2 =\n  (4 * (e + d - b + 1))\\<^sup>2 + 3 * (4 * (e + d + 1))\\<^sup>2\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "finally"], ["proof (chain)\npicking this:\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (4 * (e + d - b + 1))\\<^sup>2 + 3 * (4 * (e + d + 1))\\<^sup>2", "have \"?A = 4*((e+d-b+1)^2+3*(e+d+1)^2)\""], ["proof (prove)\nusing this:\n  4 * (a\\<^sup>2 + 3 * b\\<^sup>2) =\n  (4 * (e + d - b + 1))\\<^sup>2 + 3 * (4 * (e + d + 1))\\<^sup>2\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + 3 * b\\<^sup>2 =\n    4 * ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2)", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  4 * ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  4 * ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "have \"is_qfN ((e+d-b+1)^2 + 3*(e+d+1)^2) 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_qfN ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2) 3", "by (unfold is_qfN_def, auto)"], ["proof (state)\nthis:\n  is_qfN ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2) 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "ultimately"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  4 * ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2)\n  is_qfN ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2) 3", "have ?thesis"], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  4 * ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2)\n  is_qfN ((e + d - b + 1)\\<^sup>2 + 3 * (e + d + 1)\\<^sup>2) 3\n\ngoal (1 subgoal):\n 1. \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "by blast"], ["proof (state)\nthis:\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "}"], ["proof (state)\nthis:\n  odd (c - d) \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "ultimately"], ["proof (chain)\npicking this:\n  odd (c - d) \\<or> even (c - d)\n  even (c - d) \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n  odd (c - d) \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "have ?thesis"], ["proof (prove)\nusing this:\n  odd (c - d) \\<or> even (c - d)\n  even (c - d) \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n  odd (c - d) \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "by auto"], ["proof (state)\nthis:\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "}"], ["proof (state)\nthis:\n  odd a \\<and> odd b \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. even (a\\<^sup>2 + 3 * b\\<^sup>2) \\<Longrightarrow>\n    \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "ultimately"], ["proof (chain)\npicking this:\n  odd a \\<and> odd b \\<or> even a \\<and> even b\n  even a \\<and> even b \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n  odd a \\<and> odd b \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "show ?thesis"], ["proof (prove)\nusing this:\n  odd a \\<and> odd b \\<or> even a \\<and> even b\n  even a \\<and> even b \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n  odd a \\<and> odd b \\<Longrightarrow>\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3", "by auto"], ["proof (state)\nthis:\n  \\<exists>B. a\\<^sup>2 + 3 * b\\<^sup>2 = 4 * B \\<and> is_qfN B 3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qf3_even_general: \"\\<lbrakk> is_qfN A 3; even A \\<rbrakk>\n  \\<Longrightarrow> \\<exists> B. A = 4*B \\<and> is_qfN B 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_qfN A 3; even A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B. A = 4 * B \\<and> is_qfN B 3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_qfN A 3; even A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B. A = 4 * B \\<and> is_qfN B 3", "assume \"even A\" and \"is_qfN A 3\""], ["proof (state)\nthis:\n  even A\n  is_qfN A 3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_qfN A 3; even A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B. A = 4 * B \\<and> is_qfN B 3", "then"], ["proof (chain)\npicking this:\n  even A\n  is_qfN A 3", "obtain a b where \"A = a^2 + 3*b^2\"\n    and \"even (a^2 + 3*b^2)\""], ["proof (prove)\nusing this:\n  even A\n  is_qfN A 3\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>A = a\\<^sup>2 + 3 * b\\<^sup>2;\n         even (a\\<^sup>2 + 3 * b\\<^sup>2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (unfold is_qfN_def, auto)"], ["proof (state)\nthis:\n  A = a\\<^sup>2 + 3 * b\\<^sup>2\n  even (a\\<^sup>2 + 3 * b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_qfN A 3; even A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B. A = 4 * B \\<and> is_qfN B 3", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = a\\<^sup>2 + 3 * b\\<^sup>2\n  even (a\\<^sup>2 + 3 * b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<exists>B. A = 4 * B \\<and> is_qfN B 3", "by (auto simp add: qf3_even)"], ["proof (state)\nthis:\n  \\<exists>B. A = 4 * B \\<and> is_qfN B 3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qf3_oddprimedivisor_not:\n  assumes ass: \"prime P \\<and> odd P \\<and> Q>0 \\<and> is_qfN (P*Q) 3 \\<and> \\<not> is_qfN P 3\"\n  shows \"\\<exists> R. prime R \\<and> odd R \\<and> R dvd Q \\<and> \\<not> is_qfN R 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>R. prime R \\<and> odd R \\<and> R dvd Q \\<and> \\<not> is_qfN R 3", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3 \\<Longrightarrow>\n    False", "assume ass2: \"\\<forall> R. R dvd Q \\<longrightarrow> prime R \\<longrightarrow> even R \\<or> is_qfN R 3\"\n  (is \"?A Q\")"], ["proof (state)\nthis:\n  \\<forall>R.\n     R dvd Q \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3 \\<Longrightarrow>\n    False", "obtain n::nat where \"n = nat Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. n = nat Q \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  n = nat Q\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3 \\<Longrightarrow>\n    False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and> 0 < Q \\<and> is_qfN (P * Q) 3 \\<and> \\<not> is_qfN P 3\n  n = nat Q", "have n: \"Q = int n\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and> 0 < Q \\<and> is_qfN (P * Q) 3 \\<and> \\<not> is_qfN P 3\n  n = nat Q\n\ngoal (1 subgoal):\n 1. Q = int n", "by auto"], ["proof (state)\nthis:\n  Q = int n\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3 \\<Longrightarrow>\n    False", "have \"(n > 0 \\<and> is_qfN (P*int n) 3 \\<and> ?A(int n)) \\<Longrightarrow> False\" (is \"?B n \\<Longrightarrow> False\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<and>\n    is_qfN (P * int n) 3 \\<and>\n    (\\<forall>R.\n        R dvd int n \\<longrightarrow>\n        prime R \\<longrightarrow> even R \\<or> is_qfN R 3) \\<Longrightarrow>\n    False", "proof (induct n rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x;\n                    0 < y \\<and>\n                    is_qfN (P * int y) 3 \\<and>\n                    (\\<forall>R.\n                        R dvd int y \\<longrightarrow>\n                        prime R \\<longrightarrow>\n                        even R \\<or> is_qfN R 3)\\<rbrakk>\n                   \\<Longrightarrow> False;\n        0 < x \\<and>\n        is_qfN (P * int x) 3 \\<and>\n        (\\<forall>R.\n            R dvd int x \\<longrightarrow>\n            prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\\<rbrakk>\n       \\<Longrightarrow> False", "case (less n)"], ["proof (state)\nthis:\n  \\<lbrakk>?y < n;\n   0 < ?y \\<and>\n   is_qfN (P * int ?y) 3 \\<and>\n   (\\<forall>R.\n       R dvd int ?y \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\\<rbrakk>\n  \\<Longrightarrow> False\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x;\n                    0 < y \\<and>\n                    is_qfN (P * int y) 3 \\<and>\n                    (\\<forall>R.\n                        R dvd int y \\<longrightarrow>\n                        prime R \\<longrightarrow>\n                        even R \\<or> is_qfN R 3)\\<rbrakk>\n                   \\<Longrightarrow> False;\n        0 < x \\<and>\n        is_qfN (P * int x) 3 \\<and>\n        (\\<forall>R.\n            R dvd int x \\<longrightarrow>\n            prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\\<rbrakk>\n       \\<Longrightarrow> False", "hence IH: \"!!m. m<n \\<and> ?B m \\<Longrightarrow> False\"\n      and Bn: \"?B n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?y < n;\n   0 < ?y \\<and>\n   is_qfN (P * int ?y) 3 \\<and>\n   (\\<forall>R.\n       R dvd int ?y \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\\<rbrakk>\n  \\<Longrightarrow> False\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        m < n \\<and>\n        0 < m \\<and>\n        is_qfN (P * int m) 3 \\<and>\n        (\\<forall>R.\n            R dvd int m \\<longrightarrow>\n            prime R \\<longrightarrow>\n            even R \\<or> is_qfN R 3) \\<Longrightarrow>\n        False) &&&\n    0 < n \\<and>\n    is_qfN (P * int n) 3 \\<and>\n    (\\<forall>R.\n        R dvd int n \\<longrightarrow>\n        prime R \\<longrightarrow> even R \\<or> is_qfN R 3)", "by auto"], ["proof (state)\nthis:\n  ?m < n \\<and>\n  0 < ?m \\<and>\n  is_qfN (P * int ?m) 3 \\<and>\n  (\\<forall>R.\n      R dvd int ?m \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3) \\<Longrightarrow>\n  False\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y < x;\n                    0 < y \\<and>\n                    is_qfN (P * int y) 3 \\<and>\n                    (\\<forall>R.\n                        R dvd int y \\<longrightarrow>\n                        prime R \\<longrightarrow>\n                        even R \\<or> is_qfN R 3)\\<rbrakk>\n                   \\<Longrightarrow> False;\n        0 < x \\<and>\n        is_qfN (P * int x) 3 \\<and>\n        (\\<forall>R.\n            R dvd int x \\<longrightarrow>\n            prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\\<rbrakk>\n       \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume odd: \"odd (int n)\""], ["proof (state)\nthis:\n  odd (int n)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "from Bn ass"], ["proof (chain)\npicking this:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n  prime P \\<and>\n  odd P \\<and> 0 < Q \\<and> is_qfN (P * Q) 3 \\<and> \\<not> is_qfN P 3", "have \"prime P \\<and> int n > 0 \\<and> is_qfN (P*int n) 3 \\<and> \\<not> is_qfN P 3\""], ["proof (prove)\nusing this:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n  prime P \\<and>\n  odd P \\<and> 0 < Q \\<and> is_qfN (P * Q) 3 \\<and> \\<not> is_qfN P 3\n\ngoal (1 subgoal):\n 1. prime P \\<and>\n    0 < int n \\<and> is_qfN (P * int n) 3 \\<and> \\<not> is_qfN P 3", "by simp"], ["proof (state)\nthis:\n  prime P \\<and>\n  0 < int n \\<and> is_qfN (P * int n) 3 \\<and> \\<not> is_qfN P 3\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "hence \"\\<exists> R. prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  0 < int n \\<and> is_qfN (P * int n) 3 \\<and> \\<not> is_qfN P 3\n\ngoal (1 subgoal):\n 1. \\<exists>R. prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3", "by (rule qfN_primedivisor_not)"], ["proof (state)\nthis:\n  \\<exists>R. prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>R. prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3", "obtain R where R: \"prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\""], ["proof (prove)\nusing this:\n  \\<exists>R. prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        prime R \\<and>\n        R dvd int n \\<and> \\<not> is_qfN R 3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with odd"], ["proof (chain)\npicking this:\n  odd (int n)\n  prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3", "have \"odd R\""], ["proof (prove)\nusing this:\n  odd (int n)\n  prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\n\ngoal (1 subgoal):\n 1. odd R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>odd (int n);\n     prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\\<rbrakk>\n    \\<Longrightarrow> odd R", "from R"], ["proof (chain)\npicking this:\n  prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3", "obtain U where \"int n = R*U\""], ["proof (prove)\nusing this:\n  prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\n\ngoal (1 subgoal):\n 1. (\\<And>U. int n = R * U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  int n = R * U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd (int n);\n     prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\\<rbrakk>\n    \\<Longrightarrow> odd R", "with odd"], ["proof (chain)\npicking this:\n  odd (int n)\n  int n = R * U", "show ?thesis"], ["proof (prove)\nusing this:\n  odd (int n)\n  int n = R * U\n\ngoal (1 subgoal):\n 1. odd R", "by auto"], ["proof (state)\nthis:\n  odd R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  odd R\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  odd R\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "from Bn"], ["proof (chain)\npicking this:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)", "have \"?A (int n)\""], ["proof (prove)\nusing this:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd int n \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3", "by simp"], ["proof (state)\nthis:\n  \\<forall>R.\n     R dvd int n \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\n  odd R\n  \\<forall>R.\n     R dvd int n \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3", "show False"], ["proof (prove)\nusing this:\n  prime R \\<and> R dvd int n \\<and> \\<not> is_qfN R 3\n  odd R\n  \\<forall>R.\n     R dvd int n \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "assume even: \"\\<not> odd (int n)\""], ["proof (state)\nthis:\n  \\<not> odd (int n)\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "hence \"even ((int n)*P)\""], ["proof (prove)\nusing this:\n  \\<not> odd (int n)\n\ngoal (1 subgoal):\n 1. even (int n * P)", "by simp"], ["proof (state)\nthis:\n  even (int n * P)\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "with Bn"], ["proof (chain)\npicking this:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n  even (int n * P)", "have  \"even (P*int n) \\<and> is_qfN (P*int n) 3\""], ["proof (prove)\nusing this:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n  even (int n * P)\n\ngoal (1 subgoal):\n 1. even (P * int n) \\<and> is_qfN (P * int n) 3", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  even (P * int n) \\<and> is_qfN (P * int n) 3\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "hence \"\\<exists> B. P*(int n) = 4*B \\<and> is_qfN B 3\""], ["proof (prove)\nusing this:\n  even (P * int n) \\<and> is_qfN (P * int n) 3\n\ngoal (1 subgoal):\n 1. \\<exists>B. P * int n = 4 * B \\<and> is_qfN B 3", "by (simp only: qf3_even_general)"], ["proof (state)\nthis:\n  \\<exists>B. P * int n = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>B. P * int n = 4 * B \\<and> is_qfN B 3", "obtain B where B: \"P*(int n) = 4*B \\<and> is_qfN B 3\""], ["proof (prove)\nusing this:\n  \\<exists>B. P * int n = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        P * int n = 4 * B \\<and> is_qfN B 3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P * int n = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "hence \"2^2 dvd (int n)*P\""], ["proof (prove)\nusing this:\n  P * int n = 4 * B \\<and> is_qfN B 3\n\ngoal (1 subgoal):\n 1. 2\\<^sup>2 dvd int n * P", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  2\\<^sup>2 dvd int n * P\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  2\\<^sup>2 dvd int n * P\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "have \"\\<not> 2 dvd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd P", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. even P \\<Longrightarrow> False", "assume \"2 dvd P\""], ["proof (state)\nthis:\n  even P\n\ngoal (1 subgoal):\n 1. even P \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and> 0 < Q \\<and> is_qfN (P * Q) 3 \\<and> \\<not> is_qfN P 3\n  even P", "have \"odd P \\<and> even P\""], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and> 0 < Q \\<and> is_qfN (P * Q) 3 \\<and> \\<not> is_qfN P 3\n  even P\n\ngoal (1 subgoal):\n 1. odd P \\<and> even P", "by simp"], ["proof (state)\nthis:\n  odd P \\<and> even P\n\ngoal (1 subgoal):\n 1. even P \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  odd P \\<and> even P\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  odd P\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  odd P\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "have \"prime (2::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 2", "by simp"], ["proof (state)\nthis:\n  prime 2\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  2\\<^sup>2 dvd int n * P\n  odd P\n  prime 2", "have \"2^2 dvd int n\""], ["proof (prove)\nusing this:\n  2\\<^sup>2 dvd int n * P\n  odd P\n  prime 2\n\ngoal (1 subgoal):\n 1. 2\\<^sup>2 dvd int n", "by (rule_tac p=\"2\" in prime_power_dvd_cancel_right)"], ["proof (state)\nthis:\n  2\\<^sup>2 dvd int n\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  2\\<^sup>2 dvd int n", "obtain im::int where \"int n = 4*im\""], ["proof (prove)\nusing this:\n  2\\<^sup>2 dvd int n\n\ngoal (1 subgoal):\n 1. (\\<And>im. int n = 4 * im \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  int n = 4 * im\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  int n = 4 * im\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "obtain m::nat where \"m = nat im\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m. m = nat im \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  m = nat im\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  int n = 4 * im\n  m = nat im", "have m: \"n = 4*m\""], ["proof (prove)\nusing this:\n  int n = 4 * im\n  m = nat im\n\ngoal (1 subgoal):\n 1. n = 4 * m", "by arith"], ["proof (state)\nthis:\n  n = 4 * m\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "with B"], ["proof (chain)\npicking this:\n  P * int n = 4 * B \\<and> is_qfN B 3\n  n = 4 * m", "have \"is_qfN (P*int m) 3\""], ["proof (prove)\nusing this:\n  P * int n = 4 * B \\<and> is_qfN B 3\n  n = 4 * m\n\ngoal (1 subgoal):\n 1. is_qfN (P * int m) 3", "by auto"], ["proof (state)\nthis:\n  is_qfN (P * int m) 3\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  is_qfN (P * int m) 3\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "from m Bn"], ["proof (chain)\npicking this:\n  n = 4 * m\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)", "have \"m > 0\""], ["proof (prove)\nusing this:\n  n = 4 * m\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n\ngoal (1 subgoal):\n 1. 0 < m", "by auto"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "from m Bn"], ["proof (chain)\npicking this:\n  n = 4 * m\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)", "have \"?A (int m)\""], ["proof (prove)\nusing this:\n  n = 4 * m\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd int m \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3", "by auto"], ["proof (state)\nthis:\n  \\<forall>R.\n     R dvd int m \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  is_qfN (P * int m) 3\n  0 < m\n  \\<forall>R.\n     R dvd int m \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3", "have Bm: \"?B m\""], ["proof (prove)\nusing this:\n  is_qfN (P * int m) 3\n  0 < m\n  \\<forall>R.\n     R dvd int m \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3\n\ngoal (1 subgoal):\n 1. 0 < m \\<and>\n    is_qfN (P * int m) 3 \\<and>\n    (\\<forall>R.\n        R dvd int m \\<longrightarrow>\n        prime R \\<longrightarrow> even R \\<or> is_qfN R 3)", "by simp"], ["proof (state)\nthis:\n  0 < m \\<and>\n  is_qfN (P * int m) 3 \\<and>\n  (\\<forall>R.\n      R dvd int m \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "from Bn m"], ["proof (chain)\npicking this:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n  n = 4 * m", "have \"m < n\""], ["proof (prove)\nusing this:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n  n = 4 * m\n\ngoal (1 subgoal):\n 1. m < n", "by arith"], ["proof (state)\nthis:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<not> odd (int n) \\<Longrightarrow> False", "with IH Bm"], ["proof (chain)\npicking this:\n  ?m < n \\<and>\n  0 < ?m \\<and>\n  is_qfN (P * int ?m) 3 \\<and>\n  (\\<forall>R.\n      R dvd int ?m \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3) \\<Longrightarrow>\n  False\n  0 < m \\<and>\n  is_qfN (P * int m) 3 \\<and>\n  (\\<forall>R.\n      R dvd int m \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n  m < n", "show False"], ["proof (prove)\nusing this:\n  ?m < n \\<and>\n  0 < ?m \\<and>\n  is_qfN (P * int ?m) 3 \\<and>\n  (\\<forall>R.\n      R dvd int ?m \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3) \\<Longrightarrow>\n  False\n  0 < m \\<and>\n  is_qfN (P * int m) 3 \\<and>\n  (\\<forall>R.\n      R dvd int m \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3)\n  m < n\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<forall>R.\n       R dvd Q \\<longrightarrow>\n       prime R \\<longrightarrow> even R \\<or> is_qfN R 3 \\<Longrightarrow>\n    False", "with ass ass2 n"], ["proof (chain)\npicking this:\n  prime P \\<and>\n  odd P \\<and> 0 < Q \\<and> is_qfN (P * Q) 3 \\<and> \\<not> is_qfN P 3\n  \\<forall>R.\n     R dvd Q \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3\n  Q = int n\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3) \\<Longrightarrow>\n  False", "show False"], ["proof (prove)\nusing this:\n  prime P \\<and>\n  odd P \\<and> 0 < Q \\<and> is_qfN (P * Q) 3 \\<and> \\<not> is_qfN P 3\n  \\<forall>R.\n     R dvd Q \\<longrightarrow>\n     prime R \\<longrightarrow> even R \\<or> is_qfN R 3\n  Q = int n\n  0 < n \\<and>\n  is_qfN (P * int n) 3 \\<and>\n  (\\<forall>R.\n      R dvd int n \\<longrightarrow>\n      prime R \\<longrightarrow> even R \\<or> is_qfN R 3) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qf3_oddprimedivisor:\n  \"\\<lbrakk> prime (P::int); odd P; coprime a b; P dvd (a^2+3*b^2) \\<rbrakk>\n  \\<Longrightarrow> is_qfN P 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prime P; odd P; coprime a b;\n     P dvd a\\<^sup>2 + 3 * b\\<^sup>2\\<rbrakk>\n    \\<Longrightarrow> is_qfN P 3", "proof(induct P arbitrary:a b rule:infinite_descent0_measure[where V=\"\\<lambda>P. nat\\<bar>P\\<bar>\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x a b.\n       \\<lbrakk>nat \\<bar>x\\<bar> = 0; prime x; odd x; coprime a b;\n        x dvd a\\<^sup>2 + 3 * b\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> is_qfN x 3\n 2. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "case (0 x)"], ["proof (state)\nthis:\n  nat \\<bar>x\\<bar> = 0\n  prime x\n  odd x\n  coprime a b\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<And>x a b.\n       \\<lbrakk>nat \\<bar>x\\<bar> = 0; prime x; odd x; coprime a b;\n        x dvd a\\<^sup>2 + 3 * b\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> is_qfN x 3\n 2. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "moreover"], ["proof (state)\nthis:\n  nat \\<bar>x\\<bar> = 0\n  prime x\n  odd x\n  coprime a b\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<And>x a b.\n       \\<lbrakk>nat \\<bar>x\\<bar> = 0; prime x; odd x; coprime a b;\n        x dvd a\\<^sup>2 + 3 * b\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> is_qfN x 3\n 2. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "hence \"x = 0\""], ["proof (prove)\nusing this:\n  nat \\<bar>x\\<bar> = 0\n  prime x\n  odd x\n  coprime a b\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. x = 0", "by arith"], ["proof (state)\nthis:\n  x = 0\n\ngoal (2 subgoals):\n 1. \\<And>x a b.\n       \\<lbrakk>nat \\<bar>x\\<bar> = 0; prime x; odd x; coprime a b;\n        x dvd a\\<^sup>2 + 3 * b\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> is_qfN x 3\n 2. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "ultimately"], ["proof (chain)\npicking this:\n  nat \\<bar>x\\<bar> = 0\n  prime x\n  odd x\n  coprime a b\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2\n  x = 0", "show ?case"], ["proof (prove)\nusing this:\n  nat \\<bar>x\\<bar> = 0\n  prime x\n  odd x\n  coprime a b\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2\n  x = 0\n\ngoal (1 subgoal):\n 1. is_qfN x 3", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  is_qfN x 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "case (smaller x)"], ["proof (state)\nthis:\n  0 < nat \\<bar>x\\<bar>\n  \\<not> (prime x \\<longrightarrow>\n          odd x \\<longrightarrow>\n          (\\<forall>xa xb.\n              coprime xa xb \\<longrightarrow>\n              x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n              is_qfN x 3))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  0 < nat \\<bar>x\\<bar>\n  \\<not> (prime x \\<longrightarrow>\n          odd x \\<longrightarrow>\n          (\\<forall>xa xb.\n              coprime xa xb \\<longrightarrow>\n              x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n              is_qfN x 3))", "obtain a b where abx: \"prime x \\<and> odd x \\<and> coprime a b\n    \\<and> x dvd (a^2+3*b^2) \\<and> \\<not> is_qfN x 3\""], ["proof (prove)\nusing this:\n  0 < nat \\<bar>x\\<bar>\n  \\<not> (prime x \\<longrightarrow>\n          odd x \\<longrightarrow>\n          (\\<forall>xa xb.\n              coprime xa xb \\<longrightarrow>\n              x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n              is_qfN x 3))\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        prime x \\<and>\n        odd x \\<and>\n        coprime a b \\<and>\n        x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and>\n        \\<not> is_qfN x 3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3", "obtain M where M: \"a^2+3*b^2 = x*M\""], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        a\\<^sup>2 + 3 * b\\<^sup>2 = x * M \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = x * M\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "let ?A = \"a^2 + 3*b^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "from abx"], ["proof (chain)\npicking this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3", "have x0: \"x > 0\""], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n\ngoal (1 subgoal):\n 1. 0 < x", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  0 < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  0 < x", "obtain m where \"2*\\<bar>a-m*x\\<bar>\\<le>x\""], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        2 * \\<bar>a - m * x\\<bar> \\<le> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: best_division_abs)"], ["proof (state)\nthis:\n  2 * \\<bar>a - m * x\\<bar> \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "with abx"], ["proof (chain)\npicking this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  2 * \\<bar>a - m * x\\<bar> \\<le> x", "have \"2*\\<bar>a-m*x\\<bar><x\""], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  2 * \\<bar>a - m * x\\<bar> \\<le> x\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>a - m * x\\<bar> < x", "using odd_two_times_div_two_succ[of x]"], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  2 * \\<bar>a - m * x\\<bar> \\<le> x\n  odd x \\<Longrightarrow> 2 * (x div 2) + 1 = x\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>a - m * x\\<bar> < x", "by presburger"], ["proof (state)\nthis:\n  2 * \\<bar>a - m * x\\<bar> < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  2 * \\<bar>a - m * x\\<bar> < x", "obtain c where cm: \"c = a-m*x \\<and> 2*\\<bar>c\\<bar> < x\""], ["proof (prove)\nusing this:\n  2 * \\<bar>a - m * x\\<bar> < x\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "from x0"], ["proof (chain)\npicking this:\n  0 < x", "obtain n where \"2*\\<bar>b-n*x\\<bar>\\<le>x\""], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        2 * \\<bar>b - n * x\\<bar> \\<le> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: best_division_abs)"], ["proof (state)\nthis:\n  2 * \\<bar>b - n * x\\<bar> \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "with abx"], ["proof (chain)\npicking this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  2 * \\<bar>b - n * x\\<bar> \\<le> x", "have \"2*\\<bar>b-n*x\\<bar><x\""], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  2 * \\<bar>b - n * x\\<bar> \\<le> x\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>b - n * x\\<bar> < x", "using odd_two_times_div_two_succ[of x]"], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  2 * \\<bar>b - n * x\\<bar> \\<le> x\n  odd x \\<Longrightarrow> 2 * (x div 2) + 1 = x\n\ngoal (1 subgoal):\n 1. 2 * \\<bar>b - n * x\\<bar> < x", "by presburger"], ["proof (state)\nthis:\n  2 * \\<bar>b - n * x\\<bar> < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  2 * \\<bar>b - n * x\\<bar> < x", "obtain d where dn: \"d = b-n*x \\<and> 2*\\<bar>d\\<bar> < x\""], ["proof (prove)\nusing this:\n  2 * \\<bar>b - n * x\\<bar> < x\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "let ?C = \"c^2+3*d^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have C3: \"is_qfN ?C 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_qfN (c\\<^sup>2 + 3 * d\\<^sup>2) 3", "by (unfold is_qfN_def, auto)"], ["proof (state)\nthis:\n  is_qfN (c\\<^sup>2 + 3 * d\\<^sup>2) 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have C0: \"?C > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "have hlp: \"(3::int) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 3", "by simp"], ["proof (state)\nthis:\n  1 \\<le> 3\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "have \"?C \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> c\\<^sup>2 + 3 * d\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 \\<le> c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "hence \"?C = 0 \\<or> ?C > 0\""], ["proof (prove)\nusing this:\n  0 \\<le> c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<or> 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<or> 0 < c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<or> 0 < c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "{"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<or> 0 < c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "assume \"?C = 0\""], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "with hlp"], ["proof (chain)\npicking this:\n  1 \\<le> 3\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0", "have \"c=0 \\<and> d=0\""], ["proof (prove)\nusing this:\n  1 \\<le> 3\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0\n\ngoal (1 subgoal):\n 1. c = 0 \\<and> d = 0", "by (rule qfN_zero)"], ["proof (state)\nthis:\n  c = 0 \\<and> d = 0\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "with cm dn"], ["proof (chain)\npicking this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  c = 0 \\<and> d = 0", "have \"a = m*x \\<and> b = n*x\""], ["proof (prove)\nusing this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  c = 0 \\<and> d = 0\n\ngoal (1 subgoal):\n 1. a = m * x \\<and> b = n * x", "by simp"], ["proof (state)\nthis:\n  a = m * x \\<and> b = n * x\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "hence \"x dvd a \\<and> x dvd b\""], ["proof (prove)\nusing this:\n  a = m * x \\<and> b = n * x\n\ngoal (1 subgoal):\n 1. x dvd a \\<and> x dvd b", "by simp"], ["proof (state)\nthis:\n  x dvd a \\<and> x dvd b\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "hence \"x dvd gcd a b\""], ["proof (prove)\nusing this:\n  x dvd a \\<and> x dvd b\n\ngoal (1 subgoal):\n 1. x dvd gcd a b", "by simp"], ["proof (state)\nthis:\n  x dvd gcd a b\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "with abx"], ["proof (chain)\npicking this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  x dvd gcd a b", "have False"], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  x dvd gcd a b\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: prime_int_iff)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "}"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<or> 0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<or> 0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  c\\<^sup>2 + 3 * d\\<^sup>2 = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. 0 < c\\<^sup>2 + 3 * d\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have \"x dvd ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x dvd c\\<^sup>2 + 3 * d\\<^sup>2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = x * ?k", "have \"?C = \\<bar>c\\<bar>^2 + 3*\\<bar>d\\<bar>^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 =\n    \\<bar>c\\<bar>\\<^sup>2 + 3 * \\<bar>d\\<bar>\\<^sup>2", "by (simp only: power2_abs)"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  \\<bar>c\\<bar>\\<^sup>2 + 3 * \\<bar>d\\<bar>\\<^sup>2\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = x * ?k", "also"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  \\<bar>c\\<bar>\\<^sup>2 + 3 * \\<bar>d\\<bar>\\<^sup>2\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = x * ?k", "with cm dn"], ["proof (chain)\npicking this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  \\<bar>c\\<bar>\\<^sup>2 + 3 * \\<bar>d\\<bar>\\<^sup>2", "have \"\\<dots> = (a-m*x)^2 + 3*(b-n*x)^2\""], ["proof (prove)\nusing this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  \\<bar>c\\<bar>\\<^sup>2 + 3 * \\<bar>d\\<bar>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>c\\<bar>\\<^sup>2 + 3 * \\<bar>d\\<bar>\\<^sup>2 =\n    (a - m * x)\\<^sup>2 + 3 * (b - n * x)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  \\<bar>c\\<bar>\\<^sup>2 + 3 * \\<bar>d\\<bar>\\<^sup>2 =\n  (a - m * x)\\<^sup>2 + 3 * (b - n * x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = x * ?k", "also"], ["proof (state)\nthis:\n  \\<bar>c\\<bar>\\<^sup>2 + 3 * \\<bar>d\\<bar>\\<^sup>2 =\n  (a - m * x)\\<^sup>2 + 3 * (b - n * x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = x * ?k", "have \"\\<dots> =\n      a^2 - 2*a*(m*x) + (m*x)^2 + 3*(b^2 - 2*b*(n*x) + (n*x)^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a - m * x)\\<^sup>2 + 3 * (b - n * x)\\<^sup>2 =\n    a\\<^sup>2 - 2 * a * (m * x) + (m * x)\\<^sup>2 +\n    3 * (b\\<^sup>2 - 2 * b * (n * x) + (n * x)\\<^sup>2)", "by (simp add: algebra_simps power2_eq_square)"], ["proof (state)\nthis:\n  (a - m * x)\\<^sup>2 + 3 * (b - n * x)\\<^sup>2 =\n  a\\<^sup>2 - 2 * a * (m * x) + (m * x)\\<^sup>2 +\n  3 * (b\\<^sup>2 - 2 * b * (n * x) + (n * x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = x * ?k", "also"], ["proof (state)\nthis:\n  (a - m * x)\\<^sup>2 + 3 * (b - n * x)\\<^sup>2 =\n  a\\<^sup>2 - 2 * a * (m * x) + (m * x)\\<^sup>2 +\n  3 * (b\\<^sup>2 - 2 * b * (n * x) + (n * x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = x * ?k", "with abx M"], ["proof (chain)\npicking this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  a\\<^sup>2 + 3 * b\\<^sup>2 = x * M\n  (a - m * x)\\<^sup>2 + 3 * (b - n * x)\\<^sup>2 =\n  a\\<^sup>2 - 2 * a * (m * x) + (m * x)\\<^sup>2 +\n  3 * (b\\<^sup>2 - 2 * b * (n * x) + (n * x)\\<^sup>2)", "have \"\\<dots> =\n      x*M - x*(2*a*m + 3*2*b*n) + x^2*(m^2 + 3*n^2)\""], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  a\\<^sup>2 + 3 * b\\<^sup>2 = x * M\n  (a - m * x)\\<^sup>2 + 3 * (b - n * x)\\<^sup>2 =\n  a\\<^sup>2 - 2 * a * (m * x) + (m * x)\\<^sup>2 +\n  3 * (b\\<^sup>2 - 2 * b * (n * x) + (n * x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 - 2 * a * (m * x) + (m * x)\\<^sup>2 +\n    3 * (b\\<^sup>2 - 2 * b * (n * x) + (n * x)\\<^sup>2) =\n    x * M - x * (2 * a * m + 3 * 2 * b * n) +\n    x\\<^sup>2 * (m\\<^sup>2 + 3 * n\\<^sup>2)", "by (simp only: power_mult_distrib distrib_left ac_simps, auto)"], ["proof (state)\nthis:\n  a\\<^sup>2 - 2 * a * (m * x) + (m * x)\\<^sup>2 +\n  3 * (b\\<^sup>2 - 2 * b * (n * x) + (n * x)\\<^sup>2) =\n  x * M - x * (2 * a * m + 3 * 2 * b * n) +\n  x\\<^sup>2 * (m\\<^sup>2 + 3 * n\\<^sup>2)\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 = x * ?k", "finally"], ["proof (chain)\npicking this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  x * M - x * (2 * a * m + 3 * 2 * b * n) +\n  x\\<^sup>2 * (m\\<^sup>2 + 3 * n\\<^sup>2)", "show \"?C = x*(M - (2*a*m + 3*2*b*n) + x*(m^2 + 3*n^2))\""], ["proof (prove)\nusing this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  x * M - x * (2 * a * m + 3 * 2 * b * n) +\n  x\\<^sup>2 * (m\\<^sup>2 + 3 * n\\<^sup>2)\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 =\n    x * (M - (2 * a * m + 3 * 2 * b * n) + x * (m\\<^sup>2 + 3 * n\\<^sup>2))", "by (simp add: power2_eq_square distrib_left right_diff_distrib)"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  x * (M - (2 * a * m + 3 * 2 * b * n) + x * (m\\<^sup>2 + 3 * n\\<^sup>2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x dvd c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  x dvd c\\<^sup>2 + 3 * d\\<^sup>2", "obtain y where y: \"?C = x*y\""], ["proof (prove)\nusing this:\n  x dvd c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        c\\<^sup>2 + 3 * d\\<^sup>2 = x * y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have yx: \"y < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y < x", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "assume \"\\<not> y < x\""], ["proof (state)\nthis:\n  \\<not> y < x\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "hence xy: \"x-y \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> y < x\n\ngoal (1 subgoal):\n 1. x - y \\<le> 0", "by simp"], ["proof (state)\nthis:\n  x - y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "have hlp: \"2*\\<bar>c\\<bar> \\<ge> 0 \\<and> 2*\\<bar>d\\<bar> \\<ge> 0 \\<and> (3::nat) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 2 * \\<bar>c\\<bar> \\<and> 0 \\<le> 2 * \\<bar>d\\<bar> \\<and> 0 < 3", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 2 * \\<bar>c\\<bar> \\<and> 0 \\<le> 2 * \\<bar>d\\<bar> \\<and> 0 < 3\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "from y"], ["proof (chain)\npicking this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y", "have \"4*x*y = 2^2*c^2 + 3*2^2*d^2\""], ["proof (prove)\nusing this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n\ngoal (1 subgoal):\n 1. 4 * x * y = 2\\<^sup>2 * c\\<^sup>2 + 3 * 2\\<^sup>2 * d\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  4 * x * y = 2\\<^sup>2 * c\\<^sup>2 + 3 * 2\\<^sup>2 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "hence \"4*x*y = (2*\\<bar>c\\<bar>)^2 + 3*(2*\\<bar>d\\<bar>)^2\""], ["proof (prove)\nusing this:\n  4 * x * y = 2\\<^sup>2 * c\\<^sup>2 + 3 * 2\\<^sup>2 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. 4 * x * y =\n    (2 * \\<bar>c\\<bar>)\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2", "by (auto simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  4 * x * y = (2 * \\<bar>c\\<bar>)\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "with cm dn hlp"], ["proof (chain)\npicking this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  0 \\<le> 2 * \\<bar>c\\<bar> \\<and> 0 \\<le> 2 * \\<bar>d\\<bar> \\<and> 0 < 3\n  4 * x * y = (2 * \\<bar>c\\<bar>)\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2", "have \"4*x*y < x^2 + 3*(2*\\<bar>d\\<bar>)^2\"\n      and \"(3::int) > 0 \\<and> (2*\\<bar>d\\<bar>)^2 < x^2\""], ["proof (prove)\nusing this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  0 \\<le> 2 * \\<bar>c\\<bar> \\<and> 0 \\<le> 2 * \\<bar>d\\<bar> \\<and> 0 < 3\n  4 * x * y = (2 * \\<bar>c\\<bar>)\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 4 * x * y < x\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2 &&&\n    0 < 3 \\<and> (2 * \\<bar>d\\<bar>)\\<^sup>2 < x\\<^sup>2", "using power_strict_mono [of \"2*\\<bar>b\\<bar>\" x 2 for b]"], ["proof (prove)\nusing this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  0 \\<le> 2 * \\<bar>c\\<bar> \\<and> 0 \\<le> 2 * \\<bar>d\\<bar> \\<and> 0 < 3\n  4 * x * y = (2 * \\<bar>c\\<bar>)\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2\n  \\<lbrakk>2 * \\<bar>?bb2\\<bar> < x; 0 \\<le> 2 * \\<bar>?bb2\\<bar>;\n   0 < 2\\<rbrakk>\n  \\<Longrightarrow> (2 * \\<bar>?bb2\\<bar>)\\<^sup>2 < x\\<^sup>2\n\ngoal (1 subgoal):\n 1. 4 * x * y < x\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2 &&&\n    0 < 3 \\<and> (2 * \\<bar>d\\<bar>)\\<^sup>2 < x\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  4 * x * y < x\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2\n  0 < 3 \\<and> (2 * \\<bar>d\\<bar>)\\<^sup>2 < x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "hence \"x*4*y < x^2 + 3*x^2\""], ["proof (prove)\nusing this:\n  4 * x * y < x\\<^sup>2 + 3 * (2 * \\<bar>d\\<bar>)\\<^sup>2\n  0 < 3 \\<and> (2 * \\<bar>d\\<bar>)\\<^sup>2 < x\\<^sup>2\n\ngoal (1 subgoal):\n 1. x * 4 * y < x\\<^sup>2 + 3 * x\\<^sup>2", "by (auto)"], ["proof (state)\nthis:\n  x * 4 * y < x\\<^sup>2 + 3 * x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  x * 4 * y < x\\<^sup>2 + 3 * x\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "have \"\\<dots> = x*4*x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>2 + 3 * x\\<^sup>2 = x * 4 * x", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  x\\<^sup>2 + 3 * x\\<^sup>2 = x * 4 * x\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  x * 4 * y < x * 4 * x", "have contr: \"(x-y)*(4*x) > 0\""], ["proof (prove)\nusing this:\n  x * 4 * y < x * 4 * x\n\ngoal (1 subgoal):\n 1. 0 < (x - y) * (4 * x)", "by (auto simp add: right_diff_distrib)"], ["proof (state)\nthis:\n  0 < (x - y) * (4 * x)\n\ngoal (1 subgoal):\n 1. \\<not> y < x \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume \"x-y = 0\""], ["proof (state)\nthis:\n  x - y = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with contr"], ["proof (chain)\npicking this:\n  0 < (x - y) * (4 * x)\n  x - y = 0", "show False"], ["proof (prove)\nusing this:\n  0 < (x - y) * (4 * x)\n  x - y = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. x - y \\<noteq> 0 \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x - y \\<noteq> 0 \\<Longrightarrow> False", "assume \"\\<not> x-y =0\""], ["proof (state)\nthis:\n  x - y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x - y \\<noteq> 0 \\<Longrightarrow> False", "with xy"], ["proof (chain)\npicking this:\n  x - y \\<le> 0\n  x - y \\<noteq> 0", "have \"x-y < 0\""], ["proof (prove)\nusing this:\n  x - y \\<le> 0\n  x - y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x - y < 0", "by simp"], ["proof (state)\nthis:\n  x - y < 0\n\ngoal (1 subgoal):\n 1. x - y \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  x - y < 0\n\ngoal (1 subgoal):\n 1. x - y \\<noteq> 0 \\<Longrightarrow> False", "from x0"], ["proof (chain)\npicking this:\n  0 < x", "have \"4*x > 0\""], ["proof (prove)\nusing this:\n  0 < x\n\ngoal (1 subgoal):\n 1. 0 < 4 * x", "by simp"], ["proof (state)\nthis:\n  0 < 4 * x\n\ngoal (1 subgoal):\n 1. x - y \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  x - y < 0\n  0 < 4 * x", "have \"4*x*(x-y) < 4*x*0\""], ["proof (prove)\nusing this:\n  x - y < 0\n  0 < 4 * x\n\ngoal (1 subgoal):\n 1. 4 * x * (x - y) < 4 * x * 0", "by (simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  4 * x * (x - y) < 4 * x * 0\n\ngoal (1 subgoal):\n 1. x - y \\<noteq> 0 \\<Longrightarrow> False", "with contr"], ["proof (chain)\npicking this:\n  0 < (x - y) * (4 * x)\n  4 * x * (x - y) < 4 * x * 0", "show False"], ["proof (prove)\nusing this:\n  0 < (x - y) * (4 * x)\n  4 * x * (x - y) < 4 * x * 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have y0: \"y > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < y", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < y \\<Longrightarrow> False", "assume \"\\<not> y > 0\""], ["proof (state)\nthis:\n  \\<not> 0 < y\n\ngoal (1 subgoal):\n 1. \\<not> 0 < y \\<Longrightarrow> False", "hence \"y \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < y\n\ngoal (1 subgoal):\n 1. y \\<le> 0", "by simp"], ["proof (state)\nthis:\n  y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < y \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  y \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < y \\<Longrightarrow> False", "have \"y \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<noteq> 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> y \\<noteq> 0 \\<Longrightarrow> False", "assume \"\\<not> y\\<noteq>0\""], ["proof (state)\nthis:\n  \\<not> y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> y \\<noteq> 0 \\<Longrightarrow> False", "hence \"y=0\""], ["proof (prove)\nusing this:\n  \\<not> y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y = 0", "by simp"], ["proof (state)\nthis:\n  y = 0\n\ngoal (1 subgoal):\n 1. \\<not> y \\<noteq> 0 \\<Longrightarrow> False", "with y and C0"], ["proof (chain)\npicking this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  y = 0", "show False"], ["proof (prove)\nusing this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  y = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < y \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  y \\<le> 0\n  y \\<noteq> 0", "have \"y < 0\""], ["proof (prove)\nusing this:\n  y \\<le> 0\n  y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y < 0", "by simp"], ["proof (state)\nthis:\n  y < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < y \\<Longrightarrow> False", "with x0"], ["proof (chain)\npicking this:\n  0 < x\n  y < 0", "have \"x*y < x*0\""], ["proof (prove)\nusing this:\n  0 < x\n  y < 0\n\ngoal (1 subgoal):\n 1. x * y < x * 0", "by (simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  x * y < x * 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < y \\<Longrightarrow> False", "with C0 y"], ["proof (chain)\npicking this:\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n  x * y < x * 0", "show False"], ["proof (prove)\nusing this:\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n  x * y < x * 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "let ?g = \"gcd c d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have \"c \\<noteq> 0 \\<or> d \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<or> d \\<noteq> 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (c \\<noteq> 0 \\<or> d \\<noteq> 0) \\<Longrightarrow> False", "assume \"\\<not> (c\\<noteq>0 \\<or> d\\<noteq>0)\""], ["proof (state)\nthis:\n  \\<not> (c \\<noteq> 0 \\<or> d \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<not> (c \\<noteq> 0 \\<or> d \\<noteq> 0) \\<Longrightarrow> False", "hence \"c=0 \\<and> d=0\""], ["proof (prove)\nusing this:\n  \\<not> (c \\<noteq> 0 \\<or> d \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. c = 0 \\<and> d = 0", "by simp"], ["proof (state)\nthis:\n  c = 0 \\<and> d = 0\n\ngoal (1 subgoal):\n 1. \\<not> (c \\<noteq> 0 \\<or> d \\<noteq> 0) \\<Longrightarrow> False", "with C0"], ["proof (chain)\npicking this:\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  c = 0 \\<and> d = 0", "show False"], ["proof (prove)\nusing this:\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  c = 0 \\<and> d = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c \\<noteq> 0 \\<or> d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  c \\<noteq> 0 \\<or> d \\<noteq> 0", "obtain e f where ef: \"c = ?g*e \\<and> d = ?g * f \\<and> coprime e f\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0 \\<or> d \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>e f.\n        c = gcd c d * e \\<and>\n        d = gcd c d * f \\<and> coprime e f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using gcd_coprime_exists[of c d] gcd_pos_int[of c d]"], ["proof (prove)\nusing this:\n  c \\<noteq> 0 \\<or> d \\<noteq> 0\n  gcd c d \\<noteq> 0 \\<Longrightarrow>\n  \\<exists>a' b'.\n     c = a' * gcd c d \\<and> d = b' * gcd c d \\<and> coprime a' b'\n  (0 < gcd c d) = (c \\<noteq> 0 \\<or> d \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (\\<And>e f.\n        c = gcd c d * e \\<and>\n        d = gcd c d * f \\<and> coprime e f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: mult.commute)"], ["proof (state)\nthis:\n  c = gcd c d * e \\<and> d = gcd c d * f \\<and> coprime e f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have g2nonzero: \"?g^2 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 \\<noteq> 0", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. c = 0 \\<and> d = 0 \\<Longrightarrow> False", "assume \"c = 0 \\<and> d = 0\""], ["proof (state)\nthis:\n  c = 0 \\<and> d = 0\n\ngoal (1 subgoal):\n 1. c = 0 \\<and> d = 0 \\<Longrightarrow> False", "with C0"], ["proof (chain)\npicking this:\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  c = 0 \\<and> d = 0", "show False"], ["proof (prove)\nusing this:\n  0 < c\\<^sup>2 + 3 * d\\<^sup>2\n  c = 0 \\<and> d = 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "let ?E = \"e^2 + 3*f^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have E3: \"is_qfN ?E 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_qfN (e\\<^sup>2 + 3 * f\\<^sup>2) 3", "by (unfold is_qfN_def, auto)"], ["proof (state)\nthis:\n  is_qfN (e\\<^sup>2 + 3 * f\\<^sup>2) 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have CgE: \"?C = ?g^2 * ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 =\n    (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 =\n    (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)", "have \"?g^2 * ?E = (?g*e)^2 + 3*(?g*f)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2) =\n    (gcd c d * e)\\<^sup>2 + 3 * (gcd c d * f)\\<^sup>2", "by (simp add: distrib_left power_mult_distrib)"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2) =\n  (gcd c d * e)\\<^sup>2 + 3 * (gcd c d * f)\\<^sup>2\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 =\n    (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)", "with ef"], ["proof (chain)\npicking this:\n  c = gcd c d * e \\<and> d = gcd c d * f \\<and> coprime e f\n  (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2) =\n  (gcd c d * e)\\<^sup>2 + 3 * (gcd c d * f)\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  c = gcd c d * e \\<and> d = gcd c d * f \\<and> coprime e f\n  (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2) =\n  (gcd c d * e)\\<^sup>2 + 3 * (gcd c d * f)\\<^sup>2\n\ngoal (1 subgoal):\n 1. c\\<^sup>2 + 3 * d\\<^sup>2 =\n    (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "hence \"?g^2 dvd ?C\""], ["proof (prove)\nusing this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 dvd c\\<^sup>2 + 3 * d\\<^sup>2", "by (simp add: dvd_def)"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 dvd c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "with y"], ["proof (chain)\npicking this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n  (gcd c d)\\<^sup>2 dvd c\\<^sup>2 + 3 * d\\<^sup>2", "have g2dvdxy: \"?g^2 dvd y*x\""], ["proof (prove)\nusing this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n  (gcd c d)\\<^sup>2 dvd c\\<^sup>2 + 3 * d\\<^sup>2\n\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 dvd y * x", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 dvd y * x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "moreover"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 dvd y * x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have \"coprime x (?g^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "let ?h = \"gcd ?g x\""], ["proof (state)\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "have \"?h dvd ?g\" and \"?g dvd c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd gcd c d &&& gcd c d dvd c", "by blast+"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd gcd c d\n  gcd c d dvd c\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "hence \"?h dvd c\""], ["proof (prove)\nusing this:\n  gcd (gcd c d) x dvd gcd c d\n  gcd c d dvd c\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd c", "by (rule dvd_trans)"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd c\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "have \"?h dvd ?g\" and \"?g dvd d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd gcd c d &&& gcd c d dvd d", "by blast+"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd gcd c d\n  gcd c d dvd d\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "hence \"?h dvd d\""], ["proof (prove)\nusing this:\n  gcd (gcd c d) x dvd gcd c d\n  gcd c d dvd d\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd d", "by (rule dvd_trans)"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd d\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "have \"?h dvd x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd x", "by simp"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd x\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "hence \"?h dvd m*x\""], ["proof (prove)\nusing this:\n  gcd (gcd c d) x dvd x\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd m * x", "by (rule dvd_mult)"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd m * x\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "with \\<open>?h dvd c\\<close>"], ["proof (chain)\npicking this:\n  gcd (gcd c d) x dvd c\n  gcd (gcd c d) x dvd m * x", "have \"?h dvd c+m*x\""], ["proof (prove)\nusing this:\n  gcd (gcd c d) x dvd c\n  gcd (gcd c d) x dvd m * x\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd c + m * x", "by (rule dvd_add)"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd c + m * x\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "with cm"], ["proof (chain)\npicking this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  gcd (gcd c d) x dvd c + m * x", "have \"?h dvd a\""], ["proof (prove)\nusing this:\n  c = a - m * x \\<and> 2 * \\<bar>c\\<bar> < x\n  gcd (gcd c d) x dvd c + m * x\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd a", "by simp"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd a\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "from \\<open>?h dvd x\\<close>"], ["proof (chain)\npicking this:\n  gcd (gcd c d) x dvd x", "have \"?h dvd n*x\""], ["proof (prove)\nusing this:\n  gcd (gcd c d) x dvd x\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd n * x", "by (rule dvd_mult)"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd n * x\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "with \\<open>?h dvd d\\<close>"], ["proof (chain)\npicking this:\n  gcd (gcd c d) x dvd d\n  gcd (gcd c d) x dvd n * x", "have \"?h dvd d+n*x\""], ["proof (prove)\nusing this:\n  gcd (gcd c d) x dvd d\n  gcd (gcd c d) x dvd n * x\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd d + n * x", "by (rule dvd_add)"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd d + n * x\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "with dn"], ["proof (chain)\npicking this:\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  gcd (gcd c d) x dvd d + n * x", "have \"?h dvd b\""], ["proof (prove)\nusing this:\n  d = b - n * x \\<and> 2 * \\<bar>d\\<bar> < x\n  gcd (gcd c d) x dvd d + n * x\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd b", "by simp"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd b\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "with \\<open>?h dvd a\\<close>"], ["proof (chain)\npicking this:\n  gcd (gcd c d) x dvd a\n  gcd (gcd c d) x dvd b", "have \"?h dvd gcd a b\""], ["proof (prove)\nusing this:\n  gcd (gcd c d) x dvd a\n  gcd (gcd c d) x dvd b\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x dvd gcd a b", "by simp"], ["proof (state)\nthis:\n  gcd (gcd c d) x dvd gcd a b\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "with abx"], ["proof (chain)\npicking this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  gcd (gcd c d) x dvd gcd a b", "have \"?h dvd 1\""], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  gcd (gcd c d) x dvd gcd a b\n\ngoal (1 subgoal):\n 1. is_unit (gcd (gcd c d) x)", "by simp"], ["proof (state)\nthis:\n  is_unit (gcd (gcd c d) x)\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "hence \"?h = 1\""], ["proof (prove)\nusing this:\n  is_unit (gcd (gcd c d) x)\n\ngoal (1 subgoal):\n 1. gcd (gcd c d) x = 1", "by simp"], ["proof (state)\nthis:\n  gcd (gcd c d) x = 1\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "hence \"coprime (?g^2) x\""], ["proof (prove)\nusing this:\n  gcd (gcd c d) x = 1\n\ngoal (1 subgoal):\n 1. coprime ((gcd c d)\\<^sup>2) x", "by (auto intro: gcd_eq_1_imp_coprime)"], ["proof (state)\nthis:\n  coprime ((gcd c d)\\<^sup>2) x\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  coprime ((gcd c d)\\<^sup>2) x\n\ngoal (1 subgoal):\n 1. coprime x ((gcd c d)\\<^sup>2)", "by (simp only: ac_simps)"], ["proof (state)\nthis:\n  coprime x ((gcd c d)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime x ((gcd c d)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "ultimately"], ["proof (chain)\npicking this:\n  (gcd c d)\\<^sup>2 dvd y * x\n  coprime x ((gcd c d)\\<^sup>2)", "have \"?g^2 dvd y\""], ["proof (prove)\nusing this:\n  (gcd c d)\\<^sup>2 dvd y * x\n  coprime x ((gcd c d)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 dvd y", "by (auto simp add: ac_simps coprime_dvd_mult_right_iff)"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 dvd y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  (gcd c d)\\<^sup>2 dvd y", "obtain w where w: \"y = ?g^2 * w\""], ["proof (prove)\nusing this:\n  (gcd c d)\\<^sup>2 dvd y\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        y = (gcd c d)\\<^sup>2 * w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  y = (gcd c d)\\<^sup>2 * w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "with CgE y g2nonzero"], ["proof (chain)\npicking this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n  (gcd c d)\\<^sup>2 \\<noteq> 0\n  y = (gcd c d)\\<^sup>2 * w", "have Ewx: \"?E = x*w\""], ["proof (prove)\nusing this:\n  c\\<^sup>2 + 3 * d\\<^sup>2 =\n  (gcd c d)\\<^sup>2 * (e\\<^sup>2 + 3 * f\\<^sup>2)\n  c\\<^sup>2 + 3 * d\\<^sup>2 = x * y\n  (gcd c d)\\<^sup>2 \\<noteq> 0\n  y = (gcd c d)\\<^sup>2 * w\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 + 3 * f\\<^sup>2 = x * w", "by auto"], ["proof (state)\nthis:\n  e\\<^sup>2 + 3 * f\\<^sup>2 = x * w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have \"w>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < w", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "assume \"\\<not> w>0\""], ["proof (state)\nthis:\n  \\<not> 0 < w\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "hence \"w \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> 0 < w\n\ngoal (1 subgoal):\n 1. w \\<le> 0", "by auto"], ["proof (state)\nthis:\n  w \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "hence \"w=0 \\<or> w<0\""], ["proof (prove)\nusing this:\n  w \\<le> 0\n\ngoal (1 subgoal):\n 1. w = 0 \\<or> w < 0", "by auto"], ["proof (state)\nthis:\n  w = 0 \\<or> w < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  w = 0 \\<or> w < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  w = 0 \\<or> w < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "assume \"w=0\""], ["proof (state)\nthis:\n  w = 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "with w y0"], ["proof (chain)\npicking this:\n  y = (gcd c d)\\<^sup>2 * w\n  0 < y\n  w = 0", "have False"], ["proof (prove)\nusing this:\n  y = (gcd c d)\\<^sup>2 * w\n  0 < y\n  w = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  w = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  w = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  w = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "assume wneg: \"w<0\""], ["proof (state)\nthis:\n  w < 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "have \"?g^2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (gcd c d)\\<^sup>2", "by (rule zero_le_power2)"], ["proof (state)\nthis:\n  0 \\<le> (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "with g2nonzero"], ["proof (chain)\npicking this:\n  (gcd c d)\\<^sup>2 \\<noteq> 0\n  0 \\<le> (gcd c d)\\<^sup>2", "have \"?g^2 > 0\""], ["proof (prove)\nusing this:\n  (gcd c d)\\<^sup>2 \\<noteq> 0\n  0 \\<le> (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (gcd c d)\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  0 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "with wneg"], ["proof (chain)\npicking this:\n  w < 0\n  0 < (gcd c d)\\<^sup>2", "have \"?g^2*w < ?g^2*0\""], ["proof (prove)\nusing this:\n  w < 0\n  0 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 * w < (gcd c d)\\<^sup>2 * 0", "by (simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 * w < (gcd c d)\\<^sup>2 * 0\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "with w y0"], ["proof (chain)\npicking this:\n  y = (gcd c d)\\<^sup>2 * w\n  0 < y\n  (gcd c d)\\<^sup>2 * w < (gcd c d)\\<^sup>2 * 0", "have False"], ["proof (prove)\nusing this:\n  y = (gcd c d)\\<^sup>2 * w\n  0 < y\n  (gcd c d)\\<^sup>2 * w < (gcd c d)\\<^sup>2 * 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  w < 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> 0 < w \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  w = 0 \\<or> w < 0\n  w = 0 \\<Longrightarrow> False\n  w < 0 \\<Longrightarrow> False", "show False"], ["proof (prove)\nusing this:\n  w = 0 \\<or> w < 0\n  w = 0 \\<Longrightarrow> False\n  w < 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have w_le_y: \"w \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<le> y", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "assume \"\\<not> w \\<le> y\""], ["proof (state)\nthis:\n  \\<not> w \\<le> y\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "hence wy: \"w > y\""], ["proof (prove)\nusing this:\n  \\<not> w \\<le> y\n\ngoal (1 subgoal):\n 1. y < w", "by simp"], ["proof (state)\nthis:\n  y < w\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "have \"?g^2 = 1 \\<or> ?g^2 > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2", "have \"?g^2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (gcd c d)\\<^sup>2", "by (rule zero_le_power2)"], ["proof (state)\nthis:\n  0 \\<le> (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2", "hence \"?g^2 =0 \\<or> ?g^2 > 0\""], ["proof (prove)\nusing this:\n  0 \\<le> (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 = 0 \\<or> 0 < (gcd c d)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 0 \\<or> 0 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2", "with g2nonzero"], ["proof (chain)\npicking this:\n  (gcd c d)\\<^sup>2 \\<noteq> 0\n  (gcd c d)\\<^sup>2 = 0 \\<or> 0 < (gcd c d)\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (gcd c d)\\<^sup>2 \\<noteq> 0\n  (gcd c d)\\<^sup>2 = 0 \\<or> 0 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "assume \"?g^2 =1\""], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "with w wy"], ["proof (chain)\npicking this:\n  y = (gcd c d)\\<^sup>2 * w\n  y < w\n  (gcd c d)\\<^sup>2 = 1", "have False"], ["proof (prove)\nusing this:\n  y = (gcd c d)\\<^sup>2 * w\n  y < w\n  (gcd c d)\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 1 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 1 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  (gcd c d)\\<^sup>2 = 1 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "assume g1: \"?g^2 >1\""], ["proof (state)\nthis:\n  1 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "with \\<open>w>0\\<close>"], ["proof (chain)\npicking this:\n  0 < w\n  1 < (gcd c d)\\<^sup>2", "have \"w*1 < w*?g^2\""], ["proof (prove)\nusing this:\n  0 < w\n  1 < (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. w * 1 < w * (gcd c d)\\<^sup>2", "by (auto dest: zmult_zless_mono2)"], ["proof (state)\nthis:\n  w * 1 < w * (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "with w"], ["proof (chain)\npicking this:\n  y = (gcd c d)\\<^sup>2 * w\n  w * 1 < w * (gcd c d)\\<^sup>2", "have \"w < y\""], ["proof (prove)\nusing this:\n  y = (gcd c d)\\<^sup>2 * w\n  w * 1 < w * (gcd c d)\\<^sup>2\n\ngoal (1 subgoal):\n 1. w < y", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  w < y\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "with wy"], ["proof (chain)\npicking this:\n  y < w\n  w < y", "have False"], ["proof (prove)\nusing this:\n  y < w\n  w < y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  1 < (gcd c d)\\<^sup>2 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> w \\<le> y \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2\n  (gcd c d)\\<^sup>2 = 1 \\<Longrightarrow> False\n  1 < (gcd c d)\\<^sup>2 \\<Longrightarrow> False", "show False"], ["proof (prove)\nusing this:\n  (gcd c d)\\<^sup>2 = 1 \\<or> 1 < (gcd c d)\\<^sup>2\n  (gcd c d)\\<^sup>2 = 1 \\<Longrightarrow> False\n  1 < (gcd c d)\\<^sup>2 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "from Ewx E3 abx \\<open>w>0\\<close>"], ["proof (chain)\npicking this:\n  e\\<^sup>2 + 3 * f\\<^sup>2 = x * w\n  is_qfN (e\\<^sup>2 + 3 * f\\<^sup>2) 3\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  0 < w", "have\n    \"prime x \\<and> odd x \\<and> w > 0 \\<and> is_qfN (x*w) 3 \\<and> \\<not> is_qfN x 3\""], ["proof (prove)\nusing this:\n  e\\<^sup>2 + 3 * f\\<^sup>2 = x * w\n  is_qfN (e\\<^sup>2 + 3 * f\\<^sup>2) 3\n  prime x \\<and>\n  odd x \\<and>\n  coprime a b \\<and>\n  x dvd a\\<^sup>2 + 3 * b\\<^sup>2 \\<and> \\<not> is_qfN x 3\n  0 < w\n\ngoal (1 subgoal):\n 1. prime x \\<and>\n    odd x \\<and> 0 < w \\<and> is_qfN (x * w) 3 \\<and> \\<not> is_qfN x 3", "by simp"], ["proof (state)\nthis:\n  prime x \\<and>\n  odd x \\<and> 0 < w \\<and> is_qfN (x * w) 3 \\<and> \\<not> is_qfN x 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "then"], ["proof (chain)\npicking this:\n  prime x \\<and>\n  odd x \\<and> 0 < w \\<and> is_qfN (x * w) 3 \\<and> \\<not> is_qfN x 3", "obtain z where z: \"prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\""], ["proof (prove)\nusing this:\n  prime x \\<and>\n  odd x \\<and> 0 < w \\<and> is_qfN (x * w) 3 \\<and> \\<not> is_qfN x 3\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        prime z \\<and>\n        odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (frule_tac P=\"x\" in qf3_oddprimedivisor_not, auto)"], ["proof (state)\nthis:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "from Ewx"], ["proof (chain)\npicking this:\n  e\\<^sup>2 + 3 * f\\<^sup>2 = x * w", "have \"w dvd ?E\""], ["proof (prove)\nusing this:\n  e\\<^sup>2 + 3 * f\\<^sup>2 = x * w\n\ngoal (1 subgoal):\n 1. w dvd e\\<^sup>2 + 3 * f\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  w dvd e\\<^sup>2 + 3 * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "with z"], ["proof (chain)\npicking this:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n  w dvd e\\<^sup>2 + 3 * f\\<^sup>2", "have \"z dvd ?E\""], ["proof (prove)\nusing this:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n  w dvd e\\<^sup>2 + 3 * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. z dvd e\\<^sup>2 + 3 * f\\<^sup>2", "by (auto dest: dvd_trans)"], ["proof (state)\nthis:\n  z dvd e\\<^sup>2 + 3 * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "with z ef"], ["proof (chain)\npicking this:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n  c = gcd c d * e \\<and> d = gcd c d * f \\<and> coprime e f\n  z dvd e\\<^sup>2 + 3 * f\\<^sup>2", "have \"prime z \\<and> odd z \\<and> coprime e f \\<and> z dvd ?E \\<and> \\<not> is_qfN z 3\""], ["proof (prove)\nusing this:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n  c = gcd c d * e \\<and> d = gcd c d * f \\<and> coprime e f\n  z dvd e\\<^sup>2 + 3 * f\\<^sup>2\n\ngoal (1 subgoal):\n 1. prime z \\<and>\n    odd z \\<and>\n    coprime e f \\<and>\n    z dvd e\\<^sup>2 + 3 * f\\<^sup>2 \\<and> \\<not> is_qfN z 3", "by auto"], ["proof (state)\nthis:\n  prime z \\<and>\n  odd z \\<and>\n  coprime e f \\<and>\n  z dvd e\\<^sup>2 + 3 * f\\<^sup>2 \\<and> \\<not> is_qfN z 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "moreover"], ["proof (state)\nthis:\n  prime z \\<and>\n  odd z \\<and>\n  coprime e f \\<and>\n  z dvd e\\<^sup>2 + 3 * f\\<^sup>2 \\<and> \\<not> is_qfN z 3\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "have \"nat\\<bar>z\\<bar> < nat\\<bar>x\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>", "have \"z \\<le> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<le> w", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> z \\<le> w \\<Longrightarrow> False", "assume \"\\<not> z \\<le> w\""], ["proof (state)\nthis:\n  \\<not> z \\<le> w\n\ngoal (1 subgoal):\n 1. \\<not> z \\<le> w \\<Longrightarrow> False", "hence \"w < z\""], ["proof (prove)\nusing this:\n  \\<not> z \\<le> w\n\ngoal (1 subgoal):\n 1. w < z", "by auto"], ["proof (state)\nthis:\n  w < z\n\ngoal (1 subgoal):\n 1. \\<not> z \\<le> w \\<Longrightarrow> False", "with \\<open>w>0\\<close>"], ["proof (chain)\npicking this:\n  0 < w\n  w < z", "have \"\\<not> z dvd w\""], ["proof (prove)\nusing this:\n  0 < w\n  w < z\n\ngoal (1 subgoal):\n 1. \\<not> z dvd w", "by (rule zdvd_not_zless)"], ["proof (state)\nthis:\n  \\<not> z dvd w\n\ngoal (1 subgoal):\n 1. \\<not> z \\<le> w \\<Longrightarrow> False", "with z"], ["proof (chain)\npicking this:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n  \\<not> z dvd w", "show False"], ["proof (prove)\nusing this:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n  \\<not> z dvd w\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<le> w\n\ngoal (1 subgoal):\n 1. nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>", "with w_le_y yx"], ["proof (chain)\npicking this:\n  w \\<le> y\n  y < x\n  z \\<le> w", "have \"z < x\""], ["proof (prove)\nusing this:\n  w \\<le> y\n  y < x\n  z \\<le> w\n\ngoal (1 subgoal):\n 1. z < x", "by simp"], ["proof (state)\nthis:\n  z < x\n\ngoal (1 subgoal):\n 1. nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>", "with z"], ["proof (chain)\npicking this:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n  z < x", "have \"\\<bar>z\\<bar> < \\<bar>x\\<bar>\""], ["proof (prove)\nusing this:\n  prime z \\<and> odd z \\<and> z dvd w \\<and> \\<not> is_qfN z 3\n  z < x\n\ngoal (1 subgoal):\n 1. \\<bar>z\\<bar> < \\<bar>x\\<bar>", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  \\<bar>z\\<bar> < \\<bar>x\\<bar>\n\ngoal (1 subgoal):\n 1. nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>z\\<bar> < \\<bar>x\\<bar>\n\ngoal (1 subgoal):\n 1. nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>", "by auto"], ["proof (state)\nthis:\n  nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>0 < nat \\<bar>x\\<bar>;\n        \\<not> (prime x \\<longrightarrow>\n                odd x \\<longrightarrow>\n                (\\<forall>xa xb.\n                    coprime xa xb \\<longrightarrow>\n                    x dvd xa\\<^sup>2 + 3 * xb\\<^sup>2 \\<longrightarrow>\n                    is_qfN x 3))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n                            \\<not> (prime y \\<longrightarrow>\n                                    odd y \\<longrightarrow>\n                                    (\\<forall>x xa.\n  coprime x xa \\<longrightarrow>\n  y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow> is_qfN y 3))", "ultimately"], ["proof (chain)\npicking this:\n  prime z \\<and>\n  odd z \\<and>\n  coprime e f \\<and>\n  z dvd e\\<^sup>2 + 3 * f\\<^sup>2 \\<and> \\<not> is_qfN z 3\n  nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>", "show ?case"], ["proof (prove)\nusing this:\n  prime z \\<and>\n  odd z \\<and>\n  coprime e f \\<and>\n  z dvd e\\<^sup>2 + 3 * f\\<^sup>2 \\<and> \\<not> is_qfN z 3\n  nat \\<bar>z\\<bar> < nat \\<bar>x\\<bar>\n\ngoal (1 subgoal):\n 1. \\<exists>y.\n       nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n       \\<not> (prime y \\<longrightarrow>\n               odd y \\<longrightarrow>\n               (\\<forall>x xa.\n                   coprime x xa \\<longrightarrow>\n                   y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow>\n                   is_qfN y 3))", "by auto"], ["proof (state)\nthis:\n  \\<exists>y.\n     nat \\<bar>y\\<bar> < nat \\<bar>x\\<bar> \\<and>\n     \\<not> (prime y \\<longrightarrow>\n             odd y \\<longrightarrow>\n             (\\<forall>x xa.\n                 coprime x xa \\<longrightarrow>\n                 y dvd x\\<^sup>2 + 3 * xa\\<^sup>2 \\<longrightarrow>\n                 is_qfN y 3))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qf3_cube_prime_impl_cube_form:\n  assumes ab_relprime: \"coprime a b\" and abP: \"P^3 = a^2 + 3*b^2\"\n  and P: \"prime P \\<and> odd P\"\n  shows \"is_cube_form a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_cube_form a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_cube_form a b", "from abP"], ["proof (chain)\npicking this:\n  P ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2", "have qfP3: \"is_qfN (P^3) 3\""], ["proof (prove)\nusing this:\n  P ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_qfN (P ^ 3) 3", "by (auto simp only: is_qfN_def)"], ["proof (state)\nthis:\n  is_qfN (P ^ 3) 3\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "have PvdP3: \"P dvd P^3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P dvd P ^ 3", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  P dvd P ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "with abP ab_relprime P"], ["proof (chain)\npicking this:\n  P ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n  coprime a b\n  prime P \\<and> odd P\n  P dvd P ^ 3", "have qfP: \"is_qfN P 3\""], ["proof (prove)\nusing this:\n  P ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n  coprime a b\n  prime P \\<and> odd P\n  P dvd P ^ 3\n\ngoal (1 subgoal):\n 1. is_qfN P 3", "by (simp add: qf3_oddprimedivisor)"], ["proof (state)\nthis:\n  is_qfN P 3\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "then"], ["proof (chain)\npicking this:\n  is_qfN P 3", "obtain p q where pq: \"P = p^2 + 3*q^2\""], ["proof (prove)\nusing this:\n  is_qfN P 3\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        P = p\\<^sup>2 + 3 * q\\<^sup>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: is_qfN_def)"], ["proof (state)\nthis:\n  P = p\\<^sup>2 + 3 * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "with P abP ab_relprime"], ["proof (chain)\npicking this:\n  prime P \\<and> odd P\n  P ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n  coprime a b\n  P = p\\<^sup>2 + 3 * q\\<^sup>2", "have \"prime (p^2 + 3*q^2) \\<and> (3::int) > 1\n    \\<and> (p^2+3*q^2)^3 = a^2+3*b^2 \\<and> coprime a b\""], ["proof (prove)\nusing this:\n  prime P \\<and> odd P\n  P ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n  coprime a b\n  P = p\\<^sup>2 + 3 * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. prime (p\\<^sup>2 + 3 * q\\<^sup>2) \\<and>\n    1 < 3 \\<and>\n    (p\\<^sup>2 + 3 * q\\<^sup>2) ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2 \\<and>\n    coprime a b", "by auto"], ["proof (state)\nthis:\n  prime (p\\<^sup>2 + 3 * q\\<^sup>2) \\<and>\n  1 < 3 \\<and>\n  (p\\<^sup>2 + 3 * q\\<^sup>2) ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2 \\<and>\n  coprime a b\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "hence ab: \"\\<bar>a\\<bar> = \\<bar>p^3 - 3*3*p*q^2\\<bar> \\<and> \\<bar>b\\<bar> = \\<bar>3*p^2*q - 3*q^3\\<bar>\""], ["proof (prove)\nusing this:\n  prime (p\\<^sup>2 + 3 * q\\<^sup>2) \\<and>\n  1 < 3 \\<and>\n  (p\\<^sup>2 + 3 * q\\<^sup>2) ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2 \\<and>\n  coprime a b\n\ngoal (1 subgoal):\n 1. \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * 3 * p * q\\<^sup>2\\<bar> \\<and>\n    \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - 3 * q ^ 3\\<bar>", "by (rule qfN_cube_prime)"], ["proof (state)\nthis:\n  \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * 3 * p * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - 3 * q ^ 3\\<bar>\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "hence a: \"a = p^3 - 9*p*q^2 \\<or> a = -(p^3) + 9*p*q^2\""], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * 3 * p * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - 3 * q ^ 3\\<bar>\n\ngoal (1 subgoal):\n 1. a = p ^ 3 - 9 * p * q\\<^sup>2 \\<or> a = - (p ^ 3) + 9 * p * q\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<or> a = - (p ^ 3) + 9 * p * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "from ab"], ["proof (chain)\npicking this:\n  \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * 3 * p * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - 3 * q ^ 3\\<bar>", "have b: \"b = 3*p^2*q - 3*q^3 \\<or> b = -(3*p^2*q) + 3*q^3\""], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar> = \\<bar>p ^ 3 - 3 * 3 * p * q\\<^sup>2\\<bar> \\<and>\n  \\<bar>b\\<bar> = \\<bar>3 * p\\<^sup>2 * q - 3 * q ^ 3\\<bar>\n\ngoal (1 subgoal):\n 1. b = 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<or>\n    b = - (3 * p\\<^sup>2 * q) + 3 * q ^ 3", "by arith"], ["proof (state)\nthis:\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<or>\n  b = - (3 * p\\<^sup>2 * q) + 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "obtain r s where r: \"r = -p\" and s: \"s = -q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        \\<lbrakk>r = - p; s = - q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  r = - p\n  s = - q\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_cube_form a b", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> is_cube_form a b\n 2. \\<not> ?P \\<Longrightarrow> is_cube_form a b", "assume a1: \"a = p^3- 9*p*q^2\""], ["proof (state)\nthis:\n  a = p ^ 3 - 9 * p * q\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> is_cube_form a b\n 2. \\<not> ?P \\<Longrightarrow> is_cube_form a b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_cube_form a b", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> is_cube_form a b\n 2. \\<not> ?P \\<Longrightarrow> is_cube_form a b", "assume b1: \"b = 3*p^2*q - 3*q^3\""], ["proof (state)\nthis:\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> is_cube_form a b\n 2. \\<not> ?P \\<Longrightarrow> is_cube_form a b", "with a1"], ["proof (chain)\npicking this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3", "show ?thesis"], ["proof (prove)\nusing this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "by (unfold is_cube_form_def, auto)"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "assume \"\\<not> b = 3*p^2*q - 3*q^3\""], ["proof (state)\nthis:\n  b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "with b"], ["proof (chain)\npicking this:\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<or>\n  b = - (3 * p\\<^sup>2 * q) + 3 * q ^ 3\n  b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3", "have \"b = - 3*p^2*q + 3*q^3\""], ["proof (prove)\nusing this:\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<or>\n  b = - (3 * p\\<^sup>2 * q) + 3 * q ^ 3\n  b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b = - 3 * p\\<^sup>2 * q + 3 * q ^ 3", "by simp"], ["proof (state)\nthis:\n  b = - 3 * p\\<^sup>2 * q + 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "with s"], ["proof (chain)\npicking this:\n  s = - q\n  b = - 3 * p\\<^sup>2 * q + 3 * q ^ 3", "have \"b = 3*p^2*s - 3*s^3\""], ["proof (prove)\nusing this:\n  s = - q\n  b = - 3 * p\\<^sup>2 * q + 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b = 3 * p\\<^sup>2 * s - 3 * s ^ 3", "by simp"], ["proof (state)\nthis:\n  b = 3 * p\\<^sup>2 * s - 3 * s ^ 3\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "moreover"], ["proof (state)\nthis:\n  b = 3 * p\\<^sup>2 * s - 3 * s ^ 3\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "from a1 s"], ["proof (chain)\npicking this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2\n  s = - q", "have \"a = p^3 - 9*p*s^2\""], ["proof (prove)\nusing this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2\n  s = - q\n\ngoal (1 subgoal):\n 1. a = p ^ 3 - 9 * p * s\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  a = p ^ 3 - 9 * p * s\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "ultimately"], ["proof (chain)\npicking this:\n  b = 3 * p\\<^sup>2 * s - 3 * s ^ 3\n  a = p ^ 3 - 9 * p * s\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  b = 3 * p\\<^sup>2 * s - 3 * s ^ 3\n  a = p ^ 3 - 9 * p * s\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "by (unfold is_cube_form_def, auto)"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal (1 subgoal):\n 1. a \\<noteq> p ^ 3 - 9 * p * q\\<^sup>2 \\<Longrightarrow> is_cube_form a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> p ^ 3 - 9 * p * q\\<^sup>2 \\<Longrightarrow> is_cube_form a b", "assume \"\\<not> a = p^3 - 9*p*q^2\""], ["proof (state)\nthis:\n  a \\<noteq> p ^ 3 - 9 * p * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. a \\<noteq> p ^ 3 - 9 * p * q\\<^sup>2 \\<Longrightarrow> is_cube_form a b", "with a"], ["proof (chain)\npicking this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<or> a = - (p ^ 3) + 9 * p * q\\<^sup>2\n  a \\<noteq> p ^ 3 - 9 * p * q\\<^sup>2", "have \"a = -(p^3) + 9*p*q^2\""], ["proof (prove)\nusing this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<or> a = - (p ^ 3) + 9 * p * q\\<^sup>2\n  a \\<noteq> p ^ 3 - 9 * p * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. a = - (p ^ 3) + 9 * p * q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  a = - (p ^ 3) + 9 * p * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. a \\<noteq> p ^ 3 - 9 * p * q\\<^sup>2 \\<Longrightarrow> is_cube_form a b", "with r"], ["proof (chain)\npicking this:\n  r = - p\n  a = - (p ^ 3) + 9 * p * q\\<^sup>2", "have ar: \"a = r^3 - 9*r*q^2\""], ["proof (prove)\nusing this:\n  r = - p\n  a = - (p ^ 3) + 9 * p * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. a = r ^ 3 - 9 * r * q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  a = r ^ 3 - 9 * r * q\\<^sup>2\n\ngoal (1 subgoal):\n 1. a \\<noteq> p ^ 3 - 9 * p * q\\<^sup>2 \\<Longrightarrow> is_cube_form a b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_cube_form a b", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> is_cube_form a b\n 2. \\<not> ?P \\<Longrightarrow> is_cube_form a b", "assume b1: \"b = 3*p^2*q - 3*q^3\""], ["proof (state)\nthis:\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> is_cube_form a b\n 2. \\<not> ?P \\<Longrightarrow> is_cube_form a b", "with r"], ["proof (chain)\npicking this:\n  r = - p\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3", "have \"b = 3*r^2*q - 3*q^3\""], ["proof (prove)\nusing this:\n  r = - p\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b = 3 * r\\<^sup>2 * q - 3 * q ^ 3", "by simp"], ["proof (state)\nthis:\n  b = 3 * r\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> is_cube_form a b\n 2. \\<not> ?P \\<Longrightarrow> is_cube_form a b", "with ar"], ["proof (chain)\npicking this:\n  a = r ^ 3 - 9 * r * q\\<^sup>2\n  b = 3 * r\\<^sup>2 * q - 3 * q ^ 3", "show ?thesis"], ["proof (prove)\nusing this:\n  a = r ^ 3 - 9 * r * q\\<^sup>2\n  b = 3 * r\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "by (unfold is_cube_form_def, auto)"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "assume \"\\<not> b = 3*p^2*q - 3*q^3\""], ["proof (state)\nthis:\n  b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "with b"], ["proof (chain)\npicking this:\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<or>\n  b = - (3 * p\\<^sup>2 * q) + 3 * q ^ 3\n  b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3", "have \"b = - 3*p^2*q + 3*q^3\""], ["proof (prove)\nusing this:\n  b = 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<or>\n  b = - (3 * p\\<^sup>2 * q) + 3 * q ^ 3\n  b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b = - 3 * p\\<^sup>2 * q + 3 * q ^ 3", "by simp"], ["proof (state)\nthis:\n  b = - 3 * p\\<^sup>2 * q + 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "with r s"], ["proof (chain)\npicking this:\n  r = - p\n  s = - q\n  b = - 3 * p\\<^sup>2 * q + 3 * q ^ 3", "have \"b = 3*r^2*s - 3*s^3\""], ["proof (prove)\nusing this:\n  r = - p\n  s = - q\n  b = - 3 * p\\<^sup>2 * q + 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. b = 3 * r\\<^sup>2 * s - 3 * s ^ 3", "by simp"], ["proof (state)\nthis:\n  b = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "moreover"], ["proof (state)\nthis:\n  b = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "from ar s"], ["proof (chain)\npicking this:\n  a = r ^ 3 - 9 * r * q\\<^sup>2\n  s = - q", "have \"a = r^3 - 9*r*s^2\""], ["proof (prove)\nusing this:\n  a = r ^ 3 - 9 * r * q\\<^sup>2\n  s = - q\n\ngoal (1 subgoal):\n 1. a = r ^ 3 - 9 * r * s\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  a = r ^ 3 - 9 * r * s\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n    is_cube_form a b", "ultimately"], ["proof (chain)\npicking this:\n  b = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n  a = r ^ 3 - 9 * r * s\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  b = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n  a = r ^ 3 - 9 * r * s\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "by (unfold is_cube_form_def, auto)"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cube_form_mult: \"\\<lbrakk> is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1 \\<rbrakk>\n  \\<Longrightarrow> is_cube_form (a*c+e*3*b*d) (a*d-e*b*c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "assume ab: \"is_cube_form a b\" and c_d: \"is_cube_form c d\" and e: \"\\<bar>e\\<bar> = 1\""], ["proof (state)\nthis:\n  is_cube_form a b\n  is_cube_form c d\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "from ab"], ["proof (chain)\npicking this:\n  is_cube_form a b", "obtain p q where pq: \"a = p^3 - 9*p*q^2 \\<and> b = 3*p^2*q - 3*q^3\""], ["proof (prove)\nusing this:\n  is_cube_form a b\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and>\n        b = 3 * p\\<^sup>2 * q - 3 * q ^ 3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: is_cube_form_def)"], ["proof (state)\nthis:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and> b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "from c_d"], ["proof (chain)\npicking this:\n  is_cube_form c d", "obtain r s where rs: \"c = r^3 - 9*r*s^2 \\<and> d = 3*r^2*s - 3*s^3\""], ["proof (prove)\nusing this:\n  is_cube_form c d\n\ngoal (1 subgoal):\n 1. (\\<And>r s.\n        c = r ^ 3 - 9 * r * s\\<^sup>2 \\<and>\n        d = 3 * r\\<^sup>2 * s - 3 * s ^ 3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp only: is_cube_form_def)"], ["proof (state)\nthis:\n  c = r ^ 3 - 9 * r * s\\<^sup>2 \\<and> d = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "let ?t = \"p*r + e*3*q*s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "let ?u = \"p*s - e*r*q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "have e2: \"e^2=1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "from e"], ["proof (chain)\npicking this:\n  \\<bar>e\\<bar> = 1", "have \"e=1 \\<or> e=-1\""], ["proof (prove)\nusing this:\n  \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. e = 1 \\<or> e = - 1", "by linarith"], ["proof (state)\nthis:\n  e = 1 \\<or> e = - 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "moreover"], ["proof (state)\nthis:\n  e = 1 \\<or> e = - 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "{"], ["proof (state)\nthis:\n  e = 1 \\<or> e = - 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "assume \"e=1\""], ["proof (state)\nthis:\n  e = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "hence ?thesis"], ["proof (prove)\nusing this:\n  e = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "by auto"], ["proof (state)\nthis:\n  e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "}"], ["proof (state)\nthis:\n  e = 1 \\<Longrightarrow> e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "moreover"], ["proof (state)\nthis:\n  e = 1 \\<Longrightarrow> e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "{"], ["proof (state)\nthis:\n  e = 1 \\<Longrightarrow> e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "assume \"e=-1\""], ["proof (state)\nthis:\n  e = - 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "hence ?thesis"], ["proof (prove)\nusing this:\n  e = - 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "by simp"], ["proof (state)\nthis:\n  e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "}"], ["proof (state)\nthis:\n  e = - 1 \\<Longrightarrow> e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "ultimately"], ["proof (chain)\npicking this:\n  e = 1 \\<or> e = - 1\n  e = 1 \\<Longrightarrow> e\\<^sup>2 = 1\n  e = - 1 \\<Longrightarrow> e\\<^sup>2 = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  e = 1 \\<or> e = - 1\n  e = 1 \\<Longrightarrow> e\\<^sup>2 = 1\n  e = - 1 \\<Longrightarrow> e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e\\<^sup>2 = 1", "by blast"], ["proof (state)\nthis:\n  e\\<^sup>2 = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "hence \"e*e^2 = e\""], ["proof (prove)\nusing this:\n  e\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. e * e\\<^sup>2 = e", "by simp"], ["proof (state)\nthis:\n  e * e\\<^sup>2 = e\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "hence e3: \"e*1 = e^3\""], ["proof (prove)\nusing this:\n  e * e\\<^sup>2 = e\n\ngoal (1 subgoal):\n 1. e * 1 = e ^ 3", "by (simp only: power2_eq_square power3_eq_cube)"], ["proof (state)\nthis:\n  e * 1 = e ^ 3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "have \"a*c+e*3*b*d = ?t^3 - 9*?t*?u^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c + e * 3 * b * d =\n    (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a * c + e * 3 * b * d =\n    (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2", "have \"?t^3 - 9*?t*?u^2 = p^3*r^3 + e*9*p^2*q*r^2*s + e^2*27*p*q^2*r*s^2\n      + e^3*27*q^3*s^3 - 9*p*p^2*r*s^2 + e*18*p^2*q*r^2*s - e^2*9*p*q^2*(r*r^2)\n      - e*27*p^2*q*(s*s^2) + e^2*54*p*q^2*r*s^2 - e*e^2*27*(q*q^2)*r^2*s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2 =\n    p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n    e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n    e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n    9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n    e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n    e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n    e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n    e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n    e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2 =\n  p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n  9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n  e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n  e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n  e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s\n\ngoal (1 subgoal):\n 1. a * c + e * 3 * b * d =\n    (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2", "also"], ["proof (state)\nthis:\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2 =\n  p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n  9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n  e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n  e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n  e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s\n\ngoal (1 subgoal):\n 1. a * c + e * 3 * b * d =\n    (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2", "with e2 e3"], ["proof (chain)\npicking this:\n  e\\<^sup>2 = 1\n  e * 1 = e ^ 3\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2 =\n  p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n  9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n  e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n  e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n  e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s", "have \"\\<dots> =\n      p^3*r^3 + e*27*p^2*q*r^2*s + 81*p*q^2*r*s^2 + e*27*q^3*s^3\n      - 9*p^3*r*s^2 - 9*p*q^2*r^3 - e*27*p^2*q*s^3 - e*27*q^3*r^2*s\""], ["proof (prove)\nusing this:\n  e\\<^sup>2 = 1\n  e * 1 = e ^ 3\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2 =\n  p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n  9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n  e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n  e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n  e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s\n\ngoal (1 subgoal):\n 1. p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n    e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n    e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n    9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n    e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n    e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n    e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n    e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n    e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s =\n    p ^ 3 * r ^ 3 + e * 27 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n    81 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n    e * 27 * q ^ 3 * s ^ 3 -\n    9 * p ^ 3 * r * s\\<^sup>2 -\n    9 * p * q\\<^sup>2 * r ^ 3 -\n    e * 27 * p\\<^sup>2 * q * s ^ 3 -\n    e * 27 * q ^ 3 * r\\<^sup>2 * s", "by (simp add: power2_eq_square power3_eq_cube)"], ["proof (state)\nthis:\n  p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n  9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n  e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n  e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n  e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s =\n  p ^ 3 * r ^ 3 + e * 27 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  81 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e * 27 * q ^ 3 * s ^ 3 -\n  9 * p ^ 3 * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r ^ 3 -\n  e * 27 * p\\<^sup>2 * q * s ^ 3 -\n  e * 27 * q ^ 3 * r\\<^sup>2 * s\n\ngoal (1 subgoal):\n 1. a * c + e * 3 * b * d =\n    (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2", "also"], ["proof (state)\nthis:\n  p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n  9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n  e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n  e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n  e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s =\n  p ^ 3 * r ^ 3 + e * 27 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  81 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e * 27 * q ^ 3 * s ^ 3 -\n  9 * p ^ 3 * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r ^ 3 -\n  e * 27 * p\\<^sup>2 * q * s ^ 3 -\n  e * 27 * q ^ 3 * r\\<^sup>2 * s\n\ngoal (1 subgoal):\n 1. a * c + e * 3 * b * d =\n    (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2", "with pq rs"], ["proof (chain)\npicking this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and> b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n  c = r ^ 3 - 9 * r * s\\<^sup>2 \\<and> d = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n  p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n  9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n  e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n  e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n  e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s =\n  p ^ 3 * r ^ 3 + e * 27 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  81 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e * 27 * q ^ 3 * s ^ 3 -\n  9 * p ^ 3 * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r ^ 3 -\n  e * 27 * p\\<^sup>2 * q * s ^ 3 -\n  e * 27 * q ^ 3 * r\\<^sup>2 * s", "have \"\\<dots> = a*c + e*3*b*d\""], ["proof (prove)\nusing this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and> b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n  c = r ^ 3 - 9 * r * s\\<^sup>2 \\<and> d = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n  p ^ 3 * r ^ 3 + e * 9 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e ^ 3 * 27 * q ^ 3 * s ^ 3 -\n  9 * p * p\\<^sup>2 * r * s\\<^sup>2 +\n  e * 18 * p\\<^sup>2 * q * r\\<^sup>2 * s -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * (r * r\\<^sup>2) -\n  e * 27 * p\\<^sup>2 * q * (s * s\\<^sup>2) +\n  e\\<^sup>2 * 54 * p * q\\<^sup>2 * r * s\\<^sup>2 -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r\\<^sup>2 * s =\n  p ^ 3 * r ^ 3 + e * 27 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  81 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e * 27 * q ^ 3 * s ^ 3 -\n  9 * p ^ 3 * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r ^ 3 -\n  e * 27 * p\\<^sup>2 * q * s ^ 3 -\n  e * 27 * q ^ 3 * r\\<^sup>2 * s\n\ngoal (1 subgoal):\n 1. p ^ 3 * r ^ 3 + e * 27 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n    81 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n    e * 27 * q ^ 3 * s ^ 3 -\n    9 * p ^ 3 * r * s\\<^sup>2 -\n    9 * p * q\\<^sup>2 * r ^ 3 -\n    e * 27 * p\\<^sup>2 * q * s ^ 3 -\n    e * 27 * q ^ 3 * r\\<^sup>2 * s =\n    a * c + e * 3 * b * d", "by (simp only: left_diff_distrib right_diff_distrib ac_simps)"], ["proof (state)\nthis:\n  p ^ 3 * r ^ 3 + e * 27 * p\\<^sup>2 * q * r\\<^sup>2 * s +\n  81 * p * q\\<^sup>2 * r * s\\<^sup>2 +\n  e * 27 * q ^ 3 * s ^ 3 -\n  9 * p ^ 3 * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r ^ 3 -\n  e * 27 * p\\<^sup>2 * q * s ^ 3 -\n  e * 27 * q ^ 3 * r\\<^sup>2 * s =\n  a * c + e * 3 * b * d\n\ngoal (1 subgoal):\n 1. a * c + e * 3 * b * d =\n    (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2 =\n  a * c + e * 3 * b * d", "show ?thesis"], ["proof (prove)\nusing this:\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2 =\n  a * c + e * 3 * b * d\n\ngoal (1 subgoal):\n 1. a * c + e * 3 * b * d =\n    (p * r + e * 3 * q * s) ^ 3 -\n    9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  a * c + e * 3 * b * d =\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a * c + e * 3 * b * d =\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "moreover"], ["proof (state)\nthis:\n  a * c + e * 3 * b * d =\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "have \"a*d-e*b*c = 3*?t^2*?u - 3*?u^3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * d - e * b * c =\n    3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a * d - e * b * c =\n    3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3", "have \"3*?t^2*?u - 3*?u^3 =\n      3*(p*p^2)*r^2*s - e*3*p^2*q*(r*r^2) + e*18*p^2*q*r*s^2\n      - e^2*18*p*q^2*r^2*s + e^2*27*p*q^2*(s*s^2) - e*e^2*27*(q*q^2)*r*s^2\n      - 3*p^3*s^3 + e*9*p^2*q*r*s^2 - e^2*9*p*q^2*r^2*s + e^3*3*r^3*q^3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3 =\n    3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n    e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n    e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n    e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n    e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n    e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n    3 * p ^ 3 * s ^ 3 +\n    e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n    e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n    e ^ 3 * 3 * r ^ 3 * q ^ 3", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3 =\n  3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n  e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e ^ 3 * 3 * r ^ 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. a * d - e * b * c =\n    3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3", "also"], ["proof (state)\nthis:\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3 =\n  3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n  e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e ^ 3 * 3 * r ^ 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. a * d - e * b * c =\n    3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3", "with e2 e3"], ["proof (chain)\npicking this:\n  e\\<^sup>2 = 1\n  e * 1 = e ^ 3\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3 =\n  3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n  e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e ^ 3 * 3 * r ^ 3 * q ^ 3", "have \"\\<dots> = 3*p^3*r^2*s - e*3*p^2*q*r^3 + e*18*p^2*q*r*s^2\n      - 18*p*q^2*r^2*s + 27*p*q^2*s^3 - e*27*q^3*r*s^2 - 3*p^3*s^3\n      + e*9*p^2*q*r*s^2 - 9*p*q^2*r^2*s + e*3*r^3*q^3\""], ["proof (prove)\nusing this:\n  e\\<^sup>2 = 1\n  e * 1 = e ^ 3\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3 =\n  3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n  e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e ^ 3 * 3 * r ^ 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. 3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n    e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n    e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n    e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n    e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n    e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n    3 * p ^ 3 * s ^ 3 +\n    e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n    e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n    e ^ 3 * 3 * r ^ 3 * q ^ 3 =\n    3 * p ^ 3 * r\\<^sup>2 * s - e * 3 * p\\<^sup>2 * q * r ^ 3 +\n    e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n    18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n    27 * p * q\\<^sup>2 * s ^ 3 -\n    e * 27 * q ^ 3 * r * s\\<^sup>2 -\n    3 * p ^ 3 * s ^ 3 +\n    e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n    9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n    e * 3 * r ^ 3 * q ^ 3", "by (simp add: power2_eq_square power3_eq_cube)"], ["proof (state)\nthis:\n  3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n  e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e ^ 3 * 3 * r ^ 3 * q ^ 3 =\n  3 * p ^ 3 * r\\<^sup>2 * s - e * 3 * p\\<^sup>2 * q * r ^ 3 +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  27 * p * q\\<^sup>2 * s ^ 3 -\n  e * 27 * q ^ 3 * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e * 3 * r ^ 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. a * d - e * b * c =\n    3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3", "also"], ["proof (state)\nthis:\n  3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n  e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e ^ 3 * 3 * r ^ 3 * q ^ 3 =\n  3 * p ^ 3 * r\\<^sup>2 * s - e * 3 * p\\<^sup>2 * q * r ^ 3 +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  27 * p * q\\<^sup>2 * s ^ 3 -\n  e * 27 * q ^ 3 * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e * 3 * r ^ 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. a * d - e * b * c =\n    3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3", "with pq rs"], ["proof (chain)\npicking this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and> b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n  c = r ^ 3 - 9 * r * s\\<^sup>2 \\<and> d = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n  3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n  e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e ^ 3 * 3 * r ^ 3 * q ^ 3 =\n  3 * p ^ 3 * r\\<^sup>2 * s - e * 3 * p\\<^sup>2 * q * r ^ 3 +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  27 * p * q\\<^sup>2 * s ^ 3 -\n  e * 27 * q ^ 3 * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e * 3 * r ^ 3 * q ^ 3", "have \"\\<dots> = a*d-e*b*c\""], ["proof (prove)\nusing this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and> b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n  c = r ^ 3 - 9 * r * s\\<^sup>2 \\<and> d = 3 * r\\<^sup>2 * s - 3 * s ^ 3\n  3 * (p * p\\<^sup>2) * r\\<^sup>2 * s -\n  e * 3 * p\\<^sup>2 * q * (r * r\\<^sup>2) +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e\\<^sup>2 * 27 * p * q\\<^sup>2 * (s * s\\<^sup>2) -\n  e * e\\<^sup>2 * 27 * (q * q\\<^sup>2) * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  e\\<^sup>2 * 9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e ^ 3 * 3 * r ^ 3 * q ^ 3 =\n  3 * p ^ 3 * r\\<^sup>2 * s - e * 3 * p\\<^sup>2 * q * r ^ 3 +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  27 * p * q\\<^sup>2 * s ^ 3 -\n  e * 27 * q ^ 3 * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e * 3 * r ^ 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. 3 * p ^ 3 * r\\<^sup>2 * s - e * 3 * p\\<^sup>2 * q * r ^ 3 +\n    e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n    18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n    27 * p * q\\<^sup>2 * s ^ 3 -\n    e * 27 * q ^ 3 * r * s\\<^sup>2 -\n    3 * p ^ 3 * s ^ 3 +\n    e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n    9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n    e * 3 * r ^ 3 * q ^ 3 =\n    a * d - e * b * c", "by (simp only: left_diff_distrib right_diff_distrib ac_simps)"], ["proof (state)\nthis:\n  3 * p ^ 3 * r\\<^sup>2 * s - e * 3 * p\\<^sup>2 * q * r ^ 3 +\n  e * 18 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  18 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  27 * p * q\\<^sup>2 * s ^ 3 -\n  e * 27 * q ^ 3 * r * s\\<^sup>2 -\n  3 * p ^ 3 * s ^ 3 +\n  e * 9 * p\\<^sup>2 * q * r * s\\<^sup>2 -\n  9 * p * q\\<^sup>2 * r\\<^sup>2 * s +\n  e * 3 * r ^ 3 * q ^ 3 =\n  a * d - e * b * c\n\ngoal (1 subgoal):\n 1. a * d - e * b * c =\n    3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3", "finally"], ["proof (chain)\npicking this:\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3 =\n  a * d - e * b * c", "show ?thesis"], ["proof (prove)\nusing this:\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3 =\n  a * d - e * b * c\n\ngoal (1 subgoal):\n 1. a * d - e * b * c =\n    3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n    3 * (p * s - e * r * q) ^ 3", "by auto"], ["proof (state)\nthis:\n  a * d - e * b * c =\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a * d - e * b * c =\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_cube_form a b; is_cube_form c d; \\<bar>e\\<bar> = 1\\<rbrakk>\n    \\<Longrightarrow> is_cube_form (a * c + e * 3 * b * d)\n                       (a * d - e * b * c)", "ultimately"], ["proof (chain)\npicking this:\n  a * c + e * 3 * b * d =\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2\n  a * d - e * b * c =\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3", "show ?thesis"], ["proof (prove)\nusing this:\n  a * c + e * 3 * b * d =\n  (p * r + e * 3 * q * s) ^ 3 -\n  9 * (p * r + e * 3 * q * s) * (p * s - e * r * q)\\<^sup>2\n  a * d - e * b * c =\n  3 * (p * r + e * 3 * q * s)\\<^sup>2 * (p * s - e * r * q) -\n  3 * (p * s - e * r * q) ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form (a * c + e * 3 * b * d) (a * d - e * b * c)", "by (auto simp only: is_cube_form_def)"], ["proof (state)\nthis:\n  is_cube_form (a * c + e * 3 * b * d) (a * d - e * b * c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qf3_cube_primelist_impl_cube_form: \"\\<lbrakk> (\\<forall>p\\<in>set_mset ps. prime p); odd (int (\\<Prod>i\\<in>#ps. i)) \\<rbrakk> \\<Longrightarrow>\n  (!! a b. coprime a b \\<Longrightarrow> a^2 + 3*b^2 = (int(\\<Prod>i\\<in>#ps. i))^3 \\<Longrightarrow> is_cube_form a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p\\<in>#ps. prime p;\n     odd (int (\\<Prod>i\\<in>#ps. i))\\<rbrakk>\n    \\<Longrightarrow> (\\<And>a b.\n                          \\<lbrakk>coprime a b;\n                           a\\<^sup>2 + 3 * b\\<^sup>2 =\n                           int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                          \\<Longrightarrow> is_cube_form a b)", "proof (induct ps)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Multiset.Ball {#} prime; odd (int (\\<Prod>i\\<in>#{#}. i));\n        coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b\n 2. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "case empty"], ["proof (state)\nthis:\n  \\<forall>a\\<in>#{#}. prime a\n  odd (int (\\<Prod>i\\<in>#{#}. i))\n  coprime a b\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Multiset.Ball {#} prime; odd (int (\\<Prod>i\\<in>#{#}. i));\n        coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b\n 2. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "hence ab1: \"a^2 + 3*b^2 = 1\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>#{#}. prime a\n  odd (int (\\<Prod>i\\<in>#{#}. i))\n  coprime a b\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + 3 * b\\<^sup>2 = 1", "by simp"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 1\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Multiset.Ball {#} prime; odd (int (\\<Prod>i\\<in>#{#}. i));\n        coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b\n 2. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "have b0: \"b=0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "assume \"b\\<noteq>0\""], ["proof (state)\nthis:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "hence \"b^2>0\""], ["proof (prove)\nusing this:\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < b\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "hence \"3*b^2 > 1\""], ["proof (prove)\nusing this:\n  0 < b\\<^sup>2\n\ngoal (1 subgoal):\n 1. 1 < 3 * b\\<^sup>2", "by arith"], ["proof (state)\nthis:\n  1 < 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "with ab1"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 1\n  1 < 3 * b\\<^sup>2", "have \"a^2 < 0\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 1\n  1 < 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 < 0", "by arith"], ["proof (state)\nthis:\n  a\\<^sup>2 < 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 < 0\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "have \"a^2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> a\\<^sup>2", "by (rule zero_le_power2)"], ["proof (state)\nthis:\n  0 \\<le> a\\<^sup>2\n\ngoal (1 subgoal):\n 1. b \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  a\\<^sup>2 < 0\n  0 \\<le> a\\<^sup>2", "show False"], ["proof (prove)\nusing this:\n  a\\<^sup>2 < 0\n  0 \\<le> a\\<^sup>2\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b = 0\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Multiset.Ball {#} prime; odd (int (\\<Prod>i\\<in>#{#}. i));\n        coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b\n 2. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "with ab1"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 1\n  b = 0", "have a1: \"(a=1 \\<or> a=-1)\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = 1\n  b = 0\n\ngoal (1 subgoal):\n 1. a = 1 \\<or> a = - 1", "by (auto simp add: power2_eq_square zmult_eq_1_iff)"], ["proof (state)\nthis:\n  a = 1 \\<or> a = - 1\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Multiset.Ball {#} prime; odd (int (\\<Prod>i\\<in>#{#}. i));\n        coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b\n 2. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "then"], ["proof (chain)\npicking this:\n  a = 1 \\<or> a = - 1", "obtain p and q where \"p=a\" and \"q=(0::int)\""], ["proof (prove)\nusing this:\n  a = 1 \\<or> a = - 1\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        \\<lbrakk>p = a; q = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  p = a\n  q = 0\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Multiset.Ball {#} prime; odd (int (\\<Prod>i\\<in>#{#}. i));\n        coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b\n 2. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "with a1 and b0"], ["proof (chain)\npicking this:\n  a = 1 \\<or> a = - 1\n  b = 0\n  p = a\n  q = 0", "have \"a = p^3 - 9*p*q^2 \\<and> b = 3*p^2*q - 3*q^3\""], ["proof (prove)\nusing this:\n  a = 1 \\<or> a = - 1\n  b = 0\n  p = a\n  q = 0\n\ngoal (1 subgoal):\n 1. a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and> b = 3 * p\\<^sup>2 * q - 3 * q ^ 3", "by auto"], ["proof (state)\nthis:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and> b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>Multiset.Ball {#} prime; odd (int (\\<Prod>i\\<in>#{#}. i));\n        coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#{#}. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b\n 2. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "thus \"is_cube_form a b\""], ["proof (prove)\nusing this:\n  a = p ^ 3 - 9 * p * q\\<^sup>2 \\<and> b = 3 * p\\<^sup>2 * q - 3 * q ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "by (auto simp only: is_cube_form_def)"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "case (add p ps)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>a\\<in>#ps. prime a; odd (int (\\<Prod>i\\<in>#ps. i));\n   coprime ?a ?b;\n   ?a\\<^sup>2 + 3 * ?b\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n  \\<Longrightarrow> is_cube_form ?a ?b\n  \\<forall>a\\<in>#add_mset p ps. prime a\n  odd (int (\\<Prod>i\\<in>#add_mset p ps. i))\n  coprime a b\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#add_mset p ps. i) ^ 3\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "hence ass: \"coprime a b \\<and> odd (int(\\<Prod>i\\<in>#ps + {#p#}. i))\n    \\<and> a^2+3*b^2 = int(\\<Prod>i\\<in>#ps + {#p#}. i)^3 \\<and>  (\\<forall>a\\<in>set_mset ps. prime a) \\<and> prime (int p)\"\n    and IH: \"!! u v. coprime u v \\<and> u^2+3*v^2 = int(\\<Prod>i\\<in>#ps. i)^3\n    \\<and> odd (int(\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow> is_cube_form u v\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>a\\<in>#ps. prime a; odd (int (\\<Prod>i\\<in>#ps. i));\n   coprime ?a ?b;\n   ?a\\<^sup>2 + 3 * ?b\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n  \\<Longrightarrow> is_cube_form ?a ?b\n  \\<forall>a\\<in>#add_mset p ps. prime a\n  odd (int (\\<Prod>i\\<in>#add_mset p ps. i))\n  coprime a b\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#add_mset p ps. i) ^ 3\n\ngoal (1 subgoal):\n 1. coprime a b \\<and>\n    odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n    a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n    (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p) &&&\n    (\\<And>u v.\n        coprime u v \\<and>\n        u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3 \\<and>\n        odd (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow>\n        is_cube_form u v)", "by auto"], ["proof (state)\nthis:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  coprime ?u ?v \\<and>\n  ?u\\<^sup>2 + 3 * ?v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3 \\<and>\n  odd (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow>\n  is_cube_form ?u ?v\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "then"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  coprime ?u ?v \\<and>\n  ?u\\<^sup>2 + 3 * ?v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3 \\<and>\n  odd (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow>\n  is_cube_form ?u ?v", "have \"coprime a b\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  coprime ?u ?v \\<and>\n  ?u\\<^sup>2 + 3 * ?v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3 \\<and>\n  odd (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow>\n  is_cube_form ?u ?v\n\ngoal (1 subgoal):\n 1. coprime a b", "by simp"], ["proof (state)\nthis:\n  coprime a b\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "let ?w = \"int (\\<Prod>i\\<in>#ps + {#p#}. i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "let ?X = \"int (\\<Prod>i\\<in>#ps. i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "let ?p = \"int p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "have ge3_1: \"(3::int) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 3", "by auto"], ["proof (state)\nthis:\n  1 \\<le> 3\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "have pw: \"?w = ?p * ?X \\<and> odd ?p \\<and> odd ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n    int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n    odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))", "proof (safe)"], ["proof (state)\ngoal (3 subgoals):\n 1. int (\\<Prod>i\\<in>#ps + {#p#}. i) = int p * int (\\<Prod>i\\<in>#ps. i)\n 2. even (int p) \\<Longrightarrow> False\n 3. even (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow> False", "have \"(\\<Prod>i\\<in>#ps + {#p#}. i) = p * (\\<Prod>i\\<in>#ps. i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i\\<in>#ps + {#p#}. i) = p * (\\<Prod>i\\<in>#ps. i)", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>i\\<in>#ps + {#p#}. i) = p * (\\<Prod>i\\<in>#ps. i)\n\ngoal (3 subgoals):\n 1. int (\\<Prod>i\\<in>#ps + {#p#}. i) = int p * int (\\<Prod>i\\<in>#ps. i)\n 2. even (int p) \\<Longrightarrow> False\n 3. even (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow> False", "thus wpx: \"?w = ?p * ?X\""], ["proof (prove)\nusing this:\n  (\\<Prod>i\\<in>#ps + {#p#}. i) = p * (\\<Prod>i\\<in>#ps. i)\n\ngoal (1 subgoal):\n 1. int (\\<Prod>i\\<in>#ps + {#p#}. i) = int p * int (\\<Prod>i\\<in>#ps. i)", "by (auto simp only: of_nat_mult [symmetric])"], ["proof (state)\nthis:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = int p * int (\\<Prod>i\\<in>#ps. i)\n\ngoal (2 subgoals):\n 1. even (int p) \\<Longrightarrow> False\n 2. even (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = int p * int (\\<Prod>i\\<in>#ps. i)", "show \"even ?p \\<Longrightarrow> False\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = int p * int (\\<Prod>i\\<in>#ps. i)\n\ngoal (1 subgoal):\n 1. even (int p) \\<Longrightarrow> False", "by auto"], ["proof (state)\nthis:\n  even (int p) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. even (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow> False", "from wpx"], ["proof (chain)\npicking this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = int p * int (\\<Prod>i\\<in>#ps. i)", "have \"?w = ?X*?p\""], ["proof (prove)\nusing this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = int p * int (\\<Prod>i\\<in>#ps. i)\n\ngoal (1 subgoal):\n 1. int (\\<Prod>i\\<in>#ps + {#p#}. i) = int (\\<Prod>i\\<in>#ps. i) * int p", "by simp"], ["proof (state)\nthis:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = int (\\<Prod>i\\<in>#ps. i) * int p\n\ngoal (1 subgoal):\n 1. even (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = int (\\<Prod>i\\<in>#ps. i) * int p", "show \"even ?X \\<Longrightarrow> False\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = int (\\<Prod>i\\<in>#ps. i) * int p\n\ngoal (1 subgoal):\n 1. even (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow> False", "by simp"], ["proof (state)\nthis:\n  even (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow> False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "have \"is_qfN ?p 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "from ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)", "have \"a^2+3*b^2 = (?p*?X)^3\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + 3 * b\\<^sup>2 = (int p * int (\\<Prod>i\\<in>#ps. i)) ^ 3", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = (int p * int (\\<Prod>i\\<in>#ps. i)) ^ 3\n\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "hence \"?p dvd a^2+3*b^2\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 = (int p * int (\\<Prod>i\\<in>#ps. i)) ^ 3\n\ngoal (1 subgoal):\n 1. int p dvd a\\<^sup>2 + 3 * b\\<^sup>2", "by (simp add: eval_nat_numeral field_simps)"], ["proof (state)\nthis:\n  int p dvd a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "moreover"], ["proof (state)\nthis:\n  int p dvd a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "from ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)", "have \"prime ?p\" and \"coprime a b\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n\ngoal (1 subgoal):\n 1. prime (int p) &&& coprime a b", "by simp_all"], ["proof (state)\nthis:\n  prime (int p)\n  coprime a b\n\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "moreover"], ["proof (state)\nthis:\n  prime (int p)\n  coprime a b\n\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "from pw"], ["proof (chain)\npicking this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))", "have \"odd ?p\""], ["proof (prove)\nusing this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n\ngoal (1 subgoal):\n 1. odd (int p)", "by simp"], ["proof (state)\nthis:\n  odd (int p)\n\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "ultimately"], ["proof (chain)\npicking this:\n  int p dvd a\\<^sup>2 + 3 * b\\<^sup>2\n  prime (int p)\n  coprime a b\n  odd (int p)", "show ?thesis"], ["proof (prove)\nusing this:\n  int p dvd a\\<^sup>2 + 3 * b\\<^sup>2\n  prime (int p)\n  coprime a b\n  odd (int p)\n\ngoal (1 subgoal):\n 1. is_qfN (int p) 3", "by (simp add: qf3_oddprimedivisor)"], ["proof (state)\nthis:\n  is_qfN (int p) 3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_qfN (int p) 3\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "then"], ["proof (chain)\npicking this:\n  is_qfN (int p) 3", "obtain \\<alpha> \\<beta> where alphabeta: \"?p = \\<alpha>^2 + 3*\\<beta>^2\""], ["proof (prove)\nusing this:\n  is_qfN (int p) 3\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha> \\<beta>.\n        int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: is_qfN_def)"], ["proof (state)\nthis:\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "have \"\\<alpha> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<noteq> 0", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "assume \"\\<alpha> = 0\""], ["proof (state)\nthis:\n  \\<alpha> = 0\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "with alphabeta"], ["proof (chain)\npicking this:\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  \\<alpha> = 0", "have \"3 dvd ?p\""], ["proof (prove)\nusing this:\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  \\<alpha> = 0\n\ngoal (1 subgoal):\n 1. 3 dvd int p", "by auto"], ["proof (state)\nthis:\n  3 dvd int p\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "with pw"], ["proof (chain)\npicking this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  3 dvd int p", "have w3: \"3 dvd ?w\""], ["proof (prove)\nusing this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  3 dvd int p\n\ngoal (1 subgoal):\n 1. 3 dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)", "by (simp only: dvd_mult2)"], ["proof (state)\nthis:\n  3 dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  3 dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)", "obtain v where \"?w = 3*v\""], ["proof (prove)\nusing this:\n  3 dvd int (\\<Prod>i\\<in>#ps + {#p#}. i)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        int (\\<Prod>i\\<in>#ps + {#p#}. i) = 3 * v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = 3 * v\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = 3 * v", "have vab: \"27*v^3 = a^2 + 3*b^2\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) = 3 * v\n\ngoal (1 subgoal):\n 1. 27 * v ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  27 * v ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "hence \"a^2 = 3*(9*v^3 - b^2)\""], ["proof (prove)\nusing this:\n  27 * v ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 = 3 * (9 * v ^ 3 - b\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  a\\<^sup>2 = 3 * (9 * v ^ 3 - b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "hence \"3 dvd a^2\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 = 3 * (9 * v ^ 3 - b\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 3 dvd a\\<^sup>2", "by (unfold dvd_def, blast)"], ["proof (state)\nthis:\n  3 dvd a\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  3 dvd a\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "have \"prime (3::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 3", "by simp"], ["proof (state)\nthis:\n  prime 3\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  3 dvd a\\<^sup>2\n  prime 3", "have a3: \"3 dvd a\""], ["proof (prove)\nusing this:\n  3 dvd a\\<^sup>2\n  prime 3\n\ngoal (1 subgoal):\n 1. 3 dvd a", "using prime_dvd_power_int[of \"3::int\" a 2]"], ["proof (prove)\nusing this:\n  3 dvd a\\<^sup>2\n  prime 3\n  \\<lbrakk>prime 3; 3 dvd a\\<^sup>2\\<rbrakk> \\<Longrightarrow> 3 dvd a\n\ngoal (1 subgoal):\n 1. 3 dvd a", "by fastforce"], ["proof (state)\nthis:\n  3 dvd a\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  3 dvd a", "obtain c where c: \"a = 3*c\""], ["proof (prove)\nusing this:\n  3 dvd a\n\ngoal (1 subgoal):\n 1. (\\<And>c. a = 3 * c \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  a = 3 * c\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "with vab"], ["proof (chain)\npicking this:\n  27 * v ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n  a = 3 * c", "have \"27*v^3 = 9*c^2 + 3*b^2\""], ["proof (prove)\nusing this:\n  27 * v ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n  a = 3 * c\n\ngoal (1 subgoal):\n 1. 27 * v ^ 3 = 9 * c\\<^sup>2 + 3 * b\\<^sup>2", "by (simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  27 * v ^ 3 = 9 * c\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "hence \"b^2 = 3*(3*v^3 - c^2)\""], ["proof (prove)\nusing this:\n  27 * v ^ 3 = 9 * c\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 = 3 * (3 * v ^ 3 - c\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  b\\<^sup>2 = 3 * (3 * v ^ 3 - c\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "hence \"3 dvd b^2\""], ["proof (prove)\nusing this:\n  b\\<^sup>2 = 3 * (3 * v ^ 3 - c\\<^sup>2)\n\ngoal (1 subgoal):\n 1. 3 dvd b\\<^sup>2", "by (unfold dvd_def, blast)"], ["proof (state)\nthis:\n  3 dvd b\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  3 dvd b\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "have \"prime (3::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime 3", "by simp"], ["proof (state)\nthis:\n  prime 3\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  3 dvd b\\<^sup>2\n  prime 3", "have \"3 dvd b\""], ["proof (prove)\nusing this:\n  3 dvd b\\<^sup>2\n  prime 3\n\ngoal (1 subgoal):\n 1. 3 dvd b", "using prime_dvd_power_int[of \"3::int\" b 2]"], ["proof (prove)\nusing this:\n  3 dvd b\\<^sup>2\n  prime 3\n  \\<lbrakk>prime 3; 3 dvd b\\<^sup>2\\<rbrakk> \\<Longrightarrow> 3 dvd b\n\ngoal (1 subgoal):\n 1. 3 dvd b", "by fastforce"], ["proof (state)\nthis:\n  3 dvd b\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "with a3"], ["proof (chain)\npicking this:\n  3 dvd a\n  3 dvd b", "have \"3 dvd gcd a b\""], ["proof (prove)\nusing this:\n  3 dvd a\n  3 dvd b\n\ngoal (1 subgoal):\n 1. 3 dvd gcd a b", "by simp"], ["proof (state)\nthis:\n  3 dvd gcd a b\n\ngoal (1 subgoal):\n 1. \\<alpha> = 0 \\<Longrightarrow> False", "with ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  3 dvd gcd a b", "show False"], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  3 dvd gcd a b\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<alpha> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "moreover"], ["proof (state)\nthis:\n  \\<alpha> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "from alphabeta pw ass"], ["proof (chain)\npicking this:\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)", "have\n    \"prime (\\<alpha>^2 + 3*\\<beta>^2) \\<and> odd (\\<alpha>^2+3*\\<beta>^2) \\<and> (3::int) \\<ge> 1\""], ["proof (prove)\nusing this:\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n\ngoal (1 subgoal):\n 1. prime (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) \\<and>\n    odd (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) \\<and> 1 \\<le> 3", "by auto"], ["proof (state)\nthis:\n  prime (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) \\<and>\n  odd (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) \\<and> 1 \\<le> 3\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "ultimately"], ["proof (chain)\npicking this:\n  \\<alpha> \\<noteq> 0\n  prime (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) \\<and>\n  odd (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) \\<and> 1 \\<le> 3", "obtain c d where cdp:\n    \"(\\<alpha>^2+3*\\<beta>^2)^3 = c^2+3*d^2 \\<and> coprime c (3*d)\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<noteq> 0\n  prime (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) \\<and>\n  odd (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) \\<and> 1 \\<le> 3\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) ^ 3 =\n        c\\<^sup>2 + 3 * d\\<^sup>2 \\<and>\n        coprime c (3 * d) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: qfN_oddprime_cube)"], ["proof (state)\nthis:\n  (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) ^ 3 =\n  c\\<^sup>2 + 3 * d\\<^sup>2 \\<and>\n  coprime c (3 * d)\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "with ass pw alphabeta"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) ^ 3 =\n  c\\<^sup>2 + 3 * d\\<^sup>2 \\<and>\n  coprime c (3 * d)", "have \"\\<exists> u v. a^2+3*b^2 = (u^2 + 3*v^2)*(c^2+3*d^2)\n    \\<and> coprime u v \\<and> (\\<exists> e. a = c*u+e*3*d*v \\<and> b = c*v-e*d*u \\<and> \\<bar>e\\<bar> = 1)\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) ^ 3 =\n  c\\<^sup>2 + 3 * d\\<^sup>2 \\<and>\n  coprime c (3 * d)\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       a\\<^sup>2 + 3 * b\\<^sup>2 =\n       (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n       coprime u v \\<and>\n       (\\<exists>e.\n           a = c * u + e * 3 * d * v \\<and>\n           b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1)", "by (rule_tac A=\"?w\" and n=\"3\" in qfN_power_div_prime, auto)"], ["proof (state)\nthis:\n  \\<exists>u v.\n     a\\<^sup>2 + 3 * b\\<^sup>2 =\n     (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n     coprime u v \\<and>\n     (\\<exists>e.\n         a = c * u + e * 3 * d * v \\<and>\n         b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1)\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "then"], ["proof (chain)\npicking this:\n  \\<exists>u v.\n     a\\<^sup>2 + 3 * b\\<^sup>2 =\n     (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n     coprime u v \\<and>\n     (\\<exists>e.\n         a = c * u + e * 3 * d * v \\<and>\n         b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1)", "obtain u v e where uve: \"a^2+3*b^2 = (u^2+3*v^2)*(c^2+3*d^2)\n    \\<and> coprime u v \\<and> a = c*u+e*3*d*v \\<and> b = c*v-e*d*u \\<and> \\<bar>e\\<bar> = 1\""], ["proof (prove)\nusing this:\n  \\<exists>u v.\n     a\\<^sup>2 + 3 * b\\<^sup>2 =\n     (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n     coprime u v \\<and>\n     (\\<exists>e.\n         a = c * u + e * 3 * d * v \\<and>\n         b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1)\n\ngoal (1 subgoal):\n 1. (\\<And>u v e.\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n        coprime u v \\<and>\n        a = c * u + e * 3 * d * v \\<and>\n        b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "moreover"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "have \"is_cube_form u v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_cube_form u v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_cube_form u v", "have uvX: \"u^2+3*v^2 = ?X^3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "from ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)", "have p0: \"?p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n\ngoal (1 subgoal):\n 1. int p \\<noteq> 0", "by (simp add: prime_int_iff)"], ["proof (state)\nthis:\n  int p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "from pw"], ["proof (chain)\npicking this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))", "have \"?p^3*?X^3 = ?w^3\""], ["proof (prove)\nusing this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n\ngoal (1 subgoal):\n 1. int p ^ 3 * int (\\<Prod>i\\<in>#ps. i) ^ 3 =\n    int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3", "by (simp add: power_mult_distrib)"], ["proof (state)\nthis:\n  int p ^ 3 * int (\\<Prod>i\\<in>#ps. i) ^ 3 =\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "also"], ["proof (state)\nthis:\n  int p ^ 3 * int (\\<Prod>i\\<in>#ps. i) ^ 3 =\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "with ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int p ^ 3 * int (\\<Prod>i\\<in>#ps. i) ^ 3 =\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3", "have \"\\<dots> = a^2+3*b^2\""], ["proof (prove)\nusing this:\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int p ^ 3 * int (\\<Prod>i\\<in>#ps. i) ^ 3 =\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3\n\ngoal (1 subgoal):\n 1. int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "also"], ["proof (state)\nthis:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "with uve"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2", "have \"\\<dots> = (u^2+3*v^2)*(c^2+3*d^2)\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 = a\\<^sup>2 + 3 * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. a\\<^sup>2 + 3 * b\\<^sup>2 =\n    (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "also"], ["proof (state)\nthis:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "with cdp alphabeta"], ["proof (chain)\npicking this:\n  (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) ^ 3 =\n  c\\<^sup>2 + 3 * d\\<^sup>2 \\<and>\n  coprime c (3 * d)\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2)", "have \"\\<dots> = ?p^3 * (u^2+3*v^2)\""], ["proof (prove)\nusing this:\n  (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) ^ 3 =\n  c\\<^sup>2 + 3 * d\\<^sup>2 \\<and>\n  coprime c (3 * d)\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) =\n    int p ^ 3 * (u\\<^sup>2 + 3 * v\\<^sup>2)", "by (simp only: ac_simps)"], ["proof (state)\nthis:\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) =\n  int p ^ 3 * (u\\<^sup>2 + 3 * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "finally"], ["proof (chain)\npicking this:\n  int p ^ 3 * int (\\<Prod>i\\<in>#ps. i) ^ 3 =\n  int p ^ 3 * (u\\<^sup>2 + 3 * v\\<^sup>2)", "have \"?p^3*(u^2+3*v^2-?X^3) = 0\""], ["proof (prove)\nusing this:\n  int p ^ 3 * int (\\<Prod>i\\<in>#ps. i) ^ 3 =\n  int p ^ 3 * (u\\<^sup>2 + 3 * v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. int p ^ 3 *\n    (u\\<^sup>2 + 3 * v\\<^sup>2 - int (\\<Prod>i\\<in>#ps. i) ^ 3) =\n    0", "by auto"], ["proof (state)\nthis:\n  int p ^ 3 * (u\\<^sup>2 + 3 * v\\<^sup>2 - int (\\<Prod>i\\<in>#ps. i) ^ 3) =\n  0\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "with p0"], ["proof (chain)\npicking this:\n  int p \\<noteq> 0\n  int p ^ 3 * (u\\<^sup>2 + 3 * v\\<^sup>2 - int (\\<Prod>i\\<in>#ps. i) ^ 3) =\n  0", "show ?thesis"], ["proof (prove)\nusing this:\n  int p \\<noteq> 0\n  int p ^ 3 * (u\\<^sup>2 + 3 * v\\<^sup>2 - int (\\<Prod>i\\<in>#ps. i) ^ 3) =\n  0\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "by auto"], ["proof (state)\nthis:\n  u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form u v", "with pw IH uve"], ["proof (chain)\npicking this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  coprime ?u ?v \\<and>\n  ?u\\<^sup>2 + 3 * ?v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3 \\<and>\n  odd (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow>\n  is_cube_form ?u ?v\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n  u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3", "show ?thesis"], ["proof (prove)\nusing this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  coprime ?u ?v \\<and>\n  ?u\\<^sup>2 + 3 * ?v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3 \\<and>\n  odd (int (\\<Prod>i\\<in>#ps. i)) \\<Longrightarrow>\n  is_cube_form ?u ?v\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n  u\\<^sup>2 + 3 * v\\<^sup>2 = int (\\<Prod>i\\<in>#ps. i) ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form u v", "by simp"], ["proof (state)\nthis:\n  is_cube_form u v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_cube_form u v\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "moreover"], ["proof (state)\nthis:\n  is_cube_form u v\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "have \"is_cube_form c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_cube_form c d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_cube_form c d", "have \"coprime c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime c d", "proof (rule coprimeI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>ca dvd c; ca dvd d\\<rbrakk> \\<Longrightarrow> is_unit ca", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>ca dvd c; ca dvd d\\<rbrakk> \\<Longrightarrow> is_unit ca", "assume \"f dvd c\" and \"f dvd d\""], ["proof (state)\nthis:\n  f dvd c\n  f dvd d\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>ca dvd c; ca dvd d\\<rbrakk> \\<Longrightarrow> is_unit ca", "then"], ["proof (chain)\npicking this:\n  f dvd c\n  f dvd d", "have \"f dvd c*u + d*(e*3*v) \\<and> f dvd c*v-d*(e*u)\""], ["proof (prove)\nusing this:\n  f dvd c\n  f dvd d\n\ngoal (1 subgoal):\n 1. f dvd c * u + d * (e * 3 * v) \\<and> f dvd c * v - d * (e * u)", "by simp"], ["proof (state)\nthis:\n  f dvd c * u + d * (e * 3 * v) \\<and> f dvd c * v - d * (e * u)\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>ca dvd c; ca dvd d\\<rbrakk> \\<Longrightarrow> is_unit ca", "with uve"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n  f dvd c * u + d * (e * 3 * v) \\<and> f dvd c * v - d * (e * u)", "have \"f dvd a\" and \"f dvd b\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n  f dvd c * u + d * (e * 3 * v) \\<and> f dvd c * v - d * (e * u)\n\ngoal (1 subgoal):\n 1. f dvd a &&& f dvd b", "by (auto simp only: ac_simps)"], ["proof (state)\nthis:\n  f dvd a\n  f dvd b\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>ca dvd c; ca dvd d\\<rbrakk> \\<Longrightarrow> is_unit ca", "with \\<open>coprime a b\\<close>"], ["proof (chain)\npicking this:\n  coprime a b\n  f dvd a\n  f dvd b", "show \"is_unit f\""], ["proof (prove)\nusing this:\n  coprime a b\n  f dvd a\n  f dvd b\n\ngoal (1 subgoal):\n 1. is_unit f", "by (rule coprime_common_divisor)"], ["proof (state)\nthis:\n  is_unit f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime c d\n\ngoal (1 subgoal):\n 1. is_cube_form c d", "with pw cdp ass alphabeta"], ["proof (chain)\npicking this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) ^ 3 =\n  c\\<^sup>2 + 3 * d\\<^sup>2 \\<and>\n  coprime c (3 * d)\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  coprime c d", "show ?thesis"], ["proof (prove)\nusing this:\n  int (\\<Prod>i\\<in>#ps + {#p#}. i) =\n  int p * int (\\<Prod>i\\<in>#ps. i) \\<and>\n  odd (int p) \\<and> odd (int (\\<Prod>i\\<in>#ps. i))\n  (\\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2) ^ 3 =\n  c\\<^sup>2 + 3 * d\\<^sup>2 \\<and>\n  coprime c (3 * d)\n  coprime a b \\<and>\n  odd (int (\\<Prod>i\\<in>#ps + {#p#}. i)) \\<and>\n  a\\<^sup>2 + 3 * b\\<^sup>2 = int (\\<Prod>i\\<in>#ps + {#p#}. i) ^ 3 \\<and>\n  (\\<forall>a\\<in>#ps. prime a) \\<and> prime (int p)\n  int p = \\<alpha>\\<^sup>2 + 3 * \\<beta>\\<^sup>2\n  coprime c d\n\ngoal (1 subgoal):\n 1. is_cube_form c d", "by (rule_tac P=\"?p\" in qf3_cube_prime_impl_cube_form, auto)"], ["proof (state)\nthis:\n  is_cube_form c d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_cube_form c d\n\ngoal (1 subgoal):\n 1. \\<And>x ps a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>Multiset.Ball ps prime;\n                    odd (int (\\<Prod>i\\<in>#ps. i)); coprime a b;\n                    a\\<^sup>2 + 3 * b\\<^sup>2 =\n                    int (\\<Prod>i\\<in>#ps. i) ^ 3\\<rbrakk>\n                   \\<Longrightarrow> is_cube_form a b;\n        Multiset.Ball (add_mset x ps) prime;\n        odd (int (\\<Prod>i\\<in>#add_mset x ps. i)); coprime a b;\n        a\\<^sup>2 + 3 * b\\<^sup>2 =\n        int (\\<Prod>i\\<in>#add_mset x ps. i) ^ 3\\<rbrakk>\n       \\<Longrightarrow> is_cube_form a b", "ultimately"], ["proof (chain)\npicking this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n  is_cube_form u v\n  is_cube_form c d", "show \"is_cube_form a b\""], ["proof (prove)\nusing this:\n  a\\<^sup>2 + 3 * b\\<^sup>2 =\n  (u\\<^sup>2 + 3 * v\\<^sup>2) * (c\\<^sup>2 + 3 * d\\<^sup>2) \\<and>\n  coprime u v \\<and>\n  a = c * u + e * 3 * d * v \\<and>\n  b = c * v - e * d * u \\<and> \\<bar>e\\<bar> = 1\n  is_cube_form u v\n  is_cube_form c d\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "by (simp only: cube_form_mult)"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma qf3_cube_impl_cube_form:\n  assumes ass: \"coprime a b \\<and> a^2 + 3*b^2 = w^3 \\<and> odd w\"\n  shows \"is_cube_form a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_cube_form a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_cube_form a b", "have \"0 \\<le> w^3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> w ^ 3", "using ass not_sum_power2_lt_zero[of a b] zero_le_power2[of b]"], ["proof (prove)\nusing this:\n  coprime a b \\<and> a\\<^sup>2 + 3 * b\\<^sup>2 = w ^ 3 \\<and> odd w\n  \\<not> a\\<^sup>2 + b\\<^sup>2 < 0\n  0 \\<le> b\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> w ^ 3", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> w ^ 3\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "hence \"0 < w\""], ["proof (prove)\nusing this:\n  0 \\<le> w ^ 3\n\ngoal (1 subgoal):\n 1. 0 < w", "using ass"], ["proof (prove)\nusing this:\n  0 \\<le> w ^ 3\n  coprime a b \\<and> a\\<^sup>2 + 3 * b\\<^sup>2 = w ^ 3 \\<and> odd w\n\ngoal (1 subgoal):\n 1. 0 < w", "by auto arith"], ["proof (state)\nthis:\n  0 < w\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "define M where \"M = prime_factorization (nat w)\""], ["proof (state)\nthis:\n  M = prime_factorization (nat w)\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "from \\<open>w > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < w", "have \"(\\<forall>p\\<in>set_mset M. prime p) \\<and> w = int (\\<Prod>i\\<in>#M. i)\""], ["proof (prove)\nusing this:\n  0 < w\n\ngoal (1 subgoal):\n 1. (\\<forall>p\\<in>#M. prime p) \\<and> w = int (\\<Prod>i\\<in>#M. i)", "by (auto simp: M_def prod_mset_prime_factorization_int)"], ["proof (state)\nthis:\n  (\\<forall>p\\<in>#M. prime p) \\<and> w = int (\\<Prod>i\\<in>#M. i)\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "with ass"], ["proof (chain)\npicking this:\n  coprime a b \\<and> a\\<^sup>2 + 3 * b\\<^sup>2 = w ^ 3 \\<and> odd w\n  (\\<forall>p\\<in>#M. prime p) \\<and> w = int (\\<Prod>i\\<in>#M. i)", "show ?thesis"], ["proof (prove)\nusing this:\n  coprime a b \\<and> a\\<^sup>2 + 3 * b\\<^sup>2 = w ^ 3 \\<and> odd w\n  (\\<forall>p\\<in>#M. prime p) \\<and> w = int (\\<Prod>i\\<in>#M. i)\n\ngoal (1 subgoal):\n 1. is_cube_form a b", "by (auto dest: qf3_cube_primelist_impl_cube_form)"], ["proof (state)\nthis:\n  is_cube_form a b\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Existence ($N=3$)\\<close>"], ["", "text \\<open>This part contains the proof that all prime numbers $\\equiv 1 \\bmod 6$ can be written as $x^2 + 3y^2$.\\<close>"], ["", "text \\<open>First show $(\\frac{a}{p})(\\frac{b}{p}) = (\\frac{ab}{p})$, where $p$ is an odd prime.\\<close>"], ["", "lemma Legendre_zmult: \"\\<lbrakk> p > 2; prime p \\<rbrakk>\n  \\<Longrightarrow> (Legendre (a*b) p) = (Legendre a p)*(Legendre b p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "assume p2: \"p > 2\" and prp: \"prime p\""], ["proof (state)\nthis:\n  2 < p\n  prime p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "from prp"], ["proof (chain)\npicking this:\n  prime p", "have prp': \"prime (nat p)\""], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. prime (nat p)", "by simp"], ["proof (state)\nthis:\n  prime (nat p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "let ?p12 = \"nat(((p) - 1) div 2)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "let ?Labp = \"Legendre (a*b) p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "let ?Lap = \"Legendre a p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "let ?Lbp = \"Legendre b p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "have h1: \"((nat p - 1) div 2) = nat ((p - 1) div 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nat p - 1) div 2 = nat ((p - 1) div 2)", "using p2"], ["proof (prove)\nusing this:\n  2 < p\n\ngoal (1 subgoal):\n 1. (nat p - 1) div 2 = nat ((p - 1) div 2)", "by auto"], ["proof (state)\nthis:\n  (nat p - 1) div 2 = nat ((p - 1) div 2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "hence \"[?Labp = (a*b)^?p12] (mod p)\""], ["proof (prove)\nusing this:\n  (nat p - 1) div 2 = nat ((p - 1) div 2)\n\ngoal (1 subgoal):\n 1. [Legendre (a * b) p = (a * b) ^ nat ((p - 1) div 2)] (mod p)", "using prp p2 euler_criterion[of \"nat p\" \"a*b\"]"], ["proof (prove)\nusing this:\n  (nat p - 1) div 2 = nat ((p - 1) div 2)\n  prime p\n  2 < p\n  \\<lbrakk>prime (nat p); 2 < nat p\\<rbrakk>\n  \\<Longrightarrow> [Legendre (a * b)\n                      (int (nat p)) = (a * b) ^\n((nat p - 1) div 2)] (mod int (nat p))\n\ngoal (1 subgoal):\n 1. [Legendre (a * b) p = (a * b) ^ nat ((p - 1) div 2)] (mod p)", "by auto"], ["proof (state)\nthis:\n  [Legendre (a * b) p = (a * b) ^ nat ((p - 1) div 2)] (mod p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "hence \"[a^?p12 * b^?p12 = ?Labp] (mod p)\""], ["proof (prove)\nusing this:\n  [Legendre (a * b) p = (a * b) ^ nat ((p - 1) div 2)] (mod p)\n\ngoal (1 subgoal):\n 1. [a ^ nat ((p - 1) div 2) *\n     b ^ nat ((p - 1) div 2) = Legendre (a * b) p] (mod p)", "by (simp only: power_mult_distrib cong_sym)"], ["proof (state)\nthis:\n  [a ^ nat ((p - 1) div 2) *\n   b ^ nat ((p - 1) div 2) = Legendre (a * b) p] (mod p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "moreover"], ["proof (state)\nthis:\n  [a ^ nat ((p - 1) div 2) *\n   b ^ nat ((p - 1) div 2) = Legendre (a * b) p] (mod p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "have \"[?Lap * ?Lbp = a^?p12*b^?p12] (mod p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [Legendre a p *\n     Legendre b\n      p = a ^ nat ((p - 1) div 2) * b ^ nat ((p - 1) div 2)] (mod p)", "using euler_criterion[of \"nat p\"] p2 prp' h1"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime (nat p); 2 < nat p\\<rbrakk>\n  \\<Longrightarrow> [Legendre ?a\n                      (int (nat p)) = ?a ^\n((nat p - 1) div 2)] (mod int (nat p))\n  2 < p\n  prime (nat p)\n  (nat p - 1) div 2 = nat ((p - 1) div 2)\n\ngoal (1 subgoal):\n 1. [Legendre a p *\n     Legendre b\n      p = a ^ nat ((p - 1) div 2) * b ^ nat ((p - 1) div 2)] (mod p)", "by (simp add: cong_mult)"], ["proof (state)\nthis:\n  [Legendre a p *\n   Legendre b p = a ^ nat ((p - 1) div 2) * b ^ nat ((p - 1) div 2)] (mod p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "ultimately"], ["proof (chain)\npicking this:\n  [a ^ nat ((p - 1) div 2) *\n   b ^ nat ((p - 1) div 2) = Legendre (a * b) p] (mod p)\n  [Legendre a p *\n   Legendre b p = a ^ nat ((p - 1) div 2) * b ^ nat ((p - 1) div 2)] (mod p)", "have \"[?Lap * ?Lbp = ?Labp] (mod p)\""], ["proof (prove)\nusing this:\n  [a ^ nat ((p - 1) div 2) *\n   b ^ nat ((p - 1) div 2) = Legendre (a * b) p] (mod p)\n  [Legendre a p *\n   Legendre b p = a ^ nat ((p - 1) div 2) * b ^ nat ((p - 1) div 2)] (mod p)\n\ngoal (1 subgoal):\n 1. [Legendre a p * Legendre b p = Legendre (a * b) p] (mod p)", "using cong_trans"], ["proof (prove)\nusing this:\n  [a ^ nat ((p - 1) div 2) *\n   b ^ nat ((p - 1) div 2) = Legendre (a * b) p] (mod p)\n  [Legendre a p *\n   Legendre b p = a ^ nat ((p - 1) div 2) * b ^ nat ((p - 1) div 2)] (mod p)\n  \\<lbrakk>[?b = ?c] (mod ?a); [?c = ?d] (mod ?a)\\<rbrakk>\n  \\<Longrightarrow> [?b = ?d] (mod ?a)\n\ngoal (1 subgoal):\n 1. [Legendre a p * Legendre b p = Legendre (a * b) p] (mod p)", "by blast"], ["proof (state)\nthis:\n  [Legendre a p * Legendre b p = Legendre (a * b) p] (mod p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "then"], ["proof (chain)\npicking this:\n  [Legendre a p * Legendre b p = Legendre (a * b) p] (mod p)", "obtain k where k: \"?Labp = (?Lap*?Lbp) + p * k\""], ["proof (prove)\nusing this:\n  [Legendre a p * Legendre b p = Legendre (a * b) p] (mod p)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        Legendre (a * b) p =\n        Legendre a p * Legendre b p + p * k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: cong_iff_lin)"], ["proof (state)\nthis:\n  Legendre (a * b) p = Legendre a p * Legendre b p + p * k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "have \"k=0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "assume \"k \\<noteq> 0\""], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "hence \"\\<bar>k\\<bar> = 1 \\<or> \\<bar>k\\<bar> > 1\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>k\\<bar> = 1 \\<or> 1 < \\<bar>k\\<bar>", "by arith"], ["proof (state)\nthis:\n  \\<bar>k\\<bar> = 1 \\<or> 1 < \\<bar>k\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<bar>k\\<bar> = 1 \\<or> 1 < \\<bar>k\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<bar>k\\<bar> = 1 \\<or> 1 < \\<bar>k\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "assume \"\\<bar>k\\<bar>= 1\""], ["proof (state)\nthis:\n  \\<bar>k\\<bar> = 1\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "with p2"], ["proof (chain)\npicking this:\n  2 < p\n  \\<bar>k\\<bar> = 1", "have \"\\<bar>k\\<bar>*p > 2\""], ["proof (prove)\nusing this:\n  2 < p\n  \\<bar>k\\<bar> = 1\n\ngoal (1 subgoal):\n 1. 2 < \\<bar>k\\<bar> * p", "by auto"], ["proof (state)\nthis:\n  2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<bar>k\\<bar> = 1 \\<Longrightarrow> 2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<bar>k\\<bar> = 1 \\<Longrightarrow> 2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<bar>k\\<bar> = 1 \\<Longrightarrow> 2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "assume k1: \"\\<bar>k\\<bar> > 1\""], ["proof (state)\nthis:\n  1 < \\<bar>k\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "with p2"], ["proof (chain)\npicking this:\n  2 < p\n  1 < \\<bar>k\\<bar>", "have \"\\<bar>k\\<bar>*2 < \\<bar>k\\<bar>*p\""], ["proof (prove)\nusing this:\n  2 < p\n  1 < \\<bar>k\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>k\\<bar> * 2 < \\<bar>k\\<bar> * p", "by (simp only: zmult_zless_mono2)"], ["proof (state)\nthis:\n  \\<bar>k\\<bar> * 2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "with k1"], ["proof (chain)\npicking this:\n  1 < \\<bar>k\\<bar>\n  \\<bar>k\\<bar> * 2 < \\<bar>k\\<bar> * p", "have \"\\<bar>k\\<bar>*p > 2\""], ["proof (prove)\nusing this:\n  1 < \\<bar>k\\<bar>\n  \\<bar>k\\<bar> * 2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. 2 < \\<bar>k\\<bar> * p", "by arith"], ["proof (state)\nthis:\n  2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  1 < \\<bar>k\\<bar> \\<Longrightarrow> 2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<bar>k\\<bar> = 1 \\<or> 1 < \\<bar>k\\<bar>\n  \\<bar>k\\<bar> = 1 \\<Longrightarrow> 2 < \\<bar>k\\<bar> * p\n  1 < \\<bar>k\\<bar> \\<Longrightarrow> 2 < \\<bar>k\\<bar> * p", "have \"\\<bar>k\\<bar>*p > 2\""], ["proof (prove)\nusing this:\n  \\<bar>k\\<bar> = 1 \\<or> 1 < \\<bar>k\\<bar>\n  \\<bar>k\\<bar> = 1 \\<Longrightarrow> 2 < \\<bar>k\\<bar> * p\n  1 < \\<bar>k\\<bar> \\<Longrightarrow> 2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. 2 < \\<bar>k\\<bar> * p", "by auto"], ["proof (state)\nthis:\n  2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  2 < \\<bar>k\\<bar> * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "from p2"], ["proof (chain)\npicking this:\n  2 < p", "have \"\\<bar>p\\<bar> = p\""], ["proof (prove)\nusing this:\n  2 < p\n\ngoal (1 subgoal):\n 1. \\<bar>p\\<bar> = p", "by auto"], ["proof (state)\nthis:\n  \\<bar>p\\<bar> = p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  2 < \\<bar>k\\<bar> * p\n  \\<bar>p\\<bar> = p", "have \"\\<bar>k*p\\<bar> > 2\""], ["proof (prove)\nusing this:\n  2 < \\<bar>k\\<bar> * p\n  \\<bar>p\\<bar> = p\n\ngoal (1 subgoal):\n 1. 2 < \\<bar>k * p\\<bar>", "by (auto simp only: abs_mult)"], ["proof (state)\nthis:\n  2 < \\<bar>k * p\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  2 < \\<bar>k * p\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "from k"], ["proof (chain)\npicking this:\n  Legendre (a * b) p = Legendre a p * Legendre b p + p * k", "have \"?Labp - ?Lap*?Lbp = k*p\""], ["proof (prove)\nusing this:\n  Legendre (a * b) p = Legendre a p * Legendre b p + p * k\n\ngoal (1 subgoal):\n 1. Legendre (a * b) p - Legendre a p * Legendre b p = k * p", "by auto"], ["proof (state)\nthis:\n  Legendre (a * b) p - Legendre a p * Legendre b p = k * p\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  2 < \\<bar>k * p\\<bar>\n  Legendre (a * b) p - Legendre a p * Legendre b p = k * p", "have \"\\<bar>?Labp - ?Lap*?Lbp\\<bar> > 2\""], ["proof (prove)\nusing this:\n  2 < \\<bar>k * p\\<bar>\n  Legendre (a * b) p - Legendre a p * Legendre b p = k * p\n\ngoal (1 subgoal):\n 1. 2 < \\<bar>Legendre (a * b) p - Legendre a p * Legendre b p\\<bar>", "by auto"], ["proof (state)\nthis:\n  2 < \\<bar>Legendre (a * b) p - Legendre a p * Legendre b p\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  2 < \\<bar>Legendre (a * b) p - Legendre a p * Legendre b p\\<bar>\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "have \"?Labp = 1 \\<or> ?Labp = 0 \\<or> ?Labp = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Legendre (a * b) p = 1 \\<or>\n    Legendre (a * b) p = 0 \\<or> Legendre (a * b) p = - 1", "by (simp add: Legendre_def)"], ["proof (state)\nthis:\n  Legendre (a * b) p = 1 \\<or>\n  Legendre (a * b) p = 0 \\<or> Legendre (a * b) p = - 1\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  Legendre (a * b) p = 1 \\<or>\n  Legendre (a * b) p = 0 \\<or> Legendre (a * b) p = - 1\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "have \"?Lap*?Lbp = 1 \\<or> ?Lap*?Lbp = 0 \\<or> ?Lap*?Lbp = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Legendre a p * Legendre b p = 1 \\<or>\n    Legendre a p * Legendre b p = 0 \\<or> Legendre a p * Legendre b p = - 1", "by (auto simp add: Legendre_def)"], ["proof (state)\nthis:\n  Legendre a p * Legendre b p = 1 \\<or>\n  Legendre a p * Legendre b p = 0 \\<or> Legendre a p * Legendre b p = - 1\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  2 < \\<bar>Legendre (a * b) p - Legendre a p * Legendre b p\\<bar>\n  Legendre (a * b) p = 1 \\<or>\n  Legendre (a * b) p = 0 \\<or> Legendre (a * b) p = - 1\n  Legendre a p * Legendre b p = 1 \\<or>\n  Legendre a p * Legendre b p = 0 \\<or> Legendre a p * Legendre b p = - 1", "show False"], ["proof (prove)\nusing this:\n  2 < \\<bar>Legendre (a * b) p - Legendre a p * Legendre b p\\<bar>\n  Legendre (a * b) p = 1 \\<or>\n  Legendre (a * b) p = 0 \\<or> Legendre (a * b) p = - 1\n  Legendre a p * Legendre b p = 1 \\<or>\n  Legendre a p * Legendre b p = 0 \\<or> Legendre a p * Legendre b p = - 1\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < p; prime p\\<rbrakk>\n    \\<Longrightarrow> Legendre (a * b) p = Legendre a p * Legendre b p", "with k"], ["proof (chain)\npicking this:\n  Legendre (a * b) p = Legendre a p * Legendre b p + p * k\n  k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  Legendre (a * b) p = Legendre a p * Legendre b p + p * k\n  k = 0\n\ngoal (1 subgoal):\n 1. Legendre (a * b) p = Legendre a p * Legendre b p", "by auto"], ["proof (state)\nthis:\n  Legendre (a * b) p = Legendre a p * Legendre b p\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now show $(\\frac{-3}{p}) = +1$ for primes $p \\equiv 1 \\bmod 6$.\\<close>"], ["", "lemma Legendre_1mod6: \"prime (6*m+1) \\<Longrightarrow> Legendre (-3) (6*m+1) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "let ?p = \"6*m+1\""], ["proof (state)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "let ?L = \"Legendre (-3) ?p\""], ["proof (state)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "let ?L1 = \"Legendre (-1) ?p\""], ["proof (state)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "let ?L3 = \"Legendre 3 ?p\""], ["proof (state)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "assume p: \"prime ?p\""], ["proof (state)\nthis:\n  prime (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "from p"], ["proof (chain)\npicking this:\n  prime (6 * m + 1)", "have p': \"prime (nat ?p)\""], ["proof (prove)\nusing this:\n  prime (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (nat (6 * m + 1))", "by simp"], ["proof (state)\nthis:\n  prime (nat (6 * m + 1))\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "have neg1cube: \"(-1::int)^3 = -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- 1) ^ 3 = - 1", "by simp"], ["proof (state)\nthis:\n  (- 1) ^ 3 = - 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "have m1: \"m \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> m", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 1 \\<le> m \\<Longrightarrow> False", "assume \"\\<not> m \\<ge> 1\""], ["proof (state)\nthis:\n  \\<not> 1 \\<le> m\n\ngoal (1 subgoal):\n 1. \\<not> 1 \\<le> m \\<Longrightarrow> False", "hence \"m \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<not> 1 \\<le> m\n\ngoal (1 subgoal):\n 1. m \\<le> 0", "by simp"], ["proof (state)\nthis:\n  m \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<not> 1 \\<le> m \\<Longrightarrow> False", "with p"], ["proof (chain)\npicking this:\n  prime (6 * m + 1)\n  m \\<le> 0", "show False"], ["proof (prove)\nusing this:\n  prime (6 * m + 1)\n  m \\<le> 0\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: prime_int_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 \\<le> m\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "hence pn3: \"?p \\<noteq> 3\" and p2: \"?p > 2\""], ["proof (prove)\nusing this:\n  1 \\<le> m\n\ngoal (1 subgoal):\n 1. 6 * m + 1 \\<noteq> 3 &&& 2 < 6 * m + 1", "by auto"], ["proof (state)\nthis:\n  6 * m + 1 \\<noteq> 3\n  2 < 6 * m + 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "with p"], ["proof (chain)\npicking this:\n  prime (6 * m + 1)\n  6 * m + 1 \\<noteq> 3\n  2 < 6 * m + 1", "have \"?L = (Legendre (-1) ?p) * (Legendre 3 ?p)\""], ["proof (prove)\nusing this:\n  prime (6 * m + 1)\n  6 * m + 1 \\<noteq> 3\n  2 < 6 * m + 1\n\ngoal (1 subgoal):\n 1. Legendre (- 3) (6 * m + 1) =\n    Legendre (- 1) (6 * m + 1) * Legendre 3 (6 * m + 1)", "by (frule_tac a=\"-1\" and b=\"3\" in Legendre_zmult, auto)"], ["proof (state)\nthis:\n  Legendre (- 3) (6 * m + 1) =\n  Legendre (- 1) (6 * m + 1) * Legendre 3 (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "moreover"], ["proof (state)\nthis:\n  Legendre (- 3) (6 * m + 1) =\n  Legendre (- 1) (6 * m + 1) * Legendre 3 (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "have \"[Legendre (-1) ?p = (-1)^nat m] (mod ?p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "have \"nat((?p - 1) div 2) = (nat ?p - 1) div 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = (nat (6 * m + 1) - 1) div 2", "by auto"], ["proof (state)\nthis:\n  nat ((6 * m + 1 - 1) div 2) = (nat (6 * m + 1) - 1) div 2\n\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "hence \"[?L1 = (-1)^(nat(((?p) - 1) div 2))] (mod ?p)\""], ["proof (prove)\nusing this:\n  nat ((6 * m + 1 - 1) div 2) = (nat (6 * m + 1) - 1) div 2\n\ngoal (1 subgoal):\n 1. [Legendre (- 1)\n      (6 * m + 1) = (- 1) ^ nat ((6 * m + 1 - 1) div 2)] (mod 6 * m + 1)", "using euler_criterion[of \"nat ?p\" \"-1\"] p' p2"], ["proof (prove)\nusing this:\n  nat ((6 * m + 1 - 1) div 2) = (nat (6 * m + 1) - 1) div 2\n  \\<lbrakk>prime (nat (6 * m + 1)); 2 < nat (6 * m + 1)\\<rbrakk>\n  \\<Longrightarrow> [Legendre (- 1)\n                      (int (nat (6 * m +\n                                 1))) = (- 1) ^\n  ((nat (6 * m + 1) - 1) div 2)] (mod int (nat (6 * m + 1)))\n  prime (nat (6 * m + 1))\n  2 < 6 * m + 1\n\ngoal (1 subgoal):\n 1. [Legendre (- 1)\n      (6 * m + 1) = (- 1) ^ nat ((6 * m + 1 - 1) div 2)] (mod 6 * m + 1)", "by fastforce"], ["proof (state)\nthis:\n  [Legendre (- 1)\n    (6 * m + 1) = (- 1) ^ nat ((6 * m + 1 - 1) div 2)] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "moreover"], ["proof (state)\nthis:\n  [Legendre (- 1)\n    (6 * m + 1) = (- 1) ^ nat ((6 * m + 1 - 1) div 2)] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "have \"nat ((?p - 1) div 2) = 3* nat m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = 3 * nat m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = 3 * nat m", "have \"(?p - 1) div 2 = 3*m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * m + 1 - 1) div 2 = 3 * m", "by auto"], ["proof (state)\nthis:\n  (6 * m + 1 - 1) div 2 = 3 * m\n\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = 3 * nat m", "hence \"nat((?p - 1) div 2) = nat (3*m)\""], ["proof (prove)\nusing this:\n  (6 * m + 1 - 1) div 2 = 3 * m\n\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = nat (3 * m)", "by simp"], ["proof (state)\nthis:\n  nat ((6 * m + 1 - 1) div 2) = nat (3 * m)\n\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = 3 * nat m", "moreover"], ["proof (state)\nthis:\n  nat ((6 * m + 1 - 1) div 2) = nat (3 * m)\n\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = 3 * nat m", "have \"(3::int) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 3", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 3\n\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = 3 * nat m", "ultimately"], ["proof (chain)\npicking this:\n  nat ((6 * m + 1 - 1) div 2) = nat (3 * m)\n  0 \\<le> 3", "show ?thesis"], ["proof (prove)\nusing this:\n  nat ((6 * m + 1 - 1) div 2) = nat (3 * m)\n  0 \\<le> 3\n\ngoal (1 subgoal):\n 1. nat ((6 * m + 1 - 1) div 2) = 3 * nat m", "by (simp add: nat_mult_distrib)"], ["proof (state)\nthis:\n  nat ((6 * m + 1 - 1) div 2) = 3 * nat m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat ((6 * m + 1 - 1) div 2) = 3 * nat m\n\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "moreover"], ["proof (state)\nthis:\n  nat ((6 * m + 1 - 1) div 2) = 3 * nat m\n\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "with neg1cube"], ["proof (chain)\npicking this:\n  (- 1) ^ 3 = - 1\n  nat ((6 * m + 1 - 1) div 2) = 3 * nat m", "have \"(-1::int)^(3*nat m) = (-1)^nat m\""], ["proof (prove)\nusing this:\n  (- 1) ^ 3 = - 1\n  nat ((6 * m + 1 - 1) div 2) = 3 * nat m\n\ngoal (1 subgoal):\n 1. (- 1) ^ (3 * nat m) = (- 1) ^ nat m", "by (simp only: power_mult)"], ["proof (state)\nthis:\n  (- 1) ^ (3 * nat m) = (- 1) ^ nat m\n\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "ultimately"], ["proof (chain)\npicking this:\n  [Legendre (- 1)\n    (6 * m + 1) = (- 1) ^ nat ((6 * m + 1 - 1) div 2)] (mod 6 * m + 1)\n  nat ((6 * m + 1 - 1) div 2) = 3 * nat m\n  (- 1) ^ (3 * nat m) = (- 1) ^ nat m", "show ?thesis"], ["proof (prove)\nusing this:\n  [Legendre (- 1)\n    (6 * m + 1) = (- 1) ^ nat ((6 * m + 1 - 1) div 2)] (mod 6 * m + 1)\n  nat ((6 * m + 1 - 1) div 2) = 3 * nat m\n  (- 1) ^ (3 * nat m) = (- 1) ^ nat m\n\ngoal (1 subgoal):\n 1. [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)", "by auto"], ["proof (state)\nthis:\n  [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "moreover"], ["proof (state)\nthis:\n  [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "have \"?L3 = (-1)^nat m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) = (- 1) ^ nat m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) = (- 1) ^ nat m", "have \"?L3 * (Legendre ?p 3) = (-1)^nat m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m", "have \"nat ((3 - 1) div 2 * ((6 * m + 1 - 1) div 2)) = 3*nat m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat ((3 - 1) div 2 * ((6 * m + 1 - 1) div 2)) = 3 * nat m", "by auto"], ["proof (state)\nthis:\n  nat ((3 - 1) div 2 * ((6 * m + 1 - 1) div 2)) = 3 * nat m\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m", "hence \"?L3 * (Legendre ?p 3) = (-1::int) ^ (3*nat m)\""], ["proof (prove)\nusing this:\n  nat ((3 - 1) div 2 * ((6 * m + 1 - 1) div 2)) = 3 * nat m\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ (3 * nat m)", "using Quadratic_Reciprocity_int[of \"3\" \"?p\"] p' pn3 p2"], ["proof (prove)\nusing this:\n  nat ((3 - 1) div 2 * ((6 * m + 1 - 1) div 2)) = 3 * nat m\n  \\<lbrakk>prime (nat 3); 2 < 3; prime (nat (6 * m + 1)); 2 < 6 * m + 1;\n   3 \\<noteq> 6 * m + 1\\<rbrakk>\n  \\<Longrightarrow> Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 =\n                    (- 1) ^ nat ((3 - 1) div 2 * ((6 * m + 1 - 1) div 2))\n  prime (nat (6 * m + 1))\n  6 * m + 1 \\<noteq> 3\n  2 < 6 * m + 1\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ (3 * nat m)", "by fastforce"], ["proof (state)\nthis:\n  Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ (3 * nat m)\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m", "with neg1cube"], ["proof (chain)\npicking this:\n  (- 1) ^ 3 = - 1\n  Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ (3 * nat m)", "show ?thesis"], ["proof (prove)\nusing this:\n  (- 1) ^ 3 = - 1\n  Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ (3 * nat m)\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m", "by (simp add: power_mult)"], ["proof (state)\nthis:\n  Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) = (- 1) ^ nat m", "moreover"], ["proof (state)\nthis:\n  Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) = (- 1) ^ nat m", "have \"Legendre ?p 3 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Legendre (6 * m + 1) 3 = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Legendre (6 * m + 1) 3 = 1", "have \"[1^2 = ?p] (mod 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [1\\<^sup>2 = 6 * m + 1] (mod 3)", "by (unfold cong_iff_dvd_diff dvd_def, auto)"], ["proof (state)\nthis:\n  [1\\<^sup>2 = 6 * m + 1] (mod 3)\n\ngoal (1 subgoal):\n 1. Legendre (6 * m + 1) 3 = 1", "hence \"QuadRes 3 ?p\""], ["proof (prove)\nusing this:\n  [1\\<^sup>2 = 6 * m + 1] (mod 3)\n\ngoal (1 subgoal):\n 1. QuadRes 3 (6 * m + 1)", "by (unfold QuadRes_def, blast)"], ["proof (state)\nthis:\n  QuadRes 3 (6 * m + 1)\n\ngoal (1 subgoal):\n 1. Legendre (6 * m + 1) 3 = 1", "moreover"], ["proof (state)\nthis:\n  QuadRes 3 (6 * m + 1)\n\ngoal (1 subgoal):\n 1. Legendre (6 * m + 1) 3 = 1", "have \"\\<not> [?p = 0] (mod 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [6 * m + 1 \\<noteq> 0] (mod 3)", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. [6 * m + 1 = 0] (mod 3) \\<Longrightarrow> False", "assume \"[?p = 0] (mod 3)\""], ["proof (state)\nthis:\n  [6 * m + 1 = 0] (mod 3)\n\ngoal (1 subgoal):\n 1. [6 * m + 1 = 0] (mod 3) \\<Longrightarrow> False", "hence \"3 dvd ?p\""], ["proof (prove)\nusing this:\n  [6 * m + 1 = 0] (mod 3)\n\ngoal (1 subgoal):\n 1. 3 dvd 6 * m + 1", "by (simp add: cong_iff_dvd_diff)"], ["proof (state)\nthis:\n  3 dvd 6 * m + 1\n\ngoal (1 subgoal):\n 1. [6 * m + 1 = 0] (mod 3) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  3 dvd 6 * m + 1\n\ngoal (1 subgoal):\n 1. [6 * m + 1 = 0] (mod 3) \\<Longrightarrow> False", "have \"3 dvd 6*m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 dvd 6 * m", "by (auto simp add: dvd_def)"], ["proof (state)\nthis:\n  3 dvd 6 * m\n\ngoal (1 subgoal):\n 1. [6 * m + 1 = 0] (mod 3) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  3 dvd 6 * m + 1\n  3 dvd 6 * m", "have \"3 dvd ?p- 6*m\""], ["proof (prove)\nusing this:\n  3 dvd 6 * m + 1\n  3 dvd 6 * m\n\ngoal (1 subgoal):\n 1. 3 dvd 6 * m + 1 - 6 * m", "by (simp only: dvd_diff)"], ["proof (state)\nthis:\n  3 dvd 6 * m + 1 - 6 * m\n\ngoal (1 subgoal):\n 1. [6 * m + 1 = 0] (mod 3) \\<Longrightarrow> False", "hence \"(3::int) dvd 1\""], ["proof (prove)\nusing this:\n  3 dvd 6 * m + 1 - 6 * m\n\ngoal (1 subgoal):\n 1. is_unit 3", "by simp"], ["proof (state)\nthis:\n  is_unit 3\n\ngoal (1 subgoal):\n 1. [6 * m + 1 = 0] (mod 3) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  is_unit 3\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [6 * m + 1 \\<noteq> 0] (mod 3)\n\ngoal (1 subgoal):\n 1. Legendre (6 * m + 1) 3 = 1", "ultimately"], ["proof (chain)\npicking this:\n  QuadRes 3 (6 * m + 1)\n  [6 * m + 1 \\<noteq> 0] (mod 3)", "show ?thesis"], ["proof (prove)\nusing this:\n  QuadRes 3 (6 * m + 1)\n  [6 * m + 1 \\<noteq> 0] (mod 3)\n\ngoal (1 subgoal):\n 1. Legendre (6 * m + 1) 3 = 1", "by (unfold Legendre_def, auto)"], ["proof (state)\nthis:\n  Legendre (6 * m + 1) 3 = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Legendre (6 * m + 1) 3 = 1\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) = (- 1) ^ nat m", "ultimately"], ["proof (chain)\npicking this:\n  Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m\n  Legendre (6 * m + 1) 3 = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  Legendre 3 (6 * m + 1) * Legendre (6 * m + 1) 3 = (- 1) ^ nat m\n  Legendre (6 * m + 1) 3 = 1\n\ngoal (1 subgoal):\n 1. Legendre 3 (6 * m + 1) = (- 1) ^ nat m", "by auto"], ["proof (state)\nthis:\n  Legendre 3 (6 * m + 1) = (- 1) ^ nat m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Legendre 3 (6 * m + 1) = (- 1) ^ nat m\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "ultimately"], ["proof (chain)\npicking this:\n  Legendre (- 3) (6 * m + 1) =\n  Legendre (- 1) (6 * m + 1) * Legendre 3 (6 * m + 1)\n  [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)\n  Legendre 3 (6 * m + 1) = (- 1) ^ nat m", "have \"[?L = (-1)^(nat m)*(-1)^(nat m)] (mod ?p)\""], ["proof (prove)\nusing this:\n  Legendre (- 3) (6 * m + 1) =\n  Legendre (- 1) (6 * m + 1) * Legendre 3 (6 * m + 1)\n  [Legendre (- 1) (6 * m + 1) = (- 1) ^ nat m] (mod 6 * m + 1)\n  Legendre 3 (6 * m + 1) = (- 1) ^ nat m\n\ngoal (1 subgoal):\n 1. [Legendre (- 3)\n      (6 * m + 1) = (- 1) ^ nat m * (- 1) ^ nat m] (mod 6 * m + 1)", "by (metis cong_scalar_right)"], ["proof (state)\nthis:\n  [Legendre (- 3)\n    (6 * m + 1) = (- 1) ^ nat m * (- 1) ^ nat m] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "hence \"[?L = (-1)^((nat m)+(nat m))] (mod ?p)\""], ["proof (prove)\nusing this:\n  [Legendre (- 3)\n    (6 * m + 1) = (- 1) ^ nat m * (- 1) ^ nat m] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. [Legendre (- 3) (6 * m + 1) = (- 1) ^ (nat m + nat m)] (mod 6 * m + 1)", "by (simp only: power_add)"], ["proof (state)\nthis:\n  [Legendre (- 3) (6 * m + 1) = (- 1) ^ (nat m + nat m)] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "moreover"], ["proof (state)\nthis:\n  [Legendre (- 3) (6 * m + 1) = (- 1) ^ (nat m + nat m)] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "have \"(nat m)+(nat m) = 2*(nat m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat m + nat m = 2 * nat m", "by auto"], ["proof (state)\nthis:\n  nat m + nat m = 2 * nat m\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "ultimately"], ["proof (chain)\npicking this:\n  [Legendre (- 3) (6 * m + 1) = (- 1) ^ (nat m + nat m)] (mod 6 * m + 1)\n  nat m + nat m = 2 * nat m", "have \"[?L = (-1)^(2*(nat m))] (mod ?p)\""], ["proof (prove)\nusing this:\n  [Legendre (- 3) (6 * m + 1) = (- 1) ^ (nat m + nat m)] (mod 6 * m + 1)\n  nat m + nat m = 2 * nat m\n\ngoal (1 subgoal):\n 1. [Legendre (- 3) (6 * m + 1) = (- 1) ^ (2 * nat m)] (mod 6 * m + 1)", "by simp"], ["proof (state)\nthis:\n  [Legendre (- 3) (6 * m + 1) = (- 1) ^ (2 * nat m)] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "hence \"[?L = ((-1)^2)^(nat m)] (mod ?p)\""], ["proof (prove)\nusing this:\n  [Legendre (- 3) (6 * m + 1) = (- 1) ^ (2 * nat m)] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. [Legendre (- 3) (6 * m + 1) = (- 1)\\<^sup>2 ^ nat m] (mod 6 * m + 1)", "by (simp only: power_mult)"], ["proof (state)\nthis:\n  [Legendre (- 3) (6 * m + 1) = (- 1)\\<^sup>2 ^ nat m] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "hence \"[1 = ?L] (mod ?p)\""], ["proof (prove)\nusing this:\n  [Legendre (- 3) (6 * m + 1) = (- 1)\\<^sup>2 ^ nat m] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. [1 = Legendre (- 3) (6 * m + 1)] (mod 6 * m + 1)", "by (auto simp add: cong_sym)"], ["proof (state)\nthis:\n  [1 = Legendre (- 3) (6 * m + 1)] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "hence \"?p dvd 1 - ?L\""], ["proof (prove)\nusing this:\n  [1 = Legendre (- 3) (6 * m + 1)] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. 6 * m + 1 dvd 1 - Legendre (- 3) (6 * m + 1)", "by (simp only: cong_iff_dvd_diff)"], ["proof (state)\nthis:\n  6 * m + 1 dvd 1 - Legendre (- 3) (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "moreover"], ["proof (state)\nthis:\n  6 * m + 1 dvd 1 - Legendre (- 3) (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "have \"?L = -1 \\<or> ?L = 0 \\<or> ?L = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Legendre (- 3) (6 * m + 1) = - 1 \\<or>\n    Legendre (- 3) (6 * m + 1) = 0 \\<or> Legendre (- 3) (6 * m + 1) = 1", "by (simp add: Legendre_def)"], ["proof (state)\nthis:\n  Legendre (- 3) (6 * m + 1) = - 1 \\<or>\n  Legendre (- 3) (6 * m + 1) = 0 \\<or> Legendre (- 3) (6 * m + 1) = 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "ultimately"], ["proof (chain)\npicking this:\n  6 * m + 1 dvd 1 - Legendre (- 3) (6 * m + 1)\n  Legendre (- 3) (6 * m + 1) = - 1 \\<or>\n  Legendre (- 3) (6 * m + 1) = 0 \\<or> Legendre (- 3) (6 * m + 1) = 1", "have \"?p dvd 2 \\<or> ?p dvd 1 \\<or> ?L = 1\""], ["proof (prove)\nusing this:\n  6 * m + 1 dvd 1 - Legendre (- 3) (6 * m + 1)\n  Legendre (- 3) (6 * m + 1) = - 1 \\<or>\n  Legendre (- 3) (6 * m + 1) = 0 \\<or> Legendre (- 3) (6 * m + 1) = 1\n\ngoal (1 subgoal):\n 1. 6 * m + 1 dvd 2 \\<or>\n    is_unit (6 * m + 1) \\<or> Legendre (- 3) (6 * m + 1) = 1", "by auto"], ["proof (state)\nthis:\n  6 * m + 1 dvd 2 \\<or>\n  is_unit (6 * m + 1) \\<or> Legendre (- 3) (6 * m + 1) = 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "moreover"], ["proof (state)\nthis:\n  6 * m + 1 dvd 2 \\<or>\n  is_unit (6 * m + 1) \\<or> Legendre (- 3) (6 * m + 1) = 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "{"], ["proof (state)\nthis:\n  6 * m + 1 dvd 2 \\<or>\n  is_unit (6 * m + 1) \\<or> Legendre (- 3) (6 * m + 1) = 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "assume \"?p dvd 2 \\<or> ?p dvd 1\""], ["proof (state)\nthis:\n  6 * m + 1 dvd 2 \\<or> is_unit (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "with p2"], ["proof (chain)\npicking this:\n  2 < 6 * m + 1\n  6 * m + 1 dvd 2 \\<or> is_unit (6 * m + 1)", "have False"], ["proof (prove)\nusing this:\n  2 < 6 * m + 1\n  6 * m + 1 dvd 2 \\<or> is_unit (6 * m + 1)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp add: zdvd_not_zless)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "}"], ["proof (state)\nthis:\n  6 * m + 1 dvd 2 \\<or> is_unit (6 * m + 1) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow> Legendre (- 3) (6 * m + 1) = 1", "ultimately"], ["proof (chain)\npicking this:\n  6 * m + 1 dvd 2 \\<or>\n  is_unit (6 * m + 1) \\<or> Legendre (- 3) (6 * m + 1) = 1\n  6 * m + 1 dvd 2 \\<or> is_unit (6 * m + 1) \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  6 * m + 1 dvd 2 \\<or>\n  is_unit (6 * m + 1) \\<or> Legendre (- 3) (6 * m + 1) = 1\n  6 * m + 1 dvd 2 \\<or> is_unit (6 * m + 1) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. Legendre (- 3) (6 * m + 1) = 1", "by auto"], ["proof (state)\nthis:\n  Legendre (- 3) (6 * m + 1) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Use this to prove that such primes can be written as $x^2 + 3y^2$.\\<close>"], ["", "lemma qf3_prime_exists: \"prime (6*m+1::int) \\<Longrightarrow> \\<exists> x y. 6*m+1 = x^2 + 3*y^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "let ?p = \"6*m+1\""], ["proof (state)\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "assume p: \"prime ?p\""], ["proof (state)\nthis:\n  prime (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "hence \"Legendre (-3) ?p = 1\""], ["proof (prove)\nusing this:\n  prime (6 * m + 1)\n\ngoal (1 subgoal):\n 1. Legendre (- 3) (6 * m + 1) = 1", "by (rule Legendre_1mod6)"], ["proof (state)\nthis:\n  Legendre (- 3) (6 * m + 1) = 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  Legendre (- 3) (6 * m + 1) = 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "{"], ["proof (state)\nthis:\n  Legendre (- 3) (6 * m + 1) = 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "assume \"\\<not> QuadRes ?p (-3)\""], ["proof (state)\nthis:\n  \\<not> QuadRes (6 * m + 1) (- 3)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "hence \"Legendre (-3) ?p \\<noteq> 1\""], ["proof (prove)\nusing this:\n  \\<not> QuadRes (6 * m + 1) (- 3)\n\ngoal (1 subgoal):\n 1. Legendre (- 3) (6 * m + 1) \\<noteq> 1", "by (unfold Legendre_def, auto)"], ["proof (state)\nthis:\n  Legendre (- 3) (6 * m + 1) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "}"], ["proof (state)\nthis:\n  \\<not> QuadRes (6 * m + 1) (- 3) \\<Longrightarrow>\n  Legendre (- 3) (6 * m + 1) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  Legendre (- 3) (6 * m + 1) = 1\n  \\<not> QuadRes (6 * m + 1) (- 3) \\<Longrightarrow>\n  Legendre (- 3) (6 * m + 1) \\<noteq> 1", "have \"QuadRes ?p (-3)\""], ["proof (prove)\nusing this:\n  Legendre (- 3) (6 * m + 1) = 1\n  \\<not> QuadRes (6 * m + 1) (- 3) \\<Longrightarrow>\n  Legendre (- 3) (6 * m + 1) \\<noteq> 1\n\ngoal (1 subgoal):\n 1. QuadRes (6 * m + 1) (- 3)", "by auto"], ["proof (state)\nthis:\n  QuadRes (6 * m + 1) (- 3)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  QuadRes (6 * m + 1) (- 3)", "obtain s where s: \"[s^2 = -3] (mod ?p)\""], ["proof (prove)\nusing this:\n  QuadRes (6 * m + 1) (- 3)\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        [s\\<^sup>2 = - 3] (mod 6 * m + 1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: QuadRes_def)"], ["proof (state)\nthis:\n  [s\\<^sup>2 = - 3] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "hence \"?p dvd s^2 - (-3::int)\""], ["proof (prove)\nusing this:\n  [s\\<^sup>2 = - 3] (mod 6 * m + 1)\n\ngoal (1 subgoal):\n 1. 6 * m + 1 dvd s\\<^sup>2 - - 3", "by (unfold cong_iff_dvd_diff, simp)"], ["proof (state)\nthis:\n  6 * m + 1 dvd s\\<^sup>2 - - 3\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  6 * m + 1 dvd s\\<^sup>2 - - 3\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "have \"s^2 -(-3::int) = s^2 + 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s\\<^sup>2 - - 3 = s\\<^sup>2 + 3", "by arith"], ["proof (state)\nthis:\n  s\\<^sup>2 - - 3 = s\\<^sup>2 + 3\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  6 * m + 1 dvd s\\<^sup>2 - - 3\n  s\\<^sup>2 - - 3 = s\\<^sup>2 + 3", "have \"?p dvd s^2 + 3*1^2\""], ["proof (prove)\nusing this:\n  6 * m + 1 dvd s\\<^sup>2 - - 3\n  s\\<^sup>2 - - 3 = s\\<^sup>2 + 3\n\ngoal (1 subgoal):\n 1. 6 * m + 1 dvd s\\<^sup>2 + 3 * 1\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  6 * m + 1 dvd s\\<^sup>2 + 3 * 1\\<^sup>2\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  6 * m + 1 dvd s\\<^sup>2 + 3 * 1\\<^sup>2\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "have \"coprime s 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime s 1", "by auto"], ["proof (state)\nthis:\n  coprime s 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  coprime s 1\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "have \"odd ?p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd (6 * m + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. odd (6 * m + 1)", "have \"?p = 2*(3*m)+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * m + 1 = 2 * (3 * m) + 1", "by simp"], ["proof (state)\nthis:\n  6 * m + 1 = 2 * (3 * m) + 1\n\ngoal (1 subgoal):\n 1. odd (6 * m + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  6 * m + 1 = 2 * (3 * m) + 1\n\ngoal (1 subgoal):\n 1. odd (6 * m + 1)", "by simp"], ["proof (state)\nthis:\n  odd (6 * m + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  odd (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "moreover"], ["proof (state)\nthis:\n  odd (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "from p"], ["proof (chain)\npicking this:\n  prime (6 * m + 1)", "have \"prime ?p\""], ["proof (prove)\nusing this:\n  prime (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1)", "by simp"], ["proof (state)\nthis:\n  prime (6 * m + 1)\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "ultimately"], ["proof (chain)\npicking this:\n  6 * m + 1 dvd s\\<^sup>2 + 3 * 1\\<^sup>2\n  coprime s 1\n  odd (6 * m + 1)\n  prime (6 * m + 1)", "have \"is_qfN ?p 3\""], ["proof (prove)\nusing this:\n  6 * m + 1 dvd s\\<^sup>2 + 3 * 1\\<^sup>2\n  coprime s 1\n  odd (6 * m + 1)\n  prime (6 * m + 1)\n\ngoal (1 subgoal):\n 1. is_qfN (6 * m + 1) 3", "using qf3_oddprimedivisor"], ["proof (prove)\nusing this:\n  6 * m + 1 dvd s\\<^sup>2 + 3 * 1\\<^sup>2\n  coprime s 1\n  odd (6 * m + 1)\n  prime (6 * m + 1)\n  \\<lbrakk>prime ?P; odd ?P; coprime ?a ?b;\n   ?P dvd ?a\\<^sup>2 + 3 * ?b\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> is_qfN ?P 3\n\ngoal (1 subgoal):\n 1. is_qfN (6 * m + 1) 3", "by blast"], ["proof (state)\nthis:\n  is_qfN (6 * m + 1) 3\n\ngoal (1 subgoal):\n 1. prime (6 * m + 1) \\<Longrightarrow>\n    \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_qfN (6 * m + 1) 3\n\ngoal (1 subgoal):\n 1. \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2", "by (unfold is_qfN_def, auto)"], ["proof (state)\nthis:\n  \\<exists>x y. 6 * m + 1 = x\\<^sup>2 + 3 * y\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}