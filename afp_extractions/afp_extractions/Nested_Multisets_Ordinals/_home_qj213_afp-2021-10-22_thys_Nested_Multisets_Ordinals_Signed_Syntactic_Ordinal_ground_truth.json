{"file_name": "/home/qj213/afp-2021-10-22/thys/Nested_Multisets_Ordinals/Signed_Syntactic_Ordinal.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Nested_Multisets_Ordinals", "problem_names": ["lemma \\<omega>\\<^sub>z_as_\\<omega>: \"\\<omega>\\<^sub>z = zhmset_of \\<omega>\"", "lemmas zhmsetmset_times = times_zhmultiset.rep_eq", "lemma zhmset_of_1: \"zhmset_of 1 = 1\"", "lemma zhmset_of_times: \"zhmset_of (A * B) = zhmset_of A * zhmset_of B\"", "lemma zhmset_of_prod_list:\n  \"zhmset_of (prod_list Ms) = prod_list (map zhmset_of Ms)\"", "lemma of_nat_zhmset: \"of_nat n = zhmset_of (of_nat n)\"", "lemma of_nat_inject_zhmset[simp]: \"(of_nat m :: zhmultiset) = of_nat n \\<longleftrightarrow> m = n\"", "lemma plus_of_nat_plus_of_nat_zhmset:\n  \"k + of_nat m + of_nat n = k + of_nat (m + n)\" for k :: zhmultiset", "lemma plus_of_nat_minus_of_nat_zhmset:\n  fixes k :: zhmultiset\n  assumes \"n \\<le> m\"\n  shows \"k + of_nat m - of_nat n = k + of_nat (m - n)\"", "lemma of_nat_lt_\\<omega>\\<^sub>z[simp]: \"of_nat n < \\<omega>\\<^sub>z\"", "lemma of_nat_ne_\\<omega>\\<^sub>z[simp]: \"of_nat n \\<noteq> \\<omega>\\<^sub>z\"", "lemma zhmset_of_enat_0[simp]: \"zhmset_of_enat 0 = 0\"", "lemma zhmset_of_enat_1[simp]: \"zhmset_of_enat 1 = 1\"", "lemma zhmset_of_enat_of_nat[simp]: \"zhmset_of_enat (of_nat n) = of_nat n\"", "lemma zhmset_of_enat_numeral[simp]: \"zhmset_of_enat (numeral n) = numeral n\"", "lemma zhmset_of_enat_le_\\<omega>\\<^sub>z[simp]: \"zhmset_of_enat n \\<le> \\<omega>\\<^sub>z\"", "lemma zhmset_of_enat_eq_\\<omega>\\<^sub>z_iff[simp]: \"zhmset_of_enat n = \\<omega>\\<^sub>z \\<longleftrightarrow> n = \\<infinity>\"", "lemma gt_0_times_gt_0_imp:\n  fixes a b :: zhmultiset\n  assumes a_gt0: \"a > 0\" and b_gt0: \"b > 0\"\n  shows \"a * b > 0\"", "lemma le_zhmset_of_pos: \"M \\<le> zhmset_of (hmset_pos M)\"", "lemma minus_zhmset_of_pos_le: \"- zhmset_of (hmset_neg M) \\<le> M\"", "lemma zhmset_of_nonneg[simp]: \"zhmset_of M \\<ge> 0\"", "lemma\n  fixes n :: zhmultiset\n  assumes \"0 \\<le> m\"\n  shows\n    le_add1_hmset: \"n \\<le> n + m\" and\n    le_add2_hmset: \"n \\<le> m + n\"", "lemma less_iff_add1_le_zhmset: \"m < n \\<longleftrightarrow> m + 1 \\<le> n\" for m n :: zhmultiset", "lemma gt_0_lt_mult_gt_1_zhmset:\n  fixes m n :: zhmultiset\n  assumes \"m > 0\" and \"n > 1\"\n  shows \"m < m * n\"", "lemma zero_less_iff_1_le_zhmset: \"0 < n \\<longleftrightarrow> 1 \\<le> n\" for n :: zhmultiset", "lemma less_add_1_iff_le_hmset: \"m < n + 1 \\<longleftrightarrow> m \\<le> n\" for m n :: zhmultiset", "lemma nonneg_le_mult_right_mono_zhmset:\n  fixes x y z :: zhmultiset\n  assumes x: \"0 \\<le> x\" and y: \"0 < y\" and z: \"x \\<le> z\"\n  shows \"x \\<le> y * z\"", "lemma zero_lt_\\<omega>\\<^sub>z[simp]: \"0 < \\<omega>\\<^sub>z\"", "lemma one_lt_\\<omega>[simp]: \"1 < \\<omega>\\<^sub>z\"", "lemma numeral_lt_\\<omega>\\<^sub>z[simp]: \"numeral n < \\<omega>\\<^sub>z\"", "lemma one_le_\\<omega>\\<^sub>z[simp]: \"1 \\<le> \\<omega>\\<^sub>z\"", "lemma of_nat_le_\\<omega>\\<^sub>z[simp]: \"of_nat n \\<le> \\<omega>\\<^sub>z\"", "lemma numeral_le_\\<omega>\\<^sub>z[simp]: \"numeral n \\<le> \\<omega>\\<^sub>z\"", "lemma not_\\<omega>\\<^sub>z_lt_1[simp]: \"\\<not> \\<omega>\\<^sub>z < 1\"", "lemma not_\\<omega>\\<^sub>z_lt_of_nat[simp]: \"\\<not> \\<omega>\\<^sub>z < of_nat n\"", "lemma not_\\<omega>\\<^sub>z_lt_numeral[simp]: \"\\<not> \\<omega>\\<^sub>z < numeral n\"", "lemma not_\\<omega>\\<^sub>z_le_1[simp]: \"\\<not> \\<omega>\\<^sub>z \\<le> 1\"", "lemma not_\\<omega>\\<^sub>z_le_of_nat[simp]: \"\\<not> \\<omega>\\<^sub>z \\<le> of_nat n\"", "lemma not_\\<omega>\\<^sub>z_le_numeral[simp]: \"\\<not> \\<omega>\\<^sub>z \\<le> numeral n\"", "lemma zero_ne_\\<omega>\\<^sub>z[simp]: \"0 \\<noteq> \\<omega>\\<^sub>z\"", "lemma one_ne_\\<omega>\\<^sub>z[simp]: \"1 \\<noteq> \\<omega>\\<^sub>z\"", "lemma numeral_ne_\\<omega>\\<^sub>z[simp]: \"numeral n \\<noteq> \\<omega>\\<^sub>z\"", "lemma\n  \\<omega>\\<^sub>z_ne_0[simp]: \"\\<omega>\\<^sub>z \\<noteq> 0\" and\n  \\<omega>\\<^sub>z_ne_1[simp]: \"\\<omega>\\<^sub>z \\<noteq> 1\" and\n  \\<omega>\\<^sub>z_ne_of_nat[simp]: \"\\<omega>\\<^sub>z \\<noteq> of_nat m\" and\n  \\<omega>\\<^sub>z_ne_numeral[simp]: \"\\<omega>\\<^sub>z \\<noteq> numeral n\"", "lemma\n  zhmset_of_enat_inject[simp]: \"zhmset_of_enat m = zhmset_of_enat n \\<longleftrightarrow> m = n\" and\n  zhmset_of_enat_lt_iff_lt[simp]: \"zhmset_of_enat m < zhmset_of_enat n \\<longleftrightarrow> m < n\" and\n  zhmset_of_enat_le_iff_le[simp]: \"zhmset_of_enat m \\<le> zhmset_of_enat n \\<longleftrightarrow> m \\<le> n\"", "lemma of_nat_lt_zhmset_of_enat_iff: \"of_nat m < zhmset_of_enat n \\<longleftrightarrow> enat m < n\"", "lemma of_nat_le_zhmset_of_enat_iff: \"of_nat m \\<le> zhmset_of_enat n \\<longleftrightarrow> enat m \\<le> n\"", "lemma zhmset_of_enat_lt_iff_ne_infinity: \"zhmset_of_enat x < \\<omega>\\<^sub>z \\<longleftrightarrow> x \\<noteq> \\<infinity>\"", "lemma\n  fixes \\<alpha>1 \\<alpha>2 \\<beta>1 \\<beta>2 \\<gamma> \\<delta> :: hmultiset\n  assumes\n    \\<alpha>\\<beta>2\\<gamma>_lt_\\<alpha>\\<beta>1\\<gamma>: \"\\<alpha>2 + \\<beta>2 * \\<gamma> < \\<alpha>1 + \\<beta>1 * \\<gamma>\" and\n    \\<beta>2_le_\\<beta>1: \"\\<beta>2 \\<le> \\<beta>1\" and\n    \\<gamma>_lt_\\<delta>: \"\\<gamma> < \\<delta>\"\n  shows \"\\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>\""], "translations": [["", "lemma \\<omega>\\<^sub>z_as_\\<omega>: \"\\<omega>\\<^sub>z = zhmset_of \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega>\\<^sub>z = zhmset_of \\<omega>", "by simp"], ["", "lift_definition times_zhmultiset :: \"zhmultiset \\<Rightarrow> zhmultiset \\<Rightarrow> zhmultiset\" is\n  \"\\<lambda>M N.\n       zmset_of (hmsetmset (HMSet (mset_pos M) * HMSet (mset_pos N)))\n     - zmset_of (hmsetmset (HMSet (mset_pos M) * HMSet (mset_neg N)))\n     + zmset_of (hmsetmset (HMSet (mset_neg M) * HMSet (mset_neg N)))\n     - zmset_of (hmsetmset (HMSet (mset_neg M) * HMSet (mset_pos N)))\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemmas zhmsetmset_times = times_zhmultiset.rep_eq"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(zhmultiset, comm_ring_1_class)", "proof (intro_classes, goal_cases mult_assoc mult_comm mult_1 distrib zero_neq_one)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a b. a * b = b * a\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a b c. (a + b) * c = a * c + b * c\n 5. 0 \\<noteq> 1", "case (mult_assoc a b c)"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a b. a * b = b * a\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a b c. (a + b) * c = a * c + b * c\n 5. 0 \\<noteq> 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b * c = a * (b * c)", "by (transfer,\n      simp add: algebra_simps zmset_of_plus[symmetric] hmsetmset_plus[symmetric] HMSet_diff,\n      rule triple_cross_mult_hmset)"], ["proof (state)\nthis:\n  a * b * c = a * (b * c)\n\ngoal (4 subgoals):\n 1. \\<And>a b. a * b = b * a\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a b c. (a + b) * c = a * c + b * c\n 4. 0 \\<noteq> 1", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a b. a * b = b * a\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a b c. (a + b) * c = a * c + b * c\n 4. 0 \\<noteq> 1", "case (mult_comm a b)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>a b. a * b = b * a\n 2. \\<And>a. 1 * a = a\n 3. \\<And>a b c. (a + b) * c = a * c + b * c\n 4. 0 \\<noteq> 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a * b = b * a", "by transfer (auto simp: algebra_simps)"], ["proof (state)\nthis:\n  a * b = b * a\n\ngoal (3 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a b c. (a + b) * c = a * c + b * c\n 3. 0 \\<noteq> 1", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a b c. (a + b) * c = a * c + b * c\n 3. 0 \\<noteq> 1", "case (mult_1 a)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>a. 1 * a = a\n 2. \\<And>a b c. (a + b) * c = a * c + b * c\n 3. 0 \\<noteq> 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * a = a", "by transfer (auto simp: algebra_simps mset_pos_neg_partition[symmetric])"], ["proof (state)\nthis:\n  1 * a = a\n\ngoal (2 subgoals):\n 1. \\<And>a b c. (a + b) * c = a * c + b * c\n 2. 0 \\<noteq> 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c. (a + b) * c = a * c + b * c\n 2. 0 \\<noteq> 1", "case (distrib a b c)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>a b c. (a + b) * c = a * c + b * c\n 2. 0 \\<noteq> 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a + b) * c = a * c + b * c", "by (simp add: times_zhmultiset_def ZHMSet_plus[symmetric] zmset_of_plus[symmetric]\n        hmsetmset_plus[symmetric] algebra_simps hmset_pos_plus hmset_neg_plus)\n     (simp add: mult.commute[of _ \"hmset_pos c\"] mult.commute[of _ \"hmset_neg c\"]\n        add.commute[of \"hmset_neg c * M\" \"hmset_pos c * N\" for M N]\n        add.assoc[symmetric] ring_distribs(1)[symmetric] hmset_pos_neg_dual)"], ["proof (state)\nthis:\n  (a + b) * c = a * c + b * c\n\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "case zero_neq_one"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<noteq> 1", "unfolding zero_zhmultiset_def one_zhmultiset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZHMSet {#}\\<^sub>z \\<noteq> \\<omega>\\<^sub>z^ 0", "by simp"], ["proof (state)\nthis:\n  0 \\<noteq> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma zhmset_of_1: \"zhmset_of 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of 1 = 1", "by (simp add: one_hmultiset_def one_zhmultiset_def)"], ["", "lemma zhmset_of_times: \"zhmset_of (A * B) = zhmset_of A * zhmset_of B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of (A * B) = zhmset_of A * zhmset_of B", "by transfer simp"], ["", "lemma zhmset_of_prod_list:\n  \"zhmset_of (prod_list Ms) = prod_list (map zhmset_of Ms)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of (prod_list Ms) = prod_list (map zhmset_of Ms)", "by (induct Ms) (auto simp: one_hmultiset_def one_zhmultiset_def zhmset_of_times)"], ["", "subsection \\<open>Embedding of Natural Numbers\\<close>"], ["", "lemma of_nat_zhmset: \"of_nat n = zhmset_of (of_nat n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat n = zhmset_of (of_nat n)", "by (induct n) (auto simp: zero_zhmultiset_def zhmset_of_plus zhmset_of_1)"], ["", "lemma of_nat_inject_zhmset[simp]: \"(of_nat m :: zhmultiset) = of_nat n \\<longleftrightarrow> m = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_nat m = of_nat n) = (m = n)", "unfolding of_nat_zhmset"], ["proof (prove)\ngoal (1 subgoal):\n 1. (zhmset_of (of_nat m) = zhmset_of (of_nat n)) = (m = n)", "by simp"], ["", "lemma plus_of_nat_plus_of_nat_zhmset:\n  \"k + of_nat m + of_nat n = k + of_nat (m + n)\" for k :: zhmultiset"], ["proof (prove)\ngoal (1 subgoal):\n 1. k + of_nat m + of_nat n = k + of_nat (m + n)", "by simp"], ["", "lemma plus_of_nat_minus_of_nat_zhmset:\n  fixes k :: zhmultiset\n  assumes \"n \\<le> m\"\n  shows \"k + of_nat m - of_nat n = k + of_nat (m - n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k + of_nat m - of_nat n = k + of_nat (m - n)", "using assms"], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. k + of_nat m - of_nat n = k + of_nat (m - n)", "by (simp add: of_nat_diff)"], ["", "lemma of_nat_lt_\\<omega>\\<^sub>z[simp]: \"of_nat n < \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat n < \\<omega>\\<^sub>z", "unfolding \\<omega>\\<^sub>z_as_\\<omega>"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat n < zhmset_of \\<omega>", "using of_nat_lt_\\<omega> of_nat_zhmset zhmset_of_less"], ["proof (prove)\nusing this:\n  of_nat ?n < \\<omega>\n  of_nat ?n = zhmset_of (of_nat ?n)\n  (zhmset_of ?M < zhmset_of ?N) = (?M < ?N)\n\ngoal (1 subgoal):\n 1. of_nat n < zhmset_of \\<omega>", "by presburger"], ["", "lemma of_nat_ne_\\<omega>\\<^sub>z[simp]: \"of_nat n \\<noteq> \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat n \\<noteq> \\<omega>\\<^sub>z", "by (metis of_nat_lt_\\<omega>\\<^sub>z mset_le_asym mset_lt_single_iff)"], ["", "subsection \\<open>Embedding of Extended Natural Numbers\\<close>"], ["", "primrec zhmset_of_enat :: \"enat \\<Rightarrow> zhmultiset\" where\n  \"zhmset_of_enat (enat n) = of_nat n\"\n| \"zhmset_of_enat \\<infinity> = \\<omega>\\<^sub>z\""], ["", "lemma zhmset_of_enat_0[simp]: \"zhmset_of_enat 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of_enat 0 = 0", "by (simp add: zero_enat_def)"], ["", "lemma zhmset_of_enat_1[simp]: \"zhmset_of_enat 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of_enat 1 = 1", "by (simp add: one_enat_def del: One_nat_def)"], ["", "lemma zhmset_of_enat_of_nat[simp]: \"zhmset_of_enat (of_nat n) = of_nat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of_enat (of_nat n) = of_nat n", "using of_nat_eq_enat"], ["proof (prove)\nusing this:\n  of_nat ?n = enat ?n\n\ngoal (1 subgoal):\n 1. zhmset_of_enat (of_nat n) = of_nat n", "by auto"], ["", "lemma zhmset_of_enat_numeral[simp]: \"zhmset_of_enat (numeral n) = numeral n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of_enat (numeral n) = numeral n", "by (simp add: numeral_eq_enat)"], ["", "lemma zhmset_of_enat_le_\\<omega>\\<^sub>z[simp]: \"zhmset_of_enat n \\<le> \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of_enat n \\<le> \\<omega>\\<^sub>z", "using of_nat_lt_\\<omega>\\<^sub>z[THEN less_imp_le]"], ["proof (prove)\nusing this:\n  of_nat ?n1 \\<le> \\<omega>\\<^sub>z\n\ngoal (1 subgoal):\n 1. zhmset_of_enat n \\<le> \\<omega>\\<^sub>z", "by (cases n) auto"], ["", "lemma zhmset_of_enat_eq_\\<omega>\\<^sub>z_iff[simp]: \"zhmset_of_enat n = \\<omega>\\<^sub>z \\<longleftrightarrow> n = \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (zhmset_of_enat n = \\<omega>\\<^sub>z) = (n = \\<infinity>)", "by (cases n) auto"], ["", "subsection \\<open>Inequalities and Some (Dis)equalities\\<close>"], ["", "instance zhmultiset :: zero_less_one"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(zhmultiset, zero_less_one_class)", "by (intro_classes, transfer, transfer, auto)"], ["", "instantiation zhmultiset :: linordered_idom\nbegin"], ["", "definition sgn_zhmultiset :: \"zhmultiset \\<Rightarrow> zhmultiset\" where\n  \"sgn_zhmultiset M = (if M = 0 then 0 else if M > 0 then 1 else -1)\""], ["", "definition abs_zhmultiset :: \"zhmultiset \\<Rightarrow> zhmultiset\" where\n  \"abs_zhmultiset M = (if M < 0 then - M else M)\""], ["", "lemma gt_0_times_gt_0_imp:\n  fixes a b :: zhmultiset\n  assumes a_gt0: \"a > 0\" and b_gt0: \"b > 0\"\n  shows \"a * b > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a * b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < a * b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a * b", "using a_gt0 b_gt0"], ["proof (prove)\nusing this:\n  0 < a\n  0 < b\n\ngoal (1 subgoal):\n 1. 0 < a * b", "by (subst (asm) (2 4) zhmset_pos_neg_partition, simp, transfer,\n        simp del: HMSet_less add: algebra_simps zmset_of_plus[symmetric] hmsetmset_plus[symmetric]\n        zmset_of_less HMSet_less[symmetric])\n      (rule mono_cross_mult_less_hmset)"], ["proof (state)\nthis:\n  0 < a * b\n\ngoal:\nNo subgoals!", "qed"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(zhmultiset, linordered_idom_class)", "proof intro_classes"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a. \\<bar>a\\<bar> = (if a < 0 then - a else a)\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 3. \\<And>x. sgn x = (if x = 0 then 0 else if 0 < x then 1 else - 1)", "fix a b c :: zhmultiset"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a. \\<bar>a\\<bar> = (if a < 0 then - a else a)\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 3. \\<And>x. sgn x = (if x = 0 then 0 else if 0 < x then 1 else - 1)", "assume\n    a_lt_b: \"a < b\" and\n    zero_lt_c: \"0 < c\""], ["proof (state)\nthis:\n  a < b\n  0 < c\n\ngoal (3 subgoals):\n 1. \\<And>a. \\<bar>a\\<bar> = (if a < 0 then - a else a)\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 3. \\<And>x. sgn x = (if x = 0 then 0 else if 0 < x then 1 else - 1)", "have \"c * b < c * b + c * (b - a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * b < c * b + c * (b - a)", "using gt_0_times_gt_0_imp"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?a; 0 < ?b\\<rbrakk> \\<Longrightarrow> 0 < ?a * ?b\n\ngoal (1 subgoal):\n 1. c * b < c * b + c * (b - a)", "by (simp add: a_lt_b zero_lt_c)"], ["proof (state)\nthis:\n  c * b < c * b + c * (b - a)\n\ngoal (3 subgoals):\n 1. \\<And>a. \\<bar>a\\<bar> = (if a < 0 then - a else a)\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 3. \\<And>x. sgn x = (if x = 0 then 0 else if 0 < x then 1 else - 1)", "hence \"c * a + c * (b - a) < c * b + c * (b - a)\""], ["proof (prove)\nusing this:\n  c * b < c * b + c * (b - a)\n\ngoal (1 subgoal):\n 1. c * a + c * (b - a) < c * b + c * (b - a)", "by (simp add: right_diff_distrib')"], ["proof (state)\nthis:\n  c * a + c * (b - a) < c * b + c * (b - a)\n\ngoal (3 subgoals):\n 1. \\<And>a. \\<bar>a\\<bar> = (if a < 0 then - a else a)\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 3. \\<And>x. sgn x = (if x = 0 then 0 else if 0 < x then 1 else - 1)", "thus \"c * a < c * b\""], ["proof (prove)\nusing this:\n  c * a + c * (b - a) < c * b + c * (b - a)\n\ngoal (1 subgoal):\n 1. c * a < c * b", "by simp"], ["proof (state)\nthis:\n  c * a < c * b\n\ngoal (2 subgoals):\n 1. \\<And>a. \\<bar>a\\<bar> = (if a < 0 then - a else a)\n 2. \\<And>x. sgn x = (if x = 0 then 0 else if 0 < x then 1 else - 1)", "qed (auto simp: sgn_zhmultiset_def abs_zhmultiset_def)"], ["", "end"], ["", "lemma le_zhmset_of_pos: \"M \\<le> zhmset_of (hmset_pos M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<le> zhmset_of (hmset_pos M)", "by (simp add: less_eq_zhmultiset.rep_eq mset_pos_supset subset_eq_imp_le_zmset)"], ["", "lemma minus_zhmset_of_pos_le: \"- zhmset_of (hmset_neg M) \\<le> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - zhmset_of (hmset_neg M) \\<le> M", "by (metis le_zhmset_of_pos minus_le_iff mset_pos_uminus zhmsetmset_uminus)"], ["", "lemma zhmset_of_nonneg[simp]: \"zhmset_of M \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> zhmset_of M", "by (metis hmsetmset_0 zero_le_hmset zero_zhmultiset_def zhmset_of_le zmset_of_empty)"], ["", "lemma\n  fixes n :: zhmultiset\n  assumes \"0 \\<le> m\"\n  shows\n    le_add1_hmset: \"n \\<le> n + m\" and\n    le_add2_hmset: \"n \\<le> m + n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> n + m &&& n \\<le> m + n", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. n \\<le> n + m &&& n \\<le> m + n", "by simp+"], ["", "lemma less_iff_add1_le_zhmset: \"m < n \\<longleftrightarrow> m + 1 \\<le> n\" for m n :: zhmultiset"], ["proof (prove)\ngoal (1 subgoal):\n 1. (m < n) = (m + 1 \\<le> n)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow> m + 1 \\<le> n\n 2. m + 1 \\<le> n \\<Longrightarrow> m < n", "assume m_lt_n: \"m < n\""], ["proof (state)\nthis:\n  m < n\n\ngoal (2 subgoals):\n 1. m < n \\<Longrightarrow> m + 1 \\<le> n\n 2. m + 1 \\<le> n \\<Longrightarrow> m < n", "show \"m + 1 \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m + 1 \\<le> n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. m + 1 \\<le> n", "obtain hh :: hmultiset and zz :: zhmultiset and hha :: hmultiset where\n      f1: \"m = zhmset_of hh + zz \\<and> n = zhmset_of hha + zz \\<and> hh < hha\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>hh zz hha.\n        m = zhmset_of hh + zz \\<and>\n        n = zhmset_of hha + zz \\<and> hh < hha \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using less_hmset_zhmsetE[OF m_lt_n]"], ["proof (prove)\nusing this:\n  (\\<And>A B C.\n      \\<lbrakk>m = zhmset_of A + C; n = zhmset_of B + C; A < B\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>hh zz hha.\n        m = zhmset_of hh + zz \\<and>\n        n = zhmset_of hha + zz \\<and> hh < hha \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  m = zhmset_of hh + zz \\<and> n = zhmset_of hha + zz \\<and> hh < hha\n\ngoal (1 subgoal):\n 1. m + 1 \\<le> n", "hence \"zhmset_of (hh + 1) \\<le> zhmset_of hha\""], ["proof (prove)\nusing this:\n  m = zhmset_of hh + zz \\<and> n = zhmset_of hha + zz \\<and> hh < hha\n\ngoal (1 subgoal):\n 1. zhmset_of (hh + 1) \\<le> zhmset_of hha", "by (metis (no_types) less_iff_add1_le_hmset zhmset_of_le)"], ["proof (state)\nthis:\n  zhmset_of (hh + 1) \\<le> zhmset_of hha\n\ngoal (1 subgoal):\n 1. m + 1 \\<le> n", "thus ?thesis"], ["proof (prove)\nusing this:\n  zhmset_of (hh + 1) \\<le> zhmset_of hha\n\ngoal (1 subgoal):\n 1. m + 1 \\<le> n", "using f1"], ["proof (prove)\nusing this:\n  zhmset_of (hh + 1) \\<le> zhmset_of hha\n  m = zhmset_of hh + zz \\<and> n = zhmset_of hha + zz \\<and> hh < hha\n\ngoal (1 subgoal):\n 1. m + 1 \\<le> n", "by (simp add: zhmset_of_1 zhmset_of_plus)"], ["proof (state)\nthis:\n  m + 1 \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m + 1 \\<le> n\n\ngoal (1 subgoal):\n 1. m + 1 \\<le> n \\<Longrightarrow> m < n", "qed simp"], ["", "lemma gt_0_lt_mult_gt_1_zhmset:\n  fixes m n :: zhmultiset\n  assumes \"m > 0\" and \"n > 1\"\n  shows \"m < m * n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < m * n", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n  1 < n\n\ngoal (1 subgoal):\n 1. m < m * n", "by simp"], ["", "lemma zero_less_iff_1_le_zhmset: \"0 < n \\<longleftrightarrow> 1 \\<le> n\" for n :: zhmultiset"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 < n) = (1 \\<le> n)", "by (rule less_iff_add1_le_zhmset[of 0, simplified])"], ["", "lemma less_add_1_iff_le_hmset: \"m < n + 1 \\<longleftrightarrow> m \\<le> n\" for m n :: zhmultiset"], ["proof (prove)\ngoal (1 subgoal):\n 1. (m < n + 1) = (m \\<le> n)", "by (rule less_iff_add1_le_zhmset[of m \"n + 1\", simplified])"], ["", "lemma nonneg_le_mult_right_mono_zhmset:\n  fixes x y z :: zhmultiset\n  assumes x: \"0 \\<le> x\" and y: \"0 < y\" and z: \"x \\<le> z\"\n  shows \"x \\<le> y * z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y * z", "using x zero_less_iff_1_le_zhmset[THEN iffD1, OF y] z"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  1 \\<le> y\n  x \\<le> z\n\ngoal (1 subgoal):\n 1. x \\<le> y * z", "by (meson dual_order.trans leD mult_less_cancel_right2 not_le_imp_less)"], ["", "instance hmultiset :: ordered_cancel_comm_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hmultiset, ordered_cancel_comm_semiring_class)", "by intro_classes"], ["", "instance hmultiset :: linordered_semiring_1_strict"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hmultiset, linordered_semiring_1_strict_class)", "by intro_classes"], ["", "instance hmultiset :: bounded_lattice_bot"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hmultiset, bounded_lattice_bot_class)", "by intro_classes"], ["", "instance hmultiset :: zero_less_one"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hmultiset, zero_less_one_class)", "by intro_classes"], ["", "instance hmultiset :: linordered_nonzero_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hmultiset, linordered_nonzero_semiring_class)", "by intro_classes"], ["", "instance hmultiset :: semiring_no_zero_divisors"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(hmultiset, semiring_no_zero_divisors_class)", "by intro_classes"], ["", "lemma zero_lt_\\<omega>\\<^sub>z[simp]: \"0 < \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < \\<omega>\\<^sub>z", "by (metis of_nat_lt_\\<omega>\\<^sub>z of_nat_0)"], ["", "lemma one_lt_\\<omega>[simp]: \"1 < \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < \\<omega>\\<^sub>z", "by (metis enat_defs(2) zhmset_of_enat.simps(1) zhmset_of_enat_1 of_nat_lt_\\<omega>\\<^sub>z)"], ["", "lemma numeral_lt_\\<omega>\\<^sub>z[simp]: \"numeral n < \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. numeral n < \\<omega>\\<^sub>z", "using zhmset_of_enat_numeral[symmetric] zhmset_of_enat.simps(1) of_nat_lt_\\<omega>\\<^sub>z numeral_eq_enat"], ["proof (prove)\nusing this:\n  numeral ?n = zhmset_of_enat (numeral ?n)\n  zhmset_of_enat (enat ?n) = of_nat ?n\n  of_nat ?n < \\<omega>\\<^sub>z\n  numeral ?k = enat (numeral ?k)\n\ngoal (1 subgoal):\n 1. numeral n < \\<omega>\\<^sub>z", "by presburger"], ["", "lemma one_le_\\<omega>\\<^sub>z[simp]: \"1 \\<le> \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> \\<omega>\\<^sub>z", "by (simp add: less_imp_le)"], ["", "lemma of_nat_le_\\<omega>\\<^sub>z[simp]: \"of_nat n \\<le> \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat n \\<le> \\<omega>\\<^sub>z", "by (simp add: le_less)"], ["", "lemma numeral_le_\\<omega>\\<^sub>z[simp]: \"numeral n \\<le> \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. numeral n \\<le> \\<omega>\\<^sub>z", "by (simp add: less_imp_le)"], ["", "lemma not_\\<omega>\\<^sub>z_lt_1[simp]: \"\\<not> \\<omega>\\<^sub>z < 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<omega>\\<^sub>z < 1", "by (simp add: not_less)"], ["", "lemma not_\\<omega>\\<^sub>z_lt_of_nat[simp]: \"\\<not> \\<omega>\\<^sub>z < of_nat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<omega>\\<^sub>z < of_nat n", "by (simp add: not_less)"], ["", "lemma not_\\<omega>\\<^sub>z_lt_numeral[simp]: \"\\<not> \\<omega>\\<^sub>z < numeral n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<omega>\\<^sub>z < numeral n", "by (simp add: not_less)"], ["", "lemma not_\\<omega>\\<^sub>z_le_1[simp]: \"\\<not> \\<omega>\\<^sub>z \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<omega>\\<^sub>z \\<le> 1", "by (simp add: not_le)"], ["", "lemma not_\\<omega>\\<^sub>z_le_of_nat[simp]: \"\\<not> \\<omega>\\<^sub>z \\<le> of_nat n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<omega>\\<^sub>z \\<le> of_nat n", "by (simp add: not_le)"], ["", "lemma not_\\<omega>\\<^sub>z_le_numeral[simp]: \"\\<not> \\<omega>\\<^sub>z \\<le> numeral n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<omega>\\<^sub>z \\<le> numeral n", "by (simp add: not_le)"], ["", "lemma zero_ne_\\<omega>\\<^sub>z[simp]: \"0 \\<noteq> \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<noteq> \\<omega>\\<^sub>z", "using zero_lt_\\<omega>\\<^sub>z"], ["proof (prove)\nusing this:\n  0 < \\<omega>\\<^sub>z\n\ngoal (1 subgoal):\n 1. 0 \\<noteq> \\<omega>\\<^sub>z", "by linarith"], ["", "lemma one_ne_\\<omega>\\<^sub>z[simp]: \"1 \\<noteq> \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<noteq> \\<omega>\\<^sub>z", "using not_\\<omega>\\<^sub>z_le_1"], ["proof (prove)\nusing this:\n  \\<not> \\<omega>\\<^sub>z \\<le> 1\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> \\<omega>\\<^sub>z", "by force"], ["", "lemma numeral_ne_\\<omega>\\<^sub>z[simp]: \"numeral n \\<noteq> \\<omega>\\<^sub>z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. numeral n \\<noteq> \\<omega>\\<^sub>z", "by (metis not_\\<omega>\\<^sub>z_le_numeral numeral_le_\\<omega>\\<^sub>z)"], ["", "lemma\n  \\<omega>\\<^sub>z_ne_0[simp]: \"\\<omega>\\<^sub>z \\<noteq> 0\" and\n  \\<omega>\\<^sub>z_ne_1[simp]: \"\\<omega>\\<^sub>z \\<noteq> 1\" and\n  \\<omega>\\<^sub>z_ne_of_nat[simp]: \"\\<omega>\\<^sub>z \\<noteq> of_nat m\" and\n  \\<omega>\\<^sub>z_ne_numeral[simp]: \"\\<omega>\\<^sub>z \\<noteq> numeral n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega>\\<^sub>z \\<noteq> 0 &&& \\<omega>\\<^sub>z \\<noteq> 1) &&&\n    \\<omega>\\<^sub>z \\<noteq> of_nat m &&&\n    \\<omega>\\<^sub>z \\<noteq> numeral n", "using zero_ne_\\<omega>\\<^sub>z one_ne_\\<omega>\\<^sub>z of_nat_ne_\\<omega>\\<^sub>z numeral_ne_\\<omega>\\<^sub>z"], ["proof (prove)\nusing this:\n  0 \\<noteq> \\<omega>\\<^sub>z\n  1 \\<noteq> \\<omega>\\<^sub>z\n  of_nat ?n \\<noteq> \\<omega>\\<^sub>z\n  numeral ?n \\<noteq> \\<omega>\\<^sub>z\n\ngoal (1 subgoal):\n 1. (\\<omega>\\<^sub>z \\<noteq> 0 &&& \\<omega>\\<^sub>z \\<noteq> 1) &&&\n    \\<omega>\\<^sub>z \\<noteq> of_nat m &&&\n    \\<omega>\\<^sub>z \\<noteq> numeral n", "by metis+"], ["", "lemma\n  zhmset_of_enat_inject[simp]: \"zhmset_of_enat m = zhmset_of_enat n \\<longleftrightarrow> m = n\" and\n  zhmset_of_enat_lt_iff_lt[simp]: \"zhmset_of_enat m < zhmset_of_enat n \\<longleftrightarrow> m < n\" and\n  zhmset_of_enat_le_iff_le[simp]: \"zhmset_of_enat m \\<le> zhmset_of_enat n \\<longleftrightarrow> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (zhmset_of_enat m = zhmset_of_enat n) = (m = n) &&&\n    (zhmset_of_enat m < zhmset_of_enat n) = (m < n) &&&\n    (zhmset_of_enat m \\<le> zhmset_of_enat n) = (m \\<le> n)", "by (cases m; cases n; simp)+"], ["", "lemma of_nat_lt_zhmset_of_enat_iff: \"of_nat m < zhmset_of_enat n \\<longleftrightarrow> enat m < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_nat m < zhmset_of_enat n) = (enat m < n)", "by (metis zhmset_of_enat.simps(1) zhmset_of_enat_lt_iff_lt)"], ["", "lemma of_nat_le_zhmset_of_enat_iff: \"of_nat m \\<le> zhmset_of_enat n \\<longleftrightarrow> enat m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_nat m \\<le> zhmset_of_enat n) = (enat m \\<le> n)", "by (metis zhmset_of_enat.simps(1) zhmset_of_enat_le_iff_le)"], ["", "lemma zhmset_of_enat_lt_iff_ne_infinity: \"zhmset_of_enat x < \\<omega>\\<^sub>z \\<longleftrightarrow> x \\<noteq> \\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (zhmset_of_enat x < \\<omega>\\<^sub>z) = (x \\<noteq> \\<infinity>)", "by (cases x; simp)"], ["", "subsection \\<open>An Example\\<close>"], ["", "text \\<open>\nA new proof of @{thm ludwig_waldmann_less}:\n\\<close>"], ["", "lemma\n  fixes \\<alpha>1 \\<alpha>2 \\<beta>1 \\<beta>2 \\<gamma> \\<delta> :: hmultiset\n  assumes\n    \\<alpha>\\<beta>2\\<gamma>_lt_\\<alpha>\\<beta>1\\<gamma>: \"\\<alpha>2 + \\<beta>2 * \\<gamma> < \\<alpha>1 + \\<beta>1 * \\<gamma>\" and\n    \\<beta>2_le_\\<beta>1: \"\\<beta>2 \\<le> \\<beta>1\" and\n    \\<gamma>_lt_\\<delta>: \"\\<gamma> < \\<delta>\"\n  shows \"\\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "let ?z = zhmset_of"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "note \\<alpha>\\<beta>2\\<gamma>_lt_\\<alpha>\\<beta>1\\<gamma>' = \\<alpha>\\<beta>2\\<gamma>_lt_\\<alpha>\\<beta>1\\<gamma>[THEN zhmset_of_less[THEN iffD2],\n    simplified zhmset_of_plus zhmset_of_times]"], ["proof (state)\nthis:\n  zhmset_of \\<alpha>2 + zhmset_of \\<beta>2 * zhmset_of \\<gamma>\n  < zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma>\n\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "note \\<beta>2_le_\\<beta>1' = \\<beta>2_le_\\<beta>1[THEN zhmset_of_le[THEN iffD2]]"], ["proof (state)\nthis:\n  zhmset_of \\<beta>2 \\<le> zhmset_of \\<beta>1\n\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "note \\<gamma>_lt_\\<delta>' = \\<gamma>_lt_\\<delta>[THEN zhmset_of_less[THEN iffD2]]"], ["proof (state)\nthis:\n  zhmset_of \\<gamma> < zhmset_of \\<delta>\n\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "have \"?z \\<alpha>2 + ?z \\<beta>2 * ?z \\<delta> < ?z \\<alpha>1 + ?z \\<beta>1 * ?z \\<gamma> + ?z \\<beta>2 * (?z \\<delta> - ?z \\<gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of \\<alpha>2 + zhmset_of \\<beta>2 * zhmset_of \\<delta>\n    < zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n      zhmset_of \\<beta>2 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)", "using \\<alpha>\\<beta>2\\<gamma>_lt_\\<alpha>\\<beta>1\\<gamma>'"], ["proof (prove)\nusing this:\n  zhmset_of \\<alpha>2 + zhmset_of \\<beta>2 * zhmset_of \\<gamma>\n  < zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma>\n\ngoal (1 subgoal):\n 1. zhmset_of \\<alpha>2 + zhmset_of \\<beta>2 * zhmset_of \\<delta>\n    < zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n      zhmset_of \\<beta>2 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  zhmset_of \\<alpha>2 + zhmset_of \\<beta>2 * zhmset_of \\<delta>\n  < zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n    zhmset_of \\<beta>2 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)\n\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "also"], ["proof (state)\nthis:\n  zhmset_of \\<alpha>2 + zhmset_of \\<beta>2 * zhmset_of \\<delta>\n  < zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n    zhmset_of \\<beta>2 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)\n\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "have \"\\<dots> \\<le> ?z \\<alpha>1 + ?z \\<beta>1 * ?z \\<gamma> + ?z \\<beta>1 * (?z \\<delta> - ?z \\<gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n    zhmset_of \\<beta>2 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)\n    \\<le> zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n          zhmset_of \\<beta>1 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)", "using \\<beta>2_le_\\<beta>1' \\<gamma>_lt_\\<delta>'"], ["proof (prove)\nusing this:\n  zhmset_of \\<beta>2 \\<le> zhmset_of \\<beta>1\n  zhmset_of \\<gamma> < zhmset_of \\<delta>\n\ngoal (1 subgoal):\n 1. zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n    zhmset_of \\<beta>2 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)\n    \\<le> zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n          zhmset_of \\<beta>1 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)", "by simp"], ["proof (state)\nthis:\n  zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n  zhmset_of \\<beta>2 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)\n  \\<le> zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n        zhmset_of \\<beta>1 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)\n\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "finally"], ["proof (chain)\npicking this:\n  zhmset_of \\<alpha>2 + zhmset_of \\<beta>2 * zhmset_of \\<delta>\n  < zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n    zhmset_of \\<beta>1 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)", "show ?thesis"], ["proof (prove)\nusing this:\n  zhmset_of \\<alpha>2 + zhmset_of \\<beta>2 * zhmset_of \\<delta>\n  < zhmset_of \\<alpha>1 + zhmset_of \\<beta>1 * zhmset_of \\<gamma> +\n    zhmset_of \\<beta>1 * (zhmset_of \\<delta> - zhmset_of \\<gamma>)\n\ngoal (1 subgoal):\n 1. \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>", "by (simp add: zmset_of_less zhmset_of_times[symmetric] zhmset_of_plus[symmetric] algebra_simps)"], ["proof (state)\nthis:\n  \\<alpha>2 + \\<beta>2 * \\<delta> < \\<alpha>1 + \\<beta>1 * \\<delta>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}