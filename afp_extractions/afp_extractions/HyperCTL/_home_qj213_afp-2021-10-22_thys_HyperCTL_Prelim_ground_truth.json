{"file_name": "/home/qj213/afp-2021-10-22/thys/HyperCTL/Prelim.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HyperCTL", "problem_names": ["lemma append_singl_rev: \"a # as = [a] @ as\"", "lemma list_pair_induct[case_names Nil Cons]:\nassumes \"P []\" and \"\\<And>a b list. P list \\<Longrightarrow> P ((a,b) # list)\"\nshows \"P lista\"", "lemma list_pair_case[elim, case_names Nil Cons]:\nassumes \"xs = [] \\<Longrightarrow> P\" and \"\\<And>a b list. xs = (a,b) # list \\<Longrightarrow> P\"\nshows \"P\"", "lemma asList:\nassumes \"finite A\" shows \"distinct (asList A) \\<and> set (asList A) = A\"", "lemmas distinct_asList = asList[THEN conjunct1]", "lemmas set_asList = asList[THEN conjunct2]", "lemma map_sdrop[simp]: \"sdrop 0 = id\"", "lemma stl_o_sdrop[simp]: \"stl o sdrop n = sdrop (Suc n)\"", "lemma sdrop_o_stl[simp]: \"sdrop n o stl = sdrop (Suc n)\"", "lemma hd_stake[simp]: \"i > 0 \\<Longrightarrow> hd (stake i \\<pi>) = shd \\<pi>\""], "translations": [["", "lemma append_singl_rev: \"a # as = [a] @ as\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a # as = [a] @ as", "by simp"], ["", "lemma list_pair_induct[case_names Nil Cons]:\nassumes \"P []\" and \"\\<And>a b list. P list \\<Longrightarrow> P ((a,b) # list)\"\nshows \"P lista\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P lista", "using assms"], ["proof (prove)\nusing this:\n  P []\n  P ?list \\<Longrightarrow> P ((?a, ?b) # ?list)\n\ngoal (1 subgoal):\n 1. P lista", "by (induction lista) auto"], ["", "lemma list_pair_case[elim, case_names Nil Cons]:\nassumes \"xs = [] \\<Longrightarrow> P\" and \"\\<And>a b list. xs = (a,b) # list \\<Longrightarrow> P\"\nshows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  xs = [] \\<Longrightarrow> P\n  xs = (?a, ?b) # ?list \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by(cases xs, auto)"], ["", "definition asList :: \"'a set \\<Rightarrow> 'a list\" where\n\"asList A \\<equiv> SOME as. distinct as \\<and> set as = A\""], ["", "lemma asList:\nassumes \"finite A\" shows \"distinct (asList A) \\<and> set (asList A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (asList A) \\<and> set (asList A) = A", "unfolding asList_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (SOME as. distinct as \\<and> set as = A) \\<and>\n    set (SOME as. distinct as \\<and> set as = A) = A", "by (rule someI_ex) (metis assms finite_distinct_list)"], ["", "lemmas distinct_asList = asList[THEN conjunct1]"], ["", "lemmas set_asList = asList[THEN conjunct2]"], ["", "lemma map_sdrop[simp]: \"sdrop 0 = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sdrop 0 = id", "by (auto intro: ext)"], ["", "lemma stl_o_sdrop[simp]: \"stl o sdrop n = sdrop (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stl \\<circ> sdrop n = sdrop (Suc n)", "by (auto intro: ext)"], ["", "lemma sdrop_o_stl[simp]: \"sdrop n o stl = sdrop (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sdrop n \\<circ> stl = sdrop (Suc n)", "by (auto intro: ext)"], ["", "lemma hd_stake[simp]: \"i > 0 \\<Longrightarrow> hd (stake i \\<pi>) = shd \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < i \\<Longrightarrow> hd (stake i \\<pi>) = shd \\<pi>", "by (cases i) auto"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}