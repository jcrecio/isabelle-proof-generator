{"file_name": "/home/qj213/afp-2021-10-22/thys/Probabilistic_System_Zoo/Vardi.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Probabilistic_System_Zoo", "problem_names": ["lemma var_eq_symp: \"x \\<sim> y \\<Longrightarrow> y \\<sim> x\"", "lemma var_eq_transp: \"x \\<sim> y \\<Longrightarrow> y \\<sim> z \\<Longrightarrow> x \\<sim> z\"", "lemma map_var0_eq_BPS_iff[simp]:\n  \"map_var0 f g z = BPS X \\<longleftrightarrow> (\\<exists>Y. z = BPS Y \\<and> map_bset (map_prod f g) Y = X)\"", "lemma map_var0_eq_PMF_iff[simp]:\n  \"map_var0 f g z = PMF p \\<longleftrightarrow> (\\<exists>q. z = PMF q \\<and> map_pmf (map_prod f g) q = p)\"", "lemma \"bisimilar_lts s1 s2 x y \\<longleftrightarrow> bisimilar_var (var_of_lts_emb o s1) (var_of_lts_emb o s2) x y\"\n  (is \"_ \\<longleftrightarrow> bisimilar_var (?emb1 o _) (?emb2 o _) _ _\")", "lemma \"bisimilar_gen s1 s2 x y \\<longleftrightarrow> bisimilar_var (var_of_gen_emb o s1) (var_of_gen_emb o s2) x y\"\n  (is \"_ \\<longleftrightarrow> bisimilar_var (?emb1 o _) (?emb2 o _) _ _\")"], "translations": [["", "lemma var_eq_symp: \"x \\<sim> y \\<Longrightarrow> y \\<sim> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sim> y \\<Longrightarrow> y \\<sim> x", "by (auto elim: var_eq.cases)"], ["", "lemma var_eq_transp: \"x \\<sim> y \\<Longrightarrow> y \\<sim> z \\<Longrightarrow> x \\<sim> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sim> y; y \\<sim> z\\<rbrakk> \\<Longrightarrow> x \\<sim> z", "by (auto elim!: var_eq.cases)"], ["", "quotient_type ('a, 'b, 'k) var = \"('a, 'b, 'k) var0\" / \"(\\<sim>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (\\<sim>)", "by (auto intro: equivpI reflpI sympI transpI  var_eq_symp var_eq_transp)"], ["", "lift_definition map_var  :: \"('a \\<Rightarrow> 'c) \\<Rightarrow> ('b \\<Rightarrow> 'd) \\<Rightarrow> ('a, 'b, 'k) var \\<Rightarrow> ('c, 'd, 'k) var\"\n  is map_var0"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fun1 fun2 var01 var02.\n       var01 \\<sim> var02 \\<Longrightarrow>\n       map_var0 fun1 fun2 var01 \\<sim> map_var0 fun1 fun2 var02", "by (auto elim!: var_eq.cases simp: map_bset_bsingleton)"], ["", "lift_definition set1_var  :: \"('a, 'b, 'k) var \\<Rightarrow> 'a set\"\n  is set1_var0"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>var01 var02.\n       var01 \\<sim> var02 \\<Longrightarrow>\n       set1_var0 var01 = set1_var0 var02", "by (auto elim!: var_eq.cases)"], ["", "lift_definition set2_var  :: \"('a, 'b, 'k) var \\<Rightarrow> 'b set\"\n  is set2_var0"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>var01 var02.\n       var01 \\<sim> var02 \\<Longrightarrow>\n       set2_var0 var01 = set2_var0 var02", "by (auto elim!: var_eq.cases)"], ["", "inductive rel_var :: \"('a \\<Rightarrow> 'c \\<Rightarrow> bool) \\<Rightarrow> ('b \\<Rightarrow> 'd \\<Rightarrow> bool) \\<Rightarrow> ('a, 'b, 'k) var \\<Rightarrow> ('c, 'd, 'k) var \\<Rightarrow> bool\" for R S where\n  \"set1_var x \\<subseteq> {(x, y). R x y} \\<Longrightarrow> set2_var x \\<subseteq> {(x, y). S x y} \\<Longrightarrow>\n    rel_var R S (map_var fst fst x) (map_var snd snd x)\""], ["", "abbreviation (input) \"var0_of_gen_emb \\<equiv> case_option (BPS bempty) PMF\""], ["", "abbreviation (input) \"var0_of_lts_emb \\<equiv> BPS\""], ["", "lift_definition var_of_gen_emb :: \"('a \\<times> 'b) pmf option \\<Rightarrow> ('a, 'b, 'k) var\" is var0_of_gen_emb"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition var_of_lts_emb :: \"('a \\<times> 'b) set['k] \\<Rightarrow> ('a, 'b, 'k) var\" is var0_of_lts_emb"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "abbreviation \"bisimilar_var \\<equiv> bisimilar (\\<lambda>R. rel_var (=) R)\""], ["", "lemma map_var0_eq_BPS_iff[simp]:\n  \"map_var0 f g z = BPS X \\<longleftrightarrow> (\\<exists>Y. z = BPS Y \\<and> map_bset (map_prod f g) Y = X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (map_var0 f g z = BPS X) =\n    (\\<exists>Y. z = BPS Y \\<and> map_bset (map_prod f g) Y = X)", "by (cases z) auto"], ["", "lemma map_var0_eq_PMF_iff[simp]:\n  \"map_var0 f g z = PMF p \\<longleftrightarrow> (\\<exists>q. z = PMF q \\<and> map_pmf (map_prod f g) q = p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (map_var0 f g z = PMF p) =\n    (\\<exists>q. z = PMF q \\<and> map_pmf (map_prod f g) q = p)", "by (cases z) auto"], ["", "lemma \"bisimilar_lts s1 s2 x y \\<longleftrightarrow> bisimilar_var (var_of_lts_emb o s1) (var_of_lts_emb o s2) x y\"\n  (is \"_ \\<longleftrightarrow> bisimilar_var (?emb1 o _) (?emb2 o _) _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bisimilar_lts s1 s2 x y =\n    bisimilar_var (var_of_lts_emb \\<circ> s1) (var_of_lts_emb \\<circ> s2) x\n     y", "unfolding bisimilar_def o_apply"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>R.\n        R x y \\<and>\n        (\\<forall>x y.\n            R x y \\<longrightarrow>\n            rel_bset (rel_prod (=) R) (s1 x) (s2 y))) =\n    (\\<exists>R.\n        R x y \\<and>\n        (\\<forall>x y.\n            R x y \\<longrightarrow>\n            rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_bset (rel_prod (=) R) (s1 x) (s2 y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_var (=) R (var_of_lts_emb (s1 x))\n                                 (var_of_lts_emb (s2 y)))\n 2. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_lts_emb (s1 x))\n            (var_of_lts_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_bset (rel_prod (=) R) (s1 x) (s2 y))", "fix R"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_bset (rel_prod (=) R) (s1 x) (s2 y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_var (=) R (var_of_lts_emb (s1 x))\n                                 (var_of_lts_emb (s2 y)))\n 2. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_lts_emb (s1 x))\n            (var_of_lts_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_bset (rel_prod (=) R) (s1 x) (s2 y))", "assume \"R x y\" and\n    bis: \"\\<forall>x y. R x y \\<longrightarrow> rel_bset (rel_prod (=) R) (s1 x) (s2 y)\""], ["proof (state)\nthis:\n  R x y\n  \\<forall>x y.\n     R x y \\<longrightarrow> rel_bset (rel_prod (=) R) (s1 x) (s2 y)\n\ngoal (2 subgoals):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_bset (rel_prod (=) R) (s1 x) (s2 y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_var (=) R (var_of_lts_emb (s1 x))\n                                 (var_of_lts_emb (s2 y)))\n 2. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_lts_emb (s1 x))\n            (var_of_lts_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_bset (rel_prod (=) R) (s1 x) (s2 y))", "from \\<open>R x y\\<close>"], ["proof (chain)\npicking this:\n  R x y", "show \"\\<exists>R. R x y \\<and> (\\<forall>x y. R x y \\<longrightarrow> rel_var (=) R (?emb1 (s1 x)) (?emb2 (s2 y)))\""], ["proof (prove)\nusing this:\n  R x y\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       R x y \\<and>\n       (\\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y)))", "proof (intro exI[of _ R], safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_lts_emb (s1 xa))\n                          (var_of_lts_emb (s2 ya))", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_lts_emb (s1 xa))\n                          (var_of_lts_emb (s2 ya))", "assume \"R x y\""], ["proof (state)\nthis:\n  R x y\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_lts_emb (s1 xa))\n                          (var_of_lts_emb (s2 ya))", "with bis"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     R x y \\<longrightarrow> rel_bset (rel_prod (=) R) (s1 x) (s2 y)\n  R x y", "have *: \"rel_bset (rel_prod (=) R) (s1 x) (s2 y)\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     R x y \\<longrightarrow> rel_bset (rel_prod (=) R) (s1 x) (s2 y)\n  R x y\n\ngoal (1 subgoal):\n 1. rel_bset (rel_prod (=) R) (s1 x) (s2 y)", "by blast"], ["proof (state)\nthis:\n  rel_bset (rel_prod (=) R) (s1 x) (s2 y)\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_lts_emb (s1 xa))\n                          (var_of_lts_emb (s2 ya))", "then"], ["proof (chain)\npicking this:\n  rel_bset (rel_prod (=) R) (s1 x) (s2 y)", "obtain z where\n      \"set_bset z \\<subseteq> {(x, y). rel_prod (=) R x y}\" \"map_bset fst z = s1 x\" \"map_bset snd z = s2 y\""], ["proof (prove)\nusing this:\n  rel_bset (rel_prod (=) R) (s1 x) (s2 y)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>set_bset z \\<subseteq> {(x, y). rel_prod (=) R x y};\n         map_bset fst z = s1 x; map_bset snd z = s2 y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: bset.in_rel)"], ["proof (state)\nthis:\n  set_bset z \\<subseteq> {(x, y). rel_prod (=) R x y}\n  map_bset fst z = s1 x\n  map_bset snd z = s2 y\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_lts_emb (s1 xa))\n                          (var_of_lts_emb (s2 ya))", "then"], ["proof (chain)\npicking this:\n  set_bset z \\<subseteq> {(x, y). rel_prod (=) R x y}\n  map_bset fst z = s1 x\n  map_bset snd z = s2 y", "show \"rel_var (=) R (?emb1 (s1 x)) (?emb2 (s2 y))\""], ["proof (prove)\nusing this:\n  set_bset z \\<subseteq> {(x, y). rel_prod (=) R x y}\n  map_bset fst z = s1 x\n  map_bset snd z = s2 y\n\ngoal (1 subgoal):\n 1. rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))", "unfolding rel_var.simps"], ["proof (prove)\nusing this:\n  set_bset z \\<subseteq> {(x, y). rel_prod (=) R x y}\n  map_bset fst z = s1 x\n  map_bset snd z = s2 y\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       var_of_lts_emb (s1 x) = map_var fst fst x \\<and>\n       var_of_lts_emb (s2 y) = map_var snd snd x \\<and>\n       set1_var x \\<subseteq> {(x, y). x = y} \\<and>\n       set2_var x \\<subseteq> {(x, y). R x y}", "by (transfer fixing: z)\n        (force simp: bset.map_comp o_def split_beta prod_set_simps\n        intro: exI[of _ \"BPS (map_bset (\\<lambda>((a,b),(c,d)). ((a,c),(b,d))) z)\"])"], ["proof (state)\nthis:\n  rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     R x y \\<and>\n     (\\<forall>x y.\n         R x y \\<longrightarrow>\n         rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y)))\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_lts_emb (s1 x))\n            (var_of_lts_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_bset (rel_prod (=) R) (s1 x) (s2 y))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_lts_emb (s1 x))\n            (var_of_lts_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_bset (rel_prod (=) R) (s1 x) (s2 y))", "fix R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_lts_emb (s1 x))\n            (var_of_lts_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_bset (rel_prod (=) R) (s1 x) (s2 y))", "assume \"R x y\" and\n    bis: \"\\<forall>x y. R x y \\<longrightarrow> rel_var (=) R (?emb1 (s1 x)) (?emb2 (s2 y))\""], ["proof (state)\nthis:\n  R x y\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_lts_emb (s1 x))\n            (var_of_lts_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_bset (rel_prod (=) R) (s1 x) (s2 y))", "from \\<open>R x y\\<close>"], ["proof (chain)\npicking this:\n  R x y", "show \"\\<exists>R. R x y \\<and> (\\<forall>x y. R x y \\<longrightarrow> rel_bset (rel_prod (=) R) (s1 x) (s2 y))\""], ["proof (prove)\nusing this:\n  R x y\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       R x y \\<and>\n       (\\<forall>x y.\n           R x y \\<longrightarrow> rel_bset (rel_prod (=) R) (s1 x) (s2 y))", "proof (intro exI[of _ R], safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_bset (rel_prod (=) R) (s1 xa) (s2 ya)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_bset (rel_prod (=) R) (s1 xa) (s2 ya)", "assume \"R x y\""], ["proof (state)\nthis:\n  R x y\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_bset (rel_prod (=) R) (s1 xa) (s2 ya)", "with bis"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))\n  R x y", "have \"rel_var (=) R (?emb1 (s1 x)) (?emb2 (s2 y))\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))\n  R x y\n\ngoal (1 subgoal):\n 1. rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))", "by blast"], ["proof (state)\nthis:\n  rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_bset (rel_prod (=) R) (s1 xa) (s2 ya)", "then"], ["proof (chain)\npicking this:\n  rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))", "obtain z where *:\n      \"set1_var z \\<subseteq> {(x, y). x = y}\" \"set2_var z \\<subseteq> {(x, y). R x y}\"\n      \"?emb1 (s1 x) = map_var fst fst z\" \"?emb2 (s2 y) = map_var snd snd z\""], ["proof (prove)\nusing this:\n  rel_var (=) R (var_of_lts_emb (s1 x)) (var_of_lts_emb (s2 y))\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n         set2_var z \\<subseteq> {(x, y). R x y};\n         var_of_lts_emb (s1 x) = map_var fst fst z;\n         var_of_lts_emb (s2 y) = map_var snd snd z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: rel_var.simps)"], ["proof (state)\nthis:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_lts_emb (s1 x) = map_var fst fst z\n  var_of_lts_emb (s2 y) = map_var snd snd z\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_bset (rel_prod (=) R) (s1 xa) (s2 ya)", "then"], ["proof (chain)\npicking this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_lts_emb (s1 x) = map_var fst fst z\n  var_of_lts_emb (s2 y) = map_var snd snd z", "show \"rel_bset (rel_prod (=) R) (s1 x) (s2 y)\""], ["proof (prove)\nusing this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_lts_emb (s1 x) = map_var fst fst z\n  var_of_lts_emb (s2 y) = map_var snd snd z\n\ngoal (1 subgoal):\n 1. rel_bset (rel_prod (=) R) (s1 x) (s2 y)", "by (transfer fixing: s1 s2) (fastforce simp: bset.in_rel bset.map_comp o_def map_pmf_eq_return_pmf_iff\n        split_beta[abs_def] map_prod_def subset_eq split_beta prod_set_defs elim!: var_eq.cases\n        intro: exI[of _ \"map_bset (\\<lambda>((a,b),(c,d)). ((a,c),(b,d))) z\" for z]\n          exI[of _ \"bsingleton ((a,c),(b,d))\" for a b c d])"], ["proof (state)\nthis:\n  rel_bset (rel_prod (=) R) (s1 x) (s2 y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     R x y \\<and>\n     (\\<forall>x y.\n         R x y \\<longrightarrow> rel_bset (rel_prod (=) R) (s1 x) (s2 y))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \"bisimilar_gen s1 s2 x y \\<longleftrightarrow> bisimilar_var (var_of_gen_emb o s1) (var_of_gen_emb o s2) x y\"\n  (is \"_ \\<longleftrightarrow> bisimilar_var (?emb1 o _) (?emb2 o _) _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bisimilar_gen s1 s2 x y =\n    bisimilar_var (var_of_gen_emb \\<circ> s1) (var_of_gen_emb \\<circ> s2) x\n     y", "unfolding bisimilar_def o_apply"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>R.\n        R x y \\<and>\n        (\\<forall>x y.\n            R x y \\<longrightarrow>\n            rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y))) =\n    (\\<exists>R.\n        R x y \\<and>\n        (\\<forall>x y.\n            R x y \\<longrightarrow>\n            rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_var (=) R (var_of_gen_emb (s1 x))\n                                 (var_of_gen_emb (s2 y)))\n 2. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_gen_emb (s1 x))\n            (var_of_gen_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_option (rel_pmf (rel_prod (=) R)) (s1 x)\n                                 (s2 y))", "fix R"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_var (=) R (var_of_gen_emb (s1 x))\n                                 (var_of_gen_emb (s2 y)))\n 2. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_gen_emb (s1 x))\n            (var_of_gen_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_option (rel_pmf (rel_prod (=) R)) (s1 x)\n                                 (s2 y))", "assume \"R x y\" and\n    bis: \"\\<forall>x y. R x y \\<longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\""], ["proof (state)\nthis:\n  R x y\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n\ngoal (2 subgoals):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_var (=) R (var_of_gen_emb (s1 x))\n                                 (var_of_gen_emb (s2 y)))\n 2. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_gen_emb (s1 x))\n            (var_of_gen_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_option (rel_pmf (rel_prod (=) R)) (s1 x)\n                                 (s2 y))", "from \\<open>R x y\\<close>"], ["proof (chain)\npicking this:\n  R x y", "show \"\\<exists>R. R x y \\<and> (\\<forall>x y. R x y \\<longrightarrow> rel_var (=) R (?emb1 (s1 x)) (?emb2 (s2 y)))\""], ["proof (prove)\nusing this:\n  R x y\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       R x y \\<and>\n       (\\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y)))", "proof (intro exI[of _ R], safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 xa))\n                          (var_of_gen_emb (s2 ya))", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 xa))\n                          (var_of_gen_emb (s2 ya))", "assume \"R x y\""], ["proof (state)\nthis:\n  R x y\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 xa))\n                          (var_of_gen_emb (s2 ya))", "with bis"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n  R x y", "have *: \"rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n  R x y\n\ngoal (1 subgoal):\n 1. rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "by blast"], ["proof (state)\nthis:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 xa))\n                          (var_of_gen_emb (s2 ya))", "then"], ["proof (chain)\npicking this:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "show \"rel_var (=) R (?emb1 (s1 x)) (?emb2 (s2 y))\""], ["proof (prove)\nusing this:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n\ngoal (1 subgoal):\n 1. rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))", "proof (cases \"s1 x\" \"s2 y\" rule: option.exhaust[case_product option.exhaust])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n     s1 x = None; s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                       (var_of_gen_emb (s2 y))\n 2. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = None; s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 3. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 4. \\<And>x2__ x2a__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))", "case None_None"], ["proof (state)\nthis:\n  s1 x = None\n  s2 y = None\n\ngoal (4 subgoals):\n 1. \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n     s1 x = None; s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                       (var_of_gen_emb (s2 y))\n 2. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = None; s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 3. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 4. \\<And>x2__ x2a__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))", "then"], ["proof (chain)\npicking this:\n  s1 x = None\n  s2 y = None", "show ?thesis"], ["proof (prove)\nusing this:\n  s1 x = None\n  s2 y = None\n\ngoal (1 subgoal):\n 1. rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))", "unfolding rel_var.simps"], ["proof (prove)\nusing this:\n  s1 x = None\n  s2 y = None\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       var_of_gen_emb (s1 x) = map_var fst fst x \\<and>\n       var_of_gen_emb (s2 y) = map_var snd snd x \\<and>\n       set1_var x \\<subseteq> {(x, y). x = y} \\<and>\n       set2_var x \\<subseteq> {(x, y). R x y}", "by (transfer fixing: s1 s2) (auto simp: bempty.rep_eq intro!: exI[of _ \"BPS bempty\"])"], ["proof (state)\nthis:\n  rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))\n\ngoal (3 subgoals):\n 1. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = None; s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 2. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 3. \\<And>x2__ x2a__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = None; s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 2. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 3. \\<And>x2__ x2a__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))", "case (Some_Some p q)"], ["proof (state)\nthis:\n  s1 x = Some p\n  s2 y = Some q\n\ngoal (3 subgoals):\n 1. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = None; s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 2. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 3. \\<And>x2__ x2a__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))", "with *"], ["proof (chain)\npicking this:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n  s1 x = Some p\n  s2 y = Some q", "obtain z where\n        \"set_pmf z \\<subseteq> {(x, y). rel_prod (=) R x y}\" \"map_pmf fst z = p\" \"map_pmf snd z = q\""], ["proof (prove)\nusing this:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n  s1 x = Some p\n  s2 y = Some q\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>set_pmf z \\<subseteq> {(x, y). rel_prod (=) R x y};\n         map_pmf fst z = p; map_pmf snd z = q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: pmf.in_rel)"], ["proof (state)\nthis:\n  set_pmf z \\<subseteq> {(x, y). rel_prod (=) R x y}\n  map_pmf fst z = p\n  map_pmf snd z = q\n\ngoal (3 subgoals):\n 1. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = None; s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 2. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 3. \\<And>x2__ x2a__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))", "with Some_Some"], ["proof (chain)\npicking this:\n  s1 x = Some p\n  s2 y = Some q\n  set_pmf z \\<subseteq> {(x, y). rel_prod (=) R x y}\n  map_pmf fst z = p\n  map_pmf snd z = q", "show ?thesis"], ["proof (prove)\nusing this:\n  s1 x = Some p\n  s2 y = Some q\n  set_pmf z \\<subseteq> {(x, y). rel_prod (=) R x y}\n  map_pmf fst z = p\n  map_pmf snd z = q\n\ngoal (1 subgoal):\n 1. rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))", "unfolding rel_var.simps"], ["proof (prove)\nusing this:\n  s1 x = Some p\n  s2 y = Some q\n  set_pmf z \\<subseteq> {(x, y). rel_prod (=) R x y}\n  map_pmf fst z = p\n  map_pmf snd z = q\n\ngoal (1 subgoal):\n 1. \\<exists>x.\n       var_of_gen_emb (s1 x) = map_var fst fst x \\<and>\n       var_of_gen_emb (s2 y) = map_var snd snd x \\<and>\n       set1_var x \\<subseteq> {(x, y). x = y} \\<and>\n       set2_var x \\<subseteq> {(x, y). R x y}", "by (transfer fixing: s1 s2 z) (force simp: pmf.map_comp o_def split_beta prod_set_simps\n          intro: exI[of _ \"PMF (map_pmf (\\<lambda>((a,b),(c,d)). ((a,c),(b,d))) z)\"])"], ["proof (state)\nthis:\n  rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))\n\ngoal (2 subgoals):\n 1. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = None; s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))\n 2. \\<And>x2__.\n       \\<lbrakk>rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y);\n        s1 x = Some x2__; s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_var (=) R (var_of_gen_emb (s1 x))\n                          (var_of_gen_emb (s2 y))", "qed auto"], ["proof (state)\nthis:\n  rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     R x y \\<and>\n     (\\<forall>x y.\n         R x y \\<longrightarrow>\n         rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y)))\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_gen_emb (s1 x))\n            (var_of_gen_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_option (rel_pmf (rel_prod (=) R)) (s1 x)\n                                 (s2 y))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_gen_emb (s1 x))\n            (var_of_gen_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_option (rel_pmf (rel_prod (=) R)) (s1 x)\n                                 (s2 y))", "fix R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_gen_emb (s1 x))\n            (var_of_gen_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_option (rel_pmf (rel_prod (=) R)) (s1 x)\n                                 (s2 y))", "assume \"R x y\" and\n    bis: \"\\<forall>x y. R x y \\<longrightarrow> rel_var (=) R (?emb1 (s1 x)) (?emb2 (s2 y))\""], ["proof (state)\nthis:\n  R x y\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>R x y;\n        \\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_var (=) R (var_of_gen_emb (s1 x))\n            (var_of_gen_emb (s2 y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            R x y \\<and>\n                            (\\<forall>x y.\n                                R x y \\<longrightarrow>\n                                rel_option (rel_pmf (rel_prod (=) R)) (s1 x)\n                                 (s2 y))", "from \\<open>R x y\\<close>"], ["proof (chain)\npicking this:\n  R x y", "show \"\\<exists>R. R x y \\<and> (\\<forall>x y. R x y \\<longrightarrow>\n     rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y))\""], ["proof (prove)\nusing this:\n  R x y\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       R x y \\<and>\n       (\\<forall>x y.\n           R x y \\<longrightarrow>\n           rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y))", "proof (intro exI[of _ R], safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 xa)\n                          (s2 ya)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 xa)\n                          (s2 ya)", "assume \"R x y\""], ["proof (state)\nthis:\n  R x y\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 xa)\n                          (s2 ya)", "with bis"], ["proof (chain)\npicking this:\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))\n  R x y", "have \"rel_var (=) R (?emb1 (s1 x)) (?emb2 (s2 y))\""], ["proof (prove)\nusing this:\n  \\<forall>x y.\n     R x y \\<longrightarrow>\n     rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))\n  R x y\n\ngoal (1 subgoal):\n 1. rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))", "by blast"], ["proof (state)\nthis:\n  rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 xa)\n                          (s2 ya)", "then"], ["proof (chain)\npicking this:\n  rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))", "obtain z where *:\n        \"set1_var z \\<subseteq> {(x, y). x = y}\" \"set2_var z \\<subseteq> {(x, y). R x y}\"\n        \"?emb1 (s1 x) = map_var fst fst z\" \"?emb2 (s2 y) = map_var snd snd z\""], ["proof (prove)\nusing this:\n  rel_var (=) R (var_of_gen_emb (s1 x)) (var_of_gen_emb (s2 y))\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n         set2_var z \\<subseteq> {(x, y). R x y};\n         var_of_gen_emb (s1 x) = map_var fst fst z;\n         var_of_gen_emb (s2 y) = map_var snd snd z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: rel_var.simps)"], ["proof (state)\nthis:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       \\<lbrakk>R x y; R x y; R xa ya\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 xa)\n                          (s2 ya)", "then"], ["proof (chain)\npicking this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z", "show \"rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\""], ["proof (prove)\nusing this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z\n\ngoal (1 subgoal):\n 1. rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "proof (cases \"s1 x\" \"s2 y\" rule: option.exhaust[case_product option.exhaust])"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 2. \\<And>x2__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n        s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 3. \\<And>x2__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 4. \\<And>x2__ x2a__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "case Some_None"], ["proof (state)\nthis:\n  s1 x = Some x2_\n  s2 y = None\n\ngoal (4 subgoals):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 2. \\<And>x2__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n        s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 3. \\<And>x2__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = None\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 4. \\<And>x2__ x2a__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "with *"], ["proof (chain)\npicking this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z\n  s1 x = Some x2_\n  s2 y = None", "show ?thesis"], ["proof (prove)\nusing this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z\n  s1 x = Some x2_\n  s2 y = None\n\ngoal (1 subgoal):\n 1. rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "by transfer (auto simp: bempty.rep_eq elim!: var_eq.cases)"], ["proof (state)\nthis:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 2. \\<And>x2__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n        s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 3. \\<And>x2__ x2a__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 2. \\<And>x2__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n        s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 3. \\<And>x2__ x2a__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "case None_Some"], ["proof (state)\nthis:\n  s1 x = None\n  s2 y = Some x2_\n\ngoal (3 subgoals):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 2. \\<And>x2__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n        s2 y = Some x2__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 3. \\<And>x2__ x2a__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "with *"], ["proof (chain)\npicking this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z\n  s1 x = None\n  s2 y = Some x2_", "show ?thesis"], ["proof (prove)\nusing this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z\n  s1 x = None\n  s2 y = Some x2_\n\ngoal (1 subgoal):\n 1. rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "by transfer (auto elim!: var_eq.cases)"], ["proof (state)\nthis:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 2. \\<And>x2__ x2a__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 2. \\<And>x2__ x2a__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "case (Some_Some p q)"], ["proof (state)\nthis:\n  s1 x = Some p\n  s2 y = Some q\n\ngoal (2 subgoals):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n 2. \\<And>x2__ x2a__.\n       \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n        set2_var z \\<subseteq> {(x, y). R x y};\n        var_of_gen_emb (s1 x) = map_var fst fst z;\n        var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = Some x2__;\n        s2 y = Some x2a__\\<rbrakk>\n       \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "with *"], ["proof (chain)\npicking this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z\n  s1 x = Some p\n  s2 y = Some q", "show ?thesis"], ["proof (prove)\nusing this:\n  set1_var z \\<subseteq> {(x, y). x = y}\n  set2_var z \\<subseteq> {(x, y). R x y}\n  var_of_gen_emb (s1 x) = map_var fst fst z\n  var_of_gen_emb (s2 y) = map_var snd snd z\n  s1 x = Some p\n  s2 y = Some q\n\ngoal (1 subgoal):\n 1. rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "by transfer (fastforce simp: subset_eq split_beta prod_set_defs\n          elim!: var_eq.cases intro!: rel_pmf_reflI)"], ["proof (state)\nthis:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>set1_var z \\<subseteq> {(x, y). x = y};\n     set2_var z \\<subseteq> {(x, y). R x y};\n     var_of_gen_emb (s1 x) = map_var fst fst z;\n     var_of_gen_emb (s2 y) = map_var snd snd z; s1 x = None;\n     s2 y = None\\<rbrakk>\n    \\<Longrightarrow> rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)", "qed simp"], ["proof (state)\nthis:\n  rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>R.\n     R x y \\<and>\n     (\\<forall>x y.\n         R x y \\<longrightarrow>\n         rel_option (rel_pmf (rel_prod (=) R)) (s1 x) (s2 y))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}