{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/ICF/impl/BinoPrioImpl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemmas bino_defs =\n  bino_\\<alpha>_def\n  bino_insert_def\n  bino_find_def\n  bino_delete_def\n  bino_meld_def\n  bino_empty_def\n  bino_isEmpty_def", "theorem bino_empty_impl: \"prio_empty bino_\\<alpha> bino_invar bino_empty\"", "theorem bino_isEmpty_impl: \"prio_isEmpty bino_\\<alpha> bino_invar bino_isEmpty\"", "theorem bino_find_impl: \"prio_find bino_\\<alpha> bino_invar bino_find\"", "lemma bino_insert_impl: \"prio_insert bino_\\<alpha> bino_invar bino_insert\"", "lemma bino_meld_impl: \"prio_meld bino_\\<alpha> bino_invar bino_meld\"", "lemma bino_delete_impl: \n  \"prio_delete bino_\\<alpha> bino_invar bino_find bino_delete\""], "translations": [["", "lemmas bino_defs =\n  bino_\\<alpha>_def\n  bino_insert_def\n  bino_find_def\n  bino_delete_def\n  bino_meld_def\n  bino_empty_def\n  bino_isEmpty_def"], ["", "subsection \"Correctness\""], ["", "theorem bino_empty_impl: \"prio_empty bino_\\<alpha> bino_invar bino_empty\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prio_empty bino_\\<alpha> (\\<lambda>_. True) bino_empty", "by (unfold_locales, auto simp add: bino_defs)"], ["", "theorem bino_isEmpty_impl: \"prio_isEmpty bino_\\<alpha> bino_invar bino_isEmpty\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prio_isEmpty bino_\\<alpha> (\\<lambda>_. True) bino_isEmpty", "by unfold_locales \n     (simp add: bino_defs BinomialHeap.isEmpty_correct BinomialHeap.empty_correct)"], ["", "theorem bino_find_impl: \"prio_find bino_\\<alpha> bino_invar bino_find\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prio_find bino_\\<alpha> (\\<lambda>_. True) bino_find", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>True; bino_\\<alpha> p \\<noteq> {#}\\<rbrakk>\n       \\<Longrightarrow> bino_find p \\<in># bino_\\<alpha> p \\<and>\n                         (\\<forall>y\\<in>#bino_\\<alpha> p.\n                             snd (bino_find p) \\<le> snd y)", "apply (simp add: bino_defs BinomialHeap.empty_correct BinomialHeap.findMin_correct)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bino_insert_impl: \"prio_insert bino_\\<alpha> bino_invar bino_insert\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prio_insert bino_\\<alpha> (\\<lambda>_. True) bino_insert", "apply(unfold_locales)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p e a. True \\<Longrightarrow> True\n 2. \\<And>p e a.\n       True \\<Longrightarrow>\n       bino_\\<alpha> (bino_insert e a p) = bino_\\<alpha> p + {#(e, a)#}", "apply(unfold bino_defs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p e a. True \\<Longrightarrow> True\n 2. \\<And>p e a.\n       True \\<Longrightarrow>\n       BinomialHeap.to_mset (BinomialHeap.insert e a p) =\n       BinomialHeap.to_mset p + {#(e, a)#}", "apply (simp_all add: BinomialHeap.insert_correct)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bino_meld_impl: \"prio_meld bino_\\<alpha> bino_invar bino_meld\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prio_meld bino_\\<alpha> (\\<lambda>_. True) bino_meld", "apply(unfold_locales)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p p'. \\<lbrakk>True; True\\<rbrakk> \\<Longrightarrow> True\n 2. \\<And>p p'.\n       \\<lbrakk>True; True\\<rbrakk>\n       \\<Longrightarrow> bino_\\<alpha> (bino_meld p p') =\n                         bino_\\<alpha> p + bino_\\<alpha> p'", "apply(unfold bino_defs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p p'. \\<lbrakk>True; True\\<rbrakk> \\<Longrightarrow> True\n 2. \\<And>p p'.\n       \\<lbrakk>True; True\\<rbrakk>\n       \\<Longrightarrow> BinomialHeap.to_mset (BinomialHeap.meld p p') =\n                         BinomialHeap.to_mset p + BinomialHeap.to_mset p'", "apply(simp_all add: BinomialHeap.meld_correct)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bino_delete_impl: \n  \"prio_delete bino_\\<alpha> bino_invar bino_find bino_delete\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prio_delete bino_\\<alpha> (\\<lambda>_. True) bino_find bino_delete", "apply intro_locales"], ["proof (prove)\ngoal (2 subgoals):\n 1. prio_find bino_\\<alpha> (\\<lambda>_. True) bino_find\n 2. prio_delete_axioms bino_\\<alpha> (\\<lambda>_. True) bino_find\n     bino_delete", "apply (rule bino_find_impl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. prio_delete_axioms bino_\\<alpha> (\\<lambda>_. True) bino_find\n     bino_delete", "apply(unfold_locales)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>True; bino_\\<alpha> p \\<noteq> {#}\\<rbrakk>\n       \\<Longrightarrow> True\n 2. \\<And>p.\n       \\<lbrakk>True; bino_\\<alpha> p \\<noteq> {#}\\<rbrakk>\n       \\<Longrightarrow> bino_\\<alpha> (bino_delete p) =\n                         bino_\\<alpha> p - {#bino_find p#}", "apply(simp_all add: bino_defs BinomialHeap.empty_correct BinomialHeap.deleteMin_correct)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "setup Locale_Code.open_block"], ["", "interpretation bino: StdPrio bino_ops"], ["proof (prove)\ngoal (1 subgoal):\n 1. StdPrio bino_ops", "apply (rule StdPrio.intro)"], ["proof (prove)\ngoal (6 subgoals):\n 1. prio_empty (prio_op_\\<alpha> bino_ops) (prio_op_invar bino_ops)\n     (prio_op_empty bino_ops)\n 2. prio_isEmpty (prio_op_\\<alpha> bino_ops) (prio_op_invar bino_ops)\n     (prio_op_isEmpty bino_ops)\n 3. prio_find (prio_op_\\<alpha> bino_ops) (prio_op_invar bino_ops)\n     (prio_op_find bino_ops)\n 4. prio_insert (prio_op_\\<alpha> bino_ops) (prio_op_invar bino_ops)\n     (prio_op_insert bino_ops)\n 5. prio_meld (prio_op_\\<alpha> bino_ops) (prio_op_invar bino_ops)\n     (prio_op_meld bino_ops)\n 6. prio_delete (prio_op_\\<alpha> bino_ops) (prio_op_invar bino_ops)\n     (prio_op_find bino_ops) (prio_op_delete bino_ops)", "apply (simp_all add: icf_rec_unf)"], ["proof (prove)\ngoal (6 subgoals):\n 1. prio_empty bino_\\<alpha> (\\<lambda>_. True) bino_empty\n 2. prio_isEmpty bino_\\<alpha> (\\<lambda>_. True) bino_isEmpty\n 3. prio_find bino_\\<alpha> (\\<lambda>_. True) bino_find\n 4. prio_insert bino_\\<alpha> (\\<lambda>_. True) bino_insert\n 5. prio_meld bino_\\<alpha> (\\<lambda>_. True) bino_meld\n 6. prio_delete bino_\\<alpha> (\\<lambda>_. True) bino_find bino_delete", "apply (rule \n    bino_empty_impl\n    bino_isEmpty_impl\n    bino_find_impl\n    bino_insert_impl\n    bino_meld_impl\n    bino_delete_impl\n  )+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "interpretation bino: StdPrio_no_invar bino_ops"], ["proof (prove)\ngoal (1 subgoal):\n 1. StdPrio_no_invar bino_ops", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. bino.invar s", "apply (simp add: icf_rec_unf)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "setup Locale_Code.close_block"], ["", "setup \\<open>ICF_Tools.revert_abbrevs \"bino\"\\<close>"], ["", "definition test_codegen where \"test_codegen = (\n  bino.empty,\n  bino.isEmpty,\n  bino.find,\n  bino.insert,\n  bino.meld,\n  bino.delete\n)\""], ["", "export_code test_codegen checking SML"], ["", "end"]]}