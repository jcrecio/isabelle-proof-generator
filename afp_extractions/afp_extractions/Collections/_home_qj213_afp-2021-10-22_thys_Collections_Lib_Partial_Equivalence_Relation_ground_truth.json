{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/Lib/Partial_Equivalence_Relation.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemma part_equivI[intro?]: \"\\<lbrakk>sym R; trans R\\<rbrakk> \\<Longrightarrow> part_equiv R\"", "lemma part_equiv_refl:\n  \"part_equiv R \\<Longrightarrow> (x,y)\\<in>R \\<Longrightarrow> (x,x)\\<in>R\"\n  \"part_equiv R \\<Longrightarrow> (x,y)\\<in>R \\<Longrightarrow> (y,y)\\<in>R\"", "lemma part_equiv_sym: \"part_equiv R \\<Longrightarrow> (x,y)\\<in>R \\<Longrightarrow> (y,x)\\<in>R\"", "lemma part_equiv_trans: \"part_equiv R \\<Longrightarrow> (x,y)\\<in>R \\<Longrightarrow> (y,z)\\<in>R \\<Longrightarrow> (x,z)\\<in>R\"", "lemma part_equiv_trans_sym: \n  \"\\<lbrakk> part_equiv R; (a,b)\\<in>R; (c,b)\\<in>R \\<rbrakk> \\<Longrightarrow> (a,c)\\<in>R\"\n  \"\\<lbrakk> part_equiv R; (a,b)\\<in>R; (a,c)\\<in>R \\<rbrakk> \\<Longrightarrow> (b,c)\\<in>R\"", "lemma sym_symcl[simp, intro!]: \"sym (symcl R)\"", "lemma sym_trans_is_part_equiv[simp, intro!]: \"part_equiv ((symcl R)\\<^sup>*)\"", "lemma union_part_equivp: \n  \"part_equiv R \\<Longrightarrow> part_equiv (per_union R a b)\"", "lemma per_union_cmp: \n  \"\\<lbrakk> part_equiv R; (l,j)\\<in>R \\<rbrakk> \\<Longrightarrow> per_union R l j = R\"", "lemma per_union_same[simp]: \"part_equiv R \\<Longrightarrow> per_union R l l = R\"", "lemma per_union_commute[simp]: \"per_union R i j = per_union R j i\"", "lemma per_union_dom[simp]: \"Domain (per_union R i j) = Domain R\"", "lemma per_classes_dj: \n  \"\\<lbrakk>part_equiv R; (i,j)\\<notin>R\\<rbrakk> \\<Longrightarrow> R``{i} \\<inter> R``{j} = {}\"", "lemma per_class_in_dom: \"\\<lbrakk>part_equiv R\\<rbrakk> \\<Longrightarrow> R``{i} \\<subseteq> Domain R\""], "translations": [["", "lemma part_equivI[intro?]: \"\\<lbrakk>sym R; trans R\\<rbrakk> \\<Longrightarrow> part_equiv R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sym R; trans R\\<rbrakk> \\<Longrightarrow> part_equiv R", "by (simp add: part_equiv_def)"], ["", "lemma part_equiv_refl:\n  \"part_equiv R \\<Longrightarrow> (x,y)\\<in>R \\<Longrightarrow> (x,x)\\<in>R\"\n  \"part_equiv R \\<Longrightarrow> (x,y)\\<in>R \\<Longrightarrow> (y,y)\\<in>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>part_equiv R; (x, y) \\<in> R\\<rbrakk>\n     \\<Longrightarrow> (x, x) \\<in> R) &&&\n    (\\<lbrakk>part_equiv R; (x, y) \\<in> R\\<rbrakk>\n     \\<Longrightarrow> (y, y) \\<in> R)", "by (metis part_equiv_def symD transD)+"], ["", "lemma part_equiv_sym: \"part_equiv R \\<Longrightarrow> (x,y)\\<in>R \\<Longrightarrow> (y,x)\\<in>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>part_equiv R; (x, y) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> (y, x) \\<in> R", "by (metis part_equiv_def symD)"], ["", "lemma part_equiv_trans: \"part_equiv R \\<Longrightarrow> (x,y)\\<in>R \\<Longrightarrow> (y,z)\\<in>R \\<Longrightarrow> (x,z)\\<in>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>part_equiv R; (x, y) \\<in> R; (y, z) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> (x, z) \\<in> R", "by (metis part_equiv_def transD)"], ["", "lemma part_equiv_trans_sym: \n  \"\\<lbrakk> part_equiv R; (a,b)\\<in>R; (c,b)\\<in>R \\<rbrakk> \\<Longrightarrow> (a,c)\\<in>R\"\n  \"\\<lbrakk> part_equiv R; (a,b)\\<in>R; (a,c)\\<in>R \\<rbrakk> \\<Longrightarrow> (b,c)\\<in>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>part_equiv R; (a, b) \\<in> R; (c, b) \\<in> R\\<rbrakk>\n     \\<Longrightarrow> (a, c) \\<in> R) &&&\n    (\\<lbrakk>part_equiv R; (a, b) \\<in> R; (a, c) \\<in> R\\<rbrakk>\n     \\<Longrightarrow> (b, c) \\<in> R)", "apply (metis part_equiv_sym part_equiv_trans)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>We define a shortcut for symmetric closure.\\<close>"], ["", "definition \"symcl R \\<equiv> R \\<union> R\\<inverse>\""], ["", "lemma sym_symcl[simp, intro!]: \"sym (symcl R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (symcl R)", "by (metis sym_Un_converse symcl_def)"], ["", "lemma sym_trans_is_part_equiv[simp, intro!]: \"part_equiv ((symcl R)\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part_equiv ((symcl R)\\<^sup>*)", "by (metis part_equiv_def sym_rtrancl sym_symcl trans_rtrancl)"], ["", "text \\<open>We also define a shortcut for melding the equivalence classes of\n  two given elements\\<close>"], ["", "definition per_union where \"per_union R a b \\<equiv> R \\<union> \n  { (x,y). (x,a)\\<in>R \\<and> (y,b)\\<in>R } \\<union> { (y,x). (x,a)\\<in>R \\<and> (y,b)\\<in>R }\""], ["", "lemma union_part_equivp: \n  \"part_equiv R \\<Longrightarrow> part_equiv (per_union R a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part_equiv R \\<Longrightarrow> part_equiv (per_union R a b)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. part_equiv R \\<Longrightarrow> sym (per_union R a b)\n 2. part_equiv R \\<Longrightarrow> trans (per_union R a b)", "unfolding per_union_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. part_equiv R \\<Longrightarrow>\n    sym (R \\<union> {(x, y). (x, a) \\<in> R \\<and> (y, b) \\<in> R} \\<union>\n         {(y, x). (x, a) \\<in> R \\<and> (y, b) \\<in> R})\n 2. part_equiv R \\<Longrightarrow>\n    trans\n     (R \\<union> {(x, y). (x, a) \\<in> R \\<and> (y, b) \\<in> R} \\<union>\n      {(y, x). (x, a) \\<in> R \\<and> (y, b) \\<in> R})", "apply (rule symI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>part_equiv R;\n        (aa, ba)\n        \\<in> R \\<union>\n              {(x, y). (x, a) \\<in> R \\<and> (y, b) \\<in> R} \\<union>\n              {(y, x). (x, a) \\<in> R \\<and> (y, b) \\<in> R}\\<rbrakk>\n       \\<Longrightarrow> (ba, aa)\n                         \\<in> R \\<union>\n                               {(x, y).\n                                (x, a) \\<in> R \\<and>\n                                (y, b) \\<in> R} \\<union>\n                               {(y, x).\n                                (x, a) \\<in> R \\<and> (y, b) \\<in> R}\n 2. part_equiv R \\<Longrightarrow>\n    trans\n     (R \\<union> {(x, y). (x, a) \\<in> R \\<and> (y, b) \\<in> R} \\<union>\n      {(y, x). (x, a) \\<in> R \\<and> (y, b) \\<in> R})", "apply (auto dest: part_equiv_sym) []"], ["proof (prove)\ngoal (1 subgoal):\n 1. part_equiv R \\<Longrightarrow>\n    trans\n     (R \\<union> {(x, y). (x, a) \\<in> R \\<and> (y, b) \\<in> R} \\<union>\n      {(y, x). (x, a) \\<in> R \\<and> (y, b) \\<in> R})", "apply (rule transI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>part_equiv R;\n        (x, y)\n        \\<in> R \\<union>\n              {(x, y). (x, a) \\<in> R \\<and> (y, b) \\<in> R} \\<union>\n              {(y, x). (x, a) \\<in> R \\<and> (y, b) \\<in> R};\n        (y, z)\n        \\<in> R \\<union>\n              {(x, y). (x, a) \\<in> R \\<and> (y, b) \\<in> R} \\<union>\n              {(y, x). (x, a) \\<in> R \\<and> (y, b) \\<in> R}\\<rbrakk>\n       \\<Longrightarrow> (x, z)\n                         \\<in> R \\<union>\n                               {(x, y).\n                                (x, a) \\<in> R \\<and>\n                                (y, b) \\<in> R} \\<union>\n                               {(y, x).\n                                (x, a) \\<in> R \\<and> (y, b) \\<in> R}", "apply (auto dest: part_equiv_trans part_equiv_trans_sym)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma per_union_cmp: \n  \"\\<lbrakk> part_equiv R; (l,j)\\<in>R \\<rbrakk> \\<Longrightarrow> per_union R l j = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>part_equiv R; (l, j) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> per_union R l j = R", "unfolding per_union_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>part_equiv R; (l, j) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> R \\<union>\n                      {(x, y).\n                       (x, l) \\<in> R \\<and> (y, j) \\<in> R} \\<union>\n                      {(y, x). (x, l) \\<in> R \\<and> (y, j) \\<in> R} =\n                      R", "by (auto dest: part_equiv_trans_sym)"], ["", "lemma per_union_same[simp]: \"part_equiv R \\<Longrightarrow> per_union R l l = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part_equiv R \\<Longrightarrow> per_union R l l = R", "unfolding per_union_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. part_equiv R \\<Longrightarrow>\n    R \\<union> {(x, y). (x, l) \\<in> R \\<and> (y, l) \\<in> R} \\<union>\n    {(y, x). (x, l) \\<in> R \\<and> (y, l) \\<in> R} =\n    R", "by (auto dest: part_equiv_trans_sym)"], ["", "lemma per_union_commute[simp]: \"per_union R i j = per_union R j i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. per_union R i j = per_union R j i", "unfolding per_union_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<union> {(x, y). (x, i) \\<in> R \\<and> (y, j) \\<in> R} \\<union>\n    {(y, x). (x, i) \\<in> R \\<and> (y, j) \\<in> R} =\n    R \\<union> {(x, y). (x, j) \\<in> R \\<and> (y, i) \\<in> R} \\<union>\n    {(y, x). (x, j) \\<in> R \\<and> (y, i) \\<in> R}", "by auto"], ["", "lemma per_union_dom[simp]: \"Domain (per_union R i j) = Domain R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain (per_union R i j) = Domain R", "unfolding per_union_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Domain\n     (R \\<union> {(x, y). (x, i) \\<in> R \\<and> (y, j) \\<in> R} \\<union>\n      {(y, x). (x, i) \\<in> R \\<and> (y, j) \\<in> R}) =\n    Domain R", "by auto"], ["", "lemma per_classes_dj: \n  \"\\<lbrakk>part_equiv R; (i,j)\\<notin>R\\<rbrakk> \\<Longrightarrow> R``{i} \\<inter> R``{j} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>part_equiv R; (i, j) \\<notin> R\\<rbrakk>\n    \\<Longrightarrow> R `` {i} \\<inter> R `` {j} = {}", "by (auto dest: part_equiv_trans_sym)"], ["", "lemma per_class_in_dom: \"\\<lbrakk>part_equiv R\\<rbrakk> \\<Longrightarrow> R``{i} \\<subseteq> Domain R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part_equiv R \\<Longrightarrow> R `` {i} \\<subseteq> Domain R", "by (auto dest: part_equiv_trans_sym)"], ["", "end"]]}