{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/ICF/impl/HashSet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemmas hs_it_to_it_map_code_unfold[code_unfold] = \n  it_to_it_map_fold'[OF pi_hm]", "lemma pi_hs[proper_it]: \"proper_it' hs.iteratei hs.iteratei\""], "translations": [["", "lemmas hs_it_to_it_map_code_unfold[code_unfold] = \n  it_to_it_map_fold'[OF pi_hm]"], ["", "lemma pi_hs[proper_it]: \"proper_it' hs.iteratei hs.iteratei\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' hs.iteratei hs.iteratei", "unfolding hs.iteratei_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' (\\<lambda>S. it_to_it (hs.list_it S))\n     (\\<lambda>S. it_to_it (hs.list_it S))", "by (rule proper_it'I icf_proper_iteratorI)+"], ["", "interpretation pi_hs: proper_it_loc hs.iteratei hs.iteratei"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it_loc hs.iteratei hs.iteratei", "by unfold_locales (rule pi_hs)"], ["", "definition test_codegen where \"test_codegen \\<equiv> (\n  hs.empty,\n  hs.memb,\n  hs.ins,\n  hs.delete,\n  hs.list_it,\n  hs.sng,\n  hs.isEmpty,\n  hs.isSng,\n  hs.ball,\n  hs.bex,\n  hs.size,\n  hs.size_abort,\n  hs.union,\n  hs.union_dj,\n  hs.diff,\n  hs.filter,\n  hs.inter,\n  hs.subset,\n  hs.equal,\n  hs.disjoint,\n  hs.disjoint_witness,\n  hs.sel,\n  hs.to_list,\n  hs.from_list\n)\""], ["", "export_code test_codegen checking SML"], ["", "end"]]}