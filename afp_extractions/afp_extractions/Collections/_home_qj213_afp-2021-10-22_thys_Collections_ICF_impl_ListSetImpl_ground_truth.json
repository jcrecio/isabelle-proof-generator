{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/ICF/impl/ListSetImpl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemma pi_ls[proper_it]:\n  \"proper_it' dlist_iteratei dlist_iteratei\"", "lemma pi_ls'[proper_it]: \n  \"proper_it' ls.iteratei ls.iteratei\""], "translations": [["", "lemma pi_ls[proper_it]:\n  \"proper_it' dlist_iteratei dlist_iteratei\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' dlist_iteratei dlist_iteratei", "apply (rule proper_it'I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. proper_it (dlist_iteratei s) (dlist_iteratei s)", "unfolding dlist_iteratei_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. proper_it (foldli (list_of_dlist s)) (foldli (list_of_dlist s))", "by (intro icf_proper_iteratorI)"], ["", "lemma pi_ls'[proper_it]: \n  \"proper_it' ls.iteratei ls.iteratei\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' ls.iteratei ls.iteratei", "apply (rule proper_it'I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. proper_it (ls.iteratei s) (ls.iteratei s)", "unfolding ls.iteratei_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. proper_it (it_to_it (ls.list_it s)) (it_to_it (ls.list_it s))", "by (intro icf_proper_iteratorI)"], ["", "interpretation pi_ls: proper_it_loc dlist_iteratei dlist_iteratei"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it_loc dlist_iteratei dlist_iteratei", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' dlist_iteratei dlist_iteratei", "by (rule pi_ls)"], ["", "interpretation pi_ls': proper_it_loc ls.iteratei ls.iteratei"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it_loc ls.iteratei ls.iteratei", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' ls.iteratei ls.iteratei", "by (rule pi_ls')"], ["", "definition test_codegen where \"test_codegen \\<equiv> (\n  ls.empty,\n  ls.memb,\n  ls.ins,\n  ls.delete,\n  ls.list_it,\n  ls.sng,\n  ls.isEmpty,\n  ls.isSng,\n  ls.ball,\n  ls.bex,\n  ls.size,\n  ls.size_abort,\n  ls.union,\n  ls.union_dj,\n  ls.diff,\n  ls.filter,\n  ls.inter,\n  ls.subset,\n  ls.equal,\n  ls.disjoint,\n  ls.disjoint_witness,\n  ls.sel,\n  ls.to_list,\n  ls.from_list\n)\""], ["", "export_code test_codegen checking SML"], ["", "end"]]}