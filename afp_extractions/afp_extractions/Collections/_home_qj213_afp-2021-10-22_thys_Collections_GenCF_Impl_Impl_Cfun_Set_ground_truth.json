{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/GenCF/Impl/Impl_Cfun_Set.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemma fun_set_rel_def: \"\\<langle>R\\<rangle>fun_set_rel = (R\\<rightarrow>bool_rel) O br Collect (\\<lambda>_. True)\"", "lemma fun_set_rel_sv[relator_props]: \n  \"\\<lbrakk>single_valued R; Range R = UNIV\\<rbrakk> \\<Longrightarrow> single_valued (\\<langle>R\\<rangle>fun_set_rel)\"", "lemma fun_set_rel_RUNIV[relator_props]:\n  assumes SV: \"single_valued R\" \n  shows \"Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV\"", "lemmas [autoref_rel_intf] = REL_INTFI[of fun_set_rel i_set]", "lemma fs_mem_refine[autoref_rules]: \"(\\<lambda>x f. f x,(\\<in>)) \\<in> R \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> bool_rel\"", "lemma fun_set_Collect_refine[autoref_rules]: \n  \"(\\<lambda>x. x, Collect)\\<in>(R\\<rightarrow>bool_rel) \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel\"", "lemma fun_set_empty_refine[autoref_rules]: \n  \"(\\<lambda>_. False,{})\\<in>\\<langle>R\\<rangle>fun_set_rel\"", "lemma fun_set_UNIV_refine[autoref_rules]: \n  \"(\\<lambda>_. True,UNIV)\\<in>\\<langle>R\\<rangle>fun_set_rel\"", "lemma fun_set_union_refine[autoref_rules]: \n  \"(\\<lambda>a b x. a x \\<or> b x,(\\<union>))\\<in>\\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel\"", "lemma fun_set_inter_refine[autoref_rules]: \n  \"(\\<lambda>a b x. a x \\<and> b x,(\\<inter>))\\<in>\\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel\"", "lemma fun_set_diff_refine[autoref_rules]: \n  \"(\\<lambda>a b x. a x \\<and> \\<not>b x,(-))\\<in>\\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel\""], "translations": [["", "lemma fun_set_rel_def: \"\\<langle>R\\<rangle>fun_set_rel = (R\\<rightarrow>bool_rel) O br Collect (\\<lambda>_. True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>R\\<rangle>fun_set_rel =\n    (R \\<rightarrow> bool_rel) O br Collect (\\<lambda>_. True)", "by (simp add: relAPP_def fun_set_rel_internal_def)"], ["", "lemma fun_set_rel_sv[relator_props]: \n  \"\\<lbrakk>single_valued R; Range R = UNIV\\<rbrakk> \\<Longrightarrow> single_valued (\\<langle>R\\<rangle>fun_set_rel)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>single_valued R; Range R = UNIV\\<rbrakk>\n    \\<Longrightarrow> single_valued (\\<langle>R\\<rangle>fun_set_rel)", "unfolding fun_set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>single_valued R; Range R = UNIV\\<rbrakk>\n    \\<Longrightarrow> single_valued\n                       ((R \\<rightarrow> bool_rel) O\n                        br Collect (\\<lambda>_. True))", "by (tagged_solver (keep))"], ["", "lemma fun_set_rel_RUNIV[relator_props]:\n  assumes SV: \"single_valued R\" \n  shows \"Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV", "have \"\\<exists>a. (a,b)\\<in>\\<langle>R\\<rangle>fun_set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. (a, b) \\<in> \\<langle>R\\<rangle>fun_set_rel", "unfolding fun_set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       (a, b)\n       \\<in> (R \\<rightarrow> bool_rel) O br Collect (\\<lambda>_. True)", "apply (rule exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (?a, b) \\<in> (R \\<rightarrow> bool_rel) O br Collect (\\<lambda>_. True)", "apply (rule relcompI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (?a, ?b2) \\<in> R \\<rightarrow> bool_rel\n 2. (?b2, b) \\<in> br Collect (\\<lambda>_. True)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. (?a, ?b2) \\<in> R \\<rightarrow> bool_rel\n 2. (?b2, b) \\<in> br Collect (\\<lambda>_. True)", "show \"((\\<lambda>x. x\\<in>b),b)\\<in>br Collect (\\<lambda>_. True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x \\<in> b, b) \\<in> br Collect (\\<lambda>_. True)", "by (auto simp: br_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<in> b, b) \\<in> br Collect (\\<lambda>_. True)\n\ngoal (1 subgoal):\n 1. (?a, \\<lambda>x. x \\<in> b) \\<in> R \\<rightarrow> bool_rel", "show \"(\\<lambda>x'. \\<exists>x. (x',x)\\<in>R \\<and> x\\<in>b,\\<lambda>x. x \\<in> b)\\<in>R \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x'. \\<exists>x. (x', x) \\<in> R \\<and> x \\<in> b,\n     \\<lambda>x. x \\<in> b)\n    \\<in> R \\<rightarrow> bool_rel", "by (auto dest: single_valuedD[OF SV])"], ["proof (state)\nthis:\n  (\\<lambda>x'. \\<exists>x. (x', x) \\<in> R \\<and> x \\<in> b,\n   \\<lambda>x. x \\<in> b)\n  \\<in> R \\<rightarrow> bool_rel\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. (a, b) \\<in> \\<langle>R\\<rangle>fun_set_rel\n\ngoal (1 subgoal):\n 1. Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV", "}"], ["proof (state)\nthis:\n  \\<exists>a. (a, ?b2) \\<in> \\<langle>R\\<rangle>fun_set_rel\n\ngoal (1 subgoal):\n 1. Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>a. (a, ?b2) \\<in> \\<langle>R\\<rangle>fun_set_rel\n\ngoal (1 subgoal):\n 1. Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV", "by blast"], ["proof (state)\nthis:\n  Range (\\<langle>R\\<rangle>fun_set_rel) = UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [autoref_rel_intf] = REL_INTFI[of fun_set_rel i_set]"], ["", "lemma fs_mem_refine[autoref_rules]: \"(\\<lambda>x f. f x,(\\<in>)) \\<in> R \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> bool_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x f. f x, (\\<in>))\n    \\<in> R \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> bool_rel", "apply (intro fun_relI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a') \\<in> R;\n        (aa, a'a) \\<in> \\<langle>R\\<rangle>fun_set_rel\\<rbrakk>\n       \\<Longrightarrow> (aa a, a' \\<in> a'a) \\<in> bool_rel", "apply (auto simp add: fun_set_rel_def br_def dest: fun_relD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fun_set_Collect_refine[autoref_rules]: \n  \"(\\<lambda>x. x, Collect)\\<in>(R\\<rightarrow>bool_rel) \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x, Collect)\n    \\<in> (R \\<rightarrow> bool_rel) \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "unfolding fun_set_rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x, Collect)\n    \\<in> (R \\<rightarrow> bool_rel) \\<rightarrow>\n          (R \\<rightarrow> bool_rel) O br Collect (\\<lambda>_. True)", "by (auto simp: br_def)"], ["", "lemma fun_set_empty_refine[autoref_rules]: \n  \"(\\<lambda>_. False,{})\\<in>\\<langle>R\\<rangle>fun_set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. False, {}) \\<in> \\<langle>R\\<rangle>fun_set_rel", "by (force simp add: fun_set_rel_def br_def)"], ["", "lemma fun_set_UNIV_refine[autoref_rules]: \n  \"(\\<lambda>_. True,UNIV)\\<in>\\<langle>R\\<rangle>fun_set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. True, UNIV) \\<in> \\<langle>R\\<rangle>fun_set_rel", "by (force simp add: fun_set_rel_def br_def)"], ["", "lemma fun_set_union_refine[autoref_rules]: \n  \"(\\<lambda>a b x. a x \\<or> b x,(\\<union>))\\<in>\\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<or> b x, (\\<union>))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<or> b x, (\\<union>))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "have A: \"\\<And>a b. (\\<lambda>x. x\\<in>a \\<or> x\\<in>b, a \\<union> b) \\<in> br Collect (\\<lambda>_. True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (\\<lambda>x. x \\<in> a \\<or> x \\<in> b, a \\<union> b)\n       \\<in> br Collect (\\<lambda>_. True)", "by (auto simp: br_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<in> ?a \\<or> x \\<in> ?b, ?a \\<union> ?b)\n  \\<in> br Collect (\\<lambda>_. True)\n\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<or> b x, (\\<union>))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<or> b x, (\\<union>))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "apply (simp add: fun_set_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<or> b x, (\\<union>))\n    \\<in> (R \\<rightarrow> bool_rel) O\n          br Collect (\\<lambda>_. True) \\<rightarrow>\n          (R \\<rightarrow> bool_rel) O\n          br Collect (\\<lambda>_. True) \\<rightarrow>\n          (R \\<rightarrow> bool_rel) O br Collect (\\<lambda>_. True)", "apply (intro fun_relI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> (R \\<rightarrow> bool_rel) O\n                      br Collect (\\<lambda>_. True);\n        (aa, a'a)\n        \\<in> (R \\<rightarrow> bool_rel) O\n              br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x. a x \\<or> aa x, a' \\<union> a'a)\n                         \\<in> (R \\<rightarrow> bool_rel) O\n                               br Collect (\\<lambda>_. True)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<or> xa xb, z \\<union> za)\n                         \\<in> (R \\<rightarrow> bool_rel) O\n                               br Collect (\\<lambda>_. True)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<or> xa xb,\n                          ?b12 x y z xa ya za)\n                         \\<in> R \\<rightarrow> bool_rel\n 2. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (?b12 x y z xa ya za, z \\<union> za)\n                         \\<in> br Collect (\\<lambda>_. True)", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (?b12 x y z xa ya za, z \\<union> za)\n                         \\<in> br Collect (\\<lambda>_. True)\n 2. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<or> xa xb,\n                          ?b12 x y z xa ya za)\n                         \\<in> R \\<rightarrow> bool_rel", "apply (rule A)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<or> xa xb,\n                          \\<lambda>x. x \\<in> z \\<or> x \\<in> za)\n                         \\<in> R \\<rightarrow> bool_rel", "apply (auto simp: br_def dest: fun_relD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>a b x. a x \\<or> b x, (\\<union>))\n  \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n        \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n        \\<langle>R\\<rangle>fun_set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fun_set_inter_refine[autoref_rules]: \n  \"(\\<lambda>a b x. a x \\<and> b x,(\\<inter>))\\<in>\\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> b x, (\\<inter>))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> b x, (\\<inter>))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "have A: \"\\<And>a b. (\\<lambda>x. x\\<in>a \\<and> x\\<in>b, a \\<inter> b) \\<in> br Collect (\\<lambda>_. True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (\\<lambda>x. x \\<in> a \\<and> x \\<in> b, a \\<inter> b)\n       \\<in> br Collect (\\<lambda>_. True)", "by (auto simp: br_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<in> ?a \\<and> x \\<in> ?b, ?a \\<inter> ?b)\n  \\<in> br Collect (\\<lambda>_. True)\n\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> b x, (\\<inter>))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> b x, (\\<inter>))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "apply (simp add: fun_set_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> b x, (\\<inter>))\n    \\<in> (R \\<rightarrow> bool_rel) O\n          br Collect (\\<lambda>_. True) \\<rightarrow>\n          (R \\<rightarrow> bool_rel) O\n          br Collect (\\<lambda>_. True) \\<rightarrow>\n          (R \\<rightarrow> bool_rel) O br Collect (\\<lambda>_. True)", "apply (intro fun_relI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> (R \\<rightarrow> bool_rel) O\n                      br Collect (\\<lambda>_. True);\n        (aa, a'a)\n        \\<in> (R \\<rightarrow> bool_rel) O\n              br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x. a x \\<and> aa x, a' \\<inter> a'a)\n                         \\<in> (R \\<rightarrow> bool_rel) O\n                               br Collect (\\<lambda>_. True)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<and> xa xb, z \\<inter> za)\n                         \\<in> (R \\<rightarrow> bool_rel) O\n                               br Collect (\\<lambda>_. True)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<and> xa xb,\n                          ?b12 x y z xa ya za)\n                         \\<in> R \\<rightarrow> bool_rel\n 2. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (?b12 x y z xa ya za, z \\<inter> za)\n                         \\<in> br Collect (\\<lambda>_. True)", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (?b12 x y z xa ya za, z \\<inter> za)\n                         \\<in> br Collect (\\<lambda>_. True)\n 2. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<and> xa xb,\n                          ?b12 x y z xa ya za)\n                         \\<in> R \\<rightarrow> bool_rel", "apply (rule A)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<and> xa xb,\n                          \\<lambda>x. x \\<in> z \\<and> x \\<in> za)\n                         \\<in> R \\<rightarrow> bool_rel", "apply (auto simp: br_def dest: fun_relD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>a b x. a x \\<and> b x, (\\<inter>))\n  \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n        \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n        \\<langle>R\\<rangle>fun_set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fun_set_diff_refine[autoref_rules]: \n  \"(\\<lambda>a b x. a x \\<and> \\<not>b x,(-))\\<in>\\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow> \\<langle>R\\<rangle>fun_set_rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> \\<not> b x, (-))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> \\<not> b x, (-))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "have A: \"\\<And>a b. (\\<lambda>x. x\\<in>a \\<and> \\<not>x\\<in>b, a - b) \\<in> br Collect (\\<lambda>_. True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (\\<lambda>x. x \\<in> a \\<and> x \\<notin> b, a - b)\n       \\<in> br Collect (\\<lambda>_. True)", "by (auto simp: br_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<in> ?a \\<and> x \\<notin> ?b, ?a - ?b)\n  \\<in> br Collect (\\<lambda>_. True)\n\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> \\<not> b x, (-))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> \\<not> b x, (-))\n    \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n          \\<langle>R\\<rangle>fun_set_rel", "apply (simp add: fun_set_rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b x. a x \\<and> \\<not> b x, (-))\n    \\<in> (R \\<rightarrow> bool_rel) O\n          br Collect (\\<lambda>_. True) \\<rightarrow>\n          (R \\<rightarrow> bool_rel) O\n          br Collect (\\<lambda>_. True) \\<rightarrow>\n          (R \\<rightarrow> bool_rel) O br Collect (\\<lambda>_. True)", "apply (intro fun_relI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a a' aa a'a.\n       \\<lbrakk>(a, a')\n                \\<in> (R \\<rightarrow> bool_rel) O\n                      br Collect (\\<lambda>_. True);\n        (aa, a'a)\n        \\<in> (R \\<rightarrow> bool_rel) O\n              br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>x. a x \\<and> \\<not> aa x, a' - a'a)\n                         \\<in> (R \\<rightarrow> bool_rel) O\n                               br Collect (\\<lambda>_. True)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<and> \\<not> xa xb, z - za)\n                         \\<in> (R \\<rightarrow> bool_rel) O\n                               br Collect (\\<lambda>_. True)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<and> \\<not> xa xb,\n                          ?b12 x y z xa ya za)\n                         \\<in> R \\<rightarrow> bool_rel\n 2. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (?b12 x y z xa ya za, z - za)\n                         \\<in> br Collect (\\<lambda>_. True)", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (?b12 x y z xa ya za, z - za)\n                         \\<in> br Collect (\\<lambda>_. True)\n 2. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<and> \\<not> xa xb,\n                          ?b12 x y z xa ya za)\n                         \\<in> R \\<rightarrow> bool_rel", "apply (rule A)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa ya za.\n       \\<lbrakk>(x, y) \\<in> R \\<rightarrow> bool_rel;\n        (y, z) \\<in> br Collect (\\<lambda>_. True);\n        (xa, ya) \\<in> R \\<rightarrow> bool_rel;\n        (ya, za) \\<in> br Collect (\\<lambda>_. True)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>xb. x xb \\<and> \\<not> xa xb,\n                          \\<lambda>x. x \\<in> z \\<and> x \\<notin> za)\n                         \\<in> R \\<rightarrow> bool_rel", "apply (auto simp: br_def dest: fun_relD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>a b x. a x \\<and> \\<not> b x, (-))\n  \\<in> \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n        \\<langle>R\\<rangle>fun_set_rel \\<rightarrow>\n        \\<langle>R\\<rangle>fun_set_rel\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}