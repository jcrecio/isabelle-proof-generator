{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/Iterator/Array_Iterator.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemma idx_iteratei_aux_array_get_Array_conv_nth:\n  \"idx_iteratei_aux array_get sz i (Array xs) c f \\<sigma> = \n   idx_iteratei_aux (!) sz i xs c f \\<sigma>\"", "lemma idx_iteratei_array_get_Array_conv_nth:\n  \"idx_iteratei array_get array_length (Array xs) = idx_iteratei nth length xs\""], "translations": [["", "lemma idx_iteratei_aux_array_get_Array_conv_nth:\n  \"idx_iteratei_aux array_get sz i (Array xs) c f \\<sigma> = \n   idx_iteratei_aux (!) sz i xs c f \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. idx_iteratei_aux array_get sz i (Array xs) c f \\<sigma> =\n    idx_iteratei_aux (!) sz i xs c f \\<sigma>", "apply(induct get\\<equiv>\"(!) :: 'b list \\<Rightarrow> nat \\<Rightarrow> 'b\" sz i xs c f \\<sigma> rule: idx_iteratei_aux.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sz i l c f \\<sigma>.\n       (\\<not> (i = 0 \\<or> \\<not> c \\<sigma>) \\<Longrightarrow>\n        idx_iteratei_aux array_get sz (i - 1) (Array l) c f\n         (f (l ! (sz - i)) \\<sigma>) =\n        idx_iteratei_aux (!) sz (i - 1) l c f\n         (f (l ! (sz - i)) \\<sigma>)) \\<Longrightarrow>\n       idx_iteratei_aux array_get sz i (Array l) c f \\<sigma> =\n       idx_iteratei_aux (!) sz i l c f \\<sigma>", "apply(subst (1 2) idx_iteratei_aux.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sz i l c f \\<sigma>.\n       (\\<not> (i = 0 \\<or> \\<not> c \\<sigma>) \\<Longrightarrow>\n        idx_iteratei_aux array_get sz (i - 1) (Array l) c f\n         (f (l ! (sz - i)) \\<sigma>) =\n        idx_iteratei_aux (!) sz (i - 1) l c f\n         (f (l ! (sz - i)) \\<sigma>)) \\<Longrightarrow>\n       (if i = 0 \\<or> \\<not> c \\<sigma> then \\<sigma>\n        else idx_iteratei_aux array_get sz (i - 1) (Array l) c f\n              (f (array_get (Array l) (sz - i)) \\<sigma>)) =\n       (if i = 0 \\<or> \\<not> c \\<sigma> then \\<sigma>\n        else idx_iteratei_aux (!) sz (i - 1) l c f\n              (f (l ! (sz - i)) \\<sigma>))", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma idx_iteratei_array_get_Array_conv_nth:\n  \"idx_iteratei array_get array_length (Array xs) = idx_iteratei nth length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. idx_iteratei array_get array_length (Array xs) =\n    idx_iteratei (!) length xs", "by(simp add: idx_iteratei_def fun_eq_iff idx_iteratei_aux_array_get_Array_conv_nth)"], ["", "end"]]}