{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/ICF/impl/TrieSetImpl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemmas ts_it_to_it_map_code_unfold[code_unfold] = \n  it_to_it_map_fold'[OF pi_trie]", "lemma pi_ts[proper_it]: \"proper_it' ts.iteratei ts.iteratei\""], "translations": [["", "lemmas ts_it_to_it_map_code_unfold[code_unfold] = \n  it_to_it_map_fold'[OF pi_trie]"], ["", "lemma pi_ts[proper_it]: \"proper_it' ts.iteratei ts.iteratei\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' ts.iteratei ts.iteratei", "unfolding ts.iteratei_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' (\\<lambda>S. it_to_it (ts.list_it S))\n     (\\<lambda>S. it_to_it (ts.list_it S))", "by (rule proper_it'I icf_proper_iteratorI)+"], ["", "interpretation pi_ts: proper_it_loc ts.iteratei ts.iteratei"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it_loc ts.iteratei ts.iteratei", "by unfold_locales (rule pi_ts)"], ["", "definition test_codegen where \"test_codegen \\<equiv> (\n  ts.empty,\n  ts.memb,\n  ts.ins,\n  ts.delete,\n  ts.list_it,\n  ts.sng,\n  ts.isEmpty,\n  ts.isSng,\n  ts.ball,\n  ts.bex,\n  ts.size,\n  ts.size_abort,\n  ts.union,\n  ts.union_dj,\n  ts.diff,\n  ts.filter,\n  ts.inter,\n  ts.subset,\n  ts.equal,\n  ts.disjoint,\n  ts.disjoint_witness,\n  ts.sel,\n  ts.to_list,\n  ts.from_list\n)\""], ["", "export_code test_codegen checking SML"], ["", "end"]]}