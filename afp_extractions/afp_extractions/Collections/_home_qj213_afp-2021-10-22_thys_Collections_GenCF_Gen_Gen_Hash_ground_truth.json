{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/GenCF/Gen/Gen_Hash.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemma prod_bhc_ga[autoref_ga_rules]:\n  \"\\<lbrakk> GEN_ALGO_tag (is_bounded_hashcode R eq1 bhc1); \n     GEN_ALGO_tag (is_bounded_hashcode S eq2 bhc2)\\<rbrakk> \n  \\<Longrightarrow> is_bounded_hashcode (R\\<times>\\<^sub>rS) (prod_eq eq1 eq2) (prod_bhc bhc1 bhc2)\"", "lemma prod_dhs_ga[autoref_ga_rules]:\n  \"\\<lbrakk> GEN_ALGO_tag (is_valid_def_hm_size TYPE('a) n1);\n     GEN_ALGO_tag (is_valid_def_hm_size TYPE('b) n2) \\<rbrakk>\n   \\<Longrightarrow> is_valid_def_hm_size TYPE('a*'b) (n1+n2)\""], "translations": [["", "lemma prod_bhc_ga[autoref_ga_rules]:\n  \"\\<lbrakk> GEN_ALGO_tag (is_bounded_hashcode R eq1 bhc1); \n     GEN_ALGO_tag (is_bounded_hashcode S eq2 bhc2)\\<rbrakk> \n  \\<Longrightarrow> is_bounded_hashcode (R\\<times>\\<^sub>rS) (prod_eq eq1 eq2) (prod_bhc bhc1 bhc2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>GEN_ALGO_tag (is_bounded_hashcode R eq1 bhc1);\n     GEN_ALGO_tag (is_bounded_hashcode S eq2 bhc2)\\<rbrakk>\n    \\<Longrightarrow> is_bounded_hashcode (R \\<times>\\<^sub>r S)\n                       (prod_eq eq1 eq2) (prod_bhc bhc1 bhc2)", "unfolding is_bounded_hashcode_def prod_bhc_def prod_eq_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>GEN_ALGO_tag\n              ((eq1, (=))\n               \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel \\<and>\n               (\\<forall>n.\n                   \\<forall>x\\<in>Domain R.\n                      \\<forall>y\\<in>Domain R.\n                         eq1 x y \\<longrightarrow>\n                         bhc1 n x = bhc1 n y) \\<and>\n               (\\<forall>n x. 1 < n \\<longrightarrow> bhc1 n x < n));\n     GEN_ALGO_tag\n      ((eq2, (=)) \\<in> S \\<rightarrow> S \\<rightarrow> bool_rel \\<and>\n       (\\<forall>n.\n           \\<forall>x\\<in>Domain S.\n              \\<forall>y\\<in>Domain S.\n                 eq2 x y \\<longrightarrow> bhc2 n x = bhc2 n y) \\<and>\n       (\\<forall>n x. 1 < n \\<longrightarrow> bhc2 n x < n))\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x1 x2.\n                          case x1 of\n                          (a1, b1) \\<Rightarrow>\n                            case x2 of\n                            (a2, b2) \\<Rightarrow>\n                              eq1 a1 a2 \\<and> eq2 b1 b2,\n                       (=))\n                      \\<in> R \\<times>\\<^sub>r S \\<rightarrow>\n                            R \\<times>\\<^sub>r S \\<rightarrow>\n                            bool_rel \\<and>\n                      (\\<forall>n.\n                          \\<forall>x\\<in>Domain (R \\<times>\\<^sub>r S).\n                             \\<forall>y\\<in>Domain (R \\<times>\\<^sub>r S).\n                                (case x of\n                                 (a1, b1) \\<Rightarrow>\n                                   case y of\n                                   (a2, b2) \\<Rightarrow>\n                                     eq1 a1 a2 \\<and>\n                                     eq2 b1 b2) \\<longrightarrow>\n                                (case x of\n                                 (a, b) \\<Rightarrow>\n                                   (bhc1 n a * 33 + bhc2 n b) mod n) =\n                                (case y of\n                                 (a, b) \\<Rightarrow>\n                                   (bhc1 n a * 33 + bhc2 n b) mod n)) \\<and>\n                      (\\<forall>n x.\n                          1 < n \\<longrightarrow>\n                          (case x of\n                           (a, b) \\<Rightarrow>\n                             (bhc1 n a * 33 + bhc2 n b) mod n)\n                          < n)", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b aa ba ab bb ac bc.\n       \\<lbrakk>GEN_ALGO_tag\n                 ((eq1, (=))\n                  \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel \\<and>\n                  (\\<forall>n.\n                      \\<forall>x\\<in>Domain R.\n                         \\<forall>y\\<in>Domain R.\n                            eq1 x y \\<longrightarrow>\n                            bhc1 n x = bhc1 n y) \\<and>\n                  (\\<forall>n x. 1 < n \\<longrightarrow> bhc1 n x < n));\n        GEN_ALGO_tag\n         ((eq2, (=)) \\<in> S \\<rightarrow> S \\<rightarrow> bool_rel \\<and>\n          (\\<forall>n.\n              \\<forall>x\\<in>Domain S.\n                 \\<forall>y\\<in>Domain S.\n                    eq2 x y \\<longrightarrow> bhc2 n x = bhc2 n y) \\<and>\n          (\\<forall>n x. 1 < n \\<longrightarrow> bhc2 n x < n));\n        ((a, b), aa, ba) \\<in> R \\<times>\\<^sub>r S;\n        ((ab, bb), ac, bc) \\<in> R \\<times>\\<^sub>r S; eq1 a ab;\n        eq2 b bb\\<rbrakk>\n       \\<Longrightarrow> aa = ac\n 2. \\<And>a b aa ba ab bb ac bc.\n       \\<lbrakk>GEN_ALGO_tag\n                 ((eq1, (=))\n                  \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel \\<and>\n                  (\\<forall>n.\n                      \\<forall>x\\<in>Domain R.\n                         \\<forall>y\\<in>Domain R.\n                            eq1 x y \\<longrightarrow>\n                            bhc1 n x = bhc1 n y) \\<and>\n                  (\\<forall>n x. 1 < n \\<longrightarrow> bhc1 n x < n));\n        GEN_ALGO_tag\n         ((eq2, (=)) \\<in> S \\<rightarrow> S \\<rightarrow> bool_rel \\<and>\n          (\\<forall>n.\n              \\<forall>x\\<in>Domain S.\n                 \\<forall>y\\<in>Domain S.\n                    eq2 x y \\<longrightarrow> bhc2 n x = bhc2 n y) \\<and>\n          (\\<forall>n x. 1 < n \\<longrightarrow> bhc2 n x < n));\n        ((a, b), aa, ba) \\<in> R \\<times>\\<^sub>r S;\n        ((ab, bb), ac, bc) \\<in> R \\<times>\\<^sub>r S; eq1 a ab;\n        eq2 b bb\\<rbrakk>\n       \\<Longrightarrow> ba = bc\n 3. \\<And>a b aa ba ab bb ac bc.\n       \\<lbrakk>GEN_ALGO_tag\n                 ((eq1, (=))\n                  \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel \\<and>\n                  (\\<forall>n.\n                      \\<forall>x\\<in>Domain R.\n                         \\<forall>y\\<in>Domain R.\n                            eq1 x y \\<longrightarrow>\n                            bhc1 n x = bhc1 n y) \\<and>\n                  (\\<forall>n x. 1 < n \\<longrightarrow> bhc1 n x < n));\n        GEN_ALGO_tag\n         ((eq2, (=)) \\<in> S \\<rightarrow> S \\<rightarrow> bool_rel \\<and>\n          (\\<forall>n.\n              \\<forall>x\\<in>Domain S.\n                 \\<forall>y\\<in>Domain S.\n                    eq2 x y \\<longrightarrow> bhc2 n x = bhc2 n y) \\<and>\n          (\\<forall>n x. 1 < n \\<longrightarrow> bhc2 n x < n));\n        ((a, b), ac, bc) \\<in> R \\<times>\\<^sub>r S;\n        ((ab, bb), ac, bc) \\<in> R \\<times>\\<^sub>r S\\<rbrakk>\n       \\<Longrightarrow> eq1 a ab\n 4. \\<And>a b aa ba ab bb ac bc.\n       \\<lbrakk>GEN_ALGO_tag\n                 ((eq1, (=))\n                  \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel \\<and>\n                  (\\<forall>n.\n                      \\<forall>x\\<in>Domain R.\n                         \\<forall>y\\<in>Domain R.\n                            eq1 x y \\<longrightarrow>\n                            bhc1 n x = bhc1 n y) \\<and>\n                  (\\<forall>n x. 1 < n \\<longrightarrow> bhc1 n x < n));\n        GEN_ALGO_tag\n         ((eq2, (=)) \\<in> S \\<rightarrow> S \\<rightarrow> bool_rel \\<and>\n          (\\<forall>n.\n              \\<forall>x\\<in>Domain S.\n                 \\<forall>y\\<in>Domain S.\n                    eq2 x y \\<longrightarrow> bhc2 n x = bhc2 n y) \\<and>\n          (\\<forall>n x. 1 < n \\<longrightarrow> bhc2 n x < n));\n        ((a, b), ac, bc) \\<in> R \\<times>\\<^sub>r S;\n        ((ab, bb), ac, bc) \\<in> R \\<times>\\<^sub>r S\\<rbrakk>\n       \\<Longrightarrow> eq2 b bb\n 5. \\<And>n a b aa ba bb bc bd be.\n       \\<lbrakk>GEN_ALGO_tag\n                 ((eq1, (=))\n                  \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel \\<and>\n                  (\\<forall>n.\n                      \\<forall>x\\<in>Domain R.\n                         \\<forall>y\\<in>Domain R.\n                            eq1 x y \\<longrightarrow>\n                            bhc1 n x = bhc1 n y) \\<and>\n                  (\\<forall>n x. 1 < n \\<longrightarrow> bhc1 n x < n));\n        GEN_ALGO_tag\n         ((eq2, (=)) \\<in> S \\<rightarrow> S \\<rightarrow> bool_rel \\<and>\n          (\\<forall>n.\n              \\<forall>x\\<in>Domain S.\n                 \\<forall>y\\<in>Domain S.\n                    eq2 x y \\<longrightarrow> bhc2 n x = bhc2 n y) \\<and>\n          (\\<forall>n x. 1 < n \\<longrightarrow> bhc2 n x < n));\n        (a, bb) \\<in> R; (b, bc) \\<in> S; (aa, bd) \\<in> R;\n        (ba, be) \\<in> S; eq1 a aa; eq2 b ba\\<rbrakk>\n       \\<Longrightarrow> (bhc1 n a * 33 + bhc2 n b) mod n =\n                         (bhc1 n aa * 33 + bhc2 n ba) mod n\n 6. \\<And>n a b.\n       \\<lbrakk>GEN_ALGO_tag\n                 ((eq1, (=))\n                  \\<in> R \\<rightarrow> R \\<rightarrow> bool_rel \\<and>\n                  (\\<forall>n.\n                      \\<forall>x\\<in>Domain R.\n                         \\<forall>y\\<in>Domain R.\n                            eq1 x y \\<longrightarrow>\n                            bhc1 n x = bhc1 n y) \\<and>\n                  (\\<forall>n x. 1 < n \\<longrightarrow> bhc1 n x < n));\n        GEN_ALGO_tag\n         ((eq2, (=)) \\<in> S \\<rightarrow> S \\<rightarrow> bool_rel \\<and>\n          (\\<forall>n.\n              \\<forall>x\\<in>Domain S.\n                 \\<forall>y\\<in>Domain S.\n                    eq2 x y \\<longrightarrow> bhc2 n x = bhc2 n y) \\<and>\n          (\\<forall>n x. 1 < n \\<longrightarrow> bhc2 n x < n));\n        1 < n\\<rbrakk>\n       \\<Longrightarrow> (bhc1 n a * 33 + bhc2 n b) mod n < n", "apply (auto dest: fun_relD simp: Domain_unfold; metis)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma prod_dhs_ga[autoref_ga_rules]:\n  \"\\<lbrakk> GEN_ALGO_tag (is_valid_def_hm_size TYPE('a) n1);\n     GEN_ALGO_tag (is_valid_def_hm_size TYPE('b) n2) \\<rbrakk>\n   \\<Longrightarrow> is_valid_def_hm_size TYPE('a*'b) (n1+n2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>GEN_ALGO_tag (is_valid_def_hm_size TYPE('a) n1);\n     GEN_ALGO_tag (is_valid_def_hm_size TYPE('b) n2)\\<rbrakk>\n    \\<Longrightarrow> is_valid_def_hm_size TYPE('a \\<times> 'b) (n1 + n2)", "unfolding is_valid_def_hm_size_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>GEN_ALGO_tag (1 < n1); GEN_ALGO_tag (1 < n2)\\<rbrakk>\n    \\<Longrightarrow> 1 < n1 + n2", "by auto"], ["", "end"]]}