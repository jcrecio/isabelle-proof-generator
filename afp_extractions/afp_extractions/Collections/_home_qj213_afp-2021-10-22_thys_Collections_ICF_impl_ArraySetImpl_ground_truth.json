{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/ICF/impl/ArraySetImpl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemmas ias_it_to_it_map_code_unfold[code_unfold] = \n  it_to_it_map_fold'[OF pi_iam]\n  it_to_it_map_fold'[OF pi_iam_rev]", "lemma pi_ias[proper_it]: \n  \"proper_it' ias.iteratei ias.iteratei\"\n  \"proper_it' ias.iterateoi ias.iterateoi\"\n  \"proper_it' ias.rev_iterateoi ias.rev_iterateoi\""], "translations": [["", "lemmas ias_it_to_it_map_code_unfold[code_unfold] = \n  it_to_it_map_fold'[OF pi_iam]\n  it_to_it_map_fold'[OF pi_iam_rev]"], ["", "lemma pi_ias[proper_it]: \n  \"proper_it' ias.iteratei ias.iteratei\"\n  \"proper_it' ias.iterateoi ias.iterateoi\"\n  \"proper_it' ias.rev_iterateoi ias.rev_iterateoi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' ias.iteratei ias.iteratei &&&\n    proper_it' ias.iterateoi ias.iterateoi &&&\n    proper_it' ias.reverse_iterateoi ias.reverse_iterateoi", "unfolding ias.iteratei_def[abs_def] ias.iterateoi_def[abs_def] \n    ias.rev_iterateoi_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' (\\<lambda>S. it_to_it (ias.list_it S))\n     (\\<lambda>S. it_to_it (ias.list_it S)) &&&\n    proper_it' (\\<lambda>S. it_to_it (ias.ordered_list_it S))\n     (\\<lambda>S. it_to_it (ias.ordered_list_it S)) &&&\n    proper_it' (\\<lambda>S. it_to_it (ias.rev_list_it S))\n     (\\<lambda>S. it_to_it (ias.rev_list_it S))", "apply (rule proper_it'I icf_proper_iteratorI)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "interpretation \n  pi_ias: proper_it_loc ias.iteratei ias.iteratei +\n  pi_ias_o: proper_it_loc ias.iterateoi ias.iterateoi +\n  pi_ias_ro: proper_it_loc ias.rev_iterateoi ias.rev_iterateoi"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it_loc ias.iteratei ias.iteratei &&&\n    proper_it_loc ias.iterateoi ias.iterateoi &&&\n    proper_it_loc ias.reverse_iterateoi ias.reverse_iterateoi", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. proper_it' ias.iteratei ias.iteratei\n 2. proper_it' ias.iterateoi ias.iterateoi\n 3. proper_it' ias.reverse_iterateoi ias.reverse_iterateoi", "by (rule pi_ias)+"], ["", "definition test_codegen where \"test_codegen \\<equiv> (\n  ias.empty,\n  ias.memb,\n  ias.ins,\n  ias.delete,\n  ias.list_it,\n  ias.sng,\n  ias.isEmpty,\n  ias.isSng,\n  ias.ball,\n  ias.bex,\n  ias.size,\n  ias.size_abort,\n  ias.union,\n  ias.union_dj,\n  ias.diff,\n  ias.filter,\n  ias.inter,\n  ias.subset,\n  ias.equal,\n  ias.disjoint,\n  ias.disjoint_witness,\n  ias.sel,\n  ias.to_list,\n  ias.from_list,\n\n  ias.ordered_list_it,\n  ias.rev_list_it,\n  ias.min, \n  ias.max, \n  ias.to_sorted_list,\n  ias.to_rev_list\n)\""], ["", "export_code test_codegen checking SML"], ["", "end"]]}