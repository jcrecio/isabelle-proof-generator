{"file_name": "/home/qj213/afp-2021-10-22/thys/Collections/ICF/impl/RBTSetImpl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Collections", "problem_names": ["lemmas rbt_it_to_it_map_code_unfold[code_unfold] = \n  it_to_it_map_fold'[OF pi_rm]\n  it_to_it_map_fold'[OF pi_rm_rev]", "lemma pi_rs[proper_it]:\n  \"proper_it' rs.iteratei rs.iteratei\"\n  \"proper_it' rs.iterateoi rs.iterateoi\"\n  \"proper_it' rs.rev_iterateoi rs.rev_iterateoi\""], "translations": [["", "lemmas rbt_it_to_it_map_code_unfold[code_unfold] = \n  it_to_it_map_fold'[OF pi_rm]\n  it_to_it_map_fold'[OF pi_rm_rev]"], ["", "lemma pi_rs[proper_it]:\n  \"proper_it' rs.iteratei rs.iteratei\"\n  \"proper_it' rs.iterateoi rs.iterateoi\"\n  \"proper_it' rs.rev_iterateoi rs.rev_iterateoi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' rs.iteratei rs.iteratei &&&\n    proper_it' rs.iterateoi rs.iterateoi &&&\n    proper_it' rs.reverse_iterateoi rs.reverse_iterateoi", "unfolding rs.iteratei_def[abs_def] rs.iterateoi_def[abs_def] \n    rs.rev_iterateoi_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it' (\\<lambda>S. it_to_it (rs.list_it S))\n     (\\<lambda>S. it_to_it (rs.list_it S)) &&&\n    proper_it' (\\<lambda>S. it_to_it (rs.ordered_list_it S))\n     (\\<lambda>S. it_to_it (rs.ordered_list_it S)) &&&\n    proper_it' (\\<lambda>S. it_to_it (rs.rev_list_it S))\n     (\\<lambda>S. it_to_it (rs.rev_list_it S))", "by (rule proper_it'I icf_proper_iteratorI)+"], ["", "interpretation\n  pi_rs: proper_it_loc rs.iteratei rs.iteratei +\n  pi_rs_o: proper_it_loc rs.iterateoi rs.iterateoi +\n  pi_rs_ro: proper_it_loc rs.rev_iterateoi rs.rev_iterateoi"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_it_loc rs.iteratei rs.iteratei &&&\n    proper_it_loc rs.iterateoi rs.iterateoi &&&\n    proper_it_loc rs.reverse_iterateoi rs.reverse_iterateoi", "by unfold_locales (rule pi_rs)+"], ["", "definition test_codegen where \"test_codegen \\<equiv> (\n  rs.empty,\n  rs.memb,\n  rs.ins,\n  rs.delete,\n  rs.list_it,\n  rs.sng,\n  rs.isEmpty,\n  rs.isSng,\n  rs.ball,\n  rs.bex,\n  rs.size,\n  rs.size_abort,\n  rs.union,\n  rs.union_dj,\n  rs.diff,\n  rs.filter,\n  rs.inter,\n  rs.subset,\n  rs.equal,\n  rs.disjoint,\n  rs.disjoint_witness,\n  rs.sel,\n  rs.to_list,\n  rs.from_list,\n\n  rs.ordered_list_it,\n  rs.rev_list_it,\n  rs.min, \n  rs.max, \n  rs.to_sorted_list,\n  rs.to_rev_list\n)\""], ["", "export_code test_codegen checking SML"], ["", "end"]]}