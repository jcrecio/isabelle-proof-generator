{"file_name": "/home/qj213/afp-2021-10-22/thys/LambdaAuth/Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LambdaAuth", "problem_names": ["lemma permute_map_list: \"p \\<bullet> l = map (\\<lambda>x. p \\<bullet> x) l\"", "lemma map_fixed_eqvt: \"p \\<bullet> l = l \\<Longrightarrow> map_fixed v l (p \\<bullet> t) = map_fixed v l t\"", "lemma hash_eqvt[eqvt]: \"p \\<bullet> hash t = hash (p \\<bullet> t)\"", "lemma map_fixed_idle: \"{x. \\<not> atom x \\<sharp> t} \\<subseteq> set l \\<Longrightarrow> map_fixed v l t = t\"", "lemma map_fixed_idle_closed:\n  \"closed t \\<Longrightarrow> map_fixed undefined [] t = t\"", "lemma map_fixed_inj_closed:\n  \"closed t \\<Longrightarrow> closed u \\<Longrightarrow> map_fixed undefined [] t = map_fixed undefined [] u \\<Longrightarrow> t = u\"", "lemma hash_eq_hash_real_closed:\n  assumes \"closed t\"\n  shows \"hash t = hash_real t\"", "lemma fresh_subst_term: \"atom x \\<sharp> t[t' / x'] \\<longleftrightarrow> (x = x' \\<or> atom x \\<sharp> t) \\<and> (atom x' \\<sharp> t \\<or> atom x \\<sharp> t')\"", "lemma term_fresh_subst[simp]: \"atom x \\<sharp> t \\<Longrightarrow> atom x \\<sharp> s \\<Longrightarrow> (atom (x::var)) \\<sharp> t[s / y]\"", "lemma term_subst_idle[simp]: \"atom y \\<sharp> t \\<Longrightarrow> t[s / y] = t\"", "lemma term_subst_subst: \"atom y1 \\<noteq> atom y2 \\<Longrightarrow> atom y1 \\<sharp> s2 \\<Longrightarrow> t[s1 / y1][s2 / y2] = t[s2 / y2][s1[s2 / y2] / y1]\"", "lemma fresh_psubst:\n  fixes x :: var\n  assumes \"atom x \\<sharp> e\" \"atom x \\<sharp> vs\"\n  shows   \"atom x \\<sharp> psubst_term e vs\"", "lemma fresh_subst_type:\n  \"atom \\<alpha> \\<sharp> subst_type \\<tau> \\<tau>' \\<alpha>' \\<longleftrightarrow> ((\\<alpha> = \\<alpha>' \\<or> atom \\<alpha> \\<sharp> \\<tau>) \\<and> (atom \\<alpha>' \\<sharp> \\<tau> \\<or> atom \\<alpha> \\<sharp> \\<tau>'))\"", "lemma type_fresh_subst[simp]: \"atom x \\<sharp> t \\<Longrightarrow> atom x \\<sharp> s \\<Longrightarrow> (atom (x::tvar)) \\<sharp> subst_type t s y\"", "lemma type_subst_idle[simp]: \"atom y \\<sharp> t \\<Longrightarrow> subst_type t s y = t\"", "lemma type_subst_subst: \"atom y1 \\<noteq> atom y2 \\<Longrightarrow> atom y1 \\<sharp> s2 \\<Longrightarrow>\n  subst_type (subst_type t s1 y1) s2 y2 = subst_type (subst_type t s2 y2) (subst_type s1 s2 y2) y1\"", "lemma jw_Lam_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Lam x e : \\<tau>\"\n  and     \"atom x \\<sharp> \\<Gamma>\"\n  obtains \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 where \"\\<tau> = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" \"(\\<Gamma>(x $$:= \\<tau>\\<^sub>1)) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\"", "lemma swap_permute_swap: \"atom x \\<sharp> \\<pi> \\<Longrightarrow> atom y \\<sharp> \\<pi> \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> \\<pi> \\<bullet> (x \\<leftrightarrow> y) \\<bullet> t = \\<pi> \\<bullet> t\"", "lemma jw_Rec_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Rec x t : \\<tau>\"\n  and     \"atom x \\<sharp> \\<Gamma>\"\n  obtains y e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 where \"atom y \\<sharp> (\\<Gamma>,x)\" \"t = Lam y e\" \"\\<tau> = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" \"\\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\"", "lemma jw_Let_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Let e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\"\n  and     \"atom x \\<sharp> (e\\<^sub>1, \\<Gamma>)\"\n  obtains \\<tau>\\<^sub>1 where \"\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\" \"\\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\"", "lemma subst_type_perm_eq:\n  assumes \"atom b \\<sharp> t\"\n  shows   \"subst_type t (Mu a t) a = subst_type ((a \\<leftrightarrow> b) \\<bullet> t) (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b\"", "lemma jw_Roll_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Roll e : \\<tau>\"\n  and     \"atom \\<alpha> \\<sharp> (\\<Gamma>, \\<tau>)\"\n  obtains \\<tau>' where \"\\<tau> = Mu \\<alpha> \\<tau>'\" \"\\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>' (Mu \\<alpha> \\<tau>') \\<alpha>\"", "lemma jw_Unroll_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Unroll e : \\<tau>\"\n  and     \"atom \\<alpha> \\<sharp> (\\<Gamma>, \\<tau>)\"\n  obtains \\<tau>' where \"\\<tau> = subst_type \\<tau>' (Mu \\<alpha> \\<tau>') \\<alpha>\" \"\\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>'\"", "lemma jw_Fun_inv[elim]:\n  assumes \"{$$} \\<turnstile>\\<^sub>W v : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" \"value v\"\n  obtains e x where \"v = Lam x e \\<or> v = Rec x e\" \"atom x \\<sharp> (c::term)\"", "lemma jw_Mu_inv[elim]:\n  assumes \"{$$} \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\" \"value v\"\n  obtains v' where \"v = Roll v'\"", "lemma fresh_erase_fresh:\n  assumes \"atom x \\<sharp> \\<tau>\"\n  shows   \"atom x \\<sharp> erase \\<tau>\"", "lemma fresh_fmmap_erase_fresh:\n  assumes \"atom x \\<sharp> \\<Gamma>\"\n  shows   \"atom x \\<sharp> fmmap erase \\<Gamma>\"", "lemma erase_subst_type_shift[simp]:\n  \"erase (subst_type \\<tau> \\<tau>' \\<alpha>) = subst_type (erase \\<tau>) (erase \\<tau>') \\<alpha>\"", "lemma judge_imp_judge_weak:\n  assumes \"\\<Gamma> \\<turnstile> e : \\<tau>\"\n  shows   \"erase_env \\<Gamma> \\<turnstile>\\<^sub>W e : erase \\<tau>\"", "lemma fresh_shallow: \"atom x \\<sharp> e \\<Longrightarrow> atom x \\<sharp> \\<lparr>e\\<rparr>\"", "lemma steps_1_step[simp]: \"\\<lless> \\<pi>, e \\<ggreater> m\\<rightarrow>1 \\<lless> \\<pi>', e' \\<ggreater> = \\<lless> \\<pi>, e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma value_no_step[intro]:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, v \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>\\<^sub>2, t \\<ggreater>\" \"value v\"\n  shows   \"False\"", "lemma subst_term_perm:\n  assumes \"atom x' \\<sharp> (x, e)\"\n  shows \"e[v / x] = ((x \\<leftrightarrow> x') \\<bullet> e)[v / x']\"", "lemma s_Let_inv':\n  assumes \"\\<lless> \\<pi>, Let e\\<^sub>1 x e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\"\n  and     \"atom x \\<sharp> (e\\<^sub>1,\\<pi>)\"\n  obtains e\\<^sub>1' where \"(e' = e\\<^sub>2[e\\<^sub>1 / x] \\<and> value e\\<^sub>1 \\<and> \\<pi> = \\<pi>') \\<or> (\\<lless> \\<pi>, e\\<^sub>1 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>1' \\<ggreater> \\<and> e' = Let e\\<^sub>1' x e\\<^sub>2 \\<and> \\<not> value e\\<^sub>1)\"", "lemma s_Let_inv[consumes 2, case_names Let1 Let2, elim]:\n  assumes \"\\<lless> \\<pi>, Let e\\<^sub>1 x e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\"\n  and     \"atom x \\<sharp> (e\\<^sub>1,\\<pi>)\"\n  and     \"e' = e\\<^sub>2[e\\<^sub>1 / x] \\<and> value e\\<^sub>1 \\<and> \\<pi> = \\<pi>' \\<Longrightarrow> Q\"\n  and     \"\\<And>e\\<^sub>1'. \\<lless> \\<pi>, e\\<^sub>1 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>1' \\<ggreater> \\<and> e' = Let e\\<^sub>1' x e\\<^sub>2 \\<and> \\<not> value e\\<^sub>1 \\<Longrightarrow> Q\"\n  shows   \"Q\"", "lemma fresh_smallstep_I:\n  fixes x :: var\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> I\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\" \"atom x \\<sharp> e\"\n  shows   \"atom x \\<sharp> e'\"", "lemma fresh_smallstep_P:\n  fixes x :: var\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\" \"atom x \\<sharp> e\"\n  shows   \"atom x \\<sharp> e'\"", "lemma fresh_smallsteps_I:\n  fixes x :: var\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> I\\<rightarrow>i \\<lless> \\<pi>', e' \\<ggreater>\" \"atom x \\<sharp> e\"\n  shows   \"atom x \\<sharp> e'\"", "lemma fresh_ps_smallstep_P:\n  fixes x :: var\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\" \"atom x \\<sharp> e\" \"atom x \\<sharp> \\<pi>\"\n  shows   \"atom x \\<sharp> \\<pi>'\"", "lemma smallstepI_ps_eq:\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> I\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\"\n  shows   \"\\<pi> = \\<pi>'\"", "lemma smallstepI_ps_emptyD:\n  \"\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<Longrightarrow> \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\"\n  \"\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>\\<pi>, e'\\<ggreater> \\<Longrightarrow> \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\"", "lemma smallstepsI_ps_eq:\n  assumes \"\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow>i \\<lless>\\<pi>', e'\\<ggreater>\"\n  shows   \"\\<pi> = \\<pi>'\"", "lemma smallstepsI_ps_emptyD:\n  \"\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater> \\<Longrightarrow> \\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater>\"\n  \"\\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>\\<pi>, e'\\<ggreater> \\<Longrightarrow> \\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater>\"", "lemma smallstepV_consumes_proofstream:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, eV \\<ggreater> V\\<rightarrow> \\<lless> \\<pi>\\<^sub>2, eV' \\<ggreater>\"\n  obtains \\<pi> where \"\\<pi>\\<^sub>1 = \\<pi> @ \\<pi>\\<^sub>2\"", "lemma smallstepsV_consumes_proofstream:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, eV \\<ggreater> V\\<rightarrow>i \\<lless> \\<pi>\\<^sub>2, eV' \\<ggreater>\"\n  obtains \\<pi> where \"\\<pi>\\<^sub>1 = \\<pi> @ \\<pi>\\<^sub>2\"", "lemma smallstepP_generates_proofstream:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, eP \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>\\<^sub>2, eP' \\<ggreater>\"\n  obtains \\<pi> where \"\\<pi>\\<^sub>2 = \\<pi>\\<^sub>1 @ \\<pi>\"", "lemma smallstepsP_generates_proofstream:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, eP \\<ggreater> P\\<rightarrow>i \\<lless> \\<pi>\\<^sub>2, eP' \\<ggreater>\"\n  obtains \\<pi> where \"\\<pi>\\<^sub>2 = \\<pi>\\<^sub>1 @ \\<pi>\"", "lemma smallstepV_ps_append:\n  \"\\<lless> \\<pi>, eV \\<ggreater> V\\<rightarrow> \\<lless> \\<pi>', eV' \\<ggreater> \\<longleftrightarrow> \\<lless> \\<pi> @ X, eV \\<ggreater> V\\<rightarrow> \\<lless> \\<pi>' @ X, eV' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma smallstepV_ps_to_suffix:\n  assumes \"\\<lless>\\<pi>, e\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @ X, e'\\<ggreater>\"\n  obtains \\<pi>'' where \"\\<pi> = \\<pi>'' @ X\"", "lemma smallstepsV_ps_append:\n  \"\\<lless> \\<pi>, eV \\<ggreater> V\\<rightarrow>i \\<lless> \\<pi>', eV' \\<ggreater> \\<longleftrightarrow> \\<lless> \\<pi> @ X, eV \\<ggreater> V\\<rightarrow>i \\<lless> \\<pi>' @ X, eV' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma smallstepP_ps_prepend:\n  \"\\<lless> \\<pi>, eP \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>', eP' \\<ggreater> \\<longleftrightarrow> \\<lless> X @ \\<pi>, eP \\<ggreater> P\\<rightarrow> \\<lless> X @ \\<pi>', eP' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma smallstepsP_ps_prepend:\n  \"\\<lless> \\<pi>, eP \\<ggreater> P\\<rightarrow>i \\<lless> \\<pi>', eP' \\<ggreater> \\<longleftrightarrow> \\<lless> X @ \\<pi>, eP \\<ggreater> P\\<rightarrow>i \\<lless> X @ \\<pi>', eP' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma type_progress:\n  assumes \"{$$} \\<turnstile>\\<^sub>W e : \\<tau>\"\n  shows   \"value e \\<or> (\\<exists>e'. \\<lless> [], e \\<ggreater> I\\<rightarrow> \\<lless> [], e' \\<ggreater>)\"", "lemma fresh_tyenv_None:\n  fixes \\<Gamma> :: tyenv\n  shows \"atom x \\<sharp> \\<Gamma> \\<longleftrightarrow> \\<Gamma> $$ x = None\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma judge_weak_fresh_env_fresh_term[dest]:\n  fixes a :: var\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\" \"atom a \\<sharp> \\<Gamma>\"\n  shows   \"atom a \\<sharp> e\"", "lemma judge_weak_weakening_1:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\" \"atom y \\<sharp> e\"\n  shows   \"\\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\"", "lemma judge_weak_weakening_2:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\" \"atom y \\<sharp> \\<Gamma>\"\n  shows   \"\\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\"", "lemma judge_weak_weakening_env:\n  assumes \"{$$} \\<turnstile>\\<^sub>W e : \\<tau>\"\n  shows   \"\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\"", "lemma value_subst_value:\n  assumes \"value e\" \"value e'\"\n  shows   \"value (e[e' / x])\"", "lemma judge_weak_subst[intro]:\n  assumes \"\\<Gamma>(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\" \"{$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\"\n  shows   \"\\<Gamma> \\<turnstile>\\<^sub>W e[e' / a] : \\<tau>\"", "lemma type_preservation:\n  assumes \"\\<lless> [], e \\<ggreater> I\\<rightarrow> \\<lless> [], e' \\<ggreater>\" \"{$$} \\<turnstile>\\<^sub>W e : \\<tau>\"\n  shows   \"{$$} \\<turnstile>\\<^sub>W e' : \\<tau>\"", "lemma type_soundness:\n  assumes \"{$$} \\<turnstile>\\<^sub>W e : \\<tau>\"\n  shows   \"value e \\<or> (\\<exists>e'. \\<lless> [], e \\<ggreater> I\\<rightarrow> \\<lless> [], e' \\<ggreater> \\<and> {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)\""], "translations": [["", "lemma permute_map_list: \"p \\<bullet> l = map (\\<lambda>x. p \\<bullet> x) l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> l = map (permute p) l", "by (induct l) auto"], ["", "lemma map_fixed_eqvt: \"p \\<bullet> l = l \\<Longrightarrow> map_fixed v l (p \\<bullet> t) = map_fixed v l t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> l = l \\<Longrightarrow>\n    map_fixed v l (p \\<bullet> t) = map_fixed v l t", "proof (nominal_induct t avoiding: v l p rule: term.strong_induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Var x) = map_fixed v l (Var x)\n 3. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Lam x1 x2a) =\n                         map_fixed v l (Lam x1 x2a)\n 4. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Rec x1 x2a) =\n                         map_fixed v l (Rec x1 x2a)\n 5. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 6. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 7. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 8. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 9. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 10. \\<And>x1 x2a x3 v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n         \\<And>b ba bb.\n            bb \\<bullet> ba = ba \\<Longrightarrow>\n            map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n         \\<And>b ba bb.\n            bb \\<bullet> ba = ba \\<Longrightarrow>\n            map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                          map_fixed v l (Case x1 x2a x3)\nA total of 18 subgoals...", "case (Var x)"], ["proof (state)\nthis:\n  p \\<bullet> l = l\n\ngoal (18 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Var x) = map_fixed v l (Var x)\n 3. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Lam x1 x2a) =\n                         map_fixed v l (Lam x1 x2a)\n 4. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Rec x1 x2a) =\n                         map_fixed v l (Rec x1 x2a)\n 5. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 6. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 7. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 8. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 9. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 10. \\<And>x1 x2a x3 v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n         \\<And>b ba bb.\n            bb \\<bullet> ba = ba \\<Longrightarrow>\n            map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n         \\<And>b ba bb.\n            bb \\<bullet> ba = ba \\<Longrightarrow>\n            map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                          map_fixed v l (Case x1 x2a x3)\nA total of 18 subgoals...", "then"], ["proof (chain)\npicking this:\n  p \\<bullet> l = l", "show ?case"], ["proof (prove)\nusing this:\n  p \\<bullet> l = l\n\ngoal (1 subgoal):\n 1. map_fixed v l (p \\<bullet> Var x) = map_fixed v l (Var x)", "by (auto simp: term.supp supp_at_base permute_map_list list_eq_iff_nth_eq in_set_conv_nth)"], ["proof (state)\nthis:\n  map_fixed v l (p \\<bullet> Var x) = map_fixed v l (Var x)\n\ngoal (17 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Lam x1 x2a) =\n                         map_fixed v l (Lam x1 x2a)\n 3. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Rec x1 x2a) =\n                         map_fixed v l (Rec x1 x2a)\n 4. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 5. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 6. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 7. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 8. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 9. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                          map_fixed v l (Prj1 x)\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Lam x1 x2a) =\n                         map_fixed v l (Lam x1 x2a)\n 3. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Rec x1 x2a) =\n                         map_fixed v l (Rec x1 x2a)\n 4. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 5. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 6. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 7. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 8. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 9. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                          map_fixed v l (Prj1 x)\nA total of 17 subgoals...", "case (Lam y e)"], ["proof (state)\nthis:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  ?bb \\<bullet> ?ba = ?ba \\<Longrightarrow>\n  map_fixed ?b ?ba (?bb \\<bullet> e) = map_fixed ?b ?ba e\n  p \\<bullet> l = l\n\ngoal (17 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Lam x1 x2a) =\n                         map_fixed v l (Lam x1 x2a)\n 3. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Rec x1 x2a) =\n                         map_fixed v l (Rec x1 x2a)\n 4. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 5. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 6. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 7. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 8. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 9. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                          map_fixed v l (Prj1 x)\nA total of 17 subgoals...", "from Lam(1,2,3,5) Lam(4)[of p \"y # l\" v]"], ["proof (chain)\npicking this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  p \\<bullet> l = l\n  p \\<bullet> (y # l) = y # l \\<Longrightarrow>\n  map_fixed v (y # l) (p \\<bullet> e) = map_fixed v (y # l) e", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  p \\<bullet> l = l\n  p \\<bullet> (y # l) = y # l \\<Longrightarrow>\n  map_fixed v (y # l) (p \\<bullet> e) = map_fixed v (y # l) e\n\ngoal (1 subgoal):\n 1. map_fixed v l (p \\<bullet> Lam y e) = map_fixed v l (Lam y e)", "by (auto simp: fresh_perm)"], ["proof (state)\nthis:\n  map_fixed v l (p \\<bullet> Lam y e) = map_fixed v l (Lam y e)\n\ngoal (16 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Rec x1 x2a) =\n                         map_fixed v l (Rec x1 x2a)\n 3. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 4. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 5. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 6. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 7. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 8. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 9. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                         map_fixed v l (Prj1 x)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj2 x) =\n                          map_fixed v l (Prj2 x)\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Rec x1 x2a) =\n                         map_fixed v l (Rec x1 x2a)\n 3. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 4. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 5. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 6. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 7. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 8. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 9. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                         map_fixed v l (Prj1 x)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj2 x) =\n                          map_fixed v l (Prj2 x)\nA total of 16 subgoals...", "case (Rec y e)"], ["proof (state)\nthis:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  ?bb \\<bullet> ?ba = ?ba \\<Longrightarrow>\n  map_fixed ?b ?ba (?bb \\<bullet> e) = map_fixed ?b ?ba e\n  p \\<bullet> l = l\n\ngoal (16 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x1 x2a v l p.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l; atom x1 \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Rec x1 x2a) =\n                         map_fixed v l (Rec x1 x2a)\n 3. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 4. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 5. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 6. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 7. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 8. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 9. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                         map_fixed v l (Prj1 x)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj2 x) =\n                          map_fixed v l (Prj2 x)\nA total of 16 subgoals...", "from Rec(1,2,3,5) Rec(4)[of p \"y # l\" v]"], ["proof (chain)\npicking this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  p \\<bullet> l = l\n  p \\<bullet> (y # l) = y # l \\<Longrightarrow>\n  map_fixed v (y # l) (p \\<bullet> e) = map_fixed v (y # l) e", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  p \\<bullet> l = l\n  p \\<bullet> (y # l) = y # l \\<Longrightarrow>\n  map_fixed v (y # l) (p \\<bullet> e) = map_fixed v (y # l) e\n\ngoal (1 subgoal):\n 1. map_fixed v l (p \\<bullet> Rec y e) = map_fixed v l (Rec y e)", "by (auto simp: fresh_perm)"], ["proof (state)\nthis:\n  map_fixed v l (p \\<bullet> Rec y e) = map_fixed v l (Rec y e)\n\ngoal (15 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 3. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 4. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 5. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 6. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 7. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 8. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                         map_fixed v l (Prj1 x)\n 9. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj2 x) =\n                         map_fixed v l (Prj2 x)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Roll x) =\n                          map_fixed v l (Roll x)\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 3. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 4. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 5. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 6. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 7. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 8. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                         map_fixed v l (Prj1 x)\n 9. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj2 x) =\n                         map_fixed v l (Prj2 x)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Roll x) =\n                          map_fixed v l (Roll x)\nA total of 15 subgoals...", "case (Let e' y e)"], ["proof (state)\nthis:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  ?bb \\<bullet> ?ba = ?ba \\<Longrightarrow>\n  map_fixed ?b ?ba (?bb \\<bullet> e') = map_fixed ?b ?ba e'\n  ?bb \\<bullet> ?ba = ?ba \\<Longrightarrow>\n  map_fixed ?b ?ba (?bb \\<bullet> e) = map_fixed ?b ?ba e\n  p \\<bullet> l = l\n\ngoal (15 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 3. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 4. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 5. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        atom x2a \\<sharp> p;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Let x1 x2a x3) =\n                         map_fixed v l (Syntax.Let x1 x2a x3)\n 6. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 7. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 8. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                         map_fixed v l (Prj1 x)\n 9. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj2 x) =\n                         map_fixed v l (Prj2 x)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Roll x) =\n                          map_fixed v l (Roll x)\nA total of 15 subgoals...", "from Let(1,2,3,6) Let(4)[of p l v] Let(5)[of p \"y # l\" v]"], ["proof (chain)\npicking this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  p \\<bullet> l = l\n  p \\<bullet> l = l \\<Longrightarrow>\n  map_fixed v l (p \\<bullet> e') = map_fixed v l e'\n  p \\<bullet> (y # l) = y # l \\<Longrightarrow>\n  map_fixed v (y # l) (p \\<bullet> e) = map_fixed v (y # l) e", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  atom y \\<sharp> p\n  p \\<bullet> l = l\n  p \\<bullet> l = l \\<Longrightarrow>\n  map_fixed v l (p \\<bullet> e') = map_fixed v l e'\n  p \\<bullet> (y # l) = y # l \\<Longrightarrow>\n  map_fixed v (y # l) (p \\<bullet> e) = map_fixed v (y # l) e\n\ngoal (1 subgoal):\n 1. map_fixed v l (p \\<bullet> Syntax.Let e' y e) =\n    map_fixed v l (Syntax.Let e' y e)", "by (auto simp: fresh_perm)"], ["proof (state)\nthis:\n  map_fixed v l (p \\<bullet> Syntax.Let e' y e) =\n  map_fixed v l (Syntax.Let e' y e)\n\ngoal (14 subgoals):\n 1. \\<And>v l p.\n       p \\<bullet> l = l \\<Longrightarrow>\n       map_fixed v l (p \\<bullet> Unit) = map_fixed v l Unit\n 2. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj1 x) =\n                         map_fixed v l (Inj1 x)\n 3. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Inj2 x) =\n                         map_fixed v l (Inj2 x)\n 4. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Syntax.Pair x1 x2a) =\n                         map_fixed v l (Syntax.Pair x1 x2a)\n 5. \\<And>x1 x2a v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> App x1 x2a) =\n                         map_fixed v l (App x1 x2a)\n 6. \\<And>x1 x2a x3 v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x1) = map_fixed b ba x1;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x2a) = map_fixed b ba x2a;\n        \\<And>b ba bb.\n           bb \\<bullet> ba = ba \\<Longrightarrow>\n           map_fixed b ba (bb \\<bullet> x3) = map_fixed b ba x3;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Case x1 x2a x3) =\n                         map_fixed v l (Case x1 x2a x3)\n 7. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj1 x) =\n                         map_fixed v l (Prj1 x)\n 8. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Prj2 x) =\n                         map_fixed v l (Prj2 x)\n 9. \\<And>x v l p.\n       \\<lbrakk>\\<And>b ba bb.\n                   bb \\<bullet> ba = ba \\<Longrightarrow>\n                   map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n        p \\<bullet> l = l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (p \\<bullet> Roll x) =\n                         map_fixed v l (Roll x)\n 10. \\<And>x v l p.\n        \\<lbrakk>\\<And>b ba bb.\n                    bb \\<bullet> ba = ba \\<Longrightarrow>\n                    map_fixed b ba (bb \\<bullet> x) = map_fixed b ba x;\n         p \\<bullet> l = l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (p \\<bullet> Unroll x) =\n                          map_fixed v l (Unroll x)\nA total of 14 subgoals...", "qed (auto simp: permute_pure)"], ["", "lemma hash_eqvt[eqvt]: \"p \\<bullet> hash t = hash (p \\<bullet> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> hash t = hash (p \\<bullet> t)", "unfolding permute_pure hash_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. hash_real (map_fixed undefined [] t) =\n    hash_real (map_fixed undefined [] (p \\<bullet> t))", "by (auto simp: map_fixed_eqvt)"], ["", "lemma map_fixed_idle: \"{x. \\<not> atom x \\<sharp> t} \\<subseteq> set l \\<Longrightarrow> map_fixed v l t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<not> atom x \\<sharp> t} \\<subseteq> set l \\<Longrightarrow>\n    map_fixed v l t = t", "proof (nominal_induct t avoiding: v l rule: term.strong_induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x v l.\n       {xa. \\<not> atom xa \\<sharp> Var x}\n       \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l (Var x) = Var x\n 3. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Lam x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Lam x1 x2a) = Lam x1 x2a\n 4. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Rec x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Rec x1 x2a) = Rec x1 x2a\n 5. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 6. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 7. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 8. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 9. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 10. \\<And>x1 x2a x3 v l.\n        \\<lbrakk>\\<And>b ba.\n                    {x. \\<not> atom x \\<sharp> x1}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x1 = x1;\n         \\<And>b ba.\n            {x. \\<not> atom x \\<sharp> x2a}\n            \\<subseteq> set ba \\<Longrightarrow>\n            map_fixed b ba x2a = x2a;\n         \\<And>b ba.\n            {x. \\<not> atom x \\<sharp> x3}\n            \\<subseteq> set ba \\<Longrightarrow>\n            map_fixed b ba x3 = x3;\n         {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n         \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\nA total of 18 subgoals...", "case (Var x)"], ["proof (state)\nthis:\n  {xa. \\<not> atom xa \\<sharp> Var x} \\<subseteq> set l\n\ngoal (18 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x v l.\n       {xa. \\<not> atom xa \\<sharp> Var x}\n       \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l (Var x) = Var x\n 3. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Lam x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Lam x1 x2a) = Lam x1 x2a\n 4. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Rec x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Rec x1 x2a) = Rec x1 x2a\n 5. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 6. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 7. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 8. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 9. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 10. \\<And>x1 x2a x3 v l.\n        \\<lbrakk>\\<And>b ba.\n                    {x. \\<not> atom x \\<sharp> x1}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x1 = x1;\n         \\<And>b ba.\n            {x. \\<not> atom x \\<sharp> x2a}\n            \\<subseteq> set ba \\<Longrightarrow>\n            map_fixed b ba x2a = x2a;\n         \\<And>b ba.\n            {x. \\<not> atom x \\<sharp> x3}\n            \\<subseteq> set ba \\<Longrightarrow>\n            map_fixed b ba x3 = x3;\n         {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n         \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\nA total of 18 subgoals...", "then"], ["proof (chain)\npicking this:\n  {xa. \\<not> atom xa \\<sharp> Var x} \\<subseteq> set l", "show ?case"], ["proof (prove)\nusing this:\n  {xa. \\<not> atom xa \\<sharp> Var x} \\<subseteq> set l\n\ngoal (1 subgoal):\n 1. map_fixed v l (Var x) = Var x", "by (auto simp: subset_iff fresh_at_base)"], ["proof (state)\nthis:\n  map_fixed v l (Var x) = Var x\n\ngoal (17 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Lam x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Lam x1 x2a) = Lam x1 x2a\n 3. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Rec x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Rec x1 x2a) = Rec x1 x2a\n 4. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 5. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 6. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 7. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 8. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 9. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Lam x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Lam x1 x2a) = Lam x1 x2a\n 3. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Rec x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Rec x1 x2a) = Rec x1 x2a\n 4. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 5. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 6. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 7. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 8. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 9. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\nA total of 17 subgoals...", "case (Lam y e)"], ["proof (state)\nthis:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set ?ba \\<Longrightarrow>\n  map_fixed ?b ?ba e = e\n  {x. \\<not> atom x \\<sharp> Lam y e} \\<subseteq> set l\n\ngoal (17 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Lam x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Lam x1 x2a) = Lam x1 x2a\n 3. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Rec x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Rec x1 x2a) = Rec x1 x2a\n 4. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 5. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 6. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 7. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 8. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 9. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\nA total of 17 subgoals...", "from Lam(1,2,4) Lam(3)[of \"y # l\" v]"], ["proof (chain)\npicking this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> Lam y e} \\<subseteq> set l\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set (y # l) \\<Longrightarrow>\n  map_fixed v (y # l) e = e", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> Lam y e} \\<subseteq> set l\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set (y # l) \\<Longrightarrow>\n  map_fixed v (y # l) e = e\n\ngoal (1 subgoal):\n 1. map_fixed v l (Lam y e) = Lam y e", "by (auto simp: fresh_Pair Abs1_eq)"], ["proof (state)\nthis:\n  map_fixed v l (Lam y e) = Lam y e\n\ngoal (16 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Rec x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Rec x1 x2a) = Rec x1 x2a\n 3. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 4. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 5. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 6. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 7. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 8. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 9. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Prj2 x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Prj2 x) = Prj2 x\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Rec x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Rec x1 x2a) = Rec x1 x2a\n 3. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 4. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 5. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 6. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 7. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 8. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 9. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Prj2 x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Prj2 x) = Prj2 x\nA total of 16 subgoals...", "case (Rec y e)"], ["proof (state)\nthis:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set ?ba \\<Longrightarrow>\n  map_fixed ?b ?ba e = e\n  {x. \\<not> atom x \\<sharp> Rec y e} \\<subseteq> set l\n\ngoal (16 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x1 x2a v l.\n       \\<lbrakk>atom x1 \\<sharp> v; atom x1 \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Rec x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Rec x1 x2a) = Rec x1 x2a\n 3. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 4. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 5. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 6. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 7. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 8. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 9. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Prj2 x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Prj2 x) = Prj2 x\nA total of 16 subgoals...", "from Rec(1,2,4) Rec(3)[of \"y # l\" v]"], ["proof (chain)\npicking this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> Rec y e} \\<subseteq> set l\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set (y # l) \\<Longrightarrow>\n  map_fixed v (y # l) e = e", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> Rec y e} \\<subseteq> set l\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set (y # l) \\<Longrightarrow>\n  map_fixed v (y # l) e = e\n\ngoal (1 subgoal):\n 1. map_fixed v l (Rec y e) = Rec y e", "by (auto simp: fresh_Pair Abs1_eq)"], ["proof (state)\nthis:\n  map_fixed v l (Rec y e) = Rec y e\n\ngoal (15 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 3. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 4. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 5. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 6. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 7. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 8. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\n 9. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj2 x) = Prj2 x\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Roll x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Roll x) = Roll x\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 3. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 4. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 5. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 6. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 7. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 8. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\n 9. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj2 x) = Prj2 x\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Roll x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Roll x) = Roll x\nA total of 15 subgoals...", "case (Let e' y e)"], ["proof (state)\nthis:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> e'} \\<subseteq> set ?ba \\<Longrightarrow>\n  map_fixed ?b ?ba e' = e'\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set ?ba \\<Longrightarrow>\n  map_fixed ?b ?ba e = e\n  {x. \\<not> atom x \\<sharp> Syntax.Let e' y e} \\<subseteq> set l\n\ngoal (15 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 3. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 4. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 5. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>atom x2a \\<sharp> v; atom x2a \\<sharp> l;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x1}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Syntax.Let x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Let x1 x2a x3) =\n                         Syntax.Let x1 x2a x3\n 6. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 7. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 8. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\n 9. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj2 x) = Prj2 x\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Roll x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Roll x) = Roll x\nA total of 15 subgoals...", "from Let(1,2,5) Let(3)[of l v] Let(4)[of \"y # l\" v]"], ["proof (chain)\npicking this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> Syntax.Let e' y e} \\<subseteq> set l\n  {x. \\<not> atom x \\<sharp> e'} \\<subseteq> set l \\<Longrightarrow>\n  map_fixed v l e' = e'\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set (y # l) \\<Longrightarrow>\n  map_fixed v (y # l) e = e", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> v\n  atom y \\<sharp> l\n  {x. \\<not> atom x \\<sharp> Syntax.Let e' y e} \\<subseteq> set l\n  {x. \\<not> atom x \\<sharp> e'} \\<subseteq> set l \\<Longrightarrow>\n  map_fixed v l e' = e'\n  {x. \\<not> atom x \\<sharp> e} \\<subseteq> set (y # l) \\<Longrightarrow>\n  map_fixed v (y # l) e = e\n\ngoal (1 subgoal):\n 1. map_fixed v l (Syntax.Let e' y e) = Syntax.Let e' y e", "by (auto simp: fresh_Pair Abs1_eq)"], ["proof (state)\nthis:\n  map_fixed v l (Syntax.Let e' y e) = Syntax.Let e' y e\n\ngoal (14 subgoals):\n 1. \\<And>v l.\n       {x. \\<not> atom x \\<sharp> Unit} \\<subseteq> set l \\<Longrightarrow>\n       map_fixed v l Unit = Unit\n 2. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj1 x) = Inj1 x\n 3. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Inj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Inj2 x) = Inj2 x\n 4. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> Syntax.Pair x1 x2a}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Syntax.Pair x1 x2a) =\n                         Syntax.Pair x1 x2a\n 5. \\<And>x1 x2a v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        {x. \\<not> atom x \\<sharp> App x1 x2a} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (App x1 x2a) = App x1 x2a\n 6. \\<And>x1 x2a x3 v l.\n       \\<lbrakk>\\<And>b ba.\n                   {x. \\<not> atom x \\<sharp> x1}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x1 = x1;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x2a}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x2a = x2a;\n        \\<And>b ba.\n           {x. \\<not> atom x \\<sharp> x3}\n           \\<subseteq> set ba \\<Longrightarrow>\n           map_fixed b ba x3 = x3;\n        {x. \\<not> atom x \\<sharp> Case x1 x2a x3}\n        \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Case x1 x2a x3) = Case x1 x2a x3\n 7. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj1 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj1 x) = Prj1 x\n 8. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Prj2 x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Prj2 x) = Prj2 x\n 9. \\<And>x v l.\n       \\<lbrakk>\\<And>b ba.\n                   {xa. \\<not> atom xa \\<sharp> x}\n                   \\<subseteq> set ba \\<Longrightarrow>\n                   map_fixed b ba x = x;\n        {xa. \\<not> atom xa \\<sharp> Roll x} \\<subseteq> set l\\<rbrakk>\n       \\<Longrightarrow> map_fixed v l (Roll x) = Roll x\n 10. \\<And>x v l.\n        \\<lbrakk>\\<And>b ba.\n                    {xa. \\<not> atom xa \\<sharp> x}\n                    \\<subseteq> set ba \\<Longrightarrow>\n                    map_fixed b ba x = x;\n         {xa. \\<not> atom xa \\<sharp> Unroll x} \\<subseteq> set l\\<rbrakk>\n        \\<Longrightarrow> map_fixed v l (Unroll x) = Unroll x\nA total of 14 subgoals...", "qed (auto simp: subset_iff)"], ["", "lemma map_fixed_idle_closed:\n  \"closed t \\<Longrightarrow> map_fixed undefined [] t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed t \\<Longrightarrow> map_fixed undefined [] t = t", "by (rule map_fixed_idle) auto"], ["", "lemma map_fixed_inj_closed:\n  \"closed t \\<Longrightarrow> closed u \\<Longrightarrow> map_fixed undefined [] t = map_fixed undefined [] u \\<Longrightarrow> t = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>closed t; closed u;\n     map_fixed undefined [] t = map_fixed undefined [] u\\<rbrakk>\n    \\<Longrightarrow> t = u", "by (rule box_equals[OF _ map_fixed_idle_closed map_fixed_idle_closed])"], ["", "lemma hash_eq_hash_real_closed:\n  assumes \"closed t\"\n  shows \"hash t = hash_real t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hash t = hash_real t", "unfolding hash_def map_fixed_idle_closed[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. hash_real t = hash_real t", ".."], ["", "subsection \\<open>Substitution\\<close>"], ["", "nominal_function subst_term :: \"term \\<Rightarrow> term \\<Rightarrow> var \\<Rightarrow> term\" (\"_[_ '/ _]\" [250, 200, 200] 250) where\n  \"Unit[t' / x] = Unit\" |\n  \"(Var y)[t' / x] = (if x = y then t' else Var y)\" |\n  \"atom y \\<sharp> (x, t') \\<Longrightarrow> (Lam y t)[t' / x] = Lam y (t[t' / x])\" |\n  \"atom y \\<sharp> (x, t') \\<Longrightarrow> (Rec y t)[t' / x] = Rec y (t[t' / x])\" |\n  \"(Inj1 t)[t' / x] = Inj1 (t[t' / x])\" |\n  \"(Inj2 t)[t' / x] = Inj2 (t[t' / x])\" |\n  \"(Pair t1 t2)[t' / x] = Pair (t1[t' / x]) (t2[t' / x]) \" |\n  \"(Roll t)[t' / x] = Roll (t[t' / x])\" |\n  \"atom y \\<sharp> (x, t') \\<Longrightarrow> (Let t1 y t2)[t' / x] = Let (t1[t' / x]) y (t2[t' / x])\" |\n  \"(App t1 t2)[t' / x] = App (t1[t' / x]) (t2[t' / x])\" |\n  \"(Case t1 t2 t3)[t' / x] = Case (t1[t' / x]) (t2[t' / x]) (t3[t' / x])\" |\n  \"(Prj1 t)[t' / x] = Prj1 (t[t' / x])\" |\n  \"(Prj2 t)[t' / x] = Prj2 (t[t' / x])\" |\n  \"(Unroll t)[t' / x] = Unroll (t[t' / x])\" |\n  \"(Auth t)[t' / x] = Auth (t[t' / x])\" |\n  \"(Unauth t)[t' / x] = Unauth (t[t' / x])\" |\n  \"(Hash h)[t' / x] = Hash h\" |\n  \"(Hashed h t)[t' / x] = Hashed h (t[t' / x])\""], ["proof (prove)\ngoal (174 subgoals):\n 1. eqvt subst_term_graph_aux\n 2. \\<And>x y. subst_term_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>t' xa. x = (Unit, t', xa) \\<Longrightarrow> P;\n        \\<And>y t' xa. x = (Var y, t', xa) \\<Longrightarrow> P;\n        \\<And>y xa t' t.\n           \\<lbrakk>atom y \\<sharp> (xa, t'); x = (Lam y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y xa t' t.\n           \\<lbrakk>atom y \\<sharp> (xa, t'); x = (Rec y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Inj1 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Inj2 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Pair t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Roll t, t', xa) \\<Longrightarrow> P;\n        \\<And>y xa t' t1 t2.\n           \\<lbrakk>atom y \\<sharp> (xa, t');\n            x = (Syntax.Let t1 y t2, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa. x = (App t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 t' xa.\n           x = (Case t1 t2 t3, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Prj1 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Prj2 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Unroll t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Auth t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Unauth t, t', xa) \\<Longrightarrow> P;\n        \\<And>h t' xa. x = (Hash h, t', xa) \\<Longrightarrow> P;\n        \\<And>h t t' xa.\n           x = (Hashed h t, t', xa) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t' x t'a xa.\n       (Unit, t', x) = (Unit, t'a, xa) \\<Longrightarrow> Unit = Unit\n 5. \\<And>t' x y t'a xa.\n       (Unit, t', x) = (Var y, t'a, xa) \\<Longrightarrow>\n       Unit = (if xa = y then t'a else Var y)\n 6. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Lam y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (subst_term_sumC (t, t'a, xa))\n 7. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Rec y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (subst_term_sumC (t, t'a, xa))\n 8. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj1 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (subst_term_sumC (t, t'a, xa))\n 9. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj2 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (subst_term_sumC (t, t'a, xa))\n 10. \\<And>t' x t1 t2 t'a xa.\n        \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n         eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n         (Unit, t', x) = (Syntax.Pair t1 t2, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Pair (subst_term_sumC (t1, t'a, xa))\n                           (subst_term_sumC (t2, t'a, xa))\nA total of 174 subgoals...", "using [[simproc del: alpha_lst defined_all]]"], ["proof (prove)\ngoal (174 subgoals):\n 1. eqvt subst_term_graph_aux\n 2. \\<And>x y. subst_term_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>t' xa. x = (Unit, t', xa) \\<Longrightarrow> P;\n        \\<And>y t' xa. x = (Var y, t', xa) \\<Longrightarrow> P;\n        \\<And>y xa t' t.\n           \\<lbrakk>atom y \\<sharp> (xa, t'); x = (Lam y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y xa t' t.\n           \\<lbrakk>atom y \\<sharp> (xa, t'); x = (Rec y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Inj1 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Inj2 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Pair t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Roll t, t', xa) \\<Longrightarrow> P;\n        \\<And>y xa t' t1 t2.\n           \\<lbrakk>atom y \\<sharp> (xa, t');\n            x = (Syntax.Let t1 y t2, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa. x = (App t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 t' xa.\n           x = (Case t1 t2 t3, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Prj1 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Prj2 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Unroll t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Auth t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Unauth t, t', xa) \\<Longrightarrow> P;\n        \\<And>h t' xa. x = (Hash h, t', xa) \\<Longrightarrow> P;\n        \\<And>h t t' xa.\n           x = (Hashed h t, t', xa) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t' x t'a xa.\n       (Unit, t', x) = (Unit, t'a, xa) \\<Longrightarrow> Unit = Unit\n 5. \\<And>t' x y t'a xa.\n       (Unit, t', x) = (Var y, t'a, xa) \\<Longrightarrow>\n       Unit = (if xa = y then t'a else Var y)\n 6. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Lam y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (subst_term_sumC (t, t'a, xa))\n 7. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Rec y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (subst_term_sumC (t, t'a, xa))\n 8. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj1 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (subst_term_sumC (t, t'a, xa))\n 9. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj2 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (subst_term_sumC (t, t'a, xa))\n 10. \\<And>t' x t1 t2 t'a xa.\n        \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n         eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n         (Unit, t', x) = (Syntax.Pair t1 t2, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Pair (subst_term_sumC (t1, t'a, xa))\n                           (subst_term_sumC (t2, t'a, xa))\nA total of 174 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt subst_term_graph_aux", "by (simp add: eqvt_def subst_term_graph_aux_def)"], ["proof (prove)\ngoal (173 subgoals):\n 1. \\<And>x y. subst_term_graph x y \\<Longrightarrow> True\n 2. \\<And>P x.\n       \\<lbrakk>\\<And>t' xa. x = (Unit, t', xa) \\<Longrightarrow> P;\n        \\<And>y t' xa. x = (Var y, t', xa) \\<Longrightarrow> P;\n        \\<And>y xa t' t.\n           \\<lbrakk>atom y \\<sharp> (xa, t'); x = (Lam y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y xa t' t.\n           \\<lbrakk>atom y \\<sharp> (xa, t'); x = (Rec y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Inj1 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Inj2 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Pair t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Roll t, t', xa) \\<Longrightarrow> P;\n        \\<And>y xa t' t1 t2.\n           \\<lbrakk>atom y \\<sharp> (xa, t');\n            x = (Syntax.Let t1 y t2, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa. x = (App t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 t' xa.\n           x = (Case t1 t2 t3, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Prj1 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Prj2 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Unroll t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Auth t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Unauth t, t', xa) \\<Longrightarrow> P;\n        \\<And>h t' xa. x = (Hash h, t', xa) \\<Longrightarrow> P;\n        \\<And>h t t' xa.\n           x = (Hashed h t, t', xa) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>t' x t'a xa.\n       (Unit, t', x) = (Unit, t'a, xa) \\<Longrightarrow> Unit = Unit\n 4. \\<And>t' x y t'a xa.\n       (Unit, t', x) = (Var y, t'a, xa) \\<Longrightarrow>\n       Unit = (if xa = y then t'a else Var y)\n 5. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Lam y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (subst_term_sumC (t, t'a, xa))\n 6. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Rec y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (subst_term_sumC (t, t'a, xa))\n 7. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj1 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (subst_term_sumC (t, t'a, xa))\n 8. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj2 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (subst_term_sumC (t, t'a, xa))\n 9. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n        eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n        (Unit, t', x) = (Syntax.Pair t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (subst_term_sumC (t1, t'a, xa))\n                          (subst_term_sumC (t2, t'a, xa))\n 10. \\<And>t' x t t'a xa.\n        \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n         (Unit, t', x) = (Roll t, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Unit = Roll (subst_term_sumC (t, t'a, xa))\nA total of 173 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_term_graph x_ y_ \\<Longrightarrow> True", "by (erule subst_term_graph.induct) (auto simp: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (172 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t' xa. x = (Unit, t', xa) \\<Longrightarrow> P;\n        \\<And>y t' xa. x = (Var y, t', xa) \\<Longrightarrow> P;\n        \\<And>y xa t' t.\n           \\<lbrakk>atom y \\<sharp> (xa, t'); x = (Lam y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y xa t' t.\n           \\<lbrakk>atom y \\<sharp> (xa, t'); x = (Rec y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Inj1 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Inj2 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Pair t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Roll t, t', xa) \\<Longrightarrow> P;\n        \\<And>y xa t' t1 t2.\n           \\<lbrakk>atom y \\<sharp> (xa, t');\n            x = (Syntax.Let t1 y t2, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa. x = (App t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 t' xa.\n           x = (Case t1 t2 t3, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Prj1 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Prj2 t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Unroll t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Auth t, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (Unauth t, t', xa) \\<Longrightarrow> P;\n        \\<And>h t' xa. x = (Hash h, t', xa) \\<Longrightarrow> P;\n        \\<And>h t t' xa.\n           x = (Hashed h t, t', xa) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t' x t'a xa.\n       (Unit, t', x) = (Unit, t'a, xa) \\<Longrightarrow> Unit = Unit\n 3. \\<And>t' x y t'a xa.\n       (Unit, t', x) = (Var y, t'a, xa) \\<Longrightarrow>\n       Unit = (if xa = y then t'a else Var y)\n 4. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Lam y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (subst_term_sumC (t, t'a, xa))\n 5. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Rec y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (subst_term_sumC (t, t'a, xa))\n 6. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj1 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (subst_term_sumC (t, t'a, xa))\n 7. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj2 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (subst_term_sumC (t, t'a, xa))\n 8. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n        eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n        (Unit, t', x) = (Syntax.Pair t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (subst_term_sumC (t1, t'a, xa))\n                          (subst_term_sumC (t2, t'a, xa))\n 9. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Roll t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Roll (subst_term_sumC (t, t'a, xa))\n 10. \\<And>t' x y xa t'a t1 t2.\n        \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n         eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n         atom y \\<sharp> (xa, t'a);\n         (Unit, t', x) = (Syntax.Let t1 y t2, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Let (subst_term_sumC (t1, t'a, xa)) y\n                           (subst_term_sumC (t2, t'a, xa))\nA total of 172 subgoals...", "apply clarify"], ["proof (prove)\ngoal (172 subgoals):\n 1. \\<And>P a aa b.\n       \\<lbrakk>\\<And>t' x. (a, aa, b) = (Unit, t', x) \\<Longrightarrow> P;\n        \\<And>y t' x. (a, aa, b) = (Var y, t', x) \\<Longrightarrow> P;\n        \\<And>y x t' t.\n           \\<lbrakk>atom y \\<sharp> (x, t');\n            (a, aa, b) = (Lam y t, t', x)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y x t' t.\n           \\<lbrakk>atom y \\<sharp> (x, t');\n            (a, aa, b) = (Rec y t, t', x)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t t' x. (a, aa, b) = (Inj1 t, t', x) \\<Longrightarrow> P;\n        \\<And>t t' x. (a, aa, b) = (Inj2 t, t', x) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' x.\n           (a, aa, b) = (Syntax.Pair t1 t2, t', x) \\<Longrightarrow> P;\n        \\<And>t t' x. (a, aa, b) = (Roll t, t', x) \\<Longrightarrow> P;\n        \\<And>y x t' t1 t2.\n           \\<lbrakk>atom y \\<sharp> (x, t');\n            (a, aa, b) = (Syntax.Let t1 y t2, t', x)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 t' x.\n           (a, aa, b) = (App t1 t2, t', x) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 t' x.\n           (a, aa, b) = (Case t1 t2 t3, t', x) \\<Longrightarrow> P;\n        \\<And>t t' x. (a, aa, b) = (Prj1 t, t', x) \\<Longrightarrow> P;\n        \\<And>t t' x. (a, aa, b) = (Prj2 t, t', x) \\<Longrightarrow> P;\n        \\<And>t t' x. (a, aa, b) = (Unroll t, t', x) \\<Longrightarrow> P;\n        \\<And>t t' x. (a, aa, b) = (Auth t, t', x) \\<Longrightarrow> P;\n        \\<And>t t' x. (a, aa, b) = (Unauth t, t', x) \\<Longrightarrow> P;\n        \\<And>h t' x. (a, aa, b) = (Hash h, t', x) \\<Longrightarrow> P;\n        \\<And>h t t' x.\n           (a, aa, b) = (Hashed h t, t', x) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t' x t'a xa.\n       (Unit, t', x) = (Unit, t'a, xa) \\<Longrightarrow> Unit = Unit\n 3. \\<And>t' x y t'a xa.\n       (Unit, t', x) = (Var y, t'a, xa) \\<Longrightarrow>\n       Unit = (if xa = y then t'a else Var y)\n 4. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Lam y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (subst_term_sumC (t, t'a, xa))\n 5. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Rec y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (subst_term_sumC (t, t'a, xa))\n 6. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj1 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (subst_term_sumC (t, t'a, xa))\n 7. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj2 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (subst_term_sumC (t, t'a, xa))\n 8. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n        eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n        (Unit, t', x) = (Syntax.Pair t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (subst_term_sumC (t1, t'a, xa))\n                          (subst_term_sumC (t2, t'a, xa))\n 9. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Roll t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Roll (subst_term_sumC (t, t'a, xa))\n 10. \\<And>t' x y xa t'a t1 t2.\n        \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n         eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n         atom y \\<sharp> (xa, t'a);\n         (Unit, t', x) = (Syntax.Let t1 y t2, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Let (subst_term_sumC (t1, t'a, xa)) y\n                           (subst_term_sumC (t2, t'a, xa))\nA total of 172 subgoals...", "subgoal for P a b t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t' x. (a, b, t) = (Unit, t', x) \\<Longrightarrow> P;\n     \\<And>y t' x. (a, b, t) = (Var y, t', x) \\<Longrightarrow> P;\n     \\<And>y x t' ta.\n        \\<lbrakk>atom y \\<sharp> (x, t');\n         (a, b, t) = (Lam y ta, t', x)\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>y x t' ta.\n        \\<lbrakk>atom y \\<sharp> (x, t');\n         (a, b, t) = (Rec y ta, t', x)\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>ta t' x. (a, b, t) = (Inj1 ta, t', x) \\<Longrightarrow> P;\n     \\<And>ta t' x. (a, b, t) = (Inj2 ta, t', x) \\<Longrightarrow> P;\n     \\<And>t1 t2 t' x.\n        (a, b, t) = (Syntax.Pair t1 t2, t', x) \\<Longrightarrow> P;\n     \\<And>ta t' x. (a, b, t) = (Roll ta, t', x) \\<Longrightarrow> P;\n     \\<And>y x t' t1 t2.\n        \\<lbrakk>atom y \\<sharp> (x, t');\n         (a, b, t) = (Syntax.Let t1 y t2, t', x)\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>t1 t2 t' x. (a, b, t) = (App t1 t2, t', x) \\<Longrightarrow> P;\n     \\<And>t1 t2 t3 t' x.\n        (a, b, t) = (Case t1 t2 t3, t', x) \\<Longrightarrow> P;\n     \\<And>ta t' x. (a, b, t) = (Prj1 ta, t', x) \\<Longrightarrow> P;\n     \\<And>ta t' x. (a, b, t) = (Prj2 ta, t', x) \\<Longrightarrow> P;\n     \\<And>ta t' x. (a, b, t) = (Unroll ta, t', x) \\<Longrightarrow> P;\n     \\<And>ta t' x. (a, b, t) = (Auth ta, t', x) \\<Longrightarrow> P;\n     \\<And>ta t' x. (a, b, t) = (Unauth ta, t', x) \\<Longrightarrow> P;\n     \\<And>h t' x. (a, b, t) = (Hash h, t', x) \\<Longrightarrow> P;\n     \\<And>h ta t' x.\n        (a, b, t) = (Hashed h ta, t', x) \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (rule term.strong_exhaust[of a P \"(b, t)\"]) (auto simp: fresh_star_def fresh_Pair)"], ["proof (prove)\ngoal (171 subgoals):\n 1. \\<And>t' x t'a xa.\n       (Unit, t', x) = (Unit, t'a, xa) \\<Longrightarrow> Unit = Unit\n 2. \\<And>t' x y t'a xa.\n       (Unit, t', x) = (Var y, t'a, xa) \\<Longrightarrow>\n       Unit = (if xa = y then t'a else Var y)\n 3. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Lam y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (subst_term_sumC (t, t'a, xa))\n 4. \\<And>t' x y xa t'a t.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Rec y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (subst_term_sumC (t, t'a, xa))\n 5. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj1 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (subst_term_sumC (t, t'a, xa))\n 6. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Inj2 t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (subst_term_sumC (t, t'a, xa))\n 7. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n        eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n        (Unit, t', x) = (Syntax.Pair t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (subst_term_sumC (t1, t'a, xa))\n                          (subst_term_sumC (t2, t'a, xa))\n 8. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa); True;\n        (Unit, t', x) = (Roll t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Roll (subst_term_sumC (t, t'a, xa))\n 9. \\<And>t' x y xa t'a t1 t2.\n       \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n        eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n        atom y \\<sharp> (xa, t'a);\n        (Unit, t', x) = (Syntax.Let t1 y t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Let (subst_term_sumC (t1, t'a, xa)) y\n                          (subst_term_sumC (t2, t'a, xa))\n 10. \\<And>t' x t1 t2 t'a xa.\n        \\<lbrakk>eqvt_at subst_term_sumC (t1, t'a, xa);\n         eqvt_at subst_term_sumC (t2, t'a, xa); True; True;\n         (Unit, t', x) = (App t1 t2, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          App (subst_term_sumC (t1, t'a, xa))\n                           (subst_term_sumC (t2, t'a, xa))\nA total of 171 subgoals...", "apply (simp_all add: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y x t' t ya xa t'a ta.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa);\n        eqvt_at subst_term_sumC (ta, t'a, xa); atom y \\<sharp> (xa, t'a);\n        atom ya \\<sharp> (xa, t'a);\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and>\n        t' = t'a \\<and> x = xa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. subst_term_sumC (t, t'a, xa) =\n                         [[atom ya]]lst. subst_term_sumC (ta, t'a, xa)\n 2. \\<And>y x t' t ya xa t'a ta.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa);\n        eqvt_at subst_term_sumC (ta, t'a, xa); atom y \\<sharp> (xa, t'a);\n        atom ya \\<sharp> (xa, t'a);\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and>\n        t' = t'a \\<and> x = xa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. subst_term_sumC (t, t'a, xa) =\n                         [[atom ya]]lst. subst_term_sumC (ta, t'a, xa)\n 3. \\<And>y x t' t1 t2 ya xa t'a t1a t2a.\n       \\<lbrakk>eqvt_at subst_term_sumC (t2, t'a, xa);\n        eqvt_at subst_term_sumC (t1a, t'a, xa);\n        eqvt_at subst_term_sumC (t2a, t'a, xa); atom y \\<sharp> (xa, t'a);\n        atom ya \\<sharp> (xa, t'a);\n        [[atom y]]lst. t2 = [[atom ya]]lst. t2a \\<and>\n        t1 = t1a \\<and> t' = t'a \\<and> x = xa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. subst_term_sumC (t2, t'a, xa) =\n                         [[atom ya]]lst. subst_term_sumC (t2a, t'a, xa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n     eqvt_at subst_term_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (xa_, t'a_);\n     atom ya_ \\<sharp> (xa_, t'a_);\n     [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_ \\<and>\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. subst_term_sumC (t_, t'a_, xa_) =\n                      [[atom ya_]]lst. subst_term_sumC (ta_, t'a_, xa_)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n     eqvt_at subst_term_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (xa_, t'a_);\n     atom ya_ \\<sharp> (xa_, t'a_);\n     [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_;\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. subst_term_sumC (t_, t'a_, xa_) =\n                      [[atom ya_]]lst. subst_term_sumC (ta_, t'a_, xa_)", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n     eqvt_at subst_term_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (xa_, t'a_);\n     atom ya_ \\<sharp> (xa_, t'a_); t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. subst_term_sumC (t_, t'a_, xa_)\n 2. \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n     eqvt_at subst_term_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (xa_, t'a_);\n     atom ya_ \\<sharp> (xa_, t'a_); t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> {atom y_, atom ya_} \\<sharp>* (t'a_, xa_)\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n        eqvt_at subst_term_sumC (ta_, t'a_, xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t'_ = t'a_ \\<and> x_ = xa_; supp p \\<sharp>* (t'a_, xa_)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   y_]]lst. subst_term_sumC (t_, t'a_, xa_)) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t_, t'a_, xa_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n        eqvt_at subst_term_sumC (ta_, t'a_, xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t'_ = t'a_ \\<and> x_ = xa_; supp p \\<sharp>* (t'a_, xa_)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   ya_]]lst. subst_term_sumC (ta_, t'a_, xa_)) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> ta_, t'a_, xa_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> subst_term_sumC)\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                subst_term_sumC\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_term_sumC)\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_term_sumC\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. subst_term_sumC (t_, t'a_, xa_)\n 2. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> subst_term_sumC)\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                subst_term_sumC\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_term_sumC)\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_term_sumC\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom y_ \\<sharp> t'a_ \\<and> atom ya_ \\<sharp> t'a_\n 3. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> subst_term_sumC)\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                   subst_term_sumC\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_term_sumC)\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_term_sumC\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* t'a_ \\<and> supp p \\<sharp>* xa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t_, t'a_, xa_)\n 4. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> subst_term_sumC)\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                   subst_term_sumC\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_term_sumC)\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_term_sumC\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* t'a_ \\<and> supp p \\<sharp>* xa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> ta_, t'a_, xa_)", "apply (simp_all add: perm_supp_eq Abs_fresh_iff fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y x t' t ya xa t'a ta.\n       \\<lbrakk>eqvt_at subst_term_sumC (t, t'a, xa);\n        eqvt_at subst_term_sumC (ta, t'a, xa); atom y \\<sharp> (xa, t'a);\n        atom ya \\<sharp> (xa, t'a);\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and>\n        t' = t'a \\<and> x = xa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. subst_term_sumC (t, t'a, xa) =\n                         [[atom ya]]lst. subst_term_sumC (ta, t'a, xa)\n 2. \\<And>y x t' t1 t2 ya xa t'a t1a t2a.\n       \\<lbrakk>eqvt_at subst_term_sumC (t2, t'a, xa);\n        eqvt_at subst_term_sumC (t1a, t'a, xa);\n        eqvt_at subst_term_sumC (t2a, t'a, xa); atom y \\<sharp> (xa, t'a);\n        atom ya \\<sharp> (xa, t'a);\n        [[atom y]]lst. t2 = [[atom ya]]lst. t2a \\<and>\n        t1 = t1a \\<and> t' = t'a \\<and> x = xa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. subst_term_sumC (t2, t'a, xa) =\n                         [[atom ya]]lst. subst_term_sumC (t2a, t'a, xa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n     eqvt_at subst_term_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (xa_, t'a_);\n     atom ya_ \\<sharp> (xa_, t'a_);\n     [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_ \\<and>\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. subst_term_sumC (t_, t'a_, xa_) =\n                      [[atom ya_]]lst. subst_term_sumC (ta_, t'a_, xa_)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n     eqvt_at subst_term_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (xa_, t'a_);\n     atom ya_ \\<sharp> (xa_, t'a_);\n     [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_;\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. subst_term_sumC (t_, t'a_, xa_) =\n                      [[atom ya_]]lst. subst_term_sumC (ta_, t'a_, xa_)", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n     eqvt_at subst_term_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (xa_, t'a_);\n     atom ya_ \\<sharp> (xa_, t'a_); t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. subst_term_sumC (t_, t'a_, xa_)\n 2. \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n     eqvt_at subst_term_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (xa_, t'a_);\n     atom ya_ \\<sharp> (xa_, t'a_); t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> {atom y_, atom ya_} \\<sharp>* (t'a_, xa_)\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n        eqvt_at subst_term_sumC (ta_, t'a_, xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t'_ = t'a_ \\<and> x_ = xa_; supp p \\<sharp>* (t'a_, xa_)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   y_]]lst. subst_term_sumC (t_, t'a_, xa_)) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t_, t'a_, xa_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at subst_term_sumC (t_, t'a_, xa_);\n        eqvt_at subst_term_sumC (ta_, t'a_, xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t'_ = t'a_ \\<and> x_ = xa_; supp p \\<sharp>* (t'a_, xa_)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   ya_]]lst. subst_term_sumC (ta_, t'a_, xa_)) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> ta_, t'a_, xa_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> subst_term_sumC)\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                subst_term_sumC\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_term_sumC)\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_term_sumC\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. subst_term_sumC (t_, t'a_, xa_)\n 2. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> subst_term_sumC)\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                subst_term_sumC\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_term_sumC)\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_term_sumC\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom y_ \\<sharp> t'a_ \\<and> atom ya_ \\<sharp> t'a_\n 3. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> subst_term_sumC)\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                   subst_term_sumC\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_term_sumC)\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_term_sumC\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* t'a_ \\<and> supp p \\<sharp>* xa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t_, t'a_, xa_)\n 4. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> subst_term_sumC)\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                   subst_term_sumC\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_term_sumC)\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_term_sumC\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* t'a_ \\<and> supp p \\<sharp>* xa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> ta_, t'a_, xa_)", "apply (simp_all add: perm_supp_eq Abs_fresh_iff fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x t' t1 t2 ya xa t'a t1a t2a.\n       \\<lbrakk>eqvt_at subst_term_sumC (t2, t'a, xa);\n        eqvt_at subst_term_sumC (t1a, t'a, xa);\n        eqvt_at subst_term_sumC (t2a, t'a, xa); atom y \\<sharp> (xa, t'a);\n        atom ya \\<sharp> (xa, t'a);\n        [[atom y]]lst. t2 = [[atom ya]]lst. t2a \\<and>\n        t1 = t1a \\<and> t' = t'a \\<and> x = xa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. subst_term_sumC (t2, t'a, xa) =\n                         [[atom ya]]lst. subst_term_sumC (t2a, t'a, xa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t2_, t'a_, xa_);\n     eqvt_at subst_term_sumC (t1a_, t'a_, xa_);\n     eqvt_at subst_term_sumC (t2a_, t'a_, xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     [[atom y_]]lst. t2_ = [[atom ya_]]lst. t2a_ \\<and>\n     t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. subst_term_sumC (t2_, t'a_, xa_) =\n                      [[atom ya_]]lst. subst_term_sumC (t2a_, t'a_, xa_)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t2_, t'a_, xa_);\n     eqvt_at subst_term_sumC (t1a_, t'a_, xa_);\n     eqvt_at subst_term_sumC (t2a_, t'a_, xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     [[atom y_]]lst. t2_ = [[atom ya_]]lst. t2a_;\n     t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. subst_term_sumC (t2_, t'a_, xa_) =\n                      [[atom ya_]]lst. subst_term_sumC (t2a_, t'a_, xa_)", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at subst_term_sumC (t2_, t'a_, xa_);\n     eqvt_at subst_term_sumC (t1a_, t'a_, xa_);\n     eqvt_at subst_term_sumC (t2a_, t'a_, xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. subst_term_sumC (t2_, t'a_, xa_)\n 2. \\<lbrakk>eqvt_at subst_term_sumC (t2_, t'a_, xa_);\n     eqvt_at subst_term_sumC (t1a_, t'a_, xa_);\n     eqvt_at subst_term_sumC (t2a_, t'a_, xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> {atom y_, atom ya_} \\<sharp>* (t'a_, xa_)\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at subst_term_sumC (t2_, t'a_, xa_);\n        eqvt_at subst_term_sumC (t1a_, t'a_, xa_);\n        eqvt_at subst_term_sumC (t2a_, t'a_, xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* (t'a_, xa_)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   y_]]lst. subst_term_sumC (t2_, t'a_, xa_)) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t2_, t'a_, xa_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at subst_term_sumC (t2_, t'a_, xa_);\n        eqvt_at subst_term_sumC (t1a_, t'a_, xa_);\n        eqvt_at subst_term_sumC (t2a_, t'a_, xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* (t'a_, xa_)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   ya_]]lst. subst_term_sumC (t2a_, t'a_, xa_)) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> t2a_, t'a_, xa_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> subst_term_sumC)\n                 (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                subst_term_sumC\n                 (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_term_sumC)\n         (p \\<bullet> t1a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_term_sumC\n         (p \\<bullet> t1a_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_term_sumC)\n         (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_term_sumC\n         (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. subst_term_sumC (t2_, t'a_, xa_)\n 2. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> subst_term_sumC)\n                 (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                subst_term_sumC\n                 (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_term_sumC)\n         (p \\<bullet> t1a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_term_sumC\n         (p \\<bullet> t1a_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_term_sumC)\n         (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_term_sumC\n         (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n     t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom y_ \\<sharp> t'a_ \\<and> atom ya_ \\<sharp> t'a_\n 3. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> subst_term_sumC)\n                    (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                   subst_term_sumC\n                    (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_term_sumC)\n            (p \\<bullet> t1a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_term_sumC\n            (p \\<bullet> t1a_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_term_sumC)\n            (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_term_sumC\n            (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* t'a_ \\<and> supp p \\<sharp>* xa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. subst_term_sumC\n              (p \\<bullet> t2_, t'a_, xa_)\n 4. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> subst_term_sumC)\n                    (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                   subst_term_sumC\n                    (p \\<bullet> t2_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_term_sumC)\n            (p \\<bullet> t1a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_term_sumC\n            (p \\<bullet> t1a_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_term_sumC)\n            (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_term_sumC\n            (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        atom y_ \\<sharp> (xa_, t'a_); atom ya_ \\<sharp> (xa_, t'a_);\n        t1_ = t1a_ \\<and> t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* t'a_ \\<and> supp p \\<sharp>* xa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> t2a_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. subst_term_sumC\n               (p \\<bullet> t2a_, t'a_, xa_)", "apply (simp_all add: perm_supp_eq Abs_fresh_iff fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All subst_term_dom", "by lexicographic_order"], ["", "type_synonym tenv = \"(var, term) fmap\""], ["", "nominal_function psubst_term :: \"term \\<Rightarrow> tenv \\<Rightarrow> term\" where\n  \"psubst_term Unit f = Unit\" |\n  \"psubst_term (Var y) f = (case f $$ y of Some t \\<Rightarrow> t | None \\<Rightarrow> Var y)\" |\n  \"atom y \\<sharp> f \\<Longrightarrow> psubst_term (Lam y t) f = Lam y (psubst_term t f)\" |\n  \"atom y \\<sharp> f \\<Longrightarrow> psubst_term (Rec y t) f = Rec y (psubst_term t f)\" |\n  \"psubst_term (Inj1 t) f = Inj1 (psubst_term t f)\" |\n  \"psubst_term (Inj2 t) f = Inj2 (psubst_term t f)\" |\n  \"psubst_term (Pair t1 t2) f = Pair (psubst_term t1 f) (psubst_term t2 f) \" |\n  \"psubst_term (Roll t) f = Roll (psubst_term t f)\" |\n  \"atom y \\<sharp> f \\<Longrightarrow> psubst_term (Let t1 y t2) f = Let (psubst_term t1 f) y (psubst_term t2 f)\" |\n  \"psubst_term (App t1 t2) f = App (psubst_term t1 f) (psubst_term t2 f)\" |\n  \"psubst_term (Case t1 t2 t3) f = Case (psubst_term t1 f) (psubst_term t2 f) (psubst_term t3 f)\" |\n  \"psubst_term (Prj1 t) f = Prj1 (psubst_term t f)\" |\n  \"psubst_term (Prj2 t) f = Prj2 (psubst_term t f)\" |\n  \"psubst_term (Unroll t) f = Unroll (psubst_term t f)\" |\n  \"psubst_term (Auth t) f = Auth (psubst_term t f)\" |\n  \"psubst_term (Unauth t) f = Unauth (psubst_term t f)\" |\n  \"psubst_term (Hash h) f = Hash h\" |\n  \"psubst_term (Hashed h t) f = Hashed h (psubst_term t f)\""], ["proof (prove)\ngoal (174 subgoals):\n 1. eqvt psubst_term_graph_aux\n 2. \\<And>x y. psubst_term_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>f. x = (Unit, f) \\<Longrightarrow> P;\n        \\<And>y f. x = (Var y, f) \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; x = (Lam y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; x = (Rec y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t f. x = (Inj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Inj2 t, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 f. x = (Syntax.Pair t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Roll t, f) \\<Longrightarrow> P;\n        \\<And>y f t1 t2.\n           \\<lbrakk>atom y \\<sharp> f; x = (Syntax.Let t1 y t2, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 f. x = (App t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 f. x = (Case t1 t2 t3, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Prj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Prj2 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Unroll t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Auth t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Unauth t, f) \\<Longrightarrow> P;\n        \\<And>h f. x = (Hash h, f) \\<Longrightarrow> P;\n        \\<And>h t f. x = (Hashed h t, f) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>f fa. (Unit, f) = (Unit, fa) \\<Longrightarrow> Unit = Unit\n 5. \\<And>f y fa.\n       (Unit, f) = (Var y, fa) \\<Longrightarrow>\n       Unit =\n       (case fa $$ y of None \\<Rightarrow> Var y | Some t \\<Rightarrow> t)\n 6. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Lam y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (psubst_term_sumC (t, fa))\n 7. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Rec y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (psubst_term_sumC (t, fa))\n 8. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj1 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (psubst_term_sumC (t, fa))\n 9. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj2 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (psubst_term_sumC (t, fa))\n 10. \\<And>f t1 t2 fa.\n        \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n         eqvt_at psubst_term_sumC (t2, fa); True; True;\n         (Unit, f) = (Syntax.Pair t1 t2, fa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Pair (psubst_term_sumC (t1, fa))\n                           (psubst_term_sumC (t2, fa))\nA total of 174 subgoals...", "using [[simproc del: alpha_lst defined_all]]"], ["proof (prove)\ngoal (174 subgoals):\n 1. eqvt psubst_term_graph_aux\n 2. \\<And>x y. psubst_term_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>f. x = (Unit, f) \\<Longrightarrow> P;\n        \\<And>y f. x = (Var y, f) \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; x = (Lam y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; x = (Rec y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t f. x = (Inj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Inj2 t, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 f. x = (Syntax.Pair t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Roll t, f) \\<Longrightarrow> P;\n        \\<And>y f t1 t2.\n           \\<lbrakk>atom y \\<sharp> f; x = (Syntax.Let t1 y t2, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 f. x = (App t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 f. x = (Case t1 t2 t3, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Prj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Prj2 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Unroll t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Auth t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Unauth t, f) \\<Longrightarrow> P;\n        \\<And>h f. x = (Hash h, f) \\<Longrightarrow> P;\n        \\<And>h t f. x = (Hashed h t, f) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>f fa. (Unit, f) = (Unit, fa) \\<Longrightarrow> Unit = Unit\n 5. \\<And>f y fa.\n       (Unit, f) = (Var y, fa) \\<Longrightarrow>\n       Unit =\n       (case fa $$ y of None \\<Rightarrow> Var y | Some t \\<Rightarrow> t)\n 6. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Lam y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (psubst_term_sumC (t, fa))\n 7. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Rec y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (psubst_term_sumC (t, fa))\n 8. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj1 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (psubst_term_sumC (t, fa))\n 9. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj2 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (psubst_term_sumC (t, fa))\n 10. \\<And>f t1 t2 fa.\n        \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n         eqvt_at psubst_term_sumC (t2, fa); True; True;\n         (Unit, f) = (Syntax.Pair t1 t2, fa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Pair (psubst_term_sumC (t1, fa))\n                           (psubst_term_sumC (t2, fa))\nA total of 174 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt psubst_term_graph_aux", "by (simp add: eqvt_def psubst_term_graph_aux_def)"], ["proof (prove)\ngoal (173 subgoals):\n 1. \\<And>x y. psubst_term_graph x y \\<Longrightarrow> True\n 2. \\<And>P x.\n       \\<lbrakk>\\<And>f. x = (Unit, f) \\<Longrightarrow> P;\n        \\<And>y f. x = (Var y, f) \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; x = (Lam y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; x = (Rec y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t f. x = (Inj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Inj2 t, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 f. x = (Syntax.Pair t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Roll t, f) \\<Longrightarrow> P;\n        \\<And>y f t1 t2.\n           \\<lbrakk>atom y \\<sharp> f; x = (Syntax.Let t1 y t2, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 f. x = (App t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 f. x = (Case t1 t2 t3, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Prj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Prj2 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Unroll t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Auth t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Unauth t, f) \\<Longrightarrow> P;\n        \\<And>h f. x = (Hash h, f) \\<Longrightarrow> P;\n        \\<And>h t f. x = (Hashed h t, f) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>f fa. (Unit, f) = (Unit, fa) \\<Longrightarrow> Unit = Unit\n 4. \\<And>f y fa.\n       (Unit, f) = (Var y, fa) \\<Longrightarrow>\n       Unit =\n       (case fa $$ y of None \\<Rightarrow> Var y | Some t \\<Rightarrow> t)\n 5. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Lam y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (psubst_term_sumC (t, fa))\n 6. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Rec y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (psubst_term_sumC (t, fa))\n 7. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj1 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (psubst_term_sumC (t, fa))\n 8. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj2 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (psubst_term_sumC (t, fa))\n 9. \\<And>f t1 t2 fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n        eqvt_at psubst_term_sumC (t2, fa); True; True;\n        (Unit, f) = (Syntax.Pair t1 t2, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (psubst_term_sumC (t1, fa))\n                          (psubst_term_sumC (t2, fa))\n 10. \\<And>f t fa.\n        \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n         (Unit, f) = (Roll t, fa)\\<rbrakk>\n        \\<Longrightarrow> Unit = Roll (psubst_term_sumC (t, fa))\nA total of 173 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. psubst_term_graph x_ y_ \\<Longrightarrow> True", "by (erule psubst_term_graph.induct) (auto simp: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (172 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>f. x = (Unit, f) \\<Longrightarrow> P;\n        \\<And>y f. x = (Var y, f) \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; x = (Lam y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; x = (Rec y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t f. x = (Inj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Inj2 t, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 f. x = (Syntax.Pair t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Roll t, f) \\<Longrightarrow> P;\n        \\<And>y f t1 t2.\n           \\<lbrakk>atom y \\<sharp> f; x = (Syntax.Let t1 y t2, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 f. x = (App t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 f. x = (Case t1 t2 t3, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Prj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Prj2 t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Unroll t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Auth t, f) \\<Longrightarrow> P;\n        \\<And>t f. x = (Unauth t, f) \\<Longrightarrow> P;\n        \\<And>h f. x = (Hash h, f) \\<Longrightarrow> P;\n        \\<And>h t f. x = (Hashed h t, f) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>f fa. (Unit, f) = (Unit, fa) \\<Longrightarrow> Unit = Unit\n 3. \\<And>f y fa.\n       (Unit, f) = (Var y, fa) \\<Longrightarrow>\n       Unit =\n       (case fa $$ y of None \\<Rightarrow> Var y | Some t \\<Rightarrow> t)\n 4. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Lam y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (psubst_term_sumC (t, fa))\n 5. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Rec y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (psubst_term_sumC (t, fa))\n 6. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj1 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (psubst_term_sumC (t, fa))\n 7. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj2 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (psubst_term_sumC (t, fa))\n 8. \\<And>f t1 t2 fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n        eqvt_at psubst_term_sumC (t2, fa); True; True;\n        (Unit, f) = (Syntax.Pair t1 t2, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (psubst_term_sumC (t1, fa))\n                          (psubst_term_sumC (t2, fa))\n 9. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Roll t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Roll (psubst_term_sumC (t, fa))\n 10. \\<And>f y fa t1 t2.\n        \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n         eqvt_at psubst_term_sumC (t2, fa); True; True; atom y \\<sharp> fa;\n         (Unit, f) = (Syntax.Let t1 y t2, fa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Let (psubst_term_sumC (t1, fa)) y\n                           (psubst_term_sumC (t2, fa))\nA total of 172 subgoals...", "apply clarify"], ["proof (prove)\ngoal (172 subgoals):\n 1. \\<And>P a b.\n       \\<lbrakk>\\<And>f. (a, b) = (Unit, f) \\<Longrightarrow> P;\n        \\<And>y f. (a, b) = (Var y, f) \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; (a, b) = (Lam y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y f t.\n           \\<lbrakk>atom y \\<sharp> f; (a, b) = (Rec y t, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t f. (a, b) = (Inj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. (a, b) = (Inj2 t, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 f. (a, b) = (Syntax.Pair t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t f. (a, b) = (Roll t, f) \\<Longrightarrow> P;\n        \\<And>y f t1 t2.\n           \\<lbrakk>atom y \\<sharp> f;\n            (a, b) = (Syntax.Let t1 y t2, f)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>t1 t2 f. (a, b) = (App t1 t2, f) \\<Longrightarrow> P;\n        \\<And>t1 t2 t3 f. (a, b) = (Case t1 t2 t3, f) \\<Longrightarrow> P;\n        \\<And>t f. (a, b) = (Prj1 t, f) \\<Longrightarrow> P;\n        \\<And>t f. (a, b) = (Prj2 t, f) \\<Longrightarrow> P;\n        \\<And>t f. (a, b) = (Unroll t, f) \\<Longrightarrow> P;\n        \\<And>t f. (a, b) = (Auth t, f) \\<Longrightarrow> P;\n        \\<And>t f. (a, b) = (Unauth t, f) \\<Longrightarrow> P;\n        \\<And>h f. (a, b) = (Hash h, f) \\<Longrightarrow> P;\n        \\<And>h t f. (a, b) = (Hashed h t, f) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>f fa. (Unit, f) = (Unit, fa) \\<Longrightarrow> Unit = Unit\n 3. \\<And>f y fa.\n       (Unit, f) = (Var y, fa) \\<Longrightarrow>\n       Unit =\n       (case fa $$ y of None \\<Rightarrow> Var y | Some t \\<Rightarrow> t)\n 4. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Lam y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (psubst_term_sumC (t, fa))\n 5. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Rec y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (psubst_term_sumC (t, fa))\n 6. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj1 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (psubst_term_sumC (t, fa))\n 7. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj2 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (psubst_term_sumC (t, fa))\n 8. \\<And>f t1 t2 fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n        eqvt_at psubst_term_sumC (t2, fa); True; True;\n        (Unit, f) = (Syntax.Pair t1 t2, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (psubst_term_sumC (t1, fa))\n                          (psubst_term_sumC (t2, fa))\n 9. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Roll t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Roll (psubst_term_sumC (t, fa))\n 10. \\<And>f y fa t1 t2.\n        \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n         eqvt_at psubst_term_sumC (t2, fa); True; True; atom y \\<sharp> fa;\n         (Unit, f) = (Syntax.Let t1 y t2, fa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Let (psubst_term_sumC (t1, fa)) y\n                           (psubst_term_sumC (t2, fa))\nA total of 172 subgoals...", "subgoal for P a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>f. (a, b) = (Unit, f) \\<Longrightarrow> P;\n     \\<And>y f. (a, b) = (Var y, f) \\<Longrightarrow> P;\n     \\<And>y f t.\n        \\<lbrakk>atom y \\<sharp> f; (a, b) = (Lam y t, f)\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>y f t.\n        \\<lbrakk>atom y \\<sharp> f; (a, b) = (Rec y t, f)\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>t f. (a, b) = (Inj1 t, f) \\<Longrightarrow> P;\n     \\<And>t f. (a, b) = (Inj2 t, f) \\<Longrightarrow> P;\n     \\<And>t1 t2 f. (a, b) = (Syntax.Pair t1 t2, f) \\<Longrightarrow> P;\n     \\<And>t f. (a, b) = (Roll t, f) \\<Longrightarrow> P;\n     \\<And>y f t1 t2.\n        \\<lbrakk>atom y \\<sharp> f;\n         (a, b) = (Syntax.Let t1 y t2, f)\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>t1 t2 f. (a, b) = (App t1 t2, f) \\<Longrightarrow> P;\n     \\<And>t1 t2 t3 f. (a, b) = (Case t1 t2 t3, f) \\<Longrightarrow> P;\n     \\<And>t f. (a, b) = (Prj1 t, f) \\<Longrightarrow> P;\n     \\<And>t f. (a, b) = (Prj2 t, f) \\<Longrightarrow> P;\n     \\<And>t f. (a, b) = (Unroll t, f) \\<Longrightarrow> P;\n     \\<And>t f. (a, b) = (Auth t, f) \\<Longrightarrow> P;\n     \\<And>t f. (a, b) = (Unauth t, f) \\<Longrightarrow> P;\n     \\<And>h f. (a, b) = (Hash h, f) \\<Longrightarrow> P;\n     \\<And>h t f. (a, b) = (Hashed h t, f) \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (rule term.strong_exhaust[of a P b]) (auto simp: fresh_star_def fresh_Pair)"], ["proof (prove)\ngoal (171 subgoals):\n 1. \\<And>f fa. (Unit, f) = (Unit, fa) \\<Longrightarrow> Unit = Unit\n 2. \\<And>f y fa.\n       (Unit, f) = (Var y, fa) \\<Longrightarrow>\n       Unit =\n       (case fa $$ y of None \\<Rightarrow> Var y | Some t \\<Rightarrow> t)\n 3. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Lam y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam y (psubst_term_sumC (t, fa))\n 4. \\<And>f y fa t.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True; atom y \\<sharp> fa;\n        (Unit, f) = (Rec y t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec y (psubst_term_sumC (t, fa))\n 5. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj1 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (psubst_term_sumC (t, fa))\n 6. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Inj2 t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (psubst_term_sumC (t, fa))\n 7. \\<And>f t1 t2 fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n        eqvt_at psubst_term_sumC (t2, fa); True; True;\n        (Unit, f) = (Syntax.Pair t1 t2, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (psubst_term_sumC (t1, fa))\n                          (psubst_term_sumC (t2, fa))\n 8. \\<And>f t fa.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa); True;\n        (Unit, f) = (Roll t, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit = Roll (psubst_term_sumC (t, fa))\n 9. \\<And>f y fa t1 t2.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n        eqvt_at psubst_term_sumC (t2, fa); True; True; atom y \\<sharp> fa;\n        (Unit, f) = (Syntax.Let t1 y t2, fa)\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Let (psubst_term_sumC (t1, fa)) y\n                          (psubst_term_sumC (t2, fa))\n 10. \\<And>f t1 t2 fa.\n        \\<lbrakk>eqvt_at psubst_term_sumC (t1, fa);\n         eqvt_at psubst_term_sumC (t2, fa); True; True;\n         (Unit, f) = (App t1 t2, fa)\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          App (psubst_term_sumC (t1, fa))\n                           (psubst_term_sumC (t2, fa))\nA total of 171 subgoals...", "apply (simp_all add: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y f ya fa.\n       y = ya \\<and> f = fa \\<Longrightarrow>\n       (case fa $$ ya of None \\<Rightarrow> Var y\n        | Some t \\<Rightarrow> t) =\n       (case fa $$ ya of None \\<Rightarrow> Var ya | Some t \\<Rightarrow> t)\n 2. \\<And>y f t ya fa ta.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa);\n        eqvt_at psubst_term_sumC (ta, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (ta, fa)\n 3. \\<And>y f t ya fa ta.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa);\n        eqvt_at psubst_term_sumC (ta, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (ta, fa)\n 4. \\<And>y f t1 t2 ya fa t1a t2a.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t2, fa);\n        eqvt_at psubst_term_sumC (t1a, fa);\n        eqvt_at psubst_term_sumC (t2a, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t2 = [[atom ya]]lst. t2a \\<and>\n        t1 = t1a \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t2, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (t2a, fa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y_ = ya_ \\<and> f_ = fa_ \\<Longrightarrow>\n    (case fa_ $$ ya_ of None \\<Rightarrow> Var y_\n     | Some t \\<Rightarrow> t) =\n    (case fa_ $$ ya_ of None \\<Rightarrow> Var ya_ | Some t \\<Rightarrow> t)", "by clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y f t ya fa ta.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa);\n        eqvt_at psubst_term_sumC (ta, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (ta, fa)\n 2. \\<And>y f t ya fa ta.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa);\n        eqvt_at psubst_term_sumC (ta, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (ta, fa)\n 3. \\<And>y f t1 t2 ya fa t1a t2a.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t2, fa);\n        eqvt_at psubst_term_sumC (t1a, fa);\n        eqvt_at psubst_term_sumC (t2a, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t2 = [[atom ya]]lst. t2a \\<and>\n        t1 = t1a \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t2, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (t2a, fa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n     eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_;\n     [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_ \\<and> f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. psubst_term_sumC (t_, fa_) =\n                      [[atom ya_]]lst. psubst_term_sumC (ta_, fa_)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n     eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_;\n     f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. psubst_term_sumC (t_, fa_) =\n                      [[atom ya_]]lst. psubst_term_sumC (ta_, fa_)", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n     eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. psubst_term_sumC (t_, fa_)\n 2. \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n     eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> {atom y_, atom ya_} \\<sharp>* fa_\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n        eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n        atom ya_ \\<sharp> fa_; f_ = fa_; supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   y_]]lst. psubst_term_sumC (t_, fa_)) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t_, fa_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n        eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n        atom ya_ \\<sharp> fa_; f_ = fa_; supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   ya_]]lst. psubst_term_sumC (ta_, fa_)) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> ta_, fa_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> psubst_term_sumC)\n                 (p \\<bullet> t_, p \\<bullet> fa_) =\n                psubst_term_sumC (p \\<bullet> t_, p \\<bullet> fa_);\n     \\<forall>p.\n        (p \\<bullet> psubst_term_sumC) (p \\<bullet> ta_, p \\<bullet> fa_) =\n        psubst_term_sumC (p \\<bullet> ta_, p \\<bullet> fa_);\n     atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_; f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. psubst_term_sumC (t_, fa_)\n 2. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> psubst_term_sumC)\n                    (p \\<bullet> t_, p \\<bullet> fa_) =\n                   psubst_term_sumC (p \\<bullet> t_, p \\<bullet> fa_);\n        \\<forall>p.\n           (p \\<bullet> psubst_term_sumC)\n            (p \\<bullet> ta_, p \\<bullet> fa_) =\n           psubst_term_sumC (p \\<bullet> ta_, p \\<bullet> fa_);\n        atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_; f_ = fa_;\n        supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t_, p \\<bullet> fa_) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t_, fa_)\n 3. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> psubst_term_sumC)\n                    (p \\<bullet> t_, p \\<bullet> fa_) =\n                   psubst_term_sumC (p \\<bullet> t_, p \\<bullet> fa_);\n        \\<forall>p.\n           (p \\<bullet> psubst_term_sumC)\n            (p \\<bullet> ta_, p \\<bullet> fa_) =\n           psubst_term_sumC (p \\<bullet> ta_, p \\<bullet> fa_);\n        atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_; f_ = fa_;\n        supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> ta_, p \\<bullet> fa_) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> ta_, fa_)", "apply (simp_all add: perm_supp_eq Abs_fresh_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y f t ya fa ta.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t, fa);\n        eqvt_at psubst_term_sumC (ta, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (ta, fa)\n 2. \\<And>y f t1 t2 ya fa t1a t2a.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t2, fa);\n        eqvt_at psubst_term_sumC (t1a, fa);\n        eqvt_at psubst_term_sumC (t2a, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t2 = [[atom ya]]lst. t2a \\<and>\n        t1 = t1a \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t2, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (t2a, fa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n     eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_;\n     [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_ \\<and> f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. psubst_term_sumC (t_, fa_) =\n                      [[atom ya_]]lst. psubst_term_sumC (ta_, fa_)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n     eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_;\n     f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. psubst_term_sumC (t_, fa_) =\n                      [[atom ya_]]lst. psubst_term_sumC (ta_, fa_)", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n     eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. psubst_term_sumC (t_, fa_)\n 2. \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n     eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> {atom y_, atom ya_} \\<sharp>* fa_\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n        eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n        atom ya_ \\<sharp> fa_; f_ = fa_; supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   y_]]lst. psubst_term_sumC (t_, fa_)) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t_, fa_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t_, fa_);\n        eqvt_at psubst_term_sumC (ta_, fa_); atom y_ \\<sharp> fa_;\n        atom ya_ \\<sharp> fa_; f_ = fa_; supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   ya_]]lst. psubst_term_sumC (ta_, fa_)) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> ta_, fa_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> psubst_term_sumC)\n                 (p \\<bullet> t_, p \\<bullet> fa_) =\n                psubst_term_sumC (p \\<bullet> t_, p \\<bullet> fa_);\n     \\<forall>p.\n        (p \\<bullet> psubst_term_sumC) (p \\<bullet> ta_, p \\<bullet> fa_) =\n        psubst_term_sumC (p \\<bullet> ta_, p \\<bullet> fa_);\n     atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_; f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. psubst_term_sumC (t_, fa_)\n 2. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> psubst_term_sumC)\n                    (p \\<bullet> t_, p \\<bullet> fa_) =\n                   psubst_term_sumC (p \\<bullet> t_, p \\<bullet> fa_);\n        \\<forall>p.\n           (p \\<bullet> psubst_term_sumC)\n            (p \\<bullet> ta_, p \\<bullet> fa_) =\n           psubst_term_sumC (p \\<bullet> ta_, p \\<bullet> fa_);\n        atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_; f_ = fa_;\n        supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t_, p \\<bullet> fa_) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t_, fa_)\n 3. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> psubst_term_sumC)\n                    (p \\<bullet> t_, p \\<bullet> fa_) =\n                   psubst_term_sumC (p \\<bullet> t_, p \\<bullet> fa_);\n        \\<forall>p.\n           (p \\<bullet> psubst_term_sumC)\n            (p \\<bullet> ta_, p \\<bullet> fa_) =\n           psubst_term_sumC (p \\<bullet> ta_, p \\<bullet> fa_);\n        atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_; f_ = fa_;\n        supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> ta_, p \\<bullet> fa_) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> ta_, fa_)", "apply (simp_all add: perm_supp_eq Abs_fresh_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y f t1 t2 ya fa t1a t2a.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t2, fa);\n        eqvt_at psubst_term_sumC (t1a, fa);\n        eqvt_at psubst_term_sumC (t2a, fa); atom y \\<sharp> fa;\n        atom ya \\<sharp> fa;\n        [[atom y]]lst. t2 = [[atom ya]]lst. t2a \\<and>\n        t1 = t1a \\<and> f = fa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. psubst_term_sumC (t2, fa) =\n                         [[atom ya]]lst. psubst_term_sumC (t2a, fa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t2_, fa_);\n     eqvt_at psubst_term_sumC (t1a_, fa_);\n     eqvt_at psubst_term_sumC (t2a_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_;\n     [[atom y_]]lst. t2_ = [[atom ya_]]lst. t2a_ \\<and>\n     t1_ = t1a_ \\<and> f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. psubst_term_sumC (t2_, fa_) =\n                      [[atom ya_]]lst. psubst_term_sumC (t2a_, fa_)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t2_, fa_);\n     eqvt_at psubst_term_sumC (t1a_, fa_);\n     eqvt_at psubst_term_sumC (t2a_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; [[atom y_]]lst. t2_ = [[atom ya_]]lst. t2a_;\n     t1_ = t1a_ \\<and> f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. psubst_term_sumC (t2_, fa_) =\n                      [[atom ya_]]lst. psubst_term_sumC (t2a_, fa_)", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at psubst_term_sumC (t2_, fa_);\n     eqvt_at psubst_term_sumC (t1a_, fa_);\n     eqvt_at psubst_term_sumC (t2a_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; t1_ = t1a_ \\<and> f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. psubst_term_sumC (t2_, fa_)\n 2. \\<lbrakk>eqvt_at psubst_term_sumC (t2_, fa_);\n     eqvt_at psubst_term_sumC (t1a_, fa_);\n     eqvt_at psubst_term_sumC (t2a_, fa_); atom y_ \\<sharp> fa_;\n     atom ya_ \\<sharp> fa_; t1_ = t1a_ \\<and> f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> {atom y_, atom ya_} \\<sharp>* fa_\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t2_, fa_);\n        eqvt_at psubst_term_sumC (t1a_, fa_);\n        eqvt_at psubst_term_sumC (t2a_, fa_); atom y_ \\<sharp> fa_;\n        atom ya_ \\<sharp> fa_; t1_ = t1a_ \\<and> f_ = fa_;\n        supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   y_]]lst. psubst_term_sumC (t2_, fa_)) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t2_, fa_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at psubst_term_sumC (t2_, fa_);\n        eqvt_at psubst_term_sumC (t1a_, fa_);\n        eqvt_at psubst_term_sumC (t2a_, fa_); atom y_ \\<sharp> fa_;\n        atom ya_ \\<sharp> fa_; t1_ = t1a_ \\<and> f_ = fa_;\n        supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   ya_]]lst. psubst_term_sumC (t2a_, fa_)) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> t2a_, fa_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> psubst_term_sumC)\n                 (p \\<bullet> t2_, p \\<bullet> fa_) =\n                psubst_term_sumC (p \\<bullet> t2_, p \\<bullet> fa_);\n     \\<forall>p.\n        (p \\<bullet> psubst_term_sumC) (p \\<bullet> t1a_, p \\<bullet> fa_) =\n        psubst_term_sumC (p \\<bullet> t1a_, p \\<bullet> fa_);\n     \\<forall>p.\n        (p \\<bullet> psubst_term_sumC) (p \\<bullet> t2a_, p \\<bullet> fa_) =\n        psubst_term_sumC (p \\<bullet> t2a_, p \\<bullet> fa_);\n     atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_;\n     t1_ = t1a_ \\<and> f_ = fa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. psubst_term_sumC (t2_, fa_)\n 2. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> psubst_term_sumC)\n                    (p \\<bullet> t2_, p \\<bullet> fa_) =\n                   psubst_term_sumC (p \\<bullet> t2_, p \\<bullet> fa_);\n        \\<forall>p.\n           (p \\<bullet> psubst_term_sumC)\n            (p \\<bullet> t1a_, p \\<bullet> fa_) =\n           psubst_term_sumC (p \\<bullet> t1a_, p \\<bullet> fa_);\n        \\<forall>p.\n           (p \\<bullet> psubst_term_sumC)\n            (p \\<bullet> t2a_, p \\<bullet> fa_) =\n           psubst_term_sumC (p \\<bullet> t2a_, p \\<bullet> fa_);\n        atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_;\n        t1_ = t1a_ \\<and> f_ = fa_; supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t2_, p \\<bullet> fa_) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. psubst_term_sumC\n              (p \\<bullet> t2_, fa_)\n 3. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> psubst_term_sumC)\n                    (p \\<bullet> t2_, p \\<bullet> fa_) =\n                   psubst_term_sumC (p \\<bullet> t2_, p \\<bullet> fa_);\n        \\<forall>p.\n           (p \\<bullet> psubst_term_sumC)\n            (p \\<bullet> t1a_, p \\<bullet> fa_) =\n           psubst_term_sumC (p \\<bullet> t1a_, p \\<bullet> fa_);\n        \\<forall>p.\n           (p \\<bullet> psubst_term_sumC)\n            (p \\<bullet> t2a_, p \\<bullet> fa_) =\n           psubst_term_sumC (p \\<bullet> t2a_, p \\<bullet> fa_);\n        atom y_ \\<sharp> fa_; atom ya_ \\<sharp> fa_;\n        t1_ = t1a_ \\<and> f_ = fa_; supp p \\<sharp>* fa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> t2a_, p \\<bullet> fa_) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. psubst_term_sumC\n               (p \\<bullet> t2a_, fa_)", "apply (simp_all add: perm_supp_eq Abs_fresh_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All psubst_term_dom", "by lexicographic_order"], ["", "nominal_function subst_type :: \"ty \\<Rightarrow> ty \\<Rightarrow> tvar \\<Rightarrow> ty\" where\n  \"subst_type One t' x = One\" |\n  \"subst_type (Fun t1 t2) t' x = Fun (subst_type t1 t' x) (subst_type t2 t' x)\" |\n  \"subst_type (Sum t1 t2) t' x = Sum (subst_type t1 t' x) (subst_type t2 t' x)\" |\n  \"subst_type (Prod t1 t2) t' x = Prod (subst_type t1 t' x) (subst_type t2 t' x)\" |\n  \"atom y \\<sharp> (t', x) \\<Longrightarrow> subst_type (Mu y t) t' x = Mu y (subst_type t t' x)\" |\n  \"subst_type (Alpha y) t' x = (if y = x then t' else Alpha y)\" |\n  \"subst_type (AuthT t) t' x = AuthT (subst_type t t' x)\""], ["proof (prove)\ngoal (31 subgoals):\n 1. eqvt subst_type_graph_aux\n 2. \\<And>x y. subst_type_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>t' xa. x = (One, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa. x = (Fun t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Sum t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Prod t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>y t' xa t.\n           \\<lbrakk>atom y \\<sharp> (t', xa); x = (Mu y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y t' xa. x = (Alpha y, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (AuthT t, t', xa) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t' x t'a xa.\n       (One, t', x) = (One, t'a, xa) \\<Longrightarrow> One = One\n 5. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Fun t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 6. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Sum t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 7. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Prod t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 8. \\<And>t' x y t'a xa t.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (t'a, xa); (One, t', x) = (Mu y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = Mu y (subst_type_sumC (t, t'a, xa))\n 9. \\<And>t' x y t'a xa.\n       (One, t', x) = (Alpha y, t'a, xa) \\<Longrightarrow>\n       One = (if y = xa then t'a else Alpha y)\n 10. \\<And>t' x t t'a xa.\n        \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n         (One, t', x) = (AuthT t, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> One = AuthT (subst_type_sumC (t, t'a, xa))\nA total of 31 subgoals...", "using [[simproc del: alpha_lst defined_all]]"], ["proof (prove)\ngoal (31 subgoals):\n 1. eqvt subst_type_graph_aux\n 2. \\<And>x y. subst_type_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>t' xa. x = (One, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa. x = (Fun t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Sum t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Prod t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>y t' xa t.\n           \\<lbrakk>atom y \\<sharp> (t', xa); x = (Mu y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y t' xa. x = (Alpha y, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (AuthT t, t', xa) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t' x t'a xa.\n       (One, t', x) = (One, t'a, xa) \\<Longrightarrow> One = One\n 5. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Fun t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 6. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Sum t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 7. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Prod t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 8. \\<And>t' x y t'a xa t.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (t'a, xa); (One, t', x) = (Mu y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = Mu y (subst_type_sumC (t, t'a, xa))\n 9. \\<And>t' x y t'a xa.\n       (One, t', x) = (Alpha y, t'a, xa) \\<Longrightarrow>\n       One = (if y = xa then t'a else Alpha y)\n 10. \\<And>t' x t t'a xa.\n        \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n         (One, t', x) = (AuthT t, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> One = AuthT (subst_type_sumC (t, t'a, xa))\nA total of 31 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt subst_type_graph_aux", "by (simp add: eqvt_def subst_type_graph_aux_def)"], ["proof (prove)\ngoal (30 subgoals):\n 1. \\<And>x y. subst_type_graph x y \\<Longrightarrow> True\n 2. \\<And>P x.\n       \\<lbrakk>\\<And>t' xa. x = (One, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa. x = (Fun t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Sum t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Prod t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>y t' xa t.\n           \\<lbrakk>atom y \\<sharp> (t', xa); x = (Mu y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y t' xa. x = (Alpha y, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (AuthT t, t', xa) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>t' x t'a xa.\n       (One, t', x) = (One, t'a, xa) \\<Longrightarrow> One = One\n 4. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Fun t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 5. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Sum t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 6. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Prod t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 7. \\<And>t' x y t'a xa t.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (t'a, xa); (One, t', x) = (Mu y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = Mu y (subst_type_sumC (t, t'a, xa))\n 8. \\<And>t' x y t'a xa.\n       (One, t', x) = (Alpha y, t'a, xa) \\<Longrightarrow>\n       One = (if y = xa then t'a else Alpha y)\n 9. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        (One, t', x) = (AuthT t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = AuthT (subst_type_sumC (t, t'a, xa))\n 10. \\<And>t1 t2 t' x t1a t2a t'a xa.\n        \\<lbrakk>eqvt_at subst_type_sumC (t1, t', x);\n         eqvt_at subst_type_sumC (t2, t', x);\n         eqvt_at subst_type_sumC (t1a, t'a, xa);\n         eqvt_at subst_type_sumC (t2a, t'a, xa); True; True; True; True;\n         (Fun t1 t2, t', x) = (Fun t1a t2a, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Fun (subst_type_sumC (t1, t', x))\n                           (subst_type_sumC (t2, t', x)) =\n                          Fun (subst_type_sumC (t1a, t'a, xa))\n                           (subst_type_sumC (t2a, t'a, xa))\nA total of 30 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_type_graph x_ y_ \\<Longrightarrow> True", "by (erule subst_type_graph.induct) (auto simp: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (29 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t' xa. x = (One, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa. x = (Fun t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Sum t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' xa.\n           x = (Syntax.Prod t1 t2, t', xa) \\<Longrightarrow> P;\n        \\<And>y t' xa t.\n           \\<lbrakk>atom y \\<sharp> (t', xa); x = (Mu y t, t', xa)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y t' xa. x = (Alpha y, t', xa) \\<Longrightarrow> P;\n        \\<And>t t' xa. x = (AuthT t, t', xa) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t' x t'a xa.\n       (One, t', x) = (One, t'a, xa) \\<Longrightarrow> One = One\n 3. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Fun t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 4. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Sum t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 5. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Prod t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 6. \\<And>t' x y t'a xa t.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (t'a, xa); (One, t', x) = (Mu y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = Mu y (subst_type_sumC (t, t'a, xa))\n 7. \\<And>t' x y t'a xa.\n       (One, t', x) = (Alpha y, t'a, xa) \\<Longrightarrow>\n       One = (if y = xa then t'a else Alpha y)\n 8. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        (One, t', x) = (AuthT t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = AuthT (subst_type_sumC (t, t'a, xa))\n 9. \\<And>t1 t2 t' x t1a t2a t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t', x);\n        eqvt_at subst_type_sumC (t2, t', x);\n        eqvt_at subst_type_sumC (t1a, t'a, xa);\n        eqvt_at subst_type_sumC (t2a, t'a, xa); True; True; True; True;\n        (Fun t1 t2, t', x) = (Fun t1a t2a, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Fun (subst_type_sumC (t1, t', x))\n                          (subst_type_sumC (t2, t', x)) =\n                         Fun (subst_type_sumC (t1a, t'a, xa))\n                          (subst_type_sumC (t2a, t'a, xa))\n 10. \\<And>t1 t2 t' x t1a t2a t'a xa.\n        \\<lbrakk>eqvt_at subst_type_sumC (t1, t', x);\n         eqvt_at subst_type_sumC (t2, t', x);\n         eqvt_at subst_type_sumC (t1a, t'a, xa);\n         eqvt_at subst_type_sumC (t2a, t'a, xa); True; True; True; True;\n         (Fun t1 t2, t', x) = (Syntax.Sum t1a t2a, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Fun (subst_type_sumC (t1, t', x))\n                           (subst_type_sumC (t2, t', x)) =\n                          Syntax.Sum (subst_type_sumC (t1a, t'a, xa))\n                           (subst_type_sumC (t2a, t'a, xa))\nA total of 29 subgoals...", "apply clarify"], ["proof (prove)\ngoal (29 subgoals):\n 1. \\<And>P a aa b.\n       \\<lbrakk>\\<And>t' x. (a, aa, b) = (One, t', x) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' x.\n           (a, aa, b) = (Fun t1 t2, t', x) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' x.\n           (a, aa, b) = (Syntax.Sum t1 t2, t', x) \\<Longrightarrow> P;\n        \\<And>t1 t2 t' x.\n           (a, aa, b) = (Syntax.Prod t1 t2, t', x) \\<Longrightarrow> P;\n        \\<And>y t' x t.\n           \\<lbrakk>atom y \\<sharp> (t', x);\n            (a, aa, b) = (Mu y t, t', x)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>y t' x. (a, aa, b) = (Alpha y, t', x) \\<Longrightarrow> P;\n        \\<And>t t' x.\n           (a, aa, b) = (AuthT t, t', x) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t' x t'a xa.\n       (One, t', x) = (One, t'a, xa) \\<Longrightarrow> One = One\n 3. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Fun t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 4. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Sum t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 5. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Prod t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 6. \\<And>t' x y t'a xa t.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (t'a, xa); (One, t', x) = (Mu y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = Mu y (subst_type_sumC (t, t'a, xa))\n 7. \\<And>t' x y t'a xa.\n       (One, t', x) = (Alpha y, t'a, xa) \\<Longrightarrow>\n       One = (if y = xa then t'a else Alpha y)\n 8. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        (One, t', x) = (AuthT t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = AuthT (subst_type_sumC (t, t'a, xa))\n 9. \\<And>t1 t2 t' x t1a t2a t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t', x);\n        eqvt_at subst_type_sumC (t2, t', x);\n        eqvt_at subst_type_sumC (t1a, t'a, xa);\n        eqvt_at subst_type_sumC (t2a, t'a, xa); True; True; True; True;\n        (Fun t1 t2, t', x) = (Fun t1a t2a, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Fun (subst_type_sumC (t1, t', x))\n                          (subst_type_sumC (t2, t', x)) =\n                         Fun (subst_type_sumC (t1a, t'a, xa))\n                          (subst_type_sumC (t2a, t'a, xa))\n 10. \\<And>t1 t2 t' x t1a t2a t'a xa.\n        \\<lbrakk>eqvt_at subst_type_sumC (t1, t', x);\n         eqvt_at subst_type_sumC (t2, t', x);\n         eqvt_at subst_type_sumC (t1a, t'a, xa);\n         eqvt_at subst_type_sumC (t2a, t'a, xa); True; True; True; True;\n         (Fun t1 t2, t', x) = (Syntax.Sum t1a t2a, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Fun (subst_type_sumC (t1, t', x))\n                           (subst_type_sumC (t2, t', x)) =\n                          Syntax.Sum (subst_type_sumC (t1a, t'a, xa))\n                           (subst_type_sumC (t2a, t'a, xa))\nA total of 29 subgoals...", "subgoal for P a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t' x. (a, aa_, b_) = (One, t', x) \\<Longrightarrow> P;\n     \\<And>t1 t2 t' x.\n        (a, aa_, b_) = (Fun t1 t2, t', x) \\<Longrightarrow> P;\n     \\<And>t1 t2 t' x.\n        (a, aa_, b_) = (Syntax.Sum t1 t2, t', x) \\<Longrightarrow> P;\n     \\<And>t1 t2 t' x.\n        (a, aa_, b_) = (Syntax.Prod t1 t2, t', x) \\<Longrightarrow> P;\n     \\<And>y t' x t.\n        \\<lbrakk>atom y \\<sharp> (t', x);\n         (a, aa_, b_) = (Mu y t, t', x)\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>y t' x. (a, aa_, b_) = (Alpha y, t', x) \\<Longrightarrow> P;\n     \\<And>t t' x.\n        (a, aa_, b_) = (AuthT t, t', x) \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (rule ty.strong_exhaust[of a P]) (auto simp: fresh_star_def)"], ["proof (prove)\ngoal (28 subgoals):\n 1. \\<And>t' x t'a xa.\n       (One, t', x) = (One, t'a, xa) \\<Longrightarrow> One = One\n 2. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Fun t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 3. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Sum t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 4. \\<And>t' x t1 t2 t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t'a, xa);\n        eqvt_at subst_type_sumC (t2, t'a, xa); True; True;\n        (One, t', x) = (Syntax.Prod t1 t2, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (subst_type_sumC (t1, t'a, xa))\n                          (subst_type_sumC (t2, t'a, xa))\n 5. \\<And>t' x y t'a xa t.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        atom y \\<sharp> (t'a, xa); (One, t', x) = (Mu y t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = Mu y (subst_type_sumC (t, t'a, xa))\n 6. \\<And>t' x y t'a xa.\n       (One, t', x) = (Alpha y, t'a, xa) \\<Longrightarrow>\n       One = (if y = xa then t'a else Alpha y)\n 7. \\<And>t' x t t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa); True;\n        (One, t', x) = (AuthT t, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> One = AuthT (subst_type_sumC (t, t'a, xa))\n 8. \\<And>t1 t2 t' x t1a t2a t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t', x);\n        eqvt_at subst_type_sumC (t2, t', x);\n        eqvt_at subst_type_sumC (t1a, t'a, xa);\n        eqvt_at subst_type_sumC (t2a, t'a, xa); True; True; True; True;\n        (Fun t1 t2, t', x) = (Fun t1a t2a, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Fun (subst_type_sumC (t1, t', x))\n                          (subst_type_sumC (t2, t', x)) =\n                         Fun (subst_type_sumC (t1a, t'a, xa))\n                          (subst_type_sumC (t2a, t'a, xa))\n 9. \\<And>t1 t2 t' x t1a t2a t'a xa.\n       \\<lbrakk>eqvt_at subst_type_sumC (t1, t', x);\n        eqvt_at subst_type_sumC (t2, t', x);\n        eqvt_at subst_type_sumC (t1a, t'a, xa);\n        eqvt_at subst_type_sumC (t2a, t'a, xa); True; True; True; True;\n        (Fun t1 t2, t', x) = (Syntax.Sum t1a t2a, t'a, xa)\\<rbrakk>\n       \\<Longrightarrow> Fun (subst_type_sumC (t1, t', x))\n                          (subst_type_sumC (t2, t', x)) =\n                         Syntax.Sum (subst_type_sumC (t1a, t'a, xa))\n                          (subst_type_sumC (t2a, t'a, xa))\n 10. \\<And>t1 t2 t' x t1a t2a t'a xa.\n        \\<lbrakk>eqvt_at subst_type_sumC (t1, t', x);\n         eqvt_at subst_type_sumC (t2, t', x);\n         eqvt_at subst_type_sumC (t1a, t'a, xa);\n         eqvt_at subst_type_sumC (t2a, t'a, xa); True; True; True; True;\n         (Fun t1 t2, t', x) = (Syntax.Prod t1a t2a, t'a, xa)\\<rbrakk>\n        \\<Longrightarrow> Fun (subst_type_sumC (t1, t', x))\n                           (subst_type_sumC (t2, t', x)) =\n                          Syntax.Prod (subst_type_sumC (t1a, t'a, xa))\n                           (subst_type_sumC (t2a, t'a, xa))\nA total of 28 subgoals...", "apply (simp_all add: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y t' x t ya t'a xa ta.\n       \\<lbrakk>eqvt_at subst_type_sumC (t, t'a, xa);\n        eqvt_at subst_type_sumC (ta, t'a, xa); atom y \\<sharp> (t'a, xa);\n        atom ya \\<sharp> (t'a, xa);\n        [[atom y]]lst. t = [[atom ya]]lst. ta \\<and>\n        t' = t'a \\<and> x = xa\\<rbrakk>\n       \\<Longrightarrow> [[atom y]]lst. subst_type_sumC (t, t'a, xa) =\n                         [[atom ya]]lst. subst_type_sumC (ta, t'a, xa)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_type_sumC (t_, t'a_, xa_);\n     eqvt_at subst_type_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (t'a_, xa_);\n     atom ya_ \\<sharp> (t'a_, xa_);\n     [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_ \\<and>\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. subst_type_sumC (t_, t'a_, xa_) =\n                      [[atom ya_]]lst. subst_type_sumC (ta_, t'a_, xa_)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_type_sumC (t_, t'a_, xa_);\n     eqvt_at subst_type_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (t'a_, xa_);\n     atom ya_ \\<sharp> (t'a_, xa_);\n     [[atom y_]]lst. t_ = [[atom ya_]]lst. ta_;\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> [[atom y_]]lst. subst_type_sumC (t_, t'a_, xa_) =\n                      [[atom ya_]]lst. subst_type_sumC (ta_, t'a_, xa_)", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at subst_type_sumC (t_, t'a_, xa_);\n     eqvt_at subst_type_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (t'a_, xa_);\n     atom ya_ \\<sharp> (t'a_, xa_); t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. subst_type_sumC (t_, t'a_, xa_)\n 2. \\<lbrakk>eqvt_at subst_type_sumC (t_, t'a_, xa_);\n     eqvt_at subst_type_sumC (ta_, t'a_, xa_); atom y_ \\<sharp> (t'a_, xa_);\n     atom ya_ \\<sharp> (t'a_, xa_); t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> {atom y_, atom ya_} \\<sharp>* (t'a_, xa_)\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at subst_type_sumC (t_, t'a_, xa_);\n        eqvt_at subst_type_sumC (ta_, t'a_, xa_);\n        atom y_ \\<sharp> (t'a_, xa_); atom ya_ \\<sharp> (t'a_, xa_);\n        t'_ = t'a_ \\<and> x_ = xa_; supp p \\<sharp>* (t'a_, xa_)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   y_]]lst. subst_type_sumC (t_, t'a_, xa_)) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. subst_type_sumC\n              (p \\<bullet> t_, t'a_, xa_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at subst_type_sumC (t_, t'a_, xa_);\n        eqvt_at subst_type_sumC (ta_, t'a_, xa_);\n        atom y_ \\<sharp> (t'a_, xa_); atom ya_ \\<sharp> (t'a_, xa_);\n        t'_ = t'a_ \\<and> x_ = xa_; supp p \\<sharp>* (t'a_, xa_)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   ya_]]lst. subst_type_sumC (ta_, t'a_, xa_)) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. subst_type_sumC\n               (p \\<bullet> ta_, t'a_, xa_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> subst_type_sumC)\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                subst_type_sumC\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_type_sumC)\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_type_sumC\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     atom y_ \\<sharp> (t'a_, xa_); atom ya_ \\<sharp> (t'a_, xa_);\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       y_ \\<sharp> [[atom\ny_]]lst. subst_type_sumC (t_, t'a_, xa_)\n 2. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> subst_type_sumC)\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                subst_type_sumC\n                 (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     \\<forall>p.\n        (p \\<bullet> subst_type_sumC)\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n        subst_type_sumC\n         (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n     atom y_ \\<sharp> (t'a_, xa_); atom ya_ \\<sharp> (t'a_, xa_);\n     t'_ = t'a_ \\<and> x_ = xa_\\<rbrakk>\n    \\<Longrightarrow> atom y_ \\<sharp> t'a_ \\<and> atom ya_ \\<sharp> t'a_\n 3. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> subst_type_sumC)\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                   subst_type_sumC\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_type_sumC)\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_type_sumC\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        atom y_ \\<sharp> (t'a_, xa_); atom ya_ \\<sharp> (t'a_, xa_);\n        t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* t'a_ \\<and> supp p \\<sharp>* xa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> y_)]]lst. subst_type_sumC\n              (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                         [[atom\n                            (p \\<bullet> y_)]]lst. subst_type_sumC\n              (p \\<bullet> t_, t'a_, xa_)\n 4. \\<And>p.\n       \\<lbrakk>\\<forall>p.\n                   (p \\<bullet> subst_type_sumC)\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                   subst_type_sumC\n                    (p \\<bullet> t_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        \\<forall>p.\n           (p \\<bullet> subst_type_sumC)\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n           subst_type_sumC\n            (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_);\n        atom y_ \\<sharp> (t'a_, xa_); atom ya_ \\<sharp> (t'a_, xa_);\n        t'_ = t'a_ \\<and> x_ = xa_;\n        supp p \\<sharp>* t'a_ \\<and> supp p \\<sharp>* xa_\\<rbrakk>\n       \\<Longrightarrow> [[atom\n                            (p \\<bullet> ya_)]]lst. subst_type_sumC\n               (p \\<bullet> ta_, p \\<bullet> t'a_, p \\<bullet> xa_) =\n                         [[atom\n                            (p \\<bullet> ya_)]]lst. subst_type_sumC\n               (p \\<bullet> ta_, t'a_, xa_)", "apply (simp_all add: perm_supp_eq Abs_fresh_iff fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All subst_type_dom", "by lexicographic_order"], ["", "lemma fresh_subst_term: \"atom x \\<sharp> t[t' / x'] \\<longleftrightarrow> (x = x' \\<or> atom x \\<sharp> t) \\<and> (atom x' \\<sharp> t \\<or> atom x \\<sharp> t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> t[t' / x'] =\n    ((x = x' \\<or> atom x \\<sharp> t) \\<and>\n     (atom x' \\<sharp> t \\<or> atom x \\<sharp> t'))", "by (nominal_induct t avoiding: t' x x' rule: term.strong_induct) (auto simp add: fresh_at_base)"], ["", "lemma term_fresh_subst[simp]: \"atom x \\<sharp> t \\<Longrightarrow> atom x \\<sharp> s \\<Longrightarrow> (atom (x::var)) \\<sharp> t[s / y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>atom x \\<sharp> t; atom x \\<sharp> s\\<rbrakk>\n    \\<Longrightarrow> atom x \\<sharp> t[s / y]", "by (nominal_induct t avoiding: s y rule: term.strong_induct) (auto)"], ["", "lemma term_subst_idle[simp]: \"atom y \\<sharp> t \\<Longrightarrow> t[s / y] = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom y \\<sharp> t \\<Longrightarrow> t[s / y] = t", "by (nominal_induct t avoiding: s y rule: term.strong_induct) (auto simp: fresh_Pair fresh_at_base)"], ["", "lemma term_subst_subst: \"atom y1 \\<noteq> atom y2 \\<Longrightarrow> atom y1 \\<sharp> s2 \\<Longrightarrow> t[s1 / y1][s2 / y2] = t[s2 / y2][s1[s2 / y2] / y1]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>atom y1 \\<noteq> atom y2; atom y1 \\<sharp> s2\\<rbrakk>\n    \\<Longrightarrow> t[s1 / y1][s2 / y2] = t[s2 / y2][s1[s2 / y2] / y1]", "by (nominal_induct t avoiding: y1 y2 s1 s2 rule: term.strong_induct) auto"], ["", "lemma fresh_psubst:\n  fixes x :: var\n  assumes \"atom x \\<sharp> e\" \"atom x \\<sharp> vs\"\n  shows   \"atom x \\<sharp> psubst_term e vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> psubst_term e vs", "using assms"], ["proof (prove)\nusing this:\n  atom x \\<sharp> e\n  atom x \\<sharp> vs\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> psubst_term e vs", "by (induct e vs rule: psubst_term.induct)\n    (auto simp: fresh_at_base elim: fresh_fmap_fresh_Some split: option.splits)"], ["", "lemma fresh_subst_type:\n  \"atom \\<alpha> \\<sharp> subst_type \\<tau> \\<tau>' \\<alpha>' \\<longleftrightarrow> ((\\<alpha> = \\<alpha>' \\<or> atom \\<alpha> \\<sharp> \\<tau>) \\<and> (atom \\<alpha>' \\<sharp> \\<tau> \\<or> atom \\<alpha> \\<sharp> \\<tau>'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom \\<alpha> \\<sharp> subst_type \\<tau> \\<tau>' \\<alpha>' =\n    ((\\<alpha> = \\<alpha>' \\<or> atom \\<alpha> \\<sharp> \\<tau>) \\<and>\n     (atom \\<alpha>' \\<sharp> \\<tau> \\<or> atom \\<alpha> \\<sharp> \\<tau>'))", "by (nominal_induct \\<tau> avoiding: \\<alpha> \\<alpha>' \\<tau>' rule: ty.strong_induct) (auto simp add: fresh_at_base)"], ["", "lemma type_fresh_subst[simp]: \"atom x \\<sharp> t \\<Longrightarrow> atom x \\<sharp> s \\<Longrightarrow> (atom (x::tvar)) \\<sharp> subst_type t s y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>atom x \\<sharp> t; atom x \\<sharp> s\\<rbrakk>\n    \\<Longrightarrow> atom x \\<sharp> subst_type t s y", "by (nominal_induct t avoiding: s y rule: ty.strong_induct) (auto)"], ["", "lemma type_subst_idle[simp]: \"atom y \\<sharp> t \\<Longrightarrow> subst_type t s y = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom y \\<sharp> t \\<Longrightarrow> subst_type t s y = t", "by (nominal_induct t avoiding: s y rule: ty.strong_induct) (auto simp: fresh_Pair fresh_at_base)"], ["", "lemma type_subst_subst: \"atom y1 \\<noteq> atom y2 \\<Longrightarrow> atom y1 \\<sharp> s2 \\<Longrightarrow>\n  subst_type (subst_type t s1 y1) s2 y2 = subst_type (subst_type t s2 y2) (subst_type s1 s2 y2) y1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>atom y1 \\<noteq> atom y2; atom y1 \\<sharp> s2\\<rbrakk>\n    \\<Longrightarrow> subst_type (subst_type t s1 y1) s2 y2 =\n                      subst_type (subst_type t s2 y2) (subst_type s1 s2 y2)\n                       y1", "by (nominal_induct t avoiding: y1 y2 s1 s2 rule: ty.strong_induct) auto"], ["", "subsection \\<open>Weak Typing Judgement\\<close>"], ["", "type_synonym tyenv = \"(var, ty) fmap\""], ["", "inductive judge_weak :: \"tyenv \\<Rightarrow> term \\<Rightarrow> ty \\<Rightarrow> bool\" (\"_ \\<turnstile>\\<^sub>W _ : _\" [150,0,150] 149) where\n  jw_Unit:   \"\\<Gamma> \\<turnstile>\\<^sub>W Unit : One\" |\n  jw_Var:    \"\\<lbrakk> \\<Gamma> $$ x = Some \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Var x : \\<tau>\" |\n  jw_Lam:    \"\\<lbrakk> atom x \\<sharp> \\<Gamma>; \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Lam x e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  jw_App:    \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2; \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W App e e' : \\<tau>\\<^sub>2\" |\n  jw_Let:    \"\\<lbrakk> atom x \\<sharp> (\\<Gamma>, e\\<^sub>1); \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1; \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Let e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\" |\n  jw_Rec:    \"\\<lbrakk> atom x \\<sharp> \\<Gamma>; atom y \\<sharp> (\\<Gamma>,x); \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Rec x (Lam y e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  jw_Inj1:   \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Inj1 e : Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  jw_Inj2:   \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Inj2 e : Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  jw_Case:   \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e : Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2; \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>; \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Case e e\\<^sub>1 e\\<^sub>2 : \\<tau>\" |\n  jw_Pair:   \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1; \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Pair e\\<^sub>1 e\\<^sub>2 : Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  jw_Prj1:   \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e : Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Prj1 e : \\<tau>\\<^sub>1\" |\n  jw_Prj2:   \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e : Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Prj2 e : \\<tau>\\<^sub>2\" |\n  jw_Roll:   \"\\<lbrakk> atom \\<alpha> \\<sharp> \\<Gamma>; \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Roll e : Mu \\<alpha> \\<tau>\" |\n  jw_Unroll: \"\\<lbrakk> atom \\<alpha> \\<sharp> \\<Gamma>; \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Unroll e : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>\" |\n  jw_Auth:   \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Auth e : \\<tau>\" |\n  jw_Unauth: \"\\<lbrakk> \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile>\\<^sub>W Unauth e : \\<tau>\""], ["", "declare judge_weak.intros[simp]"], ["", "declare judge_weak.intros[intro]"], ["", "equivariance judge_weak"], ["", "nominal_inductive judge_weak\n  avoids jw_Lam: x\n       | jw_Rec: x and y\n       | jw_Let: x\n       | jw_Roll: \\<alpha>\n       | jw_Unroll: \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n          \\<lbrakk>atom x \\<sharp> \\<Gamma>;\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\\<rbrakk>\n          \\<Longrightarrow> {atom\n                              x} \\<sharp>* (\\<Gamma>, Lam x e,\n      Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2)) &&&\n      (\\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n          \\<lbrakk>atom x \\<sharp> \\<Gamma>;\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\\<rbrakk>\n          \\<Longrightarrow> finite {atom x})) &&&\n     (\\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n         \\<lbrakk>atom x \\<sharp> (\\<Gamma>, e\\<^sub>1);\n          \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n          \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\\<rbrakk>\n         \\<Longrightarrow> {atom\n                             x} \\<sharp>* (\\<Gamma>,\n     Syntax.Let e\\<^sub>1 x e\\<^sub>2, \\<tau>\\<^sub>2)) &&&\n     (\\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n         \\<lbrakk>atom x \\<sharp> (\\<Gamma>, e\\<^sub>1);\n          \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n          \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\\<rbrakk>\n         \\<Longrightarrow> finite {atom x})) &&&\n    ((\\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n         \\<lbrakk>atom x \\<sharp> \\<Gamma>; atom y \\<sharp> (\\<Gamma>, x);\n          \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                           \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                           e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n         \\<Longrightarrow> ({atom x} \\<union>\n                            {atom\n                              y}) \\<sharp>* (\\<Gamma>, Rec x (Lam y e),\n       Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2)) &&&\n     (\\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n         \\<lbrakk>atom x \\<sharp> \\<Gamma>; atom y \\<sharp> (\\<Gamma>, x);\n          \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                           \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                           e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n         \\<Longrightarrow> finite ({atom x} \\<union> {atom y}))) &&&\n    ((\\<And>\\<alpha> \\<Gamma> e \\<tau>.\n         \\<lbrakk>atom \\<alpha> \\<sharp> \\<Gamma>;\n          \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n       (Mu \\<alpha> \\<tau>) \\<alpha>\\<rbrakk>\n         \\<Longrightarrow> {atom\n                             \\<alpha>} \\<sharp>* (\\<Gamma>, Roll e,\n            Mu \\<alpha> \\<tau>)) &&&\n     (\\<And>\\<alpha> \\<Gamma> e \\<tau>.\n         \\<lbrakk>atom \\<alpha> \\<sharp> \\<Gamma>;\n          \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n       (Mu \\<alpha> \\<tau>) \\<alpha>\\<rbrakk>\n         \\<Longrightarrow> finite {atom \\<alpha>})) &&&\n    (\\<And>\\<alpha> \\<Gamma> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {atom\n                            \\<alpha>} \\<sharp>* (\\<Gamma>, Unroll e,\n           subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)) &&&\n    (\\<And>\\<alpha> \\<Gamma> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>\\<rbrakk>\n        \\<Longrightarrow> finite {atom \\<alpha>})", "by (auto simp: fresh_subst_type fresh_Pair)"], ["", "text \\<open>Inversion rules for typing judgment.\\<close>"], ["", "inductive_cases jw_Unit_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Unit : \\<tau>\""], ["", "inductive_cases jw_Var_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Var x : \\<tau>\""], ["", "lemma jw_Lam_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Lam x e : \\<tau>\"\n  and     \"atom x \\<sharp> \\<Gamma>\"\n  obtains \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 where \"\\<tau> = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" \"(\\<Gamma>(x $$:= \\<tau>\\<^sub>1)) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>\\<tau> = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W Lam x e : \\<tau>\n  atom x \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>\\<tau> = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (atomize_elim, nominal_induct \\<Gamma> \"Lam x e\" \\<tau> avoiding: x e rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 xa ea.\n       \\<lbrakk>atom x \\<sharp> xa; atom x \\<sharp> ea;\n        atom x \\<sharp> \\<Gamma>;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           \\<lbrakk>e = Lam b ba;\n            \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Lam b\n                            ba : \\<tau>\\<^sub>2;\n            atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1);\n            atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ba : \\<tau>\\<^sub>2';\n        [[atom x]]lst. e = [[atom xa]]lst. ea;\n        \\<Gamma> \\<turnstile>\\<^sub>W Lam xa\n ea : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom xa \\<sharp> \\<Gamma>; atom xa \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(xa $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ea : \\<tau>\\<^sub>2'", "case (jw_Lam x \\<Gamma> \\<tau>\\<^sub>1 t \\<tau>\\<^sub>2 y u)"], ["proof (state)\nthis:\n  atom x \\<sharp> y\n  atom x \\<sharp> u\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W t : \\<tau>\\<^sub>2\n  \\<lbrakk>t = Lam ?b ?ba;\n   \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Lam ?b\n                   ?ba : \\<tau>\\<^sub>2;\n   atom ?b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1);\n   atom ?b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                       \\<tau>\\<^sub>2 =\n                       Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(?b $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?ba : \\<tau>\\<^sub>2'\n  [[atom x]]lst. t = [[atom y]]lst. u\n  \\<Gamma> \\<turnstile>\\<^sub>W Lam y u : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 xa ea.\n       \\<lbrakk>atom x \\<sharp> xa; atom x \\<sharp> ea;\n        atom x \\<sharp> \\<Gamma>;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           \\<lbrakk>e = Lam b ba;\n            \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Lam b\n                            ba : \\<tau>\\<^sub>2;\n            atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1);\n            atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ba : \\<tau>\\<^sub>2';\n        [[atom x]]lst. e = [[atom xa]]lst. ea;\n        \\<Gamma> \\<turnstile>\\<^sub>W Lam xa\n ea : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom xa \\<sharp> \\<Gamma>; atom xa \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(xa $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ea : \\<tau>\\<^sub>2'", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> y\n  atom x \\<sharp> u\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W t : \\<tau>\\<^sub>2\n  \\<lbrakk>t = Lam ?b ?ba;\n   \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Lam ?b\n                   ?ba : \\<tau>\\<^sub>2;\n   atom ?b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1);\n   atom ?b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                       \\<tau>\\<^sub>2 =\n                       Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(?b $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?ba : \\<tau>\\<^sub>2'\n  [[atom x]]lst. t = [[atom y]]lst. u\n  \\<Gamma> \\<turnstile>\\<^sub>W Lam y u : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> y\n  atom x \\<sharp> u\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W t : \\<tau>\\<^sub>2\n  \\<lbrakk>t = Lam ?b ?ba;\n   \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Lam ?b\n                   ?ba : \\<tau>\\<^sub>2;\n   atom ?b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1);\n   atom ?b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                       \\<tau>\\<^sub>2 =\n                       Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(?b $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?ba : \\<tau>\\<^sub>2'\n  [[atom x]]lst. t = [[atom y]]lst. u\n  \\<Gamma> \\<turnstile>\\<^sub>W Lam y u : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n       Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n       \\<Gamma>(y $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W u : \\<tau>\\<^sub>2'", "by (auto simp: perm_supp_eq elim!:\n        iffD1[OF Abs_lst1_fcb2'[where f = \"\\<lambda>x t (\\<Gamma>, \\<tau>\\<^sub>1, \\<tau>\\<^sub>2). (\\<Gamma>(x $$:= \\<tau>\\<^sub>1)) \\<turnstile>\\<^sub>W t : \\<tau>\\<^sub>2\"\n        and c = \"(\\<Gamma>, \\<tau>\\<^sub>1, \\<tau>\\<^sub>2)\" and a = x and b = y and x = t and y = u, unfolded prod.case],\n        rotated -1])"], ["proof (state)\nthis:\n  \\<exists>\\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n     Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n     Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n     \\<Gamma>(y $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W u : \\<tau>\\<^sub>2'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma swap_permute_swap: \"atom x \\<sharp> \\<pi> \\<Longrightarrow> atom y \\<sharp> \\<pi> \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> \\<pi> \\<bullet> (x \\<leftrightarrow> y) \\<bullet> t = \\<pi> \\<bullet> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>atom x \\<sharp> \\<pi>; atom y \\<sharp> \\<pi>\\<rbrakk>\n    \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> \\<pi> \\<bullet> (x \\<leftrightarrow> y) \\<bullet> t =\n                      \\<pi> \\<bullet> t", "by (subst permute_eqvt) (auto simp: flip_fresh_fresh)"], ["", "lemma jw_Rec_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Rec x t : \\<tau>\"\n  and     \"atom x \\<sharp> \\<Gamma>\"\n  obtains y e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 where \"atom y \\<sharp> (\\<Gamma>,x)\" \"t = Lam y e\" \"\\<tau> = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" \"\\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>atom y \\<sharp> (\\<Gamma>, x); t = Lam y e;\n         \\<tau> = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using [[simproc del: alpha_lst]] assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec x t : \\<tau>\n  atom x \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. (\\<And>y e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>atom y \\<sharp> (\\<Gamma>, x); t = Lam y e;\n         \\<tau> = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (atomize_elim, nominal_induct \\<Gamma> \"Rec x t\" \\<tau> avoiding: x t rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e xa t.\n       \\<lbrakk>atom x \\<sharp> xa; atom x \\<sharp> t; atom y \\<sharp> xa;\n        atom y \\<sharp> t; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom xa]]lst. t;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec xa\n t : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom xa \\<sharp> \\<Gamma>; atom xa \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, xa) \\<and>\n                            t = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1'\n        \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n         e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'", "case (jw_Rec x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e z t)"], ["proof (state)\nthis:\n  atom x \\<sharp> z\n  atom x \\<sharp> t\n  atom y \\<sharp> z\n  atom y \\<sharp> t\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. t\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z t : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e xa t.\n       \\<lbrakk>atom x \\<sharp> xa; atom x \\<sharp> t; atom y \\<sharp> xa;\n        atom y \\<sharp> t; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom xa]]lst. t;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec xa\n t : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom xa \\<sharp> \\<Gamma>; atom xa \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, xa) \\<and>\n                            t = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1'\n        \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n         e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> z\n  atom x \\<sharp> t\n  atom y \\<sharp> z\n  atom y \\<sharp> t\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. t\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z t : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> z\n  atom x \\<sharp> t\n  atom y \\<sharp> z\n  atom y \\<sharp> t\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. t\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z t : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       atom y \\<sharp> (\\<Gamma>, z) \\<and>\n       t = Lam y e \\<and>\n       Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n       Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n       \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n                        \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'", "proof (nominal_induct t avoiding: y x z rule: term.strong_induct)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>atom x \\<sharp> z; atom x \\<sharp> Unit; atom y \\<sharp> z;\n        atom y \\<sharp> Unit; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Unit;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n Unit : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Unit = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 2. \\<And>x y xa z.\n       \\<lbrakk>atom xa \\<sharp> z; atom xa \\<sharp> Var x;\n        atom y \\<sharp> z; atom y \\<sharp> Var x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Var x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Var x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Var x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 3. \\<And>x1 x2a y x z.\n       \\<lbrakk>atom x1 \\<sharp> y; atom x1 \\<sharp> x; atom x1 \\<sharp> z;\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Lam x1 x2a; atom y \\<sharp> z;\n        atom y \\<sharp> Lam x1 x2a; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Lam x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Lam x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Lam x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 4. \\<And>x1 x2a y x z.\n       \\<lbrakk>atom x1 \\<sharp> y; atom x1 \\<sharp> x; atom x1 \\<sharp> z;\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Rec x1 x2a; atom y \\<sharp> z;\n        atom y \\<sharp> Rec x1 x2a; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Rec x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Rec x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Rec x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 5. \\<And>x y xa z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x;\n                    atom b \\<sharp> bb; atom b \\<sharp> x;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom xa \\<sharp> z; atom xa \\<sharp> Inj1 x; atom y \\<sharp> z;\n        atom y \\<sharp> Inj1 x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Inj1 x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Inj1 x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Inj1 x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 6. \\<And>x y xa z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x;\n                    atom b \\<sharp> bb; atom b \\<sharp> x;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom xa \\<sharp> z; atom xa \\<sharp> Inj2 x; atom y \\<sharp> z;\n        atom y \\<sharp> Inj2 x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Inj2 x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Inj2 x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Inj2 x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 7. \\<And>x1 x2a y x z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                    atom b \\<sharp> bb; atom b \\<sharp> x1;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x1 = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Syntax.Pair x1 x2a;\n        atom y \\<sharp> z; atom y \\<sharp> Syntax.Pair x1 x2a;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Syntax.Pair x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Syntax.Pair x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Syntax.Pair x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 8. \\<And>x1 x2a x3 y x z.\n       \\<lbrakk>atom x2a \\<sharp> y; atom x2a \\<sharp> x;\n        atom x2a \\<sharp> z;\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n            atom b \\<sharp> bb; atom b \\<sharp> x1;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x1 = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x3;\n            atom b \\<sharp> bb; atom b \\<sharp> x3;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x3;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x3 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x3 = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Syntax.Let x1 x2a x3;\n        atom y \\<sharp> z; atom y \\<sharp> Syntax.Let x1 x2a x3;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Syntax.Let x1 x2a x3;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Syntax.Let x1 x2a x3) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Syntax.Let x1 x2a x3 = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 9. \\<And>x1 x2a y x z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                    atom b \\<sharp> bb; atom b \\<sharp> x1;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x1 = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> App x1 x2a; atom y \\<sharp> z;\n        atom y \\<sharp> App x1 x2a; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. App x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (App x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            App x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 10. \\<And>x1 x2a x3 y x z.\n        \\<lbrakk>\\<And>b ba bb.\n                    \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                     atom b \\<sharp> bb; atom b \\<sharp> x1;\n                     atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                     atom b \\<sharp> ba;\n                     \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                     [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                     \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n              x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                     atom bb \\<sharp> \\<Gamma>;\n                     atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n   \\<tau>\\<^sub>2'.\n   atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n   x1 = Lam y e \\<and>\n   Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n   Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n   \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                     \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                      e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n         \\<And>b ba bb.\n            \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n             atom b \\<sharp> bb; atom b \\<sharp> x2a;\n             atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n             atom b \\<sharp> ba;\n             \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                               \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                               e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n             [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n             \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n      x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n             atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n            \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                 atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                 x2a = Lam y e \\<and>\n                                 Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                 Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                 \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n             \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n              e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n         \\<And>b ba bb.\n            \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x3;\n             atom b \\<sharp> bb; atom b \\<sharp> x3;\n             atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n             atom b \\<sharp> ba;\n             \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                               \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                               e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n             [[atom ba]]lst. Lam b e = [[atom bb]]lst. x3;\n             \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n      x3 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n             atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n            \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                 atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                 x3 = Lam y e \\<and>\n                                 Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                 Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                 \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n             \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n              e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n         atom x \\<sharp> z; atom x \\<sharp> Case x1 x2a x3;\n         atom y \\<sharp> z; atom y \\<sharp> Case x1 x2a x3;\n         atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n         atom y \\<sharp> x;\n         \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         [[atom x]]lst. Lam y e = [[atom z]]lst. Case x1 x2a x3;\n         \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n  (Case x1 x2a x3) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                             atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                             Case x1 x2a x3 = Lam y e \\<and>\n                             Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                             Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                             \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n        \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n         e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\nA total of 18 subgoals...", "case (Lam y' e')"], ["proof (state)\nthis:\n  atom y' \\<sharp> y\n  atom y' \\<sharp> x\n  atom y' \\<sharp> z\n  \\<lbrakk>atom ?ba \\<sharp> ?bb; atom ?ba \\<sharp> e';\n   atom ?b \\<sharp> ?bb; atom ?b \\<sharp> e'; atom ?ba \\<sharp> \\<Gamma>;\n   atom ?b \\<sharp> \\<Gamma>; atom ?b \\<sharp> ?ba;\n   \\<Gamma>(?ba $$:= Fun \\<tau>\\<^sub>1\n                      \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam ?b\n                      e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n   [[atom ?ba]]lst. Lam ?b e = [[atom ?bb]]lst. e';\n   \\<Gamma> \\<turnstile>\\<^sub>W Rec ?bb\n                                  e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n   atom ?bb \\<sharp> \\<Gamma>; atom ?bb \\<sharp> \\<Gamma>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                       atom y \\<sharp> (\\<Gamma>, ?bb) \\<and>\n                       e' = Lam y e \\<and>\n                       Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                       Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                       \\<Gamma>(?bb $$:= Fun \\<tau>\\<^sub>1'\n    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n  atom x \\<sharp> z\n  atom x \\<sharp> Lam y' e'\n  atom y \\<sharp> z\n  atom y \\<sharp> Lam y' e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. Lam y' e'\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n                                 (Lam y'\n                                   e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n\ngoal (18 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>atom x \\<sharp> z; atom x \\<sharp> Unit; atom y \\<sharp> z;\n        atom y \\<sharp> Unit; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Unit;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n Unit : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Unit = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 2. \\<And>x y xa z.\n       \\<lbrakk>atom xa \\<sharp> z; atom xa \\<sharp> Var x;\n        atom y \\<sharp> z; atom y \\<sharp> Var x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Var x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Var x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Var x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 3. \\<And>x1 x2a y x z.\n       \\<lbrakk>atom x1 \\<sharp> y; atom x1 \\<sharp> x; atom x1 \\<sharp> z;\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Lam x1 x2a; atom y \\<sharp> z;\n        atom y \\<sharp> Lam x1 x2a; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Lam x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Lam x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Lam x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 4. \\<And>x1 x2a y x z.\n       \\<lbrakk>atom x1 \\<sharp> y; atom x1 \\<sharp> x; atom x1 \\<sharp> z;\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Rec x1 x2a; atom y \\<sharp> z;\n        atom y \\<sharp> Rec x1 x2a; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Rec x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Rec x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Rec x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 5. \\<And>x y xa z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x;\n                    atom b \\<sharp> bb; atom b \\<sharp> x;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom xa \\<sharp> z; atom xa \\<sharp> Inj1 x; atom y \\<sharp> z;\n        atom y \\<sharp> Inj1 x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Inj1 x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Inj1 x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Inj1 x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 6. \\<And>x y xa z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x;\n                    atom b \\<sharp> bb; atom b \\<sharp> x;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom xa \\<sharp> z; atom xa \\<sharp> Inj2 x; atom y \\<sharp> z;\n        atom y \\<sharp> Inj2 x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Inj2 x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Inj2 x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Inj2 x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 7. \\<And>x1 x2a y x z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                    atom b \\<sharp> bb; atom b \\<sharp> x1;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x1 = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Syntax.Pair x1 x2a;\n        atom y \\<sharp> z; atom y \\<sharp> Syntax.Pair x1 x2a;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Syntax.Pair x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Syntax.Pair x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Syntax.Pair x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 8. \\<And>x1 x2a x3 y x z.\n       \\<lbrakk>atom x2a \\<sharp> y; atom x2a \\<sharp> x;\n        atom x2a \\<sharp> z;\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n            atom b \\<sharp> bb; atom b \\<sharp> x1;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x1 = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x3;\n            atom b \\<sharp> bb; atom b \\<sharp> x3;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x3;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x3 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x3 = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Syntax.Let x1 x2a x3;\n        atom y \\<sharp> z; atom y \\<sharp> Syntax.Let x1 x2a x3;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Syntax.Let x1 x2a x3;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Syntax.Let x1 x2a x3) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Syntax.Let x1 x2a x3 = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 9. \\<And>x1 x2a y x z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                    atom b \\<sharp> bb; atom b \\<sharp> x1;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x1 = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> App x1 x2a; atom y \\<sharp> z;\n        atom y \\<sharp> App x1 x2a; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. App x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (App x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            App x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 10. \\<And>x1 x2a x3 y x z.\n        \\<lbrakk>\\<And>b ba bb.\n                    \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                     atom b \\<sharp> bb; atom b \\<sharp> x1;\n                     atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                     atom b \\<sharp> ba;\n                     \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                     [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                     \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n              x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                     atom bb \\<sharp> \\<Gamma>;\n                     atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n   \\<tau>\\<^sub>2'.\n   atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n   x1 = Lam y e \\<and>\n   Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n   Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n   \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                     \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                      e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n         \\<And>b ba bb.\n            \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n             atom b \\<sharp> bb; atom b \\<sharp> x2a;\n             atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n             atom b \\<sharp> ba;\n             \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                               \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                               e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n             [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n             \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n      x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n             atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n            \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                 atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                 x2a = Lam y e \\<and>\n                                 Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                 Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                 \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n             \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n              e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n         \\<And>b ba bb.\n            \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x3;\n             atom b \\<sharp> bb; atom b \\<sharp> x3;\n             atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n             atom b \\<sharp> ba;\n             \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                               \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                               e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n             [[atom ba]]lst. Lam b e = [[atom bb]]lst. x3;\n             \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n      x3 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n             atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n            \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                 atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                 x3 = Lam y e \\<and>\n                                 Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                 Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                 \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n             \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n              e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n         atom x \\<sharp> z; atom x \\<sharp> Case x1 x2a x3;\n         atom y \\<sharp> z; atom y \\<sharp> Case x1 x2a x3;\n         atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n         atom y \\<sharp> x;\n         \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         [[atom x]]lst. Lam y e = [[atom z]]lst. Case x1 x2a x3;\n         \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n  (Case x1 x2a x3) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                             atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                             Case x1 x2a x3 = Lam y e \\<and>\n                             Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                             Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                             \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n        \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n         e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\nA total of 18 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       atom y \\<sharp> (\\<Gamma>, z) \\<and>\n       Lam y' e' = Lam y e \\<and>\n       Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n       Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n       \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n                        \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'", "proof (intro exI conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. atom ?y \\<sharp> (\\<Gamma>, z)\n 2. Lam y' e' = Lam ?y ?e1\n 3. Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n    Fun ?\\<tau>\\<^sub>12 ?\\<tau>\\<^sub>23\n 4. \\<Gamma>(z $$:= Fun ?\\<tau>\\<^sub>12\n                     ?\\<tau>\\<^sub>23) \\<turnstile>\\<^sub>W Lam ?y\n                       ?e1 : Fun ?\\<tau>\\<^sub>12 ?\\<tau>\\<^sub>23", "from Lam.prems"], ["proof (chain)\npicking this:\n  atom x \\<sharp> z\n  atom x \\<sharp> Lam y' e'\n  atom y \\<sharp> z\n  atom y \\<sharp> Lam y' e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. Lam y' e'\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n                                 (Lam y'\n                                   e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>", "show \"atom y \\<sharp> (\\<Gamma>, z)\""], ["proof (prove)\nusing this:\n  atom x \\<sharp> z\n  atom x \\<sharp> Lam y' e'\n  atom y \\<sharp> z\n  atom y \\<sharp> Lam y' e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. Lam y' e'\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n                                 (Lam y'\n                                   e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom y \\<sharp> (\\<Gamma>, z)", "by simp"], ["proof (state)\nthis:\n  atom y \\<sharp> (\\<Gamma>, z)\n\ngoal (3 subgoals):\n 1. Lam y' e' = Lam y ?e1\n 2. Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n    Fun ?\\<tau>\\<^sub>12 ?\\<tau>\\<^sub>23\n 3. \\<Gamma>(z $$:= Fun ?\\<tau>\\<^sub>12\n                     ?\\<tau>\\<^sub>23) \\<turnstile>\\<^sub>W Lam y\n                       ?e1 : Fun ?\\<tau>\\<^sub>12 ?\\<tau>\\<^sub>23", "from Lam.hyps(1-3) Lam.prems"], ["proof (chain)\npicking this:\n  atom y' \\<sharp> y\n  atom y' \\<sharp> x\n  atom y' \\<sharp> z\n  atom x \\<sharp> z\n  atom x \\<sharp> Lam y' e'\n  atom y \\<sharp> z\n  atom y \\<sharp> Lam y' e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. Lam y' e'\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n                                 (Lam y'\n                                   e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>", "show \"Lam y' e' = Lam y ((y' \\<leftrightarrow> y) \\<bullet> e')\""], ["proof (prove)\nusing this:\n  atom y' \\<sharp> y\n  atom y' \\<sharp> x\n  atom y' \\<sharp> z\n  atom x \\<sharp> z\n  atom x \\<sharp> Lam y' e'\n  atom y \\<sharp> z\n  atom y \\<sharp> Lam y' e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. Lam y' e'\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n                                 (Lam y'\n                                   e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. Lam y' e' = Lam y ((y' \\<leftrightarrow> y) \\<bullet> e')", "by (subst term.eq_iff(3), intro Abs_lst_eq_flipI) (simp add: fresh_at_base)"], ["proof (state)\nthis:\n  Lam y' e' = Lam y ((y' \\<leftrightarrow> y) \\<bullet> e')\n\ngoal (2 subgoals):\n 1. Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n    Fun ?\\<tau>\\<^sub>12 ?\\<tau>\\<^sub>23\n 2. \\<Gamma>(z $$:= Fun ?\\<tau>\\<^sub>12\n                     ?\\<tau>\\<^sub>23) \\<turnstile>\\<^sub>W Lam y\n                       ((y' \\<leftrightarrow> y) \\<bullet> e') : Fun\n                            ?\\<tau>\\<^sub>12 ?\\<tau>\\<^sub>23", "from Lam.hyps(1-3) Lam.prems"], ["proof (chain)\npicking this:\n  atom y' \\<sharp> y\n  atom y' \\<sharp> x\n  atom y' \\<sharp> z\n  atom x \\<sharp> z\n  atom x \\<sharp> Lam y' e'\n  atom y \\<sharp> z\n  atom y \\<sharp> Lam y' e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. Lam y' e'\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n                                 (Lam y'\n                                   e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>", "show \"\\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y ((y' \\<leftrightarrow> y) \\<bullet> e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\""], ["proof (prove)\nusing this:\n  atom y' \\<sharp> y\n  atom y' \\<sharp> x\n  atom y' \\<sharp> z\n  atom x \\<sharp> z\n  atom x \\<sharp> Lam y' e'\n  atom y \\<sharp> z\n  atom y \\<sharp> Lam y' e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  [[atom x]]lst. Lam y e = [[atom z]]lst. Lam y' e'\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n                                 (Lam y'\n                                   e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     ((y' \\<leftrightarrow> y) \\<bullet> e') : Fun\n                          \\<tau>\\<^sub>1 \\<tau>\\<^sub>2", "by (elim judge_weak.eqvt[of \"\\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2)\" \"Lam y e\" \"Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" \"(x \\<leftrightarrow> z)\", elim_format])\n          (simp add: perm_supp_eq Abs1_eq_iff fresh_at_base swap_permute_swap fresh_perm flip_commute)"], ["proof (state)\nthis:\n  \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                   ((y' \\<leftrightarrow> y) \\<bullet> e') : Fun\n                        \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n\ngoal (1 subgoal):\n 1. Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2", "qed simp"], ["proof (state)\nthis:\n  \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n     atom y \\<sharp> (\\<Gamma>, z) \\<and>\n     Lam y' e' = Lam y e \\<and>\n     Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n     Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n     \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n                      \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                       e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n\ngoal (17 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>atom x \\<sharp> z; atom x \\<sharp> Unit; atom y \\<sharp> z;\n        atom y \\<sharp> Unit; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Unit;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n Unit : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Unit = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 2. \\<And>x y xa z.\n       \\<lbrakk>atom xa \\<sharp> z; atom xa \\<sharp> Var x;\n        atom y \\<sharp> z; atom y \\<sharp> Var x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Var x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Var x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Var x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 3. \\<And>x1 x2a y x z.\n       \\<lbrakk>atom x1 \\<sharp> y; atom x1 \\<sharp> x; atom x1 \\<sharp> z;\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Rec x1 x2a; atom y \\<sharp> z;\n        atom y \\<sharp> Rec x1 x2a; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Rec x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Rec x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Rec x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 4. \\<And>x y xa z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x;\n                    atom b \\<sharp> bb; atom b \\<sharp> x;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom xa \\<sharp> z; atom xa \\<sharp> Inj1 x; atom y \\<sharp> z;\n        atom y \\<sharp> Inj1 x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Inj1 x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Inj1 x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Inj1 x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 5. \\<And>x y xa z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x;\n                    atom b \\<sharp> bb; atom b \\<sharp> x;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom xa \\<sharp> z; atom xa \\<sharp> Inj2 x; atom y \\<sharp> z;\n        atom y \\<sharp> Inj2 x; atom xa \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n        \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                          \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                          e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom xa]]lst. Lam y e = [[atom z]]lst. Inj2 x;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Inj2 x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Inj2 x = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 6. \\<And>x1 x2a y x z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                    atom b \\<sharp> bb; atom b \\<sharp> x1;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x1 = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Syntax.Pair x1 x2a;\n        atom y \\<sharp> z; atom y \\<sharp> Syntax.Pair x1 x2a;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Syntax.Pair x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Syntax.Pair x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Syntax.Pair x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 7. \\<And>x1 x2a x3 y x z.\n       \\<lbrakk>atom x2a \\<sharp> y; atom x2a \\<sharp> x;\n        atom x2a \\<sharp> z;\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n            atom b \\<sharp> bb; atom b \\<sharp> x1;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x1 = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x3;\n            atom b \\<sharp> bb; atom b \\<sharp> x3;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x3;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x3 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x3 = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Syntax.Let x1 x2a x3;\n        atom y \\<sharp> z; atom y \\<sharp> Syntax.Let x1 x2a x3;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Syntax.Let x1 x2a x3;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Syntax.Let x1 x2a x3) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Syntax.Let x1 x2a x3 = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 8. \\<And>x1 x2a y x z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                    atom b \\<sharp> bb; atom b \\<sharp> x1;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x1 = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> App x1 x2a; atom y \\<sharp> z;\n        atom y \\<sharp> App x1 x2a; atom x \\<sharp> \\<Gamma>;\n        atom y \\<sharp> \\<Gamma>; atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. App x1 x2a;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (App x1 x2a) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            App x1 x2a = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 9. \\<And>x1 x2a x3 y x z.\n       \\<lbrakk>\\<And>b ba bb.\n                   \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x1;\n                    atom b \\<sharp> bb; atom b \\<sharp> x1;\n                    atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                    atom b \\<sharp> ba;\n                    \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n\\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\ne : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    [[atom ba]]lst. Lam b e = [[atom bb]]lst. x1;\n                    \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n             x1 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                    atom bb \\<sharp> \\<Gamma>;\n                    atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n  \\<tau>\\<^sub>2'.\n  atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n  x1 = Lam y e \\<and>\n  Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n  Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n  \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                    \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x2a;\n            atom b \\<sharp> bb; atom b \\<sharp> x2a;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x2a;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x2a : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x2a = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<And>b ba bb.\n           \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x3;\n            atom b \\<sharp> bb; atom b \\<sharp> x3;\n            atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n            atom b \\<sharp> ba;\n            \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n                              \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n                              e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            [[atom ba]]lst. Lam b e = [[atom bb]]lst. x3;\n            \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n     x3 : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n            atom bb \\<sharp> \\<Gamma>; atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                                atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n                                x3 = Lam y e \\<and>\n                                Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                                Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                                \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n            \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n             e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        atom x \\<sharp> z; atom x \\<sharp> Case x1 x2a x3;\n        atom y \\<sharp> z; atom y \\<sharp> Case x1 x2a x3;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        [[atom x]]lst. Lam y e = [[atom z]]lst. Case x1 x2a x3;\n        \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n (Case x1 x2a x3) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                            atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                            Case x1 x2a x3 = Lam y e \\<and>\n                            Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                            Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                            \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n        e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n 10. \\<And>x y xa z.\n        \\<lbrakk>\\<And>b ba bb.\n                    \\<lbrakk>atom ba \\<sharp> bb; atom ba \\<sharp> x;\n                     atom b \\<sharp> bb; atom b \\<sharp> x;\n                     atom ba \\<sharp> \\<Gamma>; atom b \\<sharp> \\<Gamma>;\n                     atom b \\<sharp> ba;\n                     \\<Gamma>(ba $$:= Fun \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam b\n e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                     [[atom ba]]lst. Lam b e = [[atom bb]]lst. x;\n                     \\<Gamma> \\<turnstile>\\<^sub>W Rec bb\n              x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n                     atom bb \\<sharp> \\<Gamma>;\n                     atom bb \\<sharp> \\<Gamma>\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1'\n   \\<tau>\\<^sub>2'.\n   atom y \\<sharp> (\\<Gamma>, bb) \\<and>\n   x = Lam y e \\<and>\n   Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n   Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n   \\<Gamma>(bb $$:= Fun \\<tau>\\<^sub>1'\n                     \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                      e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n         atom xa \\<sharp> z; atom xa \\<sharp> Prj1 x; atom y \\<sharp> z;\n         atom y \\<sharp> Prj1 x; atom xa \\<sharp> \\<Gamma>;\n         atom y \\<sharp> \\<Gamma>; atom y \\<sharp> xa;\n         \\<Gamma>(xa $$:= Fun \\<tau>\\<^sub>1\n                           \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                           e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         [[atom xa]]lst. Lam y e = [[atom z]]lst. Prj1 x;\n         \\<Gamma> \\<turnstile>\\<^sub>W Rec z\n  (Prj1 x) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom z \\<sharp> \\<Gamma>; atom z \\<sharp> \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n                             atom y \\<sharp> (\\<Gamma>, z) \\<and>\n                             Prj1 x = Lam y e \\<and>\n                             Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n                             Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n                             \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n        \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n         e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\nA total of 17 subgoals...", "qed (simp_all add: Abs1_eq_iff)"], ["proof (state)\nthis:\n  \\<exists>y e \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n     atom y \\<sharp> (\\<Gamma>, z) \\<and>\n     t = Lam y e \\<and>\n     Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n     Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2' \\<and>\n     \\<Gamma>(z $$:= Fun \\<tau>\\<^sub>1'\n                      \\<tau>\\<^sub>2') \\<turnstile>\\<^sub>W Lam y\n                       e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive_cases jw_Inj1_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\""], ["", "inductive_cases jw_Inj2_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\""], ["", "inductive_cases jw_Pair_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Pair e\\<^sub>1 e\\<^sub>2 : \\<tau>\""], ["", "lemma jw_Let_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Let e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\"\n  and     \"atom x \\<sharp> (e\\<^sub>1, \\<Gamma>)\"\n  obtains \\<tau>\\<^sub>1 where \"\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\" \"\\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>\\<^sub>1.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                 e\\<^sub>2 : \\<tau>\\<^sub>2\n  atom x \\<sharp> (e\\<^sub>1, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>\\<^sub>1.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (atomize_elim, nominal_induct \\<Gamma> \"Let e\\<^sub>1 x e\\<^sub>2\" \\<tau>\\<^sub>2 avoiding: e\\<^sub>1 x e\\<^sub>2 rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 xa\n       e\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> xa;\n        atom x \\<sharp> e\\<^sub>2'; atom x \\<sharp> \\<Gamma>;\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>e\\<^sub>1 = Syntax.Let b ba bb;\n            \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let b ba\n     bb : \\<tau>\\<^sub>1;\n            atom ba \\<sharp> (b, \\<Gamma>);\n            atom ba \\<sharp> (b, \\<Gamma>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                                \\<Gamma> \\<turnstile>\\<^sub>W b : \\<tau>\\<^sub>1' \\<and>\n                                \\<Gamma>(ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W bb : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>e\\<^sub>2 = Syntax.Let b ba bb;\n            \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Syntax.Let\n                            b ba bb : \\<tau>\\<^sub>2;\n            atom ba \\<sharp> (b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1));\n            atom ba \\<sharp> (b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                                \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W b : \\<tau>\\<^sub>1' \\<and>\n                                \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W bb : \\<tau>\\<^sub>2;\n        [[atom x]]lst. e\\<^sub>2 = [[atom xa]]lst. e\\<^sub>2';\n        \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 xa\n e\\<^sub>2' : \\<tau>\\<^sub>2;\n        atom xa \\<sharp> (e\\<^sub>1, \\<Gamma>);\n        atom xa \\<sharp> (e\\<^sub>1, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1.\n                            \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1 \\<and>\n                            \\<Gamma>(xa $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>\\<^sub>2", "case (jw_Let x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 x' e\\<^sub>2')"], ["proof (state)\nthis:\n  atom x \\<sharp> e\\<^sub>1\n  atom x \\<sharp> x'\n  atom x \\<sharp> e\\<^sub>2'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<lbrakk>e\\<^sub>1 = Syntax.Let ?b ?ba ?bb;\n   \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let ?b ?ba ?bb : \\<tau>\\<^sub>1;\n   atom ?ba \\<sharp> (?b, \\<Gamma>);\n   atom ?ba \\<sharp> (?b, \\<Gamma>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : \\<tau>\\<^sub>1' \\<and>\n                       \\<Gamma>(?ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?bb : \\<tau>\\<^sub>1\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  \\<lbrakk>e\\<^sub>2 = Syntax.Let ?b ?ba ?bb;\n   \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Syntax.Let ?b ?ba\n                   ?bb : \\<tau>\\<^sub>2;\n   atom ?ba \\<sharp> (?b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1));\n   atom ?ba \\<sharp> (?b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W ?b : \\<tau>\\<^sub>1' \\<and>\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(?ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?bb : \\<tau>\\<^sub>2\n  [[atom x]]lst. e\\<^sub>2 = [[atom x']]lst. e\\<^sub>2'\n  \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x'\n                                 e\\<^sub>2' : \\<tau>\\<^sub>2\n  atom x' \\<sharp> (e\\<^sub>1, \\<Gamma>)\n  atom x' \\<sharp> (e\\<^sub>1, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 xa\n       e\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> xa;\n        atom x \\<sharp> e\\<^sub>2'; atom x \\<sharp> \\<Gamma>;\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>e\\<^sub>1 = Syntax.Let b ba bb;\n            \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let b ba\n     bb : \\<tau>\\<^sub>1;\n            atom ba \\<sharp> (b, \\<Gamma>);\n            atom ba \\<sharp> (b, \\<Gamma>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                                \\<Gamma> \\<turnstile>\\<^sub>W b : \\<tau>\\<^sub>1' \\<and>\n                                \\<Gamma>(ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W bb : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>e\\<^sub>2 = Syntax.Let b ba bb;\n            \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Syntax.Let\n                            b ba bb : \\<tau>\\<^sub>2;\n            atom ba \\<sharp> (b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1));\n            atom ba \\<sharp> (b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1))\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                                \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W b : \\<tau>\\<^sub>1' \\<and>\n                                \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W bb : \\<tau>\\<^sub>2;\n        [[atom x]]lst. e\\<^sub>2 = [[atom xa]]lst. e\\<^sub>2';\n        \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 xa\n e\\<^sub>2' : \\<tau>\\<^sub>2;\n        atom xa \\<sharp> (e\\<^sub>1, \\<Gamma>);\n        atom xa \\<sharp> (e\\<^sub>1, \\<Gamma>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1.\n                            \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1 \\<and>\n                            \\<Gamma>(xa $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>\\<^sub>2", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> e\\<^sub>1\n  atom x \\<sharp> x'\n  atom x \\<sharp> e\\<^sub>2'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<lbrakk>e\\<^sub>1 = Syntax.Let ?b ?ba ?bb;\n   \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let ?b ?ba ?bb : \\<tau>\\<^sub>1;\n   atom ?ba \\<sharp> (?b, \\<Gamma>);\n   atom ?ba \\<sharp> (?b, \\<Gamma>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : \\<tau>\\<^sub>1' \\<and>\n                       \\<Gamma>(?ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?bb : \\<tau>\\<^sub>1\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  \\<lbrakk>e\\<^sub>2 = Syntax.Let ?b ?ba ?bb;\n   \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Syntax.Let ?b ?ba\n                   ?bb : \\<tau>\\<^sub>2;\n   atom ?ba \\<sharp> (?b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1));\n   atom ?ba \\<sharp> (?b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W ?b : \\<tau>\\<^sub>1' \\<and>\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(?ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?bb : \\<tau>\\<^sub>2\n  [[atom x]]lst. e\\<^sub>2 = [[atom x']]lst. e\\<^sub>2'\n  \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x'\n                                 e\\<^sub>2' : \\<tau>\\<^sub>2\n  atom x' \\<sharp> (e\\<^sub>1, \\<Gamma>)\n  atom x' \\<sharp> (e\\<^sub>1, \\<Gamma>)", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> e\\<^sub>1\n  atom x \\<sharp> x'\n  atom x \\<sharp> e\\<^sub>2'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<lbrakk>e\\<^sub>1 = Syntax.Let ?b ?ba ?bb;\n   \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let ?b ?ba ?bb : \\<tau>\\<^sub>1;\n   atom ?ba \\<sharp> (?b, \\<Gamma>);\n   atom ?ba \\<sharp> (?b, \\<Gamma>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : \\<tau>\\<^sub>1' \\<and>\n                       \\<Gamma>(?ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?bb : \\<tau>\\<^sub>1\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  \\<lbrakk>e\\<^sub>2 = Syntax.Let ?b ?ba ?bb;\n   \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W Syntax.Let ?b ?ba\n                   ?bb : \\<tau>\\<^sub>2;\n   atom ?ba \\<sharp> (?b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1));\n   atom ?ba \\<sharp> (?b, \\<Gamma>(x $$:= \\<tau>\\<^sub>1))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>\\<^sub>1'.\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W ?b : \\<tau>\\<^sub>1' \\<and>\n                       \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(?ba $$:= \\<tau>\\<^sub>1') \\<turnstile>\\<^sub>W ?bb : \\<tau>\\<^sub>2\n  [[atom x]]lst. e\\<^sub>2 = [[atom x']]lst. e\\<^sub>2'\n  \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x'\n                                 e\\<^sub>2' : \\<tau>\\<^sub>2\n  atom x' \\<sharp> (e\\<^sub>1, \\<Gamma>)\n  atom x' \\<sharp> (e\\<^sub>1, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>\\<^sub>1.\n       \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1 \\<and>\n       \\<Gamma>(x' $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>\\<^sub>2", "by (auto simp: fresh_Pair perm_supp_eq elim!:\n        iffD1[OF Abs_lst1_fcb2'[where f = \"\\<lambda>x t (\\<Gamma>, \\<tau>\\<^sub>1, \\<tau>\\<^sub>2). \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W t : \\<tau>\\<^sub>2\"\n        and c = \"(\\<Gamma>, \\<tau>\\<^sub>1, \\<tau>\\<^sub>2)\" and a = x and b = x' and x = e\\<^sub>2 and y = e\\<^sub>2', unfolded prod.case],\n        rotated -1])"], ["proof (state)\nthis:\n  \\<exists>\\<tau>\\<^sub>1.\n     \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1 \\<and>\n     \\<Gamma>(x' $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive_cases jw_Prj1_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Prj1 e : \\<tau>\\<^sub>1\""], ["", "inductive_cases jw_Prj2_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Prj2 e : \\<tau>\\<^sub>2\""], ["", "inductive_cases jw_App_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W App e e' : \\<tau>\\<^sub>2\""], ["", "inductive_cases jw_Case_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Case e e\\<^sub>1 e\\<^sub>2 : \\<tau>\""], ["", "inductive_cases jw_Auth_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Auth e : \\<tau>\""], ["", "inductive_cases jw_Unauth_inv[elim]: \"\\<Gamma> \\<turnstile>\\<^sub>W Unauth e : \\<tau>\""], ["", "lemma subst_type_perm_eq:\n  assumes \"atom b \\<sharp> t\"\n  shows   \"subst_type t (Mu a t) a = subst_type ((a \\<leftrightarrow> b) \\<bullet> t) (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_type t (Mu a t) a =\n    subst_type ((a \\<leftrightarrow> b) \\<bullet> t)\n     (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b", "using assms"], ["proof (prove)\nusing this:\n  atom b \\<sharp> t\n\ngoal (1 subgoal):\n 1. subst_type t (Mu a t) a =\n    subst_type ((a \\<leftrightarrow> b) \\<bullet> t)\n     (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. atom b \\<sharp> t \\<Longrightarrow>\n    subst_type t (Mu a t) a =\n    subst_type ((a \\<leftrightarrow> b) \\<bullet> t)\n     (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b", "have f: \"atom a \\<sharp> subst_type t (Mu a t) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom a \\<sharp> subst_type t (Mu a t) a", "by (rule iffD2[OF fresh_subst_type]) simp"], ["proof (state)\nthis:\n  atom a \\<sharp> subst_type t (Mu a t) a\n\ngoal (1 subgoal):\n 1. atom b \\<sharp> t \\<Longrightarrow>\n    subst_type t (Mu a t) a =\n    subst_type ((a \\<leftrightarrow> b) \\<bullet> t)\n     (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b", "have    \"atom b \\<sharp> subst_type t (Mu a t) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom b \\<sharp> subst_type t (Mu a t) a", "by (auto simp: assms)"], ["proof (state)\nthis:\n  atom b \\<sharp> subst_type t (Mu a t) a\n\ngoal (1 subgoal):\n 1. atom b \\<sharp> t \\<Longrightarrow>\n    subst_type t (Mu a t) a =\n    subst_type ((a \\<leftrightarrow> b) \\<bullet> t)\n     (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b", "with f"], ["proof (chain)\npicking this:\n  atom a \\<sharp> subst_type t (Mu a t) a\n  atom b \\<sharp> subst_type t (Mu a t) a", "have \"subst_type t (Mu a t) a = (a \\<leftrightarrow> b) \\<bullet> subst_type t (Mu a t) a\""], ["proof (prove)\nusing this:\n  atom a \\<sharp> subst_type t (Mu a t) a\n  atom b \\<sharp> subst_type t (Mu a t) a\n\ngoal (1 subgoal):\n 1. subst_type t (Mu a t) a =\n    (a \\<leftrightarrow> b) \\<bullet> subst_type t (Mu a t) a", "by (simp add: flip_fresh_fresh)"], ["proof (state)\nthis:\n  subst_type t (Mu a t) a =\n  (a \\<leftrightarrow> b) \\<bullet> subst_type t (Mu a t) a\n\ngoal (1 subgoal):\n 1. atom b \\<sharp> t \\<Longrightarrow>\n    subst_type t (Mu a t) a =\n    subst_type ((a \\<leftrightarrow> b) \\<bullet> t)\n     (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b", "then"], ["proof (chain)\npicking this:\n  subst_type t (Mu a t) a =\n  (a \\<leftrightarrow> b) \\<bullet> subst_type t (Mu a t) a", "show \"subst_type t (Mu a t) a  = subst_type ((a \\<leftrightarrow> b) \\<bullet> t) (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b\""], ["proof (prove)\nusing this:\n  subst_type t (Mu a t) a =\n  (a \\<leftrightarrow> b) \\<bullet> subst_type t (Mu a t) a\n\ngoal (1 subgoal):\n 1. subst_type t (Mu a t) a =\n    subst_type ((a \\<leftrightarrow> b) \\<bullet> t)\n     (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b", "by simp"], ["proof (state)\nthis:\n  subst_type t (Mu a t) a =\n  subst_type ((a \\<leftrightarrow> b) \\<bullet> t)\n   (Mu b ((a \\<leftrightarrow> b) \\<bullet> t)) b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma jw_Roll_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Roll e : \\<tau>\"\n  and     \"atom \\<alpha> \\<sharp> (\\<Gamma>, \\<tau>)\"\n  obtains \\<tau>' where \"\\<tau> = Mu \\<alpha> \\<tau>'\" \"\\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>' (Mu \\<alpha> \\<tau>') \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>'.\n        \\<lbrakk>\\<tau> = Mu \\<alpha> \\<tau>';\n         \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>'\n      (Mu \\<alpha> \\<tau>') \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms [[simproc del: alpha_lst]]"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W Roll e : \\<tau>\n  atom \\<alpha> \\<sharp> (\\<Gamma>, \\<tau>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>'.\n        \\<lbrakk>\\<tau> = Mu \\<alpha> \\<tau>';\n         \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>'\n      (Mu \\<alpha> \\<tau>') \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (atomize_elim, nominal_induct \\<Gamma> \"Roll e\" \\<tau> avoiding: e \\<alpha> rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> \\<Gamma> e \\<tau> \\<alpha>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> e; atom \\<alpha> \\<sharp> \\<alpha>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n     (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba.\n           \\<lbrakk>e = Roll b;\n            \\<Gamma> \\<turnstile>\\<^sub>W Roll\n     b : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n            atom\n             ba \\<sharp> (\\<Gamma>,\n                          subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>);\n            atom\n             ba \\<sharp> (\\<Gamma>,\n                          subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                           \\<alpha>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>'.\n                                subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                 \\<alpha> =\n                                Mu ba \\<tau>' \\<and>\n                                \\<Gamma> \\<turnstile>\\<^sub>W b : subst_type\n                             \\<tau>' (Mu ba \\<tau>') ba;\n        \\<Gamma> \\<turnstile>\\<^sub>W Roll e : Mu \\<alpha> \\<tau>;\n        atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>);\n        atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>'.\n                            Mu \\<alpha> \\<tau> = Mu \\<alpha>' \\<tau>' \\<and>\n                            \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type\n                         \\<tau>' (Mu \\<alpha>' \\<tau>') \\<alpha>'", "case (jw_Roll \\<alpha> \\<Gamma> e \\<tau> \\<alpha>')"], ["proof (state)\nthis:\n  atom \\<alpha> \\<sharp> e\n  atom \\<alpha> \\<sharp> \\<alpha>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                     \\<alpha>\n  \\<lbrakk>e = Roll ?b;\n   \\<Gamma> \\<turnstile>\\<^sub>W Roll\n                                  ?b : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>;\n   atom\n    ?ba \\<sharp> (\\<Gamma>,\n                  subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>);\n   atom\n    ?ba \\<sharp> (\\<Gamma>,\n                  subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>''.\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n                       Mu ?ba \\<tau>'' \\<and>\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : subst_type\n                     \\<tau>'' (Mu ?ba \\<tau>'') ?ba\n  \\<Gamma> \\<turnstile>\\<^sub>W Roll e : Mu \\<alpha> \\<tau>\n  atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\n  atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> \\<Gamma> e \\<tau> \\<alpha>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> e; atom \\<alpha> \\<sharp> \\<alpha>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n     (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba.\n           \\<lbrakk>e = Roll b;\n            \\<Gamma> \\<turnstile>\\<^sub>W Roll\n     b : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n            atom\n             ba \\<sharp> (\\<Gamma>,\n                          subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>);\n            atom\n             ba \\<sharp> (\\<Gamma>,\n                          subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                           \\<alpha>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>'.\n                                subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                 \\<alpha> =\n                                Mu ba \\<tau>' \\<and>\n                                \\<Gamma> \\<turnstile>\\<^sub>W b : subst_type\n                             \\<tau>' (Mu ba \\<tau>') ba;\n        \\<Gamma> \\<turnstile>\\<^sub>W Roll e : Mu \\<alpha> \\<tau>;\n        atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>);\n        atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>'.\n                            Mu \\<alpha> \\<tau> = Mu \\<alpha>' \\<tau>' \\<and>\n                            \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type\n                         \\<tau>' (Mu \\<alpha>' \\<tau>') \\<alpha>'", "then"], ["proof (chain)\npicking this:\n  atom \\<alpha> \\<sharp> e\n  atom \\<alpha> \\<sharp> \\<alpha>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                     \\<alpha>\n  \\<lbrakk>e = Roll ?b;\n   \\<Gamma> \\<turnstile>\\<^sub>W Roll\n                                  ?b : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>;\n   atom\n    ?ba \\<sharp> (\\<Gamma>,\n                  subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>);\n   atom\n    ?ba \\<sharp> (\\<Gamma>,\n                  subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>''.\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n                       Mu ?ba \\<tau>'' \\<and>\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : subst_type\n                     \\<tau>'' (Mu ?ba \\<tau>'') ?ba\n  \\<Gamma> \\<turnstile>\\<^sub>W Roll e : Mu \\<alpha> \\<tau>\n  atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\n  atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)", "show ?case"], ["proof (prove)\nusing this:\n  atom \\<alpha> \\<sharp> e\n  atom \\<alpha> \\<sharp> \\<alpha>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                     \\<alpha>\n  \\<lbrakk>e = Roll ?b;\n   \\<Gamma> \\<turnstile>\\<^sub>W Roll\n                                  ?b : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>;\n   atom\n    ?ba \\<sharp> (\\<Gamma>,\n                  subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>);\n   atom\n    ?ba \\<sharp> (\\<Gamma>,\n                  subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>''.\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n                       Mu ?ba \\<tau>'' \\<and>\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : subst_type\n                     \\<tau>'' (Mu ?ba \\<tau>'') ?ba\n  \\<Gamma> \\<turnstile>\\<^sub>W Roll e : Mu \\<alpha> \\<tau>\n  atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\n  atom \\<alpha>' \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>''.\n       Mu \\<alpha> \\<tau> = Mu \\<alpha>' \\<tau>'' \\<and>\n       \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>''\n    (Mu \\<alpha>' \\<tau>'') \\<alpha>'", "by (auto simp: perm_supp_eq fresh_Pair fresh_at_base subst_type.eqvt\n      intro!: exI[of _ \"(\\<alpha> \\<leftrightarrow> \\<alpha>') \\<bullet> \\<tau>\"] Abs_lst_eq_flipI dest: judge_weak.eqvt[of _ _ _ \"(\\<alpha> \\<leftrightarrow> \\<alpha>')\"])"], ["proof (state)\nthis:\n  \\<exists>\\<tau>''.\n     Mu \\<alpha> \\<tau> = Mu \\<alpha>' \\<tau>'' \\<and>\n     \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>''\n  (Mu \\<alpha>' \\<tau>'') \\<alpha>'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma jw_Unroll_inv[elim]:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W Unroll e : \\<tau>\"\n  and     \"atom \\<alpha> \\<sharp> (\\<Gamma>, \\<tau>)\"\n  obtains \\<tau>' where \"\\<tau> = subst_type \\<tau>' (Mu \\<alpha> \\<tau>') \\<alpha>\" \"\\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>'.\n        \\<lbrakk>\\<tau> = subst_type \\<tau>' (Mu \\<alpha> \\<tau>') \\<alpha>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W Unroll e : \\<tau>\n  atom \\<alpha> \\<sharp> (\\<Gamma>, \\<tau>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>'.\n        \\<lbrakk>\\<tau> = subst_type \\<tau>' (Mu \\<alpha> \\<tau>') \\<alpha>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (atomize_elim, nominal_induct \\<Gamma> \"Unroll e\" \\<tau> avoiding: e \\<alpha> rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> \\<Gamma> e \\<tau> \\<alpha>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> e; atom \\<alpha> \\<sharp> \\<alpha>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        \\<And>b ba.\n           \\<lbrakk>e = Unroll b;\n            \\<Gamma> \\<turnstile>\\<^sub>W Unroll b : Mu \\<alpha> \\<tau>;\n            atom ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>);\n            atom ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>'.\n                                Mu \\<alpha> \\<tau> =\n                                subst_type \\<tau>' (Mu ba \\<tau>') ba \\<and>\n                                \\<Gamma> \\<turnstile>\\<^sub>W b : Mu ba\n                             \\<tau>';\n        \\<Gamma> \\<turnstile>\\<^sub>W Unroll\n e : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n        atom\n         \\<alpha>' \\<sharp> (\\<Gamma>,\n                             subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                              \\<alpha>);\n        atom\n         \\<alpha>' \\<sharp> (\\<Gamma>,\n                             subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                              \\<alpha>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>'.\n                            subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                             \\<alpha> =\n                            subst_type \\<tau>' (Mu \\<alpha>' \\<tau>')\n                             \\<alpha>' \\<and>\n                            \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha>'\n                         \\<tau>'", "case (jw_Unroll \\<alpha> \\<Gamma> e \\<tau> \\<alpha>')"], ["proof (state)\nthis:\n  atom \\<alpha> \\<sharp> e\n  atom \\<alpha> \\<sharp> \\<alpha>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>\n  \\<lbrakk>e = Unroll ?b;\n   \\<Gamma> \\<turnstile>\\<^sub>W Unroll ?b : Mu \\<alpha> \\<tau>;\n   atom ?ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>);\n   atom ?ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>''.\n                       Mu \\<alpha> \\<tau> =\n                       subst_type \\<tau>'' (Mu ?ba \\<tau>'') ?ba \\<and>\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : Mu ?ba \\<tau>''\n  \\<Gamma> \\<turnstile>\\<^sub>W Unroll\n                                 e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n\\<alpha>\n  atom\n   \\<alpha>' \\<sharp> (\\<Gamma>,\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)\n  atom\n   \\<alpha>' \\<sharp> (\\<Gamma>,\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> \\<Gamma> e \\<tau> \\<alpha>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> e; atom \\<alpha> \\<sharp> \\<alpha>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        \\<And>b ba.\n           \\<lbrakk>e = Unroll b;\n            \\<Gamma> \\<turnstile>\\<^sub>W Unroll b : Mu \\<alpha> \\<tau>;\n            atom ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>);\n            atom ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\\<rbrakk>\n           \\<Longrightarrow> \\<exists>\\<tau>'.\n                                Mu \\<alpha> \\<tau> =\n                                subst_type \\<tau>' (Mu ba \\<tau>') ba \\<and>\n                                \\<Gamma> \\<turnstile>\\<^sub>W b : Mu ba\n                             \\<tau>';\n        \\<Gamma> \\<turnstile>\\<^sub>W Unroll\n e : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n        atom\n         \\<alpha>' \\<sharp> (\\<Gamma>,\n                             subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                              \\<alpha>);\n        atom\n         \\<alpha>' \\<sharp> (\\<Gamma>,\n                             subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                              \\<alpha>)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>'.\n                            subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                             \\<alpha> =\n                            subst_type \\<tau>' (Mu \\<alpha>' \\<tau>')\n                             \\<alpha>' \\<and>\n                            \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha>'\n                         \\<tau>'", "then"], ["proof (chain)\npicking this:\n  atom \\<alpha> \\<sharp> e\n  atom \\<alpha> \\<sharp> \\<alpha>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>\n  \\<lbrakk>e = Unroll ?b;\n   \\<Gamma> \\<turnstile>\\<^sub>W Unroll ?b : Mu \\<alpha> \\<tau>;\n   atom ?ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>);\n   atom ?ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>''.\n                       Mu \\<alpha> \\<tau> =\n                       subst_type \\<tau>'' (Mu ?ba \\<tau>'') ?ba \\<and>\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : Mu ?ba \\<tau>''\n  \\<Gamma> \\<turnstile>\\<^sub>W Unroll\n                                 e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n\\<alpha>\n  atom\n   \\<alpha>' \\<sharp> (\\<Gamma>,\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)\n  atom\n   \\<alpha>' \\<sharp> (\\<Gamma>,\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)", "show ?case"], ["proof (prove)\nusing this:\n  atom \\<alpha> \\<sharp> e\n  atom \\<alpha> \\<sharp> \\<alpha>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>\n  \\<lbrakk>e = Unroll ?b;\n   \\<Gamma> \\<turnstile>\\<^sub>W Unroll ?b : Mu \\<alpha> \\<tau>;\n   atom ?ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>);\n   atom ?ba \\<sharp> (\\<Gamma>, Mu \\<alpha> \\<tau>)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<tau>''.\n                       Mu \\<alpha> \\<tau> =\n                       subst_type \\<tau>'' (Mu ?ba \\<tau>'') ?ba \\<and>\n                       \\<Gamma> \\<turnstile>\\<^sub>W ?b : Mu ?ba \\<tau>''\n  \\<Gamma> \\<turnstile>\\<^sub>W Unroll\n                                 e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n\\<alpha>\n  atom\n   \\<alpha>' \\<sharp> (\\<Gamma>,\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)\n  atom\n   \\<alpha>' \\<sharp> (\\<Gamma>,\n                       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>''.\n       subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n       subst_type \\<tau>'' (Mu \\<alpha>' \\<tau>'') \\<alpha>' \\<and>\n       \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha>' \\<tau>''", "by (auto simp: perm_supp_eq fresh_Pair subst_type_perm_eq fresh_subst_type\n      intro!: exI[of _ \"(\\<alpha> \\<leftrightarrow> \\<alpha>') \\<bullet> \\<tau>\"] dest: judge_weak.eqvt[of _ _ _ \"(\\<alpha> \\<leftrightarrow> \\<alpha>')\"])"], ["proof (state)\nthis:\n  \\<exists>\\<tau>''.\n     subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n     subst_type \\<tau>'' (Mu \\<alpha>' \\<tau>'') \\<alpha>' \\<and>\n     \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha>' \\<tau>''\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Additional inversion rules based on type rather than term.\\<close>"], ["", "inductive_cases jw_Prod_inv[elim]: \"{$$} \\<turnstile>\\<^sub>W e : Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\""], ["", "inductive_cases jw_Sum_inv[elim]: \"{$$} \\<turnstile>\\<^sub>W e : Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\""], ["", "lemma jw_Fun_inv[elim]:\n  assumes \"{$$} \\<turnstile>\\<^sub>W v : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" \"value v\"\n  obtains e x where \"v = Lam x e \\<or> v = Rec x e\" \"atom x \\<sharp> (c::term)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x e.\n        \\<lbrakk>v = Lam x e \\<or> v = Rec x e; atom x \\<sharp> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms [[simproc del: alpha_lst]]"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W v : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value v\n\ngoal (1 subgoal):\n 1. (\\<And>x e.\n        \\<lbrakk>v = Lam x e \\<or> v = Rec x e; atom x \\<sharp> c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (atomize_elim, nominal_induct \"{$$} :: tyenv\" v \"Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" avoiding: \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n            \\<tau>\\<^sub>2 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e : Fun b ba; value e;\n            value e\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x ea.\n                                (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Lam x\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Lam x e); value (Lam x e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Lam x e = Lam xa ea \\<or>\n                             Lam x e = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 3. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 4. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Auth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Auth e); value (Auth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Auth e = Lam x ea \\<or>\n                              Auth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c\nA total of 11 subgoals...", "case (jw_Lam x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  atom x \\<sharp> \\<tau>\\<^sub>1\n  atom x \\<sharp> \\<tau>\\<^sub>2\n  atom x \\<sharp> {$$}\n  {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$}; \\<tau>\\<^sub>2 = Fun ?b ?ba;\n   {$$} \\<turnstile>\\<^sub>W e : Fun ?b ?ba; value e; value e\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x ea.\n                       (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                       atom x \\<sharp> c\n  {$$} \\<turnstile>\\<^sub>W Lam x e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value (Lam x e)\n  value (Lam x e)\n\ngoal (11 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n            \\<tau>\\<^sub>2 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e : Fun b ba; value e;\n            value e\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x ea.\n                                (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Lam x\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Lam x e); value (Lam x e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Lam x e = Lam xa ea \\<or>\n                             Lam x e = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 3. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 4. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Auth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Auth e); value (Auth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Auth e = Lam x ea \\<or>\n                              Auth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> \\<tau>\\<^sub>1\n  atom x \\<sharp> \\<tau>\\<^sub>2\n  atom x \\<sharp> {$$}\n  {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$}; \\<tau>\\<^sub>2 = Fun ?b ?ba;\n   {$$} \\<turnstile>\\<^sub>W e : Fun ?b ?ba; value e; value e\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x ea.\n                       (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                       atom x \\<sharp> c\n  {$$} \\<turnstile>\\<^sub>W Lam x e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value (Lam x e)\n  value (Lam x e)", "obtain x' where \"atom (x'::var) \\<sharp> (c, e)\""], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<tau>\\<^sub>1\n  atom x \\<sharp> \\<tau>\\<^sub>2\n  atom x \\<sharp> {$$}\n  {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$}; \\<tau>\\<^sub>2 = Fun ?b ?ba;\n   {$$} \\<turnstile>\\<^sub>W e : Fun ?b ?ba; value e; value e\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x ea.\n                       (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                       atom x \\<sharp> c\n  {$$} \\<turnstile>\\<^sub>W Lam x e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value (Lam x e)\n  value (Lam x e)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        atom x' \\<sharp> (c, e) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_supp obtain_fresh'"], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<tau>\\<^sub>1\n  atom x \\<sharp> \\<tau>\\<^sub>2\n  atom x \\<sharp> {$$}\n  {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$}; \\<tau>\\<^sub>2 = Fun ?b ?ba;\n   {$$} \\<turnstile>\\<^sub>W e : Fun ?b ?ba; value e; value e\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x ea.\n                       (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                       atom x \\<sharp> c\n  {$$} \\<turnstile>\\<^sub>W Lam x e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value (Lam x e)\n  value (Lam x e)\n  finite (supp ?x)\n  \\<lbrakk>finite (supp ?x);\n   \\<And>a. atom a \\<sharp> ?x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        atom x' \\<sharp> (c, e) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  atom x' \\<sharp> (c, e)\n\ngoal (11 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n            \\<tau>\\<^sub>2 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e : Fun b ba; value e;\n            value e\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x ea.\n                                (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Lam x\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Lam x e); value (Lam x e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Lam x e = Lam xa ea \\<or>\n                             Lam x e = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 3. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 4. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Auth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Auth e); value (Auth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Auth e = Lam x ea \\<or>\n                              Auth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  atom x' \\<sharp> (c, e)", "have \"[[atom x]]lst. e = [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> e \\<and> atom x' \\<sharp> c\""], ["proof (prove)\nusing this:\n  atom x' \\<sharp> (c, e)\n\ngoal (1 subgoal):\n 1. [[atom x]]lst. e =\n    [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> e \\<and>\n    atom x' \\<sharp> c", "by (simp add: Abs_lst_eq_flipI fresh_Pair)"], ["proof (state)\nthis:\n  [[atom x]]lst. e =\n  [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> e \\<and>\n  atom x' \\<sharp> c\n\ngoal (11 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n            \\<tau>\\<^sub>2 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e : Fun b ba; value e;\n            value e\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x ea.\n                                (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Lam x\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Lam x e); value (Lam x e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Lam x e = Lam xa ea \\<or>\n                             Lam x e = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 3. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 4. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Auth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Auth e); value (Auth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Auth e = Lam x ea \\<or>\n                              Auth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  [[atom x]]lst. e =\n  [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> e \\<and>\n  atom x' \\<sharp> c", "show ?case"], ["proof (prove)\nusing this:\n  [[atom x]]lst. e =\n  [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> e \\<and>\n  atom x' \\<sharp> c\n\ngoal (1 subgoal):\n 1. \\<exists>xa ea.\n       (Lam x e = Lam xa ea \\<or> Lam x e = Rec xa ea) \\<and>\n       atom xa \\<sharp> c", "by auto"], ["proof (state)\nthis:\n  \\<exists>xa ea.\n     (Lam x e = Lam xa ea \\<or> Lam x e = Rec xa ea) \\<and>\n     atom xa \\<sharp> c\n\ngoal (10 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Auth\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Auth e); value (Auth e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Auth e = Lam x ea \\<or>\n                             Auth e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Unauth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Unauth e); value (Unauth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Unauth e = Lam x ea \\<or>\n                              Unauth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Auth\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Auth e); value (Auth e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Auth e = Lam x ea \\<or>\n                             Auth e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Unauth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Unauth e); value (Unauth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Unauth e = Lam x ea \\<or>\n                              Unauth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c", "case (jw_Rec x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e')"], ["proof (state)\nthis:\n  atom x \\<sharp> \\<tau>\\<^sub>1\n  atom x \\<sharp> \\<tau>\\<^sub>2\n  atom y \\<sharp> \\<tau>\\<^sub>1\n  atom y \\<sharp> \\<tau>\\<^sub>2\n  atom x \\<sharp> {$$}\n  atom y \\<sharp> {$$}\n  atom y \\<sharp> x\n  {$$}(x $$:= Fun \\<tau>\\<^sub>1\n               \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n               e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n   {$$} \\<turnstile>\\<^sub>W Lam y e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n   value (Lam y e'); value (Lam y e')\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x e.\n                       (Lam y e' = Lam x e \\<or> Lam y e' = Rec x e) \\<and>\n                       atom x \\<sharp> c\n  {$$} \\<turnstile>\\<^sub>W Rec x\n                             (Lam y e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value (Rec x (Lam y e'))\n  value (Rec x (Lam y e'))\n\ngoal (10 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Auth\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Auth e); value (Auth e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Auth e = Lam x ea \\<or>\n                             Auth e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Unauth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Unauth e); value (Unauth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Unauth e = Lam x ea \\<or>\n                              Unauth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c", "obtain x' where \"atom (x'::var) \\<sharp> (c, Lam y e')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        atom x' \\<sharp> (c, Lam y e') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using finite_supp obtain_fresh"], ["proof (prove)\nusing this:\n  finite (supp ?x)\n  (\\<And>a. atom a \\<sharp> ?x \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        atom x' \\<sharp> (c, Lam y e') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  atom x' \\<sharp> (c, Lam y e')\n\ngoal (10 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Auth\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Auth e); value (Auth e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Auth e = Lam x ea \\<or>\n                             Auth e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Unauth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Unauth e); value (Unauth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Unauth e = Lam x ea \\<or>\n                              Unauth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c", "then"], ["proof (chain)\npicking this:\n  atom x' \\<sharp> (c, Lam y e')", "have \"[[atom x]]lst. Lam y e' = [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> (Lam y e') \\<and> atom x' \\<sharp> c\""], ["proof (prove)\nusing this:\n  atom x' \\<sharp> (c, Lam y e')\n\ngoal (1 subgoal):\n 1. [[atom x]]lst. Lam y e' =\n    [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> Lam y e' \\<and>\n    atom x' \\<sharp> c", "using Abs_lst_eq_flipI fresh_Pair"], ["proof (prove)\nusing this:\n  atom x' \\<sharp> (c, Lam y e')\n  atom ?b \\<sharp> ?t \\<Longrightarrow>\n  [[atom ?a]]lst. ?t =\n  [[atom ?b]]lst. (?a \\<leftrightarrow> ?b) \\<bullet> ?t\n  ?a \\<sharp> (?x, ?y) = (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?y)\n\ngoal (1 subgoal):\n 1. [[atom x]]lst. Lam y e' =\n    [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> Lam y e' \\<and>\n    atom x' \\<sharp> c", "by blast"], ["proof (state)\nthis:\n  [[atom x]]lst. Lam y e' =\n  [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> Lam y e' \\<and>\n  atom x' \\<sharp> c\n\ngoal (10 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1;\n        atom x \\<sharp> \\<tau>\\<^sub>2; atom y \\<sharp> \\<tau>\\<^sub>1;\n        atom y \\<sharp> \\<tau>\\<^sub>2; atom x \\<sharp> {$$};\n        atom y \\<sharp> {$$}; atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = {$$};\n         {$$} \\<turnstile>\\<^sub>W Lam y\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Lam y e); value (Lam y e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Lam y e = Lam x ea \\<or>\n                              Lam y e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Rec x (Lam y e)); value (Rec x (Lam y e))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa ea.\n                            (Rec x (Lam y e) = Lam xa ea \\<or>\n                             Rec x (Lam y e) = Rec xa ea) \\<and>\n                            atom xa \\<sharp> c\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Auth\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Auth e); value (Auth e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Auth e = Lam x ea \\<or>\n                             Auth e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2;\n          value e; value e\\<rbrakk>\n         \\<Longrightarrow> \\<exists>x ea.\n                              (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                              atom x \\<sharp> c;\n         {$$} \\<turnstile>\\<^sub>W Unauth\n                                    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         value (Unauth e); value (Unauth e)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (Unauth e = Lam x ea \\<or>\n                              Unauth e = Rec x ea) \\<and>\n                             atom x \\<sharp> c", "then"], ["proof (chain)\npicking this:\n  [[atom x]]lst. Lam y e' =\n  [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> Lam y e' \\<and>\n  atom x' \\<sharp> c", "show ?case"], ["proof (prove)\nusing this:\n  [[atom x]]lst. Lam y e' =\n  [[atom x']]lst. (x \\<leftrightarrow> x') \\<bullet> Lam y e' \\<and>\n  atom x' \\<sharp> c\n\ngoal (1 subgoal):\n 1. \\<exists>xa e.\n       (Rec x (Lam y e') = Lam xa e \\<or>\n        Rec x (Lam y e') = Rec xa e) \\<and>\n       atom xa \\<sharp> c", "by auto"], ["proof (state)\nthis:\n  \\<exists>xa e.\n     (Rec x (Lam y e') = Lam xa e \\<or> Rec x (Lam y e') = Rec xa e) \\<and>\n     atom xa \\<sharp> c\n\ngoal (9 subgoals):\n 1. \\<And>x \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} $$ x = Some (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2);\n        {$$} \\<turnstile>\\<^sub>W Var x : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Var x); value (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Var x = Lam xa e \\<or> Var x = Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 2. \\<And>e \\<tau>\\<^sub>1 e' \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e' : Fun b ba; value e';\n            value e'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e' = Lam x e \\<or> e' = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W App e\n                                   e' : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (App e e'); value (App e e')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (App e e' = Lam x ea \\<or>\n                             App e e' = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>1'\n       \\<tau>\\<^sub>2'.\n       \\<lbrakk>atom x \\<sharp> \\<tau>\\<^sub>1';\n        atom x \\<sharp> \\<tau>\\<^sub>2'; atom x \\<sharp> {$$};\n        atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           \\<lbrakk>\\<tau>\\<^sub>1 = Fun b ba;\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun b ba; value e\\<^sub>1;\n            value e\\<^sub>1\\<rbrakk>\n           \\<Longrightarrow> \\<exists>x e.\n                                (e\\<^sub>1 = Lam x e \\<or>\n                                 e\\<^sub>1 = Rec x e) \\<and>\n                                atom x \\<sharp> c;\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                                \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        \\<lbrakk>{$$}(x $$:= \\<tau>\\<^sub>1) = {$$};\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2);\n        value (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa e.\n                            (Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Lam xa e \\<or>\n                             Syntax.Let e\\<^sub>1 x e\\<^sub>2 =\n                             Rec xa e) \\<and>\n                            atom xa \\<sharp> c\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 e\\<^sub>2\n       \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>1; value e\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>1 = Lam x e \\<or>\n                              e\\<^sub>1 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2\n                  (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n         value e\\<^sub>2; value e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x e.\n                             (e\\<^sub>2 = Lam x e \\<or>\n                              e\\<^sub>2 = Rec x e) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : Fun \\<tau>\\<^sub>1'\n          \\<tau>\\<^sub>2';\n        value (Case e e\\<^sub>1 e\\<^sub>2);\n        value (Case e e\\<^sub>1 e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Case e e\\<^sub>1 e\\<^sub>2 = Lam x ea \\<or>\n                             Case e e\\<^sub>1 e\\<^sub>2 = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 5. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2') \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Prj1\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj1 e); value (Prj1 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj1 e = Lam x ea \\<or>\n                             Prj1 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n         (Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2');\n        {$$} \\<turnstile>\\<^sub>W Prj2\n                                   e : Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2';\n        value (Prj2 e); value (Prj2 e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Prj2 e = Lam x ea \\<or>\n                             Prj2 e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 7. \\<And>\\<alpha> e \\<tau> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom \\<alpha> \\<sharp> \\<tau>\\<^sub>1;\n        atom \\<alpha> \\<sharp> \\<tau>\\<^sub>2; atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> =\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W Unroll\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unroll e); value (Unroll e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unroll e = Lam x ea \\<or>\n                             Unroll e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Auth\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Auth e); value (Auth e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Auth e = Lam x ea \\<or>\n                             Auth e = Rec x ea) \\<and>\n                            atom x \\<sharp> c\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e; value e\\<rbrakk>\n        \\<Longrightarrow> \\<exists>x ea.\n                             (e = Lam x ea \\<or> e = Rec x ea) \\<and>\n                             atom x \\<sharp> c;\n        {$$} \\<turnstile>\\<^sub>W Unauth\n                                   e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        value (Unauth e); value (Unauth e)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x ea.\n                            (Unauth e = Lam x ea \\<or>\n                             Unauth e = Rec x ea) \\<and>\n                            atom x \\<sharp> c", "qed simp_all"], ["", "lemma jw_Mu_inv[elim]:\n  assumes \"{$$} \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\" \"value v\"\n  obtains v' where \"v = Roll v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v'. v = Roll v' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\n  value v\n\ngoal (1 subgoal):\n 1. (\\<And>v'. v = Roll v' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (atomize_elim, nominal_induct \"{$$} :: tyenv\" v \"Mu \\<alpha> \\<tau>\" rule: judge_weak.strong_induct) simp_all"], ["", "subsection \\<open>Erasure of Authenticated Types\\<close>"], ["", "nominal_function erase :: \"ty \\<Rightarrow> ty\" where\n  \"erase One = One\" |\n  \"erase (Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = Fun (erase \\<tau>\\<^sub>1) (erase \\<tau>\\<^sub>2)\" |\n  \"erase (Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = Sum (erase \\<tau>\\<^sub>1) (erase \\<tau>\\<^sub>2)\" |\n  \"erase (Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) = Prod (erase \\<tau>\\<^sub>1) (erase \\<tau>\\<^sub>2)\" |\n  \"erase (Mu \\<alpha> \\<tau>) = Mu \\<alpha> (erase \\<tau>)\" |\n  \"erase (Alpha \\<alpha>) = Alpha \\<alpha>\" |\n  \"erase (AuthT \\<tau>) = erase \\<tau>\""], ["proof (prove)\ngoal (31 subgoals):\n 1. eqvt erase_graph_aux\n 2. \\<And>x y. erase_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>x = One \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow>\n           P;\n        \\<And>\\<alpha> \\<tau>. x = Mu \\<alpha> \\<tau> \\<Longrightarrow> P;\n        \\<And>\\<alpha>. x = Alpha \\<alpha> \\<Longrightarrow> P;\n        \\<And>\\<tau>. x = AuthT \\<tau> \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. One = One \\<Longrightarrow> One = One\n 5. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 6. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 7. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 8. \\<And>\\<alpha> \\<tau>.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; True;\n        One = Mu \\<alpha> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> One = Mu \\<alpha> (erase_sumC \\<tau>)\n 9. \\<And>\\<alpha>.\n       One = Alpha \\<alpha> \\<Longrightarrow> One = Alpha \\<alpha>\n 10. \\<And>\\<tau>.\n        \\<lbrakk>eqvt_at erase_sumC \\<tau>; True;\n         One = AuthT \\<tau>\\<rbrakk>\n        \\<Longrightarrow> One = erase_sumC \\<tau>\nA total of 31 subgoals...", "using [[simproc del: alpha_lst]]"], ["proof (prove)\ngoal (31 subgoals):\n 1. eqvt erase_graph_aux\n 2. \\<And>x y. erase_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>x = One \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow>\n           P;\n        \\<And>\\<alpha> \\<tau>. x = Mu \\<alpha> \\<tau> \\<Longrightarrow> P;\n        \\<And>\\<alpha>. x = Alpha \\<alpha> \\<Longrightarrow> P;\n        \\<And>\\<tau>. x = AuthT \\<tau> \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. One = One \\<Longrightarrow> One = One\n 5. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 6. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 7. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 8. \\<And>\\<alpha> \\<tau>.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; True;\n        One = Mu \\<alpha> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> One = Mu \\<alpha> (erase_sumC \\<tau>)\n 9. \\<And>\\<alpha>.\n       One = Alpha \\<alpha> \\<Longrightarrow> One = Alpha \\<alpha>\n 10. \\<And>\\<tau>.\n        \\<lbrakk>eqvt_at erase_sumC \\<tau>; True;\n         One = AuthT \\<tau>\\<rbrakk>\n        \\<Longrightarrow> One = erase_sumC \\<tau>\nA total of 31 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt erase_graph_aux", "by (simp add: eqvt_def erase_graph_aux_def)"], ["proof (prove)\ngoal (30 subgoals):\n 1. \\<And>x y. erase_graph x y \\<Longrightarrow> True\n 2. \\<And>P x.\n       \\<lbrakk>x = One \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow>\n           P;\n        \\<And>\\<alpha> \\<tau>. x = Mu \\<alpha> \\<tau> \\<Longrightarrow> P;\n        \\<And>\\<alpha>. x = Alpha \\<alpha> \\<Longrightarrow> P;\n        \\<And>\\<tau>. x = AuthT \\<tau> \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. One = One \\<Longrightarrow> One = One\n 4. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 5. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 6. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 7. \\<And>\\<alpha> \\<tau>.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; True;\n        One = Mu \\<alpha> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> One = Mu \\<alpha> (erase_sumC \\<tau>)\n 8. \\<And>\\<alpha>.\n       One = Alpha \\<alpha> \\<Longrightarrow> One = Alpha \\<alpha>\n 9. \\<And>\\<tau>.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; True; One = AuthT \\<tau>\\<rbrakk>\n       \\<Longrightarrow> One = erase_sumC \\<tau>\n 10. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n        \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n         eqvt_at erase_sumC \\<tau>\\<^sub>2;\n         eqvt_at erase_sumC \\<tau>\\<^sub>1';\n         eqvt_at erase_sumC \\<tau>\\<^sub>2'; True; True; True; True;\n         Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n         Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\\<rbrakk>\n        \\<Longrightarrow> Fun (erase_sumC \\<tau>\\<^sub>1)\n                           (erase_sumC \\<tau>\\<^sub>2) =\n                          Fun (erase_sumC \\<tau>\\<^sub>1')\n                           (erase_sumC \\<tau>\\<^sub>2')\nA total of 30 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. erase_graph x_ y_ \\<Longrightarrow> True", "by (erule erase_graph.induct) (auto simp: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (29 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>x = One \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n           x = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow>\n           P;\n        \\<And>\\<alpha> \\<tau>. x = Mu \\<alpha> \\<tau> \\<Longrightarrow> P;\n        \\<And>\\<alpha>. x = Alpha \\<alpha> \\<Longrightarrow> P;\n        \\<And>\\<tau>. x = AuthT \\<tau> \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. One = One \\<Longrightarrow> One = One\n 3. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 4. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 5. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 6. \\<And>\\<alpha> \\<tau>.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; True;\n        One = Mu \\<alpha> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> One = Mu \\<alpha> (erase_sumC \\<tau>)\n 7. \\<And>\\<alpha>.\n       One = Alpha \\<alpha> \\<Longrightarrow> One = Alpha \\<alpha>\n 8. \\<And>\\<tau>.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; True; One = AuthT \\<tau>\\<rbrakk>\n       \\<Longrightarrow> One = erase_sumC \\<tau>\n 9. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2;\n        eqvt_at erase_sumC \\<tau>\\<^sub>1';\n        eqvt_at erase_sumC \\<tau>\\<^sub>2'; True; True; True; True;\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n        Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> Fun (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2) =\n                         Fun (erase_sumC \\<tau>\\<^sub>1')\n                          (erase_sumC \\<tau>\\<^sub>2')\n 10. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n        \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n         eqvt_at erase_sumC \\<tau>\\<^sub>2;\n         eqvt_at erase_sumC \\<tau>\\<^sub>1';\n         eqvt_at erase_sumC \\<tau>\\<^sub>2'; True; True; True; True;\n         Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n         Syntax.Sum \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\\<rbrakk>\n        \\<Longrightarrow> Fun (erase_sumC \\<tau>\\<^sub>1)\n                           (erase_sumC \\<tau>\\<^sub>2) =\n                          Syntax.Sum (erase_sumC \\<tau>\\<^sub>1')\n                           (erase_sumC \\<tau>\\<^sub>2')\nA total of 29 subgoals...", "subgoal for P x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = One \\<Longrightarrow> P;\n     \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        x = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n     \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        x = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n     \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        x = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<Longrightarrow> P;\n     \\<And>\\<alpha> \\<tau>. x = Mu \\<alpha> \\<tau> \\<Longrightarrow> P;\n     \\<And>\\<alpha>. x = Alpha \\<alpha> \\<Longrightarrow> P;\n     \\<And>\\<tau>. x = AuthT \\<tau> \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (rule ty.strong_exhaust[of x P x]) (auto simp: fresh_star_def)"], ["proof (prove)\ngoal (28 subgoals):\n 1. One = One \\<Longrightarrow> One = One\n 2. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Fun (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 3. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Sum (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 4. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2; True; True;\n        One = Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> One =\n                         Syntax.Prod (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2)\n 5. \\<And>\\<alpha> \\<tau>.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; True;\n        One = Mu \\<alpha> \\<tau>\\<rbrakk>\n       \\<Longrightarrow> One = Mu \\<alpha> (erase_sumC \\<tau>)\n 6. \\<And>\\<alpha>.\n       One = Alpha \\<alpha> \\<Longrightarrow> One = Alpha \\<alpha>\n 7. \\<And>\\<tau>.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; True; One = AuthT \\<tau>\\<rbrakk>\n       \\<Longrightarrow> One = erase_sumC \\<tau>\n 8. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2;\n        eqvt_at erase_sumC \\<tau>\\<^sub>1';\n        eqvt_at erase_sumC \\<tau>\\<^sub>2'; True; True; True; True;\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n        Fun \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> Fun (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2) =\n                         Fun (erase_sumC \\<tau>\\<^sub>1')\n                          (erase_sumC \\<tau>\\<^sub>2')\n 9. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n        eqvt_at erase_sumC \\<tau>\\<^sub>2;\n        eqvt_at erase_sumC \\<tau>\\<^sub>1';\n        eqvt_at erase_sumC \\<tau>\\<^sub>2'; True; True; True; True;\n        Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n        Syntax.Sum \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> Fun (erase_sumC \\<tau>\\<^sub>1)\n                          (erase_sumC \\<tau>\\<^sub>2) =\n                         Syntax.Sum (erase_sumC \\<tau>\\<^sub>1')\n                          (erase_sumC \\<tau>\\<^sub>2')\n 10. \\<And>\\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'.\n        \\<lbrakk>eqvt_at erase_sumC \\<tau>\\<^sub>1;\n         eqvt_at erase_sumC \\<tau>\\<^sub>2;\n         eqvt_at erase_sumC \\<tau>\\<^sub>1';\n         eqvt_at erase_sumC \\<tau>\\<^sub>2'; True; True; True; True;\n         Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 =\n         Syntax.Prod \\<tau>\\<^sub>1' \\<tau>\\<^sub>2'\\<rbrakk>\n        \\<Longrightarrow> Fun (erase_sumC \\<tau>\\<^sub>1)\n                           (erase_sumC \\<tau>\\<^sub>2) =\n                          Syntax.Prod (erase_sumC \\<tau>\\<^sub>1')\n                           (erase_sumC \\<tau>\\<^sub>2')\nA total of 28 subgoals...", "apply (simp_all add: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<alpha> \\<tau> \\<alpha>' \\<tau>'.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>; eqvt_at erase_sumC \\<tau>';\n        [[atom \\<alpha>]]lst. \\<tau> =\n        [[atom \\<alpha>']]lst. \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> [[atom \\<alpha>]]lst. erase_sumC \\<tau> =\n                         [[atom \\<alpha>']]lst. erase_sumC \\<tau>'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at erase_sumC \\<tau>_; eqvt_at erase_sumC \\<tau>'_;\n     [[atom \\<alpha>_]]lst. \\<tau>_ =\n     [[atom \\<alpha>'_]]lst. \\<tau>'_\\<rbrakk>\n    \\<Longrightarrow> [[atom \\<alpha>_]]lst. erase_sumC \\<tau>_ =\n                      [[atom \\<alpha>'_]]lst. erase_sumC \\<tau>'_", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at erase_sumC \\<tau>_;\n     eqvt_at erase_sumC \\<tau>'_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       \\<alpha>_ \\<sharp> [[atom\n       \\<alpha>_]]lst. erase_sumC \\<tau>_\n 2. \\<lbrakk>eqvt_at erase_sumC \\<tau>_;\n     eqvt_at erase_sumC \\<tau>'_\\<rbrakk>\n    \\<Longrightarrow> {atom \\<alpha>_, atom \\<alpha>'_} \\<sharp>* []\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>_; eqvt_at erase_sumC \\<tau>'_;\n        supp p \\<sharp>* []\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   \\<alpha>_]]lst. erase_sumC \\<tau>_) =\n                         [[atom\n                            (p \\<bullet> \\<alpha>_)]]lst. erase_sumC\n                     (p \\<bullet> \\<tau>_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at erase_sumC \\<tau>_; eqvt_at erase_sumC \\<tau>'_;\n        supp p \\<sharp>* []\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   \\<alpha>'_]]lst. erase_sumC \\<tau>'_) =\n                         [[atom\n                            (p \\<bullet> \\<alpha>'_)]]lst. erase_sumC\n                      (p \\<bullet> \\<tau>'_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> erase_sumC) (p \\<bullet> \\<tau>_) =\n                erase_sumC (p \\<bullet> \\<tau>_);\n     \\<forall>p.\n        (p \\<bullet> erase_sumC) (p \\<bullet> \\<tau>'_) =\n        erase_sumC (p \\<bullet> \\<tau>'_)\\<rbrakk>\n    \\<Longrightarrow> atom\n                       \\<alpha>_ \\<sharp> [[atom\n       \\<alpha>_]]lst. erase_sumC \\<tau>_", "apply (simp_all add: perm_supp_eq Abs_fresh_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All erase_dom", "by lexicographic_order"], ["", "lemma fresh_erase_fresh:\n  assumes \"atom x \\<sharp> \\<tau>\"\n  shows   \"atom x \\<sharp> erase \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> erase \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<tau>\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> erase \\<tau>", "by (induct \\<tau> rule: ty.induct) auto"], ["", "lemma fresh_fmmap_erase_fresh:\n  assumes \"atom x \\<sharp> \\<Gamma>\"\n  shows   \"atom x \\<sharp> fmmap erase \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> fmmap erase \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> fmmap erase \\<Gamma>", "by transfer simp"], ["", "lemma erase_subst_type_shift[simp]:\n  \"erase (subst_type \\<tau> \\<tau>' \\<alpha>) = subst_type (erase \\<tau>) (erase \\<tau>') \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. erase (subst_type \\<tau> \\<tau>' \\<alpha>) =\n    subst_type (erase \\<tau>) (erase \\<tau>') \\<alpha>", "by (induct \\<tau> \\<tau>' \\<alpha> rule: subst_type.induct) (auto simp: fresh_Pair fresh_erase_fresh)"], ["", "definition erase_env :: \"tyenv \\<Rightarrow> tyenv\" where\n  \"erase_env = fmmap erase\""], ["", "subsection \\<open>Strong Typing Judgement\\<close>"], ["", "inductive judge :: \"tyenv \\<Rightarrow> term \\<Rightarrow> ty \\<Rightarrow> bool\" (\"_ \\<turnstile> _ : _\" [150,0,150] 149) where\n  j_Unit:   \"\\<Gamma> \\<turnstile> Unit : One\" |\n  j_Var:    \"\\<lbrakk> \\<Gamma> $$ x = Some \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x : \\<tau>\" |\n  j_Lam:    \"\\<lbrakk> atom x \\<sharp> \\<Gamma>; \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile> e : \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Lam x e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  j_App:    \"\\<lbrakk> \\<Gamma> \\<turnstile> e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2; \\<Gamma> \\<turnstile> e' : \\<tau>\\<^sub>1 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> App e e' : \\<tau>\\<^sub>2\" |\n  j_Let:    \"\\<lbrakk> atom x \\<sharp> (\\<Gamma>, e\\<^sub>1); \\<Gamma> \\<turnstile> e\\<^sub>1 : \\<tau>\\<^sub>1; \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile> e\\<^sub>2 : \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Let e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\" |\n  j_Rec:    \"\\<lbrakk> atom x \\<sharp> \\<Gamma>; atom y \\<sharp> (\\<Gamma>,x); \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) \\<turnstile> Lam y e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Rec x (Lam y e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  j_Inj1:   \"\\<lbrakk> \\<Gamma> \\<turnstile> e : \\<tau>\\<^sub>1 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Inj1 e : Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  j_Inj2:   \"\\<lbrakk> \\<Gamma> \\<turnstile> e : \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Inj2 e : Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  j_Case:   \"\\<lbrakk> \\<Gamma> \\<turnstile> e : Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2; \\<Gamma> \\<turnstile> e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>; \\<Gamma> \\<turnstile> e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Case e e\\<^sub>1 e\\<^sub>2 : \\<tau>\" |\n  j_Pair:   \"\\<lbrakk> \\<Gamma> \\<turnstile> e\\<^sub>1 : \\<tau>\\<^sub>1; \\<Gamma> \\<turnstile> e\\<^sub>2 : \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Pair e\\<^sub>1 e\\<^sub>2 : Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\" |\n  j_Prj1:   \"\\<lbrakk> \\<Gamma> \\<turnstile> e : Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Prj1 e : \\<tau>\\<^sub>1\" |\n  j_Prj2:   \"\\<lbrakk> \\<Gamma> \\<turnstile> e : Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Prj2 e : \\<tau>\\<^sub>2\" |\n  j_Roll:   \"\\<lbrakk> atom \\<alpha> \\<sharp> \\<Gamma>; \\<Gamma> \\<turnstile> e : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Roll e : Mu \\<alpha> \\<tau>\" |\n  j_Unroll: \"\\<lbrakk> atom \\<alpha> \\<sharp> \\<Gamma>; \\<Gamma> \\<turnstile> e : Mu \\<alpha> \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Unroll e : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>\" |\n  j_Auth:   \"\\<lbrakk> \\<Gamma> \\<turnstile> e : \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Auth e : AuthT \\<tau>\" |\n  j_Unauth: \"\\<lbrakk> \\<Gamma> \\<turnstile> e : AuthT \\<tau> \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> Unauth e : \\<tau>\""], ["", "declare judge.intros[intro]"], ["", "equivariance judge"], ["", "nominal_inductive judge\n  avoids j_Lam: x\n       | j_Rec: x and y\n       | j_Let: x\n       | j_Roll: \\<alpha>\n       | j_Unroll: \\<alpha>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n          \\<lbrakk>atom x \\<sharp> \\<Gamma>;\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile> e : \\<tau>\\<^sub>2\\<rbrakk>\n          \\<Longrightarrow> {atom\n                              x} \\<sharp>* (\\<Gamma>, Lam x e,\n      Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2)) &&&\n      (\\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n          \\<lbrakk>atom x \\<sharp> \\<Gamma>;\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile> e : \\<tau>\\<^sub>2\\<rbrakk>\n          \\<Longrightarrow> finite {atom x})) &&&\n     (\\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n         \\<lbrakk>atom x \\<sharp> (\\<Gamma>, e\\<^sub>1);\n          \\<Gamma> \\<turnstile> e\\<^sub>1 : \\<tau>\\<^sub>1;\n          \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile> e\\<^sub>2 : \\<tau>\\<^sub>2\\<rbrakk>\n         \\<Longrightarrow> {atom\n                             x} \\<sharp>* (\\<Gamma>,\n     Syntax.Let e\\<^sub>1 x e\\<^sub>2, \\<tau>\\<^sub>2)) &&&\n     (\\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n         \\<lbrakk>atom x \\<sharp> (\\<Gamma>, e\\<^sub>1);\n          \\<Gamma> \\<turnstile> e\\<^sub>1 : \\<tau>\\<^sub>1;\n          \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile> e\\<^sub>2 : \\<tau>\\<^sub>2\\<rbrakk>\n         \\<Longrightarrow> finite {atom x})) &&&\n    ((\\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n         \\<lbrakk>atom x \\<sharp> \\<Gamma>; atom y \\<sharp> (\\<Gamma>, x);\n          \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                           \\<tau>\\<^sub>2) \\<turnstile> Lam y\n                   e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n         \\<Longrightarrow> ({atom x} \\<union>\n                            {atom\n                              y}) \\<sharp>* (\\<Gamma>, Rec x (Lam y e'),\n       Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2)) &&&\n     (\\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n         \\<lbrakk>atom x \\<sharp> \\<Gamma>; atom y \\<sharp> (\\<Gamma>, x);\n          \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                           \\<tau>\\<^sub>2) \\<turnstile> Lam y\n                   e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\\<rbrakk>\n         \\<Longrightarrow> finite ({atom x} \\<union> {atom y}))) &&&\n    ((\\<And>\\<alpha> \\<Gamma> e \\<tau>.\n         \\<lbrakk>atom \\<alpha> \\<sharp> \\<Gamma>;\n          \\<Gamma> \\<turnstile> e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                     \\<alpha>\\<rbrakk>\n         \\<Longrightarrow> {atom\n                             \\<alpha>} \\<sharp>* (\\<Gamma>, Roll e,\n            Mu \\<alpha> \\<tau>)) &&&\n     (\\<And>\\<alpha> \\<Gamma> e \\<tau>.\n         \\<lbrakk>atom \\<alpha> \\<sharp> \\<Gamma>;\n          \\<Gamma> \\<turnstile> e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                     \\<alpha>\\<rbrakk>\n         \\<Longrightarrow> finite {atom \\<alpha>})) &&&\n    (\\<And>\\<alpha> \\<Gamma> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile> e : Mu \\<alpha> \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {atom\n                            \\<alpha>} \\<sharp>* (\\<Gamma>, Unroll e,\n           subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>)) &&&\n    (\\<And>\\<alpha> \\<Gamma> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile> e : Mu \\<alpha> \\<tau>\\<rbrakk>\n        \\<Longrightarrow> finite {atom \\<alpha>})", "by (auto simp: fresh_subst_type fresh_Pair)"], ["", "lemma judge_imp_judge_weak:\n  assumes \"\\<Gamma> \\<turnstile> e : \\<tau>\"\n  shows   \"erase_env \\<Gamma> \\<turnstile>\\<^sub>W e : erase \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. erase_env \\<Gamma> \\<turnstile>\\<^sub>W e : erase \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : \\<tau>\n\ngoal (1 subgoal):\n 1. erase_env \\<Gamma> \\<turnstile>\\<^sub>W e : erase \\<tau>", "unfolding erase_env_def"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> e : \\<tau>\n\ngoal (1 subgoal):\n 1. fmmap erase \\<Gamma> \\<turnstile>\\<^sub>W e : erase \\<tau>", "by (induct \\<Gamma> e \\<tau> rule: judge.induct) (simp_all add: fresh_Pair fresh_fmmap_erase_fresh fmmap_fmupd)"], ["", "subsection \\<open>Shallow Projection\\<close>"], ["", "nominal_function shallow :: \"term \\<Rightarrow> term\" (\"\\<lparr>_\\<rparr>\") where\n  \"\\<lparr>Unit\\<rparr>  = Unit\" |\n  \"\\<lparr>Var v\\<rparr> = Var v\" |\n  \"\\<lparr>Lam x e\\<rparr> = Lam x \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Rec x e\\<rparr> = Rec x \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Inj1 e\\<rparr> = Inj1 \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Inj2 e\\<rparr> = Inj2 \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Pair e\\<^sub>1 e\\<^sub>2\\<rparr> = Pair \\<lparr>e\\<^sub>1\\<rparr> \\<lparr>e\\<^sub>2\\<rparr>\" |\n  \"\\<lparr>Roll e\\<rparr> = Roll \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Let e\\<^sub>1 x e\\<^sub>2\\<rparr> = Let \\<lparr>e\\<^sub>1\\<rparr> x \\<lparr>e\\<^sub>2\\<rparr>\" |\n  \"\\<lparr>App e\\<^sub>1 e\\<^sub>2\\<rparr> = App \\<lparr>e\\<^sub>1\\<rparr> \\<lparr>e\\<^sub>2\\<rparr>\" |\n  \"\\<lparr>Case e e\\<^sub>1 e\\<^sub>2\\<rparr> = Case \\<lparr>e\\<rparr> \\<lparr>e\\<^sub>1\\<rparr> \\<lparr>e\\<^sub>2\\<rparr>\" |\n  \"\\<lparr>Prj1 e\\<rparr> = Prj1 \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Prj2 e\\<rparr> = Prj2 \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Unroll e\\<rparr> = Unroll \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Auth e\\<rparr> = Auth \\<lparr>e\\<rparr>\" |\n  \"\\<lparr>Unauth e\\<rparr> = Unauth \\<lparr>e\\<rparr>\" |\n  \\<comment> \\<open>No rule is defined for Hash, but: \"[..] preserving that structure in every case but that of <h, v> [..]\"\\<close>\n  \"\\<lparr>Hash h\\<rparr> = Hash h\" |\n  \"\\<lparr>Hashed h e\\<rparr> = Hash h\""], ["proof (prove)\ngoal (174 subgoals):\n 1. eqvt shallow_graph_aux\n 2. \\<And>x y. shallow_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>x = Unit \\<Longrightarrow> P;\n        \\<And>v. x = Var v \\<Longrightarrow> P;\n        \\<And>xa e. x = Lam xa e \\<Longrightarrow> P;\n        \\<And>xa e. x = Rec xa e \\<Longrightarrow> P;\n        \\<And>e. x = Inj1 e \\<Longrightarrow> P;\n        \\<And>e. x = Inj2 e \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 e\\<^sub>2.\n           x = Syntax.Pair e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e. x = Roll e \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 xa e\\<^sub>2.\n           x = Syntax.Let e\\<^sub>1 xa e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 e\\<^sub>2.\n           x = App e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e e\\<^sub>1 e\\<^sub>2.\n           x = Case e e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e. x = Prj1 e \\<Longrightarrow> P;\n        \\<And>e. x = Prj2 e \\<Longrightarrow> P;\n        \\<And>e. x = Unroll e \\<Longrightarrow> P;\n        \\<And>e. x = Auth e \\<Longrightarrow> P;\n        \\<And>e. x = Unauth e \\<Longrightarrow> P;\n        \\<And>h. x = Hash h \\<Longrightarrow> P;\n        \\<And>h e. x = Hashed h e \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. Unit = Unit \\<Longrightarrow> Unit = Unit\n 5. \\<And>v. Unit = Var v \\<Longrightarrow> Unit = Var v\n 6. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Lam x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam x (shallow_sumC e)\n 7. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Rec x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec x (shallow_sumC e)\n 8. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj1 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (shallow_sumC e)\n 9. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj2 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (shallow_sumC e)\n 10. \\<And>e\\<^sub>1 e\\<^sub>2.\n        \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>1;\n         eqvt_at shallow_sumC e\\<^sub>2; True; True;\n         Unit = Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Pair (shallow_sumC e\\<^sub>1)\n                           (shallow_sumC e\\<^sub>2)\nA total of 174 subgoals...", "using [[simproc del: alpha_lst]]"], ["proof (prove)\ngoal (174 subgoals):\n 1. eqvt shallow_graph_aux\n 2. \\<And>x y. shallow_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>x = Unit \\<Longrightarrow> P;\n        \\<And>v. x = Var v \\<Longrightarrow> P;\n        \\<And>xa e. x = Lam xa e \\<Longrightarrow> P;\n        \\<And>xa e. x = Rec xa e \\<Longrightarrow> P;\n        \\<And>e. x = Inj1 e \\<Longrightarrow> P;\n        \\<And>e. x = Inj2 e \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 e\\<^sub>2.\n           x = Syntax.Pair e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e. x = Roll e \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 xa e\\<^sub>2.\n           x = Syntax.Let e\\<^sub>1 xa e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 e\\<^sub>2.\n           x = App e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e e\\<^sub>1 e\\<^sub>2.\n           x = Case e e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e. x = Prj1 e \\<Longrightarrow> P;\n        \\<And>e. x = Prj2 e \\<Longrightarrow> P;\n        \\<And>e. x = Unroll e \\<Longrightarrow> P;\n        \\<And>e. x = Auth e \\<Longrightarrow> P;\n        \\<And>e. x = Unauth e \\<Longrightarrow> P;\n        \\<And>h. x = Hash h \\<Longrightarrow> P;\n        \\<And>h e. x = Hashed h e \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. Unit = Unit \\<Longrightarrow> Unit = Unit\n 5. \\<And>v. Unit = Var v \\<Longrightarrow> Unit = Var v\n 6. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Lam x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam x (shallow_sumC e)\n 7. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Rec x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec x (shallow_sumC e)\n 8. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj1 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (shallow_sumC e)\n 9. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj2 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (shallow_sumC e)\n 10. \\<And>e\\<^sub>1 e\\<^sub>2.\n        \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>1;\n         eqvt_at shallow_sumC e\\<^sub>2; True; True;\n         Unit = Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Pair (shallow_sumC e\\<^sub>1)\n                           (shallow_sumC e\\<^sub>2)\nA total of 174 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt shallow_graph_aux", "by (simp add: eqvt_def shallow_graph_aux_def)"], ["proof (prove)\ngoal (173 subgoals):\n 1. \\<And>x y. shallow_graph x y \\<Longrightarrow> True\n 2. \\<And>P x.\n       \\<lbrakk>x = Unit \\<Longrightarrow> P;\n        \\<And>v. x = Var v \\<Longrightarrow> P;\n        \\<And>xa e. x = Lam xa e \\<Longrightarrow> P;\n        \\<And>xa e. x = Rec xa e \\<Longrightarrow> P;\n        \\<And>e. x = Inj1 e \\<Longrightarrow> P;\n        \\<And>e. x = Inj2 e \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 e\\<^sub>2.\n           x = Syntax.Pair e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e. x = Roll e \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 xa e\\<^sub>2.\n           x = Syntax.Let e\\<^sub>1 xa e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 e\\<^sub>2.\n           x = App e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e e\\<^sub>1 e\\<^sub>2.\n           x = Case e e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e. x = Prj1 e \\<Longrightarrow> P;\n        \\<And>e. x = Prj2 e \\<Longrightarrow> P;\n        \\<And>e. x = Unroll e \\<Longrightarrow> P;\n        \\<And>e. x = Auth e \\<Longrightarrow> P;\n        \\<And>e. x = Unauth e \\<Longrightarrow> P;\n        \\<And>h. x = Hash h \\<Longrightarrow> P;\n        \\<And>h e. x = Hashed h e \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. Unit = Unit \\<Longrightarrow> Unit = Unit\n 4. \\<And>v. Unit = Var v \\<Longrightarrow> Unit = Var v\n 5. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Lam x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam x (shallow_sumC e)\n 6. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Rec x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec x (shallow_sumC e)\n 7. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj1 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (shallow_sumC e)\n 8. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj2 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (shallow_sumC e)\n 9. \\<And>e\\<^sub>1 e\\<^sub>2.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>1;\n        eqvt_at shallow_sumC e\\<^sub>2; True; True;\n        Unit = Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (shallow_sumC e\\<^sub>1)\n                          (shallow_sumC e\\<^sub>2)\n 10. \\<And>e.\n        \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Roll e\\<rbrakk>\n        \\<Longrightarrow> Unit = Roll (shallow_sumC e)\nA total of 173 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. shallow_graph x_ y_ \\<Longrightarrow> True", "by (erule shallow_graph.induct) (auto simp: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (172 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>x = Unit \\<Longrightarrow> P;\n        \\<And>v. x = Var v \\<Longrightarrow> P;\n        \\<And>xa e. x = Lam xa e \\<Longrightarrow> P;\n        \\<And>xa e. x = Rec xa e \\<Longrightarrow> P;\n        \\<And>e. x = Inj1 e \\<Longrightarrow> P;\n        \\<And>e. x = Inj2 e \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 e\\<^sub>2.\n           x = Syntax.Pair e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e. x = Roll e \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 xa e\\<^sub>2.\n           x = Syntax.Let e\\<^sub>1 xa e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e\\<^sub>1 e\\<^sub>2.\n           x = App e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e e\\<^sub>1 e\\<^sub>2.\n           x = Case e e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n        \\<And>e. x = Prj1 e \\<Longrightarrow> P;\n        \\<And>e. x = Prj2 e \\<Longrightarrow> P;\n        \\<And>e. x = Unroll e \\<Longrightarrow> P;\n        \\<And>e. x = Auth e \\<Longrightarrow> P;\n        \\<And>e. x = Unauth e \\<Longrightarrow> P;\n        \\<And>h. x = Hash h \\<Longrightarrow> P;\n        \\<And>h e. x = Hashed h e \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. Unit = Unit \\<Longrightarrow> Unit = Unit\n 3. \\<And>v. Unit = Var v \\<Longrightarrow> Unit = Var v\n 4. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Lam x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam x (shallow_sumC e)\n 5. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Rec x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec x (shallow_sumC e)\n 6. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj1 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (shallow_sumC e)\n 7. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj2 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (shallow_sumC e)\n 8. \\<And>e\\<^sub>1 e\\<^sub>2.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>1;\n        eqvt_at shallow_sumC e\\<^sub>2; True; True;\n        Unit = Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (shallow_sumC e\\<^sub>1)\n                          (shallow_sumC e\\<^sub>2)\n 9. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Roll e\\<rbrakk>\n       \\<Longrightarrow> Unit = Roll (shallow_sumC e)\n 10. \\<And>e\\<^sub>1 x e\\<^sub>2.\n        \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>1;\n         eqvt_at shallow_sumC e\\<^sub>2; True; True;\n         Unit = Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          Syntax.Let (shallow_sumC e\\<^sub>1) x\n                           (shallow_sumC e\\<^sub>2)\nA total of 172 subgoals...", "subgoal for P a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = Unit \\<Longrightarrow> P;\n     \\<And>v. a = Var v \\<Longrightarrow> P;\n     \\<And>x e. a = Lam x e \\<Longrightarrow> P;\n     \\<And>x e. a = Rec x e \\<Longrightarrow> P;\n     \\<And>e. a = Inj1 e \\<Longrightarrow> P;\n     \\<And>e. a = Inj2 e \\<Longrightarrow> P;\n     \\<And>e\\<^sub>1 e\\<^sub>2.\n        a = Syntax.Pair e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n     \\<And>e. a = Roll e \\<Longrightarrow> P;\n     \\<And>e\\<^sub>1 x e\\<^sub>2.\n        a = Syntax.Let e\\<^sub>1 x e\\<^sub>2 \\<Longrightarrow> P;\n     \\<And>e\\<^sub>1 e\\<^sub>2.\n        a = App e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n     \\<And>e e\\<^sub>1 e\\<^sub>2.\n        a = Case e e\\<^sub>1 e\\<^sub>2 \\<Longrightarrow> P;\n     \\<And>e. a = Prj1 e \\<Longrightarrow> P;\n     \\<And>e. a = Prj2 e \\<Longrightarrow> P;\n     \\<And>e. a = Unroll e \\<Longrightarrow> P;\n     \\<And>e. a = Auth e \\<Longrightarrow> P;\n     \\<And>e. a = Unauth e \\<Longrightarrow> P;\n     \\<And>h. a = Hash h \\<Longrightarrow> P;\n     \\<And>h e. a = Hashed h e \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (rule term.strong_exhaust[of a P a]) (auto simp: fresh_star_def)"], ["proof (prove)\ngoal (171 subgoals):\n 1. Unit = Unit \\<Longrightarrow> Unit = Unit\n 2. \\<And>v. Unit = Var v \\<Longrightarrow> Unit = Var v\n 3. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Lam x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Lam x (shallow_sumC e)\n 4. \\<And>x e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Rec x e\\<rbrakk>\n       \\<Longrightarrow> Unit = Rec x (shallow_sumC e)\n 5. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj1 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj1 (shallow_sumC e)\n 6. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Inj2 e\\<rbrakk>\n       \\<Longrightarrow> Unit = Inj2 (shallow_sumC e)\n 7. \\<And>e\\<^sub>1 e\\<^sub>2.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>1;\n        eqvt_at shallow_sumC e\\<^sub>2; True; True;\n        Unit = Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Pair (shallow_sumC e\\<^sub>1)\n                          (shallow_sumC e\\<^sub>2)\n 8. \\<And>e.\n       \\<lbrakk>eqvt_at shallow_sumC e; True; Unit = Roll e\\<rbrakk>\n       \\<Longrightarrow> Unit = Roll (shallow_sumC e)\n 9. \\<And>e\\<^sub>1 x e\\<^sub>2.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>1;\n        eqvt_at shallow_sumC e\\<^sub>2; True; True;\n        Unit = Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Unit =\n                         Syntax.Let (shallow_sumC e\\<^sub>1) x\n                          (shallow_sumC e\\<^sub>2)\n 10. \\<And>e\\<^sub>1 e\\<^sub>2.\n        \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>1;\n         eqvt_at shallow_sumC e\\<^sub>2; True; True;\n         Unit = App e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Unit =\n                          App (shallow_sumC e\\<^sub>1)\n                           (shallow_sumC e\\<^sub>2)\nA total of 171 subgoals...", "apply (simp_all add: fresh_star_def fresh_at_base)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x e xa ea.\n       \\<lbrakk>eqvt_at shallow_sumC e; eqvt_at shallow_sumC ea;\n        [[atom x]]lst. e = [[atom xa]]lst. ea\\<rbrakk>\n       \\<Longrightarrow> [[atom x]]lst. shallow_sumC e =\n                         [[atom xa]]lst. shallow_sumC ea\n 2. \\<And>x e xa ea.\n       \\<lbrakk>eqvt_at shallow_sumC e; eqvt_at shallow_sumC ea;\n        [[atom x]]lst. e = [[atom xa]]lst. ea\\<rbrakk>\n       \\<Longrightarrow> [[atom x]]lst. shallow_sumC e =\n                         [[atom xa]]lst. shallow_sumC ea\n 3. \\<And>e\\<^sub>1 x e\\<^sub>2 xa e\\<^sub>2'.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>2;\n        eqvt_at shallow_sumC e\\<^sub>1; eqvt_at shallow_sumC e\\<^sub>2';\n        [[atom x]]lst. e\\<^sub>2 = [[atom xa]]lst. e\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> [[atom x]]lst. shallow_sumC e\\<^sub>2 =\n                         [[atom xa]]lst. shallow_sumC e\\<^sub>2'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_;\n     [[atom x_]]lst. e_ = [[atom xa_]]lst. ea_\\<rbrakk>\n    \\<Longrightarrow> [[atom x_]]lst. shallow_sumC e_ =\n                      [[atom xa_]]lst. shallow_sumC ea_", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_\\<rbrakk>\n    \\<Longrightarrow> atom x_ \\<sharp> [[atom x_]]lst. shallow_sumC e_\n 2. \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_\\<rbrakk>\n    \\<Longrightarrow> {atom x_, atom xa_} \\<sharp>* []\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_;\n        supp p \\<sharp>* []\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom x_]]lst. shallow_sumC e_) =\n                         [[atom\n                            (p \\<bullet> x_)]]lst. shallow_sumC\n              (p \\<bullet> e_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_;\n        supp p \\<sharp>* []\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom xa_]]lst. shallow_sumC ea_) =\n                         [[atom\n                            (p \\<bullet> xa_)]]lst. shallow_sumC\n               (p \\<bullet> ea_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> shallow_sumC) (p \\<bullet> e_) =\n                shallow_sumC (p \\<bullet> e_);\n     \\<forall>p.\n        (p \\<bullet> shallow_sumC) (p \\<bullet> ea_) =\n        shallow_sumC (p \\<bullet> ea_)\\<rbrakk>\n    \\<Longrightarrow> atom x_ \\<sharp> [[atom x_]]lst. shallow_sumC e_", "apply (simp_all add: perm_supp_eq Abs_fresh_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x e xa ea.\n       \\<lbrakk>eqvt_at shallow_sumC e; eqvt_at shallow_sumC ea;\n        [[atom x]]lst. e = [[atom xa]]lst. ea\\<rbrakk>\n       \\<Longrightarrow> [[atom x]]lst. shallow_sumC e =\n                         [[atom xa]]lst. shallow_sumC ea\n 2. \\<And>e\\<^sub>1 x e\\<^sub>2 xa e\\<^sub>2'.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>2;\n        eqvt_at shallow_sumC e\\<^sub>1; eqvt_at shallow_sumC e\\<^sub>2';\n        [[atom x]]lst. e\\<^sub>2 = [[atom xa]]lst. e\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> [[atom x]]lst. shallow_sumC e\\<^sub>2 =\n                         [[atom xa]]lst. shallow_sumC e\\<^sub>2'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_;\n     [[atom x_]]lst. e_ = [[atom xa_]]lst. ea_\\<rbrakk>\n    \\<Longrightarrow> [[atom x_]]lst. shallow_sumC e_ =\n                      [[atom xa_]]lst. shallow_sumC ea_", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_\\<rbrakk>\n    \\<Longrightarrow> atom x_ \\<sharp> [[atom x_]]lst. shallow_sumC e_\n 2. \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_\\<rbrakk>\n    \\<Longrightarrow> {atom x_, atom xa_} \\<sharp>* []\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_;\n        supp p \\<sharp>* []\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom x_]]lst. shallow_sumC e_) =\n                         [[atom\n                            (p \\<bullet> x_)]]lst. shallow_sumC\n              (p \\<bullet> e_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at shallow_sumC e_; eqvt_at shallow_sumC ea_;\n        supp p \\<sharp>* []\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom xa_]]lst. shallow_sumC ea_) =\n                         [[atom\n                            (p \\<bullet> xa_)]]lst. shallow_sumC\n               (p \\<bullet> ea_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> shallow_sumC) (p \\<bullet> e_) =\n                shallow_sumC (p \\<bullet> e_);\n     \\<forall>p.\n        (p \\<bullet> shallow_sumC) (p \\<bullet> ea_) =\n        shallow_sumC (p \\<bullet> ea_)\\<rbrakk>\n    \\<Longrightarrow> atom x_ \\<sharp> [[atom x_]]lst. shallow_sumC e_", "apply (simp_all add: perm_supp_eq Abs_fresh_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e\\<^sub>1 x e\\<^sub>2 xa e\\<^sub>2'.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>2;\n        eqvt_at shallow_sumC e\\<^sub>1; eqvt_at shallow_sumC e\\<^sub>2';\n        [[atom x]]lst. e\\<^sub>2 = [[atom xa]]lst. e\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> [[atom x]]lst. shallow_sumC e\\<^sub>2 =\n                         [[atom xa]]lst. shallow_sumC e\\<^sub>2'", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>2_;\n     eqvt_at shallow_sumC e\\<^sub>1_; eqvt_at shallow_sumC e\\<^sub>2'_;\n     [[atom x_]]lst. e\\<^sub>2_ = [[atom xa_]]lst. e\\<^sub>2'_\\<rbrakk>\n    \\<Longrightarrow> [[atom x_]]lst. shallow_sumC e\\<^sub>2_ =\n                      [[atom xa_]]lst. shallow_sumC e\\<^sub>2'_", "apply (erule Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>2_;\n     eqvt_at shallow_sumC e\\<^sub>1_;\n     eqvt_at shallow_sumC e\\<^sub>2'_\\<rbrakk>\n    \\<Longrightarrow> atom\n                       x_ \\<sharp> [[atom x_]]lst. shallow_sumC e\\<^sub>2_\n 2. \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>2_;\n     eqvt_at shallow_sumC e\\<^sub>1_;\n     eqvt_at shallow_sumC e\\<^sub>2'_\\<rbrakk>\n    \\<Longrightarrow> {atom x_, atom xa_} \\<sharp>* []\n 3. \\<And>p.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>2_;\n        eqvt_at shallow_sumC e\\<^sub>1_; eqvt_at shallow_sumC e\\<^sub>2'_;\n        supp p \\<sharp>* []\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   x_]]lst. shallow_sumC e\\<^sub>2_) =\n                         [[atom\n                            (p \\<bullet> x_)]]lst. shallow_sumC\n              (p \\<bullet> e\\<^sub>2_)\n 4. \\<And>p.\n       \\<lbrakk>eqvt_at shallow_sumC e\\<^sub>2_;\n        eqvt_at shallow_sumC e\\<^sub>1_; eqvt_at shallow_sumC e\\<^sub>2'_;\n        supp p \\<sharp>* []\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> ([[atom\n   xa_]]lst. shallow_sumC e\\<^sub>2'_) =\n                         [[atom\n                            (p \\<bullet> xa_)]]lst. shallow_sumC\n               (p \\<bullet> e\\<^sub>2'_)", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>p.\n                (p \\<bullet> shallow_sumC) (p \\<bullet> e\\<^sub>2_) =\n                shallow_sumC (p \\<bullet> e\\<^sub>2_);\n     \\<forall>p.\n        (p \\<bullet> shallow_sumC) (p \\<bullet> e\\<^sub>1_) =\n        shallow_sumC (p \\<bullet> e\\<^sub>1_);\n     \\<forall>p.\n        (p \\<bullet> shallow_sumC) (p \\<bullet> e\\<^sub>2'_) =\n        shallow_sumC (p \\<bullet> e\\<^sub>2'_)\\<rbrakk>\n    \\<Longrightarrow> atom\n                       x_ \\<sharp> [[atom x_]]lst. shallow_sumC e\\<^sub>2_", "apply (simp_all add: perm_supp_eq Abs_fresh_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All shallow_dom", "by lexicographic_order"], ["", "lemma fresh_shallow: \"atom x \\<sharp> e \\<Longrightarrow> atom x \\<sharp> \\<lparr>e\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> e \\<Longrightarrow> atom x \\<sharp> \\<lparr>e\\<rparr>", "by (induct e rule: term.induct) auto"], ["", "subsection \\<open>Small-step Semantics\\<close>"], ["", "datatype mode = I | P | V \\<comment> \\<open>Ideal, Prover and Verifier modes\\<close>"], ["", "instantiation mode :: pure\nbegin"], ["", "definition permute_mode :: \"perm \\<Rightarrow> mode \\<Rightarrow> mode\" where\n  \"permute_mode \\<pi> h = h\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(mode, pure_class)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. 0 \\<bullet> x = x\n 2. \\<And>p q x. (p + q) \\<bullet> x = p \\<bullet> q \\<bullet> x\n 3. \\<And>p x. p \\<bullet> x = x", "qed (auto simp: permute_mode_def)"], ["", "end"], ["", "type_synonym proofstream = \"term list\""], ["", "inductive smallstep :: \"proofstream \\<Rightarrow> term \\<Rightarrow> mode \\<Rightarrow> proofstream \\<Rightarrow> term \\<Rightarrow> bool\" (\"\\<lless>_, _\\<ggreater> _\\<rightarrow> \\<lless>_, _\\<ggreater>\") where\n  s_App1:      \"\\<lbrakk> \\<lless> \\<pi>, e\\<^sub>1 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>1' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, App e\\<^sub>1 e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', App e\\<^sub>1' e\\<^sub>2 \\<ggreater>\" |\n  s_App2:      \"\\<lbrakk> value v\\<^sub>1; \\<lless> \\<pi>, e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>2' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, App v\\<^sub>1 e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', App v\\<^sub>1 e\\<^sub>2' \\<ggreater>\" |\n  s_AppLam:    \"\\<lbrakk> value v; atom x \\<sharp> (v,\\<pi>) \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, App (Lam x e) v \\<ggreater>  _\\<rightarrow>  \\<lless> \\<pi>, e[v / x] \\<ggreater>\" |\n  s_AppRec:    \"\\<lbrakk> value v; atom x \\<sharp> (v,\\<pi>) \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, App (Rec x e) v \\<ggreater>  _\\<rightarrow>  \\<lless> \\<pi>, App (e[(Rec x e) / x]) v \\<ggreater>\" |\n  s_Let1:      \"\\<lbrakk> atom x \\<sharp> (e\\<^sub>1,e\\<^sub>1',\\<pi>,\\<pi>'); \\<lless> \\<pi>, e\\<^sub>1 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>1' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Let e\\<^sub>1 x e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Let e\\<^sub>1' x e\\<^sub>2 \\<ggreater>\" |\n  s_Let2:      \"\\<lbrakk> value v; atom x \\<sharp> (v,\\<pi>) \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Let v x e \\<ggreater>  _\\<rightarrow>  \\<lless> \\<pi>, e[v / x] \\<ggreater>\" |\n  s_Inj1:      \"\\<lbrakk> \\<lless> \\<pi>, e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Inj1 e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Inj1 e' \\<ggreater>\" |\n  s_Inj2:      \"\\<lbrakk> \\<lless> \\<pi>, e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Inj2 e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Inj2 e' \\<ggreater>\" |\n  s_Case:      \"\\<lbrakk> \\<lless> \\<pi>, e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Case e e\\<^sub>1 e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Case e' e\\<^sub>1 e\\<^sub>2 \\<ggreater>\" |\n  \\<comment> \\<open>Case rules are different from paper to account for recursive functions.\\<close>\n  s_CaseInj1:  \"\\<lbrakk> value v \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Case (Inj1 v) e\\<^sub>1 e\\<^sub>2 \\<ggreater>  _\\<rightarrow>  \\<lless> \\<pi>, App e\\<^sub>1 v \\<ggreater>\" |\n  s_CaseInj2:  \"\\<lbrakk> value v \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Case (Inj2 v) e\\<^sub>1 e\\<^sub>2 \\<ggreater>  _\\<rightarrow>  \\<lless> \\<pi>, App e\\<^sub>2 v \\<ggreater>\" |\n  s_Pair1:     \"\\<lbrakk> \\<lless> \\<pi>, e\\<^sub>1 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>1' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Pair e\\<^sub>1 e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Pair e\\<^sub>1' e\\<^sub>2 \\<ggreater>\" |\n  s_Pair2:     \"\\<lbrakk> value v\\<^sub>1; \\<lless> \\<pi>, e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>2' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Pair v\\<^sub>1 e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Pair v\\<^sub>1 e\\<^sub>2' \\<ggreater>\" |\n  s_Prj1:      \"\\<lbrakk> \\<lless> \\<pi>, e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Prj1 e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Prj1 e' \\<ggreater>\" |\n  s_Prj2:      \"\\<lbrakk> \\<lless> \\<pi>, e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater> \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Prj2 e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Prj2 e' \\<ggreater>\" |\n  s_PrjPair1:  \"\\<lbrakk> value v\\<^sub>1; value v\\<^sub>2 \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Prj1 (Pair v\\<^sub>1 v\\<^sub>2) \\<ggreater>  _\\<rightarrow>  \\<lless> \\<pi>, v\\<^sub>1 \\<ggreater>\" |\n  s_PrjPair2:  \"\\<lbrakk> value v\\<^sub>1; value v\\<^sub>2 \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Prj2 (Pair v\\<^sub>1 v\\<^sub>2) \\<ggreater>  _\\<rightarrow>  \\<lless> \\<pi>, v\\<^sub>2 \\<ggreater>\" |\n  s_Unroll:    \"\\<lless> \\<pi>, e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\n              \\<Longrightarrow> \\<lless> \\<pi>, Unroll e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Unroll e' \\<ggreater>\" |\n  s_Roll:      \"\\<lless> \\<pi>, e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\n              \\<Longrightarrow> \\<lless> \\<pi>, Roll e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', Roll e' \\<ggreater>\" |\n  s_UnrollRoll:\"\\<lbrakk> value v \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Unroll (Roll v) \\<ggreater>  _\\<rightarrow>  \\<lless> \\<pi>, v \\<ggreater>\" |\n  \\<comment> \\<open>Mode-specific rules\\<close>\n  s_Auth:      \"\\<lless> \\<pi>, e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\n              \\<Longrightarrow> \\<lless> \\<pi>, Auth e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', Auth e' \\<ggreater>\" |\n  s_Unauth:    \"\\<lless> \\<pi>, e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\n              \\<Longrightarrow> \\<lless> \\<pi>, Unauth e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', Unauth e' \\<ggreater>\" |\n  s_AuthI:     \"\\<lbrakk> value v \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Auth v \\<ggreater> I\\<rightarrow> \\<lless> \\<pi>, v \\<ggreater>\" |\n  s_UnauthI:   \"\\<lbrakk> value v \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Unauth v \\<ggreater> I\\<rightarrow> \\<lless> \\<pi>, v \\<ggreater>\" |\n  s_AuthP:     \"\\<lbrakk> closed \\<lparr>v\\<rparr>; value v \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Auth v \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>, Hashed (hash \\<lparr>v\\<rparr>) v \\<ggreater>\" |\n  s_UnauthP:   \"\\<lbrakk> value v \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Unauth (Hashed h v) \\<ggreater> P\\<rightarrow> \\<lless> \\<pi> @ [\\<lparr>v\\<rparr>], v \\<ggreater>\" |\n  s_AuthV:     \"\\<lbrakk> closed v; value v \\<rbrakk>\n              \\<Longrightarrow> \\<lless> \\<pi>, Auth v \\<ggreater> V\\<rightarrow> \\<lless> \\<pi>, Hash (hash v) \\<ggreater>\" |\n  s_UnauthV:   \"\\<lbrakk> closed s\\<^sub>0; hash s\\<^sub>0 = h \\<rbrakk>\n              \\<Longrightarrow> \\<lless> s\\<^sub>0#\\<pi>, Unauth (Hash h) \\<ggreater> V\\<rightarrow> \\<lless> \\<pi>, s\\<^sub>0 \\<ggreater>\""], ["", "declare smallstep.intros[simp]"], ["", "declare smallstep.intros[intro]"], ["", "equivariance smallstep"], ["", "nominal_inductive smallstep\n  avoids s_AppLam: x\n       | s_AppRec: x\n       | s_Let1:   x\n       | s_Let2:   x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>v x \\<pi> e uu_.\n          \\<lbrakk>value v; atom x \\<sharp> (v, \\<pi>)\\<rbrakk>\n          \\<Longrightarrow> {atom\n                              x} \\<sharp>* (\\<pi>, App (Lam x e) v, uu_,\n      \\<pi>, e[v / x])) &&&\n      (\\<And>v x \\<pi> e _.\n          \\<lbrakk>value v; atom x \\<sharp> (v, \\<pi>)\\<rbrakk>\n          \\<Longrightarrow> finite {atom x})) &&&\n     (\\<And>v x \\<pi> e uv_.\n         \\<lbrakk>value v; atom x \\<sharp> (v, \\<pi>)\\<rbrakk>\n         \\<Longrightarrow> {atom\n                             x} \\<sharp>* (\\<pi>, App (Rec x e) v, uv_,\n     \\<pi>, App (e[Rec x e / x]) v)) &&&\n     (\\<And>v x \\<pi> e _.\n         \\<lbrakk>value v; atom x \\<sharp> (v, \\<pi>)\\<rbrakk>\n         \\<Longrightarrow> finite {atom x})) &&&\n    ((\\<And>x e\\<^sub>1 e\\<^sub>1' \\<pi> \\<pi>' m e\\<^sub>2.\n         \\<lbrakk>atom x \\<sharp> (e\\<^sub>1, e\\<^sub>1', \\<pi>, \\<pi>');\n          \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>\\<rbrakk>\n         \\<Longrightarrow> {atom\n                             x} \\<sharp>* (\\<pi>,\n     Syntax.Let e\\<^sub>1 x e\\<^sub>2, m, \\<pi>',\n     Syntax.Let e\\<^sub>1' x e\\<^sub>2)) &&&\n     (\\<And>x e\\<^sub>1 e\\<^sub>1' \\<pi> \\<pi>' m e\\<^sub>2.\n         \\<lbrakk>atom x \\<sharp> (e\\<^sub>1, e\\<^sub>1', \\<pi>, \\<pi>');\n          \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>\\<rbrakk>\n         \\<Longrightarrow> finite {atom x})) &&&\n    (\\<And>v x \\<pi> e uw_.\n        \\<lbrakk>value v; atom x \\<sharp> (v, \\<pi>)\\<rbrakk>\n        \\<Longrightarrow> {atom\n                            x} \\<sharp>* (\\<pi>, Syntax.Let v x e, uw_,\n    \\<pi>, e[v / x])) &&&\n    (\\<And>v x \\<pi> e _.\n        \\<lbrakk>value v; atom x \\<sharp> (v, \\<pi>)\\<rbrakk>\n        \\<Longrightarrow> finite {atom x})", "by (auto simp add: fresh_Pair fresh_subst_term)"], ["", "inductive smallsteps :: \"proofstream \\<Rightarrow> term \\<Rightarrow> mode \\<Rightarrow> nat \\<Rightarrow> proofstream \\<Rightarrow> term \\<Rightarrow> bool\" (\"\\<lless>_, _\\<ggreater> _\\<rightarrow>_ \\<lless>_, _\\<ggreater>\") where\n  s_Id: \"\\<lless> \\<pi>, e \\<ggreater> _\\<rightarrow>0 \\<lless> \\<pi>, e \\<ggreater>\" |\n  s_Tr: \"\\<lbrakk> \\<lless> \\<pi>\\<^sub>1, e\\<^sub>1 \\<ggreater> m\\<rightarrow>i \\<lless> \\<pi>\\<^sub>2, e\\<^sub>2 \\<ggreater>; \\<lless> \\<pi>\\<^sub>2, e\\<^sub>2 \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>\\<^sub>3, e\\<^sub>3 \\<ggreater> \\<rbrakk>\n       \\<Longrightarrow> \\<lless> \\<pi>\\<^sub>1, e\\<^sub>1 \\<ggreater> m\\<rightarrow>(i+1) \\<lless> \\<pi>\\<^sub>3, e\\<^sub>3 \\<ggreater>\""], ["", "declare smallsteps.intros[simp]"], ["", "declare smallsteps.intros[intro]"], ["", "equivariance smallsteps"], ["", "nominal_inductive smallsteps"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma steps_1_step[simp]: \"\\<lless> \\<pi>, e \\<ggreater> m\\<rightarrow>1 \\<lless> \\<pi>', e' \\<ggreater> = \\<lless> \\<pi>, e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater> =\n    \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n 2. \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater>", "assume ?L"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n 2. \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater>", "show ?R"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>", "proof (induct \\<pi> e m \"1::nat\" \\<pi>' e' rule: smallsteps.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<pi> e uu_.\n       0 = 1 \\<Longrightarrow>\n       \\<lless>\\<pi>, e\\<ggreater> uu_\\<rightarrow> \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>\\<pi>\\<^sub>1 e\\<^sub>1 m i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3\n       e\\<^sub>3.\n       \\<lbrakk>\\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        i = 1 \\<Longrightarrow>\n        \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>;\n        i + 1 = 1\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>", "case (s_Tr \\<pi>\\<^sub>1 e\\<^sub>1 m i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3 e\\<^sub>3)"], ["proof (state)\nthis:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  i = 1 \\<Longrightarrow>\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n  i + 1 = 1\n\ngoal (2 subgoals):\n 1. \\<And>\\<pi> e uu_.\n       0 = 1 \\<Longrightarrow>\n       \\<lless>\\<pi>, e\\<ggreater> uu_\\<rightarrow> \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>\\<pi>\\<^sub>1 e\\<^sub>1 m i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3\n       e\\<^sub>3.\n       \\<lbrakk>\\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        i = 1 \\<Longrightarrow>\n        \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>;\n        i + 1 = 1\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  i = 1 \\<Longrightarrow>\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n  i + 1 = 1", "show ?case"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  i = 1 \\<Longrightarrow>\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n  i + 1 = 1\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>", "by (induct \\<pi>\\<^sub>1 e\\<^sub>1 m i \\<pi>\\<^sub>2 e\\<^sub>2 rule: smallsteps.induct) auto"], ["proof (state)\nthis:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<And>\\<pi> e uu_.\n       0 = 1 \\<Longrightarrow>\n       \\<lless>\\<pi>, e\\<ggreater> uu_\\<rightarrow> \\<lless>\\<pi>, e\\<ggreater>", "qed simp"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, e\\<ggreater> m\\<rightarrow>1 \\<lless>\\<pi>', e'\\<ggreater>", "qed (auto intro: s_Tr[where i=0, simplified])"], ["", "text \\<open>Inversion rules for smallstep(s) predicates.\\<close>"], ["", "lemma value_no_step[intro]:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, v \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>\\<^sub>2, t \\<ggreater>\" \"value v\"\n  shows   \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>1, v\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>\\<^sub>2, t\\<ggreater>\n  value v\n\ngoal (1 subgoal):\n 1. False", "by (induct \\<pi>\\<^sub>1 v m \\<pi>\\<^sub>2 t rule: smallstep.induct) auto"], ["", "lemma subst_term_perm:\n  assumes \"atom x' \\<sharp> (x, e)\"\n  shows \"e[v / x] = ((x \\<leftrightarrow> x') \\<bullet> e)[v / x']\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e[v / x] = ((x \\<leftrightarrow> x') \\<bullet> e)[v / x']", "using assms [[simproc del: alpha_lst]]"], ["proof (prove)\nusing this:\n  atom x' \\<sharp> (x, e)\n\ngoal (1 subgoal):\n 1. e[v / x] = ((x \\<leftrightarrow> x') \\<bullet> e)[v / x']", "by (nominal_induct e avoiding: x x' v rule: term.strong_induct)\n     (auto simp: fresh_Pair fresh_at_base(2) permute_hash_def)"], ["", "inductive_cases s_Unit_inv[elim]: \"\\<lless> \\<pi>\\<^sub>1, Unit \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>\\<^sub>2, v \\<ggreater>\""], ["", "inductive_cases s_App_inv[consumes 1, case_names App1 App2 AppLam AppRec, elim]: \"\\<lless> \\<pi>, App v\\<^sub>1 v\\<^sub>2 \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e \\<ggreater>\""], ["", "lemma s_Let_inv':\n  assumes \"\\<lless> \\<pi>, Let e\\<^sub>1 x e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\"\n  and     \"atom x \\<sharp> (e\\<^sub>1,\\<pi>)\"\n  obtains e\\<^sub>1' where \"(e' = e\\<^sub>2[e\\<^sub>1 / x] \\<and> value e\\<^sub>1 \\<and> \\<pi> = \\<pi>') \\<or> (\\<lless> \\<pi>, e\\<^sub>1 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>1' \\<ggreater> \\<and> e' = Let e\\<^sub>1' x e\\<^sub>2 \\<and> \\<not> value e\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e\\<^sub>1'.\n        e' = e\\<^sub>2[e\\<^sub>1 / x] \\<and>\n        value e\\<^sub>1 \\<and> \\<pi> = \\<pi>' \\<or>\n        \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater> \\<and>\n        e' = Syntax.Let e\\<^sub>1' x e\\<^sub>2 \\<and>\n        \\<not> value e\\<^sub>1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms [[simproc del: alpha_lst]]"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, Syntax.Let e\\<^sub>1 x\n                  e\\<^sub>2\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n  atom x \\<sharp> (e\\<^sub>1, \\<pi>)\n\ngoal (1 subgoal):\n 1. (\\<And>e\\<^sub>1'.\n        e' = e\\<^sub>2[e\\<^sub>1 / x] \\<and>\n        value e\\<^sub>1 \\<and> \\<pi> = \\<pi>' \\<or>\n        \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater> \\<and>\n        e' = Syntax.Let e\\<^sub>1' x e\\<^sub>2 \\<and>\n        \\<not> value e\\<^sub>1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (atomize_elim, induct \\<pi> \"Let e\\<^sub>1 x e\\<^sub>2\" m \\<pi>' e' rule: smallstep.induct)\n     (auto simp: fresh_Pair fresh_subst_term perm_supp_eq elim: Abs_lst1_fcb2')"], ["", "lemma s_Let_inv[consumes 2, case_names Let1 Let2, elim]:\n  assumes \"\\<lless> \\<pi>, Let e\\<^sub>1 x e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\"\n  and     \"atom x \\<sharp> (e\\<^sub>1,\\<pi>)\"\n  and     \"e' = e\\<^sub>2[e\\<^sub>1 / x] \\<and> value e\\<^sub>1 \\<and> \\<pi> = \\<pi>' \\<Longrightarrow> Q\"\n  and     \"\\<And>e\\<^sub>1'. \\<lless> \\<pi>, e\\<^sub>1 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e\\<^sub>1' \\<ggreater> \\<and> e' = Let e\\<^sub>1' x e\\<^sub>2 \\<and> \\<not> value e\\<^sub>1 \\<Longrightarrow> Q\"\n  shows   \"Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, Syntax.Let e\\<^sub>1 x\n                  e\\<^sub>2\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n  atom x \\<sharp> (e\\<^sub>1, \\<pi>)\n  e' = e\\<^sub>2[e\\<^sub>1 / x] \\<and>\n  value e\\<^sub>1 \\<and> \\<pi> = \\<pi>' \\<Longrightarrow>\n  Q\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> m\\<rightarrow> \\<lless>\\<pi>', ?e\\<^sub>1'\\<ggreater> \\<and>\n  e' = Syntax.Let ?e\\<^sub>1' x e\\<^sub>2 \\<and>\n  \\<not> value e\\<^sub>1 \\<Longrightarrow>\n  Q\n\ngoal (1 subgoal):\n 1. Q", "by (auto elim: s_Let_inv')"], ["", "inductive_cases s_Case_inv[consumes 1, case_names Case Inj1 Inj2, elim]:\n  \"\\<lless> \\<pi>, Case e e\\<^sub>1 e\\<^sub>2 \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_Prj1_inv[consumes 1, case_names Prj1 PrjPair1, elim]:\n  \"\\<lless> \\<pi>, Prj1 e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', v \\<ggreater>\""], ["", "inductive_cases s_Prj2_inv[consumes 1, case_names Prj2 PrjPair2, elim]:\n  \"\\<lless> \\<pi>, Prj2 e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', v \\<ggreater>\""], ["", "inductive_cases s_Pair_inv[consumes 1, case_names Pair1 Pair2, elim]:\n  \"\\<lless> \\<pi>, Pair e\\<^sub>1 e\\<^sub>2 \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_Inj1_inv[consumes 1, case_names Inj1, elim]:\n  \"\\<lless> \\<pi>, Inj1 e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_Inj2_inv[consumes 1, case_names Inj2, elim]:\n  \"\\<lless> \\<pi>, Inj2 e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_Roll_inv[consumes 1, case_names Roll, elim]:\n  \"\\<lless> \\<pi>, Roll e \\<ggreater> m\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_Unroll_inv[consumes 1, case_names Unroll UnrollRoll, elim]:\n  \"\\<lless> \\<pi>, Unroll e \\<ggreater>  m\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_AuthI_inv[consumes 1, case_names Auth AuthI, elim]:\n  \"\\<lless> \\<pi>, Auth e \\<ggreater>  I\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_UnauthI_inv[consumes 1, case_names Unauth UnauthI, elim]:\n  \"\\<lless> \\<pi>, Unauth e \\<ggreater>  I\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_AuthP_inv[consumes 1, case_names Auth AuthP, elim]:\n  \"\\<lless> \\<pi>, Auth e \\<ggreater>  P\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_UnauthP_inv[consumes 1, case_names Unauth UnauthP, elim]:\n  \"\\<lless> \\<pi>, Unauth e \\<ggreater>  P\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_AuthV_inv[consumes 1, case_names Auth AuthV, elim]:\n  \"\\<lless> \\<pi>, Auth e \\<ggreater>  V\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_UnauthV_inv[consumes 1, case_names Unauth UnauthV, elim]:\n  \"\\<lless> \\<pi>, Unauth e \\<ggreater>  V\\<rightarrow>  \\<lless> \\<pi>', e' \\<ggreater>\""], ["", "inductive_cases s_Id_inv[elim]: \"\\<lless> \\<pi>\\<^sub>1, e\\<^sub>1 \\<ggreater> m\\<rightarrow>0 \\<lless> \\<pi>\\<^sub>2, e\\<^sub>2 \\<ggreater>\""], ["", "inductive_cases s_Tr_inv[elim]: \"\\<lless> \\<pi>\\<^sub>1, e\\<^sub>1 \\<ggreater> m\\<rightarrow>i \\<lless> \\<pi>\\<^sub>3, e\\<^sub>3 \\<ggreater>\""], ["", "text \\<open>Freshness with smallstep.\\<close>"], ["", "lemma fresh_smallstep_I:\n  fixes x :: var\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> I\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\" \"atom x \\<sharp> e\"\n  shows   \"atom x \\<sharp> e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> e'", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n  atom x \\<sharp> e\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> e'", "by (induct \\<pi> e I \\<pi>' e' rule: smallstep.induct) (auto simp: fresh_subst_term)"], ["", "lemma fresh_smallstep_P:\n  fixes x :: var\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\" \"atom x \\<sharp> e\"\n  shows   \"atom x \\<sharp> e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> e'", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n  atom x \\<sharp> e\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> e'", "by (induct \\<pi> e P \\<pi>' e' rule: smallstep.induct) (auto simp: fresh_subst_term)"], ["", "lemma fresh_smallsteps_I:\n  fixes x :: var\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> I\\<rightarrow>i \\<lless> \\<pi>', e' \\<ggreater>\" \"atom x \\<sharp> e\"\n  shows   \"atom x \\<sharp> e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> e'", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow>i \\<lless>\\<pi>', e'\\<ggreater>\n  atom x \\<sharp> e\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> e'", "by (induct \\<pi> e I i \\<pi>' e' rule: smallsteps.induct) (simp_all add: fresh_smallstep_I)"], ["", "lemma fresh_ps_smallstep_P:\n  fixes x :: var\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\" \"atom x \\<sharp> e\" \"atom x \\<sharp> \\<pi>\"\n  shows   \"atom x \\<sharp> \\<pi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<pi>'", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n  atom x \\<sharp> e\n  atom x \\<sharp> \\<pi>\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<pi>'", "proof (induct \\<pi> e P \\<pi>' e' rule: smallstep.induct)"], ["proof (state)\ngoal (24 subgoals):\n 1. \\<And>\\<pi> e\\<^sub>1 \\<pi>' e\\<^sub>1' e\\<^sub>2.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> App e\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 2. \\<And>v\\<^sub>1 \\<pi> e\\<^sub>2 \\<pi>' e\\<^sub>2'.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>\\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>2'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>2; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> App v\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 3. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> App (Lam xa e) v; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 4. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> App (Rec xa e) v; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 5. \\<And>xa e\\<^sub>1 e\\<^sub>1' \\<pi> \\<pi>' e\\<^sub>2.\n       \\<lbrakk>atom xa \\<sharp> (e\\<^sub>1, e\\<^sub>1', \\<pi>, \\<pi>');\n        \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Syntax.Let e\\<^sub>1 xa e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 6. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> Syntax.Let v xa e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 7. \\<And>\\<pi> e \\<pi>' e'.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Inj1 e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 8. \\<And>\\<pi> e \\<pi>' e'.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Inj2 e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 9. \\<And>\\<pi> e \\<pi>' e' e\\<^sub>1 e\\<^sub>2.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Case e e\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 10. \\<And>v \\<pi> e\\<^sub>1 e\\<^sub>2.\n        \\<lbrakk>value v; atom x \\<sharp> Case (Inj1 v) e\\<^sub>1 e\\<^sub>2;\n         atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>\nA total of 24 subgoals...", "case (s_UnauthP v \\<pi> h)"], ["proof (state)\nthis:\n  value v\n  atom x \\<sharp> Unauth (Hashed h v)\n  atom x \\<sharp> \\<pi>\n\ngoal (24 subgoals):\n 1. \\<And>\\<pi> e\\<^sub>1 \\<pi>' e\\<^sub>1' e\\<^sub>2.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> App e\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 2. \\<And>v\\<^sub>1 \\<pi> e\\<^sub>2 \\<pi>' e\\<^sub>2'.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>\\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>2'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>2; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> App v\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 3. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> App (Lam xa e) v; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 4. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> App (Rec xa e) v; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 5. \\<And>xa e\\<^sub>1 e\\<^sub>1' \\<pi> \\<pi>' e\\<^sub>2.\n       \\<lbrakk>atom xa \\<sharp> (e\\<^sub>1, e\\<^sub>1', \\<pi>, \\<pi>');\n        \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Syntax.Let e\\<^sub>1 xa e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 6. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> Syntax.Let v xa e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 7. \\<And>\\<pi> e \\<pi>' e'.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Inj1 e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 8. \\<And>\\<pi> e \\<pi>' e'.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Inj2 e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 9. \\<And>\\<pi> e \\<pi>' e' e\\<^sub>1 e\\<^sub>2.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Case e e\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 10. \\<And>v \\<pi> e\\<^sub>1 e\\<^sub>2.\n        \\<lbrakk>value v; atom x \\<sharp> Case (Inj1 v) e\\<^sub>1 e\\<^sub>2;\n         atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>\nA total of 24 subgoals...", "then"], ["proof (chain)\npicking this:\n  value v\n  atom x \\<sharp> Unauth (Hashed h v)\n  atom x \\<sharp> \\<pi>", "show ?case"], ["proof (prove)\nusing this:\n  value v\n  atom x \\<sharp> Unauth (Hashed h v)\n  atom x \\<sharp> \\<pi>\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<pi> @ [\\<lparr>v\\<rparr>]", "by (simp add: fresh_Cons fresh_append fresh_shallow)"], ["proof (state)\nthis:\n  atom x \\<sharp> \\<pi> @ [\\<lparr>v\\<rparr>]\n\ngoal (23 subgoals):\n 1. \\<And>\\<pi> e\\<^sub>1 \\<pi>' e\\<^sub>1' e\\<^sub>2.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> App e\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 2. \\<And>v\\<^sub>1 \\<pi> e\\<^sub>2 \\<pi>' e\\<^sub>2'.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>\\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>2'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>2; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> App v\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 3. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> App (Lam xa e) v; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 4. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> App (Rec xa e) v; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 5. \\<And>xa e\\<^sub>1 e\\<^sub>1' \\<pi> \\<pi>' e\\<^sub>2.\n       \\<lbrakk>atom xa \\<sharp> (e\\<^sub>1, e\\<^sub>1', \\<pi>, \\<pi>');\n        \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Syntax.Let e\\<^sub>1 xa e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 6. \\<And>v xa \\<pi> e.\n       \\<lbrakk>value v; atom xa \\<sharp> (v, \\<pi>);\n        atom x \\<sharp> Syntax.Let v xa e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>\n 7. \\<And>\\<pi> e \\<pi>' e'.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Inj1 e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 8. \\<And>\\<pi> e \\<pi>' e'.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Inj2 e; atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 9. \\<And>\\<pi> e \\<pi>' e' e\\<^sub>1 e\\<^sub>2.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<lbrakk>atom x \\<sharp> e; atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>';\n        atom x \\<sharp> Case e e\\<^sub>1 e\\<^sub>2;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> atom x \\<sharp> \\<pi>'\n 10. \\<And>v \\<pi> e\\<^sub>1 e\\<^sub>2.\n        \\<lbrakk>value v; atom x \\<sharp> Case (Inj1 v) e\\<^sub>1 e\\<^sub>2;\n         atom x \\<sharp> \\<pi>\\<rbrakk>\n        \\<Longrightarrow> atom x \\<sharp> \\<pi>\nA total of 23 subgoals...", "qed auto"], ["", "text \\<open>Proofstream lemmas.\\<close>"], ["", "lemma smallstepI_ps_eq:\n  assumes \"\\<lless> \\<pi>, e \\<ggreater> I\\<rightarrow> \\<lless> \\<pi>', e' \\<ggreater>\"\n  shows   \"\\<pi> = \\<pi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> = \\<pi>'", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<pi> = \\<pi>'", "by (induct \\<pi> e I \\<pi>' e' rule: smallstep.induct) auto"], ["", "lemma smallstepI_ps_emptyD:\n  \"\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<Longrightarrow> \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\"\n  \"\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>\\<pi>, e'\\<ggreater> \\<Longrightarrow> \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<Longrightarrow>\n     \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>) &&&\n    (\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>\\<pi>, e'\\<ggreater> \\<Longrightarrow>\n     \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>)", "using smallstepI_ps_eq"], ["proof (prove)\nusing this:\n  \\<lless>?\\<pi>, ?e\\<ggreater> I\\<rightarrow> \\<lless>?\\<pi>', ?e'\\<ggreater> \\<Longrightarrow>\n  ?\\<pi> = ?\\<pi>'\n\ngoal (1 subgoal):\n 1. (\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<Longrightarrow>\n     \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>) &&&\n    (\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>\\<pi>, e'\\<ggreater> \\<Longrightarrow>\n     \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>)", "by force+"], ["", "lemma smallstepsI_ps_eq:\n  assumes \"\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow>i \\<lless>\\<pi>', e'\\<ggreater>\"\n  shows   \"\\<pi> = \\<pi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> = \\<pi>'", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow>i \\<lless>\\<pi>', e'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<pi> = \\<pi>'", "by (induct \\<pi> e I i \\<pi>' e' rule: smallsteps.induct) (auto dest: smallstepI_ps_eq)"], ["", "lemma smallstepsI_ps_emptyD:\n  \"\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater> \\<Longrightarrow> \\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater>\"\n  \"\\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>\\<pi>, e'\\<ggreater> \\<Longrightarrow> \\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater> \\<Longrightarrow>\n     \\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater>) &&&\n    (\\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>\\<pi>, e'\\<ggreater> \\<Longrightarrow>\n     \\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater>)", "using smallstepsI_ps_eq"], ["proof (prove)\nusing this:\n  \\<lless>?\\<pi>, ?e\\<ggreater> I\\<rightarrow>?i \\<lless>?\\<pi>', ?e'\\<ggreater> \\<Longrightarrow>\n  ?\\<pi> = ?\\<pi>'\n\ngoal (1 subgoal):\n 1. (\\<lless>\\<pi>, e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater> \\<Longrightarrow>\n     \\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater>) &&&\n    (\\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>\\<pi>, e'\\<ggreater> \\<Longrightarrow>\n     \\<lless>[], e\\<ggreater> I\\<rightarrow>i \\<lless>[], e'\\<ggreater>)", "by force+"], ["", "lemma smallstepV_consumes_proofstream:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, eV \\<ggreater> V\\<rightarrow> \\<lless> \\<pi>\\<^sub>2, eV' \\<ggreater>\"\n  obtains \\<pi> where \"\\<pi>\\<^sub>1 = \\<pi> @ \\<pi>\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<pi>\\<^sub>1 = \\<pi> @ \\<pi>\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>1, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>\\<^sub>2, eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<pi>\\<^sub>1 = \\<pi> @ \\<pi>\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (induct \\<pi>\\<^sub>1 eV V \\<pi>\\<^sub>2 eV' rule: smallstep.induct) auto"], ["", "lemma smallstepsV_consumes_proofstream:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, eV \\<ggreater> V\\<rightarrow>i \\<lless> \\<pi>\\<^sub>2, eV' \\<ggreater>\"\n  obtains \\<pi> where \"\\<pi>\\<^sub>1 = \\<pi> @ \\<pi>\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<pi>\\<^sub>1 = \\<pi> @ \\<pi>\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>1, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<pi>\\<^sub>1 = \\<pi> @ \\<pi>\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (induct \\<pi>\\<^sub>1 eV V i \\<pi>\\<^sub>2 eV' rule: smallsteps.induct)\n                 (auto elim: smallstepV_consumes_proofstream)"], ["", "lemma smallstepP_generates_proofstream:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, eP \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>\\<^sub>2, eP' \\<ggreater>\"\n  obtains \\<pi> where \"\\<pi>\\<^sub>2 = \\<pi>\\<^sub>1 @ \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<pi>\\<^sub>2 = \\<pi>\\<^sub>1 @ \\<pi> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>1, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>\\<^sub>2, eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<pi>\\<^sub>2 = \\<pi>\\<^sub>1 @ \\<pi> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (induct \\<pi>\\<^sub>1 eP P \\<pi>\\<^sub>2 eP' rule: smallstep.induct) auto"], ["", "lemma smallstepsP_generates_proofstream:\n  assumes \"\\<lless> \\<pi>\\<^sub>1, eP \\<ggreater> P\\<rightarrow>i \\<lless> \\<pi>\\<^sub>2, eP' \\<ggreater>\"\n  obtains \\<pi> where \"\\<pi>\\<^sub>2 = \\<pi>\\<^sub>1 @ \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<pi>\\<^sub>2 = \\<pi>\\<^sub>1 @ \\<pi> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>1, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<pi>\\<^sub>2 = \\<pi>\\<^sub>1 @ \\<pi> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (induct \\<pi>\\<^sub>1 eP P i \\<pi>\\<^sub>2 eP' rule: smallsteps.induct)\n                 (auto elim: smallstepP_generates_proofstream)"], ["", "lemma smallstepV_ps_append:\n  \"\\<lless> \\<pi>, eV \\<ggreater> V\\<rightarrow> \\<lless> \\<pi>', eV' \\<ggreater> \\<longleftrightarrow> \\<lless> \\<pi> @ X, eV \\<ggreater> V\\<rightarrow> \\<lless> \\<pi>' @ X, eV' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater> =\n    \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater>", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater>\n 2. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>", "assume ?L"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater>\n 2. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>", "show ?R"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater>", "by (nominal_induct \\<pi> eV V \\<pi>' eV' avoiding: X rule: smallstep.strong_induct)\n       (auto simp: fresh_append fresh_Pair)"], ["proof (state)\nthis:\n  \\<lless>\\<pi> @\n          X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @ X, eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>", "assume ?R"], ["proof (state)\nthis:\n  \\<lless>\\<pi> @\n          X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @ X, eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n              X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi> @\n          X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @ X, eV'\\<ggreater>", "show ?L"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi> @\n          X, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @ X, eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>", "by (nominal_induct \"\\<pi> @ X\" eV V \"\\<pi>' @ X\" eV' avoiding: X rule: smallstep.strong_induct)\n       (auto simp: fresh_append fresh_Pair)"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>', eV'\\<ggreater>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallstepV_ps_to_suffix:\n  assumes \"\\<lless>\\<pi>, e\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @ X, e'\\<ggreater>\"\n  obtains \\<pi>'' where \"\\<pi> = \\<pi>'' @ X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>''.\n        \\<pi> = \\<pi>'' @ X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, e\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n               X, e'\\<ggreater>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>''.\n        \\<pi> = \\<pi>'' @ X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (induct \\<pi> e V \"\\<pi>' @ X\" e' rule: smallstep.induct) auto"], ["", "lemma smallstepsV_ps_append:\n  \"\\<lless> \\<pi>, eV \\<ggreater> V\\<rightarrow>i \\<lless> \\<pi>', eV' \\<ggreater> \\<longleftrightarrow> \\<lless> \\<pi> @ X, eV \\<ggreater> V\\<rightarrow>i \\<lless> \\<pi>' @ X, eV' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater> =\n    \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater>", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater>\n 2. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>", "assume ?L"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater>\n 2. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>", "show ?R"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater>", "proof (induct \\<pi> eV V i \\<pi>' eV' rule: smallsteps.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<pi> e.\n       \\<lless>\\<pi> @\n               X, e\\<ggreater> V\\<rightarrow>0 \\<lless>\\<pi> @\n                 X, e\\<ggreater>\n 2. \\<And>\\<pi>\\<^sub>1 e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3\n       e\\<^sub>3.\n       \\<lbrakk>\\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>1 @\n                X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2 @\n                          X, e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>\\<^sub>1 @\n                                 X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n                                 1 \\<lless>\\<pi>\\<^sub>3 @\n     X, e\\<^sub>3\\<ggreater>", "case (s_Tr \\<pi>\\<^sub>1 e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3 e\\<^sub>3)"], ["proof (state)\nthis:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>1 @\n          X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2 @\n                    X, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<And>\\<pi> e.\n       \\<lless>\\<pi> @\n               X, e\\<ggreater> V\\<rightarrow>0 \\<lless>\\<pi> @\n                 X, e\\<ggreater>\n 2. \\<And>\\<pi>\\<^sub>1 e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3\n       e\\<^sub>3.\n       \\<lbrakk>\\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>1 @\n                X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2 @\n                          X, e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>\\<^sub>1 @\n                                 X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n                                 1 \\<lless>\\<pi>\\<^sub>3 @\n     X, e\\<^sub>3\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>1 @\n          X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2 @\n                    X, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>", "show ?case"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>1 @\n          X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2 @\n                    X, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>\\<^sub>1 @\n            X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n            1 \\<lless>\\<pi>\\<^sub>3 @ X, e\\<^sub>3\\<ggreater>", "by (auto simp: iffD1[OF smallstepV_ps_append])"], ["proof (state)\nthis:\n  \\<lless>\\<pi>\\<^sub>1 @\n          X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n          1 \\<lless>\\<pi>\\<^sub>3 @ X, e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<And>\\<pi> e.\n       \\<lless>\\<pi> @\n               X, e\\<ggreater> V\\<rightarrow>0 \\<lless>\\<pi> @\n                 X, e\\<ggreater>", "qed simp"], ["proof (state)\nthis:\n  \\<lless>\\<pi> @\n          X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n             X, eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>", "assume ?R"], ["proof (state)\nthis:\n  \\<lless>\\<pi> @\n          X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n             X, eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi> @\n            X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n               X, eV'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi> @\n          X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n             X, eV'\\<ggreater>", "show ?L"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi> @\n          X, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>' @\n             X, eV'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>", "proof (induct \"\\<pi> @ X\" eV V i \"\\<pi>' @ X\" eV' arbitrary: \\<pi>' rule: smallsteps.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> V\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3 \\<pi>'.\n       \\<lbrakk>\\<lless>\\<pi> @\n                        X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<And>\\<pi>'.\n           \\<pi>\\<^sub>2 = \\<pi>' @ X \\<Longrightarrow>\n           \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n                                     X, e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n                                     1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "case (s_Tr e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3)"], ["proof (state)\nthis:\n  \\<lless>\\<pi> @\n          X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<pi>\\<^sub>2 = ?\\<pi>' @ X \\<Longrightarrow>\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>?\\<pi>', e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n                               X, e\\<^sub>3\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> V\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3 \\<pi>'.\n       \\<lbrakk>\\<lless>\\<pi> @\n                        X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<And>\\<pi>'.\n           \\<pi>\\<^sub>2 = \\<pi>' @ X \\<Longrightarrow>\n           \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n                                     X, e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n                                     1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "from s_Tr(3)"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n                               X, e\\<^sub>3\\<ggreater>", "obtain \\<pi>''' where \"\\<pi>\\<^sub>2 = \\<pi>''' @ X\""], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n                               X, e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>'''.\n        \\<pi>\\<^sub>2 = \\<pi>''' @ X \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: smallstepV_ps_to_suffix)"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>2 = \\<pi>''' @ X\n\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> V\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3 \\<pi>'.\n       \\<lbrakk>\\<lless>\\<pi> @\n                        X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<And>\\<pi>'.\n           \\<pi>\\<^sub>2 = \\<pi>' @ X \\<Longrightarrow>\n           \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n                                     X, e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n                                     1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "with s_Tr"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi> @\n          X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<pi>\\<^sub>2 = ?\\<pi>' @ X \\<Longrightarrow>\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>?\\<pi>', e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n                               X, e\\<^sub>3\\<ggreater>\n  \\<pi>\\<^sub>2 = \\<pi>''' @ X", "show ?case"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi> @\n          X, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<pi>\\<^sub>2 = ?\\<pi>' @ X \\<Longrightarrow>\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i \\<lless>?\\<pi>', e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> V\\<rightarrow> \\<lless>\\<pi>' @\n                               X, e\\<^sub>3\\<ggreater>\n  \\<pi>\\<^sub>2 = \\<pi>''' @ X\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n                1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "by (auto dest: iffD2[OF smallstepV_ps_append])"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> V\\<rightarrow>i +\n              1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> V\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>", "qed simp"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, eV\\<ggreater> V\\<rightarrow>i \\<lless>\\<pi>', eV'\\<ggreater>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallstepP_ps_prepend:\n  \"\\<lless> \\<pi>, eP \\<ggreater> P\\<rightarrow> \\<lless> \\<pi>', eP' \\<ggreater> \\<longleftrightarrow> \\<lless> X @ \\<pi>, eP \\<ggreater> P\\<rightarrow> \\<lless> X @ \\<pi>', eP' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater> =\n    \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater>", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater>\n 2. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>", "assume ?L"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater>\n 2. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>", "show ?R"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater>", "proof (nominal_induct \\<pi> eP P \\<pi>' eP' avoiding: X rule: smallstep.strong_induct)"], ["proof (state)\ngoal (24 subgoals):\n 1. \\<And>\\<pi> e\\<^sub>1 \\<pi>' e\\<^sub>1' e\\<^sub>2 X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>1'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App e\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', App e\\<^sub>1' e\\<^sub>2\\<ggreater>\n 2. \\<And>v\\<^sub>1 \\<pi> e\\<^sub>2 \\<pi>' e\\<^sub>2' X.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>\\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>2'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>2'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App v\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', App v\\<^sub>1 e\\<^sub>2'\\<ggreater>\n 3. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App (Lam x e)\n   v\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>, e[v / x]\\<ggreater>\n 4. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App (Rec x e)\n   v\\<ggreater> P\\<rightarrow> \\<lless>X @\n \\<pi>, App (e[Rec x e / x]) v\\<ggreater>\n 5. \\<And>x e\\<^sub>1 e\\<^sub>1' \\<pi> \\<pi>' e\\<^sub>2 X.\n       \\<lbrakk>atom x \\<sharp> X; atom x \\<sharp> e\\<^sub>1;\n        atom x \\<sharp> e\\<^sub>1'; atom x \\<sharp> \\<pi>;\n        atom x \\<sharp> \\<pi>';\n        \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>1'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Syntax.Let e\\<^sub>1 x\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', Syntax.Let e\\<^sub>1' x e\\<^sub>2\\<ggreater>\n 6. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Syntax.Let v x\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>, e[v / x]\\<ggreater>\n 7. \\<And>\\<pi> e \\<pi>' e' X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Inj1\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>', Inj1 e'\\<ggreater>\n 8. \\<And>\\<pi> e \\<pi>' e' X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Inj2\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>', Inj2 e'\\<ggreater>\n 9. \\<And>\\<pi> e \\<pi>' e' e\\<^sub>1 e\\<^sub>2 X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Case e e\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', Case e' e\\<^sub>1 e\\<^sub>2\\<ggreater>\n 10. \\<And>v \\<pi> e\\<^sub>1 e\\<^sub>2 X.\n        value v \\<Longrightarrow>\n        \\<lless>X @\n                \\<pi>, Case (Inj1 v) e\\<^sub>1\n                        e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                              \\<pi>, App e\\<^sub>1 v\\<ggreater>\nA total of 24 subgoals...", "case (s_UnauthP v \\<pi> h)"], ["proof (state)\nthis:\n  value v\n\ngoal (24 subgoals):\n 1. \\<And>\\<pi> e\\<^sub>1 \\<pi>' e\\<^sub>1' e\\<^sub>2 X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>1'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App e\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', App e\\<^sub>1' e\\<^sub>2\\<ggreater>\n 2. \\<And>v\\<^sub>1 \\<pi> e\\<^sub>2 \\<pi>' e\\<^sub>2' X.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>\\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>2'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>2'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App v\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', App v\\<^sub>1 e\\<^sub>2'\\<ggreater>\n 3. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App (Lam x e)\n   v\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>, e[v / x]\\<ggreater>\n 4. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App (Rec x e)\n   v\\<ggreater> P\\<rightarrow> \\<lless>X @\n \\<pi>, App (e[Rec x e / x]) v\\<ggreater>\n 5. \\<And>x e\\<^sub>1 e\\<^sub>1' \\<pi> \\<pi>' e\\<^sub>2 X.\n       \\<lbrakk>atom x \\<sharp> X; atom x \\<sharp> e\\<^sub>1;\n        atom x \\<sharp> e\\<^sub>1'; atom x \\<sharp> \\<pi>;\n        atom x \\<sharp> \\<pi>';\n        \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>1'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Syntax.Let e\\<^sub>1 x\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', Syntax.Let e\\<^sub>1' x e\\<^sub>2\\<ggreater>\n 6. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Syntax.Let v x\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>, e[v / x]\\<ggreater>\n 7. \\<And>\\<pi> e \\<pi>' e' X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Inj1\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>', Inj1 e'\\<ggreater>\n 8. \\<And>\\<pi> e \\<pi>' e' X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Inj2\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>', Inj2 e'\\<ggreater>\n 9. \\<And>\\<pi> e \\<pi>' e' e\\<^sub>1 e\\<^sub>2 X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Case e e\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', Case e' e\\<^sub>1 e\\<^sub>2\\<ggreater>\n 10. \\<And>v \\<pi> e\\<^sub>1 e\\<^sub>2 X.\n        value v \\<Longrightarrow>\n        \\<lless>X @\n                \\<pi>, Case (Inj1 v) e\\<^sub>1\n                        e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                              \\<pi>, App e\\<^sub>1 v\\<ggreater>\nA total of 24 subgoals...", "then"], ["proof (chain)\npicking this:\n  value v", "show ?case"], ["proof (prove)\nusing this:\n  value v\n\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, Unauth\n                    (Hashed h\n                      v)\\<ggreater> P\\<rightarrow> \\<lless>X @\n                     \\<pi> @ [\\<lparr>v\\<rparr>], v\\<ggreater>", "by (subst append_assoc[symmetric, of X \\<pi> \"[\\<lparr>v\\<rparr>]\"]) (erule smallstep.s_UnauthP)"], ["proof (state)\nthis:\n  \\<lless>X @\n          \\<pi>, Unauth\n                  (Hashed h\n                    v)\\<ggreater> P\\<rightarrow> \\<lless>X @\n                   \\<pi> @ [\\<lparr>v\\<rparr>], v\\<ggreater>\n\ngoal (23 subgoals):\n 1. \\<And>\\<pi> e\\<^sub>1 \\<pi>' e\\<^sub>1' e\\<^sub>2 X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>1'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App e\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', App e\\<^sub>1' e\\<^sub>2\\<ggreater>\n 2. \\<And>v\\<^sub>1 \\<pi> e\\<^sub>2 \\<pi>' e\\<^sub>2' X.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>\\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>2'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>2'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App v\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', App v\\<^sub>1 e\\<^sub>2'\\<ggreater>\n 3. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App (Lam x e)\n   v\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>, e[v / x]\\<ggreater>\n 4. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, App (Rec x e)\n   v\\<ggreater> P\\<rightarrow> \\<lless>X @\n \\<pi>, App (e[Rec x e / x]) v\\<ggreater>\n 5. \\<And>x e\\<^sub>1 e\\<^sub>1' \\<pi> \\<pi>' e\\<^sub>2 X.\n       \\<lbrakk>atom x \\<sharp> X; atom x \\<sharp> e\\<^sub>1;\n        atom x \\<sharp> e\\<^sub>1'; atom x \\<sharp> \\<pi>;\n        atom x \\<sharp> \\<pi>';\n        \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e\\<^sub>1'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow> \\<lless>b @\n                                \\<pi>', e\\<^sub>1'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Syntax.Let e\\<^sub>1 x\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', Syntax.Let e\\<^sub>1' x e\\<^sub>2\\<ggreater>\n 6. \\<And>v x \\<pi> e X.\n       \\<lbrakk>atom x \\<sharp> X; value v; atom x \\<sharp> v;\n        atom x \\<sharp> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Syntax.Let v x\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>, e[v / x]\\<ggreater>\n 7. \\<And>\\<pi> e \\<pi>' e' X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Inj1\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>', Inj1 e'\\<ggreater>\n 8. \\<And>\\<pi> e \\<pi>' e' X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Inj2\n   e\\<ggreater> P\\<rightarrow> \\<lless>X @ \\<pi>', Inj2 e'\\<ggreater>\n 9. \\<And>\\<pi> e \\<pi>' e' e\\<^sub>1 e\\<^sub>2 X.\n       \\<lbrakk>\\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', e'\\<ggreater>;\n        \\<And>b.\n           \\<lless>b @\n                   \\<pi>, e\\<ggreater> P\\<rightarrow> \\<lless>b @\n                        \\<pi>', e'\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>, Case e e\\<^sub>1\n   e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n         \\<pi>', Case e' e\\<^sub>1 e\\<^sub>2\\<ggreater>\n 10. \\<And>v \\<pi> e\\<^sub>1 e\\<^sub>2 X.\n        value v \\<Longrightarrow>\n        \\<lless>X @\n                \\<pi>, Case (Inj1 v) e\\<^sub>1\n                        e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                              \\<pi>, App e\\<^sub>1 v\\<ggreater>\nA total of 23 subgoals...", "qed (auto simp: fresh_append fresh_Pair)"], ["proof (state)\nthis:\n  \\<lless>X @\n          \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                \\<pi>', eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>", "assume ?R"], ["proof (state)\nthis:\n  \\<lless>X @\n          \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                \\<pi>', eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                  \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>X @\n          \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                \\<pi>', eP'\\<ggreater>", "show ?L"], ["proof (prove)\nusing this:\n  \\<lless>X @\n          \\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>X @\n                \\<pi>', eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>", "by (nominal_induct \"X @ \\<pi>\" eP P \"X @ \\<pi>'\" eP' avoiding: X rule: smallstep.strong_induct)\n       (auto simp: fresh_append fresh_Pair)"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>', eP'\\<ggreater>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smallstepsP_ps_prepend:\n  \"\\<lless> \\<pi>, eP \\<ggreater> P\\<rightarrow>i \\<lless> \\<pi>', eP' \\<ggreater> \\<longleftrightarrow> \\<lless> X @ \\<pi>, eP \\<ggreater> P\\<rightarrow>i \\<lless> X @ \\<pi>', eP' \\<ggreater>\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater> =\n    \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater>", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater>\n 2. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>", "assume ?L"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater>\n 2. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>", "show ?R"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater>", "proof (induct \\<pi> eP P i \\<pi>' eP' rule: smallsteps.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<pi> e.\n       \\<lless>X @\n               \\<pi>, e\\<ggreater> P\\<rightarrow>0 \\<lless>X @\n                     \\<pi>, e\\<ggreater>\n 2. \\<And>\\<pi>\\<^sub>1 e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3\n       e\\<^sub>3.\n       \\<lbrakk>\\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<lless>X @\n                \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>X @\n\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n       1 \\<lless>X @ \\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>", "case (s_Tr \\<pi>\\<^sub>1 e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3 e\\<^sub>3)"], ["proof (state)\nthis:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>X @\n          \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                                \\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<And>\\<pi> e.\n       \\<lless>X @\n               \\<pi>, e\\<ggreater> P\\<rightarrow>0 \\<lless>X @\n                     \\<pi>, e\\<ggreater>\n 2. \\<And>\\<pi>\\<^sub>1 e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 \\<pi>\\<^sub>3\n       e\\<^sub>3.\n       \\<lbrakk>\\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<lless>X @\n                \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>X @\n\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>X @\n                                 \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n       1 \\<lless>X @ \\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>X @\n          \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                                \\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>", "show ?case"], ["proof (prove)\nusing this:\n  \\<lless>\\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>X @\n          \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                                \\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>\\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n                        1 \\<lless>X @ \\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>", "by (auto simp: iffD1[OF smallstepP_ps_prepend])"], ["proof (state)\nthis:\n  \\<lless>X @\n          \\<pi>\\<^sub>1, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n                      1 \\<lless>X @ \\<pi>\\<^sub>3, e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<And>\\<pi> e.\n       \\<lless>X @\n               \\<pi>, e\\<ggreater> P\\<rightarrow>0 \\<lless>X @\n                     \\<pi>, e\\<ggreater>", "qed simp"], ["proof (state)\nthis:\n  \\<lless>X @\n          \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                 \\<pi>', eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>", "assume ?R"], ["proof (state)\nthis:\n  \\<lless>X @\n          \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                 \\<pi>', eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>X @\n            \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                   \\<pi>', eP'\\<ggreater> \\<Longrightarrow>\n    \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>X @\n          \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                 \\<pi>', eP'\\<ggreater>", "show ?L"], ["proof (prove)\nusing this:\n  \\<lless>X @\n          \\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>X @\n                 \\<pi>', eP'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>", "proof (induct \"X @ \\<pi>\" eP P i \"X @ \\<pi>'\" eP' arbitrary: \\<pi>' rule: smallsteps.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3 \\<pi>'.\n       \\<lbrakk>\\<lless>X @\n                        \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<And>\\<pi>'.\n           \\<pi>\\<^sub>2 = X @ \\<pi>' \\<Longrightarrow>\n           \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                                     \\<pi>', e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n                                     1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "case (s_Tr e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3)"], ["proof (state)\nthis:\n  \\<lless>X @\n          \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<pi>\\<^sub>2 = X @ ?\\<pi>' \\<Longrightarrow>\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>?\\<pi>', e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                               \\<pi>', e\\<^sub>3\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3 \\<pi>'.\n       \\<lbrakk>\\<lless>X @\n                        \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<And>\\<pi>'.\n           \\<pi>\\<^sub>2 = X @ \\<pi>' \\<Longrightarrow>\n           \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                                     \\<pi>', e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n                                     1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<lless>X @\n          \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<pi>\\<^sub>2 = X @ ?\\<pi>' \\<Longrightarrow>\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>?\\<pi>', e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                               \\<pi>', e\\<^sub>3\\<ggreater>", "obtain \\<pi>'' where \\<pi>'': \"\\<pi>\\<^sub>2 = X @ \\<pi> @ \\<pi>''\""], ["proof (prove)\nusing this:\n  \\<lless>X @\n          \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<pi>\\<^sub>2 = X @ ?\\<pi>' \\<Longrightarrow>\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>?\\<pi>', e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                               \\<pi>', e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>''.\n        \\<pi>\\<^sub>2 = X @ \\<pi> @ \\<pi>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: smallstepsP_generates_proofstream)"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>2 = X @ \\<pi> @ \\<pi>''\n\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3 \\<pi>'.\n       \\<lbrakk>\\<lless>X @\n                        \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<And>\\<pi>'.\n           \\<pi>\\<^sub>2 = X @ \\<pi>' \\<Longrightarrow>\n           \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                                     \\<pi>', e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n                                     1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "then"], ["proof (chain)\npicking this:\n  \\<pi>\\<^sub>2 = X @ \\<pi> @ \\<pi>''", "have \"\\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi> @ \\<pi>'', e\\<^sub>2\\<ggreater>\""], ["proof (prove)\nusing this:\n  \\<pi>\\<^sub>2 = X @ \\<pi> @ \\<pi>''\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi> @\n                          \\<pi>'', e\\<^sub>2\\<ggreater>", "by (auto dest: s_Tr(2))"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi> @\n                        \\<pi>'', e\\<^sub>2\\<ggreater>\n\ngoal (2 subgoals):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>\n 2. \\<And>e\\<^sub>1 i \\<pi>\\<^sub>2 e\\<^sub>2 e\\<^sub>3 \\<pi>'.\n       \\<lbrakk>\\<lless>X @\n                        \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>;\n        \\<And>\\<pi>'.\n           \\<pi>\\<^sub>2 = X @ \\<pi>' \\<Longrightarrow>\n           \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', e\\<^sub>2\\<ggreater>;\n        \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                                     \\<pi>', e\\<^sub>3\\<ggreater>\\<rbrakk>\n       \\<Longrightarrow> \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n                                     1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "with \\<pi>'' s_Tr(1,3)"], ["proof (chain)\npicking this:\n  \\<pi>\\<^sub>2 = X @ \\<pi> @ \\<pi>''\n  \\<lless>X @\n          \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                               \\<pi>', e\\<^sub>3\\<ggreater>\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi> @\n                        \\<pi>'', e\\<^sub>2\\<ggreater>", "show ?case"], ["proof (prove)\nusing this:\n  \\<pi>\\<^sub>2 = X @ \\<pi> @ \\<pi>''\n  \\<lless>X @\n          \\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater>\n  \\<lless>\\<pi>\\<^sub>2, e\\<^sub>2\\<ggreater> P\\<rightarrow> \\<lless>X @\n                               \\<pi>', e\\<^sub>3\\<ggreater>\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi> @\n                        \\<pi>'', e\\<^sub>2\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n                1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>", "by (auto dest: iffD2[OF smallstepP_ps_prepend])"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, e\\<^sub>1\\<ggreater> P\\<rightarrow>i +\n              1 \\<lless>\\<pi>', e\\<^sub>3\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lless>\\<pi>, e\\<ggreater> P\\<rightarrow>0 \\<lless>\\<pi>, e\\<ggreater>", "qed simp"], ["proof (state)\nthis:\n  \\<lless>\\<pi>, eP\\<ggreater> P\\<rightarrow>i \\<lless>\\<pi>', eP'\\<ggreater>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Type Progress\\<close>"], ["", "lemma type_progress:\n  assumes \"{$$} \\<turnstile>\\<^sub>W e : \\<tau>\"\n  shows   \"value e \\<or> (\\<exists>e'. \\<lless> [], e \\<ggreater> I\\<rightarrow> \\<lless> [], e' \\<ggreater>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>)", "using assms"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal (1 subgoal):\n 1. value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>)", "proof (nominal_induct \"{$$} :: tyenv\" e \\<tau> rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (16 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Let e\\<^sub>1 x e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\n                              I [])\n 6. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 10. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n        \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                          Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                               I [])\nA total of 16 subgoals...", "case (jw_Let x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  atom x \\<sharp> {$$}\n  atom x \\<sharp> e\\<^sub>1\n  {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I [])\n  {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n  value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\n\ngoal (16 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom x \\<sharp> e\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Let e\\<^sub>1 x e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Let e\\<^sub>1 x e\\<^sub>2)\n                              I [])\n 6. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 10. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n         {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n        \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                          Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                               I [])\nA total of 16 subgoals...", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> {$$}\n  atom x \\<sharp> e\\<^sub>1\n  {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I [])\n  {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n  value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> {$$}\n  atom x \\<sharp> e\\<^sub>1\n  {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I [])\n  {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n  value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\n\ngoal (1 subgoal):\n 1. value (Syntax.Let e\\<^sub>1 x e\\<^sub>2) \\<or>\n    Ex (smallstep [] (Syntax.Let e\\<^sub>1 x e\\<^sub>2) I [])", "by (auto 0 3 simp: fresh_smallstep_I elim!: s_Let2[of e\\<^sub>2]\n      intro: exI[where P=\"\\<lambda>e. \\<lless>_, _\\<ggreater> _\\<rightarrow> \\<lless>_, e\\<ggreater>\", OF s_Let1, rotated])"], ["proof (state)\nthis:\n  value (Syntax.Let e\\<^sub>1 x e\\<^sub>2) \\<or>\n  Ex (smallstep [] (Syntax.Let e\\<^sub>1 x e\\<^sub>2) I [])\n\ngoal (15 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Prj1 e) \\<or>\n                          Ex (smallstep [] (Prj1 e) I [])\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Prj1 e) \\<or>\n                          Ex (smallstep [] (Prj1 e) I [])\nA total of 15 subgoals...", "case (jw_Prj1 v \\<tau>\\<^sub>1 \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])\n\ngoal (15 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Prj1 e) \\<or>\n                          Ex (smallstep [] (Prj1 e) I [])\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])", "show ?case"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])\n\ngoal (1 subgoal):\n 1. value (Prj1 v) \\<or> Ex (smallstep [] (Prj1 v) I [])", "by (auto elim!: jw_Prod_inv[of v \\<tau>\\<^sub>1 \\<tau>\\<^sub>2])"], ["proof (state)\nthis:\n  value (Prj1 v) \\<or> Ex (smallstep [] (Prj1 v) I [])\n\ngoal (14 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Prj2 e) \\<or>\n                          Ex (smallstep [] (Prj2 e) I [])\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Prj2 e) \\<or>\n                          Ex (smallstep [] (Prj2 e) I [])\nA total of 14 subgoals...", "case (jw_Prj2 v \\<tau>\\<^sub>1 \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])\n\ngoal (14 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Prj2 e) \\<or>\n                          Ex (smallstep [] (Prj2 e) I [])\nA total of 14 subgoals...", "then"], ["proof (chain)\npicking this:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])", "show ?case"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Prod \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])\n\ngoal (1 subgoal):\n 1. value (Prj2 v) \\<or> Ex (smallstep [] (Prj2 v) I [])", "by (auto elim!: jw_Prod_inv[of v \\<tau>\\<^sub>1 \\<tau>\\<^sub>2])"], ["proof (state)\nthis:\n  value (Prj2 v) \\<or> Ex (smallstep [] (Prj2 v) I [])\n\ngoal (13 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>\\<alpha> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n         {$$} \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Roll e) \\<or>\n                          Ex (smallstep [] (Roll e) I [])\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>\\<alpha> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n         {$$} \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Roll e) \\<or>\n                          Ex (smallstep [] (Roll e) I [])\nA total of 13 subgoals...", "case (jw_App e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e')"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value e \\<or> Ex (smallstep [] e I [])\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1\n  value e' \\<or> Ex (smallstep [] e' I [])\n\ngoal (13 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e'.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        value e' \\<or> Ex (smallstep [] e' I [])\\<rbrakk>\n       \\<Longrightarrow> value (App e e') \\<or>\n                         Ex (smallstep [] (App e e') I [])\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 10. \\<And>\\<alpha> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n         {$$} \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Roll e) \\<or>\n                          Ex (smallstep [] (Roll e) I [])\nA total of 13 subgoals...", "then"], ["proof (chain)\npicking this:\n  {$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value e \\<or> Ex (smallstep [] e I [])\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1\n  value e' \\<or> Ex (smallstep [] e' I [])", "show ?case"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  value e \\<or> Ex (smallstep [] e I [])\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1\n  value e' \\<or> Ex (smallstep [] e' I [])\n\ngoal (1 subgoal):\n 1. value (App e e') \\<or> Ex (smallstep [] (App e e') I [])", "by (auto 0 4 elim: jw_Fun_inv[of _ _ _ e'])"], ["proof (state)\nthis:\n  value (App e e') \\<or> Ex (smallstep [] (App e e') I [])\n\ngoal (12 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 8. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 9. \\<And>\\<alpha> e \\<tau>.\n       \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Roll e) \\<or>\n                         Ex (smallstep [] (Roll e) I [])\n 10. \\<And>\\<alpha> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n         {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Unroll e) \\<or>\n                          Ex (smallstep [] (Unroll e) I [])\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 8. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 9. \\<And>\\<alpha> e \\<tau>.\n       \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Roll e) \\<or>\n                         Ex (smallstep [] (Roll e) I [])\n 10. \\<And>\\<alpha> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n         {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Unroll e) \\<or>\n                          Ex (smallstep [] (Unroll e) I [])\nA total of 12 subgoals...", "case (jw_Case v v\\<^sub>1 v\\<^sub>2 \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<tau>)"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Sum v\\<^sub>1 v\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])\n  {$$} \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>1 \\<tau>\\<^sub>2\n  value \\<tau>\\<^sub>1 \\<or> Ex (smallstep [] \\<tau>\\<^sub>1 I [])\n  {$$} \\<turnstile>\\<^sub>W \\<tau> : Fun v\\<^sub>2 \\<tau>\\<^sub>2\n  value \\<tau> \\<or> Ex (smallstep [] \\<tau> I [])\n\ngoal (12 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Case e e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Case e e\\<^sub>1 e\\<^sub>2) I [])\n 8. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 9. \\<And>\\<alpha> e \\<tau>.\n       \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Roll e) \\<or>\n                         Ex (smallstep [] (Roll e) I [])\n 10. \\<And>\\<alpha> e \\<tau>.\n        \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n         {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Unroll e) \\<or>\n                          Ex (smallstep [] (Unroll e) I [])\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Sum v\\<^sub>1 v\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])\n  {$$} \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>1 \\<tau>\\<^sub>2\n  value \\<tau>\\<^sub>1 \\<or> Ex (smallstep [] \\<tau>\\<^sub>1 I [])\n  {$$} \\<turnstile>\\<^sub>W \\<tau> : Fun v\\<^sub>2 \\<tau>\\<^sub>2\n  value \\<tau> \\<or> Ex (smallstep [] \\<tau> I [])", "show ?case"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W v : Syntax.Sum v\\<^sub>1 v\\<^sub>2\n  value v \\<or> Ex (smallstep [] v I [])\n  {$$} \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>1 \\<tau>\\<^sub>2\n  value \\<tau>\\<^sub>1 \\<or> Ex (smallstep [] \\<tau>\\<^sub>1 I [])\n  {$$} \\<turnstile>\\<^sub>W \\<tau> : Fun v\\<^sub>2 \\<tau>\\<^sub>2\n  value \\<tau> \\<or> Ex (smallstep [] \\<tau> I [])\n\ngoal (1 subgoal):\n 1. value (Case v \\<tau>\\<^sub>1 \\<tau>) \\<or>\n    Ex (smallstep [] (Case v \\<tau>\\<^sub>1 \\<tau>) I [])", "by (auto 0 4 elim: jw_Sum_inv[of _ v\\<^sub>1 v\\<^sub>2])"], ["proof (state)\nthis:\n  value (Case v \\<tau>\\<^sub>1 \\<tau>) \\<or>\n  Ex (smallstep [] (Case v \\<tau>\\<^sub>1 \\<tau>) I [])\n\ngoal (11 subgoals):\n 1. value Unit \\<or> Ex (smallstep [] Unit I [])\n 2. \\<And>x \\<tau>.\n       {$$} $$ x = Some \\<tau> \\<Longrightarrow>\n       value (Var x) \\<or> Ex (smallstep [] (Var x) I [])\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2.\n       \\<lbrakk>atom x \\<sharp> {$$};\n        {$$}(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        {$$}(x $$:= \\<tau>\\<^sub>1) = {$$} \\<Longrightarrow>\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Lam x e) \\<or>\n                         Ex (smallstep [] (Lam x e) I [])\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e.\n       \\<lbrakk>atom x \\<sharp> {$$}; atom y \\<sharp> {$$};\n        atom y \\<sharp> x;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1\n                     \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                     e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$}(x $$:= Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2) =\n        {$$} \\<Longrightarrow>\n        value (Lam y e) \\<or> Ex (smallstep [] (Lam y e) I [])\\<rbrakk>\n       \\<Longrightarrow> value (Rec x (Lam y e)) \\<or>\n                         Ex (smallstep [] (Rec x (Lam y e)) I [])\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj1 e) \\<or>\n                         Ex (smallstep [] (Inj1 e) I [])\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Inj2 e) \\<or>\n                         Ex (smallstep [] (Inj2 e) I [])\n 7. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        value e\\<^sub>1 \\<or> Ex (smallstep [] e\\<^sub>1 I []);\n        {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        value e\\<^sub>2 \\<or> Ex (smallstep [] e\\<^sub>2 I [])\\<rbrakk>\n       \\<Longrightarrow> value (Syntax.Pair e\\<^sub>1 e\\<^sub>2) \\<or>\n                         Ex (smallstep [] (Syntax.Pair e\\<^sub>1 e\\<^sub>2)\n                              I [])\n 8. \\<And>\\<alpha> e \\<tau>.\n       \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Roll e) \\<or>\n                         Ex (smallstep [] (Roll e) I [])\n 9. \\<And>\\<alpha> e \\<tau>.\n       \\<lbrakk>atom \\<alpha> \\<sharp> {$$};\n        {$$} \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n       \\<Longrightarrow> value (Unroll e) \\<or>\n                         Ex (smallstep [] (Unroll e) I [])\n 10. \\<And>e \\<tau>.\n        \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau>;\n         value e \\<or> Ex (smallstep [] e I [])\\<rbrakk>\n        \\<Longrightarrow> value (Auth e) \\<or>\n                          Ex (smallstep [] (Auth e) I [])\nA total of 11 subgoals...", "qed fast+"], ["", "subsection \\<open>Weak Type Preservation\\<close>"], ["", "lemma fresh_tyenv_None:\n  fixes \\<Gamma> :: tyenv\n  shows \"atom x \\<sharp> \\<Gamma> \\<longleftrightarrow> \\<Gamma> $$ x = None\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<Gamma> = (\\<Gamma> $$ x = None)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. atom x \\<sharp> \\<Gamma> \\<Longrightarrow> \\<Gamma> $$ x = None\n 2. \\<Gamma> $$ x = None \\<Longrightarrow> atom x \\<sharp> \\<Gamma>", "assume assm: ?L"], ["proof (state)\nthis:\n  atom x \\<sharp> \\<Gamma>\n\ngoal (2 subgoals):\n 1. atom x \\<sharp> \\<Gamma> \\<Longrightarrow> \\<Gamma> $$ x = None\n 2. \\<Gamma> $$ x = None \\<Longrightarrow> atom x \\<sharp> \\<Gamma>", "show ?R"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x = None", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "assume \"\\<Gamma> $$ x \\<noteq> None\""], ["proof (state)\nthis:\n  \\<Gamma> $$ x \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<Gamma> $$ x \\<noteq> None", "obtain \\<tau> where \"\\<Gamma> $$ x = Some \\<tau>\""], ["proof (prove)\nusing this:\n  \\<Gamma> $$ x \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>\\<tau>.\n        \\<Gamma> $$ x = Some \\<tau> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> $$ x = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "with assm"], ["proof (chain)\npicking this:\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma> $$ x = Some \\<tau>", "have \"\\<forall>a :: var. atom a \\<sharp> \\<Gamma> \\<longrightarrow> \\<Gamma> $$ a = Some \\<tau>\""], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma> $$ x = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<forall>a.\n       atom a \\<sharp> \\<Gamma> \\<longrightarrow>\n       \\<Gamma> $$ a = Some \\<tau>", "using fmap_freshness_lemma_unique[OF exI, of x \\<Gamma>]"], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma> $$ x = Some \\<tau>\n  atom x \\<sharp> (\\<Gamma>, \\<Gamma> $$ x) \\<Longrightarrow>\n  \\<exists>!x.\n     \\<forall>a.\n        atom a \\<sharp> \\<Gamma> \\<longrightarrow> \\<Gamma> $$ a = x\n\ngoal (1 subgoal):\n 1. \\<forall>a.\n       atom a \\<sharp> \\<Gamma> \\<longrightarrow>\n       \\<Gamma> $$ a = Some \\<tau>", "by (simp add: fresh_Pair fresh_Some) metis"], ["proof (state)\nthis:\n  \\<forall>a.\n     atom a \\<sharp> \\<Gamma> \\<longrightarrow> \\<Gamma> $$ a = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<forall>a.\n     atom a \\<sharp> \\<Gamma> \\<longrightarrow> \\<Gamma> $$ a = Some \\<tau>", "have \"{a :: var. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<forall>a.\n     atom a \\<sharp> \\<Gamma> \\<longrightarrow> \\<Gamma> $$ a = Some \\<tau>\n\ngoal (1 subgoal):\n 1. {a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>", "by (auto simp: image_iff Ball_def fmlookup_dom'_iff)"], ["proof (state)\nthis:\n  {a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  {a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  {a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "assume \"infinite {a :: var. \\<not> atom a \\<sharp> \\<Gamma>}\""], ["proof (state)\nthis:\n  infinite {a. \\<not> atom a \\<sharp> \\<Gamma>}\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  infinite {a. \\<not> atom a \\<sharp> \\<Gamma>}", "have \"infinite {a :: var. atom a \\<in> supp \\<Gamma>}\""], ["proof (prove)\nusing this:\n  infinite {a. \\<not> atom a \\<sharp> \\<Gamma>}\n\ngoal (1 subgoal):\n 1. infinite {a. atom a \\<in> supp \\<Gamma>}", "unfolding fresh_def"], ["proof (prove)\nusing this:\n  infinite {a. \\<not> atom a \\<notin> supp \\<Gamma>}\n\ngoal (1 subgoal):\n 1. infinite {a. atom a \\<in> supp \\<Gamma>}", "by auto"], ["proof (state)\nthis:\n  infinite {a. atom a \\<in> supp \\<Gamma>}\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  infinite {a. atom a \\<in> supp \\<Gamma>}", "have \"infinite (supp \\<Gamma>)\""], ["proof (prove)\nusing this:\n  infinite {a. atom a \\<in> supp \\<Gamma>}\n\ngoal (1 subgoal):\n 1. infinite (supp \\<Gamma>)", "by (rule contrapos_nn)\n          (auto simp: image_iff inv_f_f[of atom] inj_on_def\n            elim!: finite_surj[of _ _ \"inv atom\"] bexI[rotated])"], ["proof (state)\nthis:\n  infinite (supp \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  infinite (supp \\<Gamma>)", "have False"], ["proof (prove)\nusing this:\n  infinite (supp \\<Gamma>)\n\ngoal (1 subgoal):\n 1. False", "using finite_supp[of \\<Gamma>]"], ["proof (prove)\nusing this:\n  infinite (supp \\<Gamma>)\n  finite (supp \\<Gamma>)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  infinite {a. \\<not> atom a \\<sharp> \\<Gamma>} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  infinite {a. \\<not> atom a \\<sharp> \\<Gamma>} \\<Longrightarrow> False", "have \"infinite {a :: var. atom a \\<sharp> \\<Gamma>}\""], ["proof (prove)\nusing this:\n  infinite {a. \\<not> atom a \\<sharp> \\<Gamma>} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. infinite {a. atom a \\<sharp> \\<Gamma>}", "by auto"], ["proof (state)\nthis:\n  infinite {a. atom a \\<sharp> \\<Gamma>}\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x \\<noteq> None \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  {a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>\n  infinite {a. atom a \\<sharp> \\<Gamma>}", "show False"], ["proof (prove)\nusing this:\n  {a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>\n  infinite {a. atom a \\<sharp> \\<Gamma>}\n\ngoal (1 subgoal):\n 1. False", "using finite_subset[of \"{a. atom a \\<sharp> \\<Gamma>}\" \"fmdom' \\<Gamma>\"]"], ["proof (prove)\nusing this:\n  {a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>\n  infinite {a. atom a \\<sharp> \\<Gamma>}\n  \\<lbrakk>{a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fmdom' \\<Gamma>;\n   finite (fmdom' \\<Gamma>)\\<rbrakk>\n  \\<Longrightarrow> finite {a. atom a \\<sharp> \\<Gamma>}\n\ngoal (1 subgoal):\n 1. False", "unfolding fmdom'_alt_def"], ["proof (prove)\nusing this:\n  {a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fset (fmdom \\<Gamma>)\n  infinite {a. atom a \\<sharp> \\<Gamma>}\n  \\<lbrakk>{a. atom a \\<sharp> \\<Gamma>} \\<subseteq> fset (fmdom \\<Gamma>);\n   finite (fset (fmdom \\<Gamma>))\\<rbrakk>\n  \\<Longrightarrow> finite {a. atom a \\<sharp> \\<Gamma>}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> $$ x = None\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x = None \\<Longrightarrow> atom x \\<sharp> \\<Gamma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x = None \\<Longrightarrow> atom x \\<sharp> \\<Gamma>", "assume ?R"], ["proof (state)\nthis:\n  \\<Gamma> $$ x = None\n\ngoal (1 subgoal):\n 1. \\<Gamma> $$ x = None \\<Longrightarrow> atom x \\<sharp> \\<Gamma>", "then"], ["proof (chain)\npicking this:\n  \\<Gamma> $$ x = None", "show ?L"], ["proof (prove)\nusing this:\n  \\<Gamma> $$ x = None\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<Gamma>", "proof (induct \\<Gamma> arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. {$$} $$ x = None \\<Longrightarrow> atom x \\<sharp> {$$}\n 2. \\<And>x y \\<Gamma> xa.\n       \\<lbrakk>\\<And>x.\n                   \\<Gamma> $$ x = None \\<Longrightarrow>\n                   atom x \\<sharp> \\<Gamma>;\n        \\<Gamma> $$ x = None; \\<Gamma>(x $$:= y) $$ xa = None\\<rbrakk>\n       \\<Longrightarrow> atom xa \\<sharp> \\<Gamma>(x $$:= y)", "case (fmupd y z \\<Gamma>)"], ["proof (state)\nthis:\n  \\<Gamma> $$ ?x = None \\<Longrightarrow> atom ?x \\<sharp> \\<Gamma>\n  \\<Gamma> $$ y = None\n  \\<Gamma>(y $$:= z) $$ x = None\n\ngoal (2 subgoals):\n 1. \\<And>x. {$$} $$ x = None \\<Longrightarrow> atom x \\<sharp> {$$}\n 2. \\<And>x y \\<Gamma> xa.\n       \\<lbrakk>\\<And>x.\n                   \\<Gamma> $$ x = None \\<Longrightarrow>\n                   atom x \\<sharp> \\<Gamma>;\n        \\<Gamma> $$ x = None; \\<Gamma>(x $$:= y) $$ xa = None\\<rbrakk>\n       \\<Longrightarrow> atom xa \\<sharp> \\<Gamma>(x $$:= y)", "then"], ["proof (chain)\npicking this:\n  \\<Gamma> $$ ?x = None \\<Longrightarrow> atom ?x \\<sharp> \\<Gamma>\n  \\<Gamma> $$ y = None\n  \\<Gamma>(y $$:= z) $$ x = None", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> $$ ?x = None \\<Longrightarrow> atom ?x \\<sharp> \\<Gamma>\n  \\<Gamma> $$ y = None\n  \\<Gamma>(y $$:= z) $$ x = None\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<Gamma>(y $$:= z)", "by (cases \"y = x\") (auto intro: fresh_fmap_update)"], ["proof (state)\nthis:\n  atom x \\<sharp> \\<Gamma>(y $$:= z)\n\ngoal (1 subgoal):\n 1. \\<And>x. {$$} $$ x = None \\<Longrightarrow> atom x \\<sharp> {$$}", "qed simp"], ["proof (state)\nthis:\n  atom x \\<sharp> \\<Gamma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma judge_weak_fresh_env_fresh_term[dest]:\n  fixes a :: var\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\" \"atom a \\<sharp> \\<Gamma>\"\n  shows   \"atom a \\<sharp> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom a \\<sharp> e", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  atom a \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom a \\<sharp> e", "proof (nominal_induct \\<Gamma> e \\<tau> avoiding: a rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>\\<Gamma> a.\n       atom a \\<sharp> \\<Gamma> \\<Longrightarrow> atom a \\<sharp> Unit\n 2. \\<And>\\<Gamma> x \\<tau> a.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Var x\n 3. \\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 a.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> \\<Gamma>;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<Longrightarrow>\n           atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Lam x e\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e';\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> App e e'\n 5. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> \\<Gamma>;\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>2;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\n 6. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a.\n       \\<lbrakk>atom x \\<sharp> a; atom y \\<sharp> a;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom\n            b \\<sharp> \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2) \\<Longrightarrow>\n           atom b \\<sharp> Lam y e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Rec x (Lam y e)\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Inj1 e\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Inj2 e\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>2;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\n 10. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<And>b.\n            atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n            atom b \\<sharp> e\\<^sub>1;\n         \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         \\<And>b.\n            atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n            atom b \\<sharp> e\\<^sub>2;\n         atom a \\<sharp> \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> atom a \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\nA total of 16 subgoals...", "case (jw_Var \\<Gamma> x \\<tau>)"], ["proof (state)\nthis:\n  \\<Gamma> $$ x = Some \\<tau>\n  atom a \\<sharp> \\<Gamma>\n\ngoal (16 subgoals):\n 1. \\<And>\\<Gamma> a.\n       atom a \\<sharp> \\<Gamma> \\<Longrightarrow> atom a \\<sharp> Unit\n 2. \\<And>\\<Gamma> x \\<tau> a.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Var x\n 3. \\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 a.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> \\<Gamma>;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<Longrightarrow>\n           atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Lam x e\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e';\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> App e e'\n 5. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> \\<Gamma>;\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>2;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\n 6. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a.\n       \\<lbrakk>atom x \\<sharp> a; atom y \\<sharp> a;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom\n            b \\<sharp> \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2) \\<Longrightarrow>\n           atom b \\<sharp> Lam y e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Rec x (Lam y e)\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Inj1 e\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Inj2 e\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>2;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\n 10. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<And>b.\n            atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n            atom b \\<sharp> e\\<^sub>1;\n         \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         \\<And>b.\n            atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n            atom b \\<sharp> e\\<^sub>2;\n         atom a \\<sharp> \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> atom a \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\nA total of 16 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<Gamma> $$ x = Some \\<tau>\n  atom a \\<sharp> \\<Gamma>", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> $$ x = Some \\<tau>\n  atom a \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom a \\<sharp> Var x", "by (cases \"a = x\") (auto simp: fresh_tyenv_None)"], ["proof (state)\nthis:\n  atom a \\<sharp> Var x\n\ngoal (15 subgoals):\n 1. \\<And>\\<Gamma> a.\n       atom a \\<sharp> \\<Gamma> \\<Longrightarrow> atom a \\<sharp> Unit\n 2. \\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 a.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> \\<Gamma>;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<Longrightarrow>\n           atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Lam x e\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e';\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> App e e'\n 4. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> \\<Gamma>;\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>2;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\n 5. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a.\n       \\<lbrakk>atom x \\<sharp> a; atom y \\<sharp> a;\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom\n            b \\<sharp> \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2) \\<Longrightarrow>\n           atom b \\<sharp> Lam y e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Rec x (Lam y e)\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Inj1 e\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Inj2 e\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>2;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\n 9. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b.\n           atom b \\<sharp> \\<Gamma> \\<Longrightarrow>\n           atom b \\<sharp> e\\<^sub>2;\n        atom a \\<sharp> \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> atom a \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\n 10. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod\n              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b.\n            atom b \\<sharp> \\<Gamma> \\<Longrightarrow> atom b \\<sharp> e;\n         atom a \\<sharp> \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> atom a \\<sharp> Prj1 e\nA total of 15 subgoals...", "qed (simp_all add: fresh_Cons fresh_fmap_update)"], ["", "lemma judge_weak_weakening_1:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\" \"atom y \\<sharp> e\"\n  shows   \"\\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  atom y \\<sharp> e\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>", "proof (nominal_induct \\<Gamma> e \\<tau> avoiding: y \\<tau>' rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Lam x e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Lam x\n                                  e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e' \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        atom y \\<sharp> App e e'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W App e\n                                  e' : \\<tau>\\<^sub>2\n 5. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let\n                                  e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\n 6. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 10. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n        \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<And>b ba.\n            atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         \\<And>b ba.\n            atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                   e\\<^sub>1\n                                   e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2\nA total of 16 subgoals...", "case (jw_Lam x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  atom ?b \\<sharp> e \\<Longrightarrow>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(?b $$:= ?ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  atom y \\<sharp> Lam x e\n\ngoal (16 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>x \\<Gamma> \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Lam x e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Lam x\n                                  e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e' \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        atom y \\<sharp> App e e'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W App e\n                                  e' : \\<tau>\\<^sub>2\n 5. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let\n                                  e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\n 6. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 10. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n        \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<And>b ba.\n            atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         \\<And>b ba.\n            atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                   e\\<^sub>1\n                                   e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2\nA total of 16 subgoals...", "from jw_Lam(5)[of y \\<tau>'] jw_Lam(1-4,6)"], ["proof (chain)\npicking this:\n  atom y \\<sharp> e \\<Longrightarrow>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  atom y \\<sharp> Lam x e", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> e \\<Longrightarrow>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  atom y \\<sharp> Lam x e\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Lam x\n             e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2", "by (auto simp add: fresh_at_base fmupd_reorder_neq fresh_fmap_update)"], ["proof (state)\nthis:\n  \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Lam x\n           e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n\ngoal (15 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e' \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        atom y \\<sharp> App e e'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W App e\n                                  e' : \\<tau>\\<^sub>2\n 4. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let\n                                  e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\n 5. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 9. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 10. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod\n              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                    \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom y \\<sharp> Prj1 e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                   e : \\<tau>\\<^sub>1\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e' \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        atom y \\<sharp> App e e'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W App e\n                                  e' : \\<tau>\\<^sub>2\n 4. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let\n                                  e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\n 5. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 9. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 10. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod\n              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                    \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom y \\<sharp> Prj1 e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                   e : \\<tau>\\<^sub>1\nA total of 15 subgoals...", "case (jw_App v v' \\<Gamma> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  v \\<turnstile>\\<^sub>W v' : Fun \\<Gamma> \\<tau>\\<^sub>1\n  atom ?b \\<sharp> v' \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W v' : Fun \\<Gamma> \\<tau>\\<^sub>1\n  v \\<turnstile>\\<^sub>W \\<tau>\\<^sub>2 : \\<Gamma>\n  atom ?b \\<sharp> \\<tau>\\<^sub>2 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau>\\<^sub>2 : \\<Gamma>\n  atom y \\<sharp> App v' \\<tau>\\<^sub>2\n\ngoal (15 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e' \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        atom y \\<sharp> App e e'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W App e\n                                  e' : \\<tau>\\<^sub>2\n 4. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let\n                                  e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\n 5. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 9. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 10. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod\n              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                    \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom y \\<sharp> Prj1 e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                   e : \\<tau>\\<^sub>1\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  v \\<turnstile>\\<^sub>W v' : Fun \\<Gamma> \\<tau>\\<^sub>1\n  atom ?b \\<sharp> v' \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W v' : Fun \\<Gamma> \\<tau>\\<^sub>1\n  v \\<turnstile>\\<^sub>W \\<tau>\\<^sub>2 : \\<Gamma>\n  atom ?b \\<sharp> \\<tau>\\<^sub>2 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau>\\<^sub>2 : \\<Gamma>\n  atom y \\<sharp> App v' \\<tau>\\<^sub>2", "show ?case"], ["proof (prove)\nusing this:\n  v \\<turnstile>\\<^sub>W v' : Fun \\<Gamma> \\<tau>\\<^sub>1\n  atom ?b \\<sharp> v' \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W v' : Fun \\<Gamma> \\<tau>\\<^sub>1\n  v \\<turnstile>\\<^sub>W \\<tau>\\<^sub>2 : \\<Gamma>\n  atom ?b \\<sharp> \\<tau>\\<^sub>2 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau>\\<^sub>2 : \\<Gamma>\n  atom y \\<sharp> App v' \\<tau>\\<^sub>2\n\ngoal (1 subgoal):\n 1. v(y $$:= \\<tau>') \\<turnstile>\\<^sub>W App v'\n      \\<tau>\\<^sub>2 : \\<tau>\\<^sub>1", "by (force simp add: fresh_at_base fmupd_reorder_neq fresh_fmap_update)"], ["proof (state)\nthis:\n  v(y $$:= \\<tau>') \\<turnstile>\\<^sub>W App v'\n    \\<tau>\\<^sub>2 : \\<tau>\\<^sub>1\n\ngoal (14 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let\n                                  e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\n 4. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 8. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 10. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod\n              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                    \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom y \\<sharp> Prj2 e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                   e : \\<tau>\\<^sub>2\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let\n                                  e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\n 4. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 8. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 10. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod\n              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                    \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom y \\<sharp> Prj2 e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                   e : \\<tau>\\<^sub>2\nA total of 14 subgoals...", "case (jw_Let x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  atom ?b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n  \\<Gamma>(?b $$:= ?ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  atom ?b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(?b $$:= ?ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\n\ngoal (14 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>x \\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> y; atom x \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let\n                                  e\\<^sub>1 x e\\<^sub>2 : \\<tau>\\<^sub>2\n 4. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 8. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 10. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod\n              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                    \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         atom y \\<sharp> Prj2 e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                   e : \\<tau>\\<^sub>2\nA total of 14 subgoals...", "from jw_Let(6)[of y \\<tau>'] jw_Let(8)[of y \\<tau>'] jw_Let(1-5,7,9)"], ["proof (chain)\npicking this:\n  atom y \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n  \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  atom y \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n  \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  atom y \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1)(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<Gamma>(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  atom y \\<sharp> Syntax.Let e\\<^sub>1 x e\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n             e\\<^sub>2 : \\<tau>\\<^sub>2", "by (auto simp add: fresh_at_base fmupd_reorder_neq fresh_fmap_update)"], ["proof (state)\nthis:\n  \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n           e\\<^sub>2 : \\<tau>\\<^sub>2\n\ngoal (13 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 7. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 10. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n         atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n      (Mu \\<alpha> \\<tau>) \\<alpha>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                    (Mu \\<alpha> \\<tau>) \\<alpha>;\n         atom y \\<sharp> Roll e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                   e : Mu \\<alpha> \\<tau>\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 7. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 10. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n         atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n      (Mu \\<alpha> \\<tau>) \\<alpha>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                    (Mu \\<alpha> \\<tau>) \\<alpha>;\n         atom y \\<sharp> Roll e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                   e : Mu \\<alpha> \\<tau>\nA total of 13 subgoals...", "case (jw_Rec x \\<Gamma> z \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e')"], ["proof (state)\nthis:\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom z \\<sharp> y\n  atom z \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam z\n                   e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom ?b \\<sharp> Lam z e' \\<Longrightarrow>\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2)(?b $$:= ?ba) \\<turnstile>\\<^sub>W Lam z\n                                e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom y \\<sharp> Rec x (Lam z e')\n\ngoal (13 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>x \\<Gamma> y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e ya \\<tau>'.\n       \\<lbrakk>atom x \\<sharp> ya; atom x \\<sharp> \\<tau>';\n        atom y \\<sharp> ya; atom y \\<sharp> \\<tau>';\n        atom x \\<sharp> \\<Gamma>; atom y \\<sharp> \\<Gamma>;\n        atom y \\<sharp> x;\n        \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                         \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n                         e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> Lam y e \\<Longrightarrow>\n           \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                            \\<tau>\\<^sub>2)(b $$:= ba) \\<turnstile>\\<^sub>W Lam\n y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom ya \\<sharp> Rec x (Lam y e)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(ya $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec\n                                   x (Lam y\n e) : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 7. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 9. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 10. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n         atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n      (Mu \\<alpha> \\<tau>) \\<alpha>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                    (Mu \\<alpha> \\<tau>) \\<alpha>;\n         atom y \\<sharp> Roll e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                   e : Mu \\<alpha> \\<tau>\nA total of 13 subgoals...", "from jw_Rec(9)[of y \\<tau>'] jw_Rec(1-8,10)"], ["proof (chain)\npicking this:\n  atom y \\<sharp> Lam z e' \\<Longrightarrow>\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2)(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Lam\n                                   z e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom z \\<sharp> y\n  atom z \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam z\n                   e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom y \\<sharp> Rec x (Lam z e')", "show ?case"], ["proof (prove)\nusing this:\n  atom y \\<sharp> Lam z e' \\<Longrightarrow>\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2)(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Lam\n                                   z e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom x \\<sharp> y\n  atom x \\<sharp> \\<tau>'\n  atom z \\<sharp> y\n  atom z \\<sharp> \\<tau>'\n  atom x \\<sharp> \\<Gamma>\n  atom z \\<sharp> \\<Gamma>\n  atom z \\<sharp> x\n  \\<Gamma>(x $$:= Fun \\<tau>\\<^sub>1\n                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam z\n                   e' : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  atom y \\<sharp> Rec x (Lam z e')\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec x\n             (Lam z e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2", "by (auto simp add: fresh_at_base fmupd_reorder_neq fresh_fmap_update fresh_Pair)"], ["proof (state)\nthis:\n  \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Rec x\n           (Lam z e') : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n\ngoal (12 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 6. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 9. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n     (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                   (Mu \\<alpha> \\<tau>) \\<alpha>;\n        atom y \\<sharp> Roll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                  e : Mu \\<alpha> \\<tau>\n 10. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n         atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         atom y \\<sharp> Unroll e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                   e : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 6. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 9. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n     (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                   (Mu \\<alpha> \\<tau>) \\<alpha>;\n        atom y \\<sharp> Roll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                  e : Mu \\<alpha> \\<tau>\n 10. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n         atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         atom y \\<sharp> Unroll e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                   e : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>\nA total of 12 subgoals...", "case (jw_Case v v\\<^sub>1 v\\<^sub>2 \\<Gamma> \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 \\<tau>)"], ["proof (state)\nthis:\n  v \\<turnstile>\\<^sub>W v\\<^sub>1 : Syntax.Sum v\\<^sub>2 \\<Gamma>\n  atom ?b \\<sharp> v\\<^sub>1 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W v\\<^sub>1 : Syntax.Sum v\\<^sub>2\n             \\<Gamma>\n  v \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>2 \\<tau>\\<^sub>2\n  atom ?b \\<sharp> \\<tau>\\<^sub>1 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>2\n                  \\<tau>\\<^sub>2\n  v \\<turnstile>\\<^sub>W \\<tau> : Fun \\<Gamma> \\<tau>\\<^sub>2\n  atom ?b \\<sharp> \\<tau> \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau> : Fun \\<Gamma> \\<tau>\\<^sub>2\n  atom y \\<sharp> Case v\\<^sub>1 \\<tau>\\<^sub>1 \\<tau>\n\ngoal (12 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau>\n       e\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Sum \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Sum\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                           \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                           \\<tau>\\<^sub>2 \\<tau>;\n        atom y \\<sharp> Case e e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case\n                                  e e\\<^sub>1 e\\<^sub>2 : \\<tau>\n 6. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 8. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 9. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n     (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                   (Mu \\<alpha> \\<tau>) \\<alpha>;\n        atom y \\<sharp> Roll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                  e : Mu \\<alpha> \\<tau>\n 10. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n         atom \\<alpha> \\<sharp> \\<Gamma>;\n         \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n         atom y \\<sharp> Unroll e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                   e : subst_type \\<tau>\n  (Mu \\<alpha> \\<tau>) \\<alpha>\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:\n  v \\<turnstile>\\<^sub>W v\\<^sub>1 : Syntax.Sum v\\<^sub>2 \\<Gamma>\n  atom ?b \\<sharp> v\\<^sub>1 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W v\\<^sub>1 : Syntax.Sum v\\<^sub>2\n             \\<Gamma>\n  v \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>2 \\<tau>\\<^sub>2\n  atom ?b \\<sharp> \\<tau>\\<^sub>1 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>2\n                  \\<tau>\\<^sub>2\n  v \\<turnstile>\\<^sub>W \\<tau> : Fun \\<Gamma> \\<tau>\\<^sub>2\n  atom ?b \\<sharp> \\<tau> \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau> : Fun \\<Gamma> \\<tau>\\<^sub>2\n  atom y \\<sharp> Case v\\<^sub>1 \\<tau>\\<^sub>1 \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  v \\<turnstile>\\<^sub>W v\\<^sub>1 : Syntax.Sum v\\<^sub>2 \\<Gamma>\n  atom ?b \\<sharp> v\\<^sub>1 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W v\\<^sub>1 : Syntax.Sum v\\<^sub>2\n             \\<Gamma>\n  v \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>2 \\<tau>\\<^sub>2\n  atom ?b \\<sharp> \\<tau>\\<^sub>1 \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau>\\<^sub>1 : Fun v\\<^sub>2\n                  \\<tau>\\<^sub>2\n  v \\<turnstile>\\<^sub>W \\<tau> : Fun \\<Gamma> \\<tau>\\<^sub>2\n  atom ?b \\<sharp> \\<tau> \\<Longrightarrow>\n  v(?b $$:= ?ba) \\<turnstile>\\<^sub>W \\<tau> : Fun \\<Gamma> \\<tau>\\<^sub>2\n  atom y \\<sharp> Case v\\<^sub>1 \\<tau>\\<^sub>1 \\<tau>\n\ngoal (1 subgoal):\n 1. v(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case v\\<^sub>1 \\<tau>\\<^sub>1\n      \\<tau> : \\<tau>\\<^sub>2", "by (fastforce simp add: fresh_at_base fmupd_reorder_neq fresh_fmap_update)"], ["proof (state)\nthis:\n  v(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Case v\\<^sub>1 \\<tau>\\<^sub>1\n    \\<tau> : \\<tau>\\<^sub>2\n\ngoal (11 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 8. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n     (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                   (Mu \\<alpha> \\<tau>) \\<alpha>;\n        atom y \\<sharp> Roll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                  e : Mu \\<alpha> \\<tau>\n 9. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        atom y \\<sharp> Unroll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                  e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>\n 10. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n         atom y \\<sharp> Auth e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Auth\n                                   e : \\<tau>\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 8. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n     (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                   (Mu \\<alpha> \\<tau>) \\<alpha>;\n        atom y \\<sharp> Roll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                  e : Mu \\<alpha> \\<tau>\n 9. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        atom y \\<sharp> Unroll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                  e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>\n 10. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n         atom y \\<sharp> Auth e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Auth\n                                   e : \\<tau>\nA total of 11 subgoals...", "case (jw_Roll \\<alpha> \\<Gamma> v \\<tau>)"], ["proof (state)\nthis:\n  atom \\<alpha> \\<sharp> y\n  atom \\<alpha> \\<sharp> \\<tau>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W v : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                     \\<alpha>\n  atom ?b \\<sharp> v \\<Longrightarrow>\n  \\<Gamma>(?b $$:= ?ba) \\<turnstile>\\<^sub>W v : subst_type \\<tau>\n            (Mu \\<alpha> \\<tau>) \\<alpha>\n  atom y \\<sharp> Roll v\n\ngoal (11 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 8. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n     (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                   (Mu \\<alpha> \\<tau>) \\<alpha>;\n        atom y \\<sharp> Roll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n                                  e : Mu \\<alpha> \\<tau>\n 9. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        atom y \\<sharp> Unroll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                  e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>\n 10. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n         atom y \\<sharp> Auth e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Auth\n                                   e : \\<tau>\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  atom \\<alpha> \\<sharp> y\n  atom \\<alpha> \\<sharp> \\<tau>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W v : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                     \\<alpha>\n  atom ?b \\<sharp> v \\<Longrightarrow>\n  \\<Gamma>(?b $$:= ?ba) \\<turnstile>\\<^sub>W v : subst_type \\<tau>\n            (Mu \\<alpha> \\<tau>) \\<alpha>\n  atom y \\<sharp> Roll v", "show ?case"], ["proof (prove)\nusing this:\n  atom \\<alpha> \\<sharp> y\n  atom \\<alpha> \\<sharp> \\<tau>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W v : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                     \\<alpha>\n  atom ?b \\<sharp> v \\<Longrightarrow>\n  \\<Gamma>(?b $$:= ?ba) \\<turnstile>\\<^sub>W v : subst_type \\<tau>\n            (Mu \\<alpha> \\<tau>) \\<alpha>\n  atom y \\<sharp> Roll v\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll\n             v : Mu \\<alpha> \\<tau>", "by (simp add: fresh_fmap_update)"], ["proof (state)\nthis:\n  \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Roll v : Mu \\<alpha> \\<tau>\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 8. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        atom y \\<sharp> Unroll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                  e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>\n 9. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n        atom y \\<sharp> Auth e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Auth\n                                  e : \\<tau>\n 10. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n         atom y \\<sharp> Unauth e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unauth\n                                   e : \\<tau>", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 8. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        atom y \\<sharp> Unroll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                  e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>\n 9. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n        atom y \\<sharp> Auth e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Auth\n                                  e : \\<tau>\n 10. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n         atom y \\<sharp> Unauth e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unauth\n                                   e : \\<tau>", "case (jw_Unroll \\<alpha> \\<Gamma> v \\<tau>)"], ["proof (state)\nthis:\n  atom \\<alpha> \\<sharp> y\n  atom \\<alpha> \\<sharp> \\<tau>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\n  atom ?b \\<sharp> v \\<Longrightarrow>\n  \\<Gamma>(?b $$:= ?ba) \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\n  atom y \\<sharp> Unroll v\n\ngoal (10 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 8. \\<And>\\<alpha> \\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> y; atom \\<alpha> \\<sharp> \\<tau>';\n        atom \\<alpha> \\<sharp> \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Mu \\<alpha> \\<tau>;\n        atom y \\<sharp> Unroll e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n                                  e : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n \\<alpha>\n 9. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n        atom y \\<sharp> Auth e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Auth\n                                  e : \\<tau>\n 10. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n        \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n         \\<And>b ba.\n            atom b \\<sharp> e \\<Longrightarrow>\n            \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n         atom y \\<sharp> Unauth e\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unauth\n                                   e : \\<tau>", "then"], ["proof (chain)\npicking this:\n  atom \\<alpha> \\<sharp> y\n  atom \\<alpha> \\<sharp> \\<tau>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\n  atom ?b \\<sharp> v \\<Longrightarrow>\n  \\<Gamma>(?b $$:= ?ba) \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\n  atom y \\<sharp> Unroll v", "show ?case"], ["proof (prove)\nusing this:\n  atom \\<alpha> \\<sharp> y\n  atom \\<alpha> \\<sharp> \\<tau>'\n  atom \\<alpha> \\<sharp> \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\n  atom ?b \\<sharp> v \\<Longrightarrow>\n  \\<Gamma>(?b $$:= ?ba) \\<turnstile>\\<^sub>W v : Mu \\<alpha> \\<tau>\n  atom y \\<sharp> Unroll v\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n             v : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>", "by (simp add: fresh_fmap_update)"], ["proof (state)\nthis:\n  \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unroll\n           v : subst_type \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> y \\<tau>'.\n       atom y \\<sharp> Unit \\<Longrightarrow>\n       \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unit : One\n 2. \\<And>\\<Gamma> x \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> $$ x = Some \\<tau>; atom y \\<sharp> Var x\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Var\n                                  x : \\<tau>\n 3. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        atom y \\<sharp> Inj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj1\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 4. \\<And>\\<Gamma> e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Inj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Inj2\n                                  e : Syntax.Sum \\<tau>\\<^sub>1\n \\<tau>\\<^sub>2\n 5. \\<And>\\<Gamma> e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 y\n       \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>1 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<Gamma> \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e\\<^sub>2 \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        atom y \\<sharp> Syntax.Pair e\\<^sub>1 e\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Syntax.Pair\n                                  e\\<^sub>1\n                                  e\\<^sub>2 : Syntax.Prod \\<tau>\\<^sub>1\n         \\<tau>\\<^sub>2\n 6. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj1 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj1\n                                  e : \\<tau>\\<^sub>1\n 7. \\<And>\\<Gamma> e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : Syntax.Prod \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : Syntax.Prod\n                   \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        atom y \\<sharp> Prj2 e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Prj2\n                                  e : \\<tau>\\<^sub>2\n 8. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n        atom y \\<sharp> Auth e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Auth\n                                  e : \\<tau>\n 9. \\<And>\\<Gamma> e \\<tau> y \\<tau>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<And>b ba.\n           atom b \\<sharp> e \\<Longrightarrow>\n           \\<Gamma>(b $$:= ba) \\<turnstile>\\<^sub>W e : \\<tau>;\n        atom y \\<sharp> Unauth e\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W Unauth\n                                  e : \\<tau>", "qed auto"], ["", "lemma judge_weak_weakening_2:\n  assumes \"\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\" \"atom y \\<sharp> \\<Gamma>\"\n  shows   \"\\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  atom y \\<sharp> \\<Gamma>", "have \"atom y \\<sharp> e\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  atom y \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom y \\<sharp> e", "by (rule judge_weak_fresh_env_fresh_term)"], ["proof (state)\nthis:\n  atom y \\<sharp> e\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>", "with assms"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> e", "show \"\\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  atom y \\<sharp> \\<Gamma>\n  atom y \\<sharp> e\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>", "by (simp add: judge_weak_weakening_1)"], ["proof (state)\nthis:\n  \\<Gamma>(y $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma judge_weak_weakening_env:\n  assumes \"{$$} \\<turnstile>\\<^sub>W e : \\<tau>\"\n  shows   \"\\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>", "proof (induct \\<Gamma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n    {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n 2. \\<And>x y \\<Gamma>.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n                \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<Gamma> $$ x = None; {$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(x $$:= y) \\<turnstile>\\<^sub>W e : \\<tau>", "case fmempty"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal (2 subgoals):\n 1. {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n    {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n 2. \\<And>x y \\<Gamma>.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n                \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<Gamma> $$ x = None; {$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(x $$:= y) \\<turnstile>\\<^sub>W e : \\<tau>", "then"], ["proof (chain)\npicking this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W e : \\<tau>", "by assumption"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>x y \\<Gamma>.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n                \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<Gamma> $$ x = None; {$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(x $$:= y) \\<turnstile>\\<^sub>W e : \\<tau>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y \\<Gamma>.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n                \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<Gamma> $$ x = None; {$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(x $$:= y) \\<turnstile>\\<^sub>W e : \\<tau>", "case (fmupd x y \\<Gamma>)"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  \\<Gamma> $$ x = None\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>x y \\<Gamma>.\n       \\<lbrakk>{$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n                \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>;\n        \\<Gamma> $$ x = None; {$$} \\<turnstile>\\<^sub>W e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(x $$:= y) \\<turnstile>\\<^sub>W e : \\<tau>", "then"], ["proof (chain)\npicking this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  \\<Gamma> $$ x = None\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n  \\<Gamma> \\<turnstile>\\<^sub>W e : \\<tau>\n  \\<Gamma> $$ x = None\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x $$:= y) \\<turnstile>\\<^sub>W e : \\<tau>", "by (simp add: fresh_tyenv_None judge_weak_weakening_2)"], ["proof (state)\nthis:\n  \\<Gamma>(x $$:= y) \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma value_subst_value:\n  assumes \"value e\" \"value e'\"\n  shows   \"value (e[e' / x])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. value (e[e' / x])", "using assms"], ["proof (prove)\nusing this:\n  value e\n  value e'\n\ngoal (1 subgoal):\n 1. value (e[e' / x])", "by (induct e  e'  x rule: subst_term.induct) auto"], ["", "lemma judge_weak_subst[intro]:\n  assumes \"\\<Gamma>(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\" \"{$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\"\n  shows   \"\\<Gamma> \\<turnstile>\\<^sub>W e[e' / a] : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile>\\<^sub>W e[e' / a] : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma>(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile>\\<^sub>W e[e' / a] : \\<tau>", "proof (nominal_induct \"\\<Gamma>(a $$:= \\<tau>')\" e \\<tau> avoiding: a e' \\<Gamma> rule: judge_weak.strong_induct)"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>x \\<tau> a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') $$ x = Some \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Var\n                   x[e' / a] : \\<tau>\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Lam x\n                   e[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 5. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 6. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>'; atom y \\<sharp> a; atom y \\<sharp> e';\n        atom y \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom y \\<sharp> \\<Gamma>'(a $$:= \\<tau>'); atom y \\<sharp> x;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n    \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                \\<tau>\\<^sub>2) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W Lam y\n                e[ba / b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Rec x\n                   (Lam y e)[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 8. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 10. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n        \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n         \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                    e\\<^sub>1\n                    e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n   \\<tau>\\<^sub>2\nA total of 16 subgoals...", "case (jw_Var x \\<tau>)"], ["proof (state)\nthis:\n  \\<Gamma>(a $$:= \\<tau>') $$ x = Some \\<tau>\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (16 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>x \\<tau> a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') $$ x = Some \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Var\n                   x[e' / a] : \\<tau>\n 3. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Lam x\n                   e[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 5. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 6. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>'; atom y \\<sharp> a; atom y \\<sharp> e';\n        atom y \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom y \\<sharp> \\<Gamma>'(a $$:= \\<tau>'); atom y \\<sharp> x;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n    \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                \\<tau>\\<^sub>2) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W Lam y\n                e[ba / b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Rec x\n                   (Lam y e)[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 8. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 10. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n        \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n         \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                    e\\<^sub>1\n                    e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n   \\<tau>\\<^sub>2\nA total of 16 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>(a $$:= \\<tau>') $$ x = Some \\<tau>\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>(a $$:= \\<tau>') $$ x = Some \\<tau>\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile>\\<^sub>W Var x[e' / a] : \\<tau>", "by (auto simp: judge_weak_weakening_env)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>W Var x[e' / a] : \\<tau>\n\ngoal (15 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Lam x\n                   e[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 3. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 4. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>'; atom y \\<sharp> a; atom y \\<sharp> e';\n        atom y \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom y \\<sharp> \\<Gamma>'(a $$:= \\<tau>'); atom y \\<sharp> x;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n    \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                \\<tau>\\<^sub>2) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W Lam y\n                e[ba / b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Rec x\n                   (Lam y e)[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n        \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                               \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                             \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                    e[e' / a] : \\<tau>\\<^sub>1\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Lam x\n                   e[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 3. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 4. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>'; atom y \\<sharp> a; atom y \\<sharp> e';\n        atom y \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom y \\<sharp> \\<Gamma>'(a $$:= \\<tau>'); atom y \\<sharp> x;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n    \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                \\<tau>\\<^sub>2) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W Lam y\n                e[ba / b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Rec x\n                   (Lam y e)[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n        \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                               \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                             \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                    e[e' / a] : \\<tau>\\<^sub>1\nA total of 15 subgoals...", "case (jw_Lam x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e[?ba / ?b] : \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (15 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>x \\<tau>\\<^sub>1 e \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Lam x\n                   e[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 3. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 4. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 5. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>'; atom y \\<sharp> a; atom y \\<sharp> e';\n        atom y \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom y \\<sharp> \\<Gamma>'(a $$:= \\<tau>'); atom y \\<sharp> x;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n    \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                \\<tau>\\<^sub>2) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W Lam y\n                e[ba / b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Rec x\n                   (Lam y e)[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 9. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n        \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                               \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                             \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                    e[e' / a] : \\<tau>\\<^sub>1\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e[?ba / ?b] : \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e[?ba / ?b] : \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile>\\<^sub>W Lam x\n                                   e[e' / a] : Fun \\<tau>\\<^sub>1\n          \\<tau>\\<^sub>2", "by (fastforce simp: fmupd_reorder_neq)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>W Lam x\n                                 e[e' / a] : Fun \\<tau>\\<^sub>1\n        \\<tau>\\<^sub>2\n\ngoal (14 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>'; atom y \\<sharp> a; atom y \\<sharp> e';\n        atom y \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom y \\<sharp> \\<Gamma>'(a $$:= \\<tau>'); atom y \\<sharp> x;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n    \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                \\<tau>\\<^sub>2) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W Lam y\n                e[ba / b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Rec x\n                   (Lam y e)[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 8. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                   e[e' / a] : \\<tau>\\<^sub>1\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n        \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                               \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                             \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj2\n                    e[e' / a] : \\<tau>\\<^sub>2\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>'; atom y \\<sharp> a; atom y \\<sharp> e';\n        atom y \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom y \\<sharp> \\<Gamma>'(a $$:= \\<tau>'); atom y \\<sharp> x;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n    \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                \\<tau>\\<^sub>2) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W Lam y\n                e[ba / b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Rec x\n                   (Lam y e)[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 8. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                   e[e' / a] : \\<tau>\\<^sub>1\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n        \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                               \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                             \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj2\n                    e[e' / a] : \\<tau>\\<^sub>2\nA total of 14 subgoals...", "case (jw_Rec x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e)"], ["proof (state)\nthis:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> a\n  atom y \\<sharp> e'\n  atom y \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom y \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom y \\<sharp> x\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam\n                                   y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n      \\<tau>\\<^sub>2) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W Lam y\n        e[?ba / ?b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (14 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 4. \\<And>x y \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e a e' \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>'; atom y \\<sharp> a; atom y \\<sharp> e';\n        atom y \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom y \\<sharp> \\<Gamma>'(a $$:= \\<tau>'); atom y \\<sharp> x;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n    \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam y\n    e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                \\<tau>\\<^sub>2) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W Lam y\n                e[ba / b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Rec x\n                   (Lam y e)[e' / a] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 8. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                   e[e' / a] : \\<tau>\\<^sub>1\n 10. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n        \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                               \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                             \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj2\n                    e[e' / a] : \\<tau>\\<^sub>2\nA total of 14 subgoals...", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> a\n  atom y \\<sharp> e'\n  atom y \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom y \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom y \\<sharp> x\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam\n                                   y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n      \\<tau>\\<^sub>2) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W Lam y\n        e[?ba / ?b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom y \\<sharp> a\n  atom y \\<sharp> e'\n  atom y \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom y \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom y \\<sharp> x\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n                                   \\<tau>\\<^sub>2) \\<turnstile>\\<^sub>W Lam\n                                   y e : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= Fun \\<tau>\\<^sub>1\n      \\<tau>\\<^sub>2) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W Lam y\n        e[?ba / ?b] : Fun \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile>\\<^sub>W Rec x\n                                   (Lam y\n                                     e)[e' / a] : Fun \\<tau>\\<^sub>1\n             \\<tau>\\<^sub>2", "by (fastforce simp: fmupd_reorder_neq)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>W Rec x\n                                 (Lam y\n                                   e)[e' / a] : Fun \\<tau>\\<^sub>1\n           \\<tau>\\<^sub>2\n\ngoal (13 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 7. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                   e[e' / a] : \\<tau>\\<^sub>1\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj2\n                   e[e' / a] : \\<tau>\\<^sub>2\n 10. \\<And>\\<alpha> e \\<tau> a e' \\<Gamma>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> a; atom \\<alpha> \\<sharp> e';\n         atom \\<alpha> \\<sharp> \\<Gamma>';\n         atom \\<alpha> \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n         \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : subst_type\n                       \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : subst_type\n                             \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Roll\n                    e[e' / a] : Mu \\<alpha> \\<tau>\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 7. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                   e[e' / a] : \\<tau>\\<^sub>1\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj2\n                   e[e' / a] : \\<tau>\\<^sub>2\n 10. \\<And>\\<alpha> e \\<tau> a e' \\<Gamma>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> a; atom \\<alpha> \\<sharp> e';\n         atom \\<alpha> \\<sharp> \\<Gamma>';\n         atom \\<alpha> \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n         \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : subst_type\n                       \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : subst_type\n                             \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Roll\n                    e[e' / a] : Mu \\<alpha> \\<tau>\nA total of 13 subgoals...", "case (jw_Let x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2)"], ["proof (state)\nthis:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma>(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>') = ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e\\<^sub>1[?ba / ?b] : \\<tau>\\<^sub>1\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e\\<^sub>2[?ba / ?b] : \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (13 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 3. \\<And>x e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> a; atom x \\<sharp> e';\n        atom x \\<sharp> \\<Gamma>';\n        atom x \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        atom x \\<sharp> e\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n                    bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1\n                   x e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n 4. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 6. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 7. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                   e[e' / a] : \\<tau>\\<^sub>1\n 9. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj2\n                   e[e' / a] : \\<tau>\\<^sub>2\n 10. \\<And>\\<alpha> e \\<tau> a e' \\<Gamma>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> a; atom \\<alpha> \\<sharp> e';\n         atom \\<alpha> \\<sharp> \\<Gamma>';\n         atom \\<alpha> \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n         \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : subst_type\n                       \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : subst_type\n                             \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Roll\n                    e[e' / a] : Mu \\<alpha> \\<tau>\nA total of 13 subgoals...", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma>(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>') = ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e\\<^sub>1[?ba / ?b] : \\<tau>\\<^sub>1\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e\\<^sub>2[?ba / ?b] : \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> a\n  atom x \\<sharp> e'\n  atom x \\<sharp> \\<Gamma>\n  atom x \\<sharp> \\<Gamma>(a $$:= \\<tau>')\n  atom x \\<sharp> e\\<^sub>1\n  \\<Gamma>(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>') = ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e\\<^sub>1[?ba / ?b] : \\<tau>\\<^sub>1\n  \\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2\n  \\<lbrakk>\\<Gamma>(a $$:= \\<tau>')(x $$:= \\<tau>\\<^sub>1) =\n           ?bb(?b $$:= \\<tau>');\n   {$$} \\<turnstile>\\<^sub>W ?ba : \\<tau>'\\<rbrakk>\n  \\<Longrightarrow> ?bb \\<turnstile>\\<^sub>W e\\<^sub>2[?ba / ?b] : \\<tau>\\<^sub>2\n  {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2", "by (fastforce simp: fmupd_reorder_neq)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                 e\\<^sub>2[e' / a] : \\<tau>\\<^sub>2\n\ngoal (12 subgoals):\n 1. \\<And>a e' \\<Gamma>'.\n       {$$} \\<turnstile>\\<^sub>W e' : \\<tau>' \\<Longrightarrow>\n       \\<Gamma>' \\<turnstile>\\<^sub>W Unit[e' / a] : One\n 2. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e' a e'a \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Fun\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Fun\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e' : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e'[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e'a : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W App e\n                   e'[e'a / a] : \\<tau>\\<^sub>2\n 3. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>1;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj1\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 4. \\<And>e \\<tau>\\<^sub>2 \\<tau>\\<^sub>1 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Inj2\n                   e[e' / a] : Syntax.Sum \\<tau>\\<^sub>1 \\<tau>\\<^sub>2\n 5. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 e\\<^sub>1 \\<tau> e\\<^sub>2 a e'\n       \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Sum\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Sum\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : Fun\n                              \\<tau>\\<^sub>1 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : Fun\n                                    \\<tau>\\<^sub>1 \\<tau>;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : Fun\n                              \\<tau>\\<^sub>2 \\<tau>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : Fun\n                                    \\<tau>\\<^sub>2 \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                   e\\<^sub>2[e' / a] : \\<tau>\n 6. \\<And>e\\<^sub>1 \\<tau>\\<^sub>1 e\\<^sub>2 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau>\\<^sub>1;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>1[ba / b] : \\<tau>\\<^sub>1;\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e\\<^sub>2[ba / b] : \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Syntax.Pair\n                   e\\<^sub>1\n                   e\\<^sub>2[e' / a] : Syntax.Prod \\<tau>\\<^sub>1\n  \\<tau>\\<^sub>2\n 7. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj1\n                   e[e' / a] : \\<tau>\\<^sub>1\n 8. \\<And>e \\<tau>\\<^sub>1 \\<tau>\\<^sub>2 a e' \\<Gamma>'.\n       \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Syntax.Prod\n                              \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Syntax.Prod\n                            \\<tau>\\<^sub>1 \\<tau>\\<^sub>2;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Prj2\n                   e[e' / a] : \\<tau>\\<^sub>2\n 9. \\<And>\\<alpha> e \\<tau> a e' \\<Gamma>'.\n       \\<lbrakk>atom \\<alpha> \\<sharp> a; atom \\<alpha> \\<sharp> e';\n        atom \\<alpha> \\<sharp> \\<Gamma>';\n        atom \\<alpha> \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n        \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : subst_type \\<tau>\n                      (Mu \\<alpha> \\<tau>) \\<alpha>;\n        \\<And>b ba bb.\n           \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n            {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n           \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : subst_type\n                            \\<tau> (Mu \\<alpha> \\<tau>) \\<alpha>;\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Roll\n                   e[e' / a] : Mu \\<alpha> \\<tau>\n 10. \\<And>\\<alpha> e \\<tau> a e' \\<Gamma>'.\n        \\<lbrakk>atom \\<alpha> \\<sharp> a; atom \\<alpha> \\<sharp> e';\n         atom \\<alpha> \\<sharp> \\<Gamma>';\n         atom \\<alpha> \\<sharp> \\<Gamma>'(a $$:= \\<tau>');\n         \\<Gamma>'(a $$:= \\<tau>') \\<turnstile>\\<^sub>W e : Mu \\<alpha>\n                       \\<tau>;\n         \\<And>b ba bb.\n            \\<lbrakk>\\<Gamma>'(a $$:= \\<tau>') = bb(b $$:= \\<tau>');\n             {$$} \\<turnstile>\\<^sub>W ba : \\<tau>'\\<rbrakk>\n            \\<Longrightarrow> bb \\<turnstile>\\<^sub>W e[ba / b] : Mu\n                             \\<alpha> \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W e' : \\<tau>'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>' \\<turnstile>\\<^sub>W Unroll\n                    e[e' / a] : subst_type \\<tau> (Mu \\<alpha> \\<tau>)\n                                 \\<alpha>\nA total of 12 subgoals...", "qed fastforce+"], ["", "lemma type_preservation:\n  assumes \"\\<lless> [], e \\<ggreater> I\\<rightarrow> \\<lless> [], e' \\<ggreater>\" \"{$$} \\<turnstile>\\<^sub>W e : \\<tau>\"\n  shows   \"{$$} \\<turnstile>\\<^sub>W e' : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W e' : \\<tau>", "using assms [[simproc del: alpha_lst]]"], ["proof (prove)\nusing this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W e' : \\<tau>", "proof (nominal_induct \"[]::proofstream\" e I \"[]::proofstream\" e' arbitrary: \\<tau> rule: smallstep.strong_induct)"], ["proof (state)\ngoal (24 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W App (Lam x e) v : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W App (Rec x e) v : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App (e[Rec x e / x])\n              v : \\<tau>\n 5. \\<And>x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> e\\<^sub>1';\n        atom x \\<sharp> []; atom x \\<sharp> [];\n        \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x\n              e\\<^sub>2 : \\<tau>\n 6. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 7. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 8. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 9. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n        \\<lbrakk>value v;\n         {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\nA total of 24 subgoals...", "case (s_AppLam v x e)"], ["proof (state)\nthis:\n  value v\n  atom x \\<sharp> v\n  atom x \\<sharp> []\n  {$$} \\<turnstile>\\<^sub>W App (Lam x e) v : \\<tau>\n\ngoal (24 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W App (Lam x e) v : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W App (Rec x e) v : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App (e[Rec x e / x])\n              v : \\<tau>\n 5. \\<And>x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> e\\<^sub>1';\n        atom x \\<sharp> []; atom x \\<sharp> [];\n        \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x\n              e\\<^sub>2 : \\<tau>\n 6. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 7. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 8. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 9. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n        \\<lbrakk>value v;\n         {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\nA total of 24 subgoals...", "then"], ["proof (chain)\npicking this:\n  value v\n  atom x \\<sharp> v\n  atom x \\<sharp> []\n  {$$} \\<turnstile>\\<^sub>W App (Lam x e) v : \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  value v\n  atom x \\<sharp> v\n  atom x \\<sharp> []\n  {$$} \\<turnstile>\\<^sub>W App (Lam x e) v : \\<tau>\n\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>", "by force"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n\ngoal (23 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W App (Rec x e) v : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App (e[Rec x e / x])\n              v : \\<tau>\n 4. \\<And>x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> e\\<^sub>1';\n        atom x \\<sharp> []; atom x \\<sharp> [];\n        \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x\n              e\\<^sub>2 : \\<tau>\n 5. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 6. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 7. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 8. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 9. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 10. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n        \\<lbrakk>value v;\n         {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\nA total of 23 subgoals...", "next"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W App (Rec x e) v : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App (e[Rec x e / x])\n              v : \\<tau>\n 4. \\<And>x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> e\\<^sub>1';\n        atom x \\<sharp> []; atom x \\<sharp> [];\n        \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x\n              e\\<^sub>2 : \\<tau>\n 5. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 6. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 7. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 8. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 9. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 10. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n        \\<lbrakk>value v;\n         {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\nA total of 23 subgoals...", "case (s_AppRec v x e)"], ["proof (state)\nthis:\n  value v\n  atom x \\<sharp> v\n  atom x \\<sharp> []\n  {$$} \\<turnstile>\\<^sub>W App (Rec x e) v : \\<tau>\n\ngoal (23 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W App (Rec x e) v : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App (e[Rec x e / x])\n              v : \\<tau>\n 4. \\<And>x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> e\\<^sub>1';\n        atom x \\<sharp> []; atom x \\<sharp> [];\n        \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x\n              e\\<^sub>2 : \\<tau>\n 5. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 6. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 7. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 8. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 9. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 10. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n        \\<lbrakk>value v;\n         {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\nA total of 23 subgoals...", "then"], ["proof (chain)\npicking this:\n  value v\n  atom x \\<sharp> v\n  atom x \\<sharp> []\n  {$$} \\<turnstile>\\<^sub>W App (Rec x e) v : \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  value v\n  atom x \\<sharp> v\n  atom x \\<sharp> []\n  {$$} \\<turnstile>\\<^sub>W App (Rec x e) v : \\<tau>\n\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W App (e[Rec x e / x]) v : \\<tau>", "by (elim jw_App_inv jw_Rec_inv) (auto 0 3 simp del: subst_term.simps)"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W App (e[Rec x e / x]) v : \\<tau>\n\ngoal (22 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> e\\<^sub>1';\n        atom x \\<sharp> []; atom x \\<sharp> [];\n        \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x\n              e\\<^sub>2 : \\<tau>\n 4. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 6. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 7. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 9. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 10. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n        \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n               e\\<^sub>2 : \\<tau>\nA total of 22 subgoals...", "next"], ["proof (state)\ngoal (22 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> e\\<^sub>1';\n        atom x \\<sharp> []; atom x \\<sharp> [];\n        \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x\n              e\\<^sub>2 : \\<tau>\n 4. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 6. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 7. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 9. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 10. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n        \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n               e\\<^sub>2 : \\<tau>\nA total of 22 subgoals...", "case (s_Let1 x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2)"], ["proof (state)\nthis:\n  atom x \\<sharp> e\\<^sub>1\n  atom x \\<sharp> e\\<^sub>1'\n  atom x \\<sharp> []\n  atom x \\<sharp> []\n  \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x e\\<^sub>2 : \\<tau>\n\ngoal (22 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>x e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>atom x \\<sharp> e\\<^sub>1; atom x \\<sharp> e\\<^sub>1';\n        atom x \\<sharp> []; atom x \\<sharp> [];\n        \\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x\n              e\\<^sub>2 : \\<tau>\n 4. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 6. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 7. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 9. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 10. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n        \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n               e\\<^sub>2 : \\<tau>\nA total of 22 subgoals...", "from s_Let1(1,2,7)"], ["proof (chain)\npicking this:\n  atom x \\<sharp> e\\<^sub>1\n  atom x \\<sharp> e\\<^sub>1'\n  {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x e\\<^sub>2 : \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> e\\<^sub>1\n  atom x \\<sharp> e\\<^sub>1'\n  {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1 x e\\<^sub>2 : \\<tau>\n\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x e\\<^sub>2 : \\<tau>", "by (auto intro: s_Let1(6) del: jw_Let_inv elim!: jw_Let_inv)"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W Syntax.Let e\\<^sub>1' x e\\<^sub>2 : \\<tau>\n\ngoal (21 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 21 subgoals...", "next"], ["proof (state)\ngoal (21 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 21 subgoals...", "case (s_Unroll e e')"], ["proof (state)\nthis:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Unroll e : \\<tau>\n\ngoal (21 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 21 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Unroll e : \\<tau>", "obtain \\<alpha>::tvar where \"atom \\<alpha> \\<sharp> \\<tau>\""], ["proof (prove)\nusing this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Unroll e : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>.\n        atom \\<alpha> \\<sharp> \\<tau> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using obtain_fresh"], ["proof (prove)\nusing this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Unroll e : \\<tau>\n  (\\<And>a. atom a \\<sharp> ?x \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>.\n        atom \\<alpha> \\<sharp> \\<tau> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  atom \\<alpha> \\<sharp> \\<tau>\n\ngoal (21 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 21 subgoals...", "with s_Unroll"], ["proof (chain)\npicking this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Unroll e : \\<tau>\n  atom \\<alpha> \\<sharp> \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Unroll e : \\<tau>\n  atom \\<alpha> \\<sharp> \\<tau>\n\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W Unroll e' : \\<tau>", "by (auto elim: jw_Unroll_inv[where \\<alpha> = \\<alpha>])"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W Unroll e' : \\<tau>\n\ngoal (20 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 20 subgoals...", "next"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 20 subgoals...", "case (s_Roll e e')"], ["proof (state)\nthis:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Roll e : \\<tau>\n\ngoal (20 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 20 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Roll e : \\<tau>", "obtain \\<alpha>::tvar where \"atom \\<alpha> \\<sharp> \\<tau>\""], ["proof (prove)\nusing this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Roll e : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>.\n        atom \\<alpha> \\<sharp> \\<tau> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using obtain_fresh"], ["proof (prove)\nusing this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Roll e : \\<tau>\n  (\\<And>a. atom a \\<sharp> ?x \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>.\n        atom \\<alpha> \\<sharp> \\<tau> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  atom \\<alpha> \\<sharp> \\<tau>\n\ngoal (20 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 20 subgoals...", "with s_Roll"], ["proof (chain)\npicking this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Roll e : \\<tau>\n  atom \\<alpha> \\<sharp> \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n  {$$} \\<turnstile>\\<^sub>W e : ?\\<tau> \\<Longrightarrow>\n  {$$} \\<turnstile>\\<^sub>W e' : ?\\<tau>\n  {$$} \\<turnstile>\\<^sub>W Roll e : \\<tau>\n  atom \\<alpha> \\<sharp> \\<tau>\n\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W Roll e' : \\<tau>", "by (auto elim: jw_Roll_inv[where \\<alpha> = \\<alpha>])"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W Roll e' : \\<tau>\n\ngoal (19 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 19 subgoals...", "next"], ["proof (state)\ngoal (19 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 19 subgoals...", "case (s_UnrollRoll v)"], ["proof (state)\nthis:\n  value v\n  {$$} \\<turnstile>\\<^sub>W Unroll (Roll v) : \\<tau>\n\ngoal (19 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 19 subgoals...", "then"], ["proof (chain)\npicking this:\n  value v\n  {$$} \\<turnstile>\\<^sub>W Unroll (Roll v) : \\<tau>", "obtain \\<alpha>::tvar where \"atom \\<alpha> \\<sharp> \\<tau>\""], ["proof (prove)\nusing this:\n  value v\n  {$$} \\<turnstile>\\<^sub>W Unroll (Roll v) : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>.\n        atom \\<alpha> \\<sharp> \\<tau> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using obtain_fresh"], ["proof (prove)\nusing this:\n  value v\n  {$$} \\<turnstile>\\<^sub>W Unroll (Roll v) : \\<tau>\n  (\\<And>a. atom a \\<sharp> ?x \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>.\n        atom \\<alpha> \\<sharp> \\<tau> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  atom \\<alpha> \\<sharp> \\<tau>\n\ngoal (19 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 19 subgoals...", "with s_UnrollRoll"], ["proof (chain)\npicking this:\n  value v\n  {$$} \\<turnstile>\\<^sub>W Unroll (Roll v) : \\<tau>\n  atom \\<alpha> \\<sharp> \\<tau>", "show ?case"], ["proof (prove)\nusing this:\n  value v\n  {$$} \\<turnstile>\\<^sub>W Unroll (Roll v) : \\<tau>\n  atom \\<alpha> \\<sharp> \\<tau>\n\ngoal (1 subgoal):\n 1. {$$} \\<turnstile>\\<^sub>W v : \\<tau>", "by (fastforce simp: Abs1_eq(3) elim: jw_Roll_inv[where \\<alpha> = \\<alpha>] jw_Unroll_inv[where \\<alpha> = \\<alpha>])"], ["proof (state)\nthis:\n  {$$} \\<turnstile>\\<^sub>W v : \\<tau>\n\ngoal (18 subgoals):\n 1. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 2. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n       \\<lbrakk>value v\\<^sub>1;\n        \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1 e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App v\\<^sub>1\n              e\\<^sub>2' : \\<tau>\n 3. \\<And>v x e \\<tau>.\n       \\<lbrakk>value v; atom x \\<sharp> v; atom x \\<sharp> [];\n        {$$} \\<turnstile>\\<^sub>W Syntax.Let v x e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W e[v / x] : \\<tau>\n 4. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj1 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj1 e' : \\<tau>\n 5. \\<And>e e' \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Inj2 e : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Inj2 e' : \\<tau>\n 6. \\<And>e e' e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Case e e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Case e' e\\<^sub>1\n              e\\<^sub>2 : \\<tau>\n 7. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj1 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>1 v : \\<tau>\n 8. \\<And>v e\\<^sub>1 e\\<^sub>2 \\<tau>.\n       \\<lbrakk>value v;\n        {$$} \\<turnstile>\\<^sub>W Case (Inj2 v) e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W App e\\<^sub>2 v : \\<tau>\n 9. \\<And>e\\<^sub>1 e\\<^sub>1' e\\<^sub>2 \\<tau>.\n       \\<lbrakk>\\<lless>[], e\\<^sub>1\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>1'\\<ggreater>;\n        \\<And>\\<tau>.\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1 : \\<tau> \\<Longrightarrow>\n           {$$} \\<turnstile>\\<^sub>W e\\<^sub>1' : \\<tau>;\n        {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1\n                                   e\\<^sub>2 : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair e\\<^sub>1'\n              e\\<^sub>2 : \\<tau>\n 10. \\<And>v\\<^sub>1 e\\<^sub>2 e\\<^sub>2' \\<tau>.\n        \\<lbrakk>value v\\<^sub>1;\n         \\<lless>[], e\\<^sub>2\\<ggreater> I\\<rightarrow> \\<lless>[], e\\<^sub>2'\\<ggreater>;\n         \\<And>\\<tau>.\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2 : \\<tau> \\<Longrightarrow>\n            {$$} \\<turnstile>\\<^sub>W e\\<^sub>2' : \\<tau>;\n         {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n                                    e\\<^sub>2 : \\<tau>\\<rbrakk>\n        \\<Longrightarrow> {$$} \\<turnstile>\\<^sub>W Syntax.Pair v\\<^sub>1\n               e\\<^sub>2' : \\<tau>\nA total of 18 subgoals...", "qed fastforce+"], ["", "subsection \\<open>Corrected Lemma 1 from Miller et al.~\\cite{adsg}: Weak Type Soundness\\<close>"], ["", "lemma type_soundness:\n  assumes \"{$$} \\<turnstile>\\<^sub>W e : \\<tau>\"\n  shows   \"value e \\<or> (\\<exists>e'. \\<lless> [], e \\<ggreater> I\\<rightarrow> \\<lless> [], e' \\<ggreater> \\<and> {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "proof (cases \"value e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. value e \\<Longrightarrow>\n    value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)\n 2. \\<not> value e \\<Longrightarrow>\n    value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "case True"], ["proof (state)\nthis:\n  value e\n\ngoal (2 subgoals):\n 1. value e \\<Longrightarrow>\n    value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)\n 2. \\<not> value e \\<Longrightarrow>\n    value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "then"], ["proof (chain)\npicking this:\n  value e", "show ?thesis"], ["proof (prove)\nusing this:\n  value e\n\ngoal (1 subgoal):\n 1. value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "by simp"], ["proof (state)\nthis:\n  value e \\<or>\n  (\\<exists>e'.\n      \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n      {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<not> value e \\<Longrightarrow>\n    value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> value e \\<Longrightarrow>\n    value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "case False"], ["proof (state)\nthis:\n  \\<not> value e\n\ngoal (1 subgoal):\n 1. \\<not> value e \\<Longrightarrow>\n    value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "with assms"], ["proof (chain)\npicking this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n  \\<not> value e", "obtain e' where \"\\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\""], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n  \\<not> value e\n\ngoal (1 subgoal):\n 1. (\\<And>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: type_progress)"], ["proof (state)\nthis:\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n\ngoal (1 subgoal):\n 1. \\<not> value e \\<Longrightarrow>\n    value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "with assms"], ["proof (chain)\npicking this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>", "show ?thesis"], ["proof (prove)\nusing this:\n  {$$} \\<turnstile>\\<^sub>W e : \\<tau>\n  \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater>\n\ngoal (1 subgoal):\n 1. value e \\<or>\n    (\\<exists>e'.\n        \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n        {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)", "by (auto simp: type_preservation)"], ["proof (state)\nthis:\n  value e \\<or>\n  (\\<exists>e'.\n      \\<lless>[], e\\<ggreater> I\\<rightarrow> \\<lless>[], e'\\<ggreater> \\<and>\n      {$$} \\<turnstile>\\<^sub>W e' : \\<tau>)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}