{"file_name": "/home/qj213/afp-2021-10-22/thys/LambdaAuth/Nominal2_Lemmas.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LambdaAuth", "problem_names": ["lemma fresh_star_Nil[simp]: \"{} \\<sharp>* t\"", "lemma supp_flip[simp]:\n  fixes a b :: \"_ :: at\"\n  shows \"supp (a \\<leftrightarrow> b) = (if a = b then {} else {atom a, atom b})\"", "lemma Abs_lst_eq_flipI:\n  fixes a b :: \"_ :: at\" and t :: \"_ :: fs\"\n  assumes \"atom b \\<sharp> t\"\n  shows \"[[atom a]]lst. t = [[atom b]]lst. (a \\<leftrightarrow> b) \\<bullet> t\"", "lemma atom_not_fresh_eq:\n  assumes \"\\<not> atom a \\<sharp> x\"\n  shows   \"a = x\"", "lemma fresh_set_fresh_forall:\n  shows \"atom y \\<sharp> xs = (\\<forall>x \\<in> set xs. atom y \\<sharp> x)\"", "lemma finite_fresh_set_fresh_all[simp]:\n  fixes S :: \"(_ :: fs) set\"\n  shows \"finite S \\<Longrightarrow> atom a \\<sharp> S \\<longleftrightarrow> (\\<forall>x \\<in> S. atom a \\<sharp> x)\"", "lemma case_option_eqvt[eqvt]:\n  \"p \\<bullet> case_option a b opt = case_option (p \\<bullet> a) (p \\<bullet> b) (p \\<bullet> opt)\""], "translations": [["", "lemma fresh_star_Nil[simp]: \"{} \\<sharp>* t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<sharp>* t", "unfolding fresh_star_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>{}. a \\<sharp> t", "by auto"], ["", "lemma supp_flip[simp]:\n  fixes a b :: \"_ :: at\"\n  shows \"supp (a \\<leftrightarrow> b) = (if a = b then {} else {atom a, atom b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (a \\<leftrightarrow> b) = (if a = b then {} else {atom a, atom b})", "by (auto simp: flip_def supp_swap)"], ["", "lemma Abs_lst_eq_flipI:\n  fixes a b :: \"_ :: at\" and t :: \"_ :: fs\"\n  assumes \"atom b \\<sharp> t\"\n  shows \"[[atom a]]lst. t = [[atom b]]lst. (a \\<leftrightarrow> b) \\<bullet> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[atom a]]lst. t = [[atom b]]lst. (a \\<leftrightarrow> b) \\<bullet> t", "by (metis Abs1_eq_iff(3) assms flip_commute flip_def swap_fresh_fresh)"], ["", "lemma atom_not_fresh_eq:\n  assumes \"\\<not> atom a \\<sharp> x\"\n  shows   \"a = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = x", "using assms atom_eq_iff fresh_ineq_at_base"], ["proof (prove)\nusing this:\n  \\<not> atom a \\<sharp> x\n  (atom ?a = atom ?b) = (?a = ?b)\n  ?a \\<noteq> atom ?b \\<Longrightarrow> ?a \\<sharp> ?b\n\ngoal (1 subgoal):\n 1. a = x", "by blast"], ["", "lemma fresh_set_fresh_forall:\n  shows \"atom y \\<sharp> xs = (\\<forall>x \\<in> set xs. atom y \\<sharp> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom y \\<sharp> xs = (\\<forall>x\\<in>set xs. atom y \\<sharp> x)", "by (induct xs) (simp_all add: fresh_Cons)"], ["", "lemma finite_fresh_set_fresh_all[simp]:\n  fixes S :: \"(_ :: fs) set\"\n  shows \"finite S \\<Longrightarrow> atom a \\<sharp> S \\<longleftrightarrow> (\\<forall>x \\<in> S. atom a \\<sharp> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S \\<Longrightarrow>\n    atom a \\<sharp> S = (\\<forall>x\\<in>S. atom a \\<sharp> x)", "unfolding fresh_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S \\<Longrightarrow>\n    (atom a \\<notin> supp S) = (\\<forall>x\\<in>S. atom a \\<notin> supp x)", "by (simp add: supp_of_finite_sets)"], ["", "lemma case_option_eqvt[eqvt]:\n  \"p \\<bullet> case_option a b opt = case_option (p \\<bullet> a) (p \\<bullet> b) (p \\<bullet> opt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> (case opt of None \\<Rightarrow> a\n                 | Some x \\<Rightarrow> b x) =\n    (case p \\<bullet> opt of None \\<Rightarrow> p \\<bullet> a\n     | Some x \\<Rightarrow> (p \\<bullet> b) x)", "by (cases opt) auto"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}