{"file_name": "/home/qj213/afp-2021-10-22/thys/Neumann_Morgenstern_Utility/Expected_Utility.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Neumann_Morgenstern_Utility", "problem_names": ["lemma vNM_utilityD:\n  shows \"relation \\<subseteq> (lotteries_on outcomes \\<times> lotteries_on outcomes)\"\n    and \"p \\<in> lotteries_on outcomes \\<Longrightarrow> q \\<in> lotteries_on outcomes \\<Longrightarrow> \n    p \\<succeq>[relation] q \\<longleftrightarrow> measure_pmf.expectation p u \\<ge> measure_pmf.expectation q u\"", "lemma not_outside:\n  assumes \"p \\<succeq>[relation] q\"\n  shows \"p \\<in> lotteries_on outcomes\"\n    and \"q \\<in> lotteries_on outcomes\"", "lemma utility_ge:\n  assumes \"p \\<succeq>[relation] q\"\n  shows \"measure_pmf.expectation p u \\<ge> measure_pmf.expectation q u\"", "lemma strict_preference_iff_strict_utility:\n assumes \"p \\<in> lotteries_on outcomes\" \n assumes \"q \\<in> lotteries_on outcomes\"\n shows \"p \\<succ>[relation] q \\<longleftrightarrow> measure_pmf.expectation p u > measure_pmf.expectation q u\"", "lemma pos_distrib_left:\n  assumes \"c > 0\"\n  shows \"(\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) = c * (\\<Sum>z\\<in>outcomes. pmf q z * (u z))\"", "lemma sum_pmf_util_commute:\n  \"(\\<Sum>a\\<in>outcomes. pmf p a * u a) = (\\<Sum>a\\<in>outcomes. u a * pmf p a)\"", "lemma sum_equals_pmf_expectation:\n  assumes \"p \\<in> lotteries_on outcomes\"\n  shows\"(\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)) = measure_pmf.expectation p u\"", "lemma expected_utility_weak_preference:\n  assumes \"p \\<in> lotteries_on outcomes\" \n    and \"q \\<in> lotteries_on outcomes\"\n  shows   \"p \\<succeq>[relation] q \\<longleftrightarrow> (\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)) \\<ge> (\\<Sum>z\\<in>outcomes. (pmf q z) * (u z))\"", "lemma diff_leq_zero_weak_preference:\n  assumes \"p \\<in> lotteries_on outcomes\"\n    and \"q \\<in> lotteries_on outcomes\"\n  shows \"p \\<succeq> q \\<longleftrightarrow> ((\\<Sum>a\\<in>outcomes. pmf q a * u a) - (\\<Sum>a\\<in>outcomes. pmf p a * u a) \\<le> 0)\"", "lemma expected_utility_strict_preference:\n  assumes \"p \\<in> lotteries_on outcomes\" \n    and \"q \\<in> lotteries_on outcomes\"\n  shows   \"p \\<succ>[relation] q \\<longleftrightarrow> measure_pmf.expectation p u > measure_pmf.expectation q u\"", "lemma scale_pos_left: \n  assumes \"c > 0\" \n  shows \"vNM_utility outcomes relation (\\<lambda>x. c * u x)\"", "lemma strict_alt_def:\n  assumes \"p \\<in> lotteries_on outcomes\" \n    and \"q \\<in> lotteries_on outcomes\"\n  shows \"p \\<succ>[relation] q \\<longleftrightarrow> \n            (\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)) > (\\<Sum>z\\<in>outcomes. (pmf q z) * (u z))\"", "lemma strict_alt_def_utility_g:\n  assumes \"p \\<succ>[relation] q\"\n  shows \"(\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)) > (\\<Sum>z\\<in>outcomes. (pmf q z) * (u z))\"", "lemma vnm_utility_is_ordinal_utility:\n  assumes \"vNM_utility outcomes relation u\"\n  shows \"ordinal_utility (lotteries_on outcomes) relation (\\<lambda>p. measure_pmf.expectation p u)\"", "lemma vnm_utility_imp_reational_prefs:\n  assumes \"vNM_utility outcomes relation u\"\n  shows \"rational_preference (lotteries_on outcomes) relation\"", "theorem expected_utilty_theorem_form_vnm_utility:\n  assumes fnt: \"finite outcomes\" and \"outcomes \\<noteq> {}\"\n  shows \"rational_preference (lotteries_on outcomes) \\<R> \\<and> \n         independent_vnm (lotteries_on outcomes) \\<R> \\<and> \n         continuous_vnm (lotteries_on outcomes) \\<R> \\<longleftrightarrow> \n         (\\<exists>u. vNM_utility outcomes \\<R> u)\""], "translations": [["", "lemma vNM_utilityD:\n  shows \"relation \\<subseteq> (lotteries_on outcomes \\<times> lotteries_on outcomes)\"\n    and \"p \\<in> lotteries_on outcomes \\<Longrightarrow> q \\<in> lotteries_on outcomes \\<Longrightarrow> \n    p \\<succeq>[relation] q \\<longleftrightarrow> measure_pmf.expectation p u \\<ge> measure_pmf.expectation q u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. relation \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes &&&\n    (\\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n     \\<Longrightarrow> p \\<succeq>[relation] q =\n                       (measure_pmf.expectation q u\n                        \\<le> measure_pmf.expectation p u))", "using vNM_utility_axioms vNM_utility_def"], ["proof (prove)\nusing this:\n  vNM_utility outcomes relation u\n  vNM_utility ?outcomes ?relation ?u \\<equiv>\n  ?relation \\<subseteq> \\<P> ?outcomes \\<times> \\<P> ?outcomes \\<and>\n  (\\<forall>p q.\n      p \\<in> \\<P> ?outcomes \\<longrightarrow>\n      q \\<in> \\<P> ?outcomes \\<longrightarrow>\n      p \\<succeq>[?relation] q =\n      (measure_pmf.expectation q ?u \\<le> measure_pmf.expectation p ?u))\n\ngoal (1 subgoal):\n 1. relation \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes &&&\n    (\\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n     \\<Longrightarrow> p \\<succeq>[relation] q =\n                       (measure_pmf.expectation q u\n                        \\<le> measure_pmf.expectation p u))", "by (blast+)"], ["", "lemma not_outside:\n  assumes \"p \\<succeq>[relation] q\"\n  shows \"p \\<in> lotteries_on outcomes\"\n    and \"q \\<in> lotteries_on outcomes\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<P> outcomes &&& q \\<in> \\<P> outcomes", "proof (goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<in> \\<P> outcomes\n 2. q \\<in> \\<P> outcomes", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. p \\<in> \\<P> outcomes\n 2. q \\<in> \\<P> outcomes", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<P> outcomes", "by (meson assms contra_subsetD mem_Sigma_iff vNM_utility_axioms vNM_utility_def)"], ["proof (state)\nthis:\n  p \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. q \\<in> \\<P> outcomes", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<in> \\<P> outcomes", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. q \\<in> \\<P> outcomes", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> \\<P> outcomes", "by (metis assms mem_Sigma_iff subsetCE vNM_utility_axioms vNM_utility_def)"], ["proof (state)\nthis:\n  q \\<in> \\<P> outcomes\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma utility_ge:\n  assumes \"p \\<succeq>[relation] q\"\n  shows \"measure_pmf.expectation p u \\<ge> measure_pmf.expectation q u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation q u \\<le> measure_pmf.expectation p u", "using assms vNM_utility_axioms vNM_utility_def"], ["proof (prove)\nusing this:\n  p \\<succeq>[relation] q\n  vNM_utility outcomes relation u\n  vNM_utility ?outcomes ?relation ?u \\<equiv>\n  ?relation \\<subseteq> \\<P> ?outcomes \\<times> \\<P> ?outcomes \\<and>\n  (\\<forall>p q.\n      p \\<in> \\<P> ?outcomes \\<longrightarrow>\n      q \\<in> \\<P> ?outcomes \\<longrightarrow>\n      p \\<succeq>[?relation] q =\n      (measure_pmf.expectation q ?u \\<le> measure_pmf.expectation p ?u))\n\ngoal (1 subgoal):\n 1. measure_pmf.expectation q u \\<le> measure_pmf.expectation p u", "by (metis (no_types, lifting) not_outside(1) not_outside(2))"], ["", "end"], ["", "(* vNM_Utility *)"], ["", "sublocale vNM_utility \\<subseteq> ordinal_utility \"(lotteries_on outcomes)\" relation \"(\\<lambda>p. measure_pmf.expectation p u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordinal_utility (\\<P> outcomes) relation\n     (\\<lambda>p. measure_pmf.expectation p u)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<P> outcomes; y \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> x \\<succeq>[relation] y =\n                         (measure_pmf.expectation y u\n                          \\<le> measure_pmf.expectation x u)\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 3. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "case (2 x y)"], ["proof (state)\nthis:\n  x \\<succeq>[relation] y\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<P> outcomes; y \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> x \\<succeq>[relation] y =\n                         (measure_pmf.expectation y u\n                          \\<le> measure_pmf.expectation x u)\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 3. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "then"], ["proof (chain)\npicking this:\n  x \\<succeq>[relation] y", "show ?case"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n\ngoal (1 subgoal):\n 1. x \\<in> \\<P> outcomes", "using not_outside(1)"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n  ?p \\<succeq>[relation] ?q \\<Longrightarrow> ?p \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. x \\<in> \\<P> outcomes", "by blast"], ["proof (state)\nthis:\n  x \\<in> \\<P> outcomes\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<P> outcomes; y \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> x \\<succeq>[relation] y =\n                         (measure_pmf.expectation y u\n                          \\<le> measure_pmf.expectation x u)\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<P> outcomes; y \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> x \\<succeq>[relation] y =\n                         (measure_pmf.expectation y u\n                          \\<le> measure_pmf.expectation x u)\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "case (3 x y)"], ["proof (state)\nthis:\n  x \\<succeq>[relation] y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<P> outcomes; y \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> x \\<succeq>[relation] y =\n                         (measure_pmf.expectation y u\n                          \\<le> measure_pmf.expectation x u)\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "then"], ["proof (chain)\npicking this:\n  x \\<succeq>[relation] y", "show ?case"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n\ngoal (1 subgoal):\n 1. y \\<in> \\<P> outcomes", "by (auto simp add: not_outside(2))"], ["proof (state)\nthis:\n  y \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<P> outcomes; y \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> x \\<succeq>[relation] y =\n                         (measure_pmf.expectation y u\n                          \\<le> measure_pmf.expectation x u)", "qed (metis (mono_tags, lifting) vNM_utility_axioms vNM_utility_def)"], ["", "context vNM_utility\nbegin"], ["", "lemma strict_preference_iff_strict_utility:\n assumes \"p \\<in> lotteries_on outcomes\" \n assumes \"q \\<in> lotteries_on outcomes\"\n shows \"p \\<succ>[relation] q \\<longleftrightarrow> measure_pmf.expectation p u > measure_pmf.expectation q u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<succeq> q \\<and> (q, p) \\<notin> relation) =\n    (measure_pmf.expectation q u < measure_pmf.expectation p u)", "by (meson assms(1) assms(2) less_eq_real_def not_le util_def)"], ["", "lemma pos_distrib_left:\n  assumes \"c > 0\"\n  shows \"(\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) = c * (\\<Sum>z\\<in>outcomes. pmf q z * (u z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "have \"(\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) = (\\<Sum>z\\<in>outcomes. pmf q z * c * u z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    (\\<Sum>z\\<in>outcomes. pmf q z * c * u z)", "by (simp add: ab_semigroup_mult_class.mult_ac(1))"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n  (\\<Sum>z\\<in>outcomes. pmf q z * c * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "also"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n  (\\<Sum>z\\<in>outcomes. pmf q z * c * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "have \"... = (\\<Sum>z\\<in>outcomes. c * pmf q z *  u z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * c * u z) =\n    (\\<Sum>z\\<in>outcomes. c * pmf q z * u z)", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * c * u z) =\n  (\\<Sum>z\\<in>outcomes. c * pmf q z * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "also"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * c * u z) =\n  (\\<Sum>z\\<in>outcomes. c * pmf q z * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "have \"... = c * (\\<Sum>z\\<in>outcomes. pmf q z *  u z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. c * pmf q z * u z) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "by (simp add: ab_semigroup_mult_class.mult_ac(1) sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. c * pmf q z * u z) =\n  c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "."], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_pmf_util_commute:\n  \"(\\<Sum>a\\<in>outcomes. pmf p a * u a) = (\\<Sum>a\\<in>outcomes. u a * pmf p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>outcomes. pmf p a * u a) =\n    (\\<Sum>a\\<in>outcomes. u a * pmf p a)", "by (simp add: mult.commute)"], ["", "section \\<open> Finite outcomes \\<close>"], ["", "context\n  assumes fnt: \"finite outcomes\"\nbegin"], ["", "lemma sum_equals_pmf_expectation:\n  assumes \"p \\<in> lotteries_on outcomes\"\n  shows\"(\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)) = measure_pmf.expectation p u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u", "have fnt: \"finite outcomes\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite outcomes", "by (simp add: vNM_utilityD(1) fnt)"], ["proof (state)\nthis:\n  finite outcomes\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u", "have \"measure_pmf.expectation p u = (\\<Sum>a\\<in>outcomes. pmf p a * u a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation p u = (\\<Sum>a\\<in>outcomes. pmf p a * u a)", "using support_in_outcomes assms fnt integral_measure_pmf_real\n      sum_pmf_util_commute"], ["proof (prove)\nusing this:\n  \\<forall>oc. \\<forall>p\\<in>\\<P> oc. \\<forall>a\\<in>set_pmf p. a \\<in> oc\n  p \\<in> \\<P> outcomes\n  finite outcomes\n  \\<lbrakk>finite ?A;\n   \\<And>a.\n      \\<lbrakk>a \\<in> set_pmf ?M; ?f a \\<noteq> 0\\<rbrakk>\n      \\<Longrightarrow> a \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> measure_pmf.expectation ?M ?f =\n                    (\\<Sum>a\\<in>?A. ?f a * pmf ?M a)\n  (\\<Sum>a\\<in>outcomes. pmf ?p a * u a) =\n  (\\<Sum>a\\<in>outcomes. u a * pmf ?p a)\n\ngoal (1 subgoal):\n 1. measure_pmf.expectation p u = (\\<Sum>a\\<in>outcomes. pmf p a * u a)", "by fastforce"], ["proof (state)\nthis:\n  measure_pmf.expectation p u = (\\<Sum>a\\<in>outcomes. pmf p a * u a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u", "then"], ["proof (chain)\npicking this:\n  measure_pmf.expectation p u = (\\<Sum>a\\<in>outcomes. pmf p a * u a)", "show ?thesis"], ["proof (prove)\nusing this:\n  measure_pmf.expectation p u = (\\<Sum>a\\<in>outcomes. pmf p a * u a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u", "using real_scaleR_def"], ["proof (prove)\nusing this:\n  measure_pmf.expectation p u = (\\<Sum>a\\<in>outcomes. pmf p a * u a)\n  ?a *\\<^sub>R ?x = ?a * ?x\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u", "by presburger"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma expected_utility_weak_preference:\n  assumes \"p \\<in> lotteries_on outcomes\" \n    and \"q \\<in> lotteries_on outcomes\"\n  shows   \"p \\<succeq>[relation] q \\<longleftrightarrow> (\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)) \\<ge> (\\<Sum>z\\<in>outcomes. (pmf q z) * (u z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<succeq> q =\n    ((\\<Sum>z\\<in>outcomes. pmf q z * u z)\n     \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z))", "using sum_equals_pmf_expectation[of p, OF assms(1)] \n        sum_equals_pmf_expectation[of q, OF assms(2)]\n   vNM_utility_def assms(1) assms(2) util_def_conf"], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z) = measure_pmf.expectation q u\n  vNM_utility ?outcomes ?relation ?u \\<equiv>\n  ?relation \\<subseteq> \\<P> ?outcomes \\<times> \\<P> ?outcomes \\<and>\n  (\\<forall>p q.\n      p \\<in> \\<P> ?outcomes \\<longrightarrow>\n      q \\<in> \\<P> ?outcomes \\<longrightarrow>\n      p \\<succeq>[?relation] q =\n      (measure_pmf.expectation q ?u \\<le> measure_pmf.expectation p ?u))\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n  \\<lbrakk>?x \\<in> \\<P> outcomes; ?y \\<in> \\<P> outcomes\\<rbrakk>\n  \\<Longrightarrow> (measure_pmf.expectation ?y u\n                     \\<le> measure_pmf.expectation ?x u) =\n                    ?x \\<succeq> ?y\n\ngoal (1 subgoal):\n 1. p \\<succeq> q =\n    ((\\<Sum>z\\<in>outcomes. pmf q z * u z)\n     \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z))", "by presburger"], ["", "lemma diff_leq_zero_weak_preference:\n  assumes \"p \\<in> lotteries_on outcomes\"\n    and \"q \\<in> lotteries_on outcomes\"\n  shows \"p \\<succeq> q \\<longleftrightarrow> ((\\<Sum>a\\<in>outcomes. pmf q a * u a) - (\\<Sum>a\\<in>outcomes. pmf p a * u a) \\<le> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<succeq> q =\n    ((\\<Sum>a\\<in>outcomes. pmf q a * u a) -\n     (\\<Sum>a\\<in>outcomes. pmf p a * u a)\n     \\<le> 0)", "using assms(1) assms(2) diff_le_0_iff_le"], ["proof (prove)\nusing this:\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n  (?a - ?b \\<le> (0::?'a)) = (?a \\<le> ?b)\n\ngoal (1 subgoal):\n 1. p \\<succeq> q =\n    ((\\<Sum>a\\<in>outcomes. pmf q a * u a) -\n     (\\<Sum>a\\<in>outcomes. pmf p a * u a)\n     \\<le> 0)", "by (metis (mono_tags, lifting) expected_utility_weak_preference)"], ["", "lemma expected_utility_strict_preference:\n  assumes \"p \\<in> lotteries_on outcomes\" \n    and \"q \\<in> lotteries_on outcomes\"\n  shows   \"p \\<succ>[relation] q \\<longleftrightarrow> measure_pmf.expectation p u > measure_pmf.expectation q u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<succeq> q \\<and> (q, p) \\<notin> relation) =\n    (measure_pmf.expectation q u < measure_pmf.expectation p u)", "using assms expected_utility_weak_preference less_eq_real_def not_le"], ["proof (prove)\nusing this:\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n  \\<lbrakk>?p \\<in> \\<P> outcomes; ?q \\<in> \\<P> outcomes\\<rbrakk>\n  \\<Longrightarrow> ?p \\<succeq> ?q =\n                    ((\\<Sum>z\\<in>outcomes. pmf ?q z * u z)\n                     \\<le> (\\<Sum>z\\<in>outcomes. pmf ?p z * u z))\n  (?x \\<le> ?y) = (?x < ?y \\<or> ?x = ?y)\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. (p \\<succeq> q \\<and> (q, p) \\<notin> relation) =\n    (measure_pmf.expectation q u < measure_pmf.expectation p u)", "by (metis (no_types, lifting) util_def_conf)"], ["", "lemma scale_pos_left: \n  assumes \"c > 0\" \n  shows \"vNM_utility outcomes relation (\\<lambda>x. c * u x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vNM_utility outcomes relation (\\<lambda>x. c * u x)", "proof(standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. relation \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes\n 2. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. relation \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes\n 2. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. relation \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes", "using vNM_utility_axioms vNM_utility_def"], ["proof (prove)\nusing this:\n  vNM_utility outcomes relation u\n  vNM_utility ?outcomes ?relation ?u \\<equiv>\n  ?relation \\<subseteq> \\<P> ?outcomes \\<times> \\<P> ?outcomes \\<and>\n  (\\<forall>p q.\n      p \\<in> \\<P> ?outcomes \\<longrightarrow>\n      q \\<in> \\<P> ?outcomes \\<longrightarrow>\n      p \\<succeq>[?relation] q =\n      (measure_pmf.expectation q ?u \\<le> measure_pmf.expectation p ?u))\n\ngoal (1 subgoal):\n 1. relation \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes", "by blast"], ["proof (state)\nthis:\n  relation \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "case (2 p q)"], ["proof (state)\nthis:\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "have \"q \\<in> lotteries_on outcomes\" and \"p \\<in> lotteries_on outcomes\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<in> \\<P> outcomes &&& p \\<in> \\<P> outcomes", "using \"2\"(2)"], ["proof (prove)\nusing this:\n  q \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. q \\<in> \\<P> outcomes &&& p \\<in> \\<P> outcomes", "by (simp add: fnt \"2\"(1))+"], ["proof (state)\nthis:\n  q \\<in> \\<P> outcomes\n  p \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "then"], ["proof (chain)\npicking this:\n  q \\<in> \\<P> outcomes\n  p \\<in> \\<P> outcomes", "have *: \"p \\<succeq> q = (measure_pmf.expectation q u \\<le> measure_pmf.expectation p u)\""], ["proof (prove)\nusing this:\n  q \\<in> \\<P> outcomes\n  p \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. p \\<succeq> q =\n    (measure_pmf.expectation q u \\<le> measure_pmf.expectation p u)", "using expected_utility_weak_preference[of p q] assms"], ["proof (prove)\nusing this:\n  q \\<in> \\<P> outcomes\n  p \\<in> \\<P> outcomes\n  \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n  \\<Longrightarrow> p \\<succeq> q =\n                    ((\\<Sum>z\\<in>outcomes. pmf q z * u z)\n                     \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z))\n  0 < c\n\ngoal (1 subgoal):\n 1. p \\<succeq> q =\n    (measure_pmf.expectation q u \\<le> measure_pmf.expectation p u)", "by blast"], ["proof (state)\nthis:\n  p \\<succeq> q =\n  (measure_pmf.expectation q u \\<le> measure_pmf.expectation p u)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "have dist_c: \"(\\<Sum>z\\<in>outcomes. (pmf q z) * (c * u z)) = c * (\\<Sum>z\\<in>outcomes. (pmf q z) * (u z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "using pos_distrib_left[of c q] assms"], ["proof (prove)\nusing this:\n  0 < c \\<Longrightarrow>\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  0 < c\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "have dist_c': \"(\\<Sum>z\\<in>outcomes. (pmf p z) * (c * u z)) = c * (\\<Sum>z\\<in>outcomes. (pmf p z) * (u z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "using pos_distrib_left[of c p] assms"], ["proof (prove)\nusing this:\n  0 < c \\<Longrightarrow>\n  (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n  0 < c\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) =\n    c * (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "have \"p \\<succeq> q \\<longleftrightarrow> ((\\<Sum>z\\<in>outcomes. (pmf q z) * (c * u z)) \\<le> (\\<Sum>z\\<in>outcomes. (pmf p z) * (c * u z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<succeq> q =\n    ((\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n     \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)))", "proof (rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<succeq> q \\<Longrightarrow>\n    (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\n 2. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) \\<Longrightarrow>\n    p \\<succeq> q", "assume \"p \\<succeq> q\""], ["proof (state)\nthis:\n  p \\<succeq> q\n\ngoal (2 subgoals):\n 1. p \\<succeq> q \\<Longrightarrow>\n    (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\n 2. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) \\<Longrightarrow>\n    p \\<succeq> q", "then"], ["proof (chain)\npicking this:\n  p \\<succeq> q", "have \"(\\<Sum>z\\<in>outcomes. pmf q z * (u z)) \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (u z))\""], ["proof (prove)\nusing this:\n  p \\<succeq> q\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "using utility_ge"], ["proof (prove)\nusing this:\n  p \\<succeq> q\n  ?p \\<succeq> ?q \\<Longrightarrow>\n  measure_pmf.expectation ?q u \\<le> measure_pmf.expectation ?p u\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "using \"2\"(1) \"2\"(2) sum_equals_pmf_expectation"], ["proof (prove)\nusing this:\n  p \\<succeq> q\n  ?p \\<succeq> ?q \\<Longrightarrow>\n  measure_pmf.expectation ?q u \\<le> measure_pmf.expectation ?p u\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n  ?p \\<in> \\<P> outcomes \\<Longrightarrow>\n  (\\<Sum>z\\<in>outcomes. pmf ?p z * u z) = measure_pmf.expectation ?p u\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "by presburger"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n\ngoal (2 subgoals):\n 1. p \\<succeq> q \\<Longrightarrow>\n    (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\n 2. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) \\<Longrightarrow>\n    p \\<succeq> q", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "show \"(\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\""], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))", "using dist_c dist_c'"], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) =\n  c * (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))", "by (simp add: assms)"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) \\<Longrightarrow>\n    p \\<succeq> q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) \\<Longrightarrow>\n    p \\<succeq> q", "assume \"(\\<Sum>z\\<in>outcomes. pmf q z * (c * u z)) \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\""], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) \\<Longrightarrow>\n    p \\<succeq> q", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))", "have \"(\\<Sum>z\\<in>outcomes. pmf q z * (u z)) \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (u z))\""], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "using \"2\"(1) mult_le_cancel_iff2 assms"], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z))\n  p \\<in> \\<P> outcomes\n  (0::?'a) < ?z \\<Longrightarrow> (?z * ?x \\<le> ?z * ?y) = (?x \\<le> ?y)\n  0 < c\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "by (simp add: dist_c dist_c')"], ["proof (state)\nthis:\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n    \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)) \\<Longrightarrow>\n    p \\<succeq> q", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "show \"p \\<succeq> q\""], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n\ngoal (1 subgoal):\n 1. p \\<succeq> q", "using \"2\"(2) assms \"2\"(1)"], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n  \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * u z)\n  q \\<in> \\<P> outcomes\n  0 < c\n  p \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. p \\<succeq> q", "by (simp add: * sum_equals_pmf_expectation)"], ["proof (state)\nthis:\n  p \\<succeq> q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<succeq> q =\n  ((\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n   \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq> q =\n                         (measure_pmf.expectation q (\\<lambda>x. c * u x)\n                          \\<le> measure_pmf.expectation p\n                                 (\\<lambda>x. c * u x))", "then"], ["proof (chain)\npicking this:\n  p \\<succeq> q =\n  ((\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n   \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)))", "show ?case"], ["proof (prove)\nusing this:\n  p \\<succeq> q =\n  ((\\<Sum>z\\<in>outcomes. pmf q z * (c * u z))\n   \\<le> (\\<Sum>z\\<in>outcomes. pmf p z * (c * u z)))\n\ngoal (1 subgoal):\n 1. p \\<succeq> q =\n    (measure_pmf.expectation q (\\<lambda>x. c * u x)\n     \\<le> measure_pmf.expectation p (\\<lambda>x. c * u x))", "by (simp add: \"*\" assms)"], ["proof (state)\nthis:\n  p \\<succeq> q =\n  (measure_pmf.expectation q (\\<lambda>x. c * u x)\n   \\<le> measure_pmf.expectation p (\\<lambda>x. c * u x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strict_alt_def:\n  assumes \"p \\<in> lotteries_on outcomes\" \n    and \"q \\<in> lotteries_on outcomes\"\n  shows \"p \\<succ>[relation] q \\<longleftrightarrow> \n            (\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)) > (\\<Sum>z\\<in>outcomes. (pmf q z) * (u z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<succeq> q \\<and> (q, p) \\<notin> relation) =\n    ((\\<Sum>z\\<in>outcomes. pmf q z * u z)\n     < (\\<Sum>z\\<in>outcomes. pmf p z * u z))", "using sum_equals_pmf_expectation[of p, OF assms(1)] assms(1) assms(2)\n    sum_equals_pmf_expectation[of q, OF assms(2)] strict_prefernce_iff_strict_utility"], ["proof (prove)\nusing this:\n  (\\<Sum>z\\<in>outcomes. pmf p z * u z) = measure_pmf.expectation p u\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n  (\\<Sum>z\\<in>outcomes. pmf q z * u z) = measure_pmf.expectation q u\n  \\<lbrakk>?x \\<in> \\<P> outcomes; ?y \\<in> \\<P> outcomes\\<rbrakk>\n  \\<Longrightarrow> (?x \\<succeq> ?y \\<and> (?y, ?x) \\<notin> relation) =\n                    (measure_pmf.expectation ?y u\n                     < measure_pmf.expectation ?x u)\n\ngoal (1 subgoal):\n 1. (p \\<succeq> q \\<and> (q, p) \\<notin> relation) =\n    ((\\<Sum>z\\<in>outcomes. pmf q z * u z)\n     < (\\<Sum>z\\<in>outcomes. pmf p z * u z))", "by presburger"], ["", "lemma strict_alt_def_utility_g:\n  assumes \"p \\<succ>[relation] q\"\n  shows \"(\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)) > (\\<Sum>z\\<in>outcomes. (pmf q z) * (u z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n    < (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "using assms not_outside(1) not_outside(2) strict_alt_def"], ["proof (prove)\nusing this:\n  p \\<succeq> q \\<and> (q, p) \\<notin> relation\n  ?p \\<succeq> ?q \\<Longrightarrow> ?p \\<in> \\<P> outcomes\n  ?p \\<succeq> ?q \\<Longrightarrow> ?q \\<in> \\<P> outcomes\n  \\<lbrakk>?p \\<in> \\<P> outcomes; ?q \\<in> \\<P> outcomes\\<rbrakk>\n  \\<Longrightarrow> (?p \\<succeq> ?q \\<and> (?q, ?p) \\<notin> relation) =\n                    ((\\<Sum>z\\<in>outcomes. pmf ?q z * u z)\n                     < (\\<Sum>z\\<in>outcomes. pmf ?p z * u z))\n\ngoal (1 subgoal):\n 1. (\\<Sum>z\\<in>outcomes. pmf q z * u z)\n    < (\\<Sum>z\\<in>outcomes. pmf p z * u z)", "by meson"], ["", "end"], ["", "(* finite outcomes *)"], ["", "end"], ["", "(* Definition of vNM Utility Function as locale *)"], ["", "lemma vnm_utility_is_ordinal_utility:\n  assumes \"vNM_utility outcomes relation u\"\n  shows \"ordinal_utility (lotteries_on outcomes) relation (\\<lambda>p. measure_pmf.expectation p u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordinal_utility (\\<P> outcomes) relation\n     (\\<lambda>p. measure_pmf.expectation p u)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<P> outcomes; y \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> x \\<succeq>[relation] y =\n                         (measure_pmf.expectation y u\n                          \\<le> measure_pmf.expectation x u)\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 3. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "case (1 x y)"], ["proof (state)\nthis:\n  x \\<in> \\<P> outcomes\n  y \\<in> \\<P> outcomes\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<P> outcomes; y \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> x \\<succeq>[relation] y =\n                         (measure_pmf.expectation y u\n                          \\<le> measure_pmf.expectation x u)\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 3. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<P> outcomes\n  y \\<in> \\<P> outcomes", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> \\<P> outcomes\n  y \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. x \\<succeq>[relation] y =\n    (measure_pmf.expectation y u \\<le> measure_pmf.expectation x u)", "using assms vNM_utility_def"], ["proof (prove)\nusing this:\n  x \\<in> \\<P> outcomes\n  y \\<in> \\<P> outcomes\n  vNM_utility outcomes relation u\n  vNM_utility ?outcomes ?relation ?u \\<equiv>\n  ?relation \\<subseteq> \\<P> ?outcomes \\<times> \\<P> ?outcomes \\<and>\n  (\\<forall>p q.\n      p \\<in> \\<P> ?outcomes \\<longrightarrow>\n      q \\<in> \\<P> ?outcomes \\<longrightarrow>\n      p \\<succeq>[?relation] q =\n      (measure_pmf.expectation q ?u \\<le> measure_pmf.expectation p ?u))\n\ngoal (1 subgoal):\n 1. x \\<succeq>[relation] y =\n    (measure_pmf.expectation y u \\<le> measure_pmf.expectation x u)", "by blast"], ["proof (state)\nthis:\n  x \\<succeq>[relation] y =\n  (measure_pmf.expectation y u \\<le> measure_pmf.expectation x u)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "case (2 x y)"], ["proof (state)\nthis:\n  x \\<succeq>[relation] y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "then"], ["proof (chain)\npicking this:\n  x \\<succeq>[relation] y", "show ?case"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n\ngoal (1 subgoal):\n 1. x \\<in> \\<P> outcomes", "using assms vNM_utility.not_outside(1)"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n  vNM_utility outcomes relation u\n  \\<lbrakk>vNM_utility ?outcomes ?relation ?u;\n   ?p \\<succeq>[?relation] ?q\\<rbrakk>\n  \\<Longrightarrow> ?p \\<in> \\<P> ?outcomes\n\ngoal (1 subgoal):\n 1. x \\<in> \\<P> outcomes", "by blast"], ["proof (state)\nthis:\n  x \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "case (3 x y)"], ["proof (state)\nthis:\n  x \\<succeq>[relation] y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes", "then"], ["proof (chain)\npicking this:\n  x \\<succeq>[relation] y", "show ?case"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n\ngoal (1 subgoal):\n 1. y \\<in> \\<P> outcomes", "using assms vNM_utility.not_outside(2)"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n  vNM_utility outcomes relation u\n  \\<lbrakk>vNM_utility ?outcomes ?relation ?u;\n   ?p \\<succeq>[?relation] ?q\\<rbrakk>\n  \\<Longrightarrow> ?q \\<in> \\<P> ?outcomes\n\ngoal (1 subgoal):\n 1. y \\<in> \\<P> outcomes", "by blast"], ["proof (state)\nthis:\n  y \\<in> \\<P> outcomes\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vnm_utility_imp_reational_prefs:\n  assumes \"vNM_utility outcomes relation u\"\n  shows \"rational_preference (lotteries_on outcomes) relation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rational_preference (\\<P> outcomes) relation", "proof (standard,goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes\n 3. preorder_on (\\<P> outcomes) relation\n 4. total_on (\\<P> outcomes) relation", "case (1 x y)"], ["proof (state)\nthis:\n  x \\<succeq>[relation] y\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> x \\<in> \\<P> outcomes\n 2. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes\n 3. preorder_on (\\<P> outcomes) relation\n 4. total_on (\\<P> outcomes) relation", "then"], ["proof (chain)\npicking this:\n  x \\<succeq>[relation] y", "show ?case"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n\ngoal (1 subgoal):\n 1. x \\<in> \\<P> outcomes", "using assms vNM_utility.not_outside(1)"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n  vNM_utility outcomes relation u\n  \\<lbrakk>vNM_utility ?outcomes ?relation ?u;\n   ?p \\<succeq>[?relation] ?q\\<rbrakk>\n  \\<Longrightarrow> ?p \\<in> \\<P> ?outcomes\n\ngoal (1 subgoal):\n 1. x \\<in> \\<P> outcomes", "by blast"], ["proof (state)\nthis:\n  x \\<in> \\<P> outcomes\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes\n 2. preorder_on (\\<P> outcomes) relation\n 3. total_on (\\<P> outcomes) relation", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes\n 2. preorder_on (\\<P> outcomes) relation\n 3. total_on (\\<P> outcomes) relation", "case (2 x y)"], ["proof (state)\nthis:\n  x \\<succeq>[relation] y\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       x \\<succeq>[relation] y \\<Longrightarrow> y \\<in> \\<P> outcomes\n 2. preorder_on (\\<P> outcomes) relation\n 3. total_on (\\<P> outcomes) relation", "then"], ["proof (chain)\npicking this:\n  x \\<succeq>[relation] y", "show ?case"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n\ngoal (1 subgoal):\n 1. y \\<in> \\<P> outcomes", "using assms vNM_utility.not_outside(2)"], ["proof (prove)\nusing this:\n  x \\<succeq>[relation] y\n  vNM_utility outcomes relation u\n  \\<lbrakk>vNM_utility ?outcomes ?relation ?u;\n   ?p \\<succeq>[?relation] ?q\\<rbrakk>\n  \\<Longrightarrow> ?q \\<in> \\<P> ?outcomes\n\ngoal (1 subgoal):\n 1. y \\<in> \\<P> outcomes", "by blast"], ["proof (state)\nthis:\n  y \\<in> \\<P> outcomes\n\ngoal (2 subgoals):\n 1. preorder_on (\\<P> outcomes) relation\n 2. total_on (\\<P> outcomes) relation", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. preorder_on (\\<P> outcomes) relation\n 2. total_on (\\<P> outcomes) relation", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. preorder_on (\\<P> outcomes) relation\n 2. total_on (\\<P> outcomes) relation", "have t: \"trans relation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans relation", "using assms ordinal_utility.util_imp_trans vnm_utility_is_ordinal_utility"], ["proof (prove)\nusing this:\n  vNM_utility outcomes relation u\n  ordinal_utility ?carrier ?relation ?u \\<Longrightarrow> trans ?relation\n  vNM_utility ?outcomes ?relation ?u \\<Longrightarrow>\n  ordinal_utility (\\<P> ?outcomes) ?relation\n   (\\<lambda>p. measure_pmf.expectation p ?u)\n\ngoal (1 subgoal):\n 1. trans relation", "by blast"], ["proof (state)\nthis:\n  trans relation\n\ngoal (2 subgoals):\n 1. preorder_on (\\<P> outcomes) relation\n 2. total_on (\\<P> outcomes) relation", "have \"refl_on (lotteries_on outcomes) relation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl_on (\\<P> outcomes) relation", "by (meson assms order_refl refl_on_def vNM_utility_def)"], ["proof (state)\nthis:\n  refl_on (\\<P> outcomes) relation\n\ngoal (2 subgoals):\n 1. preorder_on (\\<P> outcomes) relation\n 2. total_on (\\<P> outcomes) relation", "then"], ["proof (chain)\npicking this:\n  refl_on (\\<P> outcomes) relation", "show ?case"], ["proof (prove)\nusing this:\n  refl_on (\\<P> outcomes) relation\n\ngoal (1 subgoal):\n 1. preorder_on (\\<P> outcomes) relation", "using preorder_on_def t"], ["proof (prove)\nusing this:\n  refl_on (\\<P> outcomes) relation\n  preorder_on ?A ?r \\<equiv> refl_on ?A ?r \\<and> trans ?r\n  trans relation\n\ngoal (1 subgoal):\n 1. preorder_on (\\<P> outcomes) relation", "by blast"], ["proof (state)\nthis:\n  preorder_on (\\<P> outcomes) relation\n\ngoal (1 subgoal):\n 1. total_on (\\<P> outcomes) relation", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. total_on (\\<P> outcomes) relation", "case 4"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. total_on (\\<P> outcomes) relation", "have \"total_on (lotteries_on outcomes) relation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_on (\\<P> outcomes) relation", "using ordinal_utility.util_imp_total[of \"lotteries_on outcomes\" \n        relation \"(\\<lambda>p. (\\<Sum>z\\<in>outcomes. (pmf p z) * (u z)))\"]\n      assms vnm_utility_is_ordinal_utility"], ["proof (prove)\nusing this:\n  ordinal_utility (\\<P> outcomes) relation\n   (\\<lambda>p. \\<Sum>z\\<in>outcomes. pmf p z * u z) \\<Longrightarrow>\n  total_on (\\<P> outcomes) relation\n  vNM_utility outcomes relation u\n  vNM_utility ?outcomes ?relation ?u \\<Longrightarrow>\n  ordinal_utility (\\<P> ?outcomes) ?relation\n   (\\<lambda>p. measure_pmf.expectation p ?u)\n\ngoal (1 subgoal):\n 1. total_on (\\<P> outcomes) relation", "using ordinal_utility.util_imp_total"], ["proof (prove)\nusing this:\n  ordinal_utility (\\<P> outcomes) relation\n   (\\<lambda>p. \\<Sum>z\\<in>outcomes. pmf p z * u z) \\<Longrightarrow>\n  total_on (\\<P> outcomes) relation\n  vNM_utility outcomes relation u\n  vNM_utility ?outcomes ?relation ?u \\<Longrightarrow>\n  ordinal_utility (\\<P> ?outcomes) ?relation\n   (\\<lambda>p. measure_pmf.expectation p ?u)\n  ordinal_utility ?carrier ?relation ?u \\<Longrightarrow>\n  total_on ?carrier ?relation\n\ngoal (1 subgoal):\n 1. total_on (\\<P> outcomes) relation", "by blast"], ["proof (state)\nthis:\n  total_on (\\<P> outcomes) relation\n\ngoal (1 subgoal):\n 1. total_on (\\<P> outcomes) relation", "then"], ["proof (chain)\npicking this:\n  total_on (\\<P> outcomes) relation", "show ?case"], ["proof (prove)\nusing this:\n  total_on (\\<P> outcomes) relation\n\ngoal (1 subgoal):\n 1. total_on (\\<P> outcomes) relation", "by simp"], ["proof (state)\nthis:\n  total_on (\\<P> outcomes) relation\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem expected_utilty_theorem_form_vnm_utility:\n  assumes fnt: \"finite outcomes\" and \"outcomes \\<noteq> {}\"\n  shows \"rational_preference (lotteries_on outcomes) \\<R> \\<and> \n         independent_vnm (lotteries_on outcomes) \\<R> \\<and> \n         continuous_vnm (lotteries_on outcomes) \\<R> \\<longleftrightarrow> \n         (\\<exists>u. vNM_utility outcomes \\<R> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rational_preference (\\<P> outcomes) \\<R> \\<and>\n     independent_vnm (\\<P> outcomes) \\<R> \\<and>\n     continuous_vnm (\\<P> outcomes) \\<R>) =\n    (\\<exists>u. vNM_utility outcomes \\<R> u)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R> \\<Longrightarrow>\n    \\<exists>u. vNM_utility outcomes \\<R> u\n 2. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "assume \"rational_preference (\\<P> outcomes) \\<R> \\<and> independent_vnm (\\<P> outcomes) \\<R> \\<and> continuous_vnm (\\<P> outcomes) \\<R>\""], ["proof (state)\nthis:\n  rational_preference (\\<P> outcomes) \\<R> \\<and>\n  independent_vnm (\\<P> outcomes) \\<R> \\<and>\n  continuous_vnm (\\<P> outcomes) \\<R>\n\ngoal (2 subgoals):\n 1. rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R> \\<Longrightarrow>\n    \\<exists>u. vNM_utility outcomes \\<R> u\n 2. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "with Von_Neumann_Morgenstern_Utility_Theorem[of outcomes \\<R>, OF assms]"], ["proof (chain)\npicking this:\n  (rational_preference (\\<P> outcomes) \\<R> \\<and>\n   independent_vnm (\\<P> outcomes) \\<R> \\<and>\n   continuous_vnm (\\<P> outcomes) \\<R>) =\n  (\\<exists>u.\n      ordinal_utility (\\<P> outcomes) \\<R>\n       (\\<lambda>x. measure_pmf.expectation x u))\n  rational_preference (\\<P> outcomes) \\<R> \\<and>\n  independent_vnm (\\<P> outcomes) \\<R> \\<and>\n  continuous_vnm (\\<P> outcomes) \\<R>", "have\n  \"(\\<exists>u. ordinal_utility (\\<P> outcomes) \\<R> (\\<lambda>x. measure_pmf.expectation x u))\""], ["proof (prove)\nusing this:\n  (rational_preference (\\<P> outcomes) \\<R> \\<and>\n   independent_vnm (\\<P> outcomes) \\<R> \\<and>\n   continuous_vnm (\\<P> outcomes) \\<R>) =\n  (\\<exists>u.\n      ordinal_utility (\\<P> outcomes) \\<R>\n       (\\<lambda>x. measure_pmf.expectation x u))\n  rational_preference (\\<P> outcomes) \\<R> \\<and>\n  independent_vnm (\\<P> outcomes) \\<R> \\<and>\n  continuous_vnm (\\<P> outcomes) \\<R>\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       ordinal_utility (\\<P> outcomes) \\<R>\n        (\\<lambda>x. measure_pmf.expectation x u)", "using assms"], ["proof (prove)\nusing this:\n  (rational_preference (\\<P> outcomes) \\<R> \\<and>\n   independent_vnm (\\<P> outcomes) \\<R> \\<and>\n   continuous_vnm (\\<P> outcomes) \\<R>) =\n  (\\<exists>u.\n      ordinal_utility (\\<P> outcomes) \\<R>\n       (\\<lambda>x. measure_pmf.expectation x u))\n  rational_preference (\\<P> outcomes) \\<R> \\<and>\n  independent_vnm (\\<P> outcomes) \\<R> \\<and>\n  continuous_vnm (\\<P> outcomes) \\<R>\n  finite outcomes\n  outcomes \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       ordinal_utility (\\<P> outcomes) \\<R>\n        (\\<lambda>x. measure_pmf.expectation x u)", "by blast"], ["proof (state)\nthis:\n  \\<exists>u.\n     ordinal_utility (\\<P> outcomes) \\<R>\n      (\\<lambda>x. measure_pmf.expectation x u)\n\ngoal (2 subgoals):\n 1. rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R> \\<Longrightarrow>\n    \\<exists>u. vNM_utility outcomes \\<R> u\n 2. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "then"], ["proof (chain)\npicking this:\n  \\<exists>u.\n     ordinal_utility (\\<P> outcomes) \\<R>\n      (\\<lambda>x. measure_pmf.expectation x u)", "obtain u where\n    u: \"ordinal_utility (\\<P> outcomes) \\<R> (\\<lambda>x. measure_pmf.expectation x u)\""], ["proof (prove)\nusing this:\n  \\<exists>u.\n     ordinal_utility (\\<P> outcomes) \\<R>\n      (\\<lambda>x. measure_pmf.expectation x u)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        ordinal_utility (\\<P> outcomes) \\<R>\n         (\\<lambda>x. measure_pmf.expectation x u) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ordinal_utility (\\<P> outcomes) \\<R>\n   (\\<lambda>x. measure_pmf.expectation x u)\n\ngoal (2 subgoals):\n 1. rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R> \\<Longrightarrow>\n    \\<exists>u. vNM_utility outcomes \\<R> u\n 2. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "have \"vNM_utility outcomes \\<R> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vNM_utility outcomes \\<R> u", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<R> \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes\n 2. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq>[\\<R>] q =\n                         (measure_pmf.expectation q u\n                          \\<le> measure_pmf.expectation p u)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<R> \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes\n 2. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq>[\\<R>] q =\n                         (measure_pmf.expectation q u\n                          \\<le> measure_pmf.expectation p u)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R> \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes", "using u ordinal_utility.relation_subset_crossp"], ["proof (prove)\nusing this:\n  ordinal_utility (\\<P> outcomes) \\<R>\n   (\\<lambda>x. measure_pmf.expectation x u)\n  ordinal_utility ?carrier ?relation ?u \\<Longrightarrow>\n  ?relation \\<subseteq> ?carrier \\<times> ?carrier\n\ngoal (1 subgoal):\n 1. \\<R> \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes", "by blast"], ["proof (state)\nthis:\n  \\<R> \\<subseteq> \\<P> outcomes \\<times> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq>[\\<R>] q =\n                         (measure_pmf.expectation q u\n                          \\<le> measure_pmf.expectation p u)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq>[\\<R>] q =\n                         (measure_pmf.expectation q u\n                          \\<le> measure_pmf.expectation p u)", "case (2 p q)"], ["proof (state)\nthis:\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       \\<lbrakk>p \\<in> \\<P> outcomes; q \\<in> \\<P> outcomes\\<rbrakk>\n       \\<Longrightarrow> p \\<succeq>[\\<R>] q =\n                         (measure_pmf.expectation q u\n                          \\<le> measure_pmf.expectation p u)", "then"], ["proof (chain)\npicking this:\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes", "show ?case"], ["proof (prove)\nusing this:\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n\ngoal (1 subgoal):\n 1. p \\<succeq>[\\<R>] q =\n    (measure_pmf.expectation q u \\<le> measure_pmf.expectation p u)", "using assms(2) expected_value_is_utility_function fnt u"], ["proof (prove)\nusing this:\n  p \\<in> \\<P> outcomes\n  q \\<in> \\<P> outcomes\n  outcomes \\<noteq> {}\n  \\<lbrakk>finite ?outcomes; ?outcomes \\<noteq> {}; ?x \\<in> \\<P> ?outcomes;\n   ?y \\<in> \\<P> ?outcomes;\n   ordinal_utility (\\<P> ?outcomes) ?\\<R>\n    (\\<lambda>x. measure_pmf.expectation x ?u)\\<rbrakk>\n  \\<Longrightarrow> (measure_pmf.expectation ?y ?u\n                     \\<le> measure_pmf.expectation ?x ?u) =\n                    ?x \\<succeq>[?\\<R>] ?y\n  finite outcomes\n  ordinal_utility (\\<P> outcomes) \\<R>\n   (\\<lambda>x. measure_pmf.expectation x u)\n\ngoal (1 subgoal):\n 1. p \\<succeq>[\\<R>] q =\n    (measure_pmf.expectation q u \\<le> measure_pmf.expectation p u)", "by blast"], ["proof (state)\nthis:\n  p \\<succeq>[\\<R>] q =\n  (measure_pmf.expectation q u \\<le> measure_pmf.expectation p u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vNM_utility outcomes \\<R> u\n\ngoal (2 subgoals):\n 1. rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R> \\<Longrightarrow>\n    \\<exists>u. vNM_utility outcomes \\<R> u\n 2. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "then"], ["proof (chain)\npicking this:\n  vNM_utility outcomes \\<R> u", "show \"\\<exists>u. vNM_utility outcomes \\<R> u\""], ["proof (prove)\nusing this:\n  vNM_utility outcomes \\<R> u\n\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. vNM_utility outcomes \\<R> u\n\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "assume a: \"\\<exists>u. vNM_utility outcomes \\<R> u\""], ["proof (state)\nthis:\n  \\<exists>u. vNM_utility outcomes \\<R> u\n\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "then"], ["proof (chain)\npicking this:\n  \\<exists>u. vNM_utility outcomes \\<R> u", "have \"rational_preference (\\<P> outcomes) \\<R>\""], ["proof (prove)\nusing this:\n  \\<exists>u. vNM_utility outcomes \\<R> u\n\ngoal (1 subgoal):\n 1. rational_preference (\\<P> outcomes) \\<R>", "using vnm_utility_imp_reational_prefs"], ["proof (prove)\nusing this:\n  \\<exists>u. vNM_utility outcomes \\<R> u\n  vNM_utility ?outcomes ?relation ?u \\<Longrightarrow>\n  rational_preference (\\<P> ?outcomes) ?relation\n\ngoal (1 subgoal):\n 1. rational_preference (\\<P> outcomes) \\<R>", "by auto"], ["proof (state)\nthis:\n  rational_preference (\\<P> outcomes) \\<R>\n\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "moreover"], ["proof (state)\nthis:\n  rational_preference (\\<P> outcomes) \\<R>\n\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "have \"independent_vnm (\\<P> outcomes) \\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. independent_vnm (\\<P> outcomes) \\<R>", "using a"], ["proof (prove)\nusing this:\n  \\<exists>u. vNM_utility outcomes \\<R> u\n\ngoal (1 subgoal):\n 1. independent_vnm (\\<P> outcomes) \\<R>", "by (meson assms(2) fnt vNM_utility_implies_independence vnm_utility_is_ordinal_utility)"], ["proof (state)\nthis:\n  independent_vnm (\\<P> outcomes) \\<R>\n\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "moreover"], ["proof (state)\nthis:\n  independent_vnm (\\<P> outcomes) \\<R>\n\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "have \"continuous_vnm (\\<P> outcomes) \\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_vnm (\\<P> outcomes) \\<R>", "using a"], ["proof (prove)\nusing this:\n  \\<exists>u. vNM_utility outcomes \\<R> u\n\ngoal (1 subgoal):\n 1. continuous_vnm (\\<P> outcomes) \\<R>", "by (meson assms(2) fnt vNM_utilty_implies_continuity vnm_utility_is_ordinal_utility)"], ["proof (state)\nthis:\n  continuous_vnm (\\<P> outcomes) \\<R>\n\ngoal (1 subgoal):\n 1. \\<exists>u. vNM_utility outcomes \\<R> u \\<Longrightarrow>\n    rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "ultimately"], ["proof (chain)\npicking this:\n  rational_preference (\\<P> outcomes) \\<R>\n  independent_vnm (\\<P> outcomes) \\<R>\n  continuous_vnm (\\<P> outcomes) \\<R>", "show \"rational_preference (\\<P> outcomes) \\<R> \\<and> independent_vnm (\\<P> outcomes) \\<R> \\<and> continuous_vnm (\\<P> outcomes) \\<R>\""], ["proof (prove)\nusing this:\n  rational_preference (\\<P> outcomes) \\<R>\n  independent_vnm (\\<P> outcomes) \\<R>\n  continuous_vnm (\\<P> outcomes) \\<R>\n\ngoal (1 subgoal):\n 1. rational_preference (\\<P> outcomes) \\<R> \\<and>\n    independent_vnm (\\<P> outcomes) \\<R> \\<and>\n    continuous_vnm (\\<P> outcomes) \\<R>", "by auto"], ["proof (state)\nthis:\n  rational_preference (\\<P> outcomes) \\<R> \\<and>\n  independent_vnm (\\<P> outcomes) \\<R> \\<and>\n  continuous_vnm (\\<P> outcomes) \\<R>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}