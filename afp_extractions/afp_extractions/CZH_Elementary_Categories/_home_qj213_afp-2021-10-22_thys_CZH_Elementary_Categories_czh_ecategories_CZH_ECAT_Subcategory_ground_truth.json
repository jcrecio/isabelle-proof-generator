{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_Subcategory.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma (in subcategory) subcategory_axioms'[cat_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\"", "lemma (in subcategory) subcategory_axioms''[cat_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\"", "lemmas [cat_sub_cs_intros] = subcategoryD(1,2)", "lemma subcategoryI':\n  assumes \"category \\<alpha> \\<BB>\"\n    and \"category \\<alpha> \\<CC>\"\n    and \"\\<And>a. a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\"\n    and \"\\<And>a. a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  subcat_Obj_vsubset = subsmc.subsmc_Obj_vsubset\n  and subcat_is_arr_vsubset = subsmc.subsmc_is_arr_vsubset\n  and subcat_subdigraph_op_dg_op_dg = subsmc.subsmc_subdigraph_op_dg_op_dg\n  and subcat_objD = subsmc.subsmc_objD\n  and subcat_arrD = subsmc.subsmc_arrD\n  and subcat_dom_simp = subsmc.subsmc_dom_simp\n  and subcat_cod_simp = subsmc.subsmc_cod_simp\n  and subcat_is_arrD = subsmc.subsmc_is_arrD", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  subcat_Comp_simp = subsmc.subsmc_Comp_simp\n  and subcat_is_idem_arrD = subsmc.subsmc_is_idem_arrD", "lemmas [cat_sub_fw_cs_intros] = \n  subcategory.subcat_Obj_vsubset\n  subcategory.subcat_is_arr_vsubset\n  subcategory.subcat_objD\n  subcategory.subcat_arrD\n  subcategory.subcat_is_arrD", "lemmas [cat_sub_bw_cs_simps] =\n  subcategory.subcat_dom_simp\n  subcategory.subcat_cod_simp", "lemmas [cat_sub_fw_cs_intros] = \n  subcategory.subcat_is_idem_arrD", "lemmas [cat_sub_bw_cs_simps] = \n  subcategory.subcat_Comp_simp", "lemma (in subcategory) subcat_subcategory_op_cat: \"op_cat \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\"", "lemmas subcat_subcategory_op_cat[intro] = subcategory.subcat_subcategory_op_cat", "lemma (in subcategory) subcat_CId_is_arr[intro]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\"", "lemma (in subcategory) subcat_CId_simp[cat_sub_bw_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" \n  shows \"\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\"", "lemmas [cat_sub_bw_cs_simps] = subcategory.subcat_CId_simp", "lemma (in subcategory) subcat_is_right_inverseD[cat_sub_fw_cs_intros]: \n  assumes \"is_right_inverse \\<BB> g f\" \n  shows \"is_right_inverse \\<CC> g f\"", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_is_right_inverseD", "lemma (in subcategory) subcat_is_left_inverseD[cat_sub_fw_cs_intros]: \n  assumes \"is_left_inverse \\<BB> g f\" \n  shows \"is_left_inverse \\<CC> g f\"", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_is_left_inverseD", "lemma (in subcategory) subcat_is_inverseD[cat_sub_fw_cs_intros]: \n  assumes \"is_inverse \\<BB> g f\" \n  shows \"is_inverse \\<CC> g f\"", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_is_inverseD", "lemma (in subcategory) subcat_is_arr_isomorphismD[cat_sub_fw_cs_intros]:\n  assumes \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\"", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_is_arr_isomorphismD", "lemma (in subcategory) subcat_the_inverse_simp[cat_sub_bw_cs_simps]:\n  assumes \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> = f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>\"", "lemmas [cat_sub_bw_cs_simps] = subcategory.subcat_the_inverse_simp", "lemma (in subcategory) subcat_obj_isoD:\n  assumes \"a \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"a \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>\\<CC>\\<^esub> b\"", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_obj_isoD", "lemma subcat_refl:\n  assumes \"category \\<alpha> \\<AA>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma subcat_trans: \n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma subcat_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\"", "lemma dghm_smcf_inc[slicing_commute]: \n  \"dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) = cf_smcf (cf_inc \\<BB> \\<CC>)\"", "lemmas [cat_cs_simps] = \n  dghm_inc_ObjMap_app \n  dghm_inc_ArrMap_app", "lemmas (in subcategory) subcat_cf_inc_is_ft_functor = inc.is_ft_functor_axioms", "lemma (in subcategory) subcat_cf_inc_op_cat_is_functor:\n  \"cf_inc (op_cat \\<BB>) (op_cat \\<CC>) : op_cat \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\"", "lemma (in subcategory) subcat_op_cat_cf_inc: \n  \"cf_inc (op_cat \\<BB>) (op_cat \\<CC>) = op_cf (cf_inc \\<BB> \\<CC>)\"", "lemmas [cat_sub_cs_intros] = fl_subcategoryD(1)", "lemmas [cat_sub_cs_intros] = wide_subcategoryD(1)", "lemmas_with [unfolded slicing_simps]:\n  wide_subcat_Obj[dg_sub_bw_cs_intros] = wide_subsmc.wide_subsmc_Obj\n  and wide_subcat_obj_eq[dg_sub_bw_cs_simps] = wide_subsmc.wide_subsmc_obj_eq", "lemmas [cat_sub_bw_cs_simps] =  wide_subcategory.wide_subcat_obj_eq[symmetric]", "lemmas [cat_sub_bw_cs_simps] = wide_subsemicategory.wide_subsmc_obj_eq", "lemma wide_subcat_refl: \n  assumes \"category \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma wide_subcat_trans[trans]:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma wide_subcat_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\"", "lemmas [cat_sub_cs_intros] = replete_subcategoryD(1)", "lemma (in replete_subcategory) (*not cat_sub_intro*)\n  rep_subcat_is_arr_isomorphism_is_arr_isomorphism_left:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" and \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\"", "lemma (in replete_subcategory) (*not cat_sub_intro*)\n  rep_subcat_is_arr_isomorphism_is_arr_isomorphism_right:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" and \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\"", "lemma (in replete_subcategory) (*not cat_sub_bw_cs_simps*)\n  rep_subcat_is_arr_isomorphism_is_arr_isomorphism_left_iff:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" \n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in replete_subcategory) (*not cat_sub_bw_cs_simps*)\n  rep_subcat_is_arr_isomorphism_is_arr_isomorphism_right_iff:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" \n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\"", "lemma rep_subcat_refl: \n  assumes \"category \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma rep_subcat_trans[trans]:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma rep_subcat_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\"", "lemmas [cat_sub_cs_intros] = wide_replete_subcategoryD", "lemma (in wide_replete_subcategory) \n  wr_subcat_is_arr_isomorphism_is_arr_isomorphism:\n  \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\"", "lemmas [cat_sub_bw_cs_simps] = \n  wide_replete_subcategory.wr_subcat_is_arr_isomorphism_is_arr_isomorphism", "lemma wr_subcat_refl: \n  assumes \"category \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma wr_subcat_trans[trans]:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma wr_subcat_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub>  \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub>  \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], "translations": [["", "lemma (in subcategory) subcategory_axioms'[cat_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<BB>' \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>' \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule subcategory_axioms)"], ["", "lemma (in subcategory) subcategory_axioms''[cat_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule subcategory_axioms)"], ["", "mk_ide rf subcategory_def[unfolded subcategory_axioms_def]\n  |intro subcategoryI[intro!]|\n  |dest subcategoryD[dest]|\n  |elim subcategoryE[elim!]|"], ["", "lemmas [cat_sub_cs_intros] = subcategoryD(1,2)"], ["", "lemma subcategoryI':\n  assumes \"category \\<alpha> \\<BB>\"\n    and \"category \\<alpha> \\<CC>\"\n    and \"\\<And>a. a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"\\<And>a b f. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"\n    and \"\\<And>b c g a f. \\<lbrakk> g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> c; f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b \\<rbrakk> \\<Longrightarrow>\n      g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = g \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\"\n    and \"\\<And>a. a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\"\n  shows \"\\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>: category \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<CC>: category \\<alpha> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by \n      (\n        intro subcategoryI subsemicategoryI', \n        unfold slicing_simps; \n        (intro \\<BB>.cat_semicategory \\<CC>.cat_semicategory assms)?\n      )"], ["proof (state)\nthis:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>A subcategory is a subsemicategory.\\<close>"], ["", "context subcategory\nbegin"], ["", "interpretation subsmc: subsemicategory \\<alpha> \\<open>cat_smc \\<BB>\\<close> \\<open>cat_smc \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<CC>", "by (rule subcat_subsemicategory)"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  subcat_Obj_vsubset = subsmc.subsmc_Obj_vsubset\n  and subcat_is_arr_vsubset = subsmc.subsmc_is_arr_vsubset\n  and subcat_subdigraph_op_dg_op_dg = subsmc.subsmc_subdigraph_op_dg_op_dg\n  and subcat_objD = subsmc.subsmc_objD\n  and subcat_arrD = subsmc.subsmc_arrD\n  and subcat_dom_simp = subsmc.subsmc_dom_simp\n  and subcat_cod_simp = subsmc.subsmc_cod_simp\n  and subcat_is_arrD = subsmc.subsmc_is_arrD"], ["", "lemmas_with [unfolded slicing_simps slicing_commute]:\n  subcat_Comp_simp = subsmc.subsmc_Comp_simp\n  and subcat_is_idem_arrD = subsmc.subsmc_is_idem_arrD"], ["", "end"], ["", "lemmas [cat_sub_fw_cs_intros] = \n  subcategory.subcat_Obj_vsubset\n  subcategory.subcat_is_arr_vsubset\n  subcategory.subcat_objD\n  subcategory.subcat_arrD\n  subcategory.subcat_is_arrD"], ["", "lemmas [cat_sub_bw_cs_simps] =\n  subcategory.subcat_dom_simp\n  subcategory.subcat_cod_simp"], ["", "lemmas [cat_sub_fw_cs_intros] = \n  subcategory.subcat_is_idem_arrD"], ["", "lemmas [cat_sub_bw_cs_simps] = \n  subcategory.subcat_Comp_simp"], ["", "text\\<open>The opposite subcategory.\\<close>"], ["", "lemma (in subcategory) subcat_subcategory_op_cat: \"op_cat \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>", "proof(rule subcategoryI)"], ["proof (state)\ngoal (4 subgoals):\n 1. category \\<alpha> (op_cat \\<BB>)\n 2. category \\<alpha> (op_cat \\<CC>)\n 3. cat_smc (op_cat \\<BB>)\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           (op_cat \\<CC>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> op_cat\n                              \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       op_cat \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show \"cat_smc (op_cat \\<BB>) \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc (op_cat \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc (op_cat \\<BB>)\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           (op_cat \\<CC>)", "unfolding slicing_commute[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_smc (cat_smc \\<BB>)\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_smc\n                           (cat_smc \\<CC>)", "by (intro subsmc_subsemicategory_op_smc subcat_subsemicategory)"], ["proof (state)\nthis:\n  cat_smc (op_cat \\<BB>)\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         (op_cat \\<CC>)\n\ngoal (3 subgoals):\n 1. category \\<alpha> (op_cat \\<BB>)\n 2. category \\<alpha> (op_cat \\<CC>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> op_cat\n                              \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       op_cat \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "qed (simp_all add: sdg.category_op dg.category_op cat_op_simps subcat_CId)"], ["", "lemmas subcat_subcategory_op_cat[intro] = subcategory.subcat_subcategory_op_cat"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in subcategory) subcat_CId_is_arr[intro]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "from assms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have \\<BB>\\<CC>: \"\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "by (simp add: subcat_CId)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "from assms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have \"\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "then"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "unfolding \\<BB>\\<CC>"], ["proof (prove)\nusing this:\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "by simp"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Further rules.\\<close>"], ["", "lemma (in subcategory) subcat_CId_simp[cat_sub_bw_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" \n  shows \"\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "by (simp add: subcat_CId)"], ["", "lemmas [cat_sub_bw_cs_simps] = subcategory.subcat_CId_simp"], ["", "lemma (in subcategory) subcat_is_right_inverseD[cat_sub_fw_cs_intros]: \n  assumes \"is_right_inverse \\<BB> g f\" \n  shows \"is_right_inverse \\<CC> g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_right_inverse \\<CC> g f", "using assms subcategory_axioms"], ["proof (prove)\nusing this:\n  is_right_inverse \\<BB> g f\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. is_right_inverse \\<CC> g f", "by (elim is_right_inverseE, intro is_right_inverseI)\n    (\n      cs_concl \n        cs_simp: cat_sub_bw_cs_simps[symmetric]\n        cs_intro: cat_sub_fw_cs_intros cat_cs_intros cat_sub_cs_intros\n    )"], ["", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_is_right_inverseD"], ["", "lemma (in subcategory) subcat_is_left_inverseD[cat_sub_fw_cs_intros]: \n  assumes \"is_left_inverse \\<BB> g f\" \n  shows \"is_left_inverse \\<CC> g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_left_inverse \\<CC> g f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. is_left_inverse \\<CC> g f", "have \"op_cat \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>", "by (simp add: subcat_subcategory_op_cat)"], ["proof (state)\nthis:\n  op_cat \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\n\ngoal (1 subgoal):\n 1. is_left_inverse \\<CC> g f", "from subcategory.subcat_is_right_inverseD[OF this]"], ["proof (chain)\npicking this:\n  is_right_inverse (op_cat \\<BB>) ?g ?f \\<Longrightarrow>\n  is_right_inverse (op_cat \\<CC>) ?g ?f", "show ?thesis"], ["proof (prove)\nusing this:\n  is_right_inverse (op_cat \\<BB>) ?g ?f \\<Longrightarrow>\n  is_right_inverse (op_cat \\<CC>) ?g ?f\n\ngoal (1 subgoal):\n 1. is_left_inverse \\<CC> g f", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  is_left_inverse \\<BB> ?g ?f \\<Longrightarrow> is_left_inverse \\<CC> ?g ?f\n\ngoal (1 subgoal):\n 1. is_left_inverse \\<CC> g f", "using assms"], ["proof (prove)\nusing this:\n  is_left_inverse \\<BB> ?g ?f \\<Longrightarrow> is_left_inverse \\<CC> ?g ?f\n  is_left_inverse \\<BB> g f\n\ngoal (1 subgoal):\n 1. is_left_inverse \\<CC> g f", "."], ["proof (state)\nthis:\n  is_left_inverse \\<CC> g f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_is_left_inverseD"], ["", "lemma (in subcategory) subcat_is_inverseD[cat_sub_fw_cs_intros]: \n  assumes \"is_inverse \\<BB> g f\" \n  shows \"is_inverse \\<CC> g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_inverse \\<CC> g f", "using assms subcategory_axioms"], ["proof (prove)\nusing this:\n  is_inverse \\<BB> g f\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. is_inverse \\<CC> g f", "by (elim is_inverseE, intro is_inverseI)\n    (\n      cs_concl \n        cs_simp: cat_sub_bw_cs_simps[symmetric]\n        cs_intro: cat_sub_fw_cs_intros cat_cs_intros cat_sub_cs_intros\n    )"], ["", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_is_inverseD"], ["", "lemma (in subcategory) subcat_is_arr_isomorphismD[cat_sub_fw_cs_intros]:\n  assumes \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "proof(intro is_arr_isomorphismI)"], ["proof (state)\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n 2. is_inverse \\<CC> ?g f", "from subcategory_axioms is_arr_isomorphismD(1)[OF assms]"], ["proof (chain)\npicking this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "show \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by \n      (\n        cs_concl \n          cs_simp: cat_sub_bw_cs_simps[symmetric] cs_intro: cat_sub_fw_cs_intros\n      )"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. is_inverse \\<CC> ?g f", "from assms"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "have \"is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f", "by (rule sdg.cat_the_inverse_is_inverse)"], ["proof (state)\nthis:\n  is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\n\ngoal (1 subgoal):\n 1. is_inverse \\<CC> ?g f", "with subcategory_axioms"], ["proof (chain)\npicking this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f", "show \"is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\""], ["proof (prove)\nusing this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\n\ngoal (1 subgoal):\n 1. is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f", "by (elim is_inverseE, intro is_inverseI)\n      (\n        cs_concl \n          cs_simp: cat_sub_bw_cs_simps[symmetric] \n          cs_intro: cat_sub_fw_cs_intros cat_cs_intros\n      )"], ["proof (state)\nthis:\n  is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_is_arr_isomorphismD"], ["", "lemma (in subcategory) subcat_the_inverse_simp[cat_sub_bw_cs_simps]:\n  assumes \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> = f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "have \"is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f", "by (auto dest: sdg.cat_the_inverse_is_inverse)"], ["proof (state)\nthis:\n  is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>", "with subcategory_axioms"], ["proof (chain)\npicking this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f", "have inv_f\\<BB>: \"is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\""], ["proof (prove)\nusing this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  is_inverse \\<BB> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\n\ngoal (1 subgoal):\n 1. is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f", "by (auto dest: cat_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>", "from assms"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "have \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "by (auto dest: cat_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>", "then"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "have inv_f\\<CC>: \"is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>) f\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>) f", "by (auto dest: dg.cat_the_inverse_is_inverse)"], ["proof (state)\nthis:\n  is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>) f\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>", "from inv_f\\<BB> inv_f\\<CC>"], ["proof (chain)\npicking this:\n  is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\n  is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>) f", "show ?thesis"], ["proof (prove)\nusing this:\n  is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub>) f\n  is_inverse \\<CC> (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>) f\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>", "by (intro dg.cat_is_inverse_eq)"], ["proof (state)\nthis:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_sub_bw_cs_simps] = subcategory.subcat_the_inverse_simp"], ["", "lemma (in subcategory) subcat_obj_isoD:\n  assumes \"a \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>\\<BB>\\<^esub> b\" \n  shows \"a \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>\\<CC>\\<^esub> b", "using assms subcategory_axioms"], ["proof (prove)\nusing this:\n  a \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>\\<BB>\\<^esub> b\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. a \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>\\<CC>\\<^esub> b", "by (elim obj_isoE) \n    (\n      cs_concl \n        cs_simp: cat_sub_bw_cs_simps cs_intro: obj_isoI cat_sub_fw_cs_intros\n    )"], ["", "lemmas [cat_sub_fw_cs_intros] = subcategory.subcat_obj_isoD"], ["", "subsubsection\\<open>Subcategory relation is a partial order\\<close>"], ["", "lemma subcat_refl:\n  assumes \"category \\<alpha> \\<AA>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret category \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<AA>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (auto intro: cat_cs_intros slicing_intros subdg_refl subsemicategoryI)"], ["proof (state)\nthis:\n  \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subcat_trans: \n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<BB>: subcategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>\\<CC>: subcategory \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule subcategoryI)"], ["proof (state)\ngoal (4 subgoals):\n 1. category \\<alpha> \\<AA>\n 2. category \\<alpha> \\<CC>\n 3. cat_smc \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<CC>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<AA>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show \"cat_smc \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<CC>", "by \n        (\n          meson \n            \\<AA>\\<BB>.subcat_subsemicategory \n            \\<BB>\\<CC>.subcat_subsemicategory \n            subsmc_trans\n        )"], ["proof (state)\nthis:\n  cat_smc \\<AA>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<CC>\n\ngoal (3 subgoals):\n 1. category \\<alpha> \\<AA>\n 2. category \\<alpha> \\<CC>\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<AA>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "qed \n    ( \n      use \\<AA>\\<BB>.subcategory_axioms \\<BB>\\<CC>.subcategory_axioms in \n        \\<open>auto simp: \\<AA>\\<BB>.subcat_Obj_vsubset cat_sub_bw_cs_simps\\<close>\n    )"], ["proof (state)\nthis:\n  \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subcat_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>\\<BB>: subcategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>\\<AA>: subcategory \\<alpha> \\<BB> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof(rule cat_eqI)"], ["proof (state)\ngoal (8 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 5. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 6. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 7. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n 8. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "from \n      subsmc_antisym[\n        OF \\<AA>\\<BB>.subcat_subsemicategory \\<BB>\\<AA>.subcat_subsemicategory\n        ]"], ["proof (chain)\npicking this:\n  cat_smc \\<AA> = cat_smc \\<BB>", "have \n      \"cat_smc \\<AA>\\<lparr>Obj\\<rparr> = cat_smc \\<BB>\\<lparr>Obj\\<rparr>\" \"cat_smc \\<AA>\\<lparr>Arr\\<rparr> = cat_smc \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  cat_smc \\<AA> = cat_smc \\<BB>\n\ngoal (1 subgoal):\n 1. cat_smc \\<AA>\\<lparr>Obj\\<rparr> = cat_smc \\<BB>\\<lparr>Obj\\<rparr> &&&\n    cat_smc \\<AA>\\<lparr>Arr\\<rparr> = cat_smc \\<BB>\\<lparr>Arr\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  cat_smc \\<AA>\\<lparr>Obj\\<rparr> = cat_smc \\<BB>\\<lparr>Obj\\<rparr>\n  cat_smc \\<AA>\\<lparr>Arr\\<rparr> = cat_smc \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (8 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 5. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 6. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 7. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n 8. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "then"], ["proof (chain)\npicking this:\n  cat_smc \\<AA>\\<lparr>Obj\\<rparr> = cat_smc \\<BB>\\<lparr>Obj\\<rparr>\n  cat_smc \\<AA>\\<lparr>Arr\\<rparr> = cat_smc \\<BB>\\<lparr>Arr\\<rparr>", "show Obj: \"\\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\" and Arr: \"\\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  cat_smc \\<AA>\\<lparr>Obj\\<rparr> = cat_smc \\<BB>\\<lparr>Obj\\<rparr>\n  cat_smc \\<AA>\\<lparr>Arr\\<rparr> = cat_smc \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr> &&&\n    \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>", "unfolding slicing_simps"], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n  \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr> &&&\n    \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n  \\<AA>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (6 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n 4. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 5. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n 6. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "show \"\\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>", "by (rule vsv_eqI) (auto simp: \\<AA>\\<BB>.subcat_dom_simp Arr cat_cs_simps)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Dom\\<rparr> = \\<BB>\\<lparr>Dom\\<rparr>\n\ngoal (5 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n 4. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n 5. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "show \"\\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>", "by (rule vsv_eqI) (auto simp: \\<BB>\\<AA>.subcat_cod_simp Arr cat_cs_simps)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Cod\\<rparr> = \\<BB>\\<lparr>Cod\\<rparr>\n\ngoal (4 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n 4. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "have \"cat_smc \\<AA> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<BB>\" \"cat_smc \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc \\<AA>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB> &&&\n    cat_smc \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<AA>", "by (simp_all add: \\<AA>\\<BB>.subcat_subsemicategory \\<BB>\\<AA>.subcat_subsemicategory)"], ["proof (state)\nthis:\n  cat_smc \\<AA>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<BB>\n  cat_smc \\<BB>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<AA>\n\ngoal (4 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n 4. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "from subsmc_antisym[OF this]"], ["proof (chain)\npicking this:\n  cat_smc \\<AA> = cat_smc \\<BB>", "have \"cat_smc \\<AA> = cat_smc \\<BB>\""], ["proof (prove)\nusing this:\n  cat_smc \\<AA> = cat_smc \\<BB>\n\ngoal (1 subgoal):\n 1. cat_smc \\<AA> = cat_smc \\<BB>", "."], ["proof (state)\nthis:\n  cat_smc \\<AA> = cat_smc \\<BB>\n\ngoal (4 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n 4. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "then"], ["proof (chain)\npicking this:\n  cat_smc \\<AA> = cat_smc \\<BB>", "have \"cat_smc \\<AA>\\<lparr>Comp\\<rparr> = cat_smc \\<BB>\\<lparr>Comp\\<rparr>\""], ["proof (prove)\nusing this:\n  cat_smc \\<AA> = cat_smc \\<BB>\n\ngoal (1 subgoal):\n 1. cat_smc \\<AA>\\<lparr>Comp\\<rparr> = cat_smc \\<BB>\\<lparr>Comp\\<rparr>", "by auto"], ["proof (state)\nthis:\n  cat_smc \\<AA>\\<lparr>Comp\\<rparr> = cat_smc \\<BB>\\<lparr>Comp\\<rparr>\n\ngoal (4 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n 4. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "then"], ["proof (chain)\npicking this:\n  cat_smc \\<AA>\\<lparr>Comp\\<rparr> = cat_smc \\<BB>\\<lparr>Comp\\<rparr>", "show \"\\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\""], ["proof (prove)\nusing this:\n  cat_smc \\<AA>\\<lparr>Comp\\<rparr> = cat_smc \\<BB>\\<lparr>Comp\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "unfolding slicing_simps"], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>", "by simp"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Comp\\<rparr> = \\<BB>\\<lparr>Comp\\<rparr>\n\ngoal (3 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>\n 3. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "show \"\\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>", "by (rule vsv_eqI) (auto simp: Obj \\<AA>\\<BB>.subcat_CId_simp cat_cs_simps)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>CId\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>\n\ngoal (2 subgoals):\n 1. category ?\\<alpha> \\<AA>\n 2. category ?\\<alpha> \\<BB>", "qed (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Inclusion functor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "abbreviation (input) cf_inc :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"cf_inc \\<equiv> dghm_inc\""], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma dghm_smcf_inc[slicing_commute]: \n  \"dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) = cf_smcf (cf_inc \\<BB> \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) =\n    cf_smcf (dghm_inc \\<BB> \\<CC>)", "unfolding cf_smcf_def dghm_inc_def cat_smc_def dg_field_simps dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [vid_on\n      ([\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n     vid_on\n      ([\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n        \\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n        \\<BB>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n     [\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<BB>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<BB>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<BB>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [\\<CC>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<CC>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<CC>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [[vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n      vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n      vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [[vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      [vid_on (\\<BB>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n       vid_on (\\<BB>\\<lparr>1\\<^sub>\\<nat>\\<rparr>), \\<BB>,\n       \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemmas [cat_cs_simps] = \n  dghm_inc_ObjMap_app \n  dghm_inc_ArrMap_app"], ["", "subsubsection\\<open>Canonical inclusion functor associated with a subcategory\\<close>"], ["", "sublocale subcategory \\<subseteq> inc: is_ft_functor \\<alpha> \\<BB> \\<CC> \\<open>cf_inc \\<BB> \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_ft_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                     \\<CC>", "interpret subsmc: subsemicategory \\<alpha> \\<open>cat_smc \\<BB>\\<close> \\<open>cat_smc \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<CC>", "by (rule subcat_subsemicategory)"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                     \\<CC>", "show \"cf_inc \\<BB> \\<CC> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_functorI)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (dghm_inc \\<BB> \\<CC>)\n 3. category \\<alpha> \\<BB>\n 4. category \\<alpha> \\<CC>\n 5. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n 6. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>\n 7. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 8. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 9. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       dghm_inc \\<BB>\n        \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       \\<CC>\\<lparr>CId\\<rparr>\\<lparr>dghm_inc \\<BB>\n  \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"vfsequence (cf_inc \\<BB> \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (dghm_inc \\<BB> \\<CC>)", "unfolding dghm_inc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n      \\<BB>, \\<CC>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (dghm_inc \\<BB> \\<CC>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<BB>\n 3. category \\<alpha> \\<CC>\n 4. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n 5. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 7. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 8. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       dghm_inc \\<BB>\n        \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       \\<CC>\\<lparr>CId\\<rparr>\\<lparr>dghm_inc \\<BB>\n  \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"vcard (cf_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>", "unfolding dghm_inc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [vid_on (\\<BB>\\<lparr>Obj\\<rparr>), vid_on (\\<BB>\\<lparr>Arr\\<rparr>),\n      \\<BB>, \\<CC>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (dghm_inc \\<BB> \\<CC>) = 4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<BB>\n 3. category \\<alpha> \\<CC>\n 4. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>\n 7. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       dghm_inc \\<BB>\n        \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       \\<CC>\\<lparr>CId\\<rparr>\\<lparr>dghm_inc \\<BB>\n  \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "from sdg.cat_CId_is_arr subcat_CId_simp"], ["proof (chain)\npicking this:\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?a\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr>", "show \"c \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> \n      cf_inc \\<BB> \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>cf_inc \\<BB> \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>\"\n      for c"], ["proof (prove)\nusing this:\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?a\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n    dghm_inc \\<BB>\n     \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>dghm_inc \\<BB>\n                                     \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "unfolding dghm_inc_components"], ["proof (prove)\nusing this:\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?a\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n    vid_on\n     (\\<BB>\\<lparr>Arr\\<rparr>)\\<lparr>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>vid_on\n                                     (\\<BB>\\<lparr>Obj\\<rparr>)\\<lparr>c\\<rparr>\\<rparr>", "by force"], ["proof (state)\nthis:\n  ?c \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  dghm_inc \\<BB>\n   \\<CC>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>?c\\<rparr>\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>dghm_inc \\<BB>\n                                   \\<CC>\\<lparr>ObjMap\\<rparr>\\<lparr>?c\\<rparr>\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<BB>\n 3. category \\<alpha> \\<CC>\n 4. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 6. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>", "from subsmc.inc.is_ft_semifunctor_axioms"], ["proof (chain)\npicking this:\n  dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                   \\<CC>", "show \n      \"cf_smcf (cf_inc \\<BB> \\<CC>) : cat_smc \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<CC>\""], ["proof (prove)\nusing this:\n  dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                   \\<CC>\n\ngoal (1 subgoal):\n 1. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>", "unfolding slicing_commute"], ["proof (prove)\nusing this:\n  cf_smcf (dghm_inc \\<BB> \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                   \\<CC>\n\ngoal (1 subgoal):\n 1. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>", "by auto"], ["proof (state)\nthis:\n  cf_smcf (dghm_inc \\<BB> \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n \\<CC>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<BB>\n 3. category \\<alpha> \\<CC>\n 4. dghm_inc \\<BB> \\<CC>\\<lparr>HomDom\\<rparr> = \\<BB>\n 5. dghm_inc \\<BB> \\<CC>\\<lparr>HomCod\\<rparr> = \\<CC>", "qed (auto simp: dghm_inc_components cat_cs_intros)"], ["proof (state)\nthis:\n  dghm_inc \\<BB> \\<CC> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                     \\<CC>", "from subsmc.inc.is_ft_semifunctor_axioms"], ["proof (chain)\npicking this:\n  dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                   \\<CC>", "show \n    \"cf_smcf (cf_inc \\<BB> \\<CC>) : cat_smc \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<CC>\""], ["proof (prove)\nusing this:\n  dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                   \\<CC>\n\ngoal (1 subgoal):\n 1. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                     \\<CC>", "unfolding slicing_commute"], ["proof (prove)\nusing this:\n  cf_smcf (dghm_inc \\<BB> \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                   \\<CC>\n\ngoal (1 subgoal):\n 1. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                     \\<CC>", "by auto"], ["proof (state)\nthis:\n  cf_smcf (dghm_inc \\<BB> \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                   \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas (in subcategory) subcat_cf_inc_is_ft_functor = inc.is_ft_functor_axioms"], ["", "subsubsection\\<open>Inclusion functor for the opposite categories\\<close>"], ["", "lemma (in subcategory) subcat_cf_inc_op_cat_is_functor:\n  \"cf_inc (op_cat \\<BB>) (op_cat \\<CC>) : op_cat \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc (op_cat \\<BB>) (op_cat \\<CC>) :\n    op_cat\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> op_cat\n                     \\<CC>", "by \n    (\n      intro \n        subcategory.subcat_cf_inc_is_ft_functor\n        subcat_subcategory_op_cat\n    )"], ["", "lemma (in subcategory) subcat_op_cat_cf_inc: \n  \"cf_inc (op_cat \\<BB>) (op_cat \\<CC>) = op_cf (cf_inc \\<BB> \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc (op_cat \\<BB>) (op_cat \\<CC>) = op_cf (dghm_inc \\<BB> \\<CC>)", "by (rule cf_eqI)\n    (\n      auto \n        simp: \n          cat_op_simps \n          dghm_inc_components\n          subcat_cf_inc_op_cat_is_functor\n          is_ft_functor.axioms(1) \n        intro: cat_op_intros \n    )"], ["", "subsection\\<open>Full subcategory\\<close>"], ["", "text\\<open>See Chapter I-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "locale fl_subcategory = subcategory +\n  assumes fl_subcat_fl_subsemicategory: \"cat_smc \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<CC>\""], ["", "abbreviation is_fl_subcategory (\"(_/ \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<index> _)\" [51, 51] 50)\n  where \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<equiv> fl_subcategory \\<alpha> \\<BB> \\<CC>\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf fl_subcategory_def[unfolded fl_subcategory_axioms_def]\n  |intro fl_subcategoryI|\n  |dest fl_subcategoryD[dest]|\n  |elim fl_subcategoryE[elim!]|"], ["", "lemmas [cat_sub_cs_intros] = fl_subcategoryD(1)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "sublocale fl_subcategory \\<subseteq> inc: is_fl_functor \\<alpha> \\<BB> \\<CC> \\<open>cf_inc \\<BB> \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_fl_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<CC>", "interpret fl_subsemicategory \\<alpha> \\<open>cat_smc \\<BB>\\<close> \\<open>cat_smc \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                             \\<CC>", "by (rule fl_subcat_fl_subsemicategory)"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<CC>", "from inc.is_fl_semifunctor_axioms"], ["proof (chain)\npicking this:\n  dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>", "show \n    \"cf_smcf (dghm_inc \\<BB> \\<CC>) : cat_smc \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<CC>\""], ["proof (prove)\nusing this:\n  dghm_inc (cat_smc \\<BB>) (cat_smc \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>\n\ngoal (1 subgoal):\n 1. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<CC>", "unfolding slicing_commute"], ["proof (prove)\nusing this:\n  cf_smcf (dghm_inc \\<BB> \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>\n\ngoal (1 subgoal):\n 1. cf_smcf (dghm_inc \\<BB> \\<CC>) :\n    cat_smc\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<CC>", "by simp"], ["proof (state)\nthis:\n  cf_smcf (dghm_inc \\<BB> \\<CC>) :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>u\\<^sub>l\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<CC>\n\ngoal (1 subgoal):\n 1. dghm_inc \\<BB> \\<CC> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "qed (rule inc.is_functor_axioms)"], ["", "subsection\\<open>Wide subcategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nSee \n\\cite{noauthor_nlab_nodate}\\footnote{\n\\url{https://ncatlab.org/nlab/show/wide+subcategory}\n}.\n\\<close>"], ["", "locale wide_subcategory = subcategory +\n  assumes wide_subcat_wide_subsemicategory: \"cat_smc \\<BB> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<CC>\""], ["", "abbreviation is_wide_subcategory (\"(_/ \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<index> _)\" [51, 51] 50)\n  where \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<equiv> wide_subcategory \\<alpha> \\<BB> \\<CC>\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf wide_subcategory_def[unfolded wide_subcategory_axioms_def]\n  |intro wide_subcategoryI|\n  |dest wide_subcategoryD[dest]|\n  |elim wide_subcategoryE[elim!]|"], ["", "lemmas [cat_sub_cs_intros] = wide_subcategoryD(1)"], ["", "text\\<open>Wide subcategory is wide subsemicategory.\\<close>"], ["", "context wide_subcategory\nbegin"], ["", "interpretation wide_subsmc: wide_subsemicategory \\<alpha> \\<open>cat_smc \\<BB>\\<close> \\<open>cat_smc \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc \\<BB>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                             \\<CC>", "by (rule wide_subcat_wide_subsemicategory)"], ["", "lemmas_with [unfolded slicing_simps]:\n  wide_subcat_Obj[dg_sub_bw_cs_intros] = wide_subsmc.wide_subsmc_Obj\n  and wide_subcat_obj_eq[dg_sub_bw_cs_simps] = wide_subsmc.wide_subsmc_obj_eq"], ["", "end"], ["", "lemmas [cat_sub_bw_cs_simps] =  wide_subcategory.wide_subcat_obj_eq[symmetric]"], ["", "lemmas [cat_sub_bw_cs_simps] = wide_subsemicategory.wide_subsmc_obj_eq"], ["", "subsubsection\\<open>The wide subcategory relation is a partial order\\<close>"], ["", "lemma wide_subcat_refl: \n  assumes \"category \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret category \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<AA>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by\n      (\n        auto intro: \n          assms\n          slicing_intros \n          wide_subsmc_refl \n          wide_subcategoryI \n          subsmc_refl \n      )"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wide_subcat_trans[trans]:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<BB>: wide_subcategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>\\<CC>: wide_subcategory \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by \n      (\n        intro \n          wide_subcategoryI \n          subcat_trans[OF \\<AA>\\<BB>.subcategory_axioms \\<BB>\\<CC>.subcategory_axioms], \n        rule wide_subsmc_trans, \n        rule \\<AA>\\<BB>.wide_subcat_wide_subsemicategory, \n        rule \\<BB>\\<CC>.wide_subcat_wide_subsemicategory\n     )"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wide_subcat_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>\\<BB>: wide_subcategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>\\<AA>: wide_subcategory \\<alpha> \\<BB> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "by (rule subcat_antisym[OF \\<AA>\\<BB>.subcategory_axioms \\<BB>\\<AA>.subcategory_axioms])"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Replete subcategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nSee nLab\n\\cite{noauthor_nlab_nodate}\\footnote{\n\\url{https://ncatlab.org/nlab/show/replete+subcategory}\n}.\n\\<close>"], ["", "locale replete_subcategory = subcategory \\<alpha> \\<BB> \\<CC> for \\<alpha> \\<BB> \\<CC> +\n  assumes rep_subcat_is_arr_isomorphism_is_arr: \n    \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow> f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["", "abbreviation is_replete_subcategory (\"(_/ \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<index> _)\" [51, 51] 50)\n  where \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<equiv> replete_subcategory \\<alpha> \\<BB> \\<CC>\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf replete_subcategory_def[unfolded replete_subcategory_axioms_def]\n  |intro replete_subcategoryI|\n  |dest replete_subcategoryD[dest]|\n  |elim replete_subcategoryE[elim!]|"], ["", "lemmas [cat_sub_cs_intros] = replete_subcategoryD(1)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma (in replete_subcategory) (*not cat_sub_intro*)\n  rep_subcat_is_arr_isomorphism_is_arr_isomorphism_left:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" and \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "proof(intro is_arr_isomorphismI is_inverseI)"], ["proof (state)\ngoal (5 subgoals):\n 1. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n 2. ?g : ?b1 \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?a1\n 3. f : ?a1 \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?b1\n 4. ?g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a1\\<rparr>\n 5. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> ?g =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?b1\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "show f: \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "by (auto intro: rep_subcat_is_arr_isomorphism_is_arr)"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (4 subgoals):\n 1. ?g : ?b1 \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?a1\n 2. f : ?a1 \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?b1\n 3. ?g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a1\\<rparr>\n 4. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> ?g =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?b1\\<rparr>", "have \"f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a", "by (rule dg.cat_the_inverse_is_arr_isomorphism[OF assms(2)])"], ["proof (state)\nthis:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (4 subgoals):\n 1. ?g : ?b1 \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?a1\n 2. f : ?a1 \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?b1\n 3. ?g \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a1\\<rparr>\n 4. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> ?g =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?b1\\<rparr>", "with f"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a", "show inv_f: \"f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "by (auto intro: rep_subcat_is_arr_isomorphism_is_arr)"], ["proof (state)\nthis:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (3 subgoals):\n 1. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n 2. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n 3. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>", "show \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b", "by (rule f)"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (2 subgoals):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n 2. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>", "from dg.category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "have [cat_sub_bw_cs_simps]: \n    \"f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (2 subgoals):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n 2. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>", "from dg.category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "have [cat_sub_bw_cs_simps]: \n    \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (2 subgoals):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n 2. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>", "from subcategory_axioms f inv_f"], ["proof (chain)\npicking this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "show \"f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f = \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "by (cs_concl cs_simp: cat_sub_bw_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  f =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>", "from subcategory_axioms f inv_f"], ["proof (chain)\npicking this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "show \"f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> = \\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<BB> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>", "by (cs_concl cs_simp: cat_sub_bw_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in replete_subcategory) (*not cat_sub_intro*)\n  rep_subcat_is_arr_isomorphism_is_arr_isomorphism_right:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" and \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\"\n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "from assms(2)"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "have \"f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a", "by (rule dg.cat_the_inverse_is_arr_isomorphism)"], ["proof (state)\nthis:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "with assms(1)"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a", "have inv_f: \"f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> a\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> a", "by (intro rep_subcat_is_arr_isomorphism_is_arr_isomorphism_left)"], ["proof (state)\nthis:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "then"], ["proof (chain)\npicking this:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> a", "have \"(f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\nusing this:\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "by (rule sdg.cat_the_inverse_is_arr_isomorphism)"], ["proof (state)\nthis:\n  (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "moreover"], ["proof (state)\nthis:\n  (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "from replete_subcategory_axioms assms inv_f"], ["proof (chain)\npicking this:\n  \\<BB>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> a", "have \"(f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> = f\""], ["proof (prove)\nusing this:\n  \\<BB>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n  f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub> : b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n    f", "by \n      (\n        cs_concl \n          cs_simp: cat_sub_bw_cs_simps cat_cs_simps cs_intro: cat_cs_intros \n      )"], ["proof (state)\nthis:\n  (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n  f\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "ultimately"], ["proof (chain)\npicking this:\n  (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n  (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n  f", "show ?thesis"], ["proof (prove)\nusing this:\n  (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n  (f\\<inverse>\\<^sub>C\\<^bsub>\\<CC>\\<^esub>)\\<inverse>\\<^sub>C\\<^bsub>\\<BB>\\<^esub> =\n  f\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "by simp"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in replete_subcategory) (*not cat_sub_bw_cs_simps*)\n  rep_subcat_is_arr_isomorphism_is_arr_isomorphism_left_iff:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" \n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b =\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "using assms replete_subcategory_axioms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<BB>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b =\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "by (intro iffI)\n    (\n      cs_concl cs_intro: \n        rep_subcat_is_arr_isomorphism_is_arr_isomorphism_left \n        cat_sub_fw_cs_intros\n    )"], ["", "lemma (in replete_subcategory) (*not cat_sub_bw_cs_simps*)\n  rep_subcat_is_arr_isomorphism_is_arr_isomorphism_right_iff:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" \n  shows \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b =\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "using assms replete_subcategory_axioms"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<BB>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b =\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "by (intro iffI)\n    (\n      cs_concl cs_intro: \n        rep_subcat_is_arr_isomorphism_is_arr_isomorphism_right\n        cat_sub_fw_cs_intros\n    )"], ["", "subsubsection\\<open>The replete subcategory relation is a partial order\\<close>"], ["", "lemma rep_subcat_refl: \n  assumes \"category \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "interpret category \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<AA>", "by (rule assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (intro replete_subcategoryI subcat_refl assms is_arr_isomorphismD(1))"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rep_subcat_trans[trans]:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<BB>: replete_subcategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>\\<CC>: replete_subcategory \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof\n    (\n      intro \n        replete_subcategoryI \n        subcat_trans[OF \\<AA>\\<BB>.subcategory_axioms \\<BB>\\<CC>.subcategory_axioms]\n    )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "fix a b f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "assume prems: \"a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\" \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "have \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "by \n        (\n          rule \\<AA>\\<BB>.dg.cat_is_arrD(3)\n            [\n              OF \\<BB>\\<CC>.rep_subcat_is_arr_isomorphism_is_arr[\n                OF \\<AA>\\<BB>.subcat_objD[OF prems(1)] prems(2)\n                ]\n            ]\n        )"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "then"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "by \n        (\n          rule \\<BB>\\<CC>.rep_subcat_is_arr_isomorphism_is_arr_isomorphism_right[\n            OF _ prems(2)\n            ]\n        )"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<AA>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "then"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "show \"f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "by (rule \\<AA>\\<BB>.rep_subcat_is_arr_isomorphism_is_arr[OF prems(1)])"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rep_subcat_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>\\<BB>: replete_subcategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>\\<AA>: replete_subcategory \\<alpha> \\<BB> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "by (rule subcat_antisym[OF \\<AA>\\<BB>.subcategory_axioms \\<BB>\\<AA>.subcategory_axioms])"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Wide replete subcategory\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "locale wide_replete_subcategory = \n  wide_subcategory \\<alpha> \\<BB> \\<CC> + replete_subcategory \\<alpha> \\<BB> \\<CC> for \\<alpha> \\<BB> \\<CC>"], ["", "abbreviation is_wide_replete_subcategory (\"(_/ \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<index> _)\" [51, 51] 50)\n  where \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<equiv> wide_replete_subcategory \\<alpha> \\<BB> \\<CC>\""], ["", "text\\<open>Rules.\\<close>"], ["", "mk_ide rf wide_replete_subcategory_def\n  |intro wide_replete_subcategoryI|\n  |dest wide_replete_subcategoryD[dest]|\n  |elim wide_replete_subcategoryE[elim!]|"], ["", "lemmas [cat_sub_cs_intros] = wide_replete_subcategoryD"], ["", "text\\<open>Wide replete subcategory preserves isomorphisms.\\<close>"], ["", "lemma (in wide_replete_subcategory) \n  wr_subcat_is_arr_isomorphism_is_arr_isomorphism:\n  \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<longleftrightarrow> f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b =\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n 2. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "assume prems: \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n 2. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "then"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "have \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n 2. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "have a: \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "by (simp add: wide_subcat_obj_eq)"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (2 subgoals):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b\n 2. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "show \"f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b", "by (intro rep_subcat_is_arr_isomorphism_is_arr_isomorphism_left[OF a prems])"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<BB>\\<^esub> b \\<Longrightarrow>\n    f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>\\<^esub> b", "qed \n  (\n    use wide_replete_subcategory_axioms in\n      \\<open>cs_concl cs_intro: cat_sub_fw_cs_intros \\<close>\n  )"], ["", "lemmas [cat_sub_bw_cs_simps] = \n  wide_replete_subcategory.wr_subcat_is_arr_isomorphism_is_arr_isomorphism"], ["", "subsubsection\\<open>The wide replete subcategory relation is a partial order\\<close>"], ["", "lemma wr_subcat_refl: \n  assumes \"category \\<alpha> \\<AA>\" \n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (intro wide_replete_subcategoryI wide_subcat_refl rep_subcat_refl assms)"], ["", "lemma wr_subcat_trans[trans]:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<AA>\\<BB>: wide_replete_subcategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<BB>\\<CC>: wide_replete_subcategory \\<alpha> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by \n      (\n        intro wide_replete_subcategoryI,\n        rule wide_subcat_trans, \n        rule \\<AA>\\<BB>.wide_subcategory_axioms,\n        rule \\<BB>\\<CC>.wide_subcategory_axioms,\n        rule rep_subcat_trans,\n        rule \\<AA>\\<BB>.replete_subcategory_axioms,\n        rule \\<BB>\\<CC>.replete_subcategory_axioms\n      )"], ["proof (state)\nthis:\n  \\<AA>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wr_subcat_antisym:\n  assumes \"\\<AA> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub>  \\<BB>\" and \"\\<BB> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub>  \\<AA>\"\n  shows \"\\<AA> = \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<AA>\\<BB>: wide_replete_subcategory \\<alpha> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "interpret \\<BB>\\<AA>: wide_replete_subcategory \\<alpha> \\<BB> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = \\<BB>", "by (rule subcat_antisym[OF \\<AA>\\<BB>.subcategory_axioms \\<BB>\\<AA>.subcategory_axioms])"], ["proof (state)\nthis:\n  \\<AA> = \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}