{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_SMC_CAT.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma smc_CAT_components:\n  shows \"smc_CAT \\<alpha>\\<lparr>Obj\\<rparr> = set {\\<CC>. category \\<alpha> \\<CC>}\"\n    and \"smc_CAT \\<alpha>\\<lparr>Arr\\<rparr> = all_cfs \\<alpha>\"\n    and \"smc_CAT \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>. \\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and \"smc_CAT \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>. \\<FF>\\<lparr>HomCod\\<rparr>)\"\n    and \"smc_CAT \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (dg_CAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>C\\<^sub>F \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"", "lemma smc_dg_CAT: \"smc_dg (smc_CAT \\<alpha>) = dg_CAT \\<alpha>\"", "lemmas_with [folded smc_dg_CAT, unfolded slicing_simps]: \n  smc_CAT_ObjI = dg_CAT_ObjI\n  and smc_CAT_ObjD = dg_CAT_ObjD\n  and smc_CAT_ObjE = dg_CAT_ObjE\n  and smc_CAT_Obj_iff[smc_CAT_simps] = dg_CAT_Obj_iff  \n  and smc_CAT_Dom_app[smc_CAT_simps] = dg_CAT_Dom_app\n  and smc_CAT_Cod_app[smc_CAT_simps] = dg_CAT_Cod_app\n  and smc_CAT_is_arrI = dg_CAT_is_arrI\n  and smc_CAT_is_arrD = dg_CAT_is_arrD\n  and smc_CAT_is_arrE = dg_CAT_is_arrE\n  and smc_CAT_is_arr_iff[smc_CAT_simps] = dg_CAT_is_arr_iff", "lemma smc_CAT_composable_arrs_dg_CAT: \n  \"composable_arrs (dg_CAT \\<alpha>) = composable_arrs (smc_CAT \\<alpha>)\"", "lemma smc_CAT_Comp: \n  \"smc_CAT \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (smc_CAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"", "lemma smc_CAT_Comp_app[smc_CAT_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> = \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\"", "lemma smc_CAT_Comp_vdomain: \"\\<D>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>) = composable_arrs (smc_CAT \\<alpha>)\"", "lemma smc_CAT_Comp_vrange: \"\\<R>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> all_cfs \\<alpha>\"", "lemma (in \\<Z>) tiny_semicategory_smc_CAT: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_semicategory \\<beta> (smc_CAT \\<alpha>)\"", "lemma (in \\<Z>) smc_CAT_obj_initialI: \"obj_initial (smc_CAT \\<alpha>) cat_0\"\n  \\<comment>\\<open>\n  See \\cite{noauthor_nlab_nodate}\\footnote{\\url{\n  https://ncatlab.org/nlab/show/initial+object\n  }}).\n  \\<close>", "lemma (in \\<Z>) smc_CAT_obj_initialD:\n  assumes \"obj_initial (smc_CAT \\<alpha>) \\<AA>\"\n  shows \"\\<AA> = cat_0\"", "lemma (in \\<Z>) smc_CAT_obj_initialE:\n  assumes \"obj_initial (smc_CAT \\<alpha>) \\<AA>\"\n  obtains \"\\<AA> = cat_0\"", "lemma (in \\<Z>) smc_CAT_obj_initial_iff[smc_CAT_simps]: \n  \"obj_initial (smc_CAT \\<alpha>) \\<AA> \\<longleftrightarrow> \\<AA> = cat_0\"", "lemma (in \\<Z>) smc_CAT_obj_terminalI: \n  \\<comment>\\<open>See \\cite{noauthor_nlab_nodate}\\footnote{\\url{\n  https://ncatlab.org/nlab/show/terminal+object\n  }}.\\<close>\n  assumes \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"obj_terminal (smc_CAT \\<alpha>) (cat_1 a f)\"", "lemma (in \\<Z>) smc_CAT_obj_terminalE: \n  assumes \"obj_terminal (smc_CAT \\<alpha>) \\<BB>\"\n  obtains a f where \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<BB> = cat_1 a f\""], "translations": [["", "lemma smc_CAT_components:\n  shows \"smc_CAT \\<alpha>\\<lparr>Obj\\<rparr> = set {\\<CC>. category \\<alpha> \\<CC>}\"\n    and \"smc_CAT \\<alpha>\\<lparr>Arr\\<rparr> = all_cfs \\<alpha>\"\n    and \"smc_CAT \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>. \\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and \"smc_CAT \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>. \\<FF>\\<lparr>HomCod\\<rparr>)\"\n    and \"smc_CAT \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (dg_CAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>C\\<^sub>F \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (smc_CAT \\<alpha>\\<lparr>Obj\\<rparr> =\n     ZFC_in_HOL.set {\\<CC>. category \\<alpha> \\<CC>} &&&\n     smc_CAT \\<alpha>\\<lparr>Arr\\<rparr> = all_cfs \\<alpha>) &&&\n    smc_CAT \\<alpha>\\<lparr>Dom\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>) &&&\n    smc_CAT \\<alpha>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>) &&&\n    smc_CAT \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "unfolding smc_CAT_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_CAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set {\\<CC>. category \\<alpha> \\<CC>} &&&\n     [ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_CAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     all_cfs \\<alpha>) &&&\n    [ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>) &&&\n    [ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>) &&&\n    [ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_dg_CAT: \"smc_dg (smc_CAT \\<alpha>) = dg_CAT \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_dg (smc_CAT \\<alpha>) = dg_CAT \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (smc_dg (smc_CAT \\<alpha>))\n 2. vsv (dg_CAT \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_CAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_CAT \\<alpha>\\<lparr>a\\<rparr>", "show \"vsv (smc_dg (smc_CAT \\<alpha>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (smc_dg (smc_CAT \\<alpha>))", "unfolding smc_dg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [smc_CAT \\<alpha>\\<lparr>Obj\\<rparr>,\n         smc_CAT \\<alpha>\\<lparr>Arr\\<rparr>,\n         smc_CAT \\<alpha>\\<lparr>Dom\\<rparr>,\n         smc_CAT \\<alpha>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vsv (smc_dg (smc_CAT \\<alpha>))\n\ngoal (3 subgoals):\n 1. vsv (dg_CAT \\<alpha>)\n 2. \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_CAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_CAT \\<alpha>\\<lparr>a\\<rparr>", "show \"vsv (dg_CAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (dg_CAT \\<alpha>)", "unfolding dg_CAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n         \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n            \\<FF>\\<lparr>HomDom\\<rparr>,\n         \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n            \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vsv (dg_CAT \\<alpha>)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_CAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_CAT \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) = 4\\<^sub>\\<nat>", "unfolding smc_dg_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [smc_CAT \\<alpha>\\<lparr>Obj\\<rparr>,\n      smc_CAT \\<alpha>\\<lparr>Arr\\<rparr>,\n      smc_CAT \\<alpha>\\<lparr>Dom\\<rparr>,\n      smc_CAT \\<alpha>\\<lparr>Cod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) = 4\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_CAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_CAT \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>) = 4\\<^sub>\\<nat>", "unfolding dg_CAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>) = 4\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_CAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_CAT \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) = \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ> (dg_CAT \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow>\n       smc_dg (smc_CAT \\<alpha>)\\<lparr>a\\<rparr> =\n       dg_CAT \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<AA> \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow> smc_dg (smc_CAT \\<alpha>)\\<lparr>\\<AA>\\<rparr> = dg_CAT \\<alpha>\\<lparr>\\<AA>\\<rparr>\"\n    for \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow>\n    smc_dg (smc_CAT \\<alpha>)\\<lparr>\\<AA>\\<rparr> =\n    dg_CAT \\<alpha>\\<lparr>\\<AA>\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral,\n        unfold smc_dg_def dg_field_simps smc_CAT_def dg_CAT_def\n      )\n      (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  ?\\<AA>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (smc_dg (smc_CAT \\<alpha>)) \\<Longrightarrow>\n  smc_dg (smc_CAT \\<alpha>)\\<lparr>?\\<AA>\\<rparr> =\n  dg_CAT \\<alpha>\\<lparr>?\\<AA>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas_with [folded smc_dg_CAT, unfolded slicing_simps]: \n  smc_CAT_ObjI = dg_CAT_ObjI\n  and smc_CAT_ObjD = dg_CAT_ObjD\n  and smc_CAT_ObjE = dg_CAT_ObjE\n  and smc_CAT_Obj_iff[smc_CAT_simps] = dg_CAT_Obj_iff  \n  and smc_CAT_Dom_app[smc_CAT_simps] = dg_CAT_Dom_app\n  and smc_CAT_Cod_app[smc_CAT_simps] = dg_CAT_Cod_app\n  and smc_CAT_is_arrI = dg_CAT_is_arrI\n  and smc_CAT_is_arrD = dg_CAT_is_arrD\n  and smc_CAT_is_arrE = dg_CAT_is_arrE\n  and smc_CAT_is_arr_iff[smc_CAT_simps] = dg_CAT_is_arr_iff"], ["", "subsection\\<open>Composable arrows\\<close>"], ["", "lemma smc_CAT_composable_arrs_dg_CAT: \n  \"composable_arrs (dg_CAT \\<alpha>) = composable_arrs (smc_CAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. composable_arrs (dg_CAT \\<alpha>) = composable_arrs (smc_CAT \\<alpha>)", "unfolding composable_arrs_def smc_dg_CAT[symmetric] slicing_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> b} =\n    ZFC_in_HOL.set\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>a b c.\n         g : b \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> c \\<and>\n         f : a \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> b}", "by auto"], ["", "lemma smc_CAT_Comp: \n  \"smc_CAT \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (smc_CAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_CAT \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (smc_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", "unfolding smc_CAT_components smc_CAT_composable_arrs_dg_CAT"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (smc_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (smc_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)", ".."], ["", "subsection\\<open>Composition\\<close>"], ["", "lemma smc_CAT_Comp_app[smc_CAT_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> = \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "from assms"], ["proof (chain)\npicking this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>", "have \"[\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)\""], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)", "by (auto simp: smc_cs_intros)"], ["proof (state)\nthis:\n  [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "then"], ["proof (chain)\npicking this:\n  [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)", "show \"\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> = \\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF>\""], ["proof (prove)\nusing this:\n  [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "unfolding smc_CAT_Comp"], ["proof (prove)\nusing this:\n  [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (smc_CAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) \\<lparr>\\<GG>,\n                    \\<FF>\\<rparr>\\<^sub>\\<bullet> =\n    \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> =\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smc_CAT_Comp_vdomain: \"\\<D>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>) = composable_arrs (smc_CAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>) =\n    composable_arrs (smc_CAT \\<alpha>)", "unfolding smc_CAT_Comp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (smc_CAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) =\n    composable_arrs (smc_CAT \\<alpha>)", "by auto"], ["", "lemma smc_CAT_Comp_vrange: \"\\<R>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> all_cfs \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> all_cfs \\<alpha>", "proof(rule vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_CAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "fix \\<HH>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_CAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "assume \"\\<HH> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_CAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)", "obtain \\<GG>\\<FF> \n    where \\<HH>_def: \"\\<HH> = smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\"\n      and \"\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<GG>\\<FF>.\n        \\<lbrakk>\\<HH> =\n                 smc_CAT\n                  \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>;\n         \\<GG>\\<FF>\n         \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (smc_CAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: smc_CAT_components intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<HH> = smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_CAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<HH> = smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)", "obtain \\<GG> \\<FF> \\<AA> \\<BB> \\<CC> \n    where \"\\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>\" \n      and \\<GG>: \"\\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\" \n      and \\<FF>: \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<HH> = smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n        \\<lbrakk>\\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>;\n         \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>;\n         \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: smc_CAT_Comp_vdomain)"], ["proof (state)\nthis:\n  \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_CAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "with \\<HH>_def"], ["proof (chain)\npicking this:\n  \\<HH> = smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>", "have \\<HH>_def': \"\\<HH> = \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF>\""], ["proof (prove)\nusing this:\n  \\<HH> = smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>\\<lparr>\\<GG>\\<FF>\\<rparr>\n  \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ>\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<HH> = \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF>", "by simp"], ["proof (state)\nthis:\n  \\<HH> = \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (smc_CAT\n                                \\<alpha>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "from \\<GG> \\<FF>"], ["proof (chain)\npicking this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>", "show \"\\<HH> \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<HH> \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "unfolding \\<HH>_def'"], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF>\n    \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "by (auto simp: smc_CAT_simps intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<HH> \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>\\<open>CAT\\<close> is a category\\<close>"], ["", "lemma (in \\<Z>) tiny_semicategory_smc_CAT: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_semicategory \\<beta> (smc_CAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_semicategory \\<beta> (smc_CAT \\<alpha>)", "proof(intro tiny_semicategoryI, unfold smc_CAT_is_arr_iff)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence (smc_CAT \\<alpha>)\n 3. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 4. vcard (smc_CAT \\<alpha>) = 5\\<^sub>\\<nat>\n 5. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 6. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b)\n 7. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f :\n                         a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "show \"vfsequence (smc_CAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (smc_CAT \\<alpha>)", "unfolding smc_CAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_CAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (smc_CAT \\<alpha>)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. vcard (smc_CAT \\<alpha>) = 5\\<^sub>\\<nat>\n 4. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 5. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b)\n 6. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f :\n                         a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c\n 7. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "show \"vcard (smc_CAT \\<alpha>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (smc_CAT \\<alpha>) = 5\\<^sub>\\<nat>", "unfolding smc_CAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [ZFC_in_HOL.set (Collect (category \\<alpha>)), all_cfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_cfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_CAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (smc_CAT \\<alpha>) = 5\\<^sub>\\<nat>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 4. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b)\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f :\n                         a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c\n 6. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "show \"(\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)) \\<longleftrightarrow>\n    (\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>. \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and> \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)\"\n    for \\<GG>\\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG>\\<FF>\n     \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n        \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n        \\<GG> :\n        \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)", "unfolding smc_CAT_Comp_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)) =\n    (\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n        \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n        \\<GG> :\n        \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG>\\<FF>\n    \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>) \\<Longrightarrow>\n    \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)", "show \"\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>) \\<Longrightarrow> \n      \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>. \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and> \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG>\\<FF>\n    \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>) \\<Longrightarrow>\n    \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (elim composable_arrsE) (auto simp: smc_CAT_is_arr_iff)"], ["proof (state)\nthis:\n  \\<GG>\\<FF>\n  \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>) \\<Longrightarrow>\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)", "assume \"\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>. \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and> \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (state)\nthis:\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n       \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n       \\<GG> :\n       \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n    \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)", "with smc_CAT_is_arr_iff"], ["proof (chain)\npicking this:\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^bsub>smc_CAT ?\\<alpha>\\<^esub> ?\\<BB> =\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)\""], ["proof (prove)\nusing this:\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^bsub>smc_CAT ?\\<alpha>\\<^esub> ?\\<BB> =\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)", "unfolding smc_CAT_Comp_vdomain"], ["proof (prove)\nusing this:\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^bsub>smc_CAT ?\\<alpha>\\<^esub> ?\\<BB> =\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n  \\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n     \\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n     \\<GG> :\n     \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)", "by (auto intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<GG>\\<FF> \\<in>\\<^sub>\\<circ> composable_arrs (smc_CAT \\<alpha>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?\\<GG>\\<FF>\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>\\<GG> \\<FF> \\<BB> \\<CC> \\<AA>.\n      ?\\<GG>\\<FF> = [\\<GG>, \\<FF>]\\<^sub>\\<circ> \\<and>\n      \\<GG> :\n      \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> \\<and>\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)\n\ngoal (5 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f :\n                         a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c\n 5. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "show \"\\<lbrakk> \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>; \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<rbrakk> \\<Longrightarrow> \n    \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    for \\<GG> \\<BB> \\<CC> \\<FF> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<GG> :\n             \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>;\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\\<rbrakk>\n    \\<Longrightarrow> \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                      \\<FF> :\n                      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (cs_concl cs_simp: smc_CAT_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<GG> :\n           ?\\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<CC>;\n   ?\\<FF> :\n   ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\\<rbrakk>\n  \\<Longrightarrow> ?\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                    ?\\<FF> :\n                    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<CC>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "fix \\<HH> \\<CC> \\<DD> \\<GG> \\<BB> \\<FF> \\<AA>"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "assume \"\\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\" \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (state)\nthis:\n  \\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "moreover"], ["proof (state)\nthis:\n  \\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "then"], ["proof (chain)\npicking this:\n  \\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \"\\<GG> \\<circ>\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \"\\<HH> \\<circ>\\<^sub>C\\<^sub>F \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\nusing this:\n  \\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC> &&&\n    \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (cs_concl cs_simp: smc_CAT_simps cs_intro: cat_cs_intros)+"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))\n 4. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> d;\n        g : b \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n                          f)", "ultimately"], ["proof (chain)\npicking this:\n  \\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "show \n    \"\\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF> = \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> (\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF>)\""], ["proof (prove)\nusing this:\n  \\<HH> : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<HH> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal (1 subgoal):\n 1. \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n    \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n    \\<FF> =\n    \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n    (\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF>)", "by (simp add: smc_CAT_is_arr_iff smc_CAT_Comp_app cf_comp_assoc)"], ["proof (state)\nthis:\n  \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n  \\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n  \\<FF> =\n  \\<HH> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub>\n  (\\<GG> \\<circ>\\<^sub>A\\<^bsub>smc_CAT \\<alpha>\\<^esub> \\<FF>)\n\ngoal (3 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (smc_CAT \\<alpha>\\<lparr>Comp\\<rparr>)\n 3. tiny_digraph \\<beta> (smc_dg (smc_CAT \\<alpha>))", "qed (auto simp: assms smc_dg_CAT tiny_category_dg_CAT smc_CAT_components)"], ["", "subsection\\<open>Initial object\\<close>"], ["", "lemma (in \\<Z>) smc_CAT_obj_initialI: \"obj_initial (smc_CAT \\<alpha>) cat_0\"\n  \\<comment>\\<open>\n  See \\cite{noauthor_nlab_nodate}\\footnote{\\url{\n  https://ncatlab.org/nlab/show/initial+object\n  }}).\n  \\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial (smc_CAT \\<alpha>) cat_0", "unfolding obj_initial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_terminal (op_smc (smc_CAT \\<alpha>)) cat_0", "proof(intro obj_terminalI, unfold smc_op_simps smc_CAT_is_arr_iff smc_CAT_Obj_iff)"], ["proof (state)\ngoal (2 subgoals):\n 1. category \\<alpha> cat_0\n 2. \\<And>a.\n       category \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_functor \\<alpha> cat_0 a)", "show \"category \\<alpha> cat_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> cat_0", "by (intro category_cat_0)"], ["proof (state)\nthis:\n  category \\<alpha> cat_0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       category \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_functor \\<alpha> cat_0 a)", "fix \\<AA>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       category \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_functor \\<alpha> cat_0 a)", "assume \"category \\<alpha> \\<AA>\""], ["proof (state)\nthis:\n  category \\<alpha> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       category \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_functor \\<alpha> cat_0 a)", "then"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<AA>", "interpret category \\<alpha> \\<AA>"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<AA>\n\ngoal (1 subgoal):\n 1. category \\<alpha> \\<AA>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       category \\<alpha> a \\<Longrightarrow>\n       Ex1 (is_functor \\<alpha> cat_0 a)", "show \"\\<exists>!f. f : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!f.\n       f : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?a : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n 2. \\<And>f.\n       f :\n       cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       f = ?a", "show cf_0: \"cf_0 \\<AA> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_0 \\<AA> :\n    cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (simp add: cf_0_is_functor category_axioms is_ft_functor.axioms(1))"], ["proof (state)\nthis:\n  cf_0 \\<AA> :\n  cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f :\n       cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       f = cf_0 \\<AA>", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f :\n       cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       f = cf_0 \\<AA>", "assume prems: \"\\<FF> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (state)\nthis:\n  \\<FF> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f :\n       cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       f = cf_0 \\<AA>", "interpret \\<FF>: is_functor \\<alpha> cat_0 \\<AA> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "using prems"], ["proof (prove)\nusing this:\n  \\<FF> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<FF> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f :\n       cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA> \\<Longrightarrow>\n       f = cf_0 \\<AA>", "show \"\\<FF> = cf_0 \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> = cf_0 \\<AA>", "proof(rule cf_eqI)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<FF> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. cf_0 \\<AA> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<FF>\\<lparr>ObjMap\\<rparr> = cf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n 4. \\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "show \"\\<FF> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by (simp add: prems)"], ["proof (state)\nthis:\n  \\<FF> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (5 subgoals):\n 1. cf_0 \\<AA> :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> = cf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 4. cat_0 = ?\\<CC>\n 5. \\<AA> = ?\\<DD>", "from cf_0"], ["proof (chain)\npicking this:\n  cf_0 \\<AA> :\n  cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show \"cf_0 \\<AA> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\nusing this:\n  cf_0 \\<AA> :\n  cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. cf_0 \\<AA> :\n    cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "unfolding smc_CAT_is_arr_iff"], ["proof (prove)\nusing this:\n  cf_0 \\<AA> :\n  cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. cf_0 \\<AA> :\n    cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by simp"], ["proof (state)\nthis:\n  cf_0 \\<AA> :\n  cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (4 subgoals):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = cf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n 2. \\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 3. cat_0 = cat_0\n 4. \\<AA> = \\<AA>", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>", "by (auto simp: cat_0_components cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (4 subgoals):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = cf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n 2. \\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 3. cat_0 = cat_0\n 4. \\<AA> = \\<AA>", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>", "show \"\\<FF>\\<lparr>ObjMap\\<rparr> = cf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = cf_0 \\<AA>\\<lparr>ObjMap\\<rparr>", "using \\<FF>.ObjMap.vbrelation_vintersection_vdomain"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<inter>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> ?s =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<inter>\\<^sub>\\<circ> ?s = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = cf_0 \\<AA>\\<lparr>ObjMap\\<rparr>", "by (auto simp: cf_0_components)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> = cf_0 \\<AA>\\<lparr>ObjMap\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 2. cat_0 = cat_0\n 3. \\<AA> = \\<AA>", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>", "by (auto simp: cat_0_components cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n 2. cat_0 = cat_0\n 3. \\<AA> = \\<AA>", "with \\<FF>.ArrMap.vbrelation_vintersection_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) \\<inter>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> ?s =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<inter>\\<^sub>\\<circ> ?s = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>", "show \n        \"\\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) \\<inter>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> ?s =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<inter>\\<^sub>\\<circ> ?s = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>", "by (auto simp: cf_0_components)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ArrMap\\<rparr> = cf_0 \\<AA>\\<lparr>ArrMap\\<rparr>\n\ngoal (2 subgoals):\n 1. cat_0 = cat_0\n 2. \\<AA> = \\<AA>", "qed (simp_all add: cf_0_components)"], ["proof (state)\nthis:\n  \\<FF> = cf_0 \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!f.\n     f : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_CAT_obj_initialD:\n  assumes \"obj_initial (smc_CAT \\<alpha>) \\<AA>\"\n  shows \"\\<AA> = cat_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = cat_0", "using assms"], ["proof (prove)\nusing this:\n  obj_initial (smc_CAT \\<alpha>) \\<AA>\n\ngoal (1 subgoal):\n 1. \\<AA> = cat_0", "unfolding obj_initial_def"], ["proof (prove)\nusing this:\n  obj_terminal (op_smc (smc_CAT \\<alpha>)) \\<AA>\n\ngoal (1 subgoal):\n 1. \\<AA> = cat_0", "proof(elim obj_terminalE, unfold smc_op_simps smc_CAT_is_arr_iff smc_CAT_Obj_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "assume prems: \n    \"category \\<alpha> \\<AA>\" \n    \"category \\<alpha> \\<BB> \\<Longrightarrow> \\<exists>!\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    for \\<BB>"], ["proof (state)\nthis:\n  category \\<alpha> \\<AA>\n  category \\<alpha> ?\\<BB> \\<Longrightarrow>\n  \\<exists>!\\<FF>.\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "from prems(2)[OF category_cat_0]"], ["proof (chain)\npicking this:\n  \\<exists>!\\<FF>.\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_0", "obtain \\<FF> where \\<FF>: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_0\""], ["proof (prove)\nusing this:\n  \\<exists>!\\<FF>.\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_0\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by meson"], ["proof (state)\nthis:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "interpret \\<FF>: is_functor \\<alpha> \\<AA> cat_0 \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_0", "by (rule \\<FF>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "unfolding cat_0_components(1)[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_0\\<lparr>Obj\\<rparr>", "by (simp add: \\<FF>.cf_ObjMap_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "have \"\\<FF>\\<lparr>ObjMap\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: \\<FF>.ObjMap.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "with \\<FF>.cf_ObjMap_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  \\<AA>\\<lparr>Obj\\<rparr>\n  \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "have Obj[simp]: \"\\<AA>\\<lparr>Obj\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  \\<AA>\\<lparr>Obj\\<rparr>\n  \\<FF>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "unfolding cat_0_components(2)[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_0\\<lparr>Arr\\<rparr>", "by (simp add: \\<FF>.cf_ArrMap_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>", "have \"\\<FF>\\<lparr>ArrMap\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: \\<FF>.ArrMap.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "with \\<FF>.cf_ArrMap_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  \\<AA>\\<lparr>Arr\\<rparr>\n  \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "have Arr[simp]: \"\\<AA>\\<lparr>Arr\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ArrMap\\<rparr>) =\n  \\<AA>\\<lparr>Arr\\<rparr>\n  \\<FF>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "from \\<FF>.HomDom.Dom.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Dom\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Dom\\<rparr>) = []\\<^sub>\\<circ>)", "have [simp]: \"\\<AA>\\<lparr>Dom\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Dom\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Dom\\<rparr>) = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Dom\\<rparr> = []\\<^sub>\\<circ>", "by (fastforce simp: \\<FF>.HomDom.cat_Dom_vempty_if_Arr_vempty)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Dom\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "from \\<FF>.HomDom.Cod.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Cod\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Cod\\<rparr>) = []\\<^sub>\\<circ>)", "have [simp]: \"\\<AA>\\<lparr>Cod\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Cod\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Cod\\<rparr>) = []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Cod\\<rparr> = []\\<^sub>\\<circ>", "by (fastforce simp: \\<FF>.HomDom.cat_Cod_vempty_if_Arr_vempty)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Cod\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "from Arr"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>", "have \"\\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> = 0\""], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> =\n    []\\<^sub>\\<circ>", "by (simp add: vcpower_of_vempty)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "with \\<FF>.HomDom.Comp.pnop_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>\n  \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> =\n  []\\<^sub>\\<circ>", "have \"\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times>\n                            2\\<^sub>\\<nat>\n  \\<AA>\\<lparr>Arr\\<rparr> ^\\<^sub>\\<times> 2\\<^sub>\\<nat> =\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "with \\<FF>.HomDom.Comp.vdomain_vrange_is_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>", "have [simp]: \"\\<AA>\\<lparr>Comp\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>Comp\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Comp\\<rparr> = []\\<^sub>\\<circ>", "by (auto intro: \\<FF>.HomDom.Comp.vsv_vrange_vempty)"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Comp\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "have \"\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = []\\<^sub>\\<circ>", "by (simp add: \\<FF>.HomDom.cat_CId_vdomain)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "with \\<FF>.HomDom.CId.vdomain_vrange_is_vempty \\<FF>.HomDom.CId.vsv_vrange_vempty"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<AA>\\<lparr>CId\\<rparr> = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = []\\<^sub>\\<circ>", "have [simp]: \"\\<AA>\\<lparr>CId\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<R>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<AA>\\<lparr>CId\\<rparr> = []\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (\\<AA>\\<lparr>CId\\<rparr>) = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>CId\\<rparr> = []\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>CId\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>category \\<alpha> \\<AA>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        Ex1 (is_functor \\<alpha> \\<AA> a);\n     obj_initial (smc_CAT \\<alpha>) \\<AA>\\<rbrakk>\n    \\<Longrightarrow> \\<AA> = cat_0", "show \"\\<AA> = cat_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> = cat_0", "by (rule cat_eqI[of \\<alpha>])  \n      (simp_all add: prems(1) cat_0_components category_cat_0)"], ["proof (state)\nthis:\n  \\<AA> = cat_0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) smc_CAT_obj_initialE:\n  assumes \"obj_initial (smc_CAT \\<alpha>) \\<AA>\"\n  obtains \"\\<AA> = cat_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<AA> = cat_0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  obj_initial (smc_CAT \\<alpha>) \\<AA>\n\ngoal (1 subgoal):\n 1. (\\<AA> = cat_0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto dest: smc_CAT_obj_initialD)"], ["", "lemma (in \\<Z>) smc_CAT_obj_initial_iff[smc_CAT_simps]: \n  \"obj_initial (smc_CAT \\<alpha>) \\<AA> \\<longleftrightarrow> \\<AA> = cat_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_initial (smc_CAT \\<alpha>) \\<AA> = (\\<AA> = cat_0)", "using smc_CAT_obj_initialI smc_CAT_obj_initialD"], ["proof (prove)\nusing this:\n  obj_initial (smc_CAT \\<alpha>) cat_0\n  obj_initial (smc_CAT \\<alpha>) ?\\<AA> \\<Longrightarrow> ?\\<AA> = cat_0\n\ngoal (1 subgoal):\n 1. obj_initial (smc_CAT \\<alpha>) \\<AA> = (\\<AA> = cat_0)", "by auto"], ["", "subsection\\<open>Terminal object\\<close>"], ["", "lemma (in \\<Z>) smc_CAT_obj_terminalI: \n  \\<comment>\\<open>See \\cite{noauthor_nlab_nodate}\\footnote{\\url{\n  https://ncatlab.org/nlab/show/terminal+object\n  }}.\\<close>\n  assumes \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"obj_terminal (smc_CAT \\<alpha>) (cat_1 a f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. obj_terminal (smc_CAT \\<alpha>) (cat_1 a f)", "proof(intro obj_terminalI, unfold smc_op_simps smc_CAT_is_arr_iff smc_CAT_Obj_iff)"], ["proof (state)\ngoal (2 subgoals):\n 1. category \\<alpha> (cat_1 a f)\n 2. \\<And>aa.\n       category \\<alpha> aa \\<Longrightarrow>\n       \\<exists>!\\<FF>.\n          \\<FF> :\n          aa \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "fix \\<AA>"], ["proof (state)\ngoal (2 subgoals):\n 1. category \\<alpha> (cat_1 a f)\n 2. \\<And>aa.\n       category \\<alpha> aa \\<Longrightarrow>\n       \\<exists>!\\<FF>.\n          \\<FF> :\n          aa \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "assume prems: \"category \\<alpha> \\<AA>\""], ["proof (state)\nthis:\n  category \\<alpha> \\<AA>\n\ngoal (2 subgoals):\n 1. category \\<alpha> (cat_1 a f)\n 2. \\<And>aa.\n       category \\<alpha> aa \\<Longrightarrow>\n       \\<exists>!\\<FF>.\n          \\<FF> :\n          aa \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "then"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<AA>", "interpret category \\<alpha> \\<AA>"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<AA>\n\ngoal (1 subgoal):\n 1. category \\<alpha> \\<AA>", "."], ["proof (state)\ngoal (2 subgoals):\n 1. category \\<alpha> (cat_1 a f)\n 2. \\<And>aa.\n       category \\<alpha> aa \\<Longrightarrow>\n       \\<exists>!\\<FF>.\n          \\<FF> :\n          aa \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "show \"\\<exists>!\\<FF>'. \\<FF>' : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?a : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\n 2. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a\n                           f \\<Longrightarrow>\n       \\<FF>' = ?a", "show cf_1: \"cf_const \\<AA> (cat_1 a f) a : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<AA> (cat_1 a f) a\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "by (rule cf_const_is_functor)\n        (auto simp: assms prems category_cat_1 cat_1_components)"], ["proof (state)\nthis:\n  dghm_const \\<AA> (cat_1 a f) a\n   (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\n\ngoal (1 subgoal):\n 1. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a\n                           f \\<Longrightarrow>\n       \\<FF>' =\n       dghm_const \\<AA> (cat_1 a f) a\n        (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "fix \\<FF>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a\n                           f \\<Longrightarrow>\n       \\<FF>' =\n       dghm_const \\<AA> (cat_1 a f) a\n        (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "assume \"\\<FF>' : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\""], ["proof (state)\nthis:\n  \\<FF>' :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\n\ngoal (1 subgoal):\n 1. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a\n                           f \\<Longrightarrow>\n       \\<FF>' =\n       dghm_const \\<AA> (cat_1 a f) a\n        (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  \\<FF>' :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "interpret \\<FF>': is_functor \\<alpha> \\<AA> \\<open>cat_1 a f\\<close> \\<FF>'"], ["proof (prove)\nusing this:\n  \\<FF>' :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\n\ngoal (1 subgoal):\n 1. \\<FF>' :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<FF>'.\n       \\<FF>' :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a\n                           f \\<Longrightarrow>\n       \\<FF>' =\n       dghm_const \\<AA> (cat_1 a f) a\n        (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "show \"\\<FF>' = cf_const \\<AA> (cat_1 a f) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>' =\n    dghm_const \\<AA> (cat_1 a f) a\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "proof(rule cf_eqI, unfold dghm_const_components)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<FF>' :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_const \\<AA> (cat_1 a f) a\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 4. \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "from cf_1"], ["proof (chain)\npicking this:\n  dghm_const \\<AA> (cat_1 a f) a\n   (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "show \"cf_const \\<AA> (cat_1 a f) a : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\""], ["proof (prove)\nusing this:\n  dghm_const \\<AA> (cat_1 a f) a\n   (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\n\ngoal (1 subgoal):\n 1. dghm_const \\<AA> (cat_1 a f) a\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f", "by simp"], ["proof (state)\nthis:\n  dghm_const \\<AA> (cat_1 a f) a\n   (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\n\ngoal (5 subgoals):\n 1. \\<FF>' :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 3. \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n 4. ?\\<AA> = \\<AA>\n 5. ?\\<BB> = cat_1 a f", "show \"\\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "proof(cases\\<open>\\<AA>\\<lparr>Obj\\<rparr> = 0\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "case True"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "with \\<FF>'.ObjMap.vbrelation_vintersection_vdomain"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<inter>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> ?s =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>'\\<lparr>ObjMap\\<rparr> \\<inter>\\<^sub>\\<circ> ?s = []\\<^sub>\\<circ>\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>", "have \"\\<FF>'\\<lparr>ObjMap\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<inter>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> ?s =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>'\\<lparr>ObjMap\\<rparr> \\<inter>\\<^sub>\\<circ> ?s = []\\<^sub>\\<circ>\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "with True"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ>\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "by simp"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "case False"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "then"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ>", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n    []\\<^sub>\\<circ>", "by (auto simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n    []\\<^sub>\\<circ>", "by (simp add: \\<FF>'.ObjMap.vsv_vdomain_vempty_vrange_vempty)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "from \\<FF>'.cf_ObjMap_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_1 a f\\<lparr>Obj\\<rparr>", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {a}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_1 a f\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "by (simp add: cat_1_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = set {a}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a", "by (intro vsv.vsv_is_vconst_onI) (auto simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ObjMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Obj\\<rparr>) a\n\ngoal (4 subgoals):\n 1. \\<FF>' :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n 3. ?\\<AA> = \\<AA>\n 4. ?\\<BB> = cat_1 a f", "show \"\\<FF>'\\<lparr>ArrMap\\<rparr> = vconst_on (\\<AA>\\<lparr>Arr\\<rparr>) (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "proof(cases\\<open>\\<AA>\\<lparr>Arr\\<rparr> = 0\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "case True"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "with \n          \\<FF>'.ArrMap.vdomain_vrange_is_vempty\n          vsv.vsv_vrange_vempty[OF \\<FF>'.cf_ArrMap_vsv]"], ["proof (chain)\npicking this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>", "have \"\\<FF>'\\<lparr>ArrMap\\<rparr> = 0\""], ["proof (prove)\nusing this:\n  (\\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>) =\n  (\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = []\\<^sub>\\<circ>)\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) =\n  []\\<^sub>\\<circ> \\<Longrightarrow>\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "by (auto simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "with True"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ>\n  \\<FF>'\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ArrMap\\<rparr> =\n  vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n   (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "case False"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ>", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n    []\\<^sub>\\<circ>", "by (auto simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n    []\\<^sub>\\<circ>", "by (simp add: \\<FF>'.ArrMap.vsv_vdomain_vempty_vrange_vempty)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "moreover"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "from \\<FF>'.cf_ArrMap_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_1 a f\\<lparr>Arr\\<rparr>", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {f}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_1 a f\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}", "by (simp add: cat_1_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "ultimately"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}", "have \"\\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = set {f}\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) \\<noteq>\n  []\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<noteq> []\\<^sub>\\<circ> \\<Longrightarrow>\n    \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>'\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {f}\n\ngoal (1 subgoal):\n 1. \\<FF>'\\<lparr>ArrMap\\<rparr> =\n    vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n     (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "by \n            (\n              cs_concl \n                cs_simp: V_cs_simps cat_cs_simps cat_1_components\n                cs_intro: V_cs_intros vsv.vsv_is_vconst_onI\n            )+"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ArrMap\\<rparr> =\n  vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n   (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<FF>'\\<lparr>ArrMap\\<rparr> =\n  vconst_on (\\<AA>\\<lparr>Arr\\<rparr>)\n   (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal (3 subgoals):\n 1. \\<FF>' :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. ?\\<AA> = \\<AA>\n 3. ?\\<BB> = cat_1 a f", "qed (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<FF>' =\n  dghm_const \\<AA> (cat_1 a f) a\n   (cat_1 a f\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!\\<FF>'.\n     \\<FF>' :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 a f\n\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_1 a f)", "qed (simp add: assms category_cat_1)"], ["", "lemma (in \\<Z>) smc_CAT_obj_terminalE: \n  assumes \"obj_terminal (smc_CAT \\<alpha>) \\<BB>\"\n  obtains a f where \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<BB> = cat_1 a f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a f.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>; \\<BB> = cat_1 a f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  obj_terminal (smc_CAT \\<alpha>) \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>a f.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         f \\<in>\\<^sub>\\<circ> Vset \\<alpha>; \\<BB> = cat_1 a f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof(elim obj_terminalE, unfold cat_op_simps smc_CAT_is_arr_iff smc_CAT_Obj_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = cat_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     category \\<alpha> \\<BB>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_CAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume prems: \"category \\<alpha> \\<BB>\" \"category \\<alpha> \\<AA> \\<Longrightarrow> \\<exists>!\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" for \\<AA>"], ["proof (state)\nthis:\n  category \\<alpha> \\<BB>\n  category \\<alpha> ?\\<AA> \\<Longrightarrow>\n  \\<exists>!\\<FF>.\n     \\<FF> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = cat_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     category \\<alpha> \\<BB>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_CAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "interpret \\<BB>: category \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<BB>", "by (rule prems(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = cat_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     category \\<alpha> \\<BB>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_CAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain a where \\<BB>_Obj: \"\\<BB>\\<lparr>Obj\\<rparr> = set {a}\" and a: \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have cat_1: \"category \\<alpha> (cat_1 0 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>)", "by (rule category_cat_1) auto"], ["proof (state)\nthis:\n  category \\<alpha> (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from prems(2)[OF cat_1]"], ["proof (chain)\npicking this:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     cat_1 []\\<^sub>\\<circ>\n      []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<FF> \n      where \\<FF>: \"\\<FF> : cat_1 0 0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n        and \\<GG>\\<FF>: \"\\<GG> : cat_1 0 0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow> \\<GG> = \\<FF>\" for \\<GG>"], ["proof (prove)\nusing this:\n  \\<exists>!\\<FF>.\n     \\<FF> :\n     cat_1 []\\<^sub>\\<circ>\n      []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<lbrakk>\\<FF> :\n                 cat_1 []\\<^sub>\\<circ>\n                  []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n         \\<And>\\<GG>.\n            \\<GG> :\n            cat_1 []\\<^sub>\\<circ>\n             []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n            \\<GG> = \\<FF>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<FF> :\n  cat_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  ?\\<GG> :\n  cat_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n  ?\\<GG> = \\<FF>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret \\<FF>: is_functor \\<alpha> \\<open>cat_1 0 0\\<close> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    cat_1 []\\<^sub>\\<circ>\n     []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule \\<FF>)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = set {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n    ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "by (simp add: cat_1_components cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}", "obtain a where vrange_\\<FF>[simp]: \"\\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = set {a}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {[]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) =\n        ZFC_in_HOL.set {a} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto intro: \\<FF>.ObjMap.vsv_vdomain_vsingleton_vrange_vsingleton)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with \\<BB>.cat_Obj_vsubset_Vset \\<FF>.cf_ObjMap_vrange"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}", "have [simp]: \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by auto"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<FF>.cf_ObjMap_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have \"set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "by simp"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> set {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "assume \"\\<not>\\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> set {a}\""], ["proof (state)\nthis:\n  \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "obtain b where ba: \"b \\<noteq> a\" and b: \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n         \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<noteq> a;\n         b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  b \\<noteq> a\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "have \"cf_const (cat_1 0 0) \\<BB> b : cat_1 0 0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n     (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>) :\n    cat_1 []\\<^sub>\\<circ>\n     []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule cf_const_is_functor)\n          (simp_all add: \\<BB>.category_axioms category_cat_1 b)"], ["proof (state)\nthis:\n  dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n   (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>) :\n  cat_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n   (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>) :\n  cat_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \\<GG>_def: \"cf_const (cat_1 0 0) \\<BB> b = \\<FF>\""], ["proof (prove)\nusing this:\n  dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n   (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>) :\n  cat_1 []\\<^sub>\\<circ>\n   []\\<^sub>\\<circ> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n     (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>) =\n    \\<FF>", "by (rule \\<GG>\\<FF>)"], ["proof (state)\nthis:\n  dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n   (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>) =\n  \\<FF>\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "have \"\\<R>\\<^sub>\\<circ> (cf_const (cat_1 0 0) \\<BB> b\\<lparr>ObjMap\\<rparr>) = set {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n       (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n    ZFC_in_HOL.set {b}", "unfolding dghm_const_components cat_1_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vconst_on (ZFC_in_HOL.set {[]\\<^sub>\\<circ>}) b) =\n    ZFC_in_HOL.set {b}", "by simp"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n     (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. \\<not> \\<BB>\\<lparr>Obj\\<rparr>\n           \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<Longrightarrow>\n    False", "with vrange_\\<FF> ba"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n  b \\<noteq> a\n  \\<R>\\<^sub>\\<circ>\n   (dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n     (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {b}", "show False"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n  b \\<noteq> a\n  \\<R>\\<^sub>\\<circ>\n   (dghm_const (cat_1 []\\<^sub>\\<circ> []\\<^sub>\\<circ>) \\<BB> b\n     (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. False", "unfolding \\<GG>_def"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {a}\n  b \\<noteq> a\n  \\<R>\\<^sub>\\<circ> (\\<FF>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {b}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}", "have \"\\<BB>\\<lparr>Obj\\<rparr> = set {a}\""], ["proof (prove)\nusing this:\n  ZFC_in_HOL.set {a} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<BB>\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "by simp"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a};\n         a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {?a};\n   ?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {?a};\n   ?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = cat_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     category \\<alpha> \\<BB>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_CAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \\<BB>_Arr: \"\\<BB>\\<lparr>Arr\\<rparr> = set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr> =\n    ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "proof(rule vsubset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<BB>\\<lparr>Arr\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n 2. ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n    \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "from \\<BB>_Obj"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "show \"set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>} \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n    \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "by (blast intro: \\<BB>.cat_is_arrD(1) cat_cs_intros)"], ["proof (state)\nthis:\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "show \"\\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "assume \"f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "with \\<BB>_Obj"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "have f: \"f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n  f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "by (metis \\<BB>.cat_is_arrD(2,3) is_arrI vsingleton_iff)"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "from f"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "have \"cf_const \\<BB> \\<BB> a : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (intro cf_const_is_functor) (auto simp: \\<BB>.category_axioms)"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "moreover"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "from f"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "have \"cf_id \\<BB> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. dghm_id \\<BB> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (intro category.cat_cf_id_is_functor)\n          (auto simp: \\<BB>.category_axioms)"], ["proof (state)\nthis:\n  dghm_id \\<BB> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "ultimately"], ["proof (chain)\npicking this:\n  dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  dghm_id \\<BB> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \"cf_const \\<BB> \\<BB> a = cf_id \\<BB>\""], ["proof (prove)\nusing this:\n  dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  dghm_id \\<BB> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) =\n    dghm_id \\<BB>", "by (metis prems(2) \\<BB>.category_axioms)"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) =\n  dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "moreover"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) =\n  dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "from f"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "have \"cf_const \\<BB> \\<BB> a\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. dghm_const \\<BB> \\<BB> a\n     (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "by (simp add: \\<open>f \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\\<close> dghm_const_ArrMap_app)"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a\n   (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "moreover"], ["proof (state)\nthis:\n  dghm_const \\<BB> \\<BB> a\n   (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "from f"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a", "have \"cf_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = f\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = f", "unfolding dghm_id_components"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n\ngoal (1 subgoal):\n 1. vid_on (\\<BB>\\<lparr>Arr\\<rparr>)\\<lparr>f\\<rparr> = f", "by (simp add: cat_cs_intros)"], ["proof (state)\nthis:\n  dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "ultimately"], ["proof (chain)\npicking this:\n  dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) =\n  dghm_id \\<BB>\n  dghm_const \\<BB> \\<BB> a\n   (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n  dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = f", "show \"f \\<in>\\<^sub>\\<circ> set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\""], ["proof (prove)\nusing this:\n  dghm_const \\<BB> \\<BB> a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) =\n  dghm_id \\<BB>\n  dghm_const \\<BB> \\<BB> a\n   (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n  dghm_id \\<BB>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = f\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "by simp"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr>\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = cat_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     category \\<alpha> \\<BB>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_CAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"\\<BB> = cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB> = cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "proof(rule cat_eqI[of \\<alpha>], unfold cat_1_components)"], ["proof (state)\ngoal (8 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. category \\<alpha> (cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>))\n 3. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 4. \\<BB>\\<lparr>Arr\\<rparr> =\n    ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n 5. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 6. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 7. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 8. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "from \\<BB>.cat_Arr_vsubset_Vset \\<BB>_Arr"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<BB>\\<lparr>Arr\\<rparr> =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "show \"category \\<alpha> (cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>))\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<BB>\\<lparr>Arr\\<rparr> =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>))", "by (intro category_cat_1) (auto simp: a)"], ["proof (state)\nthis:\n  category \\<alpha> (cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>))\n\ngoal (7 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Arr\\<rparr> =\n    ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n 4. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 5. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 6. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 7. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "show \"\\<BB>\\<lparr>Arr\\<rparr> = set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr> =\n    ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "by (simp add: \\<BB>_Arr)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (6 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 6. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "then"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>Arr\\<rparr> =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "have \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\""], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>Arr\\<rparr> =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n    ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "by (simp add: cat_cs_simps cat_cs_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (6 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 6. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (6 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 6. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "have \"\\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = set {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}", "using \\<BB>.cat_Dom_vrange \\<BB>.cat_CId_is_arr \\<BB>.cat_Dom_vdomain"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?a\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}", "by (auto simp: \\<BB>_Obj elim: \\<BB>.Dom.vbrelation_vinE)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (6 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 6. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "(*slow*)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (6 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 5. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 6. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}", "show \"\\<BB>\\<lparr>Dom\\<rparr> = set {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}", "using \\<BB>.Dom.vsv_vdomain_vrange_vsingleton"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) = ZFC_in_HOL.set {a}\n  \\<lbrakk>\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n           ZFC_in_HOL.set {?a};\n   \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Dom\\<rparr>) =\n   ZFC_in_HOL.set {?b}\\<rbrakk>\n  \\<Longrightarrow> \\<BB>\\<lparr>Dom\\<rparr> =\n                    ZFC_in_HOL.set {\\<langle>?a, ?b\\<rangle>}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Dom\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}", "by simp"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Dom\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n\ngoal (5 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 5. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "have \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n    ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "by (simp add: \\<BB>_Arr cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (5 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 5. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (5 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 5. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "have \"\\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = set {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}", "using \\<BB>.cat_Cod_vrange \\<BB>.cat_CId_is_arr \\<BB>.cat_Cod_vdomain"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  ?a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> : ?a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> ?a\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}", "by (auto simp: \\<BB>_Obj elim: \\<BB>.Cod.vbrelation_vinE)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (5 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 5. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "(*slow*)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (5 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n 4. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 5. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}", "show \"\\<BB>\\<lparr>Cod\\<rparr> = set {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>Cod\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}", "by (auto intro: \\<BB>.Cod.vsv_vdomain_vrange_vsingleton)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Cod\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, a\\<rangle>}\n\ngoal (4 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n 4. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "show \"\\<BB>\\<lparr>Comp\\<rparr> = set {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. vsv (ZFC_in_HOL.set\n          {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                     \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>})\n 3. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set\n       {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                 \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>})\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                   \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\\<lparr>aa\\<rparr>", "show dom: \n        \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) = \\<D>\\<^sub>\\<circ> (set {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (ZFC_in_HOL.set\n       {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                 \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>})", "unfolding vdomain_vsingleton"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) =\n    ZFC_in_HOL.set\n     {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n       \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}", "proof(rule vsubset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                                 \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}\n 2. ZFC_in_HOL.set\n     {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n       \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "show \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) \\<subseteq>\\<^sub>\\<circ> set {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                                 \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}", "by (intro vsubsetI) \n             (metis \\<BB>.cat_Comp_vdomain \\<BB>_Arr vsingleton_iff \\<BB>.cat_is_arrD(1))"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}\n\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n       \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "show \"set {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>} \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n       \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)", "by\n            (\n              metis\n                \\<BB>_Obj vsingleton_iff \n                \\<BB>.cat_CId_is_arr\n                \\<BB>.cat_Comp_vdomainI \n                vsubset_vsingleton_left\n            )"], ["proof (state)\nthis:\n  ZFC_in_HOL.set\n   {[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n     \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>}\n  \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) =\n  \\<D>\\<^sub>\\<circ>\n   (ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>})\n\ngoal (3 subgoals):\n 1. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. vsv (ZFC_in_HOL.set\n          {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                     \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>})\n 3. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                   \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\\<lparr>aa\\<rparr>", "have \"\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub> \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "by (metis \\<BB>_Obj \\<BB>.cat_CId_is_arr \\<BB>.cat_CId_left_left vsingletonI)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. vsv (ZFC_in_HOL.set\n          {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                     \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>})\n 3. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>aa\\<rparr> =\n       ZFC_in_HOL.set\n        {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                   \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\\<lparr>aa\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show \"a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n        \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a'\\<rparr> = set {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\\<lparr>a'\\<rparr>\"\n        for a'"], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n    \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a'\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\\<lparr>a'\\<rparr>", "unfolding dom"], ["proof (prove)\nusing this:\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<BB>\\<^esub>\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. a' \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (ZFC_in_HOL.set\n                              {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n   \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n  \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}) \\<Longrightarrow>\n    \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>a'\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n               \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\\<lparr>a'\\<rparr>", "by simp"], ["proof (state)\nthis:\n  ?a'\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (\\<BB>\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n  \\<BB>\\<lparr>Comp\\<rparr>\\<lparr>?a'\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n              \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n             \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\\<lparr>?a'\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (\\<BB>\\<lparr>Comp\\<rparr>)\n 2. vsv (ZFC_in_HOL.set\n          {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n                     \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n                    \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>})", "qed (auto simp: \\<BB>_Obj \\<BB>_Arr)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Comp\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>[\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>,\n              \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>]\\<^sub>\\<circ>,\n             \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n\ngoal (3 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "have \"\\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = set {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = ZFC_in_HOL.set {a}", "by (simp add: \\<BB>_Obj \\<BB>.cat_CId_vdomain)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (3 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (3 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = ZFC_in_HOL.set {a}", "have \"\\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = ZFC_in_HOL.set {a}\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) =\n    ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "by \n        (\n          metis \n            \\<BB>.CId.vdomain_atE \n            \\<BB>.CId.vsv_vdomain_vsingleton_vrange_vsingleton \n            vsingleton_iff\n        )"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (3 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}\n 3. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = ZFC_in_HOL.set {a}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}", "show \"\\<BB>\\<lparr>CId\\<rparr> = set {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) = ZFC_in_HOL.set {a}\n  \\<R>\\<^sub>\\<circ> (\\<BB>\\<lparr>CId\\<rparr>) =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}", "by (blast intro: \\<BB>.CId.vsv_vdomain_vrange_vsingleton)"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>CId\\<rparr> =\n  ZFC_in_HOL.set\n   {\\<langle>a, \\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\\<rangle>}\n\ngoal (2 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {a}", "qed (auto simp: \\<BB>_Obj cat_cs_intros)"], ["proof (state)\nthis:\n  \\<BB> = cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a f.\n                \\<lbrakk>a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 f \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n                 \\<BB> = cat_1 a f\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     category \\<alpha> \\<BB>;\n     \\<And>a.\n        category \\<alpha> a \\<Longrightarrow>\n        \\<exists>!\\<FF>.\n           \\<FF> :\n           a \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n     obj_terminal (smc_CAT \\<alpha>) \\<BB>\\<rbrakk>\n    \\<Longrightarrow> thesis", "with a that \\<BB>.cat_Arr_vsubset_Vset \\<BB>_Arr"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   ?f \\<in>\\<^sub>\\<circ> Vset \\<alpha>; \\<BB> = cat_1 ?a ?f\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<BB>\\<lparr>Arr\\<rparr> =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n  \\<BB> = cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<lbrakk>?a \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   ?f \\<in>\\<^sub>\\<circ> Vset \\<alpha>; \\<BB> = cat_1 ?a ?f\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<BB>\\<lparr>Arr\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<BB>\\<lparr>Arr\\<rparr> =\n  ZFC_in_HOL.set {\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>}\n  \\<BB> = cat_1 a (\\<BB>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}