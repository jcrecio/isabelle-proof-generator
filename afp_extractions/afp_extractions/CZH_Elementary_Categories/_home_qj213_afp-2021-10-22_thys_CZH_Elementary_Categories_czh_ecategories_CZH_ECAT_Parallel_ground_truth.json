{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_Parallel.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma cat_PL_ineq:\n  shows cat_PL_\\<aa>\\<bb>[cat_parallel_cs_intros]: \"\\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<bb>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<aa>\\<gg>[cat_parallel_cs_intros]: \"\\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<gg>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<aa>\\<ff>[cat_parallel_cs_intros]: \"\\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<bb>\\<gg>[cat_parallel_cs_intros]: \"\\<bb>\\<^sub>P\\<^sub>L \\<noteq> \\<gg>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<bb>\\<ff>[cat_parallel_cs_intros]: \"\\<bb>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<gg>\\<ff>[cat_parallel_cs_intros]: \"\\<gg>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L\"", "lemma (in \\<Z>) \n  shows cat_PL_\\<aa>[cat_parallel_cs_intros]: \"\\<aa>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_PL_\\<bb>[cat_parallel_cs_intros]: \"\\<bb>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_PL_\\<gg>[cat_parallel_cs_intros]: \"\\<gg>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_PL_\\<ff>[cat_parallel_cs_intros]: \"\\<ff>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma cat_parallel_composable_\\<aa>\\<aa>[cat_parallel_cs_intros]:\n  assumes \"g = \\<aa>\" and \"f = \\<aa>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\"", "lemma cat_parallel_composable_\\<aa>\\<gg>[cat_parallel_cs_intros]:\n  assumes \"g = \\<bb>\" and \"f = \\<gg>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\"", "lemma cat_parallel_composable_\\<aa>\\<ff>[cat_parallel_cs_intros]:\n  assumes \"g = \\<bb>\" and \"f = \\<ff>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\"", "lemma cat_parallel_composable_\\<gg>\\<aa>[cat_parallel_cs_intros]:\n  assumes \"g = \\<gg>\" and \"f = \\<aa>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\"", "lemma cat_parallel_composable_\\<ff>\\<aa>[cat_parallel_cs_intros]:\n  assumes \"g = \\<ff>\" and \"f = \\<aa>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\"", "lemma cat_parallel_composable_\\<bb>\\<bb>[cat_parallel_cs_intros]:\n  assumes \"g = \\<bb>\" and \"f = \\<bb>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\"", "lemma cat_parallel_composableE:\n  assumes \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\"\n  obtains \"g = \\<bb>\" and \"f = \\<bb>\"\n        | \"g = \\<bb>\" and \"f = \\<gg>\" \n        | \"g = \\<bb>\" and \"f = \\<ff>\"\n        | \"g = \\<gg>\" and \"f = \\<aa>\"\n        | \"g = \\<ff>\" and \"f = \\<aa>\"\n        | \"g = \\<aa>\" and \"f = \\<aa>\"", "lemma cat_parallel_composable_fconverse: \n  \"(cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>)\\<inverse>\\<^sub>\\<bullet> = cat_parallel_composable \\<bb> \\<aa> \\<ff> \\<gg>\"", "lemmas (in cat_parallel) cat_parallel_ineq =\n  cat_parallel_\\<aa>\\<bb>\n  cat_parallel_\\<aa>\\<gg>\n  cat_parallel_\\<aa>\\<ff>\n  cat_parallel_\\<bb>\\<gg>\n  cat_parallel_\\<bb>\\<ff>\n  cat_parallel_\\<gg>\\<ff>", "lemmas (in cat_parallel) [cat_parallel_cs_intros] = cat_parallel_axioms", "lemma (in cat_parallel) cat_parallel_op[cat_op_intros]: \n  \"cat_parallel \\<alpha> \\<bb> \\<aa> \\<ff> \\<gg>\"", "lemma the_cat_parallel_components: \n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> = set {\\<aa>, \\<bb>}\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr> = set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr> = (\\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}. (x = \\<bb> ? \\<bb> : \\<aa>))\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr> = (\\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}. (x = \\<aa> ? \\<aa> : \\<bb>))\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr> =\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>.\n         if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb>\n          | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\n          | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\n          | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\n          | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<aa>\n      )\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr> = vid_on (set {\\<aa>, \\<bb>})\"", "lemma the_cat_parallel_Obj_\\<aa>I[cat_parallel_cs_intros]:\n  assumes \"a = \\<aa>\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\"", "lemma the_cat_parallel_Obj_\\<bb>I[cat_parallel_cs_intros]:\n  assumes \"a = \\<bb>\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\"", "lemma the_cat_parallel_ObjE:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\"\n  obtains \"a = \\<aa>\" | \"a = \\<bb>\"", "lemma the_cat_parallel_Arr_\\<aa>I[cat_parallel_cs_intros]:\n  assumes \"f = \\<aa>\"  \n  shows \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\"", "lemma the_cat_parallel_Arr_\\<bb>I[cat_parallel_cs_intros]:\n  assumes \"f = \\<bb>\"  \n  shows \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\"", "lemma the_cat_parallel_Arr_\\<gg>I[cat_parallel_cs_intros]:\n  assumes \"f = \\<gg>\"\n  shows \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\"", "lemma the_cat_parallel_Arr_\\<ff>I[cat_parallel_cs_intros]:\n  assumes \"f = \\<ff>\"\n  shows \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\"", "lemma the_cat_parallel_ArrE:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\"\n  obtains \"f = \\<aa>\" | \"f = \\<bb>\" | \"f = \\<gg>\" | \"f = \\<ff>\"", "lemma (in cat_parallel) the_cat_parallel_Dom_app_\\<bb>[cat_parallel_cs_simps]:\n  assumes \"f = \\<bb>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\"", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Dom_app_\\<bb>", "lemma (in cat_parallel) the_cat_parallel_Dom_app_\\<gg>[cat_parallel_cs_simps]:\n  assumes \"f = \\<gg>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\"", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Dom_app_\\<gg>", "lemma (in cat_parallel) the_cat_parallel_Dom_app_\\<ff>[cat_parallel_cs_simps]:\n  assumes \"f = \\<ff>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\"", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Dom_app_\\<ff>", "lemma (in cat_parallel) the_cat_parallel_Dom_app_\\<aa>[cat_parallel_cs_simps]:\n  assumes \"f = \\<aa>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\"", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Dom_app_\\<aa>", "lemma (in cat_parallel) the_cat_parallel_Cod_app_\\<bb>[cat_parallel_cs_simps]:\n  assumes \"f = \\<bb>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\"", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Cod_app_\\<bb>", "lemma (in cat_parallel) the_cat_parallel_Cod_app_\\<gg>[cat_parallel_cs_simps]:\n  assumes \"f = \\<gg>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\"", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Cod_app_\\<gg>", "lemma (in cat_parallel) the_cat_parallel_Cod_app_\\<ff>[cat_parallel_cs_simps]:\n  assumes \"f = \\<ff>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\"", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Cod_app_\\<ff>", "lemma (in cat_parallel) the_cat_parallel_Cod_app_\\<aa>[cat_parallel_cs_simps]:\n  assumes \"f = \\<aa>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\"", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Cod_app_\\<aa>", "lemma the_cat_parallel_Comp_app_\\<bb>\\<bb>[cat_parallel_cs_simps]:\n  assumes \"g = \\<bb>\" and \"f = \\<bb>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\"", "lemma the_cat_parallel_Comp_app_\\<aa>\\<aa>[cat_parallel_cs_simps]:\n  assumes \"g = \\<aa>\" and \"f = \\<aa>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\"", "lemma the_cat_parallel_Comp_app_\\<bb>\\<gg>[cat_parallel_cs_simps]:\n  assumes \"g = \\<bb>\" and \"f = \\<gg>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\"", "lemma the_cat_parallel_Comp_app_\\<bb>\\<ff>[cat_parallel_cs_simps]:\n  assumes \"g = \\<bb>\" and \"f = \\<ff>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\"", "lemma (in cat_parallel) the_cat_parallel_Comp_app_\\<gg>\\<aa>[cat_parallel_cs_simps]:\n  assumes \"g = \\<gg>\" and \"f = \\<aa>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\"", "lemma (in cat_parallel) the_cat_parallel_Comp_app_\\<ff>\\<aa>[cat_parallel_cs_simps]:\n  assumes \"g = \\<ff>\" and \"f = \\<aa>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\"", "lemma the_cat_parallel_CId_app_\\<aa>[cat_parallel_cs_simps]: \n  assumes \"a = \\<aa>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<aa>\"", "lemma the_cat_parallel_CId_app_\\<bb>[cat_parallel_cs_simps]: \n  assumes \"a = \\<bb>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<bb>\"", "lemma (in cat_parallel) the_cat_parallel_is_arr_\\<aa>\\<aa>\\<aa>[cat_parallel_cs_intros]:\n  assumes \"a' = \\<aa>\" and \"b' = \\<aa>\" and \"f = \\<aa>\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\"", "lemma (in cat_parallel) the_cat_parallel_is_arr_\\<bb>\\<bb>\\<bb>[cat_parallel_cs_intros]:\n  assumes \"a' = \\<bb>\" and \"b' = \\<bb>\" and \"f = \\<bb>\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\"", "lemma (in cat_parallel) the_cat_parallel_is_arr_\\<aa>\\<bb>\\<gg>[cat_parallel_cs_intros]:\n  assumes \"a' = \\<aa>\" and \"b' = \\<bb>\" and \"f = \\<gg>\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\"", "lemma (in cat_parallel) the_cat_parallel_is_arr_\\<aa>\\<bb>\\<ff>[cat_parallel_cs_intros]:\n  assumes \"a' = \\<aa>\" and \"b' = \\<bb>\" and \"f = \\<ff>\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\"", "lemma (in cat_parallel) the_cat_parallel_is_arrE:\n  assumes \"f' : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\"\n  obtains \"a' = \\<aa>\" and \"b' = \\<aa>\" and \"f' = \\<aa>\"\n        | \"a' = \\<bb>\" and \"b' = \\<bb>\" and \"f' = \\<bb>\"\n        | \"a' = \\<aa>\" and \"b' = \\<bb>\" and \"f' = \\<gg>\"\n        | \"a' = \\<aa>\" and \"b' = \\<bb>\" and \"f' = \\<ff>\"", "lemma (in cat_parallel) finite_category_the_cat_parallel[cat_parallel_cs_intros]:\n  \"finite_category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\"", "lemmas [cat_parallel_cs_intros] = cat_parallel.finite_category_the_cat_parallel", "lemma (in cat_parallel) op_cat_the_cat_parallel[cat_op_simps]: \n  \"op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>) = \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\"", "lemmas [cat_op_simps] = cat_parallel.op_cat_the_cat_parallel", "lemma (in cf_parallel) cf_parallel_\\<gg>''[cat_parallel_cs_intros]:\n  assumes \"a = \\<aa>'\" and \"b = \\<bb>'\"\n  shows \"\\<gg>' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_parallel) cf_parallel_\\<gg>'''[cat_parallel_cs_intros]:\n  assumes \"g = \\<gg>'\" and \"b = \\<bb>'\"\n  shows \"g : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_parallel) cf_parallel_\\<gg>''''[cat_parallel_cs_intros]:\n  assumes \"g = \\<gg>'\" and \"a = \\<aa>'\"\n  shows \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'\"", "lemma (in cf_parallel) cf_parallel_\\<ff>''[cat_parallel_cs_intros]:\n  assumes \"a = \\<aa>'\" and \"b = \\<bb>'\"\n  shows \"\\<ff>' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_parallel) cf_parallel_\\<ff>'''[cat_parallel_cs_intros]:\n  assumes \"f = \\<ff>'\" and \"b = \\<bb>'\"\n  shows \"f : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_parallel) cf_parallel_\\<ff>''''[cat_parallel_cs_intros]:\n  assumes \"f = \\<ff>'\" and \"a = \\<aa>'\"\n  shows \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'\"", "lemma (in cf_parallel) cf_parallel_axioms[cat_parallel_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" \n    and \"a = \\<aa>\" \n    and \"b = \\<bb>\" \n    and \"g = \\<gg>\" \n    and \"f = \\<ff>\" \n    and \"a' = \\<aa>'\" \n    and \"b' = \\<bb>'\" \n    and \"g' = \\<gg>'\" \n    and \"f' = \\<ff>'\" \n  shows \"cf_parallel \\<alpha>' a b g f a' b' g' f' \\<CC>\"", "lemmas [cat_parallel_cs_intros] = cf_parallelD(1,2)", "lemma (in cf_parallel) cf_parallel_op[cat_op_intros]: \n  \"cf_parallel \\<alpha> \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>' (op_cat \\<CC>)\"", "lemmas [cat_op_intros] = cf_parallel.cf_parallel_op", "lemma the_cf_parallel_components:\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> =\n      (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>. (a = \\<aa> ? \\<aa>' : \\<bb>'))\"\n    and \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>.\n          (\n           if f = \\<aa> \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>\n            | f = \\<bb> \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>\n            | f = \\<gg> \\<Rightarrow> \\<gg>'\n            | otherwise \\<Rightarrow> \\<ff>'\n          )\n      )\"\n    and [cat_parallel_cs_simps]: \n      \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> = \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\"\n    and [cat_parallel_cs_simps]: \n      \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> = \\<CC>\"", "lemma (in cf_parallel) the_cf_parallel_ObjMap_app_\\<aa>[cat_parallel_cs_simps]:\n  assumes \"x = \\<aa>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<aa>'\"", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ObjMap_app_\\<aa>", "lemma (in cf_parallel) the_cf_parallel_ObjMap_app_\\<bb>[cat_parallel_cs_simps]:\n  assumes \"x = \\<bb>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<bb>'\"", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ObjMap_app_\\<bb>", "lemma (in cf_parallel) the_cf_parallel_ObjMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"", "lemma (in cf_parallel) the_cf_parallel_ArrMap_app_\\<gg>[cat_parallel_cs_simps]:\n  assumes \"f = \\<gg>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<gg>'\"", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ArrMap_app_\\<gg>", "lemma (in cf_parallel) the_cf_parallel_ArrMap_app_\\<ff>[cat_parallel_cs_simps]:\n  assumes \"f = \\<ff>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<ff>'\"", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ArrMap_app_\\<ff>", "lemma (in cf_parallel) the_cf_parallel_ArrMap_app_\\<aa>[cat_parallel_cs_simps]:\n  assumes \"f = \\<aa>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>\"", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ArrMap_app_\\<aa>", "lemma (in cf_parallel) the_cf_parallel_ArrMap_app_\\<bb>[cat_parallel_cs_simps]:\n  assumes \"f = \\<bb>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>\"", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ArrMap_app_\\<bb>", "lemma (in cf_parallel) the_cf_parallel_ArrMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"", "lemma (in cf_parallel) cf_parallel_the_cf_parallel_is_tm_functor:\n  \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>' : \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in cf_parallel) cf_parallel_the_cf_parallel_is_tm_functor':\n  assumes \"\\<AA>' = \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>' : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'\"", "lemmas [cat_parallel_cs_intros] = \n  cf_parallel.cf_parallel_the_cf_parallel_is_tm_functor'", "lemma (in cf_parallel) cf_parallel_the_cf_parallel_op[cat_op_simps]:\n  \"op_cf (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>') = \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>'\"", "lemmas [cat_op_simps] = cf_parallel.cf_parallel_the_cf_parallel_op"], "translations": [["", "lemma cat_PL_ineq:\n  shows cat_PL_\\<aa>\\<bb>[cat_parallel_cs_intros]: \"\\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<bb>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<aa>\\<gg>[cat_parallel_cs_intros]: \"\\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<gg>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<aa>\\<ff>[cat_parallel_cs_intros]: \"\\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<bb>\\<gg>[cat_parallel_cs_intros]: \"\\<bb>\\<^sub>P\\<^sub>L \\<noteq> \\<gg>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<bb>\\<ff>[cat_parallel_cs_intros]: \"\\<bb>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L\"\n    and cat_PL_\\<gg>\\<ff>[cat_parallel_cs_intros]: \"\\<gg>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<bb>\\<^sub>P\\<^sub>L &&&\n     \\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<gg>\\<^sub>P\\<^sub>L &&&\n     \\<aa>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L) &&&\n    \\<bb>\\<^sub>P\\<^sub>L \\<noteq> \\<gg>\\<^sub>P\\<^sub>L &&&\n    \\<bb>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L &&&\n    \\<gg>\\<^sub>P\\<^sub>L \\<noteq> \\<ff>\\<^sub>P\\<^sub>L", "unfolding cat_parallel_elem_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1\\<^sub>\\<nat> \\<noteq> 2\\<^sub>\\<nat> &&&\n     1\\<^sub>\\<nat> \\<noteq> 3\\<^sub>\\<nat> &&&\n     1\\<^sub>\\<nat> \\<noteq> 4\\<^sub>\\<nat>) &&&\n    2\\<^sub>\\<nat> \\<noteq> 3\\<^sub>\\<nat> &&&\n    2\\<^sub>\\<nat> \\<noteq> 4\\<^sub>\\<nat> &&&\n    3\\<^sub>\\<nat> \\<noteq> 4\\<^sub>\\<nat>", "by simp_all"], ["", "lemma (in \\<Z>) \n  shows cat_PL_\\<aa>[cat_parallel_cs_intros]: \"\\<aa>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_PL_\\<bb>[cat_parallel_cs_intros]: \"\\<bb>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_PL_\\<gg>[cat_parallel_cs_intros]: \"\\<gg>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_PL_\\<ff>[cat_parallel_cs_intros]: \"\\<ff>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<aa>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n     \\<bb>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>) &&&\n    \\<gg>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<ff>\\<^sub>P\\<^sub>L \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding cat_parallel_elem_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n     2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>) &&&\n    3\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    4\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by simp_all"], ["", "subsection\\<open>Composable arrows\\<close>"], ["", "abbreviation cat_parallel_composable :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff> \\<equiv>\n    (set {\\<bb>} \\<times>\\<^sub>\\<bullet> set {\\<bb>, \\<gg>, \\<ff>}) \\<union>\\<^sub>\\<circ> (set {\\<aa>, \\<gg>, \\<ff>} \\<times>\\<^sub>\\<bullet> set {\\<aa>})\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma cat_parallel_composable_\\<aa>\\<aa>[cat_parallel_cs_intros]:\n  assumes \"g = \\<aa>\" and \"f = \\<aa>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<aa>, \\<aa>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by auto"], ["", "lemma cat_parallel_composable_\\<aa>\\<gg>[cat_parallel_cs_intros]:\n  assumes \"g = \\<bb>\" and \"f = \\<gg>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<bb>, \\<gg>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by auto"], ["", "lemma cat_parallel_composable_\\<aa>\\<ff>[cat_parallel_cs_intros]:\n  assumes \"g = \\<bb>\" and \"f = \\<ff>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<bb>, \\<ff>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by auto"], ["", "lemma cat_parallel_composable_\\<gg>\\<aa>[cat_parallel_cs_intros]:\n  assumes \"g = \\<gg>\" and \"f = \\<aa>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<gg>, \\<aa>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by auto"], ["", "lemma cat_parallel_composable_\\<ff>\\<aa>[cat_parallel_cs_intros]:\n  assumes \"g = \\<ff>\" and \"f = \\<aa>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<ff>, \\<aa>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by auto"], ["", "lemma cat_parallel_composable_\\<bb>\\<bb>[cat_parallel_cs_intros]:\n  assumes \"g = \\<bb>\" and \"f = \\<bb>\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<bb>, \\<bb>]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by auto"], ["", "lemma cat_parallel_composableE:\n  assumes \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\"\n  obtains \"g = \\<bb>\" and \"f = \\<bb>\"\n        | \"g = \\<bb>\" and \"f = \\<gg>\" \n        | \"g = \\<bb>\" and \"f = \\<ff>\"\n        | \"g = \\<gg>\" and \"f = \\<aa>\"\n        | \"g = \\<ff>\" and \"f = \\<aa>\"\n        | \"g = \\<aa>\" and \"f = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>g = \\<bb>; f = \\<bb>\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>; f = \\<gg>\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>; f = \\<ff>\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<gg>; f = \\<aa>\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<ff>; f = \\<aa>\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<aa>; f = \\<aa>\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms that"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n  \\<lbrakk>g = \\<bb>; f = \\<bb>\\<rbrakk> \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<bb>; f = \\<gg>\\<rbrakk> \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<bb>; f = \\<ff>\\<rbrakk> \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<gg>; f = \\<aa>\\<rbrakk> \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<ff>; f = \\<aa>\\<rbrakk> \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<aa>; f = \\<aa>\\<rbrakk> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>g = \\<bb>; f = \\<bb>\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>; f = \\<gg>\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>; f = \\<ff>\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<gg>; f = \\<aa>\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<ff>; f = \\<aa>\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<aa>; f = \\<aa>\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma cat_parallel_composable_fconverse: \n  \"(cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>)\\<inverse>\\<^sub>\\<bullet> = cat_parallel_composable \\<bb> \\<aa> \\<ff> \\<gg>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cat_parallel_composable \\<aa> \\<bb> \\<gg>\n      \\<ff>)\\<inverse>\\<^sub>\\<bullet> =\n    cat_parallel_composable \\<bb> \\<aa> \\<ff> \\<gg>", "by auto"], ["", "subsection\\<open>\nLocal assumptions for a category with parallel arrows between two objects\n\\<close>"], ["", "locale cat_parallel = \\<Z> \\<alpha> for \\<alpha> +  \n  fixes \\<aa> \\<bb> \\<gg> \\<ff>\n  assumes cat_parallel_\\<aa>\\<bb>[cat_parallel_cs_intros]: \"\\<aa> \\<noteq> \\<bb>\"\n    and cat_parallel_\\<aa>\\<gg>[cat_parallel_cs_intros]: \"\\<aa> \\<noteq> \\<gg>\"\n    and cat_parallel_\\<aa>\\<ff>[cat_parallel_cs_intros]: \"\\<aa> \\<noteq> \\<ff>\"\n    and cat_parallel_\\<bb>\\<gg>[cat_parallel_cs_intros]: \"\\<bb> \\<noteq> \\<gg>\"\n    and cat_parallel_\\<bb>\\<ff>[cat_parallel_cs_intros]: \"\\<bb> \\<noteq> \\<ff>\"\n    and cat_parallel_\\<gg>\\<ff>[cat_parallel_cs_intros]: \"\\<gg> \\<noteq> \\<ff>\"\n    and cat_parallel_\\<aa>_in_Vset[cat_parallel_cs_intros]: \"\\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_parallel_\\<bb>_in_Vset[cat_parallel_cs_intros]: \"\\<bb> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_parallel_\\<gg>_in_Vset[cat_parallel_cs_intros]: \"\\<gg> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_parallel_\\<ff>_in_Vset[cat_parallel_cs_intros]: \"\\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["", "lemmas (in cat_parallel) cat_parallel_ineq =\n  cat_parallel_\\<aa>\\<bb>\n  cat_parallel_\\<aa>\\<gg>\n  cat_parallel_\\<aa>\\<ff>\n  cat_parallel_\\<bb>\\<gg>\n  cat_parallel_\\<bb>\\<ff>\n  cat_parallel_\\<gg>\\<ff>"], ["", "text\\<open>Rules.\\<close>"], ["", "lemmas (in cat_parallel) [cat_parallel_cs_intros] = cat_parallel_axioms"], ["", "mk_ide rf cat_parallel_def[unfolded cat_parallel_axioms_def]\n  |intro cat_parallelI|\n  |dest cat_parallelD[dest]|\n  |elim cat_parallelE[elim]|"], ["", "text\\<open>Duality.\\<close>"], ["", "lemma (in cat_parallel) cat_parallel_op[cat_op_intros]: \n  \"cat_parallel \\<alpha> \\<bb> \\<aa> \\<ff> \\<gg>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_parallel \\<alpha> \\<bb> \\<aa> \\<ff> \\<gg>", "by (intro cat_parallelI) \n    (auto intro!: cat_parallel_cs_intros cat_parallel_ineq[symmetric])"], ["", "subsection\\<open>\\<open>\\<up>\\<up>\\<close>: category with parallel arrows between two objects\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-2 and Chapter III-3 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition the_cat_parallel :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>\\<up>\\<up>\\<^sub>C\\<close>)\n  where \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff> =\n    [\n      set {\\<aa>, \\<bb>},\n      set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n      (\\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}. (x = \\<bb> ? \\<bb> : \\<aa>)),\n      (\\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}. (x = \\<aa> ? \\<aa> : \\<bb>)),\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>.\n         if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb>\n          | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\n          | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\n          | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\n          | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<aa>\n      ),\n      vid_on (set {\\<aa>, \\<bb>})\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma the_cat_parallel_components: \n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> = set {\\<aa>, \\<bb>}\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr> = set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr> = (\\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}. (x = \\<bb> ? \\<bb> : \\<aa>))\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr> = (\\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}. (x = \\<aa> ? \\<aa> : \\<bb>))\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr> =\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>.\n         if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb>\n          | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\n          | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\n          | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\n          | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<aa>\n      )\"\n    and \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr> = vid_on (set {\\<aa>, \\<bb>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> =\n     ZFC_in_HOL.set {\\<aa>, \\<bb>} &&&\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>} &&&\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr> =\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<bb> \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<aa>)) &&&\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> \n         | otherwise \\<Rightarrow> \\<bb>) &&&\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) &&&\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr> =\n    vid_on (ZFC_in_HOL.set {\\<aa>, \\<bb>})", "unfolding the_cat_parallel_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set {\\<aa>, \\<bb>},\n      ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<bb> \\<Rightarrow> \\<bb> | otherwise \\<Rightarrow> \\<aa>,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<aa> \\<Rightarrow> \\<aa> | otherwise \\<Rightarrow> \\<bb>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb>\n                                     \\<gg> \\<ff>.\n         if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n          | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<aa>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>, \\<bb>})]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set {\\<aa>, \\<bb>} &&&\n     [ZFC_in_HOL.set {\\<aa>, \\<bb>},\n      ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<bb> \\<Rightarrow> \\<bb> | otherwise \\<Rightarrow> \\<aa>,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<aa> \\<Rightarrow> \\<aa> | otherwise \\<Rightarrow> \\<bb>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb>\n                                     \\<gg> \\<ff>.\n         if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n          | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<aa>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>, \\<bb>})]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>} &&&\n     [ZFC_in_HOL.set {\\<aa>, \\<bb>},\n      ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<bb> \\<Rightarrow> \\<bb> | otherwise \\<Rightarrow> \\<aa>,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<aa> \\<Rightarrow> \\<aa> | otherwise \\<Rightarrow> \\<bb>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb>\n                                     \\<gg> \\<ff>.\n         if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n          | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<aa>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>, \\<bb>})]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<bb> \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<aa>)) &&&\n    [ZFC_in_HOL.set {\\<aa>, \\<bb>},\n     ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> | otherwise \\<Rightarrow> \\<aa>,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> | otherwise \\<Rightarrow> \\<bb>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>, \\<bb>})]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> \n         | otherwise \\<Rightarrow> \\<bb>) &&&\n    [ZFC_in_HOL.set {\\<aa>, \\<bb>},\n     ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> | otherwise \\<Rightarrow> \\<aa>,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> | otherwise \\<Rightarrow> \\<bb>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>, \\<bb>})]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) &&&\n    [ZFC_in_HOL.set {\\<aa>, \\<bb>},\n     ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> | otherwise \\<Rightarrow> \\<aa>,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> | otherwise \\<Rightarrow> \\<bb>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>, \\<bb>})]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    vid_on (ZFC_in_HOL.set {\\<aa>, \\<bb>})", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Objects\\<close>"], ["", "lemma the_cat_parallel_Obj_\\<aa>I[cat_parallel_cs_intros]:\n  assumes \"a = \\<aa>\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<aa>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Obj\\<rparr>", "unfolding the_cat_parallel_components"], ["proof (prove)\nusing this:\n  a = \\<aa>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>}", "by simp"], ["", "lemma the_cat_parallel_Obj_\\<bb>I[cat_parallel_cs_intros]:\n  assumes \"a = \\<bb>\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<bb>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Obj\\<rparr>", "unfolding the_cat_parallel_components"], ["proof (prove)\nusing this:\n  a = \\<bb>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>}", "by simp"], ["", "lemma the_cat_parallel_ObjE:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\"\n  obtains \"a = \\<aa>\" | \"a = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_parallel_components(1)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["", "subsubsection\\<open>Arrows\\<close>"], ["", "lemma the_cat_parallel_Arr_\\<aa>I[cat_parallel_cs_intros]:\n  assumes \"f = \\<aa>\"  \n  shows \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  f = \\<aa>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "unfolding the_cat_parallel_components"], ["proof (prove)\nusing this:\n  f = \\<aa>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}", "by simp"], ["", "lemma the_cat_parallel_Arr_\\<bb>I[cat_parallel_cs_intros]:\n  assumes \"f = \\<bb>\"  \n  shows \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  f = \\<bb>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "unfolding the_cat_parallel_components"], ["proof (prove)\nusing this:\n  f = \\<bb>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}", "by simp"], ["", "lemma the_cat_parallel_Arr_\\<gg>I[cat_parallel_cs_intros]:\n  assumes \"f = \\<gg>\"\n  shows \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  f = \\<gg>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "unfolding the_cat_parallel_components"], ["proof (prove)\nusing this:\n  f = \\<gg>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}", "by simp"], ["", "lemma the_cat_parallel_Arr_\\<ff>I[cat_parallel_cs_intros]:\n  assumes \"f = \\<ff>\"\n  shows \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  f = \\<ff>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "unfolding the_cat_parallel_components"], ["proof (prove)\nusing this:\n  f = \\<ff>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}", "by simp"], ["", "lemma the_cat_parallel_ArrE:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\"\n  obtains \"f = \\<aa>\" | \"f = \\<bb>\" | \"f = \\<gg>\" | \"f = \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa> \\<Longrightarrow> thesis;\n     f = \\<bb> \\<Longrightarrow> thesis; f = \\<gg> \\<Longrightarrow> thesis;\n     f = \\<ff> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms that"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n  f = \\<aa> \\<Longrightarrow> thesis\n  f = \\<bb> \\<Longrightarrow> thesis\n  f = \\<gg> \\<Longrightarrow> thesis\n  f = \\<ff> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa> \\<Longrightarrow> thesis;\n     f = \\<bb> \\<Longrightarrow> thesis; f = \\<gg> \\<Longrightarrow> thesis;\n     f = \\<ff> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_parallel_components"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}\n  f = \\<aa> \\<Longrightarrow> thesis\n  f = \\<bb> \\<Longrightarrow> thesis\n  f = \\<gg> \\<Longrightarrow> thesis\n  f = \\<ff> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa> \\<Longrightarrow> thesis;\n     f = \\<bb> \\<Longrightarrow> thesis; f = \\<gg> \\<Longrightarrow> thesis;\n     f = \\<ff> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "subsubsection\\<open>Domain\\<close>"], ["", "mk_VLambda the_cat_parallel_components(3)\n  |vsv the_cat_parallel_Dom_vsv[cat_parallel_cs_intros]|\n  |vdomain the_cat_parallel_Dom_vdomain[cat_parallel_cs_simps]|"], ["", "lemma (in cat_parallel) the_cat_parallel_Dom_app_\\<bb>[cat_parallel_cs_simps]:\n  assumes \"f = \\<bb>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>", "unfolding the_cat_parallel_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<aa>)\\<lparr>\\<bb>\\<rparr> =\n    \\<bb>", "by simp"], ["", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Dom_app_\\<bb>"], ["", "lemma (in cat_parallel) the_cat_parallel_Dom_app_\\<gg>[cat_parallel_cs_simps]:\n  assumes \"f = \\<gg>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>", "unfolding the_cat_parallel_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<aa>)\\<lparr>\\<gg>\\<rparr> =\n    \\<aa>", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<aa>)\\<lparr>\\<gg>\\<rparr> =\n    \\<aa>", "by auto"], ["", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Dom_app_\\<gg>"], ["", "lemma (in cat_parallel) the_cat_parallel_Dom_app_\\<ff>[cat_parallel_cs_simps]:\n  assumes \"f = \\<ff>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>", "unfolding the_cat_parallel_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<aa>)\\<lparr>\\<ff>\\<rparr> =\n    \\<aa>", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<aa>)\\<lparr>\\<ff>\\<rparr> =\n    \\<aa>", "by auto"], ["", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Dom_app_\\<ff>"], ["", "lemma (in cat_parallel) the_cat_parallel_Dom_app_\\<aa>[cat_parallel_cs_simps]:\n  assumes \"f = \\<aa>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>", "unfolding the_cat_parallel_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<bb> \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<aa>)\\<lparr>\\<aa>\\<rparr> =\n    \\<aa>", "by auto"], ["", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Dom_app_\\<aa>"], ["", "subsubsection\\<open>Codomain\\<close>"], ["", "mk_VLambda the_cat_parallel_components(4)\n  |vsv the_cat_parallel_Cod_vsv[cat_parallel_cs_intros]|\n  |vdomain the_cat_parallel_Cod_vdomain[cat_parallel_cs_simps]|"], ["", "lemma (in cat_parallel) the_cat_parallel_Cod_app_\\<bb>[cat_parallel_cs_simps]:\n  assumes \"f = \\<bb>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>", "unfolding the_cat_parallel_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> \n         | otherwise \\<Rightarrow> \\<bb>)\\<lparr>\\<bb>\\<rparr> =\n    \\<bb>", "by simp"], ["", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Cod_app_\\<bb>"], ["", "lemma (in cat_parallel) the_cat_parallel_Cod_app_\\<gg>[cat_parallel_cs_simps]:\n  assumes \"f = \\<gg>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>", "unfolding the_cat_parallel_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> \n         | otherwise \\<Rightarrow> \\<bb>)\\<lparr>\\<gg>\\<rparr> =\n    \\<bb>", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> \n         | otherwise \\<Rightarrow> \\<bb>)\\<lparr>\\<gg>\\<rparr> =\n    \\<bb>", "by auto"], ["", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Cod_app_\\<gg>"], ["", "lemma (in cat_parallel) the_cat_parallel_Cod_app_\\<ff>[cat_parallel_cs_simps]:\n  assumes \"f = \\<ff>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>", "unfolding the_cat_parallel_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> \n         | otherwise \\<Rightarrow> \\<bb>)\\<lparr>\\<ff>\\<rparr> =\n    \\<bb>", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> \n         | otherwise \\<Rightarrow> \\<bb>)\\<lparr>\\<ff>\\<rparr> =\n    \\<bb>", "by auto"], ["", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Cod_app_\\<ff>"], ["", "lemma (in cat_parallel) the_cat_parallel_Cod_app_\\<aa>[cat_parallel_cs_simps]:\n  assumes \"f = \\<aa>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>", "unfolding the_cat_parallel_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n        if x = \\<aa> \\<Rightarrow> \\<aa> \n         | otherwise \\<Rightarrow> \\<bb>)\\<lparr>\\<aa>\\<rparr> =\n    \\<aa>", "by auto"], ["", "lemmas [cat_parallel_cs_simps] = cat_parallel.the_cat_parallel_Cod_app_\\<aa>"], ["", "subsubsection\\<open>Composition\\<close>"], ["", "mk_VLambda the_cat_parallel_components(5)\n  |vsv the_cat_parallel_Comp_vsv[cat_parallel_cs_intros]|\n  |vdomain the_cat_parallel_Comp_vdomain[cat_parallel_cs_simps]|\n  |app the_cat_parallel_Comp_app[cat_parallel_cs_simps]|"], ["", "lemma the_cat_parallel_Comp_app_\\<bb>\\<bb>[cat_parallel_cs_simps]:\n  assumes \"g = \\<bb>\" and \"f = \\<bb>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<bb>\n  f = \\<bb>", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\nusing this:\n  g = \\<bb>\n  f = \\<bb>\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by (cs_concl cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "unfolding the_cat_parallel_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<bb>, \\<bb>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<bb>,\n            \\<bb>\\<rparr>\\<^sub>\\<bullet> =\n    \\<bb> &&&\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<bb>,\n            \\<bb>\\<rparr>\\<^sub>\\<bullet> =\n    \\<bb>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  f =\n  g\n  g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_parallel_Comp_app_\\<aa>\\<aa>[cat_parallel_cs_simps]:\n  assumes \"g = \\<aa>\" and \"f = \\<aa>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<aa>\n  f = \\<aa>", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\nusing this:\n  g = \\<aa>\n  f = \\<aa>\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by (cs_concl cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "unfolding the_cat_parallel_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<aa>, \\<aa>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<aa>,\n            \\<aa>\\<rparr>\\<^sub>\\<bullet> =\n    \\<aa> &&&\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<aa>,\n            \\<aa>\\<rparr>\\<^sub>\\<bullet> =\n    \\<aa>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  f =\n  g\n  g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_parallel_Comp_app_\\<bb>\\<gg>[cat_parallel_cs_simps]:\n  assumes \"g = \\<bb>\" and \"f = \\<gg>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<bb>\n  f = \\<gg>", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\nusing this:\n  g = \\<bb>\n  f = \\<gg>\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by (cs_concl cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "unfolding the_cat_parallel_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<bb>, \\<gg>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<bb>,\n            \\<gg>\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_parallel_Comp_app_\\<bb>\\<ff>[cat_parallel_cs_simps]:\n  assumes \"g = \\<bb>\" and \"f = \\<ff>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<bb>\n  f = \\<ff>", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\nusing this:\n  g = \\<bb>\n  f = \\<ff>\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by (cs_concl cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "unfolding the_cat_parallel_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<bb>, \\<ff>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<bb>,\n            \\<ff>\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cat_parallel) the_cat_parallel_Comp_app_\\<gg>\\<aa>[cat_parallel_cs_simps]:\n  assumes \"g = \\<gg>\" and \"f = \\<aa>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g", "from assms"], ["proof (chain)\npicking this:\n  g = \\<gg>\n  f = \\<aa>", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\nusing this:\n  g = \\<gg>\n  f = \\<aa>\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by (cs_concl cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g", "unfolding the_cat_parallel_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<gg>, \\<aa>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<gg>,\n            \\<aa>\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  [\\<gg>, \\<aa>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<gg>,\n            \\<aa>\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  f =\n  g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cat_parallel) the_cat_parallel_Comp_app_\\<ff>\\<aa>[cat_parallel_cs_simps]:\n  assumes \"g = \\<ff>\" and \"f = \\<aa>\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g", "from assms"], ["proof (chain)\npicking this:\n  g = \\<ff>\n  f = \\<aa>", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\nusing this:\n  g = \\<ff>\n  f = \\<aa>\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by (cs_concl cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = g\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    g", "unfolding the_cat_parallel_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<ff>, \\<aa>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<ff>,\n            \\<aa>\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  [\\<ff>, \\<aa>]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                                    \\<ff>.\n        if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n         | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n         | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<aa>) \\<lparr>\\<ff>,\n            \\<aa>\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  f =\n  g\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Identity\\<close>"], ["", "mk_VLambda the_cat_parallel_components(6)[unfolded VLambda_vid_on[symmetric]]\n  |vsv the_cat_parallel_CId_vsv[cat_parallel_cs_intros]|\n  |vdomain the_cat_parallel_CId_vdomain[cat_parallel_cs_simps]|\n  |app the_cat_parallel_CId_app|"], ["", "lemma the_cat_parallel_CId_app_\\<aa>[cat_parallel_cs_simps]: \n  assumes \"a = \\<aa>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n    \\<aa>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> =\n    \\<aa>", "by (auto simp: the_cat_parallel_CId_app)"], ["", "lemma the_cat_parallel_CId_app_\\<bb>[cat_parallel_cs_simps]: \n  assumes \"a = \\<bb>\"\n  shows \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n    \\<bb>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> =\n    \\<bb>", "by (auto simp: the_cat_parallel_CId_app)"], ["", "subsubsection\\<open>Arrow with a domain and a codomain\\<close>"], ["", "lemma (in cat_parallel) the_cat_parallel_is_arr_\\<aa>\\<aa>\\<aa>[cat_parallel_cs_intros]:\n  assumes \"a' = \\<aa>\" and \"b' = \\<aa>\" and \"f = \\<aa>\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'", "proof(intro is_arrI, unfold assms)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<aa>\n    \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n 2. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<rparr> =\n    \\<aa>\n 3. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<rparr> =\n    \\<aa>", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<rparr> = \\<aa>\" \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<rparr> = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<rparr> =\n    \\<aa> &&&\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<rparr> =\n    \\<aa>", "by (cs_concl cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)+"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<rparr> =\n  \\<aa>\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<rparr> =\n  \\<aa>\n\ngoal (1 subgoal):\n 1. \\<aa>\n    \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_parallel_components)"], ["", "lemma (in cat_parallel) the_cat_parallel_is_arr_\\<bb>\\<bb>\\<bb>[cat_parallel_cs_intros]:\n  assumes \"a' = \\<bb>\" and \"b' = \\<bb>\" and \"f = \\<bb>\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'", "proof(intro is_arrI, unfold assms)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<bb>\n    \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n 2. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<rparr> =\n    \\<bb>\n 3. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<rparr> =\n    \\<bb>", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<rparr> = \\<bb>\" \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<rparr> =\n    \\<bb> &&&\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<rparr> =\n    \\<bb>", "by (cs_concl cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)+"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<rparr> =\n  \\<bb>\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<rparr> =\n  \\<bb>\n\ngoal (1 subgoal):\n 1. \\<bb>\n    \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_parallel_components)"], ["", "lemma (in cat_parallel) the_cat_parallel_is_arr_\\<aa>\\<bb>\\<gg>[cat_parallel_cs_intros]:\n  assumes \"a' = \\<aa>\" and \"b' = \\<bb>\" and \"f = \\<gg>\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'", "proof(intro is_arrI, unfold assms(1,2))"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>\n 2. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>\n 3. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>", "from assms(3)"], ["proof (chain)\npicking this:\n  f = \\<gg>", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\" \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\""], ["proof (prove)\nusing this:\n  f = \\<gg>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa> &&&\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>", "by (cs_concl cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)+"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  \\<aa>\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  \\<bb>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_parallel_components assms(3))"], ["", "lemma (in cat_parallel) the_cat_parallel_is_arr_\\<aa>\\<bb>\\<ff>[cat_parallel_cs_intros]:\n  assumes \"a' = \\<aa>\" and \"b' = \\<bb>\" and \"f = \\<ff>\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'", "proof(intro is_arrI, unfold assms(1,2))"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>\n 2. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>\n 3. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>", "from assms(3)"], ["proof (chain)\npicking this:\n  f = \\<ff>", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\" \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\""], ["proof (prove)\nusing this:\n  f = \\<ff>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa> &&&\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>", "by (cs_concl cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)+"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  \\<aa>\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  \\<bb>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_parallel_components assms(3))"], ["", "lemma (in cat_parallel) the_cat_parallel_is_arrE:\n  assumes \"f' : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\"\n  obtains \"a' = \\<aa>\" and \"b' = \\<aa>\" and \"f' = \\<aa>\"\n        | \"a' = \\<bb>\" and \"b' = \\<bb>\" and \"f' = \\<bb>\"\n        | \"a' = \\<aa>\" and \"b' = \\<bb>\" and \"f' = \\<gg>\"\n        | \"a' = \\<aa>\" and \"b' = \\<bb>\" and \"f' = \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>a' = \\<aa>; b' = \\<aa>; f' = \\<aa>\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>; b' = \\<bb>; f' = \\<bb>\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<gg>\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<ff>\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>a' = \\<aa>; b' = \\<aa>; f' = \\<aa>\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>; b' = \\<bb>; f' = \\<bb>\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<gg>\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<ff>\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "note f = is_arrD[OF assms]"], ["proof (state)\nthis:\n  f' \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                          \\<ff>\\<lparr>Arr\\<rparr>\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f'\\<rparr> =\n  a'\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f'\\<rparr> =\n  b'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>a' = \\<aa>; b' = \\<aa>; f' = \\<aa>\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>; b' = \\<bb>; f' = \\<bb>\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<gg>\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<ff>\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "from f(1)"], ["proof (chain)\npicking this:\n  f' \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                          \\<ff>\\<lparr>Arr\\<rparr>", "consider (\\<aa>) \"f' = \\<aa>\" | (\\<bb>) \"f' = \\<bb>\" | (\\<gg>) \"f' = \\<gg>\" | (\\<ff>) \"f' = \\<ff>\""], ["proof (prove)\nusing this:\n  f' \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                          \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f' = \\<aa> \\<Longrightarrow> thesis;\n     f' = \\<bb> \\<Longrightarrow> thesis;\n     f' = \\<gg> \\<Longrightarrow> thesis;\n     f' = \\<ff> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_parallel_components(2)"], ["proof (prove)\nusing this:\n  f' \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f' = \\<aa> \\<Longrightarrow> thesis;\n     f' = \\<bb> \\<Longrightarrow> thesis;\n     f' = \\<gg> \\<Longrightarrow> thesis;\n     f' = \\<ff> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>f' = \\<aa> \\<Longrightarrow> ?thesis;\n   f' = \\<bb> \\<Longrightarrow> ?thesis;\n   f' = \\<gg> \\<Longrightarrow> ?thesis;\n   f' = \\<ff> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>a' = \\<aa>; b' = \\<aa>; f' = \\<aa>\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>; b' = \\<bb>; f' = \\<bb>\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<gg>\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<ff>\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>f' = \\<aa> \\<Longrightarrow> ?thesis;\n   f' = \\<bb> \\<Longrightarrow> ?thesis;\n   f' = \\<gg> \\<Longrightarrow> ?thesis;\n   f' = \\<ff> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>f' = \\<aa> \\<Longrightarrow> ?thesis;\n   f' = \\<bb> \\<Longrightarrow> ?thesis;\n   f' = \\<gg> \\<Longrightarrow> ?thesis;\n   f' = \\<ff> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. f' = \\<aa> \\<Longrightarrow> thesis\n 2. f' = \\<bb> \\<Longrightarrow> thesis\n 3. f' = \\<gg> \\<Longrightarrow> thesis\n 4. f' = \\<ff> \\<Longrightarrow> thesis", "case \\<aa>"], ["proof (state)\nthis:\n  f' = \\<aa>\n\ngoal (4 subgoals):\n 1. f' = \\<aa> \\<Longrightarrow> thesis\n 2. f' = \\<bb> \\<Longrightarrow> thesis\n 3. f' = \\<gg> \\<Longrightarrow> thesis\n 4. f' = \\<ff> \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<aa>\n\ngoal (4 subgoals):\n 1. f' = \\<aa> \\<Longrightarrow> thesis\n 2. f' = \\<bb> \\<Longrightarrow> thesis\n 3. f' = \\<gg> \\<Longrightarrow> thesis\n 4. f' = \\<ff> \\<Longrightarrow> thesis", "from f(2)[unfolded \\<aa>, symmetric]"], ["proof (chain)\npicking this:\n  a' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<rparr>", "have \"a' = \\<aa>\""], ["proof (prove)\nusing this:\n  a' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<rparr>\n\ngoal (1 subgoal):\n 1. a' = \\<aa>", "by (cs_prems cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  a' = \\<aa>\n\ngoal (4 subgoals):\n 1. f' = \\<aa> \\<Longrightarrow> thesis\n 2. f' = \\<bb> \\<Longrightarrow> thesis\n 3. f' = \\<gg> \\<Longrightarrow> thesis\n 4. f' = \\<ff> \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  a' = \\<aa>\n\ngoal (4 subgoals):\n 1. f' = \\<aa> \\<Longrightarrow> thesis\n 2. f' = \\<bb> \\<Longrightarrow> thesis\n 3. f' = \\<gg> \\<Longrightarrow> thesis\n 4. f' = \\<ff> \\<Longrightarrow> thesis", "from f(3)[unfolded \\<aa>, symmetric]"], ["proof (chain)\npicking this:\n  b' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<rparr>", "have \"b' = \\<aa>\""], ["proof (prove)\nusing this:\n  b' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<rparr>\n\ngoal (1 subgoal):\n 1. b' = \\<aa>", "by (cs_prems cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  b' = \\<aa>\n\ngoal (4 subgoals):\n 1. f' = \\<aa> \\<Longrightarrow> thesis\n 2. f' = \\<bb> \\<Longrightarrow> thesis\n 3. f' = \\<gg> \\<Longrightarrow> thesis\n 4. f' = \\<ff> \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<aa>\n  a' = \\<aa>\n  b' = \\<aa>", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<aa>\n  a' = \\<aa>\n  b' = \\<aa>\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<aa>\n  a' = \\<aa>\n  b' = \\<aa>\n  \\<lbrakk>a' = \\<aa>; b' = \\<aa>; f' = \\<aa>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>; b' = \\<bb>; f' = \\<bb>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<gg>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<ff>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (3 subgoals):\n 1. f' = \\<bb> \\<Longrightarrow> thesis\n 2. f' = \\<gg> \\<Longrightarrow> thesis\n 3. f' = \\<ff> \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. f' = \\<bb> \\<Longrightarrow> thesis\n 2. f' = \\<gg> \\<Longrightarrow> thesis\n 3. f' = \\<ff> \\<Longrightarrow> thesis", "case \\<bb>"], ["proof (state)\nthis:\n  f' = \\<bb>\n\ngoal (3 subgoals):\n 1. f' = \\<bb> \\<Longrightarrow> thesis\n 2. f' = \\<gg> \\<Longrightarrow> thesis\n 3. f' = \\<ff> \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<bb>\n\ngoal (3 subgoals):\n 1. f' = \\<bb> \\<Longrightarrow> thesis\n 2. f' = \\<gg> \\<Longrightarrow> thesis\n 3. f' = \\<ff> \\<Longrightarrow> thesis", "from f(2)[unfolded \\<bb>, symmetric]"], ["proof (chain)\npicking this:\n  a' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<rparr>", "have \"a' = \\<bb>\""], ["proof (prove)\nusing this:\n  a' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<rparr>\n\ngoal (1 subgoal):\n 1. a' = \\<bb>", "by (cs_prems cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  a' = \\<bb>\n\ngoal (3 subgoals):\n 1. f' = \\<bb> \\<Longrightarrow> thesis\n 2. f' = \\<gg> \\<Longrightarrow> thesis\n 3. f' = \\<ff> \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  a' = \\<bb>\n\ngoal (3 subgoals):\n 1. f' = \\<bb> \\<Longrightarrow> thesis\n 2. f' = \\<gg> \\<Longrightarrow> thesis\n 3. f' = \\<ff> \\<Longrightarrow> thesis", "from f(3)[unfolded \\<bb>, symmetric]"], ["proof (chain)\npicking this:\n  b' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<rparr>", "have \"b' = \\<bb>\""], ["proof (prove)\nusing this:\n  b' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<rparr>\n\ngoal (1 subgoal):\n 1. b' = \\<bb>", "by (cs_prems cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  b' = \\<bb>\n\ngoal (3 subgoals):\n 1. f' = \\<bb> \\<Longrightarrow> thesis\n 2. f' = \\<gg> \\<Longrightarrow> thesis\n 3. f' = \\<ff> \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<bb>\n  a' = \\<bb>\n  b' = \\<bb>", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<bb>\n  a' = \\<bb>\n  b' = \\<bb>\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<bb>\n  a' = \\<bb>\n  b' = \\<bb>\n  \\<lbrakk>a' = \\<aa>; b' = \\<aa>; f' = \\<aa>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>; b' = \\<bb>; f' = \\<bb>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<gg>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<ff>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (2 subgoals):\n 1. f' = \\<gg> \\<Longrightarrow> thesis\n 2. f' = \\<ff> \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. f' = \\<gg> \\<Longrightarrow> thesis\n 2. f' = \\<ff> \\<Longrightarrow> thesis", "case \\<gg>"], ["proof (state)\nthis:\n  f' = \\<gg>\n\ngoal (2 subgoals):\n 1. f' = \\<gg> \\<Longrightarrow> thesis\n 2. f' = \\<ff> \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<gg>\n\ngoal (2 subgoals):\n 1. f' = \\<gg> \\<Longrightarrow> thesis\n 2. f' = \\<ff> \\<Longrightarrow> thesis", "from f(2)[symmetric] \\<gg>"], ["proof (chain)\npicking this:\n  a' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f'\\<rparr>\n  f' = \\<gg>", "have \"a' = \\<aa>\""], ["proof (prove)\nusing this:\n  a' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f'\\<rparr>\n  f' = \\<gg>\n\ngoal (1 subgoal):\n 1. a' = \\<aa>", "by (cs_prems cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  a' = \\<aa>\n\ngoal (2 subgoals):\n 1. f' = \\<gg> \\<Longrightarrow> thesis\n 2. f' = \\<ff> \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  a' = \\<aa>\n\ngoal (2 subgoals):\n 1. f' = \\<gg> \\<Longrightarrow> thesis\n 2. f' = \\<ff> \\<Longrightarrow> thesis", "from f(3)[symmetric] \\<gg>"], ["proof (chain)\npicking this:\n  b' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f'\\<rparr>\n  f' = \\<gg>", "have \"b' = \\<bb>\""], ["proof (prove)\nusing this:\n  b' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f'\\<rparr>\n  f' = \\<gg>\n\ngoal (1 subgoal):\n 1. b' = \\<bb>", "by (cs_prems cs_simp: cat_parallel_cs_simps)"], ["proof (state)\nthis:\n  b' = \\<bb>\n\ngoal (2 subgoals):\n 1. f' = \\<gg> \\<Longrightarrow> thesis\n 2. f' = \\<ff> \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<gg>\n  a' = \\<aa>\n  b' = \\<bb>", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<gg>\n  a' = \\<aa>\n  b' = \\<bb>\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<gg>\n  a' = \\<aa>\n  b' = \\<bb>\n  \\<lbrakk>a' = \\<aa>; b' = \\<aa>; f' = \\<aa>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>; b' = \\<bb>; f' = \\<bb>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<gg>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<ff>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. f' = \\<ff> \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f' = \\<ff> \\<Longrightarrow> thesis", "case \\<ff>"], ["proof (state)\nthis:\n  f' = \\<ff>\n\ngoal (1 subgoal):\n 1. f' = \\<ff> \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<ff>\n\ngoal (1 subgoal):\n 1. f' = \\<ff> \\<Longrightarrow> thesis", "from f(2)[symmetric] \\<ff>"], ["proof (chain)\npicking this:\n  a' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f'\\<rparr>\n  f' = \\<ff>", "have \"a' = \\<aa>\""], ["proof (prove)\nusing this:\n  a' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Dom\\<rparr>\\<lparr>f'\\<rparr>\n  f' = \\<ff>\n\ngoal (1 subgoal):\n 1. a' = \\<aa>", "by (cs_prems cs_simp: cat_parallel_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  a' = \\<aa>\n\ngoal (1 subgoal):\n 1. f' = \\<ff> \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  a' = \\<aa>\n\ngoal (1 subgoal):\n 1. f' = \\<ff> \\<Longrightarrow> thesis", "from f(3)[symmetric] \\<ff>"], ["proof (chain)\npicking this:\n  b' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f'\\<rparr>\n  f' = \\<ff>", "have \"b' = \\<bb>\""], ["proof (prove)\nusing this:\n  b' =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>Cod\\<rparr>\\<lparr>f'\\<rparr>\n  f' = \\<ff>\n\ngoal (1 subgoal):\n 1. b' = \\<bb>", "by (cs_prems cs_simp: cat_parallel_cs_simps)"], ["proof (state)\nthis:\n  b' = \\<bb>\n\ngoal (1 subgoal):\n 1. f' = \\<ff> \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<ff>\n  a' = \\<aa>\n  b' = \\<bb>", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<ff>\n  a' = \\<aa>\n  b' = \\<bb>\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<ff>\n  a' = \\<aa>\n  b' = \\<bb>\n  \\<lbrakk>a' = \\<aa>; b' = \\<aa>; f' = \\<aa>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>; b' = \\<bb>; f' = \\<bb>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<gg>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>; b' = \\<bb>; f' = \\<ff>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>\\<open>\\<up>\\<up>\\<close> is a category\\<close>"], ["", "lemma (in cat_parallel) finite_category_the_cat_parallel[cat_parallel_cs_intros]:\n  \"finite_category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)", "proof(intro finite_categoryI'' tiny_categoryI'')"], ["proof (state)\ngoal (22 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\n 3. vcard (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>) = 6\\<^sub>\\<nat>\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 6. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 7. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\nA total of 22 subgoals...", "show \"vfsequence (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)", "unfolding the_cat_parallel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [ZFC_in_HOL.set {\\<aa>, \\<bb>},\n      ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<bb> \\<Rightarrow> \\<bb> | otherwise \\<Rightarrow> \\<aa>,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<aa> \\<Rightarrow> \\<aa> | otherwise \\<Rightarrow> \\<bb>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb>\n                                     \\<gg> \\<ff>.\n         if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n          | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<aa>,\n      vid_on (ZFC_in_HOL.set {\\<aa>, \\<bb>})]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\n\ngoal (21 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vcard (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>) = 6\\<^sub>\\<nat>\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 6. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 10. \\<R>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                \\<ff>\\<lparr>Obj\\<rparr>\nA total of 21 subgoals...", "show \"vcard (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>) = 6\\<^sub>\\<nat>", "unfolding the_cat_parallel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [ZFC_in_HOL.set {\\<aa>, \\<bb>},\n      ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<bb> \\<Rightarrow> \\<bb> | otherwise \\<Rightarrow> \\<aa>,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>, \\<bb>, \\<gg>, \\<ff>}.\n         if x = \\<aa> \\<Rightarrow> \\<aa> | otherwise \\<Rightarrow> \\<bb>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_parallel_composable \\<aa> \\<bb>\n                                     \\<gg> \\<ff>.\n         if gf = [\\<bb>, \\<bb>]\\<^sub>\\<circ> \\<Rightarrow> \\<bb> \n          | gf = [\\<bb>, \\<gg>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<bb>, \\<ff>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | gf = [\\<gg>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<gg> \n          | gf = [\\<ff>, \\<aa>]\\<^sub>\\<circ> \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<aa>,\n      vid_on (ZFC_in_HOL.set {\\<aa>, \\<bb>})]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp_all add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>) = 6\\<^sub>\\<nat>\n\ngoal (20 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Obj\\<rparr>\n 10. \\<And>gf.\n        (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                 (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                   \\<ff>\\<lparr>Comp\\<rparr>)) =\n        (\\<exists>g f b c a.\n            gf = [g, f]\\<^sub>\\<circ> \\<and>\n            g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n            f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b)\nA total of 20 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Obj\\<rparr>", "by (auto simp: the_cat_parallel_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                             \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (19 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Obj\\<rparr>\n 9. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b)\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>) =\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\nA total of 19 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Obj\\<rparr>", "by (auto simp: the_cat_parallel_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                             \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (18 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b)\n 9. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n 10. \\<And>b c g a f.\n        \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                          f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\nA total of 18 subgoals...", "show \"(gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)) =\n    (\n      \\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n    )\"\n    for gf"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                             (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b)", "unfolding the_cat_parallel_Comp_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                             \\<ff>) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                            \\<ff> \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "assume prems: \"gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                            \\<ff> \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "obtain g f where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. (\\<And>g f.\n        gf = [g, f]\\<^sub>\\<circ> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg>\n                            \\<ff> \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "from prems"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "show \n      \"\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b", "unfolding gf_def"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal (1 subgoal):\n 1. \\<exists>ga fa b c a.\n       [g, f]\\<^sub>\\<circ> = [ga, fa]\\<^sub>\\<circ> \\<and>\n       ga : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       fa : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b", "by (*slow*)\n        (\n          cases rule: cat_parallel_composableE; \n          (intro exI conjI)?; \n          cs_concl_step?;\n          (simp only:)?,\n          all\\<open>intro is_arrI, unfold the_cat_parallel_components(2)\\<close>\n        )\n        (\n          cs_concl \n            cs_simp: cat_parallel_cs_simps V_cs_simps cs_intro: V_cs_intros\n        )+"], ["proof (state)\nthis:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "assume \n      \"\\<exists>g f b' c' a'.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c' \\<and>\n        f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\""], ["proof (state)\nthis:\n  \\<exists>g f b' c' a'.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c' \\<and>\n     f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "then"], ["proof (chain)\npicking this:\n  \\<exists>g f b' c' a'.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c' \\<and>\n     f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'", "obtain g f b c a \n      where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n        and g: \"g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\"\n        and f: \"f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\""], ["proof (prove)\nusing this:\n  \\<exists>g f b' c' a'.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c' \\<and>\n     f : a' \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "from g f"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b", "show \"gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "unfolding gf_def"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>", "by (elim the_cat_parallel_is_arrE) (auto simp: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> cat_parallel_composable \\<aa> \\<bb> \\<gg> \\<ff>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?gf\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                          \\<ff>\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b)\n\ngoal (17 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n 10. \\<And>c d h b g a f.\n        \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> d;\n         g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                          g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                          f =\n                          h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                          (g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                           f)\nA total of 17 subgoals...", "show \"\\<D>\\<^sub>\\<circ> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>) = \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>", "by (simp add: cat_parallel_cs_simps the_cat_parallel_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>) =\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (16 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n 9. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                          f)\n 10. \\<And>a.\n        a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                               \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n         \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a\nA total of 16 subgoals...", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\"\n    if \"g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\" for b c g a f"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c", "using that"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c", "by (elim the_cat_parallel_is_arrE; simp only:)\n      (\n        all\\<open>\n          solves\\<open>simp add: cat_parallel_ineq cat_parallel_ineq[symmetric]\\<close> |\n          cs_concl cs_simp: cat_parallel_cs_simps \n        \\<close>\n      )"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                    ?f : ?a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?c\n\ngoal (15 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                          f)\n 9. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a\n 10. \\<And>a b f.\n        f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n        \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n         \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n        f =\n        f\nA total of 15 subgoals...", "show \n    \"h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = \n      h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f)\"\n    if \"h : c \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> d\" \n      and \"g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\" \n      and \"f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\"\n    for c d h b g a f"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n     f)", "using that"], ["proof (prove)\nusing this:\n  h : c \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n     f)", "by (elim the_cat_parallel_is_arrE; simp only:) (*slow*)\n      (\n        all\\<open>\n          solves\\<open>simp only: cat_parallel_ineq cat_parallel_ineq[symmetric]\\<close> |\n          cs_concl \n            cs_simp: cat_parallel_cs_simps cs_intro: cat_parallel_cs_intros\n          \\<close>\n      )"], ["proof (state)\nthis:\n  \\<lbrakk>?h : ?c \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?d;\n   ?g : ?b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                    ?g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                    ?f =\n                    ?h \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                    (?g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                     ?f)\n\ngoal (14 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a\n 9. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n       f =\n       f\n 10. \\<And>b c f.\n        f : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<Longrightarrow>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n        \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n         \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n        f\nA total of 14 subgoals...", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a\" if \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\" \n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a", "from that"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>", "consider \"a = \\<aa>\" | \"a = \\<bb>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_parallel_components(1)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a", "by cases\n        (\n          cs_concl \n            cs_simp: cat_parallel_cs_simps cs_intro: cat_parallel_cs_intros\n        )+"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                          \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> : ?a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?a\n\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b \\<Longrightarrow>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f\n 10. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n     \\<in>\\<^sub>\\<circ> Vset \\<alpha>\nA total of 13 subgoals...", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f = f\" \n    if \"f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\" for a b f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "using that"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    f =\n    f", "by (elim the_cat_parallel_is_arrE)\n      (cs_concl cs_simp: cat_parallel_cs_simps cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  ?f : ?a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?b \\<Longrightarrow>\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>CId\\<rparr>\\<lparr>?b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  ?f =\n  ?f\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f\n 9. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 10. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n     \\<in>\\<^sub>\\<circ> Vset \\<alpha>\nA total of 12 subgoals...", "show \"f \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> = f\" \n    if \"f : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\" for b c f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n    f", "using that"], ["proof (prove)\nusing this:\n  f : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n    f", "by (elim the_cat_parallel_is_arrE)\n      (cs_concl cs_simp: cat_parallel_cs_simps cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  ?f : ?b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?c \\<Longrightarrow>\n  ?f \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>CId\\<rparr>\\<lparr>?b\\<rparr> =\n  ?f\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 9. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 10. vfinite (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>)\nA total of 11 subgoals...", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by \n      (\n        cs_concl\n          cs_simp: the_cat_parallel_components nat_omega_simps \n          cs_intro: V_cs_intros cat_parallel_cs_intros\n      )"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 9. vfinite (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>)\n 10. vfinite (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>)", "show \"vfinite (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>)\" \"vfinite (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>) &&&\n    vfinite (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>)", "unfolding the_cat_parallel_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfinite (ZFC_in_HOL.set {\\<aa>, \\<bb>}) &&&\n    vfinite (ZFC_in_HOL.set {\\<aa>, \\<bb>, \\<gg>, \\<ff>})", "by auto"], ["proof (state)\nthis:\n  vfinite (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>)\n  vfinite (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Dom\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Cod\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n 8. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed \n  (\n    cs_concl \n      cs_simp: \n        nat_omega_simps cat_parallel_cs_simps the_cat_parallel_components(2) \n      cs_intro: \n        cat_cs_intros \n        cat_parallel_cs_intros \n        V_cs_intros \n        Limit_succ_in_VsetI\n  )+"], ["", "lemmas [cat_parallel_cs_intros] = cat_parallel.finite_category_the_cat_parallel"], ["", "subsubsection\\<open>Opposite parallel category\\<close>"], ["", "lemma (in cat_parallel) op_cat_the_cat_parallel[cat_op_simps]: \n  \"op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>) = \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>) =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>", "proof(rule cat_eqI)"], ["proof (state)\ngoal (8 subgoals):\n 1. category ?\\<alpha> (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>))\n 2. category ?\\<alpha> (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>)\n 3. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 4. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 5. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Dom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Dom\\<rparr>\n 6. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Cod\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Cod\\<rparr>\n 7. op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\n 8. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>", "interpret \\<bb>\\<aa>: cat_parallel \\<alpha> \\<bb> \\<aa> \\<ff> \\<gg>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_parallel \\<alpha> \\<bb> \\<aa> \\<ff> \\<gg>", "by (rule cat_parallel_op)"], ["proof (state)\ngoal (8 subgoals):\n 1. category ?\\<alpha> (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>))\n 2. category ?\\<alpha> (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>)\n 3. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 4. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 5. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Dom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Dom\\<rparr>\n 6. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Cod\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Cod\\<rparr>\n 7. op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\n 8. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>", "show \\<bb>\\<aa>: \"category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>)", "by (cs_concl cs_intro: cat_small_cs_intros cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>)\n\ngoal (7 subgoals):\n 1. category \\<alpha> (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>))\n 2. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 3. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 4. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Dom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Dom\\<rparr>\n 5. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Cod\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Cod\\<rparr>\n 6. op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\n 7. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>", "show \\<aa>\\<bb>: \"category \\<alpha> (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>))", "by \n      (\n        cs_concl \n          cs_intro: cat_small_cs_intros cat_op_intros cat_parallel_cs_intros\n      )"], ["proof (state)\nthis:\n  category \\<alpha> (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>))\n\ngoal (6 subgoals):\n 1. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 3. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Dom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Dom\\<rparr>\n 4. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Cod\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Cod\\<rparr>\n 5. op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\n 6. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>", "interpret \\<bb>\\<aa>: category \\<alpha> \\<open>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>)", "by (rule \\<bb>\\<aa>)"], ["proof (state)\ngoal (6 subgoals):\n 1. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 3. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Dom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Dom\\<rparr>\n 4. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Cod\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Cod\\<rparr>\n 5. op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\n 6. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>", "interpret \\<aa>\\<bb>: category \\<alpha> \\<open>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)", "by (cs_concl cs_intro: cat_small_cs_intros cat_parallel_cs_intros)"], ["proof (state)\ngoal (6 subgoals):\n 1. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 3. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Dom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Dom\\<rparr>\n 4. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Cod\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Cod\\<rparr>\n 5. op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\n 6. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>", "show \"op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> = \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (op_cat\n          (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>)\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ>\n     (op_cat\n       (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_cat\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n          \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "show \"vsv (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (op_cat\n          (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>)", "unfolding op_cat_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (fflip\n          (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Comp\\<rparr>))", "by (rule fflip_vsv)"], ["proof (state)\nthis:\n  vsv (op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>)\n\ngoal (3 subgoals):\n 1. vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ>\n     (op_cat\n       (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_cat\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n          \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "show \"vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)", "by (cs_concl cs_intro: cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ>\n     (op_cat\n       (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_cat\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n          \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "show [cat_op_simps]: \n      \"\\<D>\\<^sub>\\<circ> (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>) = \\<D>\\<^sub>\\<circ> (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (op_cat\n       (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)", "by \n        (\n          cs_concl \n            cs_simp: \n              cat_parallel_composable_fconverse\n              op_cat_components(5) \n              vdomain_fflip \n              cat_parallel_cs_simps \n            cs_intro: cat_cs_intros\n        )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>) =\n  \\<D>\\<^sub>\\<circ>\n   (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_cat\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n          \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "fix gf"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_cat\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n          \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "assume \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (op_cat\n                            (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_cat\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n          \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (op_cat\n                            (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>)\\<lparr>Comp\\<rparr>)", "have \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (op_cat\n                            (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>)\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n                              \\<gg>\\<lparr>Comp\\<rparr>)", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n                            \\<gg>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n                              \\<gg>\\<lparr>Comp\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n                            \\<gg>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_cat\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n          \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n                            \\<gg>\\<lparr>Comp\\<rparr>)", "obtain g f a b c \n      where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n        and g: \"g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> c\"\n        and f: \"f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> b\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n                            \\<gg>\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (op_cat\n                                (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                  \\<ff>)\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n       op_cat\n        (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n          \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr>", "from g f"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> b", "show \"op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr> = \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> b\n\ngoal (1 subgoal):\n 1. op_cat\n     (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n       \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n     \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>", "unfolding gf_def"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<^esub>\n    f =\n    g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<^esub>\n    f", "by (elim \\<bb>\\<aa>.the_cat_parallel_is_arrE)\n        (\n          simp add: cat_parallel_cs_intros | \n          cs_concl \n            cs_simp: cat_op_simps cat_parallel_cs_simps \n            cs_intro: cat_cs_intros cat_parallel_cs_intros\n        )+"], ["proof (state)\nthis:\n  op_cat\n   (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>)\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr> =\n  \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n   \\<gg>\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Comp\\<rparr> =\n  \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Comp\\<rparr>\n\ngoal (5 subgoals):\n 1. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 3. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Dom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Dom\\<rparr>\n 4. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Cod\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Cod\\<rparr>\n 5. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>", "show \"op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> = \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>", "proof(unfold cat_op_simps, rule vsv_eqI, unfold cat_parallel_cs_simps)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>, \\<bb>} = ZFC_in_HOL.set {\\<bb>, \\<aa>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>} \\<Longrightarrow>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>, \\<bb>} = ZFC_in_HOL.set {\\<bb>, \\<aa>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>} \\<Longrightarrow>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> set {\\<aa>, \\<bb>}\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>}\n\ngoal (4 subgoals):\n 1. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>, \\<bb>} = ZFC_in_HOL.set {\\<bb>, \\<aa>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>} \\<Longrightarrow>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>}", "consider \"a = \\<aa>\" | \"a = \\<bb>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (4 subgoals):\n 1. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>, \\<bb>} = ZFC_in_HOL.set {\\<bb>, \\<aa>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>} \\<Longrightarrow>\n       \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n        \\<gg>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> = \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n     \\<gg>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "by cases (cs_concl cs_simp: cat_parallel_cs_simps)+"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n   \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n  \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n   \\<gg>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>)\n 2. vsv (\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>, \\<bb>} = ZFC_in_HOL.set {\\<bb>, \\<aa>}", "qed auto"], ["proof (state)\nthis:\n  op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>CId\\<rparr> =\n  \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>CId\\<rparr>\n\ngoal (4 subgoals):\n 1. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 3. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Dom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Dom\\<rparr>\n 4. op_cat (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\\<lparr>Cod\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Cod\\<rparr>", "qed (auto simp: the_cat_parallel_components op_cat_components)"], ["", "lemmas [cat_op_simps] = cat_parallel.op_cat_the_cat_parallel"], ["", "subsection\\<open>Parallel functor\\<close>"], ["", "subsubsection\\<open>Background\\<close>"], ["", "text\\<open>\nThe concept of a parallel functor is introduced as a convenient abstraction\nfor the definition of the equalizers and co-equalizers (e.g., see\nChapter III-3 and Chapter III-4 in \\cite{mac_lane_categories_2010}).\n\\<close>"], ["", "subsubsection\\<open>Local assumptions for the parallel functor\\<close>"], ["", "locale cf_parallel = cat_parallel \\<alpha> \\<aa> \\<bb> \\<gg> \\<ff> + category \\<alpha> \\<CC> \n  for \\<alpha> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>' \\<CC> :: V +\n  assumes cf_parallel_\\<gg>'[cat_parallel_cs_intros]: \"\\<gg>' : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'\"\n    and cf_parallel_\\<ff>'[cat_parallel_cs_intros]: \"\\<ff>' : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'\""], ["", "lemma (in cf_parallel) cf_parallel_\\<gg>''[cat_parallel_cs_intros]:\n  assumes \"a = \\<aa>'\" and \"b = \\<bb>'\"\n  shows \"\\<gg>' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg>' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg>' : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'", "by (rule cf_parallel_\\<gg>')"], ["", "lemma (in cf_parallel) cf_parallel_\\<gg>'''[cat_parallel_cs_intros]:\n  assumes \"g = \\<gg>'\" and \"b = \\<bb>'\"\n  shows \"g : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg>' : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'", "by (rule cf_parallel_\\<gg>')"], ["", "lemma (in cf_parallel) cf_parallel_\\<gg>''''[cat_parallel_cs_intros]:\n  assumes \"g = \\<gg>'\" and \"a = \\<aa>'\"\n  shows \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg>' : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'", "by (rule cf_parallel_\\<gg>')"], ["", "lemma (in cf_parallel) cf_parallel_\\<ff>''[cat_parallel_cs_intros]:\n  assumes \"a = \\<aa>'\" and \"b = \\<bb>'\"\n  shows \"\\<ff>' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff>' : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff>' : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'", "by (rule cf_parallel_\\<ff>')"], ["", "lemma (in cf_parallel) cf_parallel_\\<ff>'''[cat_parallel_cs_intros]:\n  assumes \"f = \\<ff>'\" and \"b = \\<bb>'\"\n  shows \"f : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff>' : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'", "by (rule cf_parallel_\\<ff>')"], ["", "lemma (in cf_parallel) cf_parallel_\\<ff>''''[cat_parallel_cs_intros]:\n  assumes \"f = \\<ff>'\" and \"a = \\<aa>'\"\n  shows \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff>' : \\<aa>' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>'", "by (rule cf_parallel_\\<ff>')"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in cf_parallel) cf_parallel_axioms[cat_parallel_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" \n    and \"a = \\<aa>\" \n    and \"b = \\<bb>\" \n    and \"g = \\<gg>\" \n    and \"f = \\<ff>\" \n    and \"a' = \\<aa>'\" \n    and \"b' = \\<bb>'\" \n    and \"g' = \\<gg>'\" \n    and \"f' = \\<ff>'\" \n  shows \"cf_parallel \\<alpha>' a b g f a' b' g' f' \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_parallel \\<alpha>' a b g f a' b' g' f' \\<CC>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_parallel \\<alpha> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\n     \\<CC>", "by (rule cf_parallel_axioms)"], ["", "mk_ide rf cf_parallel_def[unfolded cf_parallel_axioms_def]\n  |intro cf_parallelI|\n  |dest cf_parallelD[dest]|\n  |elim cf_parallelE[elim]|"], ["", "lemmas [cat_parallel_cs_intros] = cf_parallelD(1,2)"], ["", "text\\<open>Duality.\\<close>"], ["", "lemma (in cf_parallel) cf_parallel_op[cat_op_intros]: \n  \"cf_parallel \\<alpha> \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>' (op_cat \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_parallel \\<alpha> \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>'\n     (op_cat \\<CC>)", "by (intro cf_parallelI, unfold cat_op_simps)\n    (\n      cs_concl cs_simp: cs_intro: \n        cat_parallel_cs_intros cat_cs_intros cat_op_intros\n    )"], ["", "lemmas [cat_op_intros] = cf_parallel.cf_parallel_op"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition the_cf_parallel :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" \n  (\\<open>\\<up>\\<up>\\<rightarrow>\\<up>\\<up>\\<close>)\n  where \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>' =\n    [\n      (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>. (a = \\<aa> ? \\<aa>' : \\<bb>')),\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>.\n          (\n           if f = \\<aa> \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>\n            | f = \\<bb> \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>\n            | f = \\<gg> \\<Rightarrow> \\<gg>'\n            | otherwise \\<Rightarrow> \\<ff>'\n          )\n      ),\n      \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>,\n      \\<CC>\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma the_cf_parallel_components:\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> =\n      (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>. (a = \\<aa> ? \\<aa>' : \\<bb>'))\"\n    and \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>.\n          (\n           if f = \\<aa> \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>\n            | f = \\<bb> \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>\n            | f = \\<gg> \\<Rightarrow> \\<gg>'\n            | otherwise \\<Rightarrow> \\<ff>'\n          )\n      )\"\n    and [cat_parallel_cs_simps]: \n      \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> = \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\"\n    and [cat_parallel_cs_simps]: \n      \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> = \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n      \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Obj\\<rparr>.\n         if a = \\<aa> \\<Rightarrow> \\<aa>' \n          | otherwise \\<Rightarrow> \\<bb>') &&&\n     \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n      \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Arr\\<rparr>.\n         if f = \\<aa> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr> \n          | f = \\<bb> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr> \n          | f = \\<gg> \\<Rightarrow> \\<gg>' \n          | otherwise \\<Rightarrow> \\<ff>')) &&&\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff> &&&\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> =\n    \\<CC>", "unfolding the_cf_parallel_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Obj\\<rparr>.\n         if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>',\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Arr\\<rparr>.\n         if f = \\<aa> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr> \n          | f = \\<bb> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr> \n          | f = \\<gg> \\<Rightarrow> \\<gg>' | otherwise \\<Rightarrow> \\<ff>',\n      \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Obj\\<rparr>.\n         if a = \\<aa> \\<Rightarrow> \\<aa>' \n          | otherwise \\<Rightarrow> \\<bb>') &&&\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Obj\\<rparr>.\n         if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>',\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Arr\\<rparr>.\n         if f = \\<aa> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr> \n          | f = \\<bb> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr> \n          | f = \\<gg> \\<Rightarrow> \\<gg>' | otherwise \\<Rightarrow> \\<ff>',\n      \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Arr\\<rparr>.\n         if f = \\<aa> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr> \n          | f = \\<bb> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr> \n          | f = \\<gg> \\<Rightarrow> \\<gg>' \n          | otherwise \\<Rightarrow> \\<ff>')) &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                   \\<ff>\\<lparr>Obj\\<rparr>.\n        if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>',\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                   \\<ff>\\<lparr>Arr\\<rparr>.\n        if f = \\<aa> \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr> \n         | f = \\<bb> \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr> \n         | f = \\<gg> \\<Rightarrow> \\<gg>' | otherwise \\<Rightarrow> \\<ff>',\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>,\n     \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff> &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                   \\<ff>\\<lparr>Obj\\<rparr>.\n        if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>',\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                   \\<ff>\\<lparr>Arr\\<rparr>.\n        if f = \\<aa> \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr> \n         | f = \\<bb> \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr> \n         | f = \\<gg> \\<Rightarrow> \\<gg>' | otherwise \\<Rightarrow> \\<ff>',\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>,\n     \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<CC>", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Object map\\<close>"], ["", "mk_VLambda the_cf_parallel_components(1)\n  |vsv the_the_cf_parallel_ObjMap_vsv[cat_parallel_cs_intros]|\n  |vdomain the_cf_parallel_ObjMap_vdomain[cat_parallel_cs_simps]|\n  |app the_cf_parallel_ObjMap_app|"], ["", "lemma (in cf_parallel) the_cf_parallel_ObjMap_app_\\<aa>[cat_parallel_cs_simps]:\n  assumes \"x = \\<aa>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<aa>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<aa>'", "by \n    (\n      cs_concl \n        cs_simp: \n          assms the_cf_parallel_ObjMap_app cat_parallel_cs_simps V_cs_simps \n        cs_intro: cat_parallel_cs_intros\n    )"], ["", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ObjMap_app_\\<aa>"], ["", "lemma (in cf_parallel) the_cf_parallel_ObjMap_app_\\<bb>[cat_parallel_cs_simps]:\n  assumes \"x = \\<bb>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<bb>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<bb>'", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<bb>'", "by \n    (\n      cs_concl \n        cs_simp: \n          assms the_cf_parallel_ObjMap_app cat_parallel_cs_simps V_cs_simps \n        cs_intro: cat_parallel_cs_intros\n    )"], ["", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ObjMap_app_\\<bb>"], ["", "lemma (in cf_parallel) the_cf_parallel_ObjMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "unfolding the_cf_parallel_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Obj\\<rparr>.\n         if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>')\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "proof(intro vrange_VLambda_vsubset)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (if x = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>')\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (if x = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>')\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (if x = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>')\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>", "consider \"a = \\<aa>\" | \"a = \\<bb>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_parallel_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>, \\<bb>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (if x = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>')\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"(a = \\<aa> ? \\<aa>' : \\<bb>') \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>')\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by (auto intro: cat_cs_intros cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  (if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>')\n  \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "mk_VLambda the_cf_parallel_components(2)\n  |vsv the_cf_parallel_ArrMap_vsv[cat_parallel_cs_intros]|\n  |vdomain the_cf_parallel_ArrMap_vdomain[cat_parallel_cs_simps]|\n  |app the_cf_parallel_ArrMap_app|"], ["", "lemma (in cf_parallel) the_cf_parallel_ArrMap_app_\\<gg>[cat_parallel_cs_simps]:\n  assumes \"f = \\<gg>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<gg>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>'", "from assms"], ["proof (chain)\npicking this:\n  f = \\<gg>", "have \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f = \\<gg>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_intro: cat_parallel_cs_intros a_in_succ_xI)"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>'", "from this"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>'", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>'", "by (elim the_cat_parallel_ArrE; simp only: assms) \n      (auto simp: the_cf_parallel_ArrMap_app)"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<gg>'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ArrMap_app_\\<gg>"], ["", "lemma (in cf_parallel) the_cf_parallel_ArrMap_app_\\<ff>[cat_parallel_cs_simps]:\n  assumes \"f = \\<ff>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<ff>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>'", "from assms"], ["proof (chain)\npicking this:\n  f = \\<ff>", "have \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f = \\<ff>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_intro: cat_parallel_cs_intros a_in_succ_xI)"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>'", "from this"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>'", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>'", "by (elim the_cat_parallel_ArrE; simp only: assms) \n      (auto simp: the_cf_parallel_ArrMap_app)"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<ff>'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ArrMap_app_\\<ff>"], ["", "lemma (in cf_parallel) the_cf_parallel_ArrMap_app_\\<aa>[cat_parallel_cs_simps]:\n  assumes \"f = \\<aa>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  f = \\<aa>", "have \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f = \\<aa>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_intro: cat_parallel_cs_intros a_in_succ_xI)"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>", "from this"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>", "by (elim the_cat_parallel_ArrE; simp only: assms) \n      (auto simp: the_cf_parallel_ArrMap_app)"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ArrMap_app_\\<aa>"], ["", "lemma (in cf_parallel) the_cf_parallel_ArrMap_app_\\<bb>[cat_parallel_cs_simps]:\n  assumes \"f = \\<bb>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  f = \\<bb>", "have \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f = \\<bb>\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                           \\<ff>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_intro: cat_parallel_cs_intros a_in_succ_xI)"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>", "from this"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>", "using cat_parallel_ineq"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n  \\<aa> \\<noteq> \\<bb>\n  \\<aa> \\<noteq> \\<gg>\n  \\<aa> \\<noteq> \\<ff>\n  \\<bb> \\<noteq> \\<gg>\n  \\<bb> \\<noteq> \\<ff>\n  \\<gg> \\<noteq> \\<ff>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>", "by (elim the_cat_parallel_ArrE; simp only: assms) \n      (auto simp: the_cf_parallel_ArrMap_app)"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_parallel_cs_simps] = cf_parallel.the_cf_parallel_ArrMap_app_\\<bb>"], ["", "lemma (in cf_parallel) the_cf_parallel_ArrMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "proof(intro vsv.vsv_vrange_vsubset, unfold cat_parallel_cs_simps)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "show \"vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)", "by (cs_intro_step cat_parallel_cs_intros)"], ["proof (state)\nthis:\n  vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "assume \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>", "show \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by (elim the_cat_parallel_ArrE; simp only:)\n      (\n        cs_concl\n          cs_simp: cat_parallel_cs_simps  \n          cs_intro: cat_cs_intros cat_parallel_cs_intros \n      )+"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Parallel functor is a functor\\<close>"], ["", "lemma (in cf_parallel) cf_parallel_the_cf_parallel_is_tm_functor:\n  \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>' : \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>' :\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(intro is_functor.cf_is_tm_functor_if_HomDom_finite_category is_functorI')"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>')\n 3. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\n 4. category \\<alpha> \\<CC>\n 5. vcard\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') =\n    4\\<^sub>\\<nat>\n 6. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\n 7. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 8. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n 9. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>) =\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\nA total of 16 subgoals...", "show \"vfsequence (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>')", "unfolding the_cf_parallel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Obj\\<rparr>.\n         if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>',\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Arr\\<rparr>.\n         if f = \\<aa> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr> \n          | f = \\<bb> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr> \n          | f = \\<gg> \\<Rightarrow> \\<gg>' | otherwise \\<Rightarrow> \\<ff>',\n      \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>, \\<CC>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence\n   (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>')\n\ngoal (15 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\n 3. category \\<alpha> \\<CC>\n 4. vcard\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') =\n    4\\<^sub>\\<nat>\n 5. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\n 6. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 7. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n 8. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n 9. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n 10. \\<R>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\nA total of 15 subgoals...", "show \"vcard (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>') = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') =\n    4\\<^sub>\\<nat>", "unfolding the_cf_parallel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Obj\\<rparr>.\n         if a = \\<aa> \\<Rightarrow> \\<aa>' | otherwise \\<Rightarrow> \\<bb>',\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                                    \\<ff>\\<lparr>Arr\\<rparr>.\n         if f = \\<aa> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>'\\<rparr> \n          | f = \\<bb> \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>'\\<rparr> \n          | f = \\<gg> \\<Rightarrow> \\<gg>' | otherwise \\<Rightarrow> \\<ff>',\n      \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>, \\<CC>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard\n   (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>') =\n  4\\<^sub>\\<nat>\n\ngoal (14 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\n 3. category \\<alpha> \\<CC>\n 4. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\n 5. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 6. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n 7. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>) =\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\nA total of 14 subgoals...", "show \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> :\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub>\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    if \"f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\" for a b f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>'\n     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<up>\\<up>\\<rightarrow>\\<up>\\<up>\n                \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n                \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<up>\\<up>\\<rightarrow>\\<up>\\<up>\n                  \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n                  \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>'\n     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<up>\\<up>\\<rightarrow>\\<up>\\<up>\n                \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n                \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<up>\\<up>\\<rightarrow>\\<up>\\<up>\n                  \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n                  \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by (cases rule: the_cat_parallel_is_arrE; simp only:)\n      (\n        cs_concl\n          cs_simp: cat_parallel_cs_simps\n          cs_intro: cat_cs_intros cat_parallel_cs_intros\n      )+"], ["proof (state)\nthis:\n  ?f : ?a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?b \\<Longrightarrow>\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>'\n   \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> : \\<up>\\<up>\\<rightarrow>\\<up>\\<up>\n               \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n               \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>?a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<up>\\<up>\\<rightarrow>\\<up>\\<up>\n                  \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n                  \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\n 3. category \\<alpha> \\<CC>\n 4. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\n 5. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 6. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n 7. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>) =\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\nA total of 13 subgoals...", "show\n    \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> f\\<rparr> =\n      \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"\n    if \"g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\" for b c g a f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>'\n     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n   f\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>'\n     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>'\n     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n   f\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>'\n     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by (elim the_cat_parallel_is_arrE) (*very slow*)\n      (\n        all\\<open>simp only:\\<close>, \n        all\\<open>\n          solves\\<open>simp add: cat_parallel_ineq cat_parallel_ineq[symmetric]\\<close> | \n          cs_concl \n            cs_simp: cat_cs_simps cat_parallel_cs_simps \n            cs_intro: cat_cs_intros cat_parallel_cs_intros\n          \\<close>\n      )"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb>\n                     \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n                     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>?g \\<circ>\\<^sub>A\\<^bsub>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<^esub>\n                   ?f\\<rparr> =\n                    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb>\n                     \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n                     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb>\n                     \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>'\n                     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr>\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\n 3. category \\<alpha> \\<CC>\n 4. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\n 5. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 6. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n 7. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>) =\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\nA total of 12 subgoals...", "show \n    \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>\"\n    if \"c \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\" for c"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>'\n     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb>\n    \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC>\n                                     \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>'\n                                     \\<gg>'\n                                     \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>'\n     \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb>\n    \\<gg> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC>\n                                     \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>'\n                                     \\<gg>'\n                                     \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "by (elim the_cat_parallel_ObjE; simp only:)\n      (cs_concl cs_simp: cat_parallel_cs_simps)+"], ["proof (state)\nthis:\n  ?c \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                          \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>'\n   \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n  \\<ff>\\<lparr>CId\\<rparr>\\<lparr>?c\\<rparr>\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC>\n                                   \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>'\n                                   \\<gg>'\n                                   \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>?c\\<rparr>\\<rparr>\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>)\n 3. category \\<alpha> \\<CC>\n 4. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomDom\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\n 5. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 6. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n 7. vsv (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n          \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>) =\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>) =\n     \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\nA total of 11 subgoals...", "qed \n  (\n    cs_concl \n      cs_simp: cat_parallel_cs_simps \n      cs_intro: \n        the_cf_parallel_ObjMap_vrange \n        cat_parallel_cs_intros \n        cat_cs_intros \n        cat_small_cs_intros\n  )+"], ["", "lemma (in cf_parallel) cf_parallel_the_cf_parallel_is_tm_functor':\n  assumes \"\\<AA>' = \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>' : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>' :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>' :\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule cf_parallel_the_cf_parallel_is_tm_functor)"], ["", "lemmas [cat_parallel_cs_intros] = \n  cf_parallel.cf_parallel_the_cf_parallel_is_tm_functor'"], ["", "subsubsection\\<open>Opposite parallel functor\\<close>"], ["", "lemma (in cf_parallel) cf_parallel_the_cf_parallel_op[cat_op_simps]:\n  \"op_cf (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>') = \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'", "interpret \\<up>: is_tm_functor \\<alpha> \\<open>\\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<close> \\<CC> \\<open>\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>' :\n    \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n     \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule cf_parallel_the_cf_parallel_is_tm_functor)"], ["proof (state)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'", "proof\n    (\n      rule cf_eqI[of \\<alpha> \\<open>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<close> \\<open>op_cat \\<CC>\\<close> _ \\<open>\\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<close> \\<open>op_cat \\<CC>\\<close>], \n      unfold cat_op_simps\n    )"], ["proof (state)\ngoal (6 subgoals):\n 1. op_cf\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') :\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n     \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\n 2. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>' :\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n     \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\n 3. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>\n 4. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\n 5. \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\n 6. op_cat \\<CC> = op_cat \\<CC>", "show \"op_cf (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>') : \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n       \\<bb>' \\<gg>' \\<ff>') :\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n     \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>", "by (cs_concl cs_simp: cat_op_simps cs_intro: cat_op_intros)"], ["proof (state)\nthis:\n  op_cf\n   (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>') :\n  \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n   \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\n\ngoal (5 subgoals):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>' :\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n     \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\n 2. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>\n 3. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\n 4. \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\n 5. op_cat \\<CC> = op_cat \\<CC>", "show \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>' : \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>' :\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n     \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>", "by \n        (\n          cs_concl \n            cs_intro: cat_op_intros cat_small_cs_intros cat_parallel_cs_intros\n        )"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n   \\<bb>' \\<aa>' \\<ff>' \\<gg>' :\n  \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff>\n   \\<gg> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> op_cat \\<CC>\n\ngoal (4 subgoals):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>\n 2. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\n 3. \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\n 4. op_cat \\<CC> = op_cat \\<CC>", "show  \n      \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> = \n        \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>", "proof\n      (\n        rule vsv_eqI;\n        (intro cat_parallel_cs_intros)?; \n        unfold cat_parallel_cs_simps\n      )"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff>\n        \\<gg> \\<bb>' \\<aa>' \\<ff>'\n        \\<gg>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff>\n        \\<gg> \\<bb>' \\<aa>' \\<ff>'\n        \\<gg>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff>\n        \\<gg> \\<bb>' \\<aa>' \\<ff>'\n        \\<gg>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>", "consider \"a = \\<aa>\" | \"a = \\<bb>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa> \\<Longrightarrow> thesis;\n     a = \\<bb> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (elim the_cat_parallel_ObjE) simp"], ["proof (state)\nthis:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff>\n        \\<gg> \\<bb>' \\<aa>' \\<ff>'\n        \\<gg>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \n        \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n          \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = \\<aa> \\<Longrightarrow> ?thesis;\n   a = \\<bb> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "by cases\n          (\n            cs_concl \n              cs_simp: cat_parallel_cs_simps \n              cs_intro: cat_parallel_cs_intros cat_op_intros\n          )"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n   \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Obj\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Obj\\<rparr>", "qed (auto simp: the_cat_parallel_components)"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ObjMap\\<rparr> =\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n   \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ObjMap\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\n 2. \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\n 3. op_cat \\<CC> = op_cat \\<CC>", "show \n      \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> = \n        \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>", "proof\n      (\n        rule vsv_eqI; \n        (intro cat_parallel_cs_intros)?; \n        unfold cat_parallel_cs_simps\n      )"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff>\n        \\<gg> \\<bb>' \\<aa>' \\<ff>'\n        \\<gg>'\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff>\n        \\<gg> \\<bb>' \\<aa>' \\<ff>'\n        \\<gg>'\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff>\n        \\<gg> \\<bb>' \\<aa>' \\<ff>'\n        \\<gg>'\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>", "consider \"f = \\<aa>\" | \"f = \\<bb>\" | \"f = \\<gg>\" | \"f = \\<ff>\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                         \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa> \\<Longrightarrow> thesis;\n     f = \\<bb> \\<Longrightarrow> thesis; f = \\<gg> \\<Longrightarrow> thesis;\n     f = \\<ff> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (elim the_cat_parallel_ArrE) simp"], ["proof (state)\nthis:\n  \\<lbrakk>f = \\<aa> \\<Longrightarrow> ?thesis;\n   f = \\<bb> \\<Longrightarrow> ?thesis; f = \\<gg> \\<Longrightarrow> ?thesis;\n   f = \\<ff> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg>\n                              \\<ff>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>\n        \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff>\n        \\<gg> \\<bb>' \\<aa>' \\<ff>'\n        \\<gg>'\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>f = \\<aa> \\<Longrightarrow> ?thesis;\n   f = \\<bb> \\<Longrightarrow> ?thesis; f = \\<gg> \\<Longrightarrow> ?thesis;\n   f = \\<ff> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \n        \"\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff>  \\<aa>' \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n          \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg> \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>f = \\<aa> \\<Longrightarrow> ?thesis;\n   f = \\<bb> \\<Longrightarrow> ?thesis; f = \\<gg> \\<Longrightarrow> ?thesis;\n   f = \\<ff> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n     \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by cases\n          (\n            cs_concl \n              cs_simp: cat_parallel_cs_simps cat_op_simps \n              cs_intro: cat_parallel_cs_intros cat_op_intros\n          )+"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n   \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<up>\\<up>\\<^sub>C \\<aa> \\<bb> \\<gg> \\<ff>\\<lparr>Arr\\<rparr> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_parallel_components)"], ["proof (state)\nthis:\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n   \\<bb>' \\<gg>' \\<ff>'\\<lparr>ArrMap\\<rparr> =\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n   \\<bb>' \\<aa>' \\<ff>' \\<gg>'\\<lparr>ArrMap\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg> =\n    \\<up>\\<up>\\<^sub>C \\<bb> \\<aa> \\<ff> \\<gg>\n 2. op_cat \\<CC> = op_cat \\<CC>", "qed simp_all"], ["proof (state)\nthis:\n  op_cf\n   (\\<up>\\<up>\\<rightarrow>\\<up>\\<up> \\<CC> \\<aa> \\<bb> \\<gg> \\<ff> \\<aa>'\n     \\<bb>' \\<gg>' \\<ff>') =\n  \\<up>\\<up>\\<rightarrow>\\<up>\\<up> (op_cat \\<CC>) \\<bb> \\<aa> \\<ff> \\<gg>\n   \\<bb>' \\<aa>' \\<ff>' \\<gg>'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_op_simps] = cf_parallel.cf_parallel_the_cf_parallel_op"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}