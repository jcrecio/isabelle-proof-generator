{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_Small_Functor.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma (in is_tm_functor) tm_cf_is_semifunctor':\n  assumes \"\\<alpha>' = \\<alpha>\"\n    and \"\\<AA>' = cat_smc \\<AA>\"\n    and \"\\<BB>' = cat_smc \\<BB>\"\n  shows \"cf_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [slicing_intros] = is_tm_functor.tm_cf_is_semifunctor'", "lemma (in is_tm_functor) is_tm_functor_axioms'[cat_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [cat_small_cs_intros] = is_tm_functorD(1)", "lemmas_with [unfolded slicing_simps]:\n  tm_cf_ObjMap_in_Vset[cat_cs_intros] = smcf.tm_smcf_ObjMap_in_Vset\n  and tm_cf_ArrMap_in_Vset[cat_cs_intros] = smcf.tm_smcf_ArrMap_in_Vset", "lemma is_tm_functorI':\n  assumes [simp]: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and [simp]: \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and [simp]: \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_tm_functorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemmas [cat_small_cs_intros] = is_tm_functorD'(1)", "lemma is_tm_functorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma small_all_tm_cfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\"", "lemma (in is_tm_functor) is_tm_functor_op: \n  \"op_cf \\<FF> : op_cat \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_cat \\<BB>\"", "lemma (in is_tm_functor) is_tm_functor_op'[cat_op_intros]:  \n  assumes \"\\<AA>' = op_cat \\<AA>\" and \"\\<BB>' = op_cat \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_cf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas is_tm_functor_op[cat_op_intros] = is_tm_functor.is_tm_functor_op'", "lemma cf_comp_is_tm_functor[cat_small_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in is_functor) cf_is_tm_functor_if_HomDom_finite_category:\n  assumes \"finite_category \\<alpha> \\<AA>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma cf_const_is_tm_functor: \n  assumes \"tiny_category \\<alpha> \\<CC>\" and \"category \\<alpha> \\<DD>\" and \"a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\"\n  shows \"cf_const \\<CC> \\<DD> a : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"", "lemma cf_const_is_tm_functor'[cat_small_cs_intros]:\n  assumes \"tiny_category \\<alpha> \\<CC>\"\n    and \"category \\<alpha> \\<DD>\" \n    and \"a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\"\n    and \"\\<CC>' = \\<CC>\"\n    and \"\\<DD>' = \\<DD>\"\n  shows \"cf_const \\<CC> \\<DD> a : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>'\"", "lemmas [slicing_intros] = is_tiny_functor.tiny_cf_is_tiny_semifunctor", "lemma (in is_tiny_functor) is_tiny_functor_axioms'[cat_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [cat_small_cs_intros] = is_tiny_functorD(1)", "lemma is_tiny_functorI':\n  assumes [simp]: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_category \\<alpha> \\<AA>\"\n    and \"tiny_category \\<alpha> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma is_tiny_functorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_category \\<alpha> \\<AA>\"\n    and \"tiny_category \\<alpha> \\<BB>\"", "lemmas [cat_small_cs_intros] = is_tiny_functorD'(2,3)", "lemma is_tiny_functorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_category \\<alpha> \\<AA>\"\n    and \"tiny_category \\<alpha> \\<BB>\"", "lemma is_tiny_functor_iff:\n  \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<longleftrightarrow> \n    (\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<and> tiny_category \\<alpha> \\<AA> \\<and> tiny_category \\<alpha> \\<BB>)\"", "lemma (in is_tiny_functor) tiny_cf_in_Vset: \"\\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma small_all_tiny_cfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\"", "lemma small_tiny_cfs[simp]: \"small {\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\"", "lemma all_tiny_cfs_vsubset_Vset[simp]: \n  \"set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma (in is_functor) cf_is_tiny_functor_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> \\<BB>\"", "lemma (in is_tiny_functor) is_tiny_functor_op: \n  \"op_cf \\<FF> : op_cat \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> op_cat \\<BB>\"", "lemma (in is_tiny_functor) is_tiny_functor_op'[cat_op_intros]:  \n  assumes \"\\<AA>' = op_cat \\<AA>\" and \"\\<BB>' = op_cat \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_cf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas is_tiny_functor_op[cat_op_intros] = \n  is_tiny_functor.is_tiny_functor_op'", "lemma cf_comp_is_tiny_functor[cat_small_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma cf_const_is_tiny_functor:\n  assumes \"tiny_category \\<alpha> \\<CC>\" and \"tiny_category \\<alpha> \\<DD>\" and \"a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\"\n  shows \"cf_const \\<CC> \\<DD> a : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>\"", "lemma cf_const_is_tiny_functor':\n  assumes \"tiny_category \\<alpha> \\<CC>\"\n    and \"tiny_category \\<alpha> \\<DD>\" \n    and \"a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\"\n    and \"\\<CC>' = \\<CC>\"\n    and \"\\<DD>' = \\<DD>\"\n  shows \"cf_const \\<CC> \\<DD> a : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>'\"", "lemmas [cat_small_cs_intros] = cf_const_is_tiny_functor'"], "translations": [["", "lemma (in is_tm_functor) tm_cf_is_semifunctor':\n  assumes \"\\<alpha>' = \\<alpha>\"\n    and \"\\<AA>' = cat_smc \\<AA>\"\n    and \"\\<BB>' = cat_smc \\<BB>\"\n  shows \"cf_smcf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB>", "by (rule tm_cf_is_semifunctor)"], ["", "lemmas [slicing_intros] = is_tm_functor.tm_cf_is_semifunctor'"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in is_tm_functor) is_tm_functor_axioms'[cat_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule is_tm_functor_axioms)"], ["", "mk_ide rf is_tm_functor_def[unfolded is_tm_functor_axioms_def]\n  |intro is_tm_functorI|\n  |dest is_tm_functorD[dest]|\n  |elim is_tm_functorE[elim]|"], ["", "lemmas [cat_small_cs_intros] = is_tm_functorD(1)"], ["", "text\\<open>Slicing.\\<close>"], ["", "context is_tm_functor\nbegin"], ["", "interpretation smcf: is_tm_semifunctor \\<alpha> \\<open>cat_smc \\<AA>\\<close> \\<open>cat_smc \\<BB>\\<close> \\<open>cf_smcf \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB>", "by (rule tm_cf_is_semifunctor)"], ["", "lemmas_with [unfolded slicing_simps]:\n  tm_cf_ObjMap_in_Vset[cat_cs_intros] = smcf.tm_smcf_ObjMap_in_Vset\n  and tm_cf_ArrMap_in_Vset[cat_cs_intros] = smcf.tm_smcf_ArrMap_in_Vset"], ["", "end"], ["", "sublocale is_tm_functor \\<subseteq> HomDom: tiny_category \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_category \\<alpha> \\<AA>", "proof(rule tiny_categoryI')"], ["proof (state)\ngoal (3 subgoals):\n 1. category \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule vdomain_in_VsetI[OF tm_cf_ObjMap_in_Vset, unfolded cat_cs_simps])"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. category \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule vdomain_in_VsetI[OF tm_cf_ArrMap_in_Vset, unfolded cat_cs_simps])"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. category \\<alpha> \\<AA>", "qed (simp add: cat_cs_intros)"], ["", "text\\<open>Further rules.\\<close>"], ["", "lemma is_tm_functorI':\n  assumes [simp]: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and [simp]: \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and [simp]: \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(intro is_tm_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB>", "interpret is_functor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB>", "show \"cf_smcf \\<FF> : cat_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB>", "by (intro is_tm_semifunctorI', unfold slicing_simps) \n      (auto simp: slicing_intros)"], ["proof (state)\nthis:\n  cf_smcf \\<FF> :\n  cat_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "qed simp_all"], ["", "lemma is_tm_functorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "interpret is_tm_functor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_small_cs_intros] = is_tm_functorD'(1)"], ["", "lemma is_tm_functorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n      \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using is_tm_functorD'[OF assms]"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n      \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["", "text\\<open>Size.\\<close>"], ["", "lemma small_all_tm_cfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n    \\<subseteq> elts ?x", "show \n    \"{\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>} \\<subseteq>\n      elts (set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n    \\<subseteq> elts (all_cfs \\<alpha>)", "proof\n    (\n      simp only: elts_of_set small_all_cfs if_True, \n      rule subsetI, \n      unfold mem_Collect_eq\n    )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "assume \"\\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (state)\nthis:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<AA> \\<BB> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret is_tm_functor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<AA> \\<BB>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (blast intro: is_functor_axioms')"], ["proof (state)\nthis:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {\\<FF>.\n   \\<exists>\\<AA> \\<BB>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n  \\<subseteq> elts (all_cfs \\<alpha>)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Opposite functor with tiny maps\\<close>"], ["", "lemma (in is_tm_functor) is_tm_functor_op: \n  \"op_cf \\<FF> : op_cat \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_cat \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf \\<FF> :\n    op_cat\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_cat\n           \\<BB>", "by (intro is_tm_functorI', unfold cat_op_simps)\n    (cs_concl cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemma (in is_tm_functor) is_tm_functor_op'[cat_op_intros]:  \n  assumes \"\\<AA>' = op_cat \\<AA>\" and \"\\<BB>' = op_cat \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_cf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf \\<FF> :\n    op_cat\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_cat\n           \\<BB>", "by (rule is_tm_functor_op)"], ["", "lemmas is_tm_functor_op[cat_op_intros] = is_tm_functor.is_tm_functor_op'"], ["", "subsubsection\\<open>Composition of functors with tiny maps\\<close>"], ["", "lemma cf_comp_is_tm_functor[cat_small_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(rule is_tm_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. cf_smcf (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<CC>", "interpret \\<FF>: is_tm_functor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. cf_smcf (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<CC>", "interpret \\<GG>: is_tm_functor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n 2. cf_smcf (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<CC>", "from \\<FF>.tm_cf_is_semifunctor \\<GG>.tm_cf_is_semifunctor"], ["proof (chain)\npicking this:\n  cf_smcf \\<FF> :\n  cat_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         \\<BB>\n  cf_smcf \\<GG> :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         \\<CC>", "show \n    \"cf_smcf (\\<GG> \\<circ>\\<^sub>C\\<^sub>F \\<FF>) : cat_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<CC>\""], ["proof (prove)\nusing this:\n  cf_smcf \\<FF> :\n  cat_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         \\<BB>\n  cf_smcf \\<GG> :\n  cat_smc\n   \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         \\<CC>\n\ngoal (1 subgoal):\n 1. cf_smcf (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<CC>", "by (auto simp: smc_small_cs_intros slicing_commute[symmetric])"], ["proof (state)\nthis:\n  cf_smcf (\\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF>) :\n  cat_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         \\<CC>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show \"\\<GG> \\<circ>\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Finite categories and functors with tiny maps\\<close>"], ["", "lemma (in is_functor) cf_is_tm_functor_if_HomDom_finite_category:\n  assumes \"finite_category \\<alpha> \\<AA>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(intro is_tm_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB>", "interpret \\<AA>: finite_category \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<AA>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB>", "show \"cf_smcf \\<FF> : cat_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<BB>", "by \n      (\n        rule \n          is_semifunctor.smcf_is_tm_semifunctor_if_HomDom_finite_semicategory[\n            OF cf_is_semifunctor \\<AA>.fin_cat_finite_semicategory\n            ]\n      )"], ["proof (state)\nthis:\n  cf_smcf \\<FF> :\n  cat_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "qed (auto intro: cat_cs_intros)"], ["", "subsubsection\\<open>Constant functor with tiny maps\\<close>"], ["", "lemma cf_const_is_tm_functor: \n  assumes \"tiny_category \\<alpha> \\<CC>\" and \"category \\<alpha> \\<DD>\" and \"a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\"\n  shows \"cf_const \\<CC> \\<DD> a : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "proof(intro is_tm_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. cf_smcf\n     (dghm_const \\<CC> \\<DD> a\n       (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)) :\n    cat_smc\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<DD>", "from assms"], ["proof (chain)\npicking this:\n  tiny_category \\<alpha> \\<CC>\n  category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>", "show \"cf_smcf (cf_const \\<CC> \\<DD> a) : cat_smc \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<DD>\""], ["proof (prove)\nusing this:\n  tiny_category \\<alpha> \\<CC>\n  category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_smcf\n     (dghm_const \\<CC> \\<DD> a\n       (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)) :\n    cat_smc\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                           \\<DD>", "by \n      (\n        cs_concl \n          cs_simp: slicing_commute[symmetric] slicing_simps cat_cs_simps \n          cs_intro: slicing_intros cat_cs_intros smc_small_cs_intros\n      )+"], ["proof (state)\nthis:\n  cf_smcf\n   (dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>)) :\n  cat_smc\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                         \\<DD>\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "from assms"], ["proof (chain)\npicking this:\n  tiny_category \\<alpha> \\<CC>\n  category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>", "show \"cf_const \\<CC> \\<DD> a : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\nusing this:\n  tiny_category \\<alpha> \\<CC>\n  category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (cs_concl cs_intro: cat_cs_intros cat_small_cs_intros)"], ["proof (state)\nthis:\n  dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cf_const_is_tm_functor'[cat_small_cs_intros]:\n  assumes \"tiny_category \\<alpha> \\<CC>\"\n    and \"category \\<alpha> \\<DD>\" \n    and \"a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\"\n    and \"\\<CC>' = \\<CC>\"\n    and \"\\<DD>' = \\<DD>\"\n  shows \"cf_const \\<CC> \\<DD> a : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>'", "using assms(1-3)"], ["proof (prove)\nusing this:\n  tiny_category \\<alpha> \\<CC>\n  category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>'", "unfolding assms(4,5)"], ["proof (prove)\nusing this:\n  tiny_category \\<alpha> \\<CC>\n  category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (rule cf_const_is_tm_functor)"], ["", "subsection\\<open>Tiny functor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "locale is_tiny_functor = is_functor \\<alpha> \\<AA> \\<BB> \\<FF> for \\<alpha> \\<AA> \\<BB> \\<FF> +\n  assumes tiny_cf_is_tiny_semifunctor[slicing_intros]: \n    \"cf_smcf \\<FF> : cat_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<BB>\""], ["", "syntax \"_is_tiny_functor\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>(_ :/ _ \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightleftharpoons> \"CONST is_tiny_functor \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "abbreviation (input) is_cn_tiny_cf :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  where \"is_cn_tiny_cf \\<alpha> \\<AA> \\<BB> \\<FF> \\<equiv> \\<FF> : op_cat \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["", "syntax \"_is_cn_tiny_cf\" :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> bool\"\n  (\\<open>(_ :/ _ \\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<mapsto>\\<mapsto>\\<index> _)\\<close> [51, 51, 51] 51)"], ["", "translations \"\\<FF> : \\<AA> \\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<mapsto>\\<mapsto>\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \\<rightharpoonup> \"CONST is_cn_cf \\<alpha> \\<AA> \\<BB> \\<FF>\""], ["", "abbreviation all_tiny_cfs :: \"V \\<Rightarrow> V\"\n  where \"all_tiny_cfs \\<alpha> \\<equiv> set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["", "abbreviation tiny_cfs :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"tiny_cfs \\<alpha> \\<AA> \\<BB> \\<equiv> set {\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["", "lemmas [slicing_intros] = is_tiny_functor.tiny_cf_is_tiny_semifunctor"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma (in is_tiny_functor) is_tiny_functor_axioms'[cat_small_cs_intros]:\n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<AA>' = \\<AA>\" and \"\\<BB>' = \\<BB>\"\n  shows \"\\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule is_tiny_functor_axioms)"], ["", "mk_ide rf is_tiny_functor_def[unfolded is_tiny_functor_axioms_def]\n  |intro is_tiny_functorI|\n  |dest is_tiny_functorD[dest]|\n  |elim is_tiny_functorE[elim]|"], ["", "lemmas [cat_small_cs_intros] = is_tiny_functorD(1)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "sublocale is_tiny_functor \\<subseteq> HomDom: tiny_category \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_category \\<alpha> \\<AA>", "proof(intro tiny_categoryI')"], ["proof (state)\ngoal (3 subgoals):\n 1. category \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "interpret smcf: is_tiny_semifunctor \\<alpha> \\<open>cat_smc \\<AA>\\<close> \\<open>cat_smc \\<BB>\\<close> \\<open>cf_smcf \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<BB>", "by (rule tiny_cf_is_tiny_semifunctor)"], ["proof (state)\ngoal (3 subgoals):\n 1. category \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule smcf.HomDom.tiny_smc_Obj_in_Vset[unfolded slicing_simps])"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. category \\<alpha> \\<AA>\n 2. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule smcf.HomDom.tiny_smc_Arr_in_Vset[unfolded slicing_simps])"], ["proof (state)\nthis:\n  \\<AA>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. category \\<alpha> \\<AA>", "qed (auto simp: cat_cs_intros)"], ["", "sublocale is_tiny_functor \\<subseteq> HomCod: tiny_category \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_category \\<alpha> \\<BB>", "proof(intro tiny_categoryI')"], ["proof (state)\ngoal (3 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "interpret smcf: is_tiny_semifunctor \\<alpha> \\<open>cat_smc \\<AA>\\<close> \\<open>cat_smc \\<BB>\\<close> \\<open>cf_smcf \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<BB>", "by (rule tiny_cf_is_tiny_semifunctor)"], ["proof (state)\ngoal (3 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule smcf.HomCod.tiny_smc_Obj_in_Vset[unfolded slicing_simps])"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. category \\<alpha> \\<BB>\n 2. \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule smcf.HomCod.tiny_smc_Arr_in_Vset[unfolded slicing_simps])"], ["proof (state)\nthis:\n  \\<BB>\\<lparr>Arr\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. category \\<alpha> \\<BB>", "qed (auto simp: cat_cs_intros)"], ["", "sublocale is_tiny_functor \\<subseteq> is_tm_functor"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(intro is_tm_functorI')"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "interpret smcf: is_tiny_semifunctor \\<alpha> \\<open>cat_smc \\<AA>\\<close> \\<open>cat_smc \\<BB>\\<close> \\<open>cf_smcf \\<FF>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<BB>", "by (rule tiny_cf_is_tiny_semifunctor)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "note Vset[unfolded slicing_simps] = \n    smcf.tm_smcf_ObjMap_in_Vset\n    smcf.tm_smcf_ArrMap_in_Vset"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \"\\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (intro Vset)+"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "qed (auto simp: cat_cs_intros)"], ["", "text\\<open>Further rules.\\<close>"], ["", "lemma is_tiny_functorI':\n  assumes [simp]: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_category \\<alpha> \\<AA>\"\n    and \"tiny_category \\<alpha> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof(intro is_tiny_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<BB>", "interpret \\<FF>: is_functor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<BB>", "interpret \\<AA>: tiny_category \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_category \\<alpha> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<BB>", "interpret \\<BB>: tiny_category \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_category \\<alpha> \\<BB>", "by (rule assms(3))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<BB>", "show \"cf_smcf \\<FF> : cat_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n     \\<BB>", "by (intro is_tiny_semifunctorI') (auto intro: slicing_intros)"], ["proof (state)\nthis:\n  cf_smcf \\<FF> :\n  cat_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> cat_smc\n   \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "qed (rule assms(1))"], ["", "lemma is_tiny_functorD':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_category \\<alpha> \\<AA>\"\n    and \"tiny_category \\<alpha> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    tiny_category \\<alpha> \\<AA> &&& tiny_category \\<alpha> \\<BB>", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. tiny_category \\<alpha> \\<AA>\n 3. tiny_category \\<alpha> \\<BB>", "interpret is_tiny_functor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(1))"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n 2. tiny_category \\<alpha> \\<AA>\n 3. tiny_category \\<alpha> \\<BB>", "show \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" and \"tiny_category \\<alpha> \\<AA>\" and \"tiny_category \\<alpha> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> &&&\n    tiny_category \\<alpha> \\<AA> &&& tiny_category \\<alpha> \\<BB>", "by (auto intro: cat_small_cs_intros)"], ["proof (state)\nthis:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  tiny_category \\<alpha> \\<AA>\n  tiny_category \\<alpha> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_small_cs_intros] = is_tiny_functorD'(2,3)"], ["", "lemma is_tiny_functorE':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\" \n    and \"tiny_category \\<alpha> \\<AA>\"\n    and \"tiny_category \\<alpha> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      tiny_category \\<alpha> \\<AA>; tiny_category \\<alpha> \\<BB>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using is_tiny_functorD'[OF assms]"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n  tiny_category \\<alpha> \\<AA>\n  tiny_category \\<alpha> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<FF> :\n              \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>;\n      tiny_category \\<alpha> \\<AA>; tiny_category \\<alpha> \\<BB>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "lemma is_tiny_functor_iff:\n  \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<longleftrightarrow> \n    (\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<and> tiny_category \\<alpha> \\<AA> \\<and> tiny_category \\<alpha> \\<BB>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> =\n    (\\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<and>\n     tiny_category \\<alpha> \\<AA> \\<and> tiny_category \\<alpha> \\<BB>)", "by (auto intro: is_tiny_functorI' dest: is_tiny_functorD'(2,3))"], ["", "text\\<open>Size.\\<close>"], ["", "lemma (in is_tiny_functor) tiny_cf_in_Vset: \"\\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "note [cat_cs_intros] = \n    tm_cf_ObjMap_in_Vset \n    tm_cf_ArrMap_in_Vset\n    HomDom.tiny_cat_in_Vset \n    HomCod.tiny_cat_in_Vset"], ["proof (state)\nthis:\n  \\<FF>\\<lparr>ObjMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<FF>\\<lparr>ArrMap\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<AA> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<BB> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (subst cf_def) \n      (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros V_cs_intros)"], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma small_all_tiny_cfs[simp]: \"small {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<exists>\\<AA> \\<BB>.\n         \\<FF> :\n         \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n    \\<subseteq> elts ?x", "show \n    \"{\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>} \\<subseteq> \n      elts (set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<FF>.\n     \\<exists>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n    \\<subseteq> elts (all_cfs \\<alpha>)", "proof\n    (\n      simp only: elts_of_set small_all_cfs if_True, \n      rule subsetI, \n      unfold mem_Collect_eq\n    )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "assume \"\\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (state)\nthis:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<AA> \\<BB> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret is_tiny_functor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>\\<AA> \\<BB>.\n          x :\n          \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n       \\<exists>\\<AA> \\<BB>.\n          x : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<AA> \\<BB>.\n       \\<FF> :\n       \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (meson is_functor_axioms)"], ["proof (state)\nthis:\n  \\<exists>\\<AA> \\<BB>.\n     \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {\\<FF>.\n   \\<exists>\\<AA> \\<BB>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\n  \\<subseteq> elts (all_cfs \\<alpha>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma small_tiny_cfs[simp]: \"small {\\<FF>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {\\<FF>.\n      \\<FF> :\n      \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}", "by (rule down[of _ \\<open>set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>}\\<close>]) auto"], ["", "lemma all_tiny_cfs_vsubset_Vset[simp]: \n  \"set {\\<FF>. \\<exists>\\<AA> \\<BB>. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>} \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. all_tiny_cfs \\<alpha> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "proof(rule vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_tiny_cfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "fix \\<FF>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_tiny_cfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "assume \"\\<FF> \\<in>\\<^sub>\\<circ> all_tiny_cfs \\<alpha>\""], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_tiny_cfs \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_tiny_cfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_tiny_cfs \\<alpha>", "obtain \\<AA> \\<BB> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> \\<in>\\<^sub>\\<circ> all_tiny_cfs \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA> \\<BB>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> all_tiny_cfs \\<alpha> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto simp: is_tiny_functor.tiny_cf_in_Vset)"], ["proof (state)\nthis:\n  \\<FF> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in is_functor) cf_is_tiny_functor_if_ge_Limit:\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> \\<BB>", "proof(intro is_tiny_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>\n 2. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> cat_smc\n    \\<BB>", "show \"cf_smcf \\<FF> : cat_smc \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> cat_smc \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf \\<FF> :\n    cat_smc\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> cat_smc\n    \\<BB>", "by \n      (\n        rule is_semifunctor.smcf_is_tiny_semifunctor_if_ge_Limit, \n        rule cf_is_semifunctor; \n        intro assms\n      )"], ["proof (state)\nthis:\n  cf_smcf \\<FF> :\n  cat_smc\n   \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<beta>\\<^esub> cat_smc\n  \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>", "qed (simp add: cf_is_functor_if_ge_Limit assms)"], ["", "subsubsection\\<open>Opposite tiny semifunctor\\<close>"], ["", "lemma (in is_tiny_functor) is_tiny_functor_op: \n  \"op_cf \\<FF> : op_cat \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> op_cat \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf \\<FF> :\n    op_cat\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> op_cat\n                           \\<BB>", "by (intro is_tiny_functorI') \n    (cs_concl cs_intro: cat_op_intros cat_small_cs_intros)+"], ["", "lemma (in is_tiny_functor) is_tiny_functor_op'[cat_op_intros]:  \n  assumes \"\\<AA>' = op_cat \\<AA>\" and \"\\<BB>' = op_cat \\<BB>\" and \"\\<alpha>' = \\<alpha>\"\n  shows \"op_cf \\<FF> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf \\<FF> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf \\<FF> :\n    op_cat\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> op_cat\n                           \\<BB>", "by (rule is_tiny_functor_op)"], ["", "lemmas is_tiny_functor_op[cat_op_intros] = \n  is_tiny_functor.is_tiny_functor_op'"], ["", "subsubsection\\<open>Composition of tiny functors\\<close>"], ["", "lemma cf_comp_is_tiny_functor[cat_small_cs_intros]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<GG> \\<circ>\\<^sub>C\\<^sub>F \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<FF>: is_tiny_functor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret \\<GG>: is_tiny_functor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule is_tiny_functorI') (auto intro: cat_small_cs_intros)"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Tiny constant functor\\<close>"], ["", "lemma cf_const_is_tiny_functor:\n  assumes \"tiny_category \\<alpha> \\<CC>\" and \"tiny_category \\<alpha> \\<DD>\" and \"a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\"\n  shows \"cf_const \\<CC> \\<DD> a : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "proof(intro is_tiny_functorI')"], ["proof (state)\ngoal (3 subgoals):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n 2. tiny_category \\<alpha> \\<CC>\n 3. tiny_category \\<alpha> \\<DD>", "from assms"], ["proof (chain)\npicking this:\n  tiny_category \\<alpha> \\<CC>\n  tiny_category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>", "show \"cf_const \\<CC> \\<DD> a : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\""], ["proof (prove)\nusing this:\n  tiny_category \\<alpha> \\<CC>\n  tiny_category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (cs_concl cs_intro: cat_small_cs_intros)"], ["proof (state)\nthis:\n  dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<DD>\n\ngoal (2 subgoals):\n 1. tiny_category \\<alpha> \\<CC>\n 2. tiny_category \\<alpha> \\<DD>", "qed (auto simp: assms(1,2))"], ["", "lemma cf_const_is_tiny_functor':\n  assumes \"tiny_category \\<alpha> \\<CC>\"\n    and \"tiny_category \\<alpha> \\<DD>\" \n    and \"a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\"\n    and \"\\<CC>' = \\<CC>\"\n    and \"\\<DD>' = \\<DD>\"\n  shows \"cf_const \\<CC> \\<DD> a : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>'", "using assms(1-3)"], ["proof (prove)\nusing this:\n  tiny_category \\<alpha> \\<CC>\n  tiny_category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>'", "unfolding assms(4,5)"], ["proof (prove)\nusing this:\n  tiny_category \\<alpha> \\<CC>\n  tiny_category \\<alpha> \\<DD>\n  a \\<in>\\<^sub>\\<circ> \\<DD>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. dghm_const \\<CC> \\<DD> a (\\<DD>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>i\\<^sub>n\\<^sub>y\\<^bsub>\\<alpha>\\<^esub> \\<DD>", "by (rule cf_const_is_tiny_functor)"], ["", "lemmas [cat_small_cs_intros] = cf_const_is_tiny_functor'"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}