{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_SS.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma cat_ss_ineq:\n  shows cat_ss_\\<aa>\\<bb>[cat_ss_cs_intros]: \"\\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<aa>\\<oo>[cat_ss_cs_intros]: \"\\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<bb>\\<oo>[cat_ss_cs_intros]: \"\\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<gg>\\<ff>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<gg>\\<aa>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<gg>\\<bb>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<gg>\\<oo>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<ff>\\<aa>[cat_ss_cs_intros]: \"\\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<ff>\\<bb>[cat_ss_cs_intros]: \"\\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<ff>\\<oo>[cat_ss_cs_intros]: \"\\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\"", "lemma (in \\<Z>) \n  shows cat_ss_\\<aa>[cat_ss_cs_intros]: \"\\<aa>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_ss_\\<bb>[cat_ss_cs_intros]: \"\\<bb>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_ss_\\<oo>[cat_ss_cs_intros]: \"\\<oo>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_ss_\\<gg>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_ss_\\<ff>[cat_ss_cs_intros]: \"\\<ff>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma cat_scospan_composable_\\<oo>\\<oo>[cat_ss_cs_intros]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"", "lemma cat_scospan_composable_\\<oo>\\<gg>[cat_ss_cs_intros]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"", "lemma cat_scospan_composable_\\<oo>\\<ff>[cat_ss_cs_intros]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"", "lemma cat_scospan_composable_\\<gg>\\<aa>[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"", "lemma cat_scospan_composable_\\<ff>\\<bb>[cat_ss_cs_intros]:\n  assumes \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"", "lemma cat_scospan_composable_\\<aa>\\<aa>[cat_ss_cs_intros]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"", "lemma cat_scospan_composable_\\<bb>\\<bb>[cat_ss_cs_intros]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"", "lemma cat_scospan_composableE:\n  assumes \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"\n  obtains \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\" \n        | \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"", "lemma cat_sspan_composable_\\<oo>\\<oo>[cat_ss_cs_intros]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"", "lemma cat_sspan_composable_\\<gg>\\<oo>[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"", "lemma cat_sspan_composable_\\<ff>\\<oo>[cat_ss_cs_intros]:\n  assumes \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"", "lemma cat_sspan_composable_\\<aa>\\<gg>[cat_ss_cs_intros]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"", "lemma cat_sspan_composable_\\<bb>\\<ff>[cat_ss_cs_intros]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"", "lemma cat_sspan_composable_\\<aa>\\<aa>[cat_ss_cs_intros]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"", "lemma cat_sspan_composable_\\<bb>\\<bb>[cat_ss_cs_intros]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"", "lemma cat_sspan_composableE:\n  assumes \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"\n  obtains \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\" \n        | \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_components: \n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> = set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S}\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr> = set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr> = \n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      )\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr> = \n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      )\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable. \n         if gf = [\\<oo>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\\<^sub>S\\<^sub>S\n          | gf = [\\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> gf\\<lparr>0\\<rparr>\n      )\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr> = vid_on (set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S})\"", "lemma the_cat_sspan_components: \n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> = set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S}\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> = set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr> =\n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      )\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr> =\n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      )\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable. \n         if gf = [\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\\<^sub>S\\<^sub>S\n          | gf = [\\<bb>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> gf\\<lparr>0\\<rparr>\n      )\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>CId\\<rparr> = vid_on (set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S})\"", "lemma the_cat_scospan_components_vsv[cat_ss_cs_intros]: \"vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\"", "lemma the_cat_sspan_components_vsv[cat_ss_cs_intros]: \"vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C)\"", "lemma the_cat_scospan_Obj_\\<oo>I[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"", "lemma the_cat_scospan_Obj_\\<aa>I[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"", "lemma the_cat_scospan_Obj_\\<bb>I[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"", "lemma the_cat_scospan_ObjE:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"\n  obtains \\<open>a = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<bb>\\<^sub>S\\<^sub>S\\<close>", "lemma the_cat_sspan_Obj_\\<oo>I[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"", "lemma the_cat_sspan_Obj_\\<aa>I[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"", "lemma the_cat_sspan_Obj_\\<bb>I[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"", "lemma the_cat_sspan_ObjE:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"\n  obtains \\<open>a = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<bb>\\<^sub>S\\<^sub>S\\<close>", "lemma the_cat_scospan_Arr_\\<aa>I[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_scospan_Arr_\\<bb>I[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_scospan_Arr_\\<oo>I[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_scospan_Arr_\\<gg>I[cat_ss_cs_intros]:\n  assumes \"a = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_scospan_Arr_\\<ff>I[cat_ss_cs_intros]:\n  assumes \"a = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_scospan_ArrE:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"\n  obtains \\<open>f = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<bb>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<gg>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<ff>\\<^sub>S\\<^sub>S\\<close>", "lemma the_cat_sspan_Arr_\\<aa>I[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_sspan_Arr_\\<bb>I[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_sspan_Arr_\\<oo>I[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_sspan_Arr_\\<gg>I[cat_ss_cs_intros]:\n  assumes \"a = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_sspan_Arr_\\<ff>I[cat_ss_cs_intros]:\n  assumes \"a = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"", "lemma the_cat_sspan_ArrE:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"\n  obtains \\<open>f = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<bb>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<gg>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<ff>\\<^sub>S\\<^sub>S\\<close>", "lemma the_cat_scospan_Dom_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Dom_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Dom_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Dom_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Dom_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Dom_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Dom_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Dom_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Dom_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Dom_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Cod_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Cod_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Cod_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Cod_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Cod_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Cod_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Cod_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Cod_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Cod_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\"", "lemma the_cat_sspan_Cod_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\"", "lemma the_cat_scospan_Comp_app_\\<aa>\\<aa>[cat_ss_cs_simps]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_scospan_Comp_app_\\<bb>\\<bb>[cat_ss_cs_simps]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_scospan_Comp_app_\\<oo>\\<oo>[cat_ss_cs_simps]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_scospan_Comp_app_\\<oo>\\<gg>[cat_ss_cs_simps]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_scospan_Comp_app_\\<oo>\\<ff>[cat_ss_cs_simps]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_scospan_Comp_app_\\<gg>\\<aa>[cat_ss_cs_simps]:\n  assumes \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\"", "lemma the_cat_scospan_Comp_app_\\<ff>\\<bb>[cat_ss_cs_simps]:\n  assumes \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\"", "lemma the_cat_sspan_Comp_app_\\<aa>\\<aa>[cat_ss_cs_simps]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_sspan_Comp_app_\\<bb>\\<bb>[cat_ss_cs_simps]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_sspan_Comp_app_\\<oo>\\<oo>[cat_ss_cs_simps]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_sspan_Comp_app_\\<aa>\\<gg>[cat_ss_cs_simps]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_sspan_Comp_app_\\<bb>\\<ff>[cat_ss_cs_simps]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\"", "lemma the_cat_sspan_Comp_app_\\<gg>\\<oo>[cat_ss_cs_simps]:\n  assumes \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\"", "lemma the_cat_sspan_Comp_app_\\<ff>\\<oo>[cat_ss_cs_simps]:\n  assumes \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\"", "lemma the_cat_scospan_is_arr_\\<aa>\\<aa>\\<aa>[cat_ss_cs_intros]:\n  assumes \"a' = \\<aa>\\<^sub>S\\<^sub>S\" and \"b' = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\"", "lemma the_cat_scospan_is_arr_\\<bb>\\<bb>\\<bb>[cat_ss_cs_intros]:\n  assumes \"a' = \\<bb>\\<^sub>S\\<^sub>S\" and \"b' = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\"", "lemma the_cat_scospan_is_arr_\\<oo>\\<oo>\\<oo>[cat_ss_cs_intros]:\n  assumes \"a' = \\<oo>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\"", "lemma the_cat_scospan_is_arr_\\<aa>\\<oo>\\<gg>[cat_ss_cs_intros]:\n  assumes \"a' = \\<aa>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\"", "lemma the_cat_scospan_is_arr_\\<bb>\\<oo>\\<ff>[cat_ss_cs_intros]:\n  assumes \"a' = \\<bb>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\"", "lemma the_cat_scospan_is_arrE:\n  assumes \"f' : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\"\n  obtains \"a' = \\<aa>\\<^sub>S\\<^sub>S\" and \"b' = \\<aa>\\<^sub>S\\<^sub>S\" and \"f' = \\<aa>\\<^sub>S\\<^sub>S\"\n        | \"a' = \\<bb>\\<^sub>S\\<^sub>S\" and \"b' = \\<bb>\\<^sub>S\\<^sub>S\" and \"f' = \\<bb>\\<^sub>S\\<^sub>S\"\n        | \"a' = \\<oo>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f' = \\<oo>\\<^sub>S\\<^sub>S\"\n        | \"a' = \\<aa>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f' = \\<gg>\\<^sub>S\\<^sub>S\"\n        | \"a' = \\<bb>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f' = \\<ff>\\<^sub>S\\<^sub>S\"", "lemma (in \\<Z>) finite_category_the_cat_scospan[cat_ss_cs_intros]:\n  \"finite_category \\<alpha> (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\"", "lemmas [cat_ss_cs_intros] = \\<Z>.finite_category_the_cat_scospan", "lemma the_cat_scospan_op[cat_op_simps]: \"op_cat (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C) = \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\"", "lemma (in \\<Z>) the_cat_sspan_op[cat_op_simps]: \"op_cat (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C) = \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\"", "lemmas [cat_op_simps] = \\<Z>.the_cat_sspan_op", "lemma (in \\<Z>) finite_category_the_cat_sspan[cat_ss_cs_intros]:\n  \"finite_category \\<alpha> (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C)\"", "lemma (in cf_scospan) cf_scospan_\\<gg>'[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\" and \"b = \\<oo>\"\n  shows \"\\<gg> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_scospan) cf_scospan_\\<gg>''[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\" and \"b = \\<oo>\"\n  shows \"g : \\<aa> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_scospan) cf_scospan_\\<gg>'''[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\" and \"a = \\<aa>\"\n  shows \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>\"", "lemma (in cf_scospan) cf_scospan_\\<ff>'[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\" and \"b = \\<oo>\"\n  shows \"\\<ff> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_scospan) cf_scospan_\\<ff>''[cat_ss_cs_intros]:\n  assumes \"f = \\<ff>\" and \"b = \\<oo>\"\n  shows \"f : \\<bb> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_scospan) cf_scospan_\\<ff>'''[cat_ss_cs_intros]:\n  assumes \"g = \\<ff>\" and \"b = \\<bb>\"\n  shows \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>\"", "lemma (in cf_sspan) cf_sspan_\\<gg>'[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\" and \"b = \\<aa>\"\n  shows \"\\<gg> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_sspan) cf_sspan_\\<gg>''[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\" and \"a = \\<aa>\"\n  shows \"g : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\"", "lemma (in cf_sspan) cf_sspan_\\<gg>'''[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\" and \"a = \\<oo>\"\n  shows \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<aa>\"", "lemma (in cf_sspan) cf_sspan_\\<ff>'[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\" and \"b = \\<bb>\"\n  shows \"\\<ff> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_sspan) cf_sspan_\\<ff>''[cat_ss_cs_intros]:\n  assumes \"f = \\<ff>\" and \"b = \\<bb>\"\n  shows \"f : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\"", "lemma (in cf_sspan) cf_sspan_\\<ff>'''[cat_ss_cs_intros]:\n  assumes \"f = \\<ff>\" and \"b = \\<oo>\"\n  shows \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>\"", "lemmas (in cf_scospan) [cat_ss_cs_intros] = cf_scospan_axioms", "lemmas [cat_ss_cs_intros] = cf_scospanD(1)", "lemmas (in cf_sspan) [cat_ss_cs_intros] = cf_sspan_axioms", "lemma (in cf_scospan) cf_sspan_op[cat_op_intros]: \n  \"cf_sspan \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> (op_cat \\<CC>)\"", "lemmas [cat_op_intros] = cf_scospan.cf_sspan_op", "lemma (in cf_sspan) cf_scospan_op[cat_op_intros]: \n  \"cf_scospan \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> (op_cat \\<CC>)\"", "lemmas [cat_op_intros] = cf_sspan.cf_scospan_op", "lemma the_cf_scospan_components:\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr> =\n    (\n      \\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n       if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\n        | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\n        | otherwise \\<Rightarrow> \\<oo>\n    )\"\n    and \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg>\n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\n      )\"\n    and [cat_ss_cs_simps]: \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> = \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\"\n    and [cat_ss_cs_simps]: \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> = \\<CC>\"", "lemma the_cf_sspan_components:\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr> =\n    (\n      \\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n       if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\n        | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\n        | otherwise \\<Rightarrow> \\<oo>\n    )\"\n    and \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg>\n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\n      )\"\n    and [cat_ss_cs_simps]: \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> = \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\"\n    and [cat_ss_cs_simps]: \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> = \\<CC>\"", "lemma the_cf_scospan_components_vsv[cat_ss_cs_intros]: \"vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\"", "lemma the_cf_sspan_components_vsv[cat_ss_cs_intros]: \"vsv (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\"", "lemma the_cf_scospan_ObjMap_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"x = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<aa>\"", "lemma (in cf_scospan) the_cf_scospan_ObjMap_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"x = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<bb>\"", "lemma (in cf_scospan) the_cf_scospan_ObjMap_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"x = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<oo>\"", "lemma (in cf_scospan) the_cf_scospan_ObjMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"", "lemma the_cf_sspan_ObjMap_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"x = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<aa>\"", "lemma (in cf_sspan) the_cf_sspan_ObjMap_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"x = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<bb>\"", "lemma (in cf_sspan) the_cf_sspan_ObjMap_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"x = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<oo>\"", "lemma (in cf_sspan) the_cf_sspan_ObjMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\"", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\"", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\"", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<gg>\"", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<ff>\"", "lemma (in cf_scospan) the_cf_scospan_ArrMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\"", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\"", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\"", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<gg>\"", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<ff>\"", "lemma (in cf_sspan) the_cf_sspan_ArrMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\"", "lemma (in cf_scospan) cf_scospan_the_cf_scospan_is_tm_functor:\n  \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> : \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in cf_scospan) cf_scospan_the_cf_scospan_is_tm_functor':\n  assumes \"\\<AA>' = \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'\"", "lemmas [cat_ss_cs_intros] = cf_scospan.cf_scospan_the_cf_scospan_is_tm_functor", "lemma op_cf_cf_scospan[cat_op_simps]: \n  \"op_cf (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) = \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\"", "lemma (in \\<Z>) op_cf_cf_scospan[cat_op_simps]: \n  \"op_cf (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) = \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\"", "lemmas [cat_op_simps] = \\<Z>.op_cf_cf_scospan", "lemma (in cf_sspan) cf_sspan_the_cf_sspan_is_tm_functor:\n  \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> : \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"", "lemma (in cf_sspan) cf_sspan_the_cf_sspan_is_tm_functor':\n  assumes \"\\<AA>' = \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'\"", "lemmas [cat_ss_cs_intros] = cf_sspan.cf_sspan_the_cf_sspan_is_tm_functor"], "translations": [["", "lemma cat_ss_ineq:\n  shows cat_ss_\\<aa>\\<bb>[cat_ss_cs_intros]: \"\\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<aa>\\<oo>[cat_ss_cs_intros]: \"\\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<bb>\\<oo>[cat_ss_cs_intros]: \"\\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<gg>\\<ff>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<gg>\\<aa>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<gg>\\<bb>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<gg>\\<oo>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<ff>\\<aa>[cat_ss_cs_intros]: \"\\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<ff>\\<bb>[cat_ss_cs_intros]: \"\\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\"\n    and cat_ss_\\<ff>\\<oo>[cat_ss_cs_intros]: \"\\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S &&&\n      \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S) &&&\n     \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S &&&\n     \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S &&&\n     \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S) &&&\n    (\\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S &&&\n     \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S) &&&\n    \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S &&&\n    \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S &&&\n    \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S", "unfolding cat_ss_elem_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((1\\<^sub>\\<nat> \\<noteq> 2\\<^sub>\\<nat> &&&\n      1\\<^sub>\\<nat> \\<noteq> []\\<^sub>\\<circ>) &&&\n     2\\<^sub>\\<nat> \\<noteq> []\\<^sub>\\<circ> &&&\n     3\\<^sub>\\<nat> \\<noteq> 4\\<^sub>\\<nat> &&&\n     3\\<^sub>\\<nat> \\<noteq> 1\\<^sub>\\<nat>) &&&\n    (3\\<^sub>\\<nat> \\<noteq> 2\\<^sub>\\<nat> &&&\n     3\\<^sub>\\<nat> \\<noteq> []\\<^sub>\\<circ>) &&&\n    4\\<^sub>\\<nat> \\<noteq> 1\\<^sub>\\<nat> &&&\n    4\\<^sub>\\<nat> \\<noteq> 2\\<^sub>\\<nat> &&&\n    4\\<^sub>\\<nat> \\<noteq> []\\<^sub>\\<circ>", "by simp_all"], ["", "lemma (in \\<Z>) \n  shows cat_ss_\\<aa>[cat_ss_cs_intros]: \"\\<aa>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_ss_\\<bb>[cat_ss_cs_intros]: \"\\<bb>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_ss_\\<oo>[cat_ss_cs_intros]: \"\\<oo>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_ss_\\<gg>[cat_ss_cs_intros]: \"\\<gg>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and cat_ss_\\<ff>[cat_ss_cs_intros]: \"\\<ff>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<aa>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n     \\<bb>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>) &&&\n    \\<oo>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<gg>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    \\<ff>\\<^sub>S\\<^sub>S \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding cat_ss_elem_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n     2\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>) &&&\n    []\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    3\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    4\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by simp_all"], ["", "subsection\\<open>Composable arrows in \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> and \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close>\\<close>"], ["", "abbreviation cat_scospan_composable :: V\n  where \"cat_scospan_composable \\<equiv> \n    (set {\\<oo>\\<^sub>S\\<^sub>S} \\<times>\\<^sub>\\<bullet> set {\\<oo>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S}) \\<union>\\<^sub>\\<circ> \n    (set {\\<gg>\\<^sub>S\\<^sub>S, \\<aa>\\<^sub>S\\<^sub>S} \\<times>\\<^sub>\\<bullet> set {\\<aa>\\<^sub>S\\<^sub>S}) \\<union>\\<^sub>\\<circ> \n    (set {\\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S} \\<times>\\<^sub>\\<bullet> set {\\<bb>\\<^sub>S\\<^sub>S})\""], ["", "abbreviation cat_sspan_composable :: V\n  where \"cat_sspan_composable \\<equiv> (cat_scospan_composable)\\<inverse>\\<^sub>\\<bullet>\""], ["", "text\\<open>Rules.\\<close>"], ["", "lemma cat_scospan_composable_\\<oo>\\<oo>[cat_ss_cs_intros]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["", "lemma cat_scospan_composable_\\<oo>\\<gg>[cat_ss_cs_intros]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["", "lemma cat_scospan_composable_\\<oo>\\<ff>[cat_ss_cs_intros]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["", "lemma cat_scospan_composable_\\<gg>\\<aa>[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<gg>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["", "lemma cat_scospan_composable_\\<ff>\\<bb>[cat_ss_cs_intros]:\n  assumes \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<ff>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["", "lemma cat_scospan_composable_\\<aa>\\<aa>[cat_ss_cs_intros]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["", "lemma cat_scospan_composable_\\<bb>\\<bb>[cat_ss_cs_intros]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["", "lemma cat_scospan_composableE:\n  assumes \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\"\n  obtains \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\" \n        | \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S;\n              f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S; f = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S; f = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<gg>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<ff>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms that"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n  \\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S; f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S; f = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S; f = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<gg>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<ff>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S;\n              f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S; f = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S; f = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<gg>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<ff>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "lemma cat_sspan_composable_\\<oo>\\<oo>[cat_ss_cs_intros]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["", "lemma cat_sspan_composable_\\<gg>\\<oo>[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<gg>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["", "lemma cat_sspan_composable_\\<ff>\\<oo>[cat_ss_cs_intros]:\n  assumes \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<ff>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["", "lemma cat_sspan_composable_\\<aa>\\<gg>[cat_ss_cs_intros]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["", "lemma cat_sspan_composable_\\<bb>\\<ff>[cat_ss_cs_intros]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["", "lemma cat_sspan_composable_\\<aa>\\<aa>[cat_ss_cs_intros]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["", "lemma cat_sspan_composable_\\<bb>\\<bb>[cat_ss_cs_intros]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "using assms"], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["", "lemma cat_sspan_composableE:\n  assumes \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\"\n  obtains \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\" \n        | \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n        | \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S;\n              f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<gg>\\<^sub>S\\<^sub>S; f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<ff>\\<^sub>S\\<^sub>S; f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms that"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n  \\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S; f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<gg>\\<^sub>S\\<^sub>S; f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<ff>\\<^sub>S\\<^sub>S; f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>g = \\<oo>\\<^sub>S\\<^sub>S;\n              f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<gg>\\<^sub>S\\<^sub>S; f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<ff>\\<^sub>S\\<^sub>S; f = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<aa>\\<^sub>S\\<^sub>S; f = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>g = \\<bb>\\<^sub>S\\<^sub>S; f = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "subsection\\<open>Categories \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> and \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close>\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter III-3 and Chapter III-4 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition the_cat_scospan :: V (\\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<close>)\n  where \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n    [\n      set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S},\n      set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      ),\n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      ),\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable. \n         if gf = [\\<oo>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\\<^sub>S\\<^sub>S\n          | gf = [\\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> gf\\<lparr>0\\<rparr>\n      ),\n      vid_on (set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S})\n    ]\\<^sub>\\<circ>\""], ["", "definition the_cat_sspan :: V (\\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<close>)\n  where \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    [\n      set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S},\n      set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      ),\n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      ),\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable. \n         if gf = [\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\\<^sub>S\\<^sub>S\n          | gf = [\\<bb>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> gf\\<lparr>0\\<rparr>\n      ),\n      vid_on (set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S})\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma the_cat_scospan_components: \n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> = set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S}\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr> = set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr> = \n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      )\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr> = \n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      )\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable. \n         if gf = [\\<oo>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\\<^sub>S\\<^sub>S\n          | gf = [\\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> gf\\<lparr>0\\<rparr>\n      )\"\n    and \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr> = vid_on (set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> =\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n       \\<oo>\\<^sub>S\\<^sub>S} &&&\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S} &&&\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr> =\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)) &&&\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr> =\n    (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S) &&&\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) &&&\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr> =\n    vid_on\n     (ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S})", "unfolding the_cat_scospan_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n         if gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n       \\<oo>\\<^sub>S\\<^sub>S} &&&\n     [ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n         if gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S} &&&\n     [ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n         if gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)) &&&\n    [ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S},\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n         \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S) &&&\n    [ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S},\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n         \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) &&&\n    [ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S},\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n         \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    vid_on\n     (ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S})", "by (simp_all add: nat_omega_simps)"], ["", "lemma the_cat_sspan_components: \n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> = set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S}\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> = set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr> =\n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      )\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr> =\n      (\n        \\<lambda>x\\<in>\\<^sub>\\<circ>set {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}. \n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S\n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S\n      )\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n      (\n        \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable. \n         if gf = [\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<gg>\\<^sub>S\\<^sub>S\n          | gf = [\\<bb>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow> \\<ff>\\<^sub>S\\<^sub>S\n          | otherwise \\<Rightarrow> gf\\<lparr>0\\<rparr>\n      )\"\n    and \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>CId\\<rparr> = vid_on (set {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> =\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n       \\<oo>\\<^sub>S\\<^sub>S} &&&\n     \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S} &&&\n     \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr> =\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)) &&&\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr> =\n    (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S) &&&\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) &&&\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>CId\\<rparr> =\n    vid_on\n     (ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S})", "unfolding the_cat_sspan_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n         if gf =\n            [\\<aa>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<bb>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n       \\<oo>\\<^sub>S\\<^sub>S} &&&\n     [ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n         if gf =\n            [\\<aa>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<bb>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S} &&&\n     [ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n         if gf =\n            [\\<aa>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<bb>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)) &&&\n    [ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S},\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n         \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S) &&&\n    [ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S},\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n         \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) &&&\n    [ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S},\n     ZFC_in_HOL.set\n      {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n       \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     vid_on\n      (ZFC_in_HOL.set\n        {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n         \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    vid_on\n     (ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S})", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma the_cat_scospan_components_vsv[cat_ss_cs_intros]: \"vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "unfolding the_cat_scospan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [ZFC_in_HOL.set\n          {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n           \\<oo>\\<^sub>S\\<^sub>S},\n         ZFC_in_HOL.set\n          {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n           \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n           \\<bb>\\<^sub>S\\<^sub>S},\n         \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n  \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}.\n            if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<aa>\\<^sub>S\\<^sub>S \n             | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<bb>\\<^sub>S\\<^sub>S \n             | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<aa>\\<^sub>S\\<^sub>S \n             | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<bb>\\<^sub>S\\<^sub>S \n             | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n         \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n  \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}.\n            if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<aa>\\<^sub>S\\<^sub>S \n             | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<bb>\\<^sub>S\\<^sub>S \n             | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n         \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n            if gf =\n               [\\<oo>\\<^sub>S\\<^sub>S,\n                \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n                 \\<gg>\\<^sub>S\\<^sub>S \n             | gf =\n               [\\<oo>\\<^sub>S\\<^sub>S,\n                \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n                 \\<ff>\\<^sub>S\\<^sub>S \n             | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n         vid_on\n          (ZFC_in_HOL.set\n            {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n             \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>", "by auto"], ["", "lemma the_cat_sspan_components_vsv[cat_ss_cs_intros]: \"vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "unfolding the_cat_sspan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [ZFC_in_HOL.set\n          {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n           \\<oo>\\<^sub>S\\<^sub>S},\n         ZFC_in_HOL.set\n          {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n           \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n           \\<bb>\\<^sub>S\\<^sub>S},\n         \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n  \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}.\n            if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<aa>\\<^sub>S\\<^sub>S \n             | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<bb>\\<^sub>S\\<^sub>S \n             | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n         \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n  \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S}.\n            if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<aa>\\<^sub>S\\<^sub>S \n             | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<bb>\\<^sub>S\\<^sub>S \n             | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<aa>\\<^sub>S\\<^sub>S \n             | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<bb>\\<^sub>S\\<^sub>S \n             | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n         \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n            if gf =\n               [\\<aa>\\<^sub>S\\<^sub>S,\n                \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n                 \\<gg>\\<^sub>S\\<^sub>S \n             | gf =\n               [\\<bb>\\<^sub>S\\<^sub>S,\n                \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n                 \\<ff>\\<^sub>S\\<^sub>S \n             | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n         vid_on\n          (ZFC_in_HOL.set\n            {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n             \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>", "by auto"], ["", "subsubsection\\<open>Objects\\<close>"], ["", "lemma the_cat_scospan_Obj_\\<oo>I[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_scospan_Obj_\\<aa>I[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_scospan_Obj_\\<bb>I[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_scospan_ObjE:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"\n  obtains \\<open>a = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<bb>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                          \\<oo>\\<^sub>S\\<^sub>S}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "lemma the_cat_sspan_Obj_\\<oo>I[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_sspan_Obj_\\<aa>I[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_sspan_Obj_\\<bb>I[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_sspan_ObjE:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\"\n  obtains \\<open>a = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<bb>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                          \\<oo>\\<^sub>S\\<^sub>S}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "subsubsection\\<open>Arrows\\<close>"], ["", "lemma the_cat_scospan_Arr_\\<aa>I[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_scospan_Arr_\\<bb>I[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_scospan_Arr_\\<oo>I[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_scospan_Arr_\\<gg>I[cat_ss_cs_intros]:\n  assumes \"a = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_scospan_Arr_\\<ff>I[cat_ss_cs_intros]:\n  assumes \"a = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_scospan_ArrE:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"\n  obtains \\<open>f = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<bb>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<gg>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<ff>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                          \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                          \\<bb>\\<^sub>S\\<^sub>S}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "lemma the_cat_sspan_Arr_\\<aa>I[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_sspan_Arr_\\<bb>I[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_sspan_Arr_\\<oo>I[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_sspan_Arr_\\<gg>I[cat_ss_cs_intros]:\n  assumes \"a = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_sspan_Arr_\\<ff>I[cat_ss_cs_intros]:\n  assumes \"a = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                            \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                            \\<bb>\\<^sub>S\\<^sub>S}", "by simp"], ["", "lemma the_cat_sspan_ArrE:\n  assumes \"f \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\"\n  obtains \\<open>f = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<bb>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<gg>\\<^sub>S\\<^sub>S\\<close> | \\<open>f = \\<ff>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                          \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                          \\<bb>\\<^sub>S\\<^sub>S}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "subsubsection\\<open>Domain\\<close>"], ["", "mk_VLambda the_cat_scospan_components(3)\n  |vsv the_cat_scospan_Dom_vsv[cat_ss_cs_intros]|\n  |vdomain the_cat_scospan_Dom_vdomain[cat_ss_cs_simps]|"], ["", "lemma the_cat_scospan_Dom_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "by simp"], ["", "lemma the_cat_scospan_Dom_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "by simp"], ["", "lemma the_cat_scospan_Dom_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by auto"], ["", "lemma the_cat_scospan_Dom_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "by auto"], ["", "lemma the_cat_scospan_Dom_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "by auto"], ["", "mk_VLambda the_cat_sspan_components(3)\n  |vsv the_cat_sspan_Dom_vsv[cat_ss_cs_intros]|\n  |vdomain the_cat_sspan_Dom_vdomain[cat_ss_cs_simps]|"], ["", "lemma the_cat_sspan_Dom_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "by simp"], ["", "lemma the_cat_sspan_Dom_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "by simp"], ["", "lemma the_cat_sspan_Dom_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by auto"], ["", "lemma the_cat_sspan_Dom_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by auto"], ["", "lemma the_cat_sspan_Dom_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by auto"], ["", "subsubsection\\<open>Codomain\\<close>"], ["", "mk_VLambda the_cat_scospan_components(4)\n  |vsv the_cat_scospan_Cod_vsv[cat_ss_cs_intros]|\n  |vdomain the_cat_scospan_Cod_vdomain[cat_ss_cs_simps]|"], ["", "lemma the_cat_scospan_Cod_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "by simp"], ["", "lemma the_cat_scospan_Cod_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "by simp"], ["", "lemma the_cat_scospan_Cod_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by auto"], ["", "lemma the_cat_scospan_Cod_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by auto"], ["", "lemma the_cat_scospan_Cod_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "unfolding the_cat_scospan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by auto"], ["", "mk_VLambda the_cat_sspan_components(4)\n  |vsv the_cat_sspan_Cod_vsv[cat_ss_cs_intros]|\n  |vdomain the_cat_sspan_Cod_vdomain[cat_ss_cs_simps]|"], ["", "lemma the_cat_sspan_Cod_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "by simp"], ["", "lemma the_cat_sspan_Cod_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "by simp"], ["", "lemma the_cat_sspan_Cod_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by auto"], ["", "lemma the_cat_sspan_Cod_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "by auto"], ["", "lemma the_cat_sspan_Cod_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "unfolding the_cat_sspan_components assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {\\<aa>\\<^sub>S\\<^sub>S,\n                                    \\<gg>\\<^sub>S\\<^sub>S,\n                                    \\<oo>\\<^sub>S\\<^sub>S,\n                                    \\<ff>\\<^sub>S\\<^sub>S,\n                                    \\<bb>\\<^sub>S\\<^sub>S}.\n        if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n         | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S)\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "by auto"], ["", "subsubsection\\<open>Composition\\<close>"], ["", "mk_VLambda the_cat_scospan_components(5)\n  |vsv the_cat_scospan_Comp_vsv[cat_ss_cs_intros]|\n  |vdomain the_cat_scospan_Comp_vdomain[cat_ss_cs_simps]|"], ["", "lemma the_cat_scospan_Comp_app_\\<aa>\\<aa>[cat_ss_cs_simps]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "with assms"], ["proof (chain)\npicking this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_scospan_components(5)"], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    g &&&\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    f", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_scospan_Comp_app_\\<bb>\\<bb>[cat_ss_cs_simps]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "with assms"], ["proof (chain)\npicking this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_scospan_components(5)"], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    g &&&\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    f", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_scospan_Comp_app_\\<oo>\\<oo>[cat_ss_cs_simps]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "with assms"], ["proof (chain)\npicking this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_scospan_components(5)"], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    g &&&\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    f", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_scospan_Comp_app_\\<oo>\\<gg>[cat_ss_cs_simps]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<gg>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_scospan_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<oo>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<oo>\\<^sub>S\\<^sub>S,\n   \\<gg>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>\\<^sub>S\\<^sub>S", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_scospan_Comp_app_\\<oo>\\<ff>[cat_ss_cs_simps]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<ff>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_scospan_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<oo>\\<^sub>S\\<^sub>S,\n   \\<ff>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>\\<^sub>S\\<^sub>S", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_scospan_Comp_app_\\<gg>\\<aa>[cat_ss_cs_simps]:\n  assumes \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "from assms"], ["proof (chain)\npicking this:\n  g = \\<gg>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  g = \\<gg>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "unfolding the_cat_scospan_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<gg>\\<^sub>S\\<^sub>S, \\<aa>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<gg>\\<^sub>S\\<^sub>S,\n   \\<aa>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  [\\<gg>\\<^sub>S\\<^sub>S, \\<aa>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_scospan_composable\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<gg>\\<^sub>S\\<^sub>S,\n   \\<aa>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>\\<^sub>S\\<^sub>S", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_scospan_Comp_app_\\<ff>\\<bb>[cat_ss_cs_simps]:\n  assumes \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "from assms"], ["proof (chain)\npicking this:\n  g = \\<ff>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  g = \\<ff>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = g\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "unfolding the_cat_scospan_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<ff>\\<^sub>S\\<^sub>S,\n   \\<bb>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  [\\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_scospan_composable\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n        if gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<oo>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<ff>\\<^sub>S\\<^sub>S,\n   \\<bb>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>\\<^sub>S\\<^sub>S", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n\ngoal:\nNo subgoals!", "qed"], ["", "mk_VLambda the_cat_sspan_components(5)\n  |vsv the_cat_sspan_Comp_vsv[cat_ss_cs_intros]|\n  |vdomain the_cat_sspan_Comp_vdomain[cat_ss_cs_simps]|"], ["", "lemma the_cat_sspan_Comp_app_\\<aa>\\<aa>[cat_ss_cs_simps]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "with assms"], ["proof (chain)\npicking this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_sspan_components(5)"], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<aa>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    g &&&\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    f", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_sspan_Comp_app_\\<bb>\\<bb>[cat_ss_cs_simps]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "with assms"], ["proof (chain)\npicking this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_sspan_components(5)"], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<bb>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    g &&&\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    f", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_sspan_Comp_app_\\<oo>\\<oo>[cat_ss_cs_simps]:\n  assumes \"g = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (2 subgoals):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g\n 2. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "with assms"], ["proof (chain)\npicking this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\" \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g &&&\n    g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_sspan_components(5)"], ["proof (prove)\nusing this:\n  g = \\<oo>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    g &&&\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>g,\n   f\\<rparr>\\<^sub>\\<bullet> =\n    f", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_sspan_Comp_app_\\<aa>\\<gg>[cat_ss_cs_simps]:\n  assumes \"g = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<gg>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\nusing this:\n  g = \\<aa>\\<^sub>S\\<^sub>S\n  f = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_sspan_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<aa>\\<^sub>S\\<^sub>S,\n   \\<gg>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>\\<^sub>S\\<^sub>S", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_sspan_Comp_app_\\<bb>\\<ff>[cat_ss_cs_simps]:\n  assumes \"g = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "from assms"], ["proof (chain)\npicking this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<ff>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\nusing this:\n  g = \\<bb>\\<^sub>S\\<^sub>S\n  f = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "unfolding the_cat_sspan_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<bb>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<bb>\\<^sub>S\\<^sub>S,\n   \\<ff>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>\\<^sub>S\\<^sub>S", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_sspan_Comp_app_\\<gg>\\<oo>[cat_ss_cs_simps]:\n  assumes \"g = \\<gg>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "from assms"], ["proof (chain)\npicking this:\n  g = \\<gg>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\nusing this:\n  g = \\<gg>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "unfolding the_cat_sspan_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<gg>\\<^sub>S\\<^sub>S,\n   \\<oo>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  [\\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_sspan_composable\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<gg>\\<^sub>S\\<^sub>S,\n   \\<oo>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<gg>\\<^sub>S\\<^sub>S", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma the_cat_sspan_Comp_app_\\<ff>\\<oo>[cat_ss_cs_simps]:\n  assumes \"g = \\<ff>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "from assms"], ["proof (chain)\npicking this:\n  g = \\<ff>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (prove)\nusing this:\n  g = \\<ff>\\<^sub>S\\<^sub>S\n  f = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "by auto"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = g\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    g", "unfolding the_cat_sspan_components(5) assms"], ["proof (prove)\nusing this:\n  [\\<ff>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<ff>\\<^sub>S\\<^sub>S,\n   \\<oo>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>\\<^sub>S\\<^sub>S", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  [\\<ff>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_sspan_composable\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n        if gf =\n           [\\<aa>\\<^sub>S\\<^sub>S,\n            \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<gg>\\<^sub>S\\<^sub>S \n         | gf =\n           [\\<bb>\\<^sub>S\\<^sub>S,\n            \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n             \\<ff>\\<^sub>S\\<^sub>S \n         | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) \\<lparr>\\<ff>\\<^sub>S\\<^sub>S,\n   \\<oo>\\<^sub>S\\<^sub>S\\<rparr>\\<^sub>\\<bullet> =\n    \\<ff>\\<^sub>S\\<^sub>S", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  g\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Identity\\<close>"], ["", "mk_VLambda the_cat_scospan_components(6)[folded VLambda_vid_on]\n  |vsv the_cat_scospan_CId_vsv[cat_ss_cs_intros]|\n  |vdomain the_cat_scospan_CId_vdomain[cat_ss_cs_simps]|\n  |app the_cat_scospan_CId_app[cat_ss_cs_simps]|"], ["", "mk_VLambda the_cat_sspan_components(6)[folded VLambda_vid_on]\n  |vsv the_cat_sspan_CId_vsv[cat_ss_cs_intros]|\n  |vdomain the_cat_sspan_CId_vdomain[cat_ss_cs_simps]|\n  |app the_cat_sspan_CId_app[cat_ss_cs_simps]|"], ["", "subsubsection\\<open>Arrow with a domain and a codomain\\<close>"], ["", "lemma the_cat_scospan_is_arr_\\<aa>\\<aa>\\<aa>[cat_ss_cs_intros]:\n  assumes \"a' = \\<aa>\\<^sub>S\\<^sub>S\" and \"b' = \\<aa>\\<^sub>S\\<^sub>S\" and \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'", "proof(intro is_arrI, unfold assms)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<aa>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 2. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S\n 3. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "show \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\" \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S &&&\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S", "by (cs_concl cs_simp: cat_ss_cs_simps)+"], ["proof (state)\nthis:\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<aa>\\<^sub>S\\<^sub>S\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<aa>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_scospan_components)"], ["", "lemma the_cat_scospan_is_arr_\\<bb>\\<bb>\\<bb>[cat_ss_cs_intros]:\n  assumes \"a' = \\<bb>\\<^sub>S\\<^sub>S\" and \"b' = \\<bb>\\<^sub>S\\<^sub>S\" and \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'", "proof(intro is_arrI, unfold assms)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<bb>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 2. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S\n 3. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "show \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\" \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S &&&\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S", "by (cs_concl cs_simp: cat_ss_cs_simps)+"], ["proof (state)\nthis:\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<bb>\\<^sub>S\\<^sub>S\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<bb>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_scospan_components)"], ["", "lemma the_cat_scospan_is_arr_\\<oo>\\<oo>\\<oo>[cat_ss_cs_intros]:\n  assumes \"a' = \\<oo>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'", "proof(intro is_arrI, unfold assms)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<oo>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 2. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S\n 3. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "show \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\" \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S &&&\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by (cs_concl cs_simp: cat_ss_cs_simps)+"], ["proof (state)\nthis:\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<oo>\\<^sub>S\\<^sub>S\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<oo>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_scospan_components)"], ["", "lemma the_cat_scospan_is_arr_\\<aa>\\<oo>\\<gg>[cat_ss_cs_intros]:\n  assumes \"a' = \\<aa>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'", "proof(intro is_arrI, unfold assms)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<gg>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 2. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S\n 3. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "show \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> = \\<aa>\\<^sub>S\\<^sub>S\" \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<aa>\\<^sub>S\\<^sub>S &&&\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by (cs_concl cs_simp: cat_ss_cs_simps)+"], ["proof (state)\nthis:\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<aa>\\<^sub>S\\<^sub>S\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<gg>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<gg>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_scospan_components)"], ["", "lemma the_cat_scospan_is_arr_\\<bb>\\<oo>\\<ff>[cat_ss_cs_intros]:\n  assumes \"a' = \\<bb>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'", "proof(intro is_arrI, unfold assms)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<ff>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 2. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S\n 3. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "show \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> = \\<bb>\\<^sub>S\\<^sub>S\" \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<bb>\\<^sub>S\\<^sub>S &&&\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n    \\<oo>\\<^sub>S\\<^sub>S", "by (cs_concl cs_simp: cat_ss_cs_simps)+"], ["proof (state)\nthis:\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<bb>\\<^sub>S\\<^sub>S\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<ff>\\<^sub>S\\<^sub>S\\<rparr> =\n  \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<ff>\\<^sub>S\\<^sub>S\n    \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "qed (auto simp: the_cat_scospan_components)"], ["", "lemma the_cat_scospan_is_arrE:\n  assumes \"f' : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\"\n  obtains \"a' = \\<aa>\\<^sub>S\\<^sub>S\" and \"b' = \\<aa>\\<^sub>S\\<^sub>S\" and \"f' = \\<aa>\\<^sub>S\\<^sub>S\"\n        | \"a' = \\<bb>\\<^sub>S\\<^sub>S\" and \"b' = \\<bb>\\<^sub>S\\<^sub>S\" and \"f' = \\<bb>\\<^sub>S\\<^sub>S\"\n        | \"a' = \\<oo>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f' = \\<oo>\\<^sub>S\\<^sub>S\"\n        | \"a' = \\<aa>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f' = \\<gg>\\<^sub>S\\<^sub>S\"\n        | \"a' = \\<bb>\\<^sub>S\\<^sub>S\" and \"b' = \\<oo>\\<^sub>S\\<^sub>S\" and \"f' = \\<ff>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S;\n              b' = \\<aa>\\<^sub>S\\<^sub>S;\n              f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n      f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S;\n              b' = \\<aa>\\<^sub>S\\<^sub>S;\n              f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n      f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "note f = is_arrD[OF assms]"], ["proof (state)\nthis:\n  f' \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>f'\\<rparr> =\n  a'\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>f'\\<rparr> =\n  b'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S;\n              b' = \\<aa>\\<^sub>S\\<^sub>S;\n              f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n      f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "from f(1)"], ["proof (chain)\npicking this:\n  f' \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "consider (\\<aa>\\<^sub>S\\<^sub>S) \\<open>f' = \\<aa>\\<^sub>S\\<^sub>S\\<close> \n                   | (\\<bb>\\<^sub>S\\<^sub>S) \\<open>f' = \\<bb>\\<^sub>S\\<^sub>S\\<close> \n                   | (\\<oo>\\<^sub>S\\<^sub>S) \\<open>f' = \\<oo>\\<^sub>S\\<^sub>S\\<close> \n                   | (\\<gg>\\<^sub>S\\<^sub>S) \\<open>f' = \\<gg>\\<^sub>S\\<^sub>S\\<close> \n                   | (\\<ff>\\<^sub>S\\<^sub>S) \\<open>f' = \\<ff>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\nusing this:\n  f' \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f' = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (elim the_cat_scospan_ArrE)"], ["proof (state)\nthis:\n  \\<lbrakk>f' = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S;\n              b' = \\<aa>\\<^sub>S\\<^sub>S;\n              f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n      f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n      f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>f' = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>f' = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "proof cases"], ["proof (state)\ngoal (5 subgoals):\n 1. f' = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 5. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "case \\<aa>\\<^sub>S\\<^sub>S"], ["proof (state)\nthis:\n  f' = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (5 subgoals):\n 1. f' = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 5. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (5 subgoals):\n 1. f' = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 5. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "from f(2,3)[unfolded \\<aa>\\<^sub>S\\<^sub>S, symmetric]"], ["proof (chain)\npicking this:\n  a' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr>\n  b' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr>", "have \"a' = \\<aa>\\<^sub>S\\<^sub>S\" \"b' = \\<aa>\\<^sub>S\\<^sub>S\""], ["proof (prove)\nusing this:\n  a' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr>\n  b' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<aa>\\<^sub>S\\<^sub>S\\<rparr>\n\ngoal (1 subgoal):\n 1. a' = \\<aa>\\<^sub>S\\<^sub>S &&& b' = \\<aa>\\<^sub>S\\<^sub>S", "by (simp_all add: cat_ss_cs_simps)"], ["proof (state)\nthis:\n  a' = \\<aa>\\<^sub>S\\<^sub>S\n  b' = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (5 subgoals):\n 1. f' = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 5. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<aa>\\<^sub>S\\<^sub>S\n  a' = \\<aa>\\<^sub>S\\<^sub>S\n  b' = \\<aa>\\<^sub>S\\<^sub>S", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<aa>\\<^sub>S\\<^sub>S\n  a' = \\<aa>\\<^sub>S\\<^sub>S\n  b' = \\<aa>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<aa>\\<^sub>S\\<^sub>S\n  a' = \\<aa>\\<^sub>S\\<^sub>S\n  b' = \\<aa>\\<^sub>S\\<^sub>S\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<aa>\\<^sub>S\\<^sub>S;\n   f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n   f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (4 subgoals):\n 1. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "case \\<bb>\\<^sub>S\\<^sub>S"], ["proof (state)\nthis:\n  f' = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (4 subgoals):\n 1. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (4 subgoals):\n 1. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "from f(2,3)[unfolded \\<bb>\\<^sub>S\\<^sub>S, symmetric]"], ["proof (chain)\npicking this:\n  a' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr>\n  b' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr>", "have \"a' = \\<bb>\\<^sub>S\\<^sub>S\" \"b' = \\<bb>\\<^sub>S\\<^sub>S\""], ["proof (prove)\nusing this:\n  a' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr>\n  b' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<bb>\\<^sub>S\\<^sub>S\\<rparr>\n\ngoal (1 subgoal):\n 1. a' = \\<bb>\\<^sub>S\\<^sub>S &&& b' = \\<bb>\\<^sub>S\\<^sub>S", "by (simp_all add: cat_ss_cs_simps)"], ["proof (state)\nthis:\n  a' = \\<bb>\\<^sub>S\\<^sub>S\n  b' = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (4 subgoals):\n 1. f' = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 4. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<bb>\\<^sub>S\\<^sub>S\n  a' = \\<bb>\\<^sub>S\\<^sub>S\n  b' = \\<bb>\\<^sub>S\\<^sub>S", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<bb>\\<^sub>S\\<^sub>S\n  a' = \\<bb>\\<^sub>S\\<^sub>S\n  b' = \\<bb>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<bb>\\<^sub>S\\<^sub>S\n  a' = \\<bb>\\<^sub>S\\<^sub>S\n  b' = \\<bb>\\<^sub>S\\<^sub>S\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<aa>\\<^sub>S\\<^sub>S;\n   f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n   f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (3 subgoals):\n 1. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "case \\<oo>\\<^sub>S\\<^sub>S"], ["proof (state)\nthis:\n  f' = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (3 subgoals):\n 1. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (3 subgoals):\n 1. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "from f(2,3)[unfolded \\<oo>\\<^sub>S\\<^sub>S, symmetric]"], ["proof (chain)\npicking this:\n  a' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr>\n  b' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr>", "have \"a' = \\<oo>\\<^sub>S\\<^sub>S\" \"b' = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\nusing this:\n  a' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr>\n  b' =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\\<lparr>\\<oo>\\<^sub>S\\<^sub>S\\<rparr>\n\ngoal (1 subgoal):\n 1. a' = \\<oo>\\<^sub>S\\<^sub>S &&& b' = \\<oo>\\<^sub>S\\<^sub>S", "by (simp_all add: cat_ss_cs_simps)"], ["proof (state)\nthis:\n  a' = \\<oo>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (3 subgoals):\n 1. f' = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 3. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<oo>\\<^sub>S\\<^sub>S\n  a' = \\<oo>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<oo>\\<^sub>S\\<^sub>S\n  a' = \\<oo>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<oo>\\<^sub>S\\<^sub>S\n  a' = \\<oo>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<aa>\\<^sub>S\\<^sub>S;\n   f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n   f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (2 subgoals):\n 1. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "case \\<gg>\\<^sub>S\\<^sub>S"], ["proof (state)\nthis:\n  f' = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (2 subgoals):\n 1. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<gg>\\<^sub>S\\<^sub>S\n\ngoal (2 subgoals):\n 1. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "have \"a' = \\<aa>\\<^sub>S\\<^sub>S\" \"b' = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' = \\<aa>\\<^sub>S\\<^sub>S &&& b' = \\<oo>\\<^sub>S\\<^sub>S", "by (simp_all add: f(2,3)[unfolded \\<gg>\\<^sub>S\\<^sub>S, symmetric] cat_ss_cs_simps)"], ["proof (state)\nthis:\n  a' = \\<aa>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (2 subgoals):\n 1. f' = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\n 2. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<gg>\\<^sub>S\\<^sub>S\n  a' = \\<aa>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<gg>\\<^sub>S\\<^sub>S\n  a' = \\<aa>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<gg>\\<^sub>S\\<^sub>S\n  a' = \\<aa>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<aa>\\<^sub>S\\<^sub>S;\n   f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n   f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "case \\<ff>\\<^sub>S\\<^sub>S"], ["proof (state)\nthis:\n  f' = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  f' = \\<ff>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "have \"a' = \\<bb>\\<^sub>S\\<^sub>S\" \"b' = \\<oo>\\<^sub>S\\<^sub>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' = \\<bb>\\<^sub>S\\<^sub>S &&& b' = \\<oo>\\<^sub>S\\<^sub>S", "by (simp_all add: f(2,3)[unfolded \\<ff>\\<^sub>S\\<^sub>S, symmetric] cat_ss_cs_simps)"], ["proof (state)\nthis:\n  a' = \\<bb>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. f' = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  f' = \\<ff>\\<^sub>S\\<^sub>S\n  a' = \\<bb>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S", "show ?thesis"], ["proof (prove)\nusing this:\n  f' = \\<ff>\\<^sub>S\\<^sub>S\n  a' = \\<bb>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f' = \\<ff>\\<^sub>S\\<^sub>S\n  a' = \\<bb>\\<^sub>S\\<^sub>S\n  b' = \\<oo>\\<^sub>S\\<^sub>S\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<aa>\\<^sub>S\\<^sub>S;\n   f' = \\<aa>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<bb>\\<^sub>S\\<^sub>S;\n   f' = \\<bb>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<oo>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<oo>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<aa>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<gg>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>a' = \\<bb>\\<^sub>S\\<^sub>S; b' = \\<oo>\\<^sub>S\\<^sub>S;\n   f' = \\<ff>\\<^sub>S\\<^sub>S\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>\\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> is a finite category\\<close>"], ["", "lemma (in \\<Z>) finite_category_the_cat_scospan[cat_ss_cs_intros]:\n  \"finite_category \\<alpha> (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "proof(intro finite_categoryI'' tiny_categoryI'')"], ["proof (state)\ngoal (22 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 3. vcard \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C = 6\\<^sub>\\<nat>\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 6. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 7. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\nA total of 22 subgoals...", "show \"vfsequence (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "unfolding the_cat_scospan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n         if gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n\ngoal (21 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vcard \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C = 6\\<^sub>\\<nat>\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 6. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<R>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 10. \\<R>\\<^sub>\\<circ>\n      (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\nA total of 21 subgoals...", "show \"vcard (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C = 6\\<^sub>\\<nat>", "unfolding the_cat_scospan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_scospan_composable.\n         if gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<oo>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp_all add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C = 6\\<^sub>\\<nat>\n\ngoal (20 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 10. \\<And>gf.\n        (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                 (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)) =\n        (\\<exists>g f b c a.\n            gf = [g, f]\\<^sub>\\<circ> \\<and>\n            g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n            f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b)\nA total of 20 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "by (auto simp: the_cat_scospan_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (19 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<R>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 9. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b)\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>) =\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\nA total of 19 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "by (auto simp: the_cat_scospan_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (18 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b)\n 9. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 10. \\<And>b c g a f.\n        \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                          f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\nA total of 18 subgoals...", "show \"(gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b)\"\n    for gf"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                             (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b)", "unfolding the_cat_scospan_Comp_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> cat_scospan_composable) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> cat_scospan_composable \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "assume prems: \"gf \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> cat_scospan_composable \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "obtain g f where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. (\\<And>g f.\n        gf = [g, f]\\<^sub>\\<circ> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> cat_scospan_composable \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n 2. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "from prems"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \n      \"\\<exists>g f b c a. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and> f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b", "unfolding gf_def"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. \\<exists>ga fa b c a.\n       [g, f]\\<^sub>\\<circ> = [ga, fa]\\<^sub>\\<circ> \\<and>\n       ga : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       fa : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b", "by (*slow*)\n        (\n          cases rule: cat_scospan_composableE; \n          (intro exI conjI)?; \n          cs_concl_step?;\n          (simp only:)?,\n          all\\<open>intro is_arrI, unfold the_cat_scospan_components(2)\\<close>\n        )\n        (cs_concl cs_simp: cat_ss_cs_simps V_cs_simps cs_intro: V_cs_intros)+"], ["proof (state)\nthis:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "assume prems: \n      \"\\<exists>g f b' c' a'. gf = [g, f]\\<^sub>\\<circ> \\<and> g : b' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c' \\<and> f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\""], ["proof (state)\nthis:\n  \\<exists>g f b' c' a'.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c' \\<and>\n     f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "then"], ["proof (chain)\npicking this:\n  \\<exists>g f b' c' a'.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c' \\<and>\n     f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'", "obtain g f b c a\n      where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\"\n        and g: \"g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\"\n        and f: \"f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\""], ["proof (prove)\nusing this:\n  \\<exists>g f b' c' a'.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c' \\<and>\n     f : a' \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b'\n\ngoal (1 subgoal):\n 1. (\\<And>g f b c a.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n    gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "from g f"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b", "show \"gf \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> cat_scospan_composable", "unfolding gf_def"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by (elim the_cat_scospan_is_arrE) (auto simp: cat_ss_cs_intros)"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?gf\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b)\n\ngoal (17 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n 10. \\<And>c d h b g a f.\n        \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> d;\n         g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                          g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                          f =\n                          h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                          (g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                           f)\nA total of 17 subgoals...", "show \"\\<D>\\<^sub>\\<circ> (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>) = \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "by (simp add: cat_ss_cs_simps the_cat_scospan_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>) =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (16 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n 9. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                          f)\n 10. \\<And>a.\n        a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> a\nA total of 16 subgoals...", "show \"g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\"\n    if \"g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\" for b c g a f"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c", "using that"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c", "by (elim the_cat_scospan_is_arrE; simp only:)\n      (\n        all\\<open>\n          solves\\<open>simp add: cat_ss_ineq cat_ss_ineq[symmetric]\\<close> |\n          cs_concl cs_simp: cat_ss_cs_simps cs_intro: cat_ss_cs_intros\n        \\<close>\n      )"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                    ?f : ?a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?c\n\ngoal (15 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                          f)\n 9. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> a\n 10. \\<And>a b f.\n        f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n        \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n        f =\n        f\nA total of 15 subgoals...", "show \"h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f)\"\n    if \"h : c \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> d\" and \"g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\"\n    for c d h b g a f"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n     f)", "using that"], ["proof (prove)\nusing this:\n  h : c \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n     f)", "by (elim the_cat_scospan_is_arrE; simp only:) (*slow*)\n      (\n        all\\<open>\n          solves\\<open>simp only: cat_ss_ineq cat_ss_ineq[symmetric]\\<close> | \n          cs_concl cs_simp: cat_ss_cs_simps cs_intro: cat_ss_cs_intros\n          \\<close>\n      )"], ["proof (state)\nthis:\n  \\<lbrakk>?h : ?c \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?d;\n   ?g : ?b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                    ?g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                    ?f =\n                    ?h \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                    (?g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                     ?f)\n\ngoal (14 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> a\n 9. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n       \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n       f =\n       f\n 10. \\<And>b c f.\n        f : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<Longrightarrow>\n        f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n        \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n        f\nA total of 14 subgoals...", "show \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> a\" if \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> a", "using that"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> a", "by (elim the_cat_scospan_ObjE) \n      (\n        all\\<open>\n          cs_concl\n            cs_simp: V_cs_simps cat_ss_cs_simps\n            cs_intro: V_cs_intros cat_ss_cs_intros\n        \\<close>\n      )"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> : ?a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?a\n\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b \\<Longrightarrow>\n       \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n       \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f\n 10. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n     \\<in>\\<^sub>\\<circ> Vset \\<alpha>\nA total of 13 subgoals...", "show \"\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f = f\" if \"f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\" for a b f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "using that"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    f =\n    f", "by (elim the_cat_scospan_is_arrE) (*slow*)\n      (\n        cs_concl \n          cs_simp: V_cs_simps cat_ss_cs_simps \n          cs_intro: V_cs_intros cat_ss_cs_intros\n      )+"], ["proof (state)\nthis:\n  ?f : ?a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?b \\<Longrightarrow>\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>?b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  ?f =\n  ?f\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n       \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f\n 9. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 10. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n     \\<in>\\<^sub>\\<circ> Vset \\<alpha>\nA total of 12 subgoals...", "show \"f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> = f\" if \"f : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\" for b c f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n    f", "using that"], ["proof (prove)\nusing this:\n  f : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n    f", "by (elim the_cat_scospan_is_arrE)\n      (\n        cs_concl\n          cs_simp: V_cs_simps cat_ss_cs_simps \n          cs_intro: V_cs_intros cat_ss_cs_intros\n      )+"], ["proof (state)\nthis:\n  ?f : ?b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?c \\<Longrightarrow>\n  ?f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>?b\\<rparr> =\n  ?f\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>)\n 3. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>)\n 4. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 5. vsv (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ>\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 8. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 9. \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 10. vfinite (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>)\nA total of 11 subgoals...", "qed \n  (\n    cs_concl\n      cs_simp: V_cs_simps cat_ss_cs_simps the_cat_scospan_components(1,2) \n      cs_intro: cat_cs_intros cat_ss_cs_intros V_cs_intros \n  )+"], ["", "lemmas [cat_ss_cs_intros] = \\<Z>.finite_category_the_cat_scospan"], ["", "subsubsection\\<open>Duality for \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> and \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close>\\<close>"], ["", "lemma the_cat_scospan_op[cat_op_simps]: \"op_cat (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C) = \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (op_cat (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C) =\n    6\\<^sub>\\<nat>", "unfolding op_cat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>,\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>,\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>,\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>,\n      fflip\n       (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>),\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C) =\n  6\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    6\\<^sub>\\<nat>", "unfolding the_cat_sspan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n        \\<oo>\\<^sub>S\\<^sub>S},\n      ZFC_in_HOL.set\n       {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S, \\<oo>\\<^sub>S\\<^sub>S,\n        \\<ff>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S},\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>x\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {\\<aa>\\<^sub>S\\<^sub>S,\n                                     \\<gg>\\<^sub>S\\<^sub>S,\n                                     \\<oo>\\<^sub>S\\<^sub>S,\n                                     \\<ff>\\<^sub>S\\<^sub>S,\n                                     \\<bb>\\<^sub>S\\<^sub>S}.\n         if x = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | x = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\\<^sub>S\\<^sub>S \n          | x = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> \\<oo>\\<^sub>S\\<^sub>S,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>cat_sspan_composable.\n         if gf =\n            [\\<aa>\\<^sub>S\\<^sub>S,\n             \\<gg>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<gg>\\<^sub>S\\<^sub>S \n          | gf =\n            [\\<bb>\\<^sub>S\\<^sub>S,\n             \\<ff>\\<^sub>S\\<^sub>S]\\<^sub>\\<circ> \\<Rightarrow>\n              \\<ff>\\<^sub>S\\<^sub>S \n          | otherwise \\<Rightarrow> gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      vid_on\n       (ZFC_in_HOL.set\n         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n          \\<oo>\\<^sub>S\\<^sub>S})]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n  6\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\n 2. vsv \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\n 3. 6\\<^sub>\\<nat> = 6\\<^sub>\\<nat>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 6\\<^sub>\\<nat> \\<Longrightarrow>\n       op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>a\\<rparr> =\n       \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> 6\\<^sub>\\<nat> \\<Longrightarrow> op_cat (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\\<lparr>a\\<rparr> = \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>a\\<rparr>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> 6\\<^sub>\\<nat> \\<Longrightarrow>\n    op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>a\\<rparr> =\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>a\\<rparr>", "proof\n      (\n        elim_in_numeral,\n        fold dg_field_simps,\n        unfold op_cat_components;\n        rule sym\n      )"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 2. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 3. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\n 4. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\n 5. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n    fflip (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 6. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>CId\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>", "show \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr> = fflip (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n    fflip (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)", "proof(rule vsv_eqI, unfold cat_ss_cs_simps vdomain_fflip)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 2. vsv (fflip\n          (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>))\n 3. cat_sspan_composable = cat_sspan_composable\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_sspan_composable \\<Longrightarrow>\n       \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       fflip\n        (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>a\\<rparr>", "fix gf"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 2. vsv (fflip\n          (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>))\n 3. cat_sspan_composable = cat_sspan_composable\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_sspan_composable \\<Longrightarrow>\n       \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       fflip\n        (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>a\\<rparr>", "assume prems: \"gf \\<in>\\<^sub>\\<circ> cat_sspan_composable\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (4 subgoals):\n 1. vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 2. vsv (fflip\n          (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>))\n 3. cat_sspan_composable = cat_sspan_composable\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_sspan_composable \\<Longrightarrow>\n       \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       fflip\n        (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> cat_sspan_composable", "obtain g f where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. (\\<And>g f.\n        gf = [g, f]\\<^sub>\\<circ> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n\ngoal (4 subgoals):\n 1. vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 2. vsv (fflip\n          (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>))\n 3. cat_sspan_composable = cat_sspan_composable\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_sspan_composable \\<Longrightarrow>\n       \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       fflip\n        (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>a\\<rparr>", "from prems"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> cat_sspan_composable", "have fg: \"[f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. [f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "unfolding gf_def"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_sspan_composable\n\ngoal (1 subgoal):\n 1. [f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "by auto"], ["proof (state)\nthis:\n  [f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (4 subgoals):\n 1. vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 2. vsv (fflip\n          (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>))\n 3. cat_sspan_composable = cat_sspan_composable\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_sspan_composable \\<Longrightarrow>\n       \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       fflip\n        (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>a\\<rparr>", "have [cat_ss_cs_simps]: \"g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub> f = f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> g\"\n          if \"[f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    g", "using that"], ["proof (prove)\nusing this:\n  [f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n    g", "by (elim cat_scospan_composableE; simp only:)\n            (cs_concl cs_simp: cat_ss_cs_simps cs_intro: cat_ss_cs_intros)+"], ["proof (state)\nthis:\n  [f, g]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> cat_scospan_composable \\<Longrightarrow>\n  g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n  f =\n  f \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n  g\n\ngoal (4 subgoals):\n 1. vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 2. vsv (fflip\n          (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>))\n 3. cat_sspan_composable = cat_sspan_composable\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_sspan_composable \\<Longrightarrow>\n       \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>a\\<rparr> =\n       fflip\n        (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>a\\<rparr>", "from fg"], ["proof (chain)\npicking this:\n  [f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable", "show \n          \"\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr> = fflip (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>gf\\<rparr>\""], ["proof (prove)\nusing this:\n  [f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr> =\n    fflip\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>gf\\<rparr>", "unfolding gf_def"], ["proof (prove)\nusing this:\n  [f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> cat_scospan_composable\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<^esub>\n    f =\n    fflip\n     (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>) \\<lparr>g,\n  f\\<rparr>\\<^sub>\\<bullet>", "by (cs_concl cs_simp: cat_ss_cs_simps fflip_app)"], ["proof (state)\nthis:\n  \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>\\<lparr>gf\\<rparr> =\n  fflip\n   (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\\<lparr>gf\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n 2. vsv (fflip\n          (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>))\n 3. cat_sspan_composable = cat_sspan_composable", "qed (auto intro: fflip_vsv cat_ss_cs_intros)"], ["proof (state)\nthis:\n  \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Comp\\<rparr> =\n  fflip (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Comp\\<rparr>)\n\ngoal (5 subgoals):\n 1. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 2. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n 3. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Dom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Cod\\<rparr>\n 4. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Cod\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Dom\\<rparr>\n 5. \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>CId\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>", "qed (unfold the_cat_sspan_components the_cat_scospan_components, simp_all)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> 6\\<^sub>\\<nat> \\<Longrightarrow>\n  op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>?a\\<rparr> =\n  \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>?a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\n 2. vsv \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\n 3. 6\\<^sub>\\<nat> = 6\\<^sub>\\<nat>", "qed (auto intro: cat_op_intros cat_ss_cs_intros)"], ["proof (state)\nthis:\n  op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n  \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) the_cat_sspan_op[cat_op_simps]: \"op_cat (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C) = \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "interpret scospan: finite_category \\<alpha> \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "by (rule finite_category_the_cat_scospan)"], ["proof (state)\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "interpret sspan: finite_category \\<alpha> \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "by (rule scospan.finite_category_op[unfolded cat_op_simps])"], ["proof (state)\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "from the_cat_scospan_op"], ["proof (chain)\npicking this:\n  op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n  \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "have \"op_cat (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C) = op_cat (op_cat (\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C))\""], ["proof (prove)\nusing this:\n  op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C =\n  \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\n\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    op_cat (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)", "by simp"], ["proof (state)\nthis:\n  op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n  op_cat (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\n\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "also"], ["proof (state)\nthis:\n  op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n  op_cat (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C)\n\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "have \"\\<dots> = \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "by (cs_concl cs_simp: cat_op_simps)"], ["proof (state)\nthis:\n  op_cat (op_cat \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C) =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "finally"], ["proof (chain)\npicking this:\n  op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "show ?thesis"], ["proof (prove)\nusing this:\n  op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n\ngoal (1 subgoal):\n 1. op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "by auto"], ["proof (state)\nthis:\n  op_cat \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C =\n  \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_op_simps] = \\<Z>.the_cat_sspan_op"], ["", "subsubsection\\<open>\\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close> is a finite category\\<close>"], ["", "lemma (in \\<Z>) finite_category_the_cat_sspan[cat_ss_cs_intros]:\n  \"finite_category \\<alpha> (\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "interpret scospan: finite_category \\<alpha> \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C", "by (rule finite_category_the_cat_scospan)"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C", "by (rule scospan.finite_category_op[unfolded cat_op_simps])"], ["proof (state)\nthis:\n  finite_category \\<alpha> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Local assumptions for functors from \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> and \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close>\\<close>"], ["", "text\\<open>\nThe functors from \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> and \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close> are introduced as\nconvenient abstractions for the definition of the \npullbacks and the pushouts (e.g., see Chapter III-3 and \nChapter III-4 in \\cite{mac_lane_categories_2010}).\n\\<close>"], ["", "subsubsection\\<open>Definitions and elementary properties\\<close>"], ["", "locale cf_scospan = category \\<alpha> \\<CC> for \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> \\<CC> +\n  assumes cf_scospan_\\<gg>[cat_ss_cs_intros]: \"\\<gg> : \\<aa> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>\"\n    and cf_scospan_\\<ff>[cat_ss_cs_intros]: \"\\<ff> : \\<bb> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>\""], ["", "lemma (in cf_scospan) cf_scospan_\\<gg>'[cat_ss_cs_intros]:\n  assumes \"a = \\<aa>\" and \"b = \\<oo>\"\n  shows \"\\<gg> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> : \\<aa> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>", "by (rule cf_scospan_\\<gg>)"], ["", "lemma (in cf_scospan) cf_scospan_\\<gg>''[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\" and \"b = \\<oo>\"\n  shows \"g : \\<aa> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : \\<aa> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> : \\<aa> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>", "by (rule cf_scospan_\\<gg>)"], ["", "lemma (in cf_scospan) cf_scospan_\\<gg>'''[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\" and \"a = \\<aa>\"\n  shows \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> : \\<aa> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>", "by (rule cf_scospan_\\<gg>)"], ["", "lemma (in cf_scospan) cf_scospan_\\<ff>'[cat_ss_cs_intros]:\n  assumes \"a = \\<bb>\" and \"b = \\<oo>\"\n  shows \"\\<ff> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff> : \\<bb> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>", "by (rule cf_scospan_\\<ff>)"], ["", "lemma (in cf_scospan) cf_scospan_\\<ff>''[cat_ss_cs_intros]:\n  assumes \"f = \\<ff>\" and \"b = \\<oo>\"\n  shows \"f : \\<bb> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : \\<bb> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff> : \\<bb> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>", "by (rule cf_scospan_\\<ff>)"], ["", "lemma (in cf_scospan) cf_scospan_\\<ff>'''[cat_ss_cs_intros]:\n  assumes \"g = \\<ff>\" and \"b = \\<bb>\"\n  shows \"g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff> : \\<bb> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<oo>", "by (rule cf_scospan_\\<ff>)"], ["", "locale cf_sspan = category \\<alpha> \\<CC> for \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> and \\<CC> +\n  assumes cf_sspan_\\<gg>[cat_ss_cs_intros]: \"\\<gg> : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<aa>\"\n    and cf_sspan_\\<ff>[cat_ss_cs_intros]: \"\\<ff> : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>\""], ["", "lemma (in cf_sspan) cf_sspan_\\<gg>'[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\" and \"b = \\<aa>\"\n  shows \"\\<gg> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<aa>", "by (rule cf_sspan_\\<gg>)"], ["", "lemma (in cf_sspan) cf_sspan_\\<gg>''[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\" and \"a = \\<aa>\"\n  shows \"g : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<aa>", "by (rule cf_sspan_\\<gg>)"], ["", "lemma (in cf_sspan) cf_sspan_\\<gg>'''[cat_ss_cs_intros]:\n  assumes \"g = \\<gg>\" and \"a = \\<oo>\"\n  shows \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<aa>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<aa>", "by (rule cf_sspan_\\<gg>)"], ["", "lemma (in cf_sspan) cf_sspan_\\<ff>'[cat_ss_cs_intros]:\n  assumes \"a = \\<oo>\" and \"b = \\<bb>\"\n  shows \"\\<ff> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff> : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff> : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>", "by (rule cf_sspan_\\<ff>)"], ["", "lemma (in cf_sspan) cf_sspan_\\<ff>''[cat_ss_cs_intros]:\n  assumes \"f = \\<ff>\" and \"b = \\<bb>\"\n  shows \"f : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff> : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>", "by (rule cf_sspan_\\<ff>)"], ["", "lemma (in cf_sspan) cf_sspan_\\<ff>'''[cat_ss_cs_intros]:\n  assumes \"f = \\<ff>\" and \"b = \\<oo>\"\n  shows \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ff> : \\<oo> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<bb>", "by (rule cf_sspan_\\<ff>)"], ["", "text\\<open>Rules.\\<close>"], ["", "lemmas (in cf_scospan) [cat_ss_cs_intros] = cf_scospan_axioms"], ["", "mk_ide rf cf_scospan_def[unfolded cf_scospan_axioms_def]\n  |intro cf_scospanI|\n  |dest cf_scospanD[dest]|\n  |elim cf_scospanE[elim]|"], ["", "lemmas [cat_ss_cs_intros] = cf_scospanD(1)"], ["", "lemmas (in cf_sspan) [cat_ss_cs_intros] = cf_sspan_axioms"], ["", "mk_ide rf cf_sspan_def[unfolded cf_sspan_axioms_def]\n  |intro cf_sspanI|\n  |dest cf_sspanD[dest]|\n  |elim cf_sspanE[elim]|"], ["", "text\\<open>Duality.\\<close>"], ["", "lemma (in cf_scospan) cf_sspan_op[cat_op_intros]: \n  \"cf_sspan \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> (op_cat \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_sspan \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> (op_cat \\<CC>)", "by (intro cf_sspanI, unfold cat_op_simps)\n    (cs_concl cs_intro: cat_cs_intros cat_op_intros cat_ss_cs_intros)+"], ["", "lemmas [cat_op_intros] = cf_scospan.cf_sspan_op"], ["", "lemma (in cf_sspan) cf_scospan_op[cat_op_intros]: \n  \"cf_scospan \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> (op_cat \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_scospan \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> (op_cat \\<CC>)", "by (intro cf_scospanI, unfold cat_op_simps)\n    (cs_concl cs_intro: cat_cs_intros cat_op_intros cat_ss_cs_intros)+"], ["", "lemmas [cat_op_intros] = cf_sspan.cf_scospan_op"], ["", "subsection\\<open>Functors from \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> and \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close>\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition the_cf_scospan :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" \n  (\\<open>\\<langle>_\\<rightarrow>_\\<rightarrow>_\\<leftarrow>_\\<leftarrow>_\\<rangle>\\<^sub>C\\<^sub>F\\<index>\\<close> [51, 51, 51, 51, 51] 999)\n  where \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> =\n    [\n      (\n        \\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\n          | otherwise \\<Rightarrow> \\<oo>\n      ),\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg>\n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\n      ),\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C,\n      \\<CC>\n    ]\\<^sub>\\<circ>\""], ["", "definition the_cf_sspan :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" \n  (\\<open>\\<langle>_\\<leftarrow>_\\<leftarrow>_\\<rightarrow>_\\<rightarrow>_\\<rangle>\\<^sub>C\\<^sub>F\\<index>\\<close> [51, 51, 51, 51, 51] 999)\n  where \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> =\n    [\n      (\n        \\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\n          | otherwise \\<Rightarrow> \\<oo>\n      ),\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg>\n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\n      ),\n      \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C,\n      \\<CC>\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma the_cf_scospan_components:\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr> =\n    (\n      \\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n       if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\n        | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\n        | otherwise \\<Rightarrow> \\<oo>\n    )\"\n    and \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg>\n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\n      )\"\n    and [cat_ss_cs_simps]: \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> = \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\"\n    and [cat_ss_cs_simps]: \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> = \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>) &&&\n     \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>)) &&&\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C &&&\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> =\n    \\<CC>", "unfolding the_cf_scospan_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>) &&&\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>)) &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n        if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n         | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<oo>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n        if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n         | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n         | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n         | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C,\n     \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n        if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n         | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<oo>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n        if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n         | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n         | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n         | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C,\n     \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<CC>", "by (simp_all add: nat_omega_simps)"], ["", "lemma the_cf_sspan_components:\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr> =\n    (\n      \\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n       if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa>\n        | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb>\n        | otherwise \\<Rightarrow> \\<oo>\n    )\"\n    and \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg>\n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff>\n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\n      )\"\n    and [cat_ss_cs_simps]: \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> = \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\"\n    and [cat_ss_cs_simps]: \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> = \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>) &&&\n     \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>)) &&&\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> =\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C &&&\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> =\n    \\<CC>", "unfolding the_cf_sspan_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n      \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>) &&&\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n      \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C,\n      \\<CC>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>)) &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n        if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n         | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<oo>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n        if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n         | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n         | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n         | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n     \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C,\n     \\<CC>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n        if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n         | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n         | otherwise \\<Rightarrow> \\<oo>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n        if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n         | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n             \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n         | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n         | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n         | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n     \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C,\n     \\<CC>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<CC>", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Elementary properties.\\<close>"], ["", "lemma the_cf_scospan_components_vsv[cat_ss_cs_intros]: \"vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)", "unfolding the_cf_scospan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n            if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n             | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n             | otherwise \\<Rightarrow> \\<oo>,\n         \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n            if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n             | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n             | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n             | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n             | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n         \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C, \\<CC>]\\<^sub>\\<circ>", "by auto"], ["", "lemma the_cf_sspan_components_vsv[cat_ss_cs_intros]: \"vsv (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)", "unfolding the_cf_sspan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n            if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n             | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n             | otherwise \\<Rightarrow> \\<oo>,\n         \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n            if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n             | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n                 \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n             | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n             | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n             | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n         \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C, \\<CC>]\\<^sub>\\<circ>", "by auto"], ["", "subsubsection\\<open>Object map.\\<close>"], ["", "mk_VLambda the_cf_scospan_components(1)\n  |vsv the_cf_scospan_ObjMap_vsv[cat_ss_cs_intros]|\n  |vdomain the_cf_scospan_ObjMap_vdomain[cat_ss_cs_simps]|\n  |app the_cf_scospan_ObjMap_app|"], ["", "lemma the_cf_scospan_ObjMap_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"x = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<aa>", "by \n    (\n      cs_concl \n        cs_simp: the_cf_scospan_ObjMap_app V_cs_simps assms\n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_scospan) the_cf_scospan_ObjMap_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"x = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<bb>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<bb>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_scospan_ObjMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_scospan) the_cf_scospan_ObjMap_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"x = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<oo>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<oo>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<oo>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_scospan_ObjMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_scospan) the_cf_scospan_ObjMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "proof\n  (\n    intro vsv.vsv_vrange_vsubset, \n    unfold the_cf_scospan_ObjMap_vdomain, \n    intro the_cf_scospan_ObjMap_vsv\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "consider \\<open>a = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<bb>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<oo>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                          \\<oo>\\<^sub>S\\<^sub>S}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by cases \n      (\n        cs_concl\n          cs_simp: cat_ss_cs_simps cs_intro: cat_cs_intros cat_ss_cs_intros\n      )+"], ["proof (state)\nthis:\n  \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "mk_VLambda the_cf_sspan_components(1)\n  |vsv the_cf_sspan_ObjMap_vsv[cat_ss_cs_intros]|\n  |vdomain the_cf_sspan_ObjMap_vdomain[cat_ss_cs_simps]|\n  |app the_cf_sspan_ObjMap_app|"], ["", "lemma the_cf_sspan_ObjMap_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"x = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<aa>", "by \n    (\n      cs_concl \n        cs_simp: the_cf_sspan_ObjMap_app V_cs_simps assms\n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_sspan) the_cf_sspan_ObjMap_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"x = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<bb>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<bb>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_sspan_ObjMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_sspan) the_cf_sspan_ObjMap_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"x = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> = \\<oo>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<oo>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr> =\n    \\<oo>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_sspan_ObjMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_sspan) the_cf_sspan_ObjMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "proof\n  (\n    intro vsv.vsv_vrange_vsubset, \n    unfold the_cf_sspan_ObjMap_vdomain, \n    intro the_cf_sspan_ObjMap_vsv\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>", "consider \\<open>a = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<bb>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<oo>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<aa>\\<^sub>S\\<^sub>S, \\<bb>\\<^sub>S\\<^sub>S,\n                          \\<oo>\\<^sub>S\\<^sub>S}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by cases \n      (\n        cs_concl \n          cs_simp: cat_ss_cs_simps cs_intro: cat_cs_intros cat_ss_cs_intros\n      )+"], ["proof (state)\nthis:\n  \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow map.\\<close>"], ["", "mk_VLambda the_cf_scospan_components(2)\n  |vsv the_cf_scospan_ArrMap_vsv[cat_ss_cs_intros]|\n  |vdomain the_cf_scospan_ArrMap_vdomain[cat_ss_cs_simps]|\n  |app the_cf_scospan_ArrMap_app|"], ["", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_scospan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_scospan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_scospan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<gg>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_scospan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_scospan) the_cf_scospan_ArrMap_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_scospan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_scospan) the_cf_scospan_ArrMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "proof\n  (\n    intro vsv.vsv_vrange_vsubset, \n    unfold the_cf_scospan_ArrMap_vdomain, \n    intro the_cf_scospan_ArrMap_vsv\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "consider \\<open>a = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<bb>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<gg>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<ff>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_scospan_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                          \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                          \\<bb>\\<^sub>S\\<^sub>S}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by cases \n      (\n        cs_concl \n          cs_simp: cat_ss_cs_simps cs_intro: cat_cs_intros cat_ss_cs_intros\n      )+"], ["proof (state)\nthis:\n  \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "mk_VLambda the_cf_sspan_components(2)\n  |vsv the_cf_sspan_ArrMap_vsv[cat_ss_cs_intros]|\n  |vdomain the_cf_sspan_ArrMap_vdomain[cat_ss_cs_simps]|\n  |app the_cf_sspan_ArrMap_app|"], ["", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<oo>[cat_ss_cs_simps]:\n  assumes \"f = \\<oo>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_sspan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<aa>[cat_ss_cs_simps]:\n  assumes \"f = \\<aa>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_sspan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<bb>[cat_ss_cs_simps]:\n  assumes \"f = \\<bb>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_sspan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<gg>[cat_ss_cs_simps]:\n  assumes \"f = \\<gg>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<gg>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<gg>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_sspan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_sspan) the_cf_sspan_ArrMap_app_\\<ff>[cat_ss_cs_simps]:\n  assumes \"f = \\<ff>\\<^sub>S\\<^sub>S\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>", "using cat_ss_ineq"], ["proof (prove)\nusing this:\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<aa>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<bb>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<ff>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<gg>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<aa>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<bb>\\<^sub>S\\<^sub>S\n  \\<ff>\\<^sub>S\\<^sub>S \\<noteq> \\<oo>\\<^sub>S\\<^sub>S\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    \\<ff>", "by \n    (\n      cs_concl \n        cs_simp: V_cs_simps the_cf_sspan_ArrMap_app assms \n        cs_intro: cat_ss_cs_intros\n    )"], ["", "lemma (in cf_sspan) the_cf_sspan_ArrMap_vrange:\n  \"\\<R>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "proof\n  (\n    intro vsv.vsv_vrange_vsubset,\n    unfold the_cf_sspan_ArrMap_vdomain,\n    intro the_cf_sspan_ArrMap_vsv\n  )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>", "consider \\<open>a = \\<aa>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<bb>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<oo>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<gg>\\<^sub>S\\<^sub>S\\<close> | \\<open>a = \\<ff>\\<^sub>S\\<^sub>S\\<close>"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding the_cat_sspan_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<aa>\\<^sub>S\\<^sub>S, \\<gg>\\<^sub>S\\<^sub>S,\n                          \\<oo>\\<^sub>S\\<^sub>S, \\<ff>\\<^sub>S\\<^sub>S,\n                          \\<bb>\\<^sub>S\\<^sub>S}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis;\n     a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a = \\<aa>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<bb>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<oo>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<gg>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis;\n   a = \\<ff>\\<^sub>S\\<^sub>S \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n    \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by cases\n      (\n        cs_concl\n          cs_simp: cat_ss_cs_simps cs_intro: cat_cs_intros cat_ss_cs_intros\n      )+"], ["proof (state)\nthis:\n  \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Functor from \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> is a functor\\<close>"], ["", "lemma (in cf_scospan) cf_scospan_the_cf_scospan_is_tm_functor:\n  \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> : \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof(intro is_functor.cf_is_tm_functor_if_HomDom_finite_category is_functorI')"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\n 3. category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 4. category \\<alpha> \\<CC>\n 5. vcard\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    4\\<^sub>\\<nat>\n 6. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 7. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 8. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n 9. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>)\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) =\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\nA total of 16 subgoals...", "show \"vfsequence (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)", "unfolding the_cf_scospan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C, \\<CC>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence\n   (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\n\ngoal (15 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 3. category \\<alpha> \\<CC>\n 4. vcard\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    4\\<^sub>\\<nat>\n 5. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 6. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 7. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n 8. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>)\n 9. \\<D>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 10. \\<R>\\<^sub>\\<circ>\n      (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\nA total of 15 subgoals...", "show \"vcard (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    4\\<^sub>\\<nat>", "unfolding the_cf_scospan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C, \\<CC>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard\n   (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n  4\\<^sub>\\<nat>\n\ngoal (14 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 3. category \\<alpha> \\<CC>\n 4. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 5. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 6. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>) =\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\nA total of 14 subgoals...", "show \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> :\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    if \"f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\" for a b f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by (cases rule: the_cat_scospan_is_arrE; simp only:)\n      (\n        cs_concl \n          cs_simp: cat_ss_cs_simps cs_intro: cat_cs_intros cat_ss_cs_intros\n      )+"], ["proof (state)\nthis:\n  ?f : ?a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?b \\<Longrightarrow>\n  \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> : \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>?a\\<rparr> \\<mapsto>\\<^bsub>\\<CC>\\<^esub> \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 3. category \\<alpha> \\<CC>\n 4. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 5. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 6. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>) =\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\nA total of 13 subgoals...", "show \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> f\\<rparr> =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"\n    if \"g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\" for b c g a f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n            f\\<rparr> =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n            f\\<rparr> =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by (elim the_cat_scospan_is_arrE) (*very slow*)\n      (\n        all\\<open>simp only:\\<close>, \n        all\\<open>\n          solves\\<open>simp add: cat_ss_ineq cat_ss_ineq[symmetric]\\<close> | \n          cs_concl \n            cs_simp: cat_cs_simps cat_ss_cs_simps \n            cs_intro: cat_cs_intros cat_ss_cs_intros\n          \\<close>\n      )"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>?g \\<circ>\\<^sub>A\\<^bsub>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<^esub>\n                            ?f\\<rparr> =\n                    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n                    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr>\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 3. category \\<alpha> \\<CC>\n 4. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 5. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 6. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>) =\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\nA total of 12 subgoals...", "show \n    \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>\"\n    if \"c \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\" for c"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "by (elim the_cat_scospan_ObjE; simp only:)\n      (\n        cs_concl\n          cs_simp: V_cs_simps cat_ss_cs_simps \n          cs_intro: V_cs_intros cat_ss_cs_intros\n      )+"], ["proof (state)\nthis:\n  ?c \\<in>\\<^sub>\\<circ> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>CId\\<rparr>\\<lparr>?c\\<rparr>\\<rparr> =\n  \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>\\<lparr>?c\\<rparr>\\<rparr>\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 3. category \\<alpha> \\<CC>\n 4. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr> =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\n 5. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr> =\n    \\<CC>\n 6. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n 7. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>) =\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>) =\n     \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>\nA total of 11 subgoals...", "qed\n  (\n    cs_concl\n      cs_simp: cat_ss_cs_simps\n      cs_intro: \n        the_cf_scospan_ObjMap_vrange\n        cat_ss_cs_intros cat_cs_intros cat_small_cs_intros\n  )+"], ["", "lemma (in cf_scospan) cf_scospan_the_cf_scospan_is_tm_functor':\n  assumes \"\\<AA>' = \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule cf_scospan_the_cf_scospan_is_tm_functor)"], ["", "lemmas [cat_ss_cs_intros] = cf_scospan.cf_scospan_the_cf_scospan_is_tm_functor"], ["", "subsubsection\\<open>Duality for the functors from \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<close> and \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close>\\<close>"], ["", "lemma op_cf_cf_scospan[cat_op_simps]: \n  \"op_cf (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) = \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (op_cf (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (op_cf\n       (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)) =\n    4\\<^sub>\\<nat>", "unfolding op_cf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>,\n      \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>,\n      op_cat\n       (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr>),\n      op_cat\n       (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (op_cf\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)) =\n  4\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>) =\n    4\\<^sub>\\<nat>", "unfolding the_cf_sspan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> op_cat\n                                     \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n      \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C,\n      op_cat \\<CC>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>) =\n  4\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (op_cf\n          (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>))\n 2. vsv (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>)\n 3. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 4\\<^sub>\\<nat> \\<Longrightarrow>\n       op_cf\n        (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>a\\<rparr> =\n       \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>a\\<rparr>", "show \"op_cf (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>a\\<rparr> = \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>a\\<rparr>\"\n      if \"a \\<in>\\<^sub>\\<circ> 4\\<^sub>\\<nat>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>a\\<rparr> =\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>a\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> 4\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>a\\<rparr> =\n    \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>a\\<rparr>", "by \n        (\n          elim_in_numeral, \n          fold dghm_field_simps, \n          unfold cat_op_simps the_cf_sspan_components the_cf_scospan_components\n        )\n        (\n          simp_all add: \n            the_cat_scospan_components(1,2)\n            the_cat_sspan_components(1,2)\n            cat_op_simps\n        )"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> 4\\<^sub>\\<nat> \\<Longrightarrow>\n  op_cf\n   (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>?a\\<rparr> =\n  \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>?a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (op_cf\n          (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>))\n 2. vsv (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>)\n 3. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>", "qed (auto intro: cat_op_intros cat_ss_cs_intros)"], ["proof (state)\nthis:\n  op_cf\n   (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n  \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) op_cf_cf_scospan[cat_op_simps]: \n  \"op_cf (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) = \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (op_cf (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (op_cf\n       (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)) =\n    4\\<^sub>\\<nat>", "unfolding op_cf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ObjMap\\<rparr>,\n      \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>ArrMap\\<rparr>,\n      op_cat\n       (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomDom\\<rparr>),\n      op_cat\n       (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (op_cf\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)) =\n  4\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>) =\n    4\\<^sub>\\<nat>", "unfolding the_cf_scospan_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Obj\\<rparr>.\n         if a = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<aa> \n          | a = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<bb> \n          | otherwise \\<Rightarrow> \\<oo>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<lparr>Arr\\<rparr>.\n         if f = \\<aa>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> \n          | f = \\<bb>\\<^sub>S\\<^sub>S \\<Rightarrow>\n              op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<bb>\\<rparr> \n          | f = \\<gg>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<gg> \n          | f = \\<ff>\\<^sub>S\\<^sub>S \\<Rightarrow> \\<ff> \n          | otherwise \\<Rightarrow> op_cat\n                                     \\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<oo>\\<rparr>,\n      \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C,\n      op_cat \\<CC>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>) =\n  4\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (op_cf\n          (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>))\n 2. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>)\n 3. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> 4\\<^sub>\\<nat> \\<Longrightarrow>\n       op_cf\n        (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>a\\<rparr> =\n       \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>a\\<rparr>", "show \"op_cf (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>a\\<rparr> = \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>a\\<rparr>\"\n      if \"a \\<in>\\<^sub>\\<circ> 4\\<^sub>\\<nat>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>a\\<rparr> =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>a\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> 4\\<^sub>\\<nat>\n\ngoal (1 subgoal):\n 1. op_cf\n     (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>a\\<rparr> =\n    \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>a\\<rparr>", "by \n        (\n          elim_in_numeral, \n          fold dghm_field_simps, \n          unfold cat_op_simps the_cf_sspan_components the_cf_scospan_components\n        )\n        (\n          simp_all add: \n            the_cat_scospan_components(1,2)\n            the_cat_sspan_components(1,2)\n            cat_op_simps\n        )"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> 4\\<^sub>\\<nat> \\<Longrightarrow>\n  op_cf\n   (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>)\\<lparr>?a\\<rparr> =\n  \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<lparr>?a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (op_cf\n          (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>))\n 2. vsv (\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>)\n 3. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>", "qed (auto intro: cat_op_intros cat_ss_cs_intros)"], ["proof (state)\nthis:\n  op_cf\n   (\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub>) =\n  \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_op_simps] = \\<Z>.op_cf_cf_scospan"], ["", "subsubsection\\<open>Functor from \\<open>\\<leftarrow>\\<bullet>\\<rightarrow>\\<close> is a functor\\<close>"], ["", "lemma (in cf_sspan) cf_sspan_the_cf_sspan_is_tm_functor:\n  \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> : \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret scospan: cf_scospan \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> \\<open>op_cat \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_scospan \\<alpha> \\<aa> \\<gg> \\<oo> \\<ff> \\<bb> (op_cat \\<CC>)", "by (rule cf_scospan_op)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "interpret scospan:\n    is_tm_functor \\<alpha> \\<open>\\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C\\<close> \\<open>op_cat \\<CC>\\<close> \\<open>\\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<rightarrow>\\<gg>\\<rightarrow>\\<oo>\\<leftarrow>\\<ff>\\<leftarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>op_cat \\<CC>\\<^esub> :\n    \\<rightarrow>\\<bullet>\\<leftarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> op_cat\n         \\<CC>", "by (rule scospan.cf_scospan_the_cf_scospan_is_tm_functor)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule scospan.is_tm_functor_op[unfolded cat_op_simps])"], ["proof (state)\nthis:\n  \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n  \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in cf_sspan) cf_sspan_the_cf_sspan_is_tm_functor':\n  assumes \"\\<AA>' = \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C\" and \"\\<CC>' = \\<CC>\"\n  shows \"\\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<aa>\\<leftarrow>\\<gg>\\<leftarrow>\\<oo>\\<rightarrow>\\<ff>\\<rightarrow>\\<bb>\\<rangle>\\<^sub>C\\<^sub>F\\<^bsub>\\<CC>\\<^esub> :\n    \\<leftarrow>\\<bullet>\\<rightarrow>\\<^sub>C \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule cf_sspan_the_cf_sspan_is_tm_functor)"], ["", "lemmas [cat_ss_cs_intros] = cf_sspan.cf_sspan_the_cf_sspan_is_tm_functor"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}