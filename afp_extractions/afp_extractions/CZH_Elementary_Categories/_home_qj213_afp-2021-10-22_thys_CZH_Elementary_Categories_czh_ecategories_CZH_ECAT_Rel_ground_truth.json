{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_Rel.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemmas (in arr_Rel) [cat_Rel_cs_simps] = \n  dg_Rel_shared_cs_simps", "lemmas [cat_Rel_cs_simps] = \n  dg_Rel_shared_cs_simps\n  arr_Rel.arr_Rel_length\n  arr_Rel_comp_Rel_id_Rel_left\n  arr_Rel_comp_Rel_id_Rel_right\n  arr_Rel.arr_Rel_converse_Rel_converse_Rel\n  arr_Rel_converse_Rel_eq_iff\n  arr_Rel_converse_Rel_comp_Rel\n  arr_Rel_comp_Rel_converse_Rel_left_if_v11\n  arr_Rel_comp_Rel_converse_Rel_right_if_v11", "lemmas [cat_Rel_cs_intros] = \n  dg_Rel_shared_cs_intros\n  arr_Rel_comp_Rel\n  arr_Rel.arr_Rel_converse_Rel", "lemma cat_Rel_components:\n  shows \"cat_Rel \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"cat_Rel \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Rel \\<alpha> T}\"\n    and \"cat_Rel \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Rel \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"cat_Rel \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Rel \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"cat_Rel \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Rel\"", "lemma cat_smc_cat_Rel: \"cat_smc (cat_Rel \\<alpha>) = smc_Rel \\<alpha>\"", "lemmas_with [folded cat_smc_cat_Rel, unfolded slicing_simps]: \n  cat_Rel_Obj_iff = smc_Rel_Obj_iff\n  and cat_Rel_Arr_iff[cat_Rel_cs_simps] = smc_Rel_Arr_iff\n  and cat_Rel_Dom_vsv[cat_Rel_cs_intros] = smc_Rel_Dom_vsv\n  and cat_Rel_Dom_vdomain[cat_Rel_cs_simps] = smc_Rel_Dom_vdomain\n  and cat_Rel_Dom_app[cat_Rel_cs_simps] = smc_Rel_Dom_app\n  and cat_Rel_Dom_vrange = smc_Rel_Dom_vrange\n  and cat_Rel_Cod_vsv[cat_Rel_cs_intros] = smc_Rel_Cod_vsv\n  and cat_Rel_Cod_vdomain[cat_Rel_cs_simps] = smc_Rel_Cod_vdomain\n  and cat_Rel_Cod_app[cat_Rel_cs_simps] = smc_Rel_Cod_app\n  and cat_Rel_Cod_vrange = smc_Rel_Cod_vrange\n  and cat_Rel_is_arrI[cat_Rel_cs_intros] = smc_Rel_is_arrI\n  and cat_Rel_is_arrD = smc_Rel_is_arrD\n  and cat_Rel_is_arrE = smc_Rel_is_arrE", "lemmas_with [folded cat_smc_cat_Rel, unfolded slicing_simps, unfolded cat_smc_cat_Rel]: \n  cat_Rel_composable_arrs_dg_Rel = smc_Rel_composable_arrs_dg_Rel\n  and cat_Rel_Comp = smc_Rel_Comp\n  and cat_Rel_Comp_app[cat_Rel_cs_simps] = smc_Rel_Comp_app\n  and cat_Rel_Comp_vdomain[simp] = smc_Rel_Comp_vdomain", "lemmas [cat_cs_simps] = cat_Rel_is_arrD(2,3)", "lemmas [cat_Rel_cs_intros] = cat_Rel_is_arrI", "lemmas_with (in \\<Z>) [folded cat_smc_cat_Rel, unfolded slicing_simps]: \n  cat_Rel_Hom_vifunion_in_Vset = smc_Rel_Hom_vifunion_in_Vset\n  and cat_Rel_incl_Rel_is_arr = smc_Rel_incl_Rel_is_arr\n  and cat_Rel_incl_Rel_is_arr'[cat_Rel_cs_intros] = smc_Rel_incl_Rel_is_arr'\n  and cat_CAT_Comp_vrange = smc_CAT_Comp_vrange\n  and cat_Rel_is_monic_arrI = smc_Rel_is_monic_arrI\n  and cat_Rel_is_monic_arrD = smc_Rel_is_monic_arrD\n  and cat_Rel_is_monic_arr = smc_Rel_is_monic_arr\n  and cat_Rel_is_monic_arr_is_epic_arr = smc_Rel_is_monic_arr_is_epic_arr\n  and cat_Rel_is_epic_arr_is_monic_arr = smc_Rel_is_epic_arr_is_monic_arr\n  and cat_Rel_is_epic_arrI = smc_Rel_is_epic_arrI\n  and cat_Rel_is_epic_arrD = smc_Rel_is_epic_arrD\n  and cat_Rel_is_epic_arr = smc_Rel_is_epic_arr\n  and cat_Rel_obj_terminal = smc_Rel_obj_terminal\n  and cat_Rel_obj_initial = smc_Rel_obj_initial\n  and cat_Rel_obj_terminal_obj_initial = smc_Rel_obj_terminal_obj_initial\n  and cat_Rel_obj_null = smc_Rel_obj_null\n  and cat_Rel_is_zero_arr = smc_Rel_is_zero_arr", "lemmas [cat_Rel_cs_intros] = \\<Z>.cat_Rel_incl_Rel_is_arr'", "lemma (in \\<Z>) cat_Rel_CId_app[cat_Rel_cs_simps]:\n  assumes \"T \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>T\\<rparr> = id_Rel T\"", "lemmas [cat_Rel_cs_simps] = \\<Z>.cat_Rel_CId_app", "lemma (in \\<Z>) category_cat_Rel: \"category \\<alpha> (cat_Rel \\<alpha>)\"", "lemma (in \\<Z>) category_cat_Rel'[cat_Rel_cs_intros]: \n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<alpha>'' = \\<alpha>\"\n  shows \"category \\<alpha>' (cat_Rel \\<alpha>'')\"", "lemmas [cat_Rel_cs_intros] = \\<Z>.category_cat_Rel'", "lemma cf_dag_Rel_components:\n  shows \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ObjMap\\<rparr> = vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>)\"\n    and \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr> = VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel\"\n    and \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>HomDom\\<rparr> = op_cat (cat_Rel \\<alpha>)\"\n    and \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>HomCod\\<rparr> = cat_Rel \\<alpha>\"", "lemma cf_smcf_cf_dag_Rel: \"cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) = \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\"", "lemmas_with [folded cat_smc_cat_Rel cf_smcf_cf_dag_Rel, unfolded slicing_simps]: \n  cf_dag_Rel_ObjMap_vsv[cat_Rel_cs_intros] = smcf_dag_Rel_ObjMap_vsv\n  and cf_dag_Rel_ObjMap_vdomain[cat_Rel_cs_simps] = smcf_dag_Rel_ObjMap_vdomain\n  and cf_dag_Rel_ObjMap_app[cat_Rel_cs_simps] = smcf_dag_Rel_ObjMap_app\n  and cf_dag_Rel_ObjMap_vrange[cat_Rel_cs_simps] = smcf_dag_Rel_ObjMap_vrange\n  and cf_dag_Rel_ArrMap_vsv[cat_Rel_cs_intros] = smcf_dag_Rel_ArrMap_vsv\n  and cf_dag_Rel_ArrMap_vdomain[cat_Rel_cs_simps] = smcf_dag_Rel_ArrMap_vdomain\n  and cf_dag_Rel_ArrMap_app[cat_Rel_cs_simps] = smcf_dag_Rel_ArrMap_app\n  and cf_dag_Rel_ArrMap_vrange[cat_Rel_cs_simps] = smcf_dag_Rel_ArrMap_vrange", "lemmas_with (in \\<Z>) [\n  folded cat_smc_cat_Rel cf_smcf_cf_dag_Rel, unfolded slicing_simps\n  ]: \n  cf_dag_Rel_app_is_arr[cat_Rel_cs_intros] = smcf_dag_Rel_app_is_arr\n  and cf_dag_Rel_ArrMap_smc_Rel_Comp[cat_Rel_cs_simps] = \n    smcf_dag_Rel_ArrMap_smc_Rel_Comp", "lemma (in \\<Z>) cf_dag_Rel_is_iso_functor: \n  \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> : op_cat (cat_Rel \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\"", "lemma (in \\<Z>) cf_dag_Rel_is_iso_functor'[cat_cs_intros]: \n  assumes \"\\<AA>' = op_cat (cat_Rel \\<alpha>)\"\n    and \"\\<BB>' = cat_Rel \\<alpha>\"\n    and \"\\<alpha>' = \\<alpha>\"\n  shows \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [cat_cs_intros] = \\<Z>.cf_dag_Rel_is_iso_functor'", "lemma (in \\<Z>) cf_cn_comp_cf_dag_Rel_cf_dag_Rel: \n  \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> \\<^sub>C\\<^sub>F\\<circ> \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> = cf_id (cat_Rel \\<alpha>)\"", "lemma cat_Rel_is_arr_isomorphism_right_vsubset:\n  assumes \"S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\"\n    and \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"\n    and \"S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\"\n    and \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\"\n  shows \"S\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\"", "lemma cat_Rel_is_arr_isomorphism_left_vsubset:\n  assumes \"S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\" \n    and \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" \n    and \"S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\"\n    and \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\"\n  shows \"(T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\"", "lemma is_arr_isomorphism_dag: \n  assumes \"S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\" \n    and \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" \n    and \"S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\"\n    and \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\"\n  shows \"S = \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\"", "lemma cat_Rel_is_arr_isomorphismI[intro]:\n  assumes \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" \n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"", "lemma cat_Rel_is_arr_isomorphismD[dest]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" \n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemmas [cat_Rel_cs_simps] = \\<Z>.cat_Rel_is_arr_isomorphismD(3,4)", "lemma (in \\<Z>) cat_Rel_is_arr_isomorphism:\n  \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<longleftrightarrow>\n    T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<and>\n    v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and>\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma (in \\<Z>) cat_Rel_the_inverse:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"\n  shows \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Rel \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\"", "lemmas [cat_Rel_cs_simps] = \\<Z>.cat_Rel_the_inverse"], "translations": [["", "lemmas (in arr_Rel) [cat_Rel_cs_simps] = \n  dg_Rel_shared_cs_simps"], ["", "lemmas [cat_Rel_cs_simps] = \n  dg_Rel_shared_cs_simps\n  arr_Rel.arr_Rel_length\n  arr_Rel_comp_Rel_id_Rel_left\n  arr_Rel_comp_Rel_id_Rel_right\n  arr_Rel.arr_Rel_converse_Rel_converse_Rel\n  arr_Rel_converse_Rel_eq_iff\n  arr_Rel_converse_Rel_comp_Rel\n  arr_Rel_comp_Rel_converse_Rel_left_if_v11\n  arr_Rel_comp_Rel_converse_Rel_right_if_v11"], ["", "lemmas [cat_Rel_cs_intros] = \n  dg_Rel_shared_cs_intros\n  arr_Rel_comp_Rel\n  arr_Rel.arr_Rel_converse_Rel"], ["", "subsection\\<open>\\<open>Rel\\<close> as a category\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition cat_Rel :: \"V \\<Rightarrow> V\"\n  where \"cat_Rel \\<alpha> =\n    [\n      Vset \\<alpha>,\n      set {T. arr_Rel \\<alpha> T},\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Rel \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>),\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Rel \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>),\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      VLambda (Vset \\<alpha>) id_Rel \n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cat_Rel_components:\n  shows \"cat_Rel \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"cat_Rel \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Rel \\<alpha> T}\"\n    and \"cat_Rel \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Rel \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"cat_Rel \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Rel \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"cat_Rel \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha> &&&\n     cat_Rel \\<alpha>\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Rel \\<alpha> T} &&&\n     cat_Rel \\<alpha>\\<lparr>Dom\\<rparr> =\n     (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Rel \\<alpha> T}.\n         T\\<lparr>ArrDom\\<rparr>)) &&&\n    cat_Rel \\<alpha>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Rel \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    cat_Rel \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Rel", "unfolding cat_Rel_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     Vset \\<alpha> &&&\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Rel \\<alpha> T} &&&\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Rel \\<alpha> T}.\n         T\\<lparr>ArrDom\\<rparr>)) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Rel \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Rel \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Rel \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Rel \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Rel \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Rel \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Rel \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    VLambda (Vset \\<alpha>) id_Rel", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma cat_smc_cat_Rel: \"cat_smc (cat_Rel \\<alpha>) = smc_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc (cat_Rel \\<alpha>) = smc_Rel \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_Rel \\<alpha>))\n 2. vsv (smc_Rel \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Rel \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Rel \\<alpha>\\<lparr>a\\<rparr>", "show \"vsv (cat_smc (cat_Rel \\<alpha>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cat_smc (cat_Rel \\<alpha>))", "unfolding cat_smc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>,\n         cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>,\n         cat_Rel \\<alpha>\\<lparr>Dom\\<rparr>,\n         cat_Rel \\<alpha>\\<lparr>Cod\\<rparr>,\n         cat_Rel \\<alpha>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vsv (cat_smc (cat_Rel \\<alpha>))\n\ngoal (3 subgoals):\n 1. vsv (smc_Rel \\<alpha>)\n 2. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Rel \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Rel \\<alpha>\\<lparr>a\\<rparr>", "show \"vsv (smc_Rel \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (smc_Rel \\<alpha>)", "unfolding smc_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n         \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n (Collect (arr_Rel \\<alpha>)).\n            T\\<lparr>ArrDom\\<rparr>,\n         \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n (Collect (arr_Rel \\<alpha>)).\n            T\\<lparr>ArrCod\\<rparr>,\n         \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n            ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n            ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vsv (smc_Rel \\<alpha>)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Rel \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Rel \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) = 5\\<^sub>\\<nat>", "unfolding cat_smc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>,\n      cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>,\n      cat_Rel \\<alpha>\\<lparr>Dom\\<rparr>,\n      cat_Rel \\<alpha>\\<lparr>Cod\\<rparr>,\n      cat_Rel \\<alpha>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) = 5\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Rel \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Rel \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>) = 5\\<^sub>\\<nat>", "unfolding smc_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>) = 5\\<^sub>\\<nat>\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Rel \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Rel \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) = \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 5\\<^sub>\\<nat> = 5\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ> (smc_Rel \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Rel \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Rel \\<alpha>\\<lparr>a\\<rparr>", "show \n    \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow> cat_smc (cat_Rel \\<alpha>)\\<lparr>a\\<rparr> = smc_Rel \\<alpha>\\<lparr>a\\<rparr>\"\n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow>\n    cat_smc (cat_Rel \\<alpha>)\\<lparr>a\\<rparr> =\n    smc_Rel \\<alpha>\\<lparr>a\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral, \n        unfold cat_smc_def dg_field_simps cat_Rel_def smc_Rel_def\n      )\n      (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cat_smc (cat_Rel \\<alpha>)) \\<Longrightarrow>\n  cat_smc (cat_Rel \\<alpha>)\\<lparr>?a\\<rparr> =\n  smc_Rel \\<alpha>\\<lparr>?a\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas_with [folded cat_smc_cat_Rel, unfolded slicing_simps]: \n  cat_Rel_Obj_iff = smc_Rel_Obj_iff\n  and cat_Rel_Arr_iff[cat_Rel_cs_simps] = smc_Rel_Arr_iff\n  and cat_Rel_Dom_vsv[cat_Rel_cs_intros] = smc_Rel_Dom_vsv\n  and cat_Rel_Dom_vdomain[cat_Rel_cs_simps] = smc_Rel_Dom_vdomain\n  and cat_Rel_Dom_app[cat_Rel_cs_simps] = smc_Rel_Dom_app\n  and cat_Rel_Dom_vrange = smc_Rel_Dom_vrange\n  and cat_Rel_Cod_vsv[cat_Rel_cs_intros] = smc_Rel_Cod_vsv\n  and cat_Rel_Cod_vdomain[cat_Rel_cs_simps] = smc_Rel_Cod_vdomain\n  and cat_Rel_Cod_app[cat_Rel_cs_simps] = smc_Rel_Cod_app\n  and cat_Rel_Cod_vrange = smc_Rel_Cod_vrange\n  and cat_Rel_is_arrI[cat_Rel_cs_intros] = smc_Rel_is_arrI\n  and cat_Rel_is_arrD = smc_Rel_is_arrD\n  and cat_Rel_is_arrE = smc_Rel_is_arrE"], ["", "lemmas_with [folded cat_smc_cat_Rel, unfolded slicing_simps, unfolded cat_smc_cat_Rel]: \n  cat_Rel_composable_arrs_dg_Rel = smc_Rel_composable_arrs_dg_Rel\n  and cat_Rel_Comp = smc_Rel_Comp\n  and cat_Rel_Comp_app[cat_Rel_cs_simps] = smc_Rel_Comp_app\n  and cat_Rel_Comp_vdomain[simp] = smc_Rel_Comp_vdomain"], ["", "lemmas [cat_cs_simps] = cat_Rel_is_arrD(2,3)"], ["", "lemmas [cat_Rel_cs_intros] = cat_Rel_is_arrI"], ["", "lemmas_with (in \\<Z>) [folded cat_smc_cat_Rel, unfolded slicing_simps]: \n  cat_Rel_Hom_vifunion_in_Vset = smc_Rel_Hom_vifunion_in_Vset\n  and cat_Rel_incl_Rel_is_arr = smc_Rel_incl_Rel_is_arr\n  and cat_Rel_incl_Rel_is_arr'[cat_Rel_cs_intros] = smc_Rel_incl_Rel_is_arr'\n  and cat_CAT_Comp_vrange = smc_CAT_Comp_vrange\n  and cat_Rel_is_monic_arrI = smc_Rel_is_monic_arrI\n  and cat_Rel_is_monic_arrD = smc_Rel_is_monic_arrD\n  and cat_Rel_is_monic_arr = smc_Rel_is_monic_arr\n  and cat_Rel_is_monic_arr_is_epic_arr = smc_Rel_is_monic_arr_is_epic_arr\n  and cat_Rel_is_epic_arr_is_monic_arr = smc_Rel_is_epic_arr_is_monic_arr\n  and cat_Rel_is_epic_arrI = smc_Rel_is_epic_arrI\n  and cat_Rel_is_epic_arrD = smc_Rel_is_epic_arrD\n  and cat_Rel_is_epic_arr = smc_Rel_is_epic_arr\n  and cat_Rel_obj_terminal = smc_Rel_obj_terminal\n  and cat_Rel_obj_initial = smc_Rel_obj_initial\n  and cat_Rel_obj_terminal_obj_initial = smc_Rel_obj_terminal_obj_initial\n  and cat_Rel_obj_null = smc_Rel_obj_null\n  and cat_Rel_is_zero_arr = smc_Rel_is_zero_arr"], ["", "lemmas [cat_Rel_cs_intros] = \\<Z>.cat_Rel_incl_Rel_is_arr'"], ["", "subsubsection\\<open>Identity\\<close>"], ["", "lemma (in \\<Z>) cat_Rel_CId_app[cat_Rel_cs_simps]:\n  assumes \"T \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>T\\<rparr> = id_Rel T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>T\\<rparr> = id_Rel T", "using assms"], ["proof (prove)\nusing this:\n  T \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>T\\<rparr> = id_Rel T", "unfolding cat_Rel_components"], ["proof (prove)\nusing this:\n  T \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. VLambda (Vset \\<alpha>) id_Rel\\<lparr>T\\<rparr> = id_Rel T", "by simp"], ["", "lemmas [cat_Rel_cs_simps] = \\<Z>.cat_Rel_CId_app"], ["", "subsubsection\\<open>\\<open>Rel\\<close> is a category\\<close>"], ["", "lemma (in \\<Z>) category_cat_Rel: \"category \\<alpha> (cat_Rel \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "proof(rule categoryI, unfold cat_smc_cat_Rel)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_Rel \\<alpha>)\n 3. vsv (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_Rel \\<alpha>) = 6\\<^sub>\\<nat>\n 5. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 6. \\<D>\\<^sub>\\<circ> (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Rel\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "interpret Rel: semicategory \\<alpha> \\<open>cat_smc (cat_Rel \\<alpha>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (cat_smc (cat_Rel \\<alpha>))", "unfolding cat_smc_cat_Rel"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Rel \\<alpha>)", "by (simp add: semicategory_smc_Rel)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_Rel \\<alpha>)\n 3. vsv (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_Rel \\<alpha>) = 6\\<^sub>\\<nat>\n 5. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 6. \\<D>\\<^sub>\\<circ> (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Rel\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vfsequence (cat_Rel \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cat_Rel \\<alpha>)", "unfolding cat_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>) id_Rel]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (cat_Rel \\<alpha>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>)\n 3. vcard (cat_Rel \\<alpha>) = 6\\<^sub>\\<nat>\n 4. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 5. \\<D>\\<^sub>\\<circ> (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n 6. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Rel\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> a\n 7. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       f =\n       f\n 8. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vcard (cat_Rel \\<alpha>) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cat_Rel \\<alpha>) = 6\\<^sub>\\<nat>", "unfolding cat_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Rel \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Rel \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Rel \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>) id_Rel]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cat_Rel \\<alpha>) = 6\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Rel\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> a\n 6. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       f =\n       f\n 7. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\"\n    if \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "using that"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "unfolding cat_Rel_Obj_iff"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "by \n      (\n        cs_concl \n          cs_simp: cat_Rel_cs_simps cs_intro: cat_Rel_cs_intros arr_Rel_id_RelI \n      )"], ["proof (state)\nthis:\n  ?A \\<in>\\<^sub>\\<circ> cat_Rel\n                          \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?A\\<rparr> : ?A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> ?A\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       f =\n       f\n 6. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F = F\"\n    if \"F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" for F A B"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    F =\n    F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    F =\n    F", "from that"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "have \"arr_Rel \\<alpha> F\" \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> F &&&\n    A \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto elim: cat_Rel_is_arrE simp: cat_Rel_cs_simps)"], ["proof (state)\nthis:\n  arr_Rel \\<alpha> F\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    F =\n    F", "with that"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  arr_Rel \\<alpha> F\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  arr_Rel \\<alpha> F\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    F =\n    F", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_Rel_cs_simps \n            cs_intro: cat_Rel_cs_intros arr_Rel_id_RelI\n        )"], ["proof (state)\nthis:\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  F =\n  F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F : ?A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  ?F =\n  ?F\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"F \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> = F\"\n    if \"F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\" for F B C"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "from that"], ["proof (chain)\npicking this:\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C", "have \"arr_Rel \\<alpha> F\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \"C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> F &&&\n    B \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    C \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto elim: cat_Rel_is_arrE simp: cat_Rel_cs_simps)"], ["proof (state)\nthis:\n  arr_Rel \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "with that"], ["proof (chain)\npicking this:\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\n  arr_Rel \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\n  arr_Rel \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_Rel_cs_simps\n            cs_intro: cat_Rel_cs_intros arr_Rel_id_RelI\n        )"], ["proof (state)\nthis:\n  F \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n  F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F : ?B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> ?C \\<Longrightarrow>\n  ?F \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?B\\<rparr> =\n  ?F\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Rel \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "qed (auto simp: semicategory_smc_Rel cat_Rel_components)"], ["", "lemma (in \\<Z>) category_cat_Rel'[cat_Rel_cs_intros]: \n  assumes \"\\<alpha>' = \\<alpha>\" and \"\\<alpha>'' = \\<alpha>\"\n  shows \"category \\<alpha>' (cat_Rel \\<alpha>'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha>' (cat_Rel \\<alpha>'')", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["", "lemmas [cat_Rel_cs_intros] = \\<Z>.category_cat_Rel'"], ["", "subsection\\<open>Canonical dagger for \\<open>Rel\\<close>\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition cf_dag_Rel :: \"V \\<Rightarrow> V\" (\\<open>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\\<close>)\n  where \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> = \n    [\n      vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>), \n      VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel, \n      op_cat (cat_Rel \\<alpha>), \n      cat_Rel \\<alpha>\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cf_dag_Rel_components:\n  shows \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ObjMap\\<rparr> = vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>)\"\n    and \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr> = VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel\"\n    and \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>HomDom\\<rparr> = op_cat (cat_Rel \\<alpha>)\"\n    and \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>HomCod\\<rparr> = cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n      \\<alpha>\\<lparr>ObjMap\\<rparr> =\n     vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>) &&&\n     \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n      \\<alpha>\\<lparr>ArrMap\\<rparr> =\n     VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel) &&&\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>HomDom\\<rparr> =\n    op_cat (cat_Rel \\<alpha>) &&&\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>HomCod\\<rparr> =\n    cat_Rel \\<alpha>", "unfolding cf_dag_Rel_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>),\n      VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel,\n      op_cat (cat_Rel \\<alpha>),\n      cat_Rel \\<alpha>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>) &&&\n     [vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>),\n      VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel,\n      op_cat (cat_Rel \\<alpha>),\n      cat_Rel \\<alpha>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel) &&&\n    [vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>),\n     VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel,\n     op_cat (cat_Rel \\<alpha>),\n     cat_Rel \\<alpha>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    op_cat (cat_Rel \\<alpha>) &&&\n    [vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>),\n     VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel,\n     op_cat (cat_Rel \\<alpha>),\n     cat_Rel \\<alpha>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    cat_Rel \\<alpha>", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma cf_smcf_cf_dag_Rel: \"cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) = \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cf_smcf\n          (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>))\n 2. vsv (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ>\n     (cf_smcf\n       (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ>\n     (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cf_smcf\n                                (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                                  \\<alpha>)) \\<Longrightarrow>\n       cf_smcf\n        (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)\\<lparr>a\\<rparr> =\n       \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n        \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_smcf\n       (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) =\n    4\\<^sub>\\<nat>", "unfolding cf_smcf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ObjMap\\<rparr>,\n      \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>,\n      cat_smc\n       (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n         \\<alpha>\\<lparr>HomDom\\<rparr>),\n      cat_smc\n       (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n         \\<alpha>\\<lparr>HomCod\\<rparr>)]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) =\n  4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (cf_smcf\n          (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>))\n 2. vsv (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ>\n     (cf_smcf\n       (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ>\n     (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cf_smcf\n                                (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                                  \\<alpha>)) \\<Longrightarrow>\n       cf_smcf\n        (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)\\<lparr>a\\<rparr> =\n       \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n        \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>) =\n    4\\<^sub>\\<nat>", "unfolding smcf_dag_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [vid_on (smc_Rel \\<alpha>\\<lparr>Obj\\<rparr>),\n      VLambda (smc_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel,\n      op_smc (smc_Rel \\<alpha>), smc_Rel \\<alpha>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>) =\n  4\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (cf_smcf\n          (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>))\n 2. vsv (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ>\n     (cf_smcf\n       (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ>\n     (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cf_smcf\n                                (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                                  \\<alpha>)) \\<Longrightarrow>\n       cf_smcf\n        (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)\\<lparr>a\\<rparr> =\n       \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n        \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) = \\<D>\\<^sub>\\<circ> (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_smcf\n       (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ>\n     (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4\\<^sub>\\<nat> = 4\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ>\n   (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>)\n\ngoal (3 subgoals):\n 1. vsv (cf_smcf\n          (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>))\n 2. vsv (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cf_smcf\n                                (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                                  \\<alpha>)) \\<Longrightarrow>\n       cf_smcf\n        (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)\\<lparr>a\\<rparr> =\n       \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n        \\<alpha>\\<lparr>a\\<rparr>", "show \"A \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)) \\<Longrightarrow> cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)\\<lparr>A\\<rparr> = \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>A\\<rparr>\"\n    for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (cf_smcf\n                             (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                               \\<alpha>)) \\<Longrightarrow>\n    cf_smcf\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>)\\<lparr>A\\<rparr> =\n    \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>A\\<rparr>", "by\n      (\n        unfold dom_lhs,\n        elim_in_numeral,\n        unfold dghm_field_simps[symmetric],\n        unfold \n          cat_smc_cat_Rel\n          slicing_commute[symmetric]\n          cf_smcf_components \n          smcf_dag_Rel_components\n          cf_dag_Rel_components\n          smc_Rel_components\n          cat_Rel_components\n      )\n      simp_all"], ["proof (state)\nthis:\n  ?A \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cf_smcf\n                            (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                              \\<alpha>)) \\<Longrightarrow>\n  cf_smcf\n   (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>)\\<lparr>?A\\<rparr> =\n  \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>?A\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (cf_smcf\n          (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>))\n 2. vsv (\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n          \\<alpha>)", "qed (auto simp: cf_smcf_def smcf_dag_Rel_def)"], ["", "lemmas_with [folded cat_smc_cat_Rel cf_smcf_cf_dag_Rel, unfolded slicing_simps]: \n  cf_dag_Rel_ObjMap_vsv[cat_Rel_cs_intros] = smcf_dag_Rel_ObjMap_vsv\n  and cf_dag_Rel_ObjMap_vdomain[cat_Rel_cs_simps] = smcf_dag_Rel_ObjMap_vdomain\n  and cf_dag_Rel_ObjMap_app[cat_Rel_cs_simps] = smcf_dag_Rel_ObjMap_app\n  and cf_dag_Rel_ObjMap_vrange[cat_Rel_cs_simps] = smcf_dag_Rel_ObjMap_vrange\n  and cf_dag_Rel_ArrMap_vsv[cat_Rel_cs_intros] = smcf_dag_Rel_ArrMap_vsv\n  and cf_dag_Rel_ArrMap_vdomain[cat_Rel_cs_simps] = smcf_dag_Rel_ArrMap_vdomain\n  and cf_dag_Rel_ArrMap_app[cat_Rel_cs_simps] = smcf_dag_Rel_ArrMap_app\n  and cf_dag_Rel_ArrMap_vrange[cat_Rel_cs_simps] = smcf_dag_Rel_ArrMap_vrange"], ["", "lemmas_with (in \\<Z>) [\n  folded cat_smc_cat_Rel cf_smcf_cf_dag_Rel, unfolded slicing_simps\n  ]: \n  cf_dag_Rel_app_is_arr[cat_Rel_cs_intros] = smcf_dag_Rel_app_is_arr\n  and cf_dag_Rel_ArrMap_smc_Rel_Comp[cat_Rel_cs_simps] = \n    smcf_dag_Rel_ArrMap_smc_Rel_Comp"], ["", "subsubsection\\<open>Canonical dagger is a contravariant isomorphism of \\<open>Rel\\<close>\\<close>"], ["", "lemma (in \\<Z>) cf_dag_Rel_is_iso_functor: \n  \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> : op_cat (cat_Rel \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                         \\<alpha>", "proof\n  (\n    rule is_iso_functorI, \n    unfold \n      cat_smc_cat_Rel \n      cf_smcf_cf_dag_Rel \n      cat_Rel_components \n      cat_op_simps \n      slicing_commute[symmetric]\n  )"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                               \\<alpha>\n 2. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n   \\<alpha>", "interpret is_iso_semifunctor \\<alpha> \\<open>op_smc (smc_Rel \\<alpha>)\\<close> \\<open>smc_Rel \\<alpha>\\<close> \\<open>\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n   \\<alpha>", "by (rule smcf_dag_Rel_is_iso_semifunctor)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                               \\<alpha>\n 2. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n   \\<alpha>", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                               \\<alpha>\n 2. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n   \\<alpha>", "show \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> : op_cat (cat_Rel \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                               \\<alpha>", "proof\n    (\n      rule is_functorI, \n      unfold \n        cat_smc_cat_Rel \n        cf_smcf_cf_dag_Rel \n        cat_op_simps \n        slicing_commute[symmetric] \n        cf_dag_Rel_components(3,4)\n    )"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)\n 3. category \\<alpha> (op_cat (cat_Rel \\<alpha>))\n 4. category \\<alpha> (cat_Rel \\<alpha>)\n 5. vcard (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    4\\<^sub>\\<nat>\n 6. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n         \\<alpha>\n 7. op_cat (cat_Rel \\<alpha>) = op_cat (cat_Rel \\<alpha>)\n 8. cat_Rel \\<alpha> = cat_Rel \\<alpha>\n 9. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> cat_Rel\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n        \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n         \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n      \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"vfsequence (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)", "unfolding cf_dag_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>),\n      VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel,\n      op_cat (cat_Rel \\<alpha>), cat_Rel \\<alpha>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vfsequence (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (op_cat (cat_Rel \\<alpha>))\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. vcard (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    4\\<^sub>\\<nat>\n 5. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n         \\<alpha>\n 6. op_cat (cat_Rel \\<alpha>) = op_cat (cat_Rel \\<alpha>)\n 7. cat_Rel \\<alpha> = cat_Rel \\<alpha>\n 8. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> cat_Rel\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n        \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n         \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n      \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"vcard (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    4\\<^sub>\\<nat>", "unfolding cf_dag_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [vid_on (cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>),\n      VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>) converse_Rel,\n      op_cat (cat_Rel \\<alpha>), cat_Rel \\<alpha>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n  4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (op_cat (cat_Rel \\<alpha>))\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n         \\<alpha>\n 5. op_cat (cat_Rel \\<alpha>) = op_cat (cat_Rel \\<alpha>)\n 6. cat_Rel \\<alpha> = cat_Rel \\<alpha>\n 7. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> cat_Rel\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n        \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n         \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       cat_Rel\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n      \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>C\\<rparr>\\<rparr> = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>C\\<rparr>\\<rparr>\"\n      if \"C \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" for C"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n      \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>C\\<rparr>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>C\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n      \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>C\\<rparr>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>C\\<rparr>\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  C \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "have \"C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  C \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. C \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto elim: cat_Rel_is_arrE simp: cat_Rel_Obj_iff)"], ["proof (state)\nthis:\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n      \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>C\\<rparr>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>C\\<rparr>\\<rparr>", "with that"], ["proof (chain)\npicking this:\n  C \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  C \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n      \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>C\\<rparr>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>C\\<rparr>\\<rparr>", "by \n          (\n            cs_concl \n              cs_simp: cat_Rel_cs_simps cs_intro: cat_cs_intros arr_Rel_id_RelI\n          )"], ["proof (state)\nthis:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n    \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>C\\<rparr>\\<rparr> =\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>C\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?C \\<in>\\<^sub>\\<circ> cat_Rel\n                          \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_Rel\n    \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?C\\<rparr>\\<rparr> =\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>?C\\<rparr>\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (op_cat (cat_Rel \\<alpha>))\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n         \\<alpha>\n 5. op_cat (cat_Rel \\<alpha>) = op_cat (cat_Rel \\<alpha>)\n 6. cat_Rel \\<alpha> = cat_Rel \\<alpha>", "qed (auto simp: cat_cs_intros intro: smc_cs_intros)"], ["proof (state)\nthis:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n  op_cat\n   (cat_Rel\n     \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                             \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n   \\<alpha>", "show \"\\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> : op_smc (smc_Rel \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> :\n    op_smc\n     (smc_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n   \\<alpha>", "by (rule smcf_dag_Rel_is_iso_semifunctor)"], ["proof (state)\nthis:\n  \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha> :\n  op_smc\n   (smc_Rel\n     \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) cf_dag_Rel_is_iso_functor'[cat_cs_intros]: \n  assumes \"\\<AA>' = op_cat (cat_Rel \\<alpha>)\"\n    and \"\\<BB>' = cat_Rel \\<alpha>\"\n    and \"\\<alpha>' = \\<alpha>\"\n  shows \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                         \\<alpha>", "by (rule cf_dag_Rel_is_iso_functor)"], ["", "lemmas [cat_cs_intros] = \\<Z>.cf_dag_Rel_is_iso_functor'"], ["", "subsubsection\\<open>Further properties of the canonical dagger\\<close>"], ["", "lemma (in \\<Z>) cf_cn_comp_cf_dag_Rel_cf_dag_Rel: \n  \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> \\<^sub>C\\<^sub>F\\<circ> \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> = cf_id (cat_Rel \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> =\n    dghm_id (cat_Rel \\<alpha>)", "proof(rule cf_smcf_eqI)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_id (cat_Rel \\<alpha>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. cf_smcf\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n      \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    cf_smcf (dghm_id (cat_Rel \\<alpha>))", "interpret category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_id (cat_Rel \\<alpha>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. cf_smcf\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n      \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    cf_smcf (dghm_id (cat_Rel \\<alpha>))", "from cf_dag_Rel_is_iso_functor"], ["proof (chain)\npicking this:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n  op_cat\n   (cat_Rel\n     \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                       \\<alpha>", "have dag:\n    \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> : op_cat (cat_Rel \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n  op_cat\n   (cat_Rel\n     \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                       \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                               \\<alpha>", "by (simp add: is_iso_functor.axioms(1))"], ["proof (state)\nthis:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n  op_cat\n   (cat_Rel\n     \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                             \\<alpha>\n\ngoal (5 subgoals):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_id (cat_Rel \\<alpha>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. ?\\<AA> = ?\\<CC>\n 4. ?\\<BB> = ?\\<DD>\n 5. cf_smcf\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n      \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    cf_smcf (dghm_id (cat_Rel \\<alpha>))", "from cf_cn_comp_is_functorI[OF category_axioms dag dag]"], ["proof (chain)\npicking this:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n  cat_Rel\n   \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                          \\<alpha>", "show \n    \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> \\<^sub>C\\<^sub>F\\<circ> \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> : cat_Rel \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n  cat_Rel\n   \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                          \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    cat_Rel\n     \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                            \\<alpha>", "."], ["proof (state)\nthis:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n  cat_Rel\n   \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                          \\<alpha>\n\ngoal (4 subgoals):\n 1. dghm_id (cat_Rel \\<alpha>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. cat_Rel \\<alpha> = ?\\<CC>\n 3. cat_Rel \\<alpha> = ?\\<DD>\n 4. cf_smcf\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n      \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    cf_smcf (dghm_id (cat_Rel \\<alpha>))", "show \"cf_id (cat_Rel \\<alpha>) : cat_Rel \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_id (cat_Rel \\<alpha>) :\n    cat_Rel\n     \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                            \\<alpha>", "by (auto simp: category.cat_cf_id_is_functor category_axioms)"], ["proof (state)\nthis:\n  dghm_id (cat_Rel \\<alpha>) :\n  cat_Rel\n   \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                          \\<alpha>\n\ngoal (3 subgoals):\n 1. cat_Rel \\<alpha> = cat_Rel \\<alpha>\n 2. cat_Rel \\<alpha> = cat_Rel \\<alpha>\n 3. cf_smcf\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n      \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    cf_smcf (dghm_id (cat_Rel \\<alpha>))", "show \"cf_smcf (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> \\<^sub>C\\<^sub>F\\<circ> \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) = cf_smcf (smcf_id (cat_Rel \\<alpha>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n      \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n    cf_smcf (dghm_id (cat_Rel \\<alpha>))", "unfolding slicing_commute[symmetric] cat_smc_cat_Rel cf_smcf_cf_dag_Rel"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> \\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F\\<circ>\n    \\<dagger>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> =\n    dghm_id (smc_Rel \\<alpha>)", "by (simp add: smcf_cn_comp_smcf_dag_Rel_smcf_dag_Rel)"], ["proof (state)\nthis:\n  cf_smcf\n   (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha> \\<^sub>C\\<^sub>F\\<circ>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>) =\n  cf_smcf (dghm_id (cat_Rel \\<alpha>))\n\ngoal (2 subgoals):\n 1. cat_Rel \\<alpha> = cat_Rel \\<alpha>\n 2. cat_Rel \\<alpha> = cat_Rel \\<alpha>", "qed simp_all"], ["", "subsection\\<open>Isomorphism\\<close>"], ["", "context \\<Z>\nbegin"], ["", "context\nbegin"], ["", "private"], ["", "lemma cat_Rel_is_arr_isomorphism_right_vsubset:\n  assumes \"S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\"\n    and \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"\n    and \"S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\"\n    and \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\"\n  shows \"S\\<lparr>ArrVal\\<rparr> \\<subseteq>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "proof(rule vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (simp add: category_cat_Rel)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "interpret S: arr_Rel \\<alpha> S\n    rewrites \"S\\<lparr>ArrDom\\<rparr> = B\" and \"S\\<lparr>ArrCod\\<rparr> = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = B &&& S\\<lparr>ArrCod\\<rparr> = A", "using assms(1)"], ["proof (prove)\nusing this:\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = B &&& S\\<lparr>ArrCod\\<rparr> = A", "by (all\\<open>elim Rel.cat_is_arrE\\<close>) (simp_all add: cat_Rel_components)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "interpret T: arr_Rel \\<alpha> T\n    rewrites \"T\\<lparr>ArrDom\\<rparr> = A\" and \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using assms(2)"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by (all\\<open>elim Rel.cat_is_arrE\\<close>) (simp_all add: cat_Rel_components)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "interpret dag: is_iso_functor \\<alpha> \\<open>op_cat (cat_Rel \\<alpha>)\\<close> \\<open>cat_Rel \\<alpha>\\<close> \\<open>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                         \\<alpha>", "by (auto simp: cf_dag_Rel_is_iso_functor)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "from assms(2)"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "have A: \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "from assms(3)"], ["proof (chain)\npicking this:\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>", "have \"(S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T)\\<lparr>ArrVal\\<rparr> = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n\ngoal (1 subgoal):\n 1. (S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     T)\\<lparr>ArrVal\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>", "by simp"], ["proof (state)\nthis:\n  (S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "with A"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  (S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>", "have [simp]: \"S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> = vid_on A\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  (S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n   T)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    vid_on A", "unfolding cat_Rel_Comp_app[OF assms(1,2)]"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    vid_on A", "by (simp add: id_Rel_components comp_Rel_components cat_Rel_components)"], ["proof (state)\nthis:\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  vid_on A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "from assms(2)"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "have B: \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "from assms(4)"], ["proof (chain)\npicking this:\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "have \"(T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S)\\<lparr>ArrVal\\<rparr> = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (1 subgoal):\n 1. (T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     S)\\<lparr>ArrVal\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\\<lparr>ArrVal\\<rparr>", "by simp"], ["proof (state)\nthis:\n  (T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n   S)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "with B"], ["proof (chain)\npicking this:\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  (T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n   S)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\\<lparr>ArrVal\\<rparr>", "have [simp]: \"T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> = vid_on B\""], ["proof (prove)\nusing this:\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  (T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n   S)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    vid_on B", "unfolding cat_Rel_Comp_app[OF assms(2,1)]"], ["proof (prove)\nusing this:\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    vid_on B", "by (simp add: id_Rel_components comp_Rel_components cat_Rel_components)"], ["proof (state)\nthis:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  vid_on B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "fix ab"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "assume ab: \"ab \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "with S.vbrelation"], ["proof (chain)\npicking this:\n  vpairs S = S\n  ab \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "obtain a b where ab_def: \"ab = \\<langle>a, b\\<rangle>\" and \"a \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  vpairs S = S\n  ab \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = \\<langle>a, b\\<rangle>;\n         a \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis S.arr_Rel_ArrVal_vdomain S.ArrVal.vbrelation_vinE vsubsetE)"], ["proof (state)\nthis:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> B", "have \"\\<langle>a, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<langle>a, a\\<rangle>\n    \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        S\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>a, a\\<rangle>\n  \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, a\\<rangle>\n  \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      S\\<lparr>ArrVal\\<rparr>", "obtain c where \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\" and ca[intro]: \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>a, a\\<rangle>\n  \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>\\<langle>a, c\\<rangle>\n                 \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>;\n         \\<langle>c, a\\<rangle>\n         \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "have \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle>\n    \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n    False", "assume \"\\<langle>b, a\\<rangle> \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle>\n    \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n    False", "with ca"], ["proof (chain)\npicking this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>b, a\\<rangle> \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "have \"c \\<noteq> b\""], ["proof (prove)\nusing this:\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>b, a\\<rangle> \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<noteq> b", "by clarsimp"], ["proof (state)\nthis:\n  c \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle>\n    \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  c \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle>\n    \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n    False", "from ab"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "have \"\\<langle>c, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>c, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        T\\<lparr>ArrVal\\<rparr>", "unfolding ab_def"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>c, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        T\\<lparr>ArrVal\\<rparr>", "by blast"], ["proof (state)\nthis:\n  \\<langle>c, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle>\n    \\<notin>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  c \\<noteq> b\n  \\<langle>c, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>", "show False"], ["proof (prove)\nusing this:\n  c \\<noteq> b\n  \\<langle>c, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. False", "by (simp add: vid_on_iff)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "show \"ab \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. ab \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "unfolding ab_def"], ["proof (prove)\nusing this:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "by clarsimp"], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma cat_Rel_is_arr_isomorphism_left_vsubset:\n  assumes \"S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\" \n    and \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" \n    and \"S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\"\n    and \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\"\n  shows \"(T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ> \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "using assms(2,3,4) cat_Rel_is_arr_isomorphism_right_vsubset[OF assms(2,1)]"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n  \\<lbrakk>T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n           cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>;\n   S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n   cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> T\\<lparr>ArrVal\\<rparr>\n                    \\<subseteq>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n    \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "by auto"], ["", "private"], ["", "lemma is_arr_isomorphism_dag: \n  assumes \"S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\" \n    and \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" \n    and \"S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\"\n    and \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\"\n  shows \"S = \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>", "proof(rule arr_Rel_eqI[of \\<alpha>])"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Rel \\<alpha> S\n 2. arr_Rel \\<alpha>\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n 3. S\\<lparr>ArrVal\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>\n 4. S\\<lparr>ArrDom\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\n 5. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Rel \\<alpha> S\n 2. arr_Rel \\<alpha>\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n 3. S\\<lparr>ArrVal\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>\n 4. S\\<lparr>ArrDom\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\n 5. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "interpret dag: is_iso_functor \\<alpha> \\<open>op_cat (cat_Rel \\<alpha>)\\<close> \\<open>cat_Rel \\<alpha>\\<close> \\<open>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                         \\<alpha>", "by (auto simp: cf_dag_Rel_is_iso_functor)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Rel \\<alpha> S\n 2. arr_Rel \\<alpha>\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n 3. S\\<lparr>ArrVal\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>\n 4. S\\<lparr>ArrDom\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\n 5. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "from assms(1)"], ["proof (chain)\npicking this:\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "show S: \"arr_Rel \\<alpha> S\""], ["proof (prove)\nusing this:\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> S", "by (fastforce simp: cat_Rel_components(2))"], ["proof (state)\nthis:\n  arr_Rel \\<alpha> S\n\ngoal (4 subgoals):\n 1. arr_Rel \\<alpha>\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n 2. S\\<lparr>ArrVal\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>\n 3. S\\<lparr>ArrDom\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\n 4. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "from cf_dag_Rel_app_is_arr[OF assms(2)]"], ["proof (chain)\npicking this:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> : \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>B\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                               \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>A\\<rparr>", "show \"arr_Rel \\<alpha> (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> : \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>B\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n                               \\<alpha>\\<lparr>ObjMap\\<rparr>\\<lparr>A\\<rparr>\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha>\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)", "by (auto elim!: cat_Rel_is_arrE)"], ["proof (state)\nthis:\n  arr_Rel \\<alpha>\n   (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n\ngoal (3 subgoals):\n 1. S\\<lparr>ArrVal\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>\n 2. S\\<lparr>ArrDom\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\n 3. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "from assms(2)"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "have T: \"arr_Rel \\<alpha> T\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T", "by (auto simp: cat_Rel_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Rel \\<alpha> T\n\ngoal (3 subgoals):\n 1. S\\<lparr>ArrVal\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>\n 2. S\\<lparr>ArrDom\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\n 3. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "from S T assms"], ["proof (chain)\npicking this:\n  arr_Rel \\<alpha> S\n  arr_Rel \\<alpha> T\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "show \"S\\<lparr>ArrVal\\<rparr> = \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> S\n  arr_Rel \\<alpha> T\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>", "unfolding cf_dag_Rel_ArrMap_app[OF T] converse_Rel_components"], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> S\n  arr_Rel \\<alpha> T\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> =\n    (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "by (intro vsubset_antisym) \n      (\n        simp_all add: \n          cat_Rel_is_arr_isomorphism_left_vsubset \n          cat_Rel_is_arr_isomorphism_right_vsubset\n      )"], ["proof (state)\nthis:\n  S\\<lparr>ArrVal\\<rparr> =\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. S\\<lparr>ArrDom\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\n 2. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "from T assms"], ["proof (chain)\npicking this:\n  arr_Rel \\<alpha> T\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "show \"S\\<lparr>ArrDom\\<rparr> = \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\""], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> T\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrDom\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>", "unfolding cf_dag_Rel_components"], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> T\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrDom\\<rparr> =\n    VLambda (cat_Rel \\<alpha>\\<lparr>Arr\\<rparr>)\n     converse_Rel\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>", "by (auto simp: cat_cs_simps cat_Rel_cs_simps converse_Rel_components(1))"], ["proof (state)\nthis:\n  S\\<lparr>ArrDom\\<rparr> =\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "from S assms"], ["proof (chain)\npicking this:\n  arr_Rel \\<alpha> S\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "show \"S\\<lparr>ArrCod\\<rparr> = \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> S\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrCod\\<rparr> =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>", "by \n      (\n        cs_concl \n          cs_intro: cat_op_intros cat_cs_intros \n          cs_simp: cat_Rel_cs_simps cat_cs_simps\n      )"], ["proof (state)\nthis:\n  S\\<lparr>ArrCod\\<rparr> =\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_Rel_is_arr_isomorphismI[intro]:\n  assumes \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" \n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "proof(rule is_arr_isomorphismI[where ?g = \\<open>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<close>])"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n 2. is_inverse (cat_Rel \\<alpha>)\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n     T", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n 2. is_inverse (cat_Rel \\<alpha>)\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n     T", "interpret v11: v11 \\<open>T\\<lparr>ArrVal\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n 2. is_inverse (cat_Rel \\<alpha>)\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n     T", "interpret T: arr_Rel \\<alpha> T\n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using assms(1)"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by (all\\<open>elim cat_Rel_is_arrE\\<close>) (simp_all add: cat_Rel_components)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n 2. is_inverse (cat_Rel \\<alpha>)\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n     T", "interpret is_iso_functor \\<alpha> \\<open>op_cat (cat_Rel \\<alpha>)\\<close> \\<open>cat_Rel \\<alpha>\\<close> \\<open>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                         \\<alpha>", "by (simp add: cf_dag_Rel_is_iso_functor)"], ["proof (state)\ngoal (2 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n 2. is_inverse (cat_Rel \\<alpha>)\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n     T", "show \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (rule assms(1))"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. is_inverse (cat_Rel \\<alpha>)\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n     T", "show \"is_inverse (cat_Rel \\<alpha>) (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_inverse (cat_Rel \\<alpha>)\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n     T", "proof(intro is_inverseI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> : ?b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> ?a\n 2. T : ?a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> ?b\n 3. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    T =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr>\n 4. T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?b\\<rparr>", "from assms(1)"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "show dag_T: \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "by \n        (\n          cs_concl \n            cs_simp: cat_op_simps cat_Rel_cs_simps \n            cs_intro: cat_cs_intros\n        )"], ["proof (state)\nthis:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n\ngoal (3 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n 2. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    T =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n 3. T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "show T: \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (rule assms(1))"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (2 subgoals):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    T =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n 2. T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "from T T.arr_Rel_axioms v11.v11_axioms assms(3)"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  arr_Rel \\<alpha> T\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "show \n      \"\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  arr_Rel \\<alpha> T\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    T =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_Rel_cs_simps  \n            cs_intro: cat_cs_intros cat_Rel_cs_intros\n        )"], ["proof (state)\nthis:\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "from T T.arr_Rel_axioms v11.v11_axioms assms(4)"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  arr_Rel \\<alpha> T\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "show \n      \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  arr_Rel \\<alpha> T\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_Rel_cs_simps  \n            cs_intro: cat_cs_intros cat_Rel_cs_intros\n        )"], ["proof (state)\nthis:\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_inverse (cat_Rel \\<alpha>)\n   (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\n   T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_Rel_is_arr_isomorphismD[dest]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" \n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B &&&\n     v11 (T\\<lparr>ArrVal\\<rparr>)) &&&\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A &&&\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "proof-"], ["proof (state)\ngoal (4 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 4. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "show T: \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (simp add: is_arr_isomorphism_def)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "interpret T: arr_Rel \\<alpha> T\n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using T"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by (all\\<open>elim cat_Rel_is_arrE\\<close>) (simp_all add: cat_Rel_components)"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "interpret is_iso_functor \\<alpha> \\<open>op_cat (cat_Rel \\<alpha>)\\<close> \\<open>cat_Rel \\<alpha>\\<close> \\<open>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha> :\n    op_cat\n     (cat_Rel\n       \\<alpha>) \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                         \\<alpha>", "by (simp add: cf_dag_Rel_is_iso_functor)"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from is_arr_isomorphismD[OF assms(1)]"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  \\<exists>g. is_inverse (cat_Rel \\<alpha>) g T", "obtain S where \n    \"is_inverse (cat_Rel \\<alpha>) S T\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  \\<exists>g. is_inverse (cat_Rel \\<alpha>) g T\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        is_inverse (cat_Rel \\<alpha>) S T \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  is_inverse (cat_Rel \\<alpha>) S T\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from is_inverseD[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>a b.\n     S : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> a \\<and>\n     T : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> b \\<and>\n     S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n     cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<and>\n     T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n     cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>", "obtain A' B' where \"S : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\" \n    and \"T : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\"\n    and \"S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A'\\<rparr>\" \n    and \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B'\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<exists>a b.\n     S : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> a \\<and>\n     T : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> b \\<and>\n     S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n     cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<and>\n     T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n     cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>B' A'.\n        \\<lbrakk>S : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A';\n         T : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B';\n         S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n         cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A'\\<rparr>;\n         T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n         cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B'\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  T : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A'\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B'\\<rparr>\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "moreover"], ["proof (state)\nthis:\n  S : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  T : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A'\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B'\\<rparr>\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "with T"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  T : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A'\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B'\\<rparr>", "have \"A' = A\" \"B' = B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  T : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A'\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B'\\<rparr>\n\ngoal (1 subgoal):\n 1. A' = A &&& B' = B", "by auto"], ["proof (state)\nthis:\n  A' = A\n  B' = B\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "ultimately"], ["proof (chain)\npicking this:\n  S : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  T : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A'\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B'\\<rparr>\n  A' = A\n  B' = B", "have S: \"S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\" \n    and ST: \"S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\" \n    and TS: \"T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\""], ["proof (prove)\nusing this:\n  S : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  T : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A'\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B'\\<rparr>\n  A' = A\n  B' = B\n\ngoal (1 subgoal):\n 1. S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A &&&\n    S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> &&&\n    T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "by auto"], ["proof (state)\nthis:\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from S T ST TS"], ["proof (chain)\npicking this:\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "have S_def: \"S = \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\""], ["proof (prove)\nusing this:\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (1 subgoal):\n 1. S =\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>", "by (rule is_arr_isomorphism_dag)"], ["proof (state)\nthis:\n  S =\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "interpret S: arr_Rel \\<alpha> \\<open>\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<close>\n    rewrites \"(\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\\<lparr>ArrDom\\<rparr> = B\" \n      and \"(\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>)\\<lparr>ArrCod\\<rparr> = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha>\n     (\\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n       \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>) &&&\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrDom\\<rparr> =\n    B &&&\n    \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n     \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\\<lparr>ArrCod\\<rparr> =\n    A", "by (fold S_def, insert S, all\\<open>elim cat_Rel_is_arrE\\<close>) \n      (simp_all add: cat_Rel_components)"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from T.arr_Rel_axioms S_def"], ["proof (chain)\npicking this:\n  arr_Rel \\<alpha> T\n  S =\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>", "have S_T: \"S\\<lparr>ArrVal\\<rparr> = (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\""], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> T\n  S =\n  \\<dagger>\\<^sub>C\\<^sub>.\\<^sub>R\\<^sub>e\\<^sub>l\n   \\<alpha>\\<lparr>ArrMap\\<rparr>\\<lparr>T\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> =\n    (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "by (simp add: cf_dag_Rel_ArrMap_app converse_Rel_components(1))"], ["proof (state)\nthis:\n  S\\<lparr>ArrVal\\<rparr> =\n  (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from S"], ["proof (chain)\npicking this:\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "have A: \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and B: \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  S : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n\ngoal (1 subgoal):\n 1. A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr> &&&\n    B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from B TS A ST"], ["proof (chain)\npicking this:\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>", "have \n    \"(T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\\<lparr>ArrVal\\<rparr> = id_Rel B\\<lparr>ArrVal\\<rparr>\"\n    \"(S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\\<lparr>ArrVal\\<rparr> = id_Rel A\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  T \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  S \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n\ngoal (1 subgoal):\n 1. (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\\<lparr>ArrVal\\<rparr> =\n    id_Rel B\\<lparr>ArrVal\\<rparr> &&&\n    (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\\<lparr>ArrVal\\<rparr> =\n    id_Rel A\\<lparr>ArrVal\\<rparr>", "unfolding cat_Rel_Comp_app[OF S T] cat_Rel_Comp_app[OF T S]"], ["proof (prove)\nusing this:\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n\ngoal (1 subgoal):\n 1. (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\\<lparr>ArrVal\\<rparr> =\n    id_Rel B\\<lparr>ArrVal\\<rparr> &&&\n    (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\\<lparr>ArrVal\\<rparr> =\n    id_Rel A\\<lparr>ArrVal\\<rparr>", "unfolding cat_Rel_components"], ["proof (prove)\nusing this:\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S =\n  VLambda (Vset \\<alpha>) id_Rel\\<lparr>B\\<rparr>\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T =\n  VLambda (Vset \\<alpha>) id_Rel\\<lparr>A\\<rparr>\n\ngoal (1 subgoal):\n 1. (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\\<lparr>ArrVal\\<rparr> =\n    id_Rel B\\<lparr>ArrVal\\<rparr> &&&\n    (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\\<lparr>ArrVal\\<rparr> =\n    id_Rel A\\<lparr>ArrVal\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\\<lparr>ArrVal\\<rparr> =\n  id_Rel B\\<lparr>ArrVal\\<rparr>\n  (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\\<lparr>ArrVal\\<rparr> =\n  id_Rel A\\<lparr>ArrVal\\<rparr>\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "then"], ["proof (chain)\npicking this:\n  (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\\<lparr>ArrVal\\<rparr> =\n  id_Rel B\\<lparr>ArrVal\\<rparr>\n  (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\\<lparr>ArrVal\\<rparr> =\n  id_Rel A\\<lparr>ArrVal\\<rparr>", "have val_ST: \"S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> = vid_on A\" \n    and val_TS: \"T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> = vid_on B\""], ["proof (prove)\nusing this:\n  (T \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l S)\\<lparr>ArrVal\\<rparr> =\n  id_Rel B\\<lparr>ArrVal\\<rparr>\n  (S \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l T)\\<lparr>ArrVal\\<rparr> =\n  id_Rel A\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    vid_on A &&&\n    T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    vid_on B", "unfolding comp_Rel_components id_Rel_components"], ["proof (prove)\nusing this:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  vid_on B\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  vid_on A\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n    vid_on A &&&\n    T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n    vid_on B", "by simp_all"], ["proof (state)\nthis:\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  vid_on A\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  vid_on B\n\ngoal (3 subgoals):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 3. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "show \"v11 (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)", "proof(rule v11I)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (T\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "show \"vsv (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (T\\<lparr>ArrVal\\<rparr>)", "proof(rule vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume prems: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\" \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. vbrelation (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from prems(1) S_T"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  S\\<lparr>ArrVal\\<rparr> =\n  (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "have \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  S\\<lparr>ArrVal\\<rparr> =\n  (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. vbrelation (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with prems(2) val_TS"], ["proof (chain)\npicking this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  vid_on B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "have \"\\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on B\""], ["proof (prove)\nusing this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  vid_on B\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on B", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on B\n\ngoal (2 subgoals):\n 1. vbrelation (T\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on B", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on B\n\ngoal (1 subgoal):\n 1. b = c", "by clarsimp"], ["proof (state)\nthis:\n  b = c\n\ngoal (1 subgoal):\n 1. vbrelation (T\\<lparr>ArrVal\\<rparr>)", "qed (auto simp: T.ArrVal.vbrelation_axioms)"], ["proof (state)\nthis:\n  vsv (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "show \"vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "proof(rule vsvI)"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "fix a b c"], ["proof (state)\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "assume prems: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\" \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\""], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "with S_T"], ["proof (chain)\npicking this:\n  S\\<lparr>ArrVal\\<rparr> =\n  (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "have \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\" and \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  S\\<lparr>ArrVal\\<rparr> =\n  (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> &&&\n    \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "moreover"], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "from prems"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>", "have \"\\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\" and \"\\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n  \\<langle>a, c\\<rangle>\n  \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> &&&\n    \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>", "have \"\\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on A\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on A", "using val_ST"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\n  \\<langle>b, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  \\<langle>c, a\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  vid_on A\n\ngoal (1 subgoal):\n 1. \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on A", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on A\n\ngoal (2 subgoals):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n 2. \\<And>a b c.\n       \\<lbrakk>\\<langle>a, b\\<rangle>\n                \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>;\n        \\<langle>a, c\\<rangle>\n        \\<in>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>\\<rbrakk>\n       \\<Longrightarrow> b = c", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on A", "show \"b = c\""], ["proof (prove)\nusing this:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on A\n\ngoal (1 subgoal):\n 1. b = c", "by clarsimp"], ["proof (state)\nthis:\n  b = c\n\ngoal (1 subgoal):\n 1. vbrelation ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)", "qed auto"], ["proof (state)\nthis:\n  vsv ((T\\<lparr>ArrVal\\<rparr>)\\<inverse>\\<^sub>\\<circ>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 2. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "show \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "assume \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "with val_ST"], ["proof (chain)\npicking this:\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  vid_on A\n  a \\<in>\\<^sub>\\<circ> A", "have \"\\<langle>a, a\\<rangle> \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> =\n  vid_on A\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<langle>a, a\\<rangle>\n    \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        T\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>a, a\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, a\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<langle>a, a\\<rangle>\n  \\<in>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      T\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> A", "qed (use T.arr_Rel_ArrVal_vdomain in auto)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "show \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "fix b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "assume \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "with val_TS"], ["proof (chain)\npicking this:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  vid_on B\n  b \\<in>\\<^sub>\\<circ> B", "have \"\\<langle>b, b\\<rangle> \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> S\\<lparr>ArrVal\\<rparr> =\n  vid_on B\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<langle>b, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                        S\\<lparr>ArrVal\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<langle>b, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      S\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  \\<langle>b, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      S\\<lparr>ArrVal\\<rparr>", "show \"b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<langle>b, b\\<rangle>\n  \\<in>\\<^sub>\\<circ> T\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                      S\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (T\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> B", "qed (use T.arr_Rel_ArrVal_vrange in auto)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "lemmas [cat_Rel_cs_simps] = \\<Z>.cat_Rel_is_arr_isomorphismD(3,4)"], ["", "lemma (in \\<Z>) cat_Rel_is_arr_isomorphism:\n  \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<longleftrightarrow>\n    T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<and>\n    v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and>\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B =\n    (T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<and>\n     v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n     \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and>\n     \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B)", "by auto"], ["", "subsection\\<open>The inverse arrow\\<close>"], ["", "lemma (in \\<Z>) cat_Rel_the_inverse:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"\n  shows \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Rel \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Rel \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "unfolding the_inverse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE g. is_inverse (cat_Rel \\<alpha>) g T) =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "proof(rule the_equality)"], ["proof (state)\ngoal (2 subgoals):\n 1. is_inverse (cat_Rel \\<alpha>) (T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l) T\n 2. \\<And>g.\n       is_inverse (cat_Rel \\<alpha>) g T \\<Longrightarrow>\n       g = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["proof (state)\ngoal (2 subgoals):\n 1. is_inverse (cat_Rel \\<alpha>) (T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l) T\n 2. \\<And>g.\n       is_inverse (cat_Rel \\<alpha>) g T \\<Longrightarrow>\n       g = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "have T: \"T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by auto"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (2 subgoals):\n 1. is_inverse (cat_Rel \\<alpha>) (T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l) T\n 2. \\<And>g.\n       is_inverse (cat_Rel \\<alpha>) g T \\<Longrightarrow>\n       g = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "interpret T: arr_Rel \\<alpha> T\n    rewrites \"T\\<lparr>ArrDom\\<rparr> = A\" and \"T\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "using T"], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = A &&& T\\<lparr>ArrCod\\<rparr> = B", "by (all\\<open>elim cat_Rel_is_arrE\\<close>) (simp_all add: cat_Rel_components)"], ["proof (state)\ngoal (2 subgoals):\n 1. is_inverse (cat_Rel \\<alpha>) (T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l) T\n 2. \\<And>g.\n       is_inverse (cat_Rel \\<alpha>) g T \\<Longrightarrow>\n       g = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from assms T T.arr_Rel_axioms cat_Rel_is_arr_isomorphismD(2)[OF assms]"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  arr_Rel \\<alpha> T\n  v11 (T\\<lparr>ArrVal\\<rparr>)", "show inv_T_T: \"is_inverse (cat_Rel \\<alpha>) (T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l) T\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  T : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  arr_Rel \\<alpha> T\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. is_inverse (cat_Rel \\<alpha>) (T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l) T", "by (intro is_inverseI[where a=A and b=B])\n      (\n        cs_concl \n          cs_simp: cat_cs_simps cat_Rel_cs_simps\n          cs_intro: cat_Rel_cs_intros cat_cs_intros\n      )+"], ["proof (state)\nthis:\n  is_inverse (cat_Rel \\<alpha>) (T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l) T\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       is_inverse (cat_Rel \\<alpha>) g T \\<Longrightarrow>\n       g = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g.\n       is_inverse (cat_Rel \\<alpha>) g T \\<Longrightarrow>\n       g = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "assume prems: \"is_inverse (cat_Rel \\<alpha>) S T\""], ["proof (state)\nthis:\n  is_inverse (cat_Rel \\<alpha>) S T\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       is_inverse (cat_Rel \\<alpha>) g T \\<Longrightarrow>\n       g = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "show \"S = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "by (rule category.cat_is_inverse_eq[OF Rel.category_axioms prems inv_T_T])"], ["proof (state)\nthis:\n  S = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_Rel_cs_simps] = \\<Z>.cat_Rel_the_inverse"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}