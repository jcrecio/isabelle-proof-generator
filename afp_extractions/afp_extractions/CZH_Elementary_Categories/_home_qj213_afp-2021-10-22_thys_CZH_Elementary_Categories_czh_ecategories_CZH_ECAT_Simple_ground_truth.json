{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_Simple.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma cat_0_components:\n  shows \"cat_0\\<lparr>Obj\\<rparr> = 0\"\n    and \"cat_0\\<lparr>Arr\\<rparr> = 0\"\n    and \"cat_0\\<lparr>Dom\\<rparr> = 0\"\n    and \"cat_0\\<lparr>Cod\\<rparr> = 0\"\n    and \"cat_0\\<lparr>Comp\\<rparr> = 0\"\n    and \"cat_0\\<lparr>CId\\<rparr> = 0\"", "lemma smc_cat_0: \"cat_smc cat_0 = smc_0\"", "lemmas_with (in \\<Z>) [folded smc_cat_0, unfolded slicing_simps]: \n  cat_0_is_arr_iff = smc_0_is_arr_iff", "lemma (in \\<Z>) category_cat_0: \"category \\<alpha> cat_0\"", "lemma cf_0_components:\n  shows \"cf_0 \\<AA>\\<lparr>ObjMap\\<rparr> = 0\"\n    and \"cf_0 \\<AA>\\<lparr>ArrMap\\<rparr> = 0\"\n    and \"cf_0 \\<AA>\\<lparr>HomDom\\<rparr> = cat_0\"\n    and \"cf_0 \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>\"", "lemma cf_smcf_cf_0: \"cf_smcf (cf_0 \\<AA>) = smcf_0 (cat_smc \\<AA>)\"", "lemma (in \\<Z>) cf_0_is_functor: \n  assumes \"category \\<alpha> \\<AA>\"\n  shows \"cf_0 \\<AA> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<AA>\"", "lemma cat_1_components:\n  shows \"cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr> = set {\\<aa>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr> = set {\\<ff>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr> = set {\\<langle>\\<ff>, \\<aa>\\<rangle>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr> = set {\\<langle>\\<ff>, \\<aa>\\<rangle>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr> = set {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr> = set {\\<langle>\\<aa>, \\<ff>\\<rangle>}\"", "lemma smc_cat_1: \"cat_smc (cat_1 \\<aa> \\<ff>) = smc_1 \\<aa> \\<ff>\"", "lemmas_with (in \\<Z>) [folded smc_cat_1, unfolded slicing_simps]: \n  cat_1_is_arrI = smc_1_is_arrI\n  and cat_1_is_arrD = smc_1_is_arrD\n  and cat_1_is_arrE = smc_1_is_arrE\n  and cat_1_is_arr_iff = smc_1_is_arr_iff\n  and cat_1_Comp_app[cat_cs_simps] = smc_1_Comp_app", "lemma cat_1_ObjI[cat_cs_intros]:\n  assumes \"a = \\<aa>\"\n  shows \"a \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff> \\<lparr>Obj\\<rparr>\"", "lemma cat_1_CId_app: \"cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> = \\<ff>\"", "lemma cat_1_is_arrI:\n  assumes \"f = \\<ff>\" and \"a = \\<aa>\" and \"b = \\<aa>\"\n  shows \"f : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> b\"", "lemma (in \\<Z>) category_cat_1: \n  assumes \"\\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n  shows \"category \\<alpha> (cat_1 \\<aa> \\<ff>)\"", "lemmas [cat_cs_intros] = \\<Z>.category_cat_1", "lemma (in \\<Z>) finite_category_cat_1: \n  assumes \"\\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n  shows \"finite_category \\<alpha> (cat_1 \\<aa> \\<ff>)\"", "lemmas [cat_small_cs_intros] = \\<Z>.finite_category_cat_1", "lemma (in \\<Z>) cat_1_op[cat_op_simps]:\n  assumes \"\\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"op_cat (cat_1 \\<aa> \\<ff>) = cat_1 \\<aa> \\<ff>\"", "lemma cf_const_if_HomCod_is_cat_1:\n  assumes \"\\<KK> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 \\<aa> \\<ff>\"\n  shows \"\\<KK> = cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\"", "lemma cf_const_if_HomDom_is_cat_1:\n  assumes \"\\<KK> : cat_1 \\<aa> \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<KK> = cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\""], "translations": [["", "lemma cat_0_components:\n  shows \"cat_0\\<lparr>Obj\\<rparr> = 0\"\n    and \"cat_0\\<lparr>Arr\\<rparr> = 0\"\n    and \"cat_0\\<lparr>Dom\\<rparr> = 0\"\n    and \"cat_0\\<lparr>Cod\\<rparr> = 0\"\n    and \"cat_0\\<lparr>Comp\\<rparr> = 0\"\n    and \"cat_0\\<lparr>CId\\<rparr> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cat_0\\<lparr>Obj\\<rparr> = []\\<^sub>\\<circ> &&&\n     cat_0\\<lparr>Arr\\<rparr> = []\\<^sub>\\<circ> &&&\n     cat_0\\<lparr>Dom\\<rparr> = []\\<^sub>\\<circ>) &&&\n    cat_0\\<lparr>Cod\\<rparr> = []\\<^sub>\\<circ> &&&\n    cat_0\\<lparr>Comp\\<rparr> = []\\<^sub>\\<circ> &&&\n    cat_0\\<lparr>CId\\<rparr> = []\\<^sub>\\<circ>", "unfolding cat_0_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     []\\<^sub>\\<circ> &&&\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     []\\<^sub>\\<circ> &&&\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     []\\<^sub>\\<circ>) &&&\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     []\\<^sub>\\<circ>,\n     []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    []\\<^sub>\\<circ> &&&\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     []\\<^sub>\\<circ>,\n     []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    []\\<^sub>\\<circ> &&&\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     []\\<^sub>\\<circ>,\n     []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    []\\<^sub>\\<circ>", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_cat_0: \"cat_smc cat_0 = smc_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc cat_0 = smc_0", "unfolding cat_smc_def cat_0_def smc_0_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     []\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "lemmas_with (in \\<Z>) [folded smc_cat_0, unfolded slicing_simps]: \n  cat_0_is_arr_iff = smc_0_is_arr_iff"], ["", "subsubsection\\<open>\\<open>0\\<close> is a category\\<close>"], ["", "lemma (in \\<Z>) category_cat_0: \"category \\<alpha> cat_0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> cat_0", "proof(intro categoryI)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence cat_0\n 3. vsv (cat_0\\<lparr>CId\\<rparr>)\n 4. vcard cat_0 = 6\\<^sub>\\<nat>\n 5. semicategory \\<alpha> (cat_smc cat_0)\n 6. \\<D>\\<^sub>\\<circ> (cat_0\\<lparr>CId\\<rparr>) = cat_0\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_0\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_0\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_0\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_0\\<^esub> b \\<Longrightarrow>\n       cat_0\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_0\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_0\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_0\\<^esub>\n       cat_0\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vfsequence cat_0\" \"vcard cat_0 = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence cat_0 &&& vcard cat_0 = 6\\<^sub>\\<nat>", "by (simp_all add: cat_0_def nat_omega_simps)"], ["proof (state)\nthis:\n  vfsequence cat_0\n  vcard cat_0 = 6\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_0\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (cat_smc cat_0)\n 4. \\<D>\\<^sub>\\<circ> (cat_0\\<lparr>CId\\<rparr>) = cat_0\\<lparr>Obj\\<rparr>\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_0\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_0\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_0\\<^esub> a\n 6. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_0\\<^esub> b \\<Longrightarrow>\n       cat_0\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_0\\<^esub>\n       f =\n       f\n 7. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_0\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_0\\<^esub>\n       cat_0\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "qed \n  (\n    auto simp: \n      cat_0_components \\<Z>_axioms cat_0_is_arr_iff smc_cat_0 \\<Z>.semicategory_smc_0\n  )"], ["", "subsection\\<open>Empty functors\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition cf_0 :: \"V \\<Rightarrow> V\"\n  where \"cf_0 \\<AA> = [0, 0, cat_0, \\<AA>]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cf_0_components:\n  shows \"cf_0 \\<AA>\\<lparr>ObjMap\\<rparr> = 0\"\n    and \"cf_0 \\<AA>\\<lparr>ArrMap\\<rparr> = 0\"\n    and \"cf_0 \\<AA>\\<lparr>HomDom\\<rparr> = cat_0\"\n    and \"cf_0 \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cf_0 \\<AA>\\<lparr>ObjMap\\<rparr> = []\\<^sub>\\<circ> &&&\n     cf_0 \\<AA>\\<lparr>ArrMap\\<rparr> = []\\<^sub>\\<circ>) &&&\n    cf_0 \\<AA>\\<lparr>HomDom\\<rparr> = cat_0 &&&\n    cf_0 \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>", "unfolding cf_0_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, cat_0,\n      \\<AA>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     []\\<^sub>\\<circ> &&&\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, cat_0,\n      \\<AA>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     []\\<^sub>\\<circ>) &&&\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, cat_0,\n     \\<AA>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    cat_0 &&&\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, cat_0,\n     \\<AA>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<AA>", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma cf_smcf_cf_0: \"cf_smcf (cf_0 \\<AA>) = smcf_0 (cat_smc \\<AA>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf (cf_0 \\<AA>) = smcf_0 (cat_smc \\<AA>)", "unfolding \n    dg_field_simps dghm_field_simps \n    cf_smcf_def cf_0_def smc_0_def cat_0_def smcf_0_def cat_smc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n      \\<AA>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n      \\<AA>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [[[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n     [[[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n       [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n        []\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n       \\<AA>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n    [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, []\\<^sub>\\<circ>,\n      []\\<^sub>\\<circ>, []\\<^sub>\\<circ>]\\<^sub>\\<circ>,\n     [\\<AA>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      \\<AA>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<AA>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n      \\<AA>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n      \\<AA>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "subsubsection\\<open>Empty functor is a faithful functor\\<close>"], ["", "lemma (in \\<Z>) cf_0_is_functor: \n  assumes \"category \\<alpha> \\<AA>\"\n  shows \"cf_0 \\<AA> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_0 \\<AA> :\n    cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof(rule is_ft_functorI)"], ["proof (state)\ngoal (2 subgoals):\n 1. cf_0 \\<AA> :\n    cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n 2. cf_smcf (cf_0 \\<AA>) :\n    cat_smc\n     cat_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                     \\<AA>", "show \"cf_0 \\<AA> : cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_0 \\<AA> :\n    cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "proof(rule is_functorI, unfold smc_cat_0 cf_smcf_cf_0)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cf_0 \\<AA>)\n 3. category \\<alpha> cat_0\n 4. category \\<alpha> \\<AA>\n 5. vcard (cf_0 \\<AA>) = 4\\<^sub>\\<nat>\n 6. smcf_0 (cat_smc \\<AA>) :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n  \\<AA>\n 7. cf_0 \\<AA>\\<lparr>HomDom\\<rparr> = cat_0\n 8. cf_0 \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>\n 9. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> cat_0\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cf_0\n        \\<AA>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_0\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       \\<AA>\\<lparr>CId\\<rparr>\\<lparr>cf_0\n  \\<AA>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"vfsequence (cf_0 \\<AA>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cf_0 \\<AA>)", "unfolding cf_0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, cat_0, \\<AA>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (cf_0 \\<AA>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> cat_0\n 3. category \\<alpha> \\<AA>\n 4. vcard (cf_0 \\<AA>) = 4\\<^sub>\\<nat>\n 5. smcf_0 (cat_smc \\<AA>) :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n  \\<AA>\n 6. cf_0 \\<AA>\\<lparr>HomDom\\<rparr> = cat_0\n 7. cf_0 \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>\n 8. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> cat_0\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cf_0\n        \\<AA>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_0\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       \\<AA>\\<lparr>CId\\<rparr>\\<lparr>cf_0\n  \\<AA>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"vcard (cf_0 \\<AA>) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cf_0 \\<AA>) = 4\\<^sub>\\<nat>", "unfolding cf_0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard [[]\\<^sub>\\<circ>, []\\<^sub>\\<circ>, cat_0, \\<AA>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cf_0 \\<AA>) = 4\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> cat_0\n 3. category \\<alpha> \\<AA>\n 4. smcf_0 (cat_smc \\<AA>) :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n  \\<AA>\n 5. cf_0 \\<AA>\\<lparr>HomDom\\<rparr> = cat_0\n 6. cf_0 \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>\n 7. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> cat_0\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cf_0\n        \\<AA>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_0\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       \\<AA>\\<lparr>CId\\<rparr>\\<lparr>cf_0\n  \\<AA>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "from \\<Z>.smcf_0_is_semifunctor assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<Z> ?\\<alpha>; semicategory ?\\<alpha> ?\\<AA>\\<rbrakk>\n  \\<Longrightarrow> smcf_0 ?\\<AA> :\n                    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>?\\<alpha>\\<^esub> ?\\<AA>\n  category \\<alpha> \\<AA>", "show \n      \"smcf_0 (cat_smc \\<AA>) : smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<AA>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Z> ?\\<alpha>; semicategory ?\\<alpha> ?\\<AA>\\<rbrakk>\n  \\<Longrightarrow> smcf_0 ?\\<AA> :\n                    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>?\\<alpha>\\<^esub> ?\\<AA>\n  category \\<alpha> \\<AA>\n\ngoal (1 subgoal):\n 1. smcf_0 (cat_smc \\<AA>) :\n    smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n  \\<AA>", "by auto"], ["proof (state)\nthis:\n  smcf_0 (cat_smc \\<AA>) :\n  smc_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_smc\n\\<AA>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> cat_0\n 3. category \\<alpha> \\<AA>\n 4. cf_0 \\<AA>\\<lparr>HomDom\\<rparr> = cat_0\n 5. cf_0 \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>\n 6. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> cat_0\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cf_0\n        \\<AA>\\<lparr>ArrMap\\<rparr>\\<lparr>cat_0\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       \\<AA>\\<lparr>CId\\<rparr>\\<lparr>cf_0\n  \\<AA>\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "qed (auto simp: assms category_cat_0 cat_0_components cf_0_components)"], ["proof (state)\nthis:\n  cf_0 \\<AA> :\n  cat_0 \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. cf_smcf (cf_0 \\<AA>) :\n    cat_smc\n     cat_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                     \\<AA>", "show \"cf_smcf (cf_0 \\<AA>) : cat_smc cat_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_smcf (cf_0 \\<AA>) :\n    cat_smc\n     cat_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                     \\<AA>", "by \n      (\n        auto simp:\n          assms \n          \\<Z>_axioms\n          \\<Z>.smcf_0_is_semifunctor  \n          category.cat_semicategory \n          cf_smcf_cf_0 \n          smc_cat_0\n      )"], ["proof (state)\nthis:\n  cf_smcf (cf_0 \\<AA>) :\n  cat_smc\n   cat_0 \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>f\\<^sub>a\\<^sub>i\\<^sub>t\\<^sub>h\\<^sub>f\\<^sub>u\\<^sub>l\\<^bsub>\\<alpha>\\<^esub> cat_smc\n                                   \\<AA>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>\\<open>1\\<close>: category with one object and one arrow\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See Chapter I-2 in \\cite{mac_lane_categories_2010}.\\<close>"], ["", "definition cat_1 :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"cat_1 \\<aa> \\<ff> =\n    [\n      set {\\<aa>},\n      set {\\<ff>},\n      set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      set {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      set {\\<langle>\\<aa>, \\<ff>\\<rangle>}\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cat_1_components:\n  shows \"cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr> = set {\\<aa>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr> = set {\\<ff>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr> = set {\\<langle>\\<ff>, \\<aa>\\<rangle>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr> = set {\\<langle>\\<ff>, \\<aa>\\<rangle>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr> = set {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>}\"\n    and \"cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr> = set {\\<langle>\\<aa>, \\<ff>\\<rangle>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {\\<aa>} &&&\n     cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {\\<ff>} &&&\n     cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr> =\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>}) &&&\n    cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>} &&&\n    cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>} &&&\n    cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>\\<aa>, \\<ff>\\<rangle>}", "unfolding cat_1_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>\\<aa>,\n                 \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set {\\<aa>} &&&\n     [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>\\<aa>,\n                 \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set {\\<ff>} &&&\n     [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>\\<aa>,\n                 \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>}) &&&\n    [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n     ZFC_in_HOL.set {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n     ZFC_in_HOL.set\n      {\\<langle>\\<aa>,\n                \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>} &&&\n    [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n     ZFC_in_HOL.set {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n     ZFC_in_HOL.set\n      {\\<langle>\\<aa>,\n                \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    ZFC_in_HOL.set\n     {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>} &&&\n    [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n     ZFC_in_HOL.set {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n     ZFC_in_HOL.set\n      {\\<langle>\\<aa>,\n                \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    ZFC_in_HOL.set {\\<langle>\\<aa>, \\<ff>\\<rangle>}", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma smc_cat_1: \"cat_smc (cat_1 \\<aa> \\<ff>) = smc_1 \\<aa> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc (cat_1 \\<aa> \\<ff>) = smc_1 \\<aa> \\<ff>", "unfolding cat_smc_def cat_1_def smc_1_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [[ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>\\<aa>,\n                 \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>\\<aa>,\n                 \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>\\<aa>,\n                 \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr>,\n     [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>\\<aa>,\n                 \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr>,\n     [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>\\<aa>,\n                 \\<ff>\\<rangle>}]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n     ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n     ZFC_in_HOL.set\n      {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>}]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["", "lemmas_with (in \\<Z>) [folded smc_cat_1, unfolded slicing_simps]: \n  cat_1_is_arrI = smc_1_is_arrI\n  and cat_1_is_arrD = smc_1_is_arrD\n  and cat_1_is_arrE = smc_1_is_arrE\n  and cat_1_is_arr_iff = smc_1_is_arr_iff\n  and cat_1_Comp_app[cat_cs_simps] = smc_1_Comp_app"], ["", "subsubsection\\<open>Object\\<close>"], ["", "lemma cat_1_ObjI[cat_cs_intros]:\n  assumes \"a = \\<aa>\"\n  shows \"a \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff> \\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>", "unfolding cat_1_components(1) assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<aa> \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>}", "by simp"], ["", "subsubsection\\<open>Identity\\<close>"], ["", "lemma cat_1_CId_app: \"cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> = \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr> = \\<ff>", "unfolding cat_1_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<langle>\\<aa>, \\<ff>\\<rangle>}\\<lparr>\\<aa>\\<rparr> =\n    \\<ff>", "by simp"], ["", "subsubsection\\<open>Arrow with a domain and a codomain\\<close>"], ["", "lemma cat_1_is_arrI:\n  assumes \"f = \\<ff>\" and \"a = \\<aa>\" and \"b = \\<aa>\"\n  shows \"f : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> b", "by (rule is_arrI, unfold assms cat_1_components) auto"], ["", "subsubsection\\<open>\\<open>1\\<close> is a category\\<close>"], ["", "lemma (in \\<Z>) category_cat_1: \n  assumes \"\\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n  shows \"category \\<alpha> (cat_1 \\<aa> \\<ff>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_1 \\<aa> \\<ff>)", "proof(intro categoryI, unfold smc_cat_1)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_1 \\<aa> \\<ff>)\n 3. vsv (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_1 \\<aa> \\<ff>) = 6\\<^sub>\\<nat>\n 5. semicategory \\<alpha> (smc_1 \\<aa> \\<ff>)\n 6. \\<D>\\<^sub>\\<circ> (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>) =\n    cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_1 \\<aa>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_1 \\<aa>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> b \\<Longrightarrow>\n       cat_1 \\<aa>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub>\n       cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vfsequence (cat_1 \\<aa> \\<ff>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cat_1 \\<aa> \\<ff>)", "unfolding cat_1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<aa>, \\<ff>\\<rangle>}]\\<^sub>\\<circ>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vfsequence (cat_1 \\<aa> \\<ff>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>)\n 3. vcard (cat_1 \\<aa> \\<ff>) = 6\\<^sub>\\<nat>\n 4. semicategory \\<alpha> (smc_1 \\<aa> \\<ff>)\n 5. \\<D>\\<^sub>\\<circ> (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>) =\n    cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n 6. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_1 \\<aa>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_1 \\<aa>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> a\n 7. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> b \\<Longrightarrow>\n       cat_1 \\<aa>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub>\n       f =\n       f\n 8. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub>\n       cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vcard (cat_1 \\<aa> \\<ff>) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cat_1 \\<aa> \\<ff>) = 6\\<^sub>\\<nat>", "unfolding cat_1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [ZFC_in_HOL.set {\\<aa>}, ZFC_in_HOL.set {\\<ff>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<ff>, \\<aa>\\<rangle>},\n      ZFC_in_HOL.set\n       {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>},\n      ZFC_in_HOL.set {\\<langle>\\<aa>, \\<ff>\\<rangle>}]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cat_1 \\<aa> \\<ff>) = 6\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_1 \\<aa> \\<ff>)\n 4. \\<D>\\<^sub>\\<circ> (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>) =\n    cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_1 \\<aa>\n                              \\<ff>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_1 \\<aa>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> a\n 6. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> b \\<Longrightarrow>\n       cat_1 \\<aa>\n        \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub>\n       f =\n       f\n 7. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_1 \\<aa> \\<ff>\\<^esub>\n       cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "qed (auto simp: assms semicategory_smc_1 cat_1_is_arr_iff cat_1_components)"], ["", "lemmas [cat_cs_intros] = \\<Z>.category_cat_1"], ["", "lemma (in \\<Z>) finite_category_cat_1: \n  assumes \"\\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n  shows \"finite_category \\<alpha> (cat_1 \\<aa> \\<ff>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_category \\<alpha> (cat_1 \\<aa> \\<ff>)", "by (intro finite_categoryI')\n    (auto simp: cat_1_components intro: category_cat_1[OF assms])"], ["", "lemmas [cat_small_cs_intros] = \\<Z>.finite_category_cat_1"], ["", "subsubsection\\<open>Opposite of the category \\<open>1\\<close>\\<close>"], ["", "lemma (in \\<Z>) cat_1_op[cat_op_simps]:\n  assumes \"\\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"\\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"op_cat (cat_1 \\<aa> \\<ff>) = cat_1 \\<aa> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat (cat_1 \\<aa> \\<ff>) = cat_1 \\<aa> \\<ff>", "proof(rule cat_eqI, unfold cat_op_simps)"], ["proof (state)\ngoal (8 subgoals):\n 1. category ?\\<alpha> (op_cat (cat_1 \\<aa> \\<ff>))\n 2. category ?\\<alpha> (cat_1 \\<aa> \\<ff>)\n 3. cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n 4. cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>\n 5. cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr>\n 6. cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr>\n 7. op_cat (cat_1 \\<aa> \\<ff>)\\<lparr>Comp\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr>\n 8. cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"category \\<alpha> (op_cat (cat_1 \\<aa> \\<ff>))\""], ["proof (prove)\nusing this:\n  \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat (cat_1 \\<aa> \\<ff>))", "by (cs_concl cs_intro: cat_cs_intros cat_op_intros)"], ["proof (state)\nthis:\n  category \\<alpha> (op_cat (cat_1 \\<aa> \\<ff>))\n\ngoal (7 subgoals):\n 1. category \\<alpha> (cat_1 \\<aa> \\<ff>)\n 2. cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n 3. cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>\n 4. cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr>\n 5. cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr>\n 6. op_cat (cat_1 \\<aa> \\<ff>)\\<lparr>Comp\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr>\n 7. cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"category \\<alpha> (cat_1 \\<aa> \\<ff>)\""], ["proof (prove)\nusing this:\n  \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_1 \\<aa> \\<ff>)", "by (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  category \\<alpha> (cat_1 \\<aa> \\<ff>)\n\ngoal (6 subgoals):\n 1. cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n 2. cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>\n 3. cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr>\n 4. cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr>\n 5. op_cat (cat_1 \\<aa> \\<ff>)\\<lparr>Comp\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr>\n 6. cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>", "show \"op_cat (cat_1 \\<aa> \\<ff>)\\<lparr>Comp\\<rparr> = cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. op_cat (cat_1 \\<aa> \\<ff>)\\<lparr>Comp\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr>", "unfolding cat_1_components op_cat_components fflip_vsingleton"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>} =\n    ZFC_in_HOL.set {\\<langle>[\\<ff>, \\<ff>]\\<^sub>\\<circ>, \\<ff>\\<rangle>}", ".."], ["proof (state)\nthis:\n  op_cat (cat_1 \\<aa> \\<ff>)\\<lparr>Comp\\<rparr> =\n  cat_1 \\<aa> \\<ff>\\<lparr>Comp\\<rparr>\n\ngoal (5 subgoals):\n 1. cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n 2. cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>\n 3. cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr>\n 4. cat_1 \\<aa> \\<ff>\\<lparr>Dom\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>Cod\\<rparr>\n 5. cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr> =\n    cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>", "qed (simp_all add: cat_1_components)"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma cf_const_if_HomCod_is_cat_1:\n  assumes \"\\<KK> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 \\<aa> \\<ff>\"\n  shows \"\\<KK> = cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)", "proof(rule cf_eqI)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<KK> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 4. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "interpret \\<KK>: is_functor \\<alpha> \\<BB> \\<open>cat_1 \\<aa> \\<ff>\\<close> \\<KK>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 \\<aa>\n                        \\<ff>", "by (rule assms(1))"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<KK> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 4. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "show \"cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 \\<aa> \\<ff>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>) :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 \\<aa>\n                        \\<ff>", "by (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n   (cat_1 \\<aa> \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>) :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_1 \\<aa> \\<ff>\n\ngoal (5 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 3. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 4. ?\\<AA> = \\<BB>\n 5. ?\\<BB> = cat_1 \\<aa> \\<ff>", "have ObjMap_dom_lhs: \"\\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr>", "by (simp add: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ObjMap\\<rparr>) =\n  \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (5 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 3. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 4. ?\\<AA> = \\<BB>\n 5. ?\\<BB> = cat_1 \\<aa> \\<ff>", "have ObjMap_dom_rhs: \"\\<D>\\<^sub>\\<circ> (cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\\<lparr>ObjMap\\<rparr>) = \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n       (cat_1 \\<aa>\n         \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n    \\<BB>\\<lparr>Obj\\<rparr>", "by (simp add: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n  \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (5 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 3. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 4. ?\\<AA> = \\<BB>\n 5. ?\\<BB> = cat_1 \\<aa> \\<ff>", "have ArrMap_dom_lhs: \"\\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ArrMap\\<rparr>) =\n    \\<BB>\\<lparr>Arr\\<rparr>", "by (simp add: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ArrMap\\<rparr>) =\n  \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (5 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 3. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 4. ?\\<AA> = \\<BB>\n 5. ?\\<BB> = cat_1 \\<aa> \\<ff>", "have ArrMap_dom_rhs: \"\\<D>\\<^sub>\\<circ> (cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\\<lparr>ArrMap\\<rparr>) = \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n       (cat_1 \\<aa>\n         \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>) =\n    \\<BB>\\<lparr>Arr\\<rparr>", "by (simp add: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>) =\n  \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (5 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 3. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 4. ?\\<AA> = \\<BB>\n 5. ?\\<BB> = cat_1 \\<aa> \\<ff>", "show \"\\<KK>\\<lparr>ObjMap\\<rparr> = cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>", "proof(rule vsv_eqI, unfold ObjMap_dom_lhs ObjMap_dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. \\<BB>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. \\<BB>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "assume prems: \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. \\<BB>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have \"\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n    \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>", "by (auto intro: \\<KK>.cf_ObjMap_app_in_HomCod_Obj)"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. \\<BB>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>", "have \"\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<aa>\""], ["proof (prove)\nusing this:\n  \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<aa>", "by (auto simp: cat_1_components)"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<aa>\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. \\<BB>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "with prems"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<aa>", "show \"\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \\<aa>\n\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "by (auto simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n  dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n   (cat_1 \\<aa>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. \\<BB>\\<lparr>Obj\\<rparr> = \\<BB>\\<lparr>Obj\\<rparr>", "qed (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ObjMap\\<rparr> =\n  dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n   (cat_1 \\<aa>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n\ngoal (4 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 3. ?\\<AA> = \\<BB>\n 4. ?\\<BB> = cat_1 \\<aa> \\<ff>", "show \"\\<KK>\\<lparr>ArrMap\\<rparr> = cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>", "proof(rule vsv_eqI, unfold ArrMap_dom_lhs ArrMap_dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. \\<BB>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. \\<BB>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "assume prems: \"a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. \\<BB>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>", "have \"\\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n    \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>", "by (auto intro: \\<KK>.cf_ArrMap_app_in_HomCod_Arr)"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. \\<BB>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>", "have \"\\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> = \\<ff>\""], ["proof (prove)\nusing this:\n  \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_1 \\<aa> \\<ff>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> = \\<ff>", "by (auto simp: cat_1_components)"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> = \\<ff>\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. \\<BB>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n        (cat_1 \\<aa>\n          \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "with prems"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> = \\<ff>", "show \"\\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> = cf_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> = \\<ff>\n\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n    dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n     (cat_1 \\<aa>\n       \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "by (auto simp: cat_1_CId_app cat_cs_simps)"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n  dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n   (cat_1 \\<aa>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n          (cat_1 \\<aa>\n            \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. \\<BB>\\<lparr>Arr\\<rparr> = \\<BB>\\<lparr>Arr\\<rparr>", "qed (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ArrMap\\<rparr> =\n  dghm_const \\<BB> (cat_1 \\<aa> \\<ff>) \\<aa>\n   (cat_1 \\<aa>\n     \\<ff>\\<lparr>CId\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. ?\\<AA> = \\<BB>\n 3. ?\\<BB> = cat_1 \\<aa> \\<ff>", "qed (simp_all add: assms)"], ["", "lemma cf_const_if_HomDom_is_cat_1:\n  assumes \"\\<KK> : cat_1 \\<aa> \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<KK> = cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<KK> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)", "interpret \\<KK>: is_functor \\<alpha> \\<open>cat_1 \\<aa> \\<ff>\\<close> \\<CC> \\<KK>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK> :\n    cat_1 \\<aa>\n     \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<KK> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)", "from cat_1_components(1)"], ["proof (chain)\npicking this:\n  cat_1 ?\\<aa> ?\\<ff>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {?\\<aa>}", "have \\<aa>: \"\\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  cat_1 ?\\<aa> ?\\<ff>\\<lparr>Obj\\<rparr> = ZFC_in_HOL.set {?\\<aa>}\n\ngoal (1 subgoal):\n 1. \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto simp: \\<KK>.HomDom.cat_in_Obj_in_Vset)"], ["proof (state)\nthis:\n  \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<KK> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)", "from cat_1_components(2)"], ["proof (chain)\npicking this:\n  cat_1 ?\\<aa> ?\\<ff>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {?\\<ff>}", "have \\<ff>: \"\\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  cat_1 ?\\<aa> ?\\<ff>\\<lparr>Arr\\<rparr> = ZFC_in_HOL.set {?\\<ff>}\n\ngoal (1 subgoal):\n 1. \\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto simp: \\<KK>.HomDom.cat_in_Arr_in_Vset)"], ["proof (state)\nthis:\n  \\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<KK> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)", "from \\<aa> \\<ff>"], ["proof (chain)\npicking this:\n  \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "interpret cf_1: \n    is_tm_functor \\<alpha> \\<open>cat_1 \\<aa> \\<ff>\\<close> \\<CC> \\<open>cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<close>"], ["proof (prove)\nusing this:\n  \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<ff> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>) :\n    cat_1 \\<aa>\n     \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^sub>.\\<^sub>t\\<^sub>m\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (cs_concl cs_intro: cat_small_cs_intros cat_cs_intros)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<KK> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)", "proof(rule cf_eqI)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<KK> :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 4. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "show \"cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>) : cat_1 \\<aa> \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>) :\n    cat_1 \\<aa>\n     \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n   (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n   (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>) :\n  cat_1 \\<aa> \\<ff> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (5 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 3. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 4. ?\\<AA> = cat_1 \\<aa> \\<ff>\n 5. ?\\<BB> = \\<CC>", "have ObjMap_dom_lhs: \"\\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ObjMap\\<rparr>) = set {\\<aa>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ObjMap\\<rparr>) =\n    ZFC_in_HOL.set {\\<aa>}", "by (simp add: cat_cs_simps cat_1_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ObjMap\\<rparr>) = ZFC_in_HOL.set {\\<aa>}\n\ngoal (5 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 3. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 4. ?\\<AA> = cat_1 \\<aa> \\<ff>\n 5. ?\\<BB> = \\<CC>", "have ObjMap_dom_rhs: \n      \"\\<D>\\<^sub>\\<circ> (cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>) = set {\\<aa>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n       (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n       (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n    ZFC_in_HOL.set {\\<aa>}", "by (simp add: cat_cs_simps cat_1_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n  ZFC_in_HOL.set {\\<aa>}\n\ngoal (5 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 3. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 4. ?\\<AA> = cat_1 \\<aa> \\<ff>\n 5. ?\\<BB> = \\<CC>", "show \"\\<KK>\\<lparr>ObjMap\\<rparr> = cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ObjMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>", "proof(rule vsv_eqI, unfold ObjMap_dom_lhs ObjMap_dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>} = ZFC_in_HOL.set {\\<aa>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>} \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n        (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n        (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>} = ZFC_in_HOL.set {\\<aa>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>} \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n        (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n        (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> set {\\<aa>}\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>}\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>} = ZFC_in_HOL.set {\\<aa>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>} \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n        (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n        (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>}", "have a_def: \"a = \\<aa>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>}\n\ngoal (1 subgoal):\n 1. a = \\<aa>", "by simp"], ["proof (state)\nthis:\n  a = \\<aa>\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>} = ZFC_in_HOL.set {\\<aa>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<aa>} \\<Longrightarrow>\n       \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n        (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n        (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "show \"\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "by \n          (\n            cs_concl \n              cs_simp: cat_1_components(1) cat_cs_simps a_def \n              cs_intro: V_cs_intros\n          )"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n  dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n   (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n   (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<KK>\\<lparr>ObjMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<aa>} = ZFC_in_HOL.set {\\<aa>}", "qed auto"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ObjMap\\<rparr> =\n  dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n   (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n   (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ObjMap\\<rparr>\n\ngoal (4 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 3. ?\\<AA> = cat_1 \\<aa> \\<ff>\n 4. ?\\<BB> = \\<CC>", "have ArrMap_dom_lhs: \"\\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ArrMap\\<rparr>) = set {\\<ff>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ArrMap\\<rparr>) =\n    ZFC_in_HOL.set {\\<ff>}", "by (simp add: cat_cs_simps cat_1_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<KK>\\<lparr>ArrMap\\<rparr>) = ZFC_in_HOL.set {\\<ff>}\n\ngoal (4 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 3. ?\\<AA> = cat_1 \\<aa> \\<ff>\n 4. ?\\<BB> = \\<CC>", "have ArrMap_dom_rhs: \n      \"\\<D>\\<^sub>\\<circ> (cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>) = set {\\<ff>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n       (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n       (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>) =\n    ZFC_in_HOL.set {\\<ff>}", "by (simp add: cat_cs_simps cat_1_components)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>) =\n  ZFC_in_HOL.set {\\<ff>}\n\ngoal (4 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 3. ?\\<AA> = cat_1 \\<aa> \\<ff>\n 4. ?\\<BB> = \\<CC>", "show \"\\<KK>\\<lparr>ArrMap\\<rparr> = cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ArrMap\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>", "proof(rule vsv_eqI, unfold ArrMap_dom_lhs ArrMap_dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<ff>} = ZFC_in_HOL.set {\\<ff>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<ff>} \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n        (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n        (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "fix f"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<ff>} = ZFC_in_HOL.set {\\<ff>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<ff>} \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n        (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n        (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"f \\<in>\\<^sub>\\<circ> set {\\<ff>}\""], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<ff>}\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<ff>} = ZFC_in_HOL.set {\\<ff>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<ff>} \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n        (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n        (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<ff>}", "have f_def: \"f = \\<ff>\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<ff>}\n\ngoal (1 subgoal):\n 1. f = \\<ff>", "by simp"], ["proof (state)\nthis:\n  f = \\<ff>\n\ngoal (4 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<ff>} = ZFC_in_HOL.set {\\<ff>}\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {\\<ff>} \\<Longrightarrow>\n       \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n        (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n        (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "show \"\\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = cf_const (cat_1 \\<aa> \\<ff>) \\<CC> (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>\\<ff>\\<rparr> =\n    dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n     (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n     (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>\\<ff>\\<rparr>", "by (subst cat_1_CId_app[symmetric, of \\<ff> \\<aa>])\n          (\n            cs_concl\n              cs_simp: cat_1_components(1,2) cat_cs_simps \n              cs_intro: V_cs_intros cat_cs_intros\n          )"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n   (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n   (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<KK>\\<lparr>ArrMap\\<rparr>)\n 2. vsv (dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n          (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n          (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>)\n 3. ZFC_in_HOL.set {\\<ff>} = ZFC_in_HOL.set {\\<ff>}", "qed auto"], ["proof (state)\nthis:\n  \\<KK>\\<lparr>ArrMap\\<rparr> =\n  dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n   (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n   (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\\<lparr>ArrMap\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<KK> : ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. ?\\<AA> = cat_1 \\<aa> \\<ff>\n 3. ?\\<BB> = \\<CC>", "qed (simp_all add: assms)"], ["proof (state)\nthis:\n  \\<KK> =\n  dghm_const (cat_1 \\<aa> \\<ff>) \\<CC>\n   (\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>)\n   (\\<CC>\\<lparr>CId\\<rparr>\\<lparr>\\<KK>\\<lparr>ObjMap\\<rparr>\\<lparr>\\<aa>\\<rparr>\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}