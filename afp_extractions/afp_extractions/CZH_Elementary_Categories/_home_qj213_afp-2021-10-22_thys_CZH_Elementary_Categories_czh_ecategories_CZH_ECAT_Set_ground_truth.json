{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_Set.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemmas (in arr_Set) [cat_Set_cs_simps] = \n  dg_Rel_shared_cs_simps", "lemmas [cat_Set_cs_simps] =\n  dg_Rel_shared_cs_simps\n  arr_Set.arr_Set_ArrVal_vdomain\n  arr_Set_comp_Set_id_Set_left\n  arr_Set_comp_Set_id_Set_right", "lemmas [cat_Set_cs_intros] = \n  dg_Rel_shared_cs_intros\n  arr_Set_comp_Set", "lemma cat_Set_components:\n  shows \"cat_Set \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"cat_Set \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Set \\<alpha> T}\"\n    and \"cat_Set \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"cat_Set \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"cat_Set \\<alpha>\\<lparr>Comp\\<rparr> =\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>P\\<^sub>a\\<^sub>r ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_Set \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Set\"", "lemma cat_smc_cat_Set: \"cat_smc (cat_Set \\<alpha>) = smc_Set \\<alpha>\"", "lemmas_with [folded cat_smc_cat_Set, unfolded slicing_simps]:\n  cat_Set_Obj_iff = smc_Set_Obj_iff\n  and cat_Set_Arr_iff[cat_Set_cs_simps] = smc_Set_Arr_iff\n  and cat_Set_Dom_vsv[intro] = smc_Set_Dom_vsv\n  and cat_Set_Dom_vdomain[simp] = smc_Set_Dom_vdomain\n  and cat_Set_Dom_vrange = smc_Set_Dom_vrange\n  and cat_Set_Dom_app = smc_Set_Dom_app\n  and cat_Set_Cod_vsv[intro] = smc_Set_Cod_vsv\n  and cat_Set_Cod_vdomain[simp] = smc_Set_Cod_vdomain\n  and cat_Set_Cod_vrange = smc_Set_Cod_vrange\n  and cat_Set_Cod_app[cat_Set_cs_simps] = smc_Set_Cod_app\n  and cat_Set_is_arrI = smc_Set_is_arrI\n  and cat_Set_is_arrD = smc_Set_is_arrD\n  and cat_Set_is_arrE = smc_Set_is_arrE\n  and cat_Set_ArrVal_vdomain[cat_cs_simps] = smc_Set_ArrVal_vdomain\n  and cat_Set_ArrVal_app_vrange[cat_Set_cs_intros] = smc_Set_ArrVal_app_vrange", "lemmas [cat_cs_simps] = cat_Set_is_arrD(2,3)", "lemmas [cat_Set_cs_intros] = \n  cat_Set_is_arrI", "lemmas_with [folded cat_smc_cat_Set, unfolded slicing_simps]: \n  cat_Set_composable_arrs_dg_Set = smc_Set_composable_arrs_dg_Set\n  and cat_Set_Comp = smc_Set_Comp\n  and cat_Set_Comp_app[cat_Set_cs_simps] = smc_Set_Comp_app\n  and cat_Set_Comp_vdomain[cat_Set_cs_simps] = smc_Set_Comp_vdomain", "lemmas_with (in \\<Z>) [folded cat_smc_cat_Set, unfolded slicing_simps]:\n  cat_Set_Hom_vifunion_in_Vset = smc_Set_Hom_vifunion_in_Vset\n  and cat_Set_incl_Set_is_arr = smc_Set_incl_Set_is_arr\n  and cat_Set_incl_Set_is_arr'[cat_Set_cs_intros] = smc_Set_incl_Set_is_arr'\n  and cat_Set_Comp_ArrVal = smc_Set_Comp_ArrVal\n  and cat_Set_Comp_vrange = smc_Set_Comp_vrange\n  and cat_Set_is_monic_arrI = smc_Set_is_monic_arrI\n  and cat_Set_is_monic_arr = smc_Set_is_monic_arr\n  and cat_Set_is_epic_arrI = smc_Set_is_epic_arrI\n  and cat_Set_is_epic_arrD = smc_Set_is_epic_arrD\n  and cat_Set_is_epic_arr = smc_Set_is_epic_arr\n  and cat_Set_obj_terminal = smc_Set_obj_terminal\n  and cat_Set_obj_initial = smc_Set_obj_initial\n  and cat_Set_obj_null = smc_Set_obj_null\n  and cat_Set_is_zero_arr = smc_Set_is_zero_arr", "lemmas [cat_Set_cs_intros] = \\<Z>.cat_Set_incl_Set_is_arr'", "lemmas [cat_cs_simps] = \n  \\<Z>.cat_Set_Comp_ArrVal", "lemma cat_Set_CId_app[cat_Set_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = id_Set A\"", "lemma id_Par_CId_app_app[cat_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = a\"", "lemma (in \\<Z>) category_cat_Set: \"category \\<alpha> (cat_Set \\<alpha>)\"", "lemma (in \\<Z>) category_cat_Set':\n  assumes \"\\<beta> = \\<alpha>\"\n  shows \"category \\<beta> (cat_Set \\<alpha>)\"", "lemmas [cat_cs_intros] = \\<Z>.category_cat_Set'", "lemma (in \\<Z>) wide_replete_subcategory_cat_Set_cat_Par: \n  \"cat_Set \\<alpha> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\"", "lemma (in \\<Z>) subcategory_cat_Set_cat_Set:(*TODO: generalize*)\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"cat_Set \\<alpha> \\<subseteq>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> cat_Set \\<beta>\"", "lemma cat_Set_is_arr_isomorphismI[intro]:\n  \\<comment>\\<open>\n  See \\cite{noauthor_nlab_nodate}\\footnote{\\url{\n  https://ncatlab.org/nlab/show/isomorphism\n  }}).\n  \\<close>\n  assumes \"T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" \n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"", "lemma cat_Set_is_arr_isomorphismD[dest]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"\n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma cat_Set_is_arr_isomorphism:\n  \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<longleftrightarrow> \n    T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<and>\n    v11 (T\\<lparr>ArrVal\\<rparr>) \\<and> \n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and> \n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma cat_Set_ArrVal_app_is_arr[cat_cs_intros]:\n  assumes \"f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\" \n    and \"category \\<alpha> \\<AA>\" (*the order of premises is important*)\n    and \"F : Hom \\<AA> a b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<BB> c d\"\n  shows \"F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d\"", "lemma cat_Set_the_inverse[cat_Set_cs_simps]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"\n  shows \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>S\\<^sub>e\\<^sub>t\"", "lemma cat_Set_the_inverse_app[cat_cs_intros]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"\n    and \"a \\<in>\\<^sub>\\<circ> A\"\n    and [cat_cs_simps]: \"T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = b\"\n  shows \"(T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>)\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> = a\"", "lemma cat_Set_ArrVal_app_the_inverse_is_arr[cat_cs_intros]:\n  assumes \"f : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d\" \n    and \"category \\<alpha> \\<BB>\" (*the order of premises is important*)\n    and \"F : Hom \\<AA> a b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<BB> c d\"\n  shows \"F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\"", "lemma cat_Set_app_the_inverse_app[cat_cs_simps]:\n  assumes \"F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" and \"b \\<in>\\<^sub>\\<circ> B\"\n  shows \"F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> = b\"", "lemma cat_Set_the_inverse_app_app[cat_cs_simps]:\n  assumes \"F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" and \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> = a\"", "lemma vfst_arrow_components: \n  shows \"vfst_arrow A B\\<lparr>ArrVal\\<rparr> = (\\<lambda>ab\\<in>\\<^sub>\\<circ>A \\<times>\\<^sub>\\<circ> B. vfst ab)\"\n    and [cat_cs_simps]: \"vfst_arrow A B\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> B\"\n    and [cat_cs_simps]: \"vfst_arrow A B\\<lparr>ArrCod\\<rparr> = A\"", "lemma vsnd_arrow_components: \n  shows \"vsnd_arrow A B\\<lparr>ArrVal\\<rparr> = (\\<lambda>ab\\<in>\\<^sub>\\<circ>A \\<times>\\<^sub>\\<circ> B. vsnd ab)\"\n    and [cat_cs_simps]: \"vsnd_arrow A B\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> B\"\n    and [cat_cs_simps]: \"vsnd_arrow A B\\<lparr>ArrCod\\<rparr> = B\"", "lemma vfst_arrow_ArrVal_app[cat_cs_simps]:\n  assumes \"ab = \\<langle>a, b\\<rangle>\" and \"ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\"\n  shows \"vfst_arrow A B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = a\"", "lemma vfst_arrow_vrange: \"\\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\"", "lemma vsnd_arrow_ArrVal_app[cat_cs_simps]:\n  assumes \"ab = \\<langle>a, b\\<rangle>\" and \"ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\"\n  shows \"vsnd_arrow A B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = b\"", "lemma vsnd_arrow_vrange: \"\\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr_Vset:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vfst_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr'[cat_rel_par_Set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'\"", "lemmas [cat_rel_par_Set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Set_arr'", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr_Vset:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vsnd_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr'[cat_rel_par_Set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"B' = B\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'\"", "lemmas [cat_rel_par_Set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Set_arr'", "lemma (in \\<Z>) vfst_arrow_is_cat_Par_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Par_arr'[cat_rel_Par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Par \\<alpha>\"\n  shows \"vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'\"", "lemmas [cat_rel_Par_set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Par_arr'", "lemma (in \\<Z>) vsnd_arrow_is_cat_Par_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) vsnd_arrow_is_cat_Par_arr'[cat_rel_Par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"B' = B\"\n    and \"\\<CC>' = cat_Par \\<alpha>\"\n  shows \"vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'\"", "lemmas [cat_rel_Par_set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Par_arr'", "lemma (in \\<Z>) vfst_arrow_is_cat_Rel_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Rel_arr'[cat_Rel_par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'\"", "lemmas [cat_Rel_par_set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Rel_arr'", "lemma (in \\<Z>) vsnd_arrow_is_cat_Rel_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) vsnd_arrow_is_cat_Rel_arr'[cat_Rel_par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"B' = B\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'\"", "lemmas [cat_Rel_par_set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Rel_arr'", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr_isomorphism_Vset:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"b \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr_isomorphism:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr_isomorphism'[cat_rel_par_Set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"b \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> set {b}\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"vfst_arrow A (set {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A\"", "lemmas [cat_rel_par_Set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Set_arr_isomorphism'", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr_isomorphism_Vset:\n  assumes \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr_isomorphism:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr_isomorphism'[cat_rel_par_Set_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = set {a} \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"vsnd_arrow (set {a}) B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B\"", "lemmas [cat_rel_par_Set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Set_arr_isomorphism'", "lemma (in \\<Z>) vfst_arrow_is_cat_Par_arr_isomorphism:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Par_arr_isomorphism'[cat_rel_Par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"b \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> set {b}\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Par \\<alpha>\"\n  shows \"vfst_arrow A (set {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A\"", "lemmas [cat_rel_Par_set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Par_arr_isomorphism'", "lemma (in \\<Z>) vsnd_arrow_is_cat_Par_arr_isomorphism:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) vsnd_arrow_is_cat_Par_arr_isomorphism'[cat_rel_Par_set_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = set {a} \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Par \\<alpha>\"\n  shows \"vsnd_arrow (set {a}) B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B\"", "lemmas [cat_rel_Par_set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Par_arr_isomorphism'", "lemma (in \\<Z>) vfst_arrow_is_cat_Rel_arr_isomorphism:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) vfst_arrow_is_cat_Rel_arr_isomorphism'[cat_Rel_par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"b \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> set {b}\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"vfst_arrow A (set {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A\"", "lemmas [cat_Rel_par_set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Rel_arr_isomorphism'", "lemma (in \\<Z>) vsnd_arrow_is_cat_Rel_arr_isomorphism:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) vsnd_arrow_is_cat_Rel_arr_isomorphism'[cat_Rel_par_set_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = set {a} \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"vsnd_arrow (set {a}) B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B\"", "lemmas [cat_Rel_par_set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Rel_arr_isomorphism'", "lemma vprojection_arrow_components:\n  shows \"vprojection_arrow I A i\\<lparr>ArrVal\\<rparr> = vprojection I A i\"\n    and \"vprojection_arrow I A i\\<lparr>ArrDom\\<rparr> = (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. A i)\"\n    and \"vprojection_arrow I A i\\<lparr>ArrCod\\<rparr> = A i\"", "lemma (in \\<Z>) arr_Set_vprojection_arrow:\n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"VLambda I A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"arr_Set \\<alpha> (vprojection_arrow I A i)\"", "lemma (in \\<Z>) vprojection_arrow_is_arr:\n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"VLambda I A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vprojection_arrow I A i : (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. A i) \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A i\"", "lemma small_prod_2_Rel_ArrVal[simp]:\n  \"small {\\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle> | a b c d. \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and> \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}\"\n  (is \\<open>small ?S\\<close>)", "lemma prod_2_Rel_ArrValI:\n  assumes \"ab_cd = \\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle>\"\n    and \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\"\n    and \"\\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\"\n  shows \"ab_cd \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\"", "lemma prod_2_Rel_ArrValD[dest]:\n  assumes \"\\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\"\n  shows \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\" and \"\\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\"", "lemma prod_2_Rel_ArrValE[elim]:\n  assumes \"ab_cd \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\"\n  obtains a b c d where \"ab_cd = \\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle>\" \n    and \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\"\n    and \"\\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\"", "lemma prod_2_Rel_ArrVal_vsubset_vprod:\n  \"prod_2_Rel_ArrVal S T \\<subseteq>\\<^sub>\\<circ> ((\\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T) \\<times>\\<^sub>\\<circ> (\\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T))\"", "lemma prod_2_Rel_ArrVal_vbrelation: \"vbrelation (prod_2_Rel_ArrVal S T)\"", "lemma prod_2_Rel_ArrVal_vdomain: \"\\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T) = \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\"", "lemma prod_2_Rel_ArrVal_vrange: \"\\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T) = \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\"", "lemma \n  assumes \"vsv g\" and \"vsv f\"\n  shows prod_2_Rel_ArrVal_vsv: \"vsv (prod_2_Rel_ArrVal g f)\"\n    and prod_2_Rel_ArrVal_app: \n      \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g; b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f \\<rbrakk> \\<Longrightarrow> \n        prod_2_Rel_ArrVal g f\\<lparr>\\<langle>a,b\\<rangle>\\<rparr> = \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle>\"", "lemma prod_2_Rel_ArrVal_v11:\n  assumes \"v11 g\" and \"v11 f\"\n  shows \"v11 (prod_2_Rel_ArrVal g f)\"", "lemma prod_2_Rel_ArrVal_vcomp:\n  \"prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n    prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S) (T' \\<circ>\\<^sub>\\<circ> T)\"", "lemma prod_2_Rel_ArrVal_vid_on[cat_cs_simps]:\n  \"prod_2_Rel_ArrVal (vid_on A) (vid_on B) = vid_on (A \\<times>\\<^sub>\\<circ> B)\"", "lemma prod_2_Rel_components: \n  shows \"prod_2_Rel S T\\<lparr>ArrVal\\<rparr> = prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>)\"\n    and [cat_cs_simps]: \"prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>\"\n    and [cat_cs_simps]: \"prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrCod\\<rparr>\"", "lemma prod_2_Rel_is_cat_Rel_arr:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" and \"T : C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\"    \n  shows \"prod_2_Rel S T : A \\<times>\\<^sub>\\<circ> C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ> D\"", "lemma prod_2_Rel_is_cat_Rel_arr'[cat_Rel_par_set_cs_intros]:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"\n    and \"T : C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\"\n    and \"A' = A \\<times>\\<^sub>\\<circ> C\"\n    and \"B' = B \\<times>\\<^sub>\\<circ> D\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"prod_2_Rel S T : A' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'\"", "lemma prod_2_Rel_app[cat_rel_par_Set_cs_simps]:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" \n    and \"T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"    \n    and \"a \\<in>\\<^sub>\\<circ> A\"\n    and \"c \\<in>\\<^sub>\\<circ> C\"\n    and \"ac = \\<langle>a, c\\<rangle>\"\n  shows \"prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> = \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>, T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>\"", "lemma prod_2_Rel_is_cat_Set_arr:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" and \"T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"    \n  shows \"prod_2_Rel S T : A \\<times>\\<^sub>\\<circ> C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ> D\"", "lemma prod_2_Rel_is_cat_Set_arr'[cat_rel_par_Set_cs_intros]:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" \n    and \"T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"\n    and \"AC = A \\<times>\\<^sub>\\<circ> C\"\n    and \"BD = B \\<times>\\<^sub>\\<circ> D\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"prod_2_Rel S T : AC \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> BD\"", "lemma prod_2_Rel_is_cat_Set_arr_isomorphism:\n  assumes \"S : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" and \"T : C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"    \n  shows \"prod_2_Rel S T : A \\<times>\\<^sub>\\<circ> C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ> D\"", "lemma prod_2_Rel_is_cat_Set_arr_isomorphism'[cat_rel_par_Set_cs_intros]:\n  assumes \"S : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" \n    and \"T : C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"    \n    and \"AC = A \\<times>\\<^sub>\\<circ> C\"\n    and \"BD = B \\<times>\\<^sub>\\<circ> D\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"prod_2_Rel S T : AC \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> BD\"", "lemma prod_2_Rel_Comp:\n  assumes \"G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\" \n    and \"F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\" \n    and \"G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\"\n    and \"F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\"\n  shows\n    \"prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> prod_2_Rel G F =\n      prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G) (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)\"", "lemma (in \\<Z>) prod_2_Rel_CId[cat_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \n    \"prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>) (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>\"", "lemma cf_prod_2_Rel_components: \n  shows \"cf_prod_2_Rel \\<AA>\\<lparr>ObjMap\\<rparr> = (\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Obj\\<rparr>. AB\\<lparr>0\\<rparr> \\<times>\\<^sub>\\<circ> AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cf_prod_2_Rel \\<AA>\\<lparr>ArrMap\\<rparr> =\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Arr\\<rparr>. prod_2_Rel (ST\\<lparr>0\\<rparr>) (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\"\n    and [cat_cs_simps]: \"cf_prod_2_Rel \\<AA>\\<lparr>HomDom\\<rparr> = \\<AA> \\<times>\\<^sub>C \\<AA>\"\n    and [cat_cs_simps]: \"cf_prod_2_Rel \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>\"", "lemma cf_prod_2_Rel_ObjMap_app[cat_cs_simps]: \n  assumes \"AB = [A, B]\\<^sub>\\<circ>\" and \"AB \\<in>\\<^sub>\\<circ> (\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Obj\\<rparr>\"\n  shows \"A \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_prod_2_Rel \\<AA>\\<^esub> B = A \\<times>\\<^sub>\\<circ> B\"", "lemma (in \\<Z>) cf_prod_2_Rel_ObjMap_vrange: \n  \"\\<R>\\<^sub>\\<circ> (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"", "lemma cf_prod_2_Rel_ArrMap_app[cat_cs_simps]: \n  assumes \"GF = [G, F]\\<^sub>\\<circ>\" and \"GF \\<in>\\<^sub>\\<circ> (\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Arr\\<rparr>\"\n  shows \"G \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_prod_2_Rel \\<AA>\\<^esub> F = prod_2_Rel G F\"", "lemma (in \\<Z>) cf_prod_2_Rel_is_functor:\n  \"cf_prod_2_Rel (cat_Rel \\<alpha>) : cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\"", "lemma (in \\<Z>) cf_prod_2_Rel_is_functor'[cat_cs_intros]:\n  assumes \"\\<AA>' = cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\"\n    and \"\\<BB>' = cat_Rel \\<alpha>\"\n    and \"\\<alpha>' = \\<alpha>\"\n  shows \"cf_prod_2_Rel (cat_Rel \\<alpha>) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\"", "lemmas [cat_cs_intros] = \\<Z>.cf_prod_2_Rel_is_functor'", "lemma cat_Set_obj_prod_up_components: \n  shows \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr> = \n    (\\<lambda>a\\<in>\\<^sub>\\<circ>A. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>))\"\n    and [cat_Set_cs_simps]: \n      \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr> = A\"\n    and [cat_Set_cs_simps]: \n      \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> = (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\"", "lemma cat_Set_obj_prod_up_ArrVal_vrange: \n  assumes \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\"\n  shows \"\\<R>\\<^sub>\\<circ> (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\"", "lemma cat_Set_obj_prod_up_ArrVal_app_vdomain[cat_Set_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"\\<D>\\<^sub>\\<circ> (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) = I\"", "lemma cat_Set_obj_prod_up_ArrVal_app_component[cat_Set_cs_simps]: \n  assumes \"a \\<in>\\<^sub>\\<circ> A\" and \"i \\<in>\\<^sub>\\<circ> I\"\n  shows \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr> = \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\"", "lemma cat_Set_obj_prod_up_ArrVal_app_vrange: \n  assumes \"a \\<in>\\<^sub>\\<circ> A\" and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\"\n  shows \"\\<R>\\<^sub>\\<circ> (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\"", "lemma (in \\<Z>) cat_Set_obj_prod_up_cat_Set_is_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    and \"VLambda I F \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\"\n  shows \"cat_Set_obj_prod_up I F A \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\"", "lemma (in \\<Z>) pdg_dghm_comp_dghm_proj_dghm_up: \n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    and \"VLambda I F \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\" \n    and \"i \\<in>\\<^sub>\\<circ> I\"\n  shows \n    \"\\<phi> i = vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cat_Set_obj_prod_up I F A \\<phi>\"\n    (is \\<open>\\<phi> i = ?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>\\<close>)", "lemma small_vequalizer[simp]: \n  \"small {x. x \\<in>\\<^sub>\\<circ> X \\<and> f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>}\"", "lemma vequalizerI:\n  assumes \"x \\<in>\\<^sub>\\<circ> X\" and \"f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\"\n  shows \"x \\<in>\\<^sub>\\<circ> vequalizer X f g\"", "lemma vequalizerD[dest]:\n  assumes \"x \\<in>\\<^sub>\\<circ> vequalizer X f g\"\n  shows \"x \\<in>\\<^sub>\\<circ> X\" and \"f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\"", "lemma vequalizerE[elim]:\n  assumes \"x \\<in>\\<^sub>\\<circ> vequalizer X f g\"\n  obtains \"x \\<in>\\<^sub>\\<circ> X\" and \"f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\"", "lemma vequalizer_vsubset_vdomain[cat_Set_cs_intros]: \"vequalizer a g f \\<subseteq>\\<^sub>\\<circ> a\"", "lemma Limit_vequalizer_in_Vset[cat_Set_cs_intros]:\n  assumes \"Limit \\<alpha>\" and \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vequalizer a g f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"", "lemma vequalizer_flip: \"vequalizer a f g = vequalizer a g f\"", "lemma (in \\<Z>) cat_Set_incl_Set_commute:\n  assumes \"\\<gg> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\" and \"\\<ff> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\" \n  shows \n    \"\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> incl_Set (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n      \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> incl_Set (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>\"\n  (is \\<open>\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl = \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl\\<close>)", "lemma (in \\<Z>) cat_Rel_CId_is_cat_Set_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A\"", "lemma (in \\<Z>) cat_Rel_CId_is_cat_Set_arr'[cat_rel_par_Set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B' = A\"\n    and \"C' = A\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : B' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> C'\""], "translations": [["", "lemmas (in arr_Set) [cat_Set_cs_simps] = \n  dg_Rel_shared_cs_simps"], ["", "lemmas [cat_Set_cs_simps] =\n  dg_Rel_shared_cs_simps\n  arr_Set.arr_Set_ArrVal_vdomain\n  arr_Set_comp_Set_id_Set_left\n  arr_Set_comp_Set_id_Set_right"], ["", "lemmas [cat_Set_cs_intros] = \n  dg_Rel_shared_cs_intros\n  arr_Set_comp_Set"], ["", "(*\nCertain lemmas are applicable to any of the categories among\nRel, Par, Set. If these lemmas are included in general-purpose\ncollections like cat_cs_simps/cat_cs_intros, then backtracking\ncan become slow. The following collections were created to resolve\nsuch issues.\n*)"], ["", "named_theorems cat_rel_par_Set_cs_intros"], ["", "named_theorems cat_rel_par_Set_cs_simps"], ["", "named_theorems cat_rel_Par_set_cs_intros"], ["", "named_theorems cat_rel_Par_set_cs_simps"], ["", "named_theorems cat_Rel_par_set_cs_intros"], ["", "named_theorems cat_Rel_par_set_cs_simps"], ["", "subsection\\<open>\\<open>Set\\<close> as a category\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition cat_Set :: \"V \\<Rightarrow> V\"\n  where \"cat_Set \\<alpha> =\n    [\n      Vset \\<alpha>,\n      set {T. arr_Set \\<alpha> T},\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>),\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>),\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      VLambda (Vset \\<alpha>) id_Set \n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cat_Set_components:\n  shows \"cat_Set \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"cat_Set \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Set \\<alpha> T}\"\n    and \"cat_Set \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"cat_Set \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Set \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"cat_Set \\<alpha>\\<lparr>Comp\\<rparr> =\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>P\\<^sub>a\\<^sub>r ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_Set \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cat_Set \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha> &&&\n     cat_Set \\<alpha>\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Set \\<alpha> T} &&&\n     cat_Set \\<alpha>\\<lparr>Dom\\<rparr> =\n     (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Set \\<alpha> T}.\n         T\\<lparr>ArrDom\\<rparr>)) &&&\n    cat_Set \\<alpha>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Set \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    cat_Set \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Rel", "unfolding cat_Set_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     Vset \\<alpha> &&&\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Set \\<alpha> T} &&&\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Set \\<alpha> T}.\n         T\\<lparr>ArrDom\\<rparr>)) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Set \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    VLambda (Vset \\<alpha>) id_Rel", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma cat_smc_cat_Set: \"cat_smc (cat_Set \\<alpha>) = smc_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc (cat_Set \\<alpha>) = smc_Set \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_Set \\<alpha>))\n 2. vsv (smc_Set \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Set \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Set \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Set \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) = 5\\<^sub>\\<nat>", "unfolding cat_smc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [cat_Set \\<alpha>\\<lparr>Obj\\<rparr>,\n      cat_Set \\<alpha>\\<lparr>Arr\\<rparr>,\n      cat_Set \\<alpha>\\<lparr>Dom\\<rparr>,\n      cat_Set \\<alpha>\\<lparr>Cod\\<rparr>,\n      cat_Set \\<alpha>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) = 5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_Set \\<alpha>))\n 2. vsv (smc_Set \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Set \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Set \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Set \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>", "unfolding smc_Set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>) = 5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_Set \\<alpha>))\n 2. vsv (smc_Set \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Set \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Set \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Set \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) = \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 5\\<^sub>\\<nat> = 5\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ> (smc_Set \\<alpha>)\n\ngoal (3 subgoals):\n 1. vsv (cat_smc (cat_Set \\<alpha>))\n 2. vsv (smc_Set \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Set \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Set \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Set \\<alpha>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cat_smc (cat_Set \\<alpha>)) \\<Longrightarrow> cat_smc (cat_Set \\<alpha>)\\<lparr>a\\<rparr> = smc_Set \\<alpha>\\<lparr>a\\<rparr>\"\n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (cat_smc (cat_Set \\<alpha>)) \\<Longrightarrow>\n    cat_smc (cat_Set \\<alpha>)\\<lparr>a\\<rparr> =\n    smc_Set \\<alpha>\\<lparr>a\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral, \n        unfold cat_smc_def dg_field_simps cat_Set_def smc_Set_def\n      )\n      (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cat_smc (cat_Set \\<alpha>)) \\<Longrightarrow>\n  cat_smc (cat_Set \\<alpha>)\\<lparr>?a\\<rparr> =\n  smc_Set \\<alpha>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (cat_smc (cat_Set \\<alpha>))\n 2. vsv (smc_Set \\<alpha>)", "qed (auto simp: cat_smc_def smc_Set_def)"], ["", "lemmas_with [folded cat_smc_cat_Set, unfolded slicing_simps]:\n  cat_Set_Obj_iff = smc_Set_Obj_iff\n  and cat_Set_Arr_iff[cat_Set_cs_simps] = smc_Set_Arr_iff\n  and cat_Set_Dom_vsv[intro] = smc_Set_Dom_vsv\n  and cat_Set_Dom_vdomain[simp] = smc_Set_Dom_vdomain\n  and cat_Set_Dom_vrange = smc_Set_Dom_vrange\n  and cat_Set_Dom_app = smc_Set_Dom_app\n  and cat_Set_Cod_vsv[intro] = smc_Set_Cod_vsv\n  and cat_Set_Cod_vdomain[simp] = smc_Set_Cod_vdomain\n  and cat_Set_Cod_vrange = smc_Set_Cod_vrange\n  and cat_Set_Cod_app[cat_Set_cs_simps] = smc_Set_Cod_app\n  and cat_Set_is_arrI = smc_Set_is_arrI\n  and cat_Set_is_arrD = smc_Set_is_arrD\n  and cat_Set_is_arrE = smc_Set_is_arrE\n  and cat_Set_ArrVal_vdomain[cat_cs_simps] = smc_Set_ArrVal_vdomain\n  and cat_Set_ArrVal_app_vrange[cat_Set_cs_intros] = smc_Set_ArrVal_app_vrange"], ["", "lemmas [cat_cs_simps] = cat_Set_is_arrD(2,3)"], ["", "lemmas [cat_Set_cs_intros] = \n  cat_Set_is_arrI"], ["", "lemmas_with [folded cat_smc_cat_Set, unfolded slicing_simps]: \n  cat_Set_composable_arrs_dg_Set = smc_Set_composable_arrs_dg_Set\n  and cat_Set_Comp = smc_Set_Comp\n  and cat_Set_Comp_app[cat_Set_cs_simps] = smc_Set_Comp_app\n  and cat_Set_Comp_vdomain[cat_Set_cs_simps] = smc_Set_Comp_vdomain"], ["", "lemmas_with (in \\<Z>) [folded cat_smc_cat_Set, unfolded slicing_simps]:\n  cat_Set_Hom_vifunion_in_Vset = smc_Set_Hom_vifunion_in_Vset\n  and cat_Set_incl_Set_is_arr = smc_Set_incl_Set_is_arr\n  and cat_Set_incl_Set_is_arr'[cat_Set_cs_intros] = smc_Set_incl_Set_is_arr'\n  and cat_Set_Comp_ArrVal = smc_Set_Comp_ArrVal\n  and cat_Set_Comp_vrange = smc_Set_Comp_vrange\n  and cat_Set_is_monic_arrI = smc_Set_is_monic_arrI\n  and cat_Set_is_monic_arr = smc_Set_is_monic_arr\n  and cat_Set_is_epic_arrI = smc_Set_is_epic_arrI\n  and cat_Set_is_epic_arrD = smc_Set_is_epic_arrD\n  and cat_Set_is_epic_arr = smc_Set_is_epic_arr\n  and cat_Set_obj_terminal = smc_Set_obj_terminal\n  and cat_Set_obj_initial = smc_Set_obj_initial\n  and cat_Set_obj_null = smc_Set_obj_null\n  and cat_Set_is_zero_arr = smc_Set_is_zero_arr"], ["", "lemmas [cat_Set_cs_intros] = \\<Z>.cat_Set_incl_Set_is_arr'"], ["", "lemmas [cat_cs_simps] = \n  \\<Z>.cat_Set_Comp_ArrVal"], ["", "subsubsection\\<open>Identity\\<close>"], ["", "lemma cat_Set_CId_app[cat_Set_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = id_Set A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = id_Rel A", "using assms"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = id_Rel A", "unfolding cat_Set_components"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. VLambda (Vset \\<alpha>) id_Rel\\<lparr>A\\<rparr> = id_Rel A", "by simp"], ["", "lemma id_Par_CId_app_app[cat_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    a", "unfolding cat_Set_CId_app[OF assms(1)] id_Rel_ArrVal_app[OF assms(2)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = a", "by simp"], ["", "subsubsection\\<open>\\<open>Set\\<close> is a category\\<close>"], ["", "lemma (in \\<Z>) category_cat_Set: \"category \\<alpha> (cat_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Set \\<alpha>)", "proof(rule categoryI, unfold cat_smc_cat_Par cat_smc_cat_Set)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_Set \\<alpha>)\n 3. vsv (cat_Set \\<alpha>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_Set \\<alpha>) = 6\\<^sub>\\<nat>\n 5. semicategory \\<alpha> (smc_Set \\<alpha>)\n 6. \\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "interpret Set: semicategory \\<alpha> \\<open>cat_smc (cat_Set \\<alpha>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (cat_smc (cat_Set \\<alpha>))", "unfolding cat_smc_cat_Set"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)", "by (simp add: semicategory_smc_Set)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_Set \\<alpha>)\n 3. vsv (cat_Set \\<alpha>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_Set \\<alpha>) = 6\\<^sub>\\<nat>\n 5. semicategory \\<alpha> (smc_Set \\<alpha>)\n 6. \\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vfsequence (cat_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cat_Set \\<alpha>)", "unfolding cat_Set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>) id_Rel]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (cat_Set \\<alpha>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set \\<alpha>\\<lparr>CId\\<rparr>)\n 3. vcard (cat_Set \\<alpha>) = 6\\<^sub>\\<nat>\n 4. semicategory \\<alpha> (smc_Set \\<alpha>)\n 5. \\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 6. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> a\n 7. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       f =\n       f\n 8. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vcard (cat_Set \\<alpha>) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cat_Set \\<alpha>) = 6\\<^sub>\\<nat>", "unfolding cat_Set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Set \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Set \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Set \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>) id_Rel]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cat_Set \\<alpha>) = 6\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Set \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> a\n 6. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       f =\n       f\n 7. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"semicategory \\<alpha> (smc_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Set \\<alpha>)", "by (simp add: semicategory_smc_Set)"], ["proof (state)\nthis:\n  semicategory \\<alpha> (smc_Set \\<alpha>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set \\<alpha>\\<lparr>CId\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> a\n 5. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       f =\n       f\n 6. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A\"\n    if \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "using that"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "unfolding cat_Set_Obj_iff"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "by \n      (\n        cs_concl \n          cs_simp: cat_Set_cs_simps cs_intro: cat_Set_cs_intros arr_Set_id_SetI\n      )"], ["proof (state)\nthis:\n  ?A \\<in>\\<^sub>\\<circ> cat_Set\n                          \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?A\\<rparr> : ?A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> ?A\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set \\<alpha>\\<lparr>CId\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 4. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       f =\n       f\n 5. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F = F\" \n    if \"F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" for F A B"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    F =\n    F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    F =\n    F", "from that"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "have \"arr_Set \\<alpha> F\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> F &&& B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto elim: cat_Set_is_arrE)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    F =\n    F", "with that"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  arr_Set \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  arr_Set \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    F =\n    F", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_Set_cs_simps\n            cs_intro: cat_Set_cs_intros arr_Set_id_SetI\n        )"], ["proof (state)\nthis:\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  F =\n  F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F : ?A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  ?F =\n  ?F\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set \\<alpha>\\<lparr>CId\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 4. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> = F\"\n    if \"F : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\" for F B C"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "from that"], ["proof (chain)\npicking this:\n  F : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C", "have \"arr_Set \\<alpha> F\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  F : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> F &&& B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto elim: cat_Set_is_arrE)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "with that"], ["proof (chain)\npicking this:\n  F : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n  arr_Set \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  F : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n  arr_Set \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_Set_cs_simps\n            cs_intro: cat_Set_cs_intros arr_Set_id_SetI\n        )"], ["proof (state)\nthis:\n  F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n  F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F : ?B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> ?C \\<Longrightarrow>\n  ?F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?B\\<rparr> =\n  ?F\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set \\<alpha>\\<lparr>CId\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "qed (auto simp: cat_Set_components)"], ["", "lemma (in \\<Z>) category_cat_Set':\n  assumes \"\\<beta> = \\<alpha>\"\n  shows \"category \\<beta> (cat_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<beta> (cat_Set \\<alpha>)", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Set \\<alpha>)", "by (rule category_cat_Set)"], ["", "lemmas [cat_cs_intros] = \\<Z>.category_cat_Set'"], ["", "subsubsection\\<open>\\<open>Set\\<close> is a wide replete subcategory of \\<open>Par\\<close>\\<close>"], ["", "lemma (in \\<Z>) wide_replete_subcategory_cat_Set_cat_Par: \n  \"cat_Set \\<alpha> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "proof(intro wide_replete_subcategoryI)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Par\n             \\<alpha>\n 2. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Par\n     \\<alpha>", "show wide_subcategory_cat_Set_cat_Par: \"cat_Set \\<alpha> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Par\n             \\<alpha>", "proof(intro wide_subcategoryI, unfold cat_smc_cat_Par cat_smc_cat_Set)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\n 2. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "interpret Par: category \\<alpha> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Par \\<alpha>)", "by (rule category_cat_Par)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\n 2. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "interpret Set: category \\<alpha> \\<open>cat_Set \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Set \\<alpha>)", "by (rule category_cat_Set)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\n 2. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "interpret wide_subsemicategory \\<alpha> \\<open>smc_Set \\<alpha>\\<close> \\<open>smc_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "by (simp add: wide_subsemicategory_smc_Set_smc_Par)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\n 2. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "show \"cat_Set \\<alpha> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>", "proof(intro subcategoryI, unfold cat_smc_cat_Par cat_smc_cat_Set)"], ["proof (state)\ngoal (4 subgoals):\n 1. category \\<alpha> (cat_Set \\<alpha>)\n 2. category \\<alpha> (cat_Par \\<alpha>)\n 3. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                           \\<alpha>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show \"smc_Set \\<alpha> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                           \\<alpha>", "by (simp add: subsemicategory_axioms)"], ["proof (state)\nthis:\n  smc_Set \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                         \\<alpha>\n\ngoal (3 subgoals):\n 1. category \\<alpha> (cat_Set \\<alpha>)\n 2. category \\<alpha> (cat_Par \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "fix A"], ["proof (state)\ngoal (3 subgoals):\n 1. category \\<alpha> (cat_Set \\<alpha>)\n 2. category \\<alpha> (cat_Par \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "assume \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (3 subgoals):\n 1. category \\<alpha> (cat_Set \\<alpha>)\n 2. category \\<alpha> (cat_Par \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "show \"cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> =\n    cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>", "unfolding cat_Set_components cat_Par_components"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. VLambda (Vset \\<alpha>) id_Rel\\<lparr>A\\<rparr> =\n    VLambda (Vset \\<alpha>) id_Rel\\<lparr>A\\<rparr>", "by simp"], ["proof (state)\nthis:\n  cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> =\n  cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n\ngoal (2 subgoals):\n 1. category \\<alpha> (cat_Set \\<alpha>)\n 2. category \\<alpha> (cat_Par \\<alpha>)", "qed \n      (\n        auto simp: \n          subsemicategory_axioms Par.category_axioms Set.category_axioms\n      )"], ["proof (state)\nthis:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\n\ngoal (1 subgoal):\n 1. smc_Set \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Par\n                             \\<alpha>", "qed (rule wide_subsemicategory_smc_Set_smc_Par)"], ["proof (state)\nthis:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Par\n           \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Par\n     \\<alpha>", "show \"cat_Set \\<alpha> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Par\n     \\<alpha>", "proof(intro replete_subcategoryI)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\n 2. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b", "interpret wide_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Par\n             \\<alpha>", "by (rule wide_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\n 2. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b", "show \"cat_Set \\<alpha> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>", "by (rule subcategory_axioms)"], ["proof (state)\nthis:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Par \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b", "fix A B F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b", "assume \"F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b", "note arr_Par = cat_Par_is_arr_isomorphismD[OF this]"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b", "from arr_Par"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = B", "show \"F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by (intro cat_Set_is_arrI arr_Set_arr_ParI cat_Par_is_arrD[OF arr_Par(1)])\n        (auto simp: cat_Par_is_arrD(2))"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Par\n   \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>\\<open>Set\\<close> is a subcategory of \\<open>Set\\<close>\\<close>"], ["", "lemma (in \\<Z>) subcategory_cat_Set_cat_Set:(*TODO: generalize*)\n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"cat_Set \\<alpha> \\<subseteq>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> cat_Set \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> cat_Set \\<beta>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> cat_Set \\<beta>", "interpret \\<beta>: \\<Z> \\<beta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<beta>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> cat_Set \\<beta>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> cat_Set \\<beta>", "proof(intro subcategoryI')"], ["proof (state)\ngoal (6 subgoals):\n 1. category \\<beta> (cat_Set \\<alpha>)\n 2. category \\<beta> (cat_Set \\<beta>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       a \\<in>\\<^sub>\\<circ> cat_Set \\<beta>\\<lparr>Obj\\<rparr>\n 4. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> b\n 5. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> f\n 6. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Set \\<beta>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show \"category \\<beta> (cat_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<beta> (cat_Set \\<alpha>)", "by (rule category.cat_category_if_ge_Limit, insert assms(2))\n        (cs_concl cs_intro: cat_cs_intros cat_Rel_cs_intros)+"], ["proof (state)\nthis:\n  category \\<beta> (cat_Set \\<alpha>)\n\ngoal (5 subgoals):\n 1. category \\<beta> (cat_Set \\<beta>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       a \\<in>\\<^sub>\\<circ> cat_Set \\<beta>\\<lparr>Obj\\<rparr>\n 3. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> b\n 4. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> f\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Set \\<beta>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show \"A \\<in>\\<^sub>\\<circ> cat_Set \\<beta>\\<lparr>Obj\\<rparr>\" if \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in>\\<^sub>\\<circ> cat_Set \\<beta>\\<lparr>Obj\\<rparr>", "using that"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. A \\<in>\\<^sub>\\<circ> cat_Set \\<beta>\\<lparr>Obj\\<rparr>", "unfolding cat_Set_components(1)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. A \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (meson assms(2) Vset_in_mono \\<beta>.Axiom_of_Extensionality(3))"], ["proof (state)\nthis:\n  ?A \\<in>\\<^sub>\\<circ> cat_Set\n                          \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  ?A \\<in>\\<^sub>\\<circ> cat_Set \\<beta>\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. category \\<beta> (cat_Set \\<beta>)\n 2. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b \\<Longrightarrow>\n       f : a \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> b\n 3. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> f\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Set \\<beta>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show is_arr_if_is_arr: \n      \"F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> B\" if \"F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" for A B F"], ["proof (prove)\ngoal (1 subgoal):\n 1. F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> B", "note f = cat_Set_is_arrD[OF that]"], ["proof (state)\nthis:\n  arr_Set \\<alpha> F\n  F\\<lparr>ArrDom\\<rparr> = A\n  F\\<lparr>ArrCod\\<rparr> = B\n\ngoal (1 subgoal):\n 1. F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> B", "interpret f: arr_Set \\<alpha> F"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> F", "by (rule f(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> B", "proof(intro cat_Set_is_arrI arr_SetI)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence F\n 3. vsv (F\\<lparr>ArrVal\\<rparr>)\n 4. vcard F = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = F\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> F\\<lparr>ArrCod\\<rparr>\n 7. F\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n 8. F\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n 9. F\\<lparr>ArrDom\\<rparr> = A\n 10. F\\<lparr>ArrCod\\<rparr> = B", "show \"\\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> F\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> F\\<lparr>ArrCod\\<rparr>", "by (auto simp: f.arr_Set_ArrVal_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> F\\<lparr>ArrCod\\<rparr>\n\ngoal (9 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence F\n 3. vsv (F\\<lparr>ArrVal\\<rparr>)\n 4. vcard F = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = F\\<lparr>ArrDom\\<rparr>\n 6. F\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n 7. F\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n 8. F\\<lparr>ArrDom\\<rparr> = A\n 9. F\\<lparr>ArrCod\\<rparr> = B", "show \"F\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (auto intro!: f.arr_Set_ArrDom_in_Vset Vset_in_mono assms(2))"], ["proof (state)\nthis:\n  F\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence F\n 3. vsv (F\\<lparr>ArrVal\\<rparr>)\n 4. vcard F = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = F\\<lparr>ArrDom\\<rparr>\n 6. F\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n 7. F\\<lparr>ArrDom\\<rparr> = A\n 8. F\\<lparr>ArrCod\\<rparr> = B", "show \"F\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>", "by (auto intro!: f.arr_Set_ArrCod_in_Vset Vset_in_mono assms(2))"], ["proof (state)\nthis:\n  F\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<beta>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence F\n 3. vsv (F\\<lparr>ArrVal\\<rparr>)\n 4. vcard F = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = F\\<lparr>ArrDom\\<rparr>\n 6. F\\<lparr>ArrDom\\<rparr> = A\n 7. F\\<lparr>ArrCod\\<rparr> = B", "qed \n        (\n          auto simp: \n            f f.arr_Set_ArrVal_vdomain f.vfsequence_axioms f.arr_Set_length\n        )"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F : ?A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?F : ?A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> ?B\n\ngoal (3 subgoals):\n 1. category \\<beta> (cat_Set \\<beta>)\n 2. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                         f =\n                         g \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> f\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Set \\<beta>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show \"G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F = G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F\"\n      if \"G : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\" and \"F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" for B C G A F"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F", "note g = cat_Set_is_arrD[OF that(1)] and f = cat_Set_is_arrD[OF that(2)]"], ["proof (state)\nthis:\n  arr_Set \\<alpha> G\n  G\\<lparr>ArrDom\\<rparr> = B\n  G\\<lparr>ArrCod\\<rparr> = C\n  arr_Set \\<alpha> F\n  F\\<lparr>ArrDom\\<rparr> = A\n  F\\<lparr>ArrCod\\<rparr> = B\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F", "from that"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "have \\<alpha>_gf_is_arr: \"G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C\""], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C", "by (cs_concl cs_intro: cat_cs_intros is_arr_if_is_arr)"], ["proof (state)\nthis:\n  G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F", "from that"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "have \\<beta>_gf_is_arr: \"G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C\""], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n    F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C", "by (cs_concl cs_intro: cat_cs_intros is_arr_if_is_arr)"], ["proof (state)\nthis:\n  G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F", "note \\<alpha>_gf = cat_Set_is_arrD[OF \\<alpha>_gf_is_arr]\n        and \\<beta>_gf = cat_Set_is_arrD[OF \\<beta>_gf_is_arr]"], ["proof (state)\nthis:\n  arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\n  (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   F)\\<lparr>ArrDom\\<rparr> =\n  A\n  (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   F)\\<lparr>ArrCod\\<rparr> =\n  C\n  arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\n  (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n   F)\\<lparr>ArrDom\\<rparr> =\n  A\n  (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n   F)\\<lparr>ArrCod\\<rparr> =\n  C\n\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F =\n    G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F", "proof(rule arr_Set_eqI)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set ?\\<alpha> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\n 2. arr_Set ?\\<alpha> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\n 3. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\n 4. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr>\n 5. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr>", "show \"arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)", "by (rule \\<alpha>_gf(1))"], ["proof (state)\nthis:\n  arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\n\ngoal (4 subgoals):\n 1. arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\n 2. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\n 3. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr>\n 4. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr>", "then"], ["proof (chain)\npicking this:\n  arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)", "interpret arr_Set_\\<alpha>_gf: arr_Set \\<beta> \\<open>(G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\\<close>"], ["proof (prove)\nusing this:\n  arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\n\ngoal (1 subgoal):\n 1. arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)", "by simp"], ["proof (state)\ngoal (4 subgoals):\n 1. arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\n 2. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\n 3. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr>\n 4. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr>", "from \\<alpha>_gf_is_arr"], ["proof (chain)\npicking this:\n  G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\nusing this:\n  G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       F)\\<lparr>ArrVal\\<rparr>) =\n    A", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>) =\n  A\n\ngoal (4 subgoals):\n 1. arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\n 2. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\n 3. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr>\n 4. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr>", "show \"arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)", "by (rule \\<beta>_gf(1))"], ["proof (state)\nthis:\n  arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\n\ngoal (3 subgoals):\n 1. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\n 2. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr>\n 3. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr>", "then"], ["proof (chain)\npicking this:\n  arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)", "interpret arr_Set_\\<beta>_gf: arr_Set \\<beta> \\<open>(G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\\<close>"], ["proof (prove)\nusing this:\n  arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\n\ngoal (1 subgoal):\n 1. arr_Set \\<beta> (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)", "by simp"], ["proof (state)\ngoal (3 subgoals):\n 1. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\n 2. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr>\n 3. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr>", "from \\<beta>_gf_is_arr"], ["proof (chain)\npicking this:\n  G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\nusing this:\n  G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<beta>\\<^esub> C\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n       F)\\<lparr>ArrVal\\<rparr>) =\n    A", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>) =\n  A\n\ngoal (3 subgoals):\n 1. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\n 2. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr>\n 3. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr>", "show \"(G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\\<lparr>ArrVal\\<rparr> = (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          F)\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n          F)\\<lparr>ArrVal\\<rparr>)\n 3. A = A\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n        F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          F)\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n          F)\\<lparr>ArrVal\\<rparr>)\n 3. A = A\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n        F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (4 subgoals):\n 1. vsv ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          F)\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n          F)\\<lparr>ArrVal\\<rparr>)\n 3. A = A\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n        F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "from that this"], ["proof (chain)\npicking this:\n  G : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A", "show \n            \"(G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  G : B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> C\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "by \n              (\n                cs_concl \n                  cs_simp: cat_cs_simps cs_intro: cat_cs_intros is_arr_if_is_arr\n              )"], ["proof (state)\nthis:\n  (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n  (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n   F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          F)\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n          F)\\<lparr>ArrVal\\<rparr>)\n 3. A = A", "qed auto"], ["proof (state)\nthis:\n  (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   F)\\<lparr>ArrVal\\<rparr> =\n  (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F)\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrDom\\<rparr>\n 2. (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr> =\n    (G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub>\n     F)\\<lparr>ArrCod\\<rparr>", "qed (use \\<alpha>_gf_is_arr \\<beta>_gf_is_arr in \\<open>cs_concl cs_simp: cat_cs_simps\\<close>)+"], ["proof (state)\nthis:\n  G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F =\n  G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?G : ?B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> ?C;\n   ?F : ?A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> ?B\\<rbrakk>\n  \\<Longrightarrow> ?G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?F =\n                    ?G \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<beta>\\<^esub> ?F\n\ngoal (2 subgoals):\n 1. category \\<beta> (cat_Set \\<beta>)\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Set\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Set \\<beta>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "qed \n    (\n      auto simp: \n        assms(2) cat_Set_components Vset_trans Vset_in_mono cat_cs_intros\n    )"], ["proof (state)\nthis:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> cat_Set \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Isomorphism\\<close>"], ["", "lemma cat_Set_is_arr_isomorphismI[intro]:\n  \\<comment>\\<open>\n  See \\cite{noauthor_nlab_nodate}\\footnote{\\url{\n  https://ncatlab.org/nlab/show/isomorphism\n  }}).\n  \\<close>\n  assumes \"T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" \n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "interpret arr_Set \\<alpha> T"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T", "by (rule cat_Set_is_arrD(1)[OF assms(1)])"], ["proof (state)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "note [cat_cs_intros] = cat_Par_is_arr_isomorphismI"], ["proof (state)\nthis:\n  \\<lbrakk>?T : ?A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> ?B;\n   v11 (?T\\<lparr>ArrVal\\<rparr>);\n   \\<D>\\<^sub>\\<circ> (?T\\<lparr>ArrVal\\<rparr>) = ?A;\n   \\<R>\\<^sub>\\<circ> (?T\\<lparr>ArrVal\\<rparr>) = ?B\\<rbrakk>\n  \\<Longrightarrow> ?T : ?A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> ?B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "from wide_replete_subcategory_cat_Set_cat_Par assms"], ["proof (chain)\npicking this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "have \n    \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by (cs_concl cs_intro: cat_cs_intros cat_sub_cs_intros cat_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "with wide_replete_subcategory_cat_Set_cat_Par assms"], ["proof (chain)\npicking this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "show \n    \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by (cs_concl cs_simp: cat_sub_bw_cs_simps)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_Set_is_arr_isomorphismD[dest]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"\n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B &&&\n     v11 (T\\<lparr>ArrVal\\<rparr>)) &&&\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A &&&\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "proof-"], ["proof (state)\ngoal (4 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 4. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "have T: \"T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by auto"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (4 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 4. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "interpret arr_Set \\<alpha> T"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T", "by (rule cat_Set_is_arrD(1)[OF T])"], ["proof (state)\ngoal (4 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 4. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from wide_replete_subcategory_cat_Set_cat_Par assms"], ["proof (chain)\npicking this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "have T: \n    \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by (cs_concl cs_intro: cat_sub_cs_intros cat_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (4 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 4. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "show \"v11 (T\\<lparr>ArrVal\\<rparr>)\" \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\" \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>) &&&\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A &&&\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "by (intro cat_Par_is_arr_isomorphismD[OF T])+"], ["proof (state)\nthis:\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "qed (rule is_arr_isomorphismD(1)[OF assms])"], ["", "lemma cat_Set_is_arr_isomorphism:\n  \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<longleftrightarrow> \n    T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<and>\n    v11 (T\\<lparr>ArrVal\\<rparr>) \\<and> \n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and> \n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B =\n    (T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<and>\n     v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n     \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and>\n     \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B)", "by auto"], ["", "subsection\\<open>The inverse arrow\\<close>"], ["", "lemma cat_Set_ArrVal_app_is_arr[cat_cs_intros]:\n  assumes \"f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\" \n    and \"category \\<alpha> \\<AA>\" (*the order of premises is important*)\n    and \"F : Hom \\<AA> a b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<BB> c d\"\n  shows \"F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d", "interpret \\<AA>: category \\<alpha> \\<AA>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<AA>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d", "interpret F: arr_Set \\<alpha> F"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> F", "by (rule cat_Set_is_arrD[OF assms(3)])"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d", "from assms"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  category \\<alpha> \\<AA>\n  F : Hom \\<AA> a b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<BB> c d", "have \"F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> Hom \\<BB> c d\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n  category \\<alpha> \\<AA>\n  F : Hom \\<AA> a b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<BB> c d\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> Hom \\<BB> c d", "by (cs_concl cs_intro: cat_cs_intros cat_Set_cs_intros)"], ["proof (state)\nthis:\n  F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> Hom \\<BB> c d\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d", "then"], ["proof (chain)\npicking this:\n  F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> Hom \\<BB> c d", "show ?thesis"], ["proof (prove)\nusing this:\n  F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> Hom \\<BB> c d\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d", "unfolding in_Hom_iff"], ["proof (prove)\nusing this:\n  F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d", "by simp"], ["proof (state)\nthis:\n  F\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation (input) converse_Set :: \"V \\<Rightarrow> V\" (\"(_\\<inverse>\\<^sub>S\\<^sub>e\\<^sub>t)\" [1000] 999)\n  where \"a\\<inverse>\\<^sub>S\\<^sub>e\\<^sub>t \\<equiv> a\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\""], ["", "lemma cat_Set_the_inverse[cat_Set_cs_simps]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"\n  shows \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>S\\<^sub>e\\<^sub>t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "have T: \"T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by auto"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "interpret arr_Set \\<alpha> T"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T", "by (rule cat_Set_is_arrD(1)[OF T])"], ["proof (state)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from wide_replete_subcategory_cat_Set_cat_Par assms"], ["proof (chain)\npicking this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "have T:\n    \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by (cs_concl cs_intro: cat_sub_cs_intros cat_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from wide_replete_subcategory_cat_Set_cat_Par assms"], ["proof (chain)\npicking this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "have [cat_cs_simps]:\n    \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub>\""], ["proof (prove)\nusing this:\n  cat_Set \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub>", "by \n      (\n        cs_concl cs_full \n          cs_simp: cat_sub_bw_cs_simps cs_intro: cat_sub_cs_intros\n      )"], ["proof (state)\nthis:\n  T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n  T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub>\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from T"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "show \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "by (cs_concl cs_simp: cat_Par_cs_simps cat_cs_simps cs_intro: \\<Z>_\\<beta>)"], ["proof (state)\nthis:\n  T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n  T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_Set_the_inverse_app[cat_cs_intros]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\"\n    and \"a \\<in>\\<^sub>\\<circ> A\"\n    and [cat_cs_simps]: \"T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = b\"\n  shows \"(T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>)\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> =\n    a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> =\n    a", "from assms"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A\n  T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = b", "have T: \"T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A\n  T\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = b\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by auto"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> =\n    a", "interpret arr_Set \\<alpha> T"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T", "by (rule cat_Set_is_arrD(1)[OF T])"], ["proof (state)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> =\n    a", "note T = cat_Set_is_arr_isomorphismD[OF assms(1)]"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> =\n    a", "interpret T: v11 \\<open>T\\<lparr>ArrVal\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>)", "by (rule T(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> =\n    a", "from T.v11_axioms assms(1,2)"], ["proof (chain)\npicking this:\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A", "show \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> = a\""], ["proof (prove)\nusing this:\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> =\n    a", "by\n      (\n        cs_concl \n          cs_simp: \n            converse_Rel_components V_cs_simps cat_Set_cs_simps cat_cs_simps \n          cs_intro: cat_arrow_cs_intros cat_cs_intros\n      )"], ["proof (state)\nthis:\n  T\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr> =\n  a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_Set_ArrVal_app_the_inverse_is_arr[cat_cs_intros]:\n  assumes \"f : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d\" \n    and \"category \\<alpha> \\<BB>\" (*the order of premises is important*)\n    and \"F : Hom \\<AA> a b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<BB> c d\"\n  shows \"F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "interpret \\<BB>: category \\<alpha> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<BB>", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "from cat_Set_is_arr_isomorphismD[OF assms(3)]"], ["proof (chain)\npicking this:\n  F : Hom \\<AA> a b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<BB> c d\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = Hom \\<AA> a b\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = Hom \\<BB> c d", "interpret F: arr_Set \\<alpha> F"], ["proof (prove)\nusing this:\n  F : Hom \\<AA> a b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<BB> c d\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = Hom \\<AA> a b\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = Hom \\<BB> c d\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> F", "by (simp add: cat_Set_is_arrD)"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "from assms"], ["proof (chain)\npicking this:\n  f : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d\n  category \\<alpha> \\<BB>\n  F : Hom \\<AA> a\n       b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n\\<BB> c d", "have \"F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> Hom \\<AA> a b\""], ["proof (prove)\nusing this:\n  f : c \\<mapsto>\\<^bsub>\\<BB>\\<^esub> d\n  category \\<alpha> \\<BB>\n  F : Hom \\<AA> a\n       b \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n\\<BB> c d\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> Hom \\<AA> a b", "by (cs_concl cs_intro: cat_cs_intros cat_arrow_cs_intros)"], ["proof (state)\nthis:\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>\n  \\<in>\\<^sub>\\<circ> Hom \\<AA> a b\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "then"], ["proof (chain)\npicking this:\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>\n  \\<in>\\<^sub>\\<circ> Hom \\<AA> a b", "show ?thesis"], ["proof (prove)\nusing this:\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>\n  \\<in>\\<^sub>\\<circ> Hom \\<AA> a b\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "unfolding in_Hom_iff"], ["proof (prove)\nusing this:\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b", "by simp"], ["proof (state)\nthis:\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> : a \\<mapsto>\\<^bsub>\\<AA>\\<^esub> b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_Set_app_the_inverse_app[cat_cs_simps]:\n  assumes \"F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" and \"b \\<in>\\<^sub>\\<circ> B\"\n  shows \"F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    b", "note F = cat_Set_is_arr_isomorphismD[OF assms(1)]"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    b", "note F = F cat_Set_is_arrD[OF F(1)]"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = B\n  arr_Set \\<alpha> F\n  F\\<lparr>ArrDom\\<rparr> = A\n  F\\<lparr>ArrCod\\<rparr> = B\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    b", "interpret F: arr_Set \\<alpha> F"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> F", "by (rule cat_Set_is_arrD[OF F(1)])"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    b", "from assms"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  b \\<in>\\<^sub>\\<circ> B", "have [cat_cs_simps]: \n    \"F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> = cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\""], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> =\n  cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    b", "from assms"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  b \\<in>\\<^sub>\\<circ> B", "have [cat_cs_simps]: \n    \"F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> = \n      (F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>)\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\""], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    (F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>)\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>", "by\n      (\n        cs_concl\n          cs_simp: cat_cs_simps cs_intro: cat_arrow_cs_intros cat_cs_intros\n      )"], ["proof (state)\nthis:\n  F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n  (F \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>)\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    b", "from assms F.arr_Par_ArrCod_in_Vset[unfolded F]"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  b \\<in>\\<^sub>\\<circ> B\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  b \\<in>\\<^sub>\\<circ> B\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n    b", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  F\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>b\\<rparr>\\<rparr> =\n  b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_Set_the_inverse_app_app[cat_cs_simps]:\n  assumes \"F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" and \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    a", "note F = cat_Set_is_arr_isomorphismD[OF assms(1)]"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    a", "note F = F cat_Set_is_arrD[OF F(1)]"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = B\n  arr_Set \\<alpha> F\n  F\\<lparr>ArrDom\\<rparr> = A\n  F\\<lparr>ArrCod\\<rparr> = B\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    a", "interpret F: arr_Set \\<alpha> F"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> F", "by (rule cat_Set_is_arrD[OF F(1)])"], ["proof (state)\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    a", "from assms"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A", "have [cat_cs_simps]:\n    \"F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F = cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\""], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    F =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  F =\n  cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    a", "from assms"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A", "have [cat_cs_simps]: \n    \"F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n      (F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    (F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "by\n      (\n        cs_concl \n          cs_simp: cat_cs_simps cs_intro: cat_arrow_cs_intros cat_cs_intros\n      )"], ["proof (state)\nthis:\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n  (F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   F)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    a", "from assms F.arr_Par_ArrDom_in_Vset[unfolded F]"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  a \\<in>\\<^sub>\\<circ> A\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n    a", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  F\\<inverse>\\<^sub>C\\<^bsub>cat_Set \\<alpha>\\<^esub>\\<lparr>ArrVal\\<rparr>\\<lparr>F\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<rparr> =\n  a\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Projection arrows for \\<open>vtimes\\<close>\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition vfst_arrow :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"vfst_arrow A B = [(\\<lambda>ab\\<in>\\<^sub>\\<circ>A \\<times>\\<^sub>\\<circ> B. vfst ab), A \\<times>\\<^sub>\\<circ> B, A]\\<^sub>\\<circ>\""], ["", "definition vsnd_arrow :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"vsnd_arrow A B = [(\\<lambda>ab\\<in>\\<^sub>\\<circ>A \\<times>\\<^sub>\\<circ> B. vsnd ab), A \\<times>\\<^sub>\\<circ> B, B]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma vfst_arrow_components: \n  shows \"vfst_arrow A B\\<lparr>ArrVal\\<rparr> = (\\<lambda>ab\\<in>\\<^sub>\\<circ>A \\<times>\\<^sub>\\<circ> B. vfst ab)\"\n    and [cat_cs_simps]: \"vfst_arrow A B\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> B\"\n    and [cat_cs_simps]: \"vfst_arrow A B\\<lparr>ArrCod\\<rparr> = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A B\\<lparr>ArrVal\\<rparr> =\n    VLambda (A \\<times>\\<^sub>\\<circ> B) vfst &&&\n    vfst_arrow A B\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> B &&&\n    vfst_arrow A B\\<lparr>ArrCod\\<rparr> = A", "unfolding vfst_arrow_def arr_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [VLambda (A \\<times>\\<^sub>\\<circ> B) vfst, A \\<times>\\<^sub>\\<circ> B,\n     A]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n    VLambda (A \\<times>\\<^sub>\\<circ> B) vfst &&&\n    [VLambda (A \\<times>\\<^sub>\\<circ> B) vfst, A \\<times>\\<^sub>\\<circ> B,\n     A]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n    A \\<times>\\<^sub>\\<circ> B &&&\n    [VLambda (A \\<times>\\<^sub>\\<circ> B) vfst, A \\<times>\\<^sub>\\<circ> B,\n     A]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    A", "by (simp_all add: nat_omega_simps)"], ["", "lemma vsnd_arrow_components: \n  shows \"vsnd_arrow A B\\<lparr>ArrVal\\<rparr> = (\\<lambda>ab\\<in>\\<^sub>\\<circ>A \\<times>\\<^sub>\\<circ> B. vsnd ab)\"\n    and [cat_cs_simps]: \"vsnd_arrow A B\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> B\"\n    and [cat_cs_simps]: \"vsnd_arrow A B\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A B\\<lparr>ArrVal\\<rparr> =\n    VLambda (A \\<times>\\<^sub>\\<circ> B) vsnd &&&\n    vsnd_arrow A B\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> B &&&\n    vsnd_arrow A B\\<lparr>ArrCod\\<rparr> = B", "unfolding vsnd_arrow_def arr_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [VLambda (A \\<times>\\<^sub>\\<circ> B) vsnd, A \\<times>\\<^sub>\\<circ> B,\n     B]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n    VLambda (A \\<times>\\<^sub>\\<circ> B) vsnd &&&\n    [VLambda (A \\<times>\\<^sub>\\<circ> B) vsnd, A \\<times>\\<^sub>\\<circ> B,\n     B]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n    A \\<times>\\<^sub>\\<circ> B &&&\n    [VLambda (A \\<times>\\<^sub>\\<circ> B) vsnd, A \\<times>\\<^sub>\\<circ> B,\n     B]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    B", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Arrow value\\<close>"], ["", "mk_VLambda vfst_arrow_components(1)\n  |vsv vfst_arrow_ArrVal_vsv[cat_cs_intros]|\n  |vdomain vfst_arrow_ArrVal_vdomain[cat_cs_simps]|\n  |app vfst_arrow_ArrVal_app'|"], ["", "mk_VLambda vsnd_arrow_components(1)\n  |vsv vsnd_arrow_ArrVal_vsv[cat_cs_intros]|\n  |vdomain vsnd_arrow_ArrVal_vdomain[cat_cs_simps]|\n  |app vsnd_arrow_ArrVal_app'|"], ["", "lemma vfst_arrow_ArrVal_app[cat_cs_simps]:\n  assumes \"ab = \\<langle>a, b\\<rangle>\" and \"ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\"\n  shows \"vfst_arrow A B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = a", "using assms(2)"], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vfst_arrow A B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = a", "unfolding assms(1)"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n    a", "by (simp add: vfst_arrow_ArrVal_app')"], ["", "lemma vfst_arrow_vrange: \"\\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A", "unfolding vfst_arrow_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (VLambda (A \\<times>\\<^sub>\\<circ> B) vfst)\n    \\<subseteq>\\<^sub>\\<circ> A", "proof(intro vrange_VLambda_vsubset)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B \\<Longrightarrow>\n       vfst x \\<in>\\<^sub>\\<circ> A", "fix ab"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B \\<Longrightarrow>\n       vfst x \\<in>\\<^sub>\\<circ> A", "assume \"ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\""], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B \\<Longrightarrow>\n       vfst x \\<in>\\<^sub>\\<circ> A", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B", "obtain a b where ab_def: \"ab = \\<langle>a, b\\<rangle>\" and a: \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = \\<langle>a, b\\<rangle>;\n         a \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B \\<Longrightarrow>\n       vfst x \\<in>\\<^sub>\\<circ> A", "from a"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> A", "show \"vfst ab \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. vfst ab \\<in>\\<^sub>\\<circ> A", "unfolding ab_def"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. vfst \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A", "by simp"], ["proof (state)\nthis:\n  vfst ab \\<in>\\<^sub>\\<circ> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vsnd_arrow_ArrVal_app[cat_cs_simps]:\n  assumes \"ab = \\<langle>a, b\\<rangle>\" and \"ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\"\n  shows \"vsnd_arrow A B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = b", "using assms(2)"], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vsnd_arrow A B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = b", "unfolding assms(1)"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n    b", "by (simp add: vsnd_arrow_ArrVal_app')"], ["", "lemma vsnd_arrow_vrange: \"\\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> B", "unfolding vsnd_arrow_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (VLambda (A \\<times>\\<^sub>\\<circ> B) vsnd)\n    \\<subseteq>\\<^sub>\\<circ> B", "proof(intro vrange_VLambda_vsubset)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B \\<Longrightarrow>\n       vsnd x \\<in>\\<^sub>\\<circ> B", "fix ab"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B \\<Longrightarrow>\n       vsnd x \\<in>\\<^sub>\\<circ> B", "assume \"ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\""], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B \\<Longrightarrow>\n       vsnd x \\<in>\\<^sub>\\<circ> B", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B", "obtain a b where ab_def: \"ab = \\<langle>a, b\\<rangle>\" and b: \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = \\<langle>a, b\\<rangle>;\n         b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  ab = \\<langle>a, b\\<rangle>\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> B \\<Longrightarrow>\n       vsnd x \\<in>\\<^sub>\\<circ> B", "from b"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> B", "show \"vsnd ab \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vsnd ab \\<in>\\<^sub>\\<circ> B", "unfolding ab_def"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. vsnd \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> B", "by simp"], ["proof (state)\nthis:\n  vsnd ab \\<in>\\<^sub>\\<circ> B\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Projection arrows are arrows in the category \\<open>Set\\<close>\\<close>"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr_Vset:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vfst_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "proof(intro cat_Set_is_arrI arr_SetI, unfold cat_cs_simps)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (vfst_arrow A B)\n 3. vsv (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n 4. vcard (vfst_arrow A B) = 3\\<^sub>\\<nat>\n 5. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 6. \\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A\n 7. A \\<times>\\<^sub>\\<circ> B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 9. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 10. A = A", "show \"vfsequence (vfst_arrow A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (vfst_arrow A B)", "unfolding vfst_arrow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [VLambda (A \\<times>\\<^sub>\\<circ> B) vfst, A \\<times>\\<^sub>\\<circ> B,\n      A]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (vfst_arrow A B)\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n 3. vcard (vfst_arrow A B) = 3\\<^sub>\\<nat>\n 4. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 5. \\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A\n 6. A \\<times>\\<^sub>\\<circ> B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 9. A = A", "show \"vcard (vfst_arrow A B) = 3\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (vfst_arrow A B) = 3\\<^sub>\\<nat>", "unfolding vfst_arrow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [VLambda (A \\<times>\\<^sub>\\<circ> B) vfst, A \\<times>\\<^sub>\\<circ> B,\n      A]\\<^sub>\\<circ> =\n    3\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (vfst_arrow A B) = 3\\<^sub>\\<nat>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n 3. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 4. \\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A\n 5. A \\<times>\\<^sub>\\<circ> B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 8. A = A", "show \"\\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A", "by (rule vfst_arrow_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> A\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vfst_arrow A B\\<lparr>ArrVal\\<rparr>)\n 3. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 4. A \\<times>\\<^sub>\\<circ> B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 7. A = A", "qed (use assms in \\<open>cs_concl cs_intro: V_cs_intros cat_cs_intros\\<close>)+"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "using assms"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "unfolding cat_Set_components"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "by (rule vfst_arrow_is_cat_Set_arr_Vset)"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr'[cat_rel_par_Set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "by (rule vfst_arrow_is_cat_Set_arr)"], ["", "lemmas [cat_rel_par_Set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Set_arr'"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr_Vset:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vsnd_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "proof(intro cat_Set_is_arrI arr_SetI , unfold cat_cs_simps)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (vsnd_arrow A B)\n 3. vsv (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n 4. vcard (vsnd_arrow A B) = 3\\<^sub>\\<nat>\n 5. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 6. \\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> B\n 7. A \\<times>\\<^sub>\\<circ> B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 9. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 10. B = B", "show \"vfsequence (vsnd_arrow A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (vsnd_arrow A B)", "unfolding vsnd_arrow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [VLambda (A \\<times>\\<^sub>\\<circ> B) vsnd, A \\<times>\\<^sub>\\<circ> B,\n      B]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (vsnd_arrow A B)\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n 3. vcard (vsnd_arrow A B) = 3\\<^sub>\\<nat>\n 4. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 5. \\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> B\n 6. A \\<times>\\<^sub>\\<circ> B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 9. B = B", "show \"vcard (vsnd_arrow A B) = 3\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (vsnd_arrow A B) = 3\\<^sub>\\<nat>", "unfolding vsnd_arrow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [VLambda (A \\<times>\\<^sub>\\<circ> B) vsnd, A \\<times>\\<^sub>\\<circ> B,\n      B]\\<^sub>\\<circ> =\n    3\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (vsnd_arrow A B) = 3\\<^sub>\\<nat>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n 3. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 4. \\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> B\n 5. A \\<times>\\<^sub>\\<circ> B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 8. B = B", "show \"\\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> B", "by (rule vsnd_arrow_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vsnd_arrow A B\\<lparr>ArrVal\\<rparr>)\n 3. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 4. A \\<times>\\<^sub>\\<circ> B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. A \\<times>\\<^sub>\\<circ> B = A \\<times>\\<^sub>\\<circ> B\n 7. B = B", "qed (use assms in \\<open>cs_concl cs_intro: V_cs_intros cat_cs_intros\\<close>)+"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "using assms"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "unfolding cat_Set_components"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by (rule vsnd_arrow_is_cat_Set_arr_Vset)"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr'[cat_rel_par_Set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"B' = B\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by (rule vsnd_arrow_is_cat_Set_arr)"], ["", "lemmas [cat_rel_par_Set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Set_arr'"], ["", "subsubsection\\<open>Projection arrows are arrows in the category \\<open>Par\\<close>\\<close>"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Par_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "interpret Set_Par: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "unfolding cat_Par_components(1)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "by (intro Set_Par.subcat_is_arrD vfst_arrow_is_cat_Set_arr_Vset) auto"], ["proof (state)\nthis:\n  vfst_arrow A\n   B : A \\<times>\\<^sub>\\<circ>\n       B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Par_arr'[cat_rel_Par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Par \\<alpha>\"\n  shows \"vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "by (rule vfst_arrow_is_cat_Par_arr)"], ["", "lemmas [cat_rel_Par_set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Par_arr'"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Par_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "interpret Set_Par: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "unfolding cat_Par_components(1)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by (intro Set_Par.subcat_is_arrD vsnd_arrow_is_cat_Set_arr_Vset) auto"], ["proof (state)\nthis:\n  vsnd_arrow A\n   B : A \\<times>\\<^sub>\\<circ>\n       B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Par_arr'[cat_rel_Par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"B' = B\"\n    and \"\\<CC>' = cat_Par \\<alpha>\"\n  shows \"vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by (rule vsnd_arrow_is_cat_Par_arr)"], ["", "lemmas [cat_rel_Par_set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Par_arr'"], ["", "subsubsection\\<open>Projection arrows are arrows in the category \\<open>Rel\\<close>\\<close>"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Rel_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "interpret Set_Par: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "interpret Par_Rel: wide_replete_subcategory \\<alpha> \\<open>cat_Par \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Par_cat_Rel)"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "interpret Set_Rel: subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>", "by \n      ( \n        rule subcat_trans[\n          OF Set_Par.subcategory_axioms Par_Rel.subcategory_axioms\n          ]\n      )"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "unfolding cat_Rel_components(1)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "by (intro Set_Rel.subcat_is_arrD vfst_arrow_is_cat_Set_arr_Vset) auto"], ["proof (state)\nthis:\n  vfst_arrow A\n   B : A \\<times>\\<^sub>\\<circ>\n       B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Rel_arr'[cat_Rel_par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> A'", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "by (rule vfst_arrow_is_cat_Rel_arr)"], ["", "lemmas [cat_Rel_par_set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Rel_arr'"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Rel_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow A B : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "interpret Set_Par: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "interpret Par_Rel: wide_replete_subcategory \\<alpha> \\<open>cat_Par \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Par_cat_Rel)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "interpret Set_Rel: subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>", "by \n      ( \n        rule subcat_trans[\n          OF Set_Par.subcategory_axioms Par_Rel.subcategory_axioms\n          ]\n      )"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "unfolding cat_Rel_components(1)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (intro Set_Rel.subcat_is_arrD vsnd_arrow_is_cat_Set_arr_Vset) auto"], ["proof (state)\nthis:\n  vsnd_arrow A\n   B : A \\<times>\\<^sub>\\<circ>\n       B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Rel_arr'[cat_Rel_par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> B\"\n    and \"B' = B\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A B : AB \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow A\n     B : A \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (rule vsnd_arrow_is_cat_Rel_arr)"], ["", "lemmas [cat_Rel_par_set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Rel_arr'"], ["", "subsubsection\\<open>Projection arrows are isomorphisms in the category \\<open>Set\\<close>\\<close>"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr_isomorphism_Vset:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"b \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "proof\n  (\n    intro \n      cat_Set_is_arr_isomorphismI \n      arr_SetI \n      vfst_arrow_is_cat_Set_arr_Vset \n      assms,\n    unfold cat_cs_simps\n  )"], ["proof (state)\ngoal (4 subgoals):\n 1. ZFC_in_HOL.set {b} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 2. v11 (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n 3. A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b} =\n    A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n 4. \\<R>\\<^sub>\\<circ>\n     (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>) =\n    A", "show \"v11 (vfst_arrow A (set {b})\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)", "proof(rule vsv.vsv_valeq_v11I, unfold cat_cs_simps)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\nZFC_in_HOL.set {b};\n        y \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b};\n        vfst_arrow A\n         (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vfst_arrow A\n         (ZFC_in_HOL.set\n           {b})\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix ab ab'"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\nZFC_in_HOL.set {b};\n        y \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b};\n        vfst_arrow A\n         (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vfst_arrow A\n         (ZFC_in_HOL.set\n           {b})\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume prems:\n      \"ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> set {b}\"\n      \"ab' \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> set {b}\"\n      \"vfst_arrow A (set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = vfst_arrow A (set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\""], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  ab' \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  vfst_arrow A\n   (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\nZFC_in_HOL.set {b};\n        y \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b};\n        vfst_arrow A\n         (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vfst_arrow A\n         (ZFC_in_HOL.set\n           {b})\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  ab' \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  vfst_arrow A\n   (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>", "obtain a where ab_def: \"ab = \\<langle>a, b\\<rangle>\" and a: \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  ab' \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  vfst_arrow A\n   (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>ab = \\<langle>a, b\\<rangle>;\n         a \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. vsv (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\nZFC_in_HOL.set {b};\n        y \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b};\n        vfst_arrow A\n         (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vfst_arrow A\n         (ZFC_in_HOL.set\n           {b})\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  ab' \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  vfst_arrow A\n   (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>", "obtain a' where ab'_def: \"ab' = \\<langle>a', b\\<rangle>\" and a': \"a' \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  ab' \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n  vfst_arrow A\n   (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>ab' = \\<langle>a', b\\<rangle>;\n         a' \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  ab' = \\<langle>a', b\\<rangle>\n  a' \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. vsv (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\nZFC_in_HOL.set {b};\n        y \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b};\n        vfst_arrow A\n         (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vfst_arrow A\n         (ZFC_in_HOL.set\n           {b})\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems(3) a a'"], ["proof (chain)\npicking this:\n  vfst_arrow A\n   (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n  a \\<in>\\<^sub>\\<circ> A\n  a' \\<in>\\<^sub>\\<circ> A", "have \"a = a'\""], ["proof (prove)\nusing this:\n  vfst_arrow A\n   (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n  a \\<in>\\<^sub>\\<circ> A\n  a' \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. a = a'", "unfolding ab_def ab'_def"], ["proof (prove)\nusing this:\n  vfst_arrow A\n   (ZFC_in_HOL.set\n     {b})\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n  vfst_arrow A\n   (ZFC_in_HOL.set\n     {b})\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a', b\\<rangle>\\<rparr>\n  a \\<in>\\<^sub>\\<circ> A\n  a' \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. a = a'", "by (cs_prems cs_simp: cat_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  a = a'\n\ngoal (2 subgoals):\n 1. vsv (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ>\nZFC_in_HOL.set {b};\n        y \\<in>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b};\n        vfst_arrow A\n         (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vfst_arrow A\n         (ZFC_in_HOL.set\n           {b})\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  a = a'", "show \"ab = ab'\""], ["proof (prove)\nusing this:\n  a = a'\n\ngoal (1 subgoal):\n 1. ab = ab'", "unfolding ab_def ab'_def"], ["proof (prove)\nusing this:\n  a = a'\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> = \\<langle>a', b\\<rangle>", "by simp"], ["proof (state)\nthis:\n  ab = ab'\n\ngoal (1 subgoal):\n 1. vsv (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)", "qed (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  v11 (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n\ngoal (3 subgoals):\n 1. ZFC_in_HOL.set {b} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 2. A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b} =\n    A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}\n 3. \\<R>\\<^sub>\\<circ>\n     (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>) =\n    A", "show \"\\<R>\\<^sub>\\<circ> (vfst_arrow A (set {b})\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>) =\n    A", "proof(intro vsubset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<R>\\<^sub>\\<circ>\n     (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A\n 2. A \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                                 (vfst_arrow A\n                                   (ZFC_in_HOL.set\n                                     {b})\\<lparr>ArrVal\\<rparr>)", "show \"A \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfst_arrow A (set {b})\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                                 (vfst_arrow A\n                                   (ZFC_in_HOL.set\n                                     {b})\\<lparr>ArrVal\\<rparr>)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfst_arrow A\n                                (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfst_arrow A\n                                (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)", "assume a: \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfst_arrow A\n                                (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> A", "have a_def: \"a = vfst_arrow A (set {b})\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. a =\n    vfst_arrow A\n     (ZFC_in_HOL.set\n       {b})\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  a =\n  vfst_arrow A\n   (ZFC_in_HOL.set\n     {b})\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vfst_arrow A\n                                (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)", "from a assms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> A\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  b \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"a \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vfst_arrow A (set {b})\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  b \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                           (vfst_arrow A\n                             (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)", "by (subst a_def, use nothing in \\<open>intro vsv.vsv_vimageI2\\<close>) \n          (auto simp: cat_cs_simps cat_cs_intros)"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (vfst_arrow A\n                           (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                               (vfst_arrow A\n                                 (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A", "qed (rule vfst_arrow_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (vfst_arrow A (ZFC_in_HOL.set {b})\\<lparr>ArrVal\\<rparr>) =\n  A\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.set {b} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 2. A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b} =\n    A \\<times>\\<^sub>\\<circ> ZFC_in_HOL.set {b}", "qed (use assms in auto)"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr_isomorphism:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "using assms"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "unfolding cat_Set_components"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  b \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "by (rule vfst_arrow_is_cat_Set_arr_isomorphism_Vset)"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Set_arr_isomorphism'[cat_rel_par_Set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"b \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> set {b}\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"vfst_arrow A (set {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "by (rule vfst_arrow_is_cat_Set_arr_isomorphism)"], ["", "lemmas [cat_rel_par_Set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Set_arr_isomorphism'"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr_isomorphism_Vset:\n  assumes \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "proof\n  (\n    intro \n      cat_Set_is_arr_isomorphismI \n      arr_SetI \n      vsnd_arrow_is_cat_Set_arr_Vset \n      assms,\n    unfold cat_cs_simps\n  )"], ["proof (state)\ngoal (4 subgoals):\n 1. ZFC_in_HOL.set {a} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 2. v11 (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n 3. ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B =\n    ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n 4. \\<R>\\<^sub>\\<circ>\n     (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>) =\n    B", "show \"v11 (vsnd_arrow (set {a}) B\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)", "proof(rule vsv.vsv_valeq_v11I, unfold cat_cs_simps)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n {a} \\<times>\\<^sub>\\<circ>\nB;\n        y \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B;\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix ab ab'"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n {a} \\<times>\\<^sub>\\<circ>\nB;\n        y \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B;\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume prems:\n      \"ab \\<in>\\<^sub>\\<circ> set {a} \\<times>\\<^sub>\\<circ> B\"\n      \"ab' \\<in>\\<^sub>\\<circ> set {a} \\<times>\\<^sub>\\<circ> B\"\n      \"vsnd_arrow (set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> = vsnd_arrow (set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\""], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  ab' \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n {a} \\<times>\\<^sub>\\<circ>\nB;\n        y \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B;\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  ab' \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>", "obtain b where ab_def: \"ab = \\<langle>a, b\\<rangle>\" and b: \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  ab' \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>ab = \\<langle>a, b\\<rangle>;\n         b \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  ab = \\<langle>a, b\\<rangle>\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (2 subgoals):\n 1. vsv (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n {a} \\<times>\\<^sub>\\<circ>\nB;\n        y \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B;\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  ab' \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>", "obtain b' where ab'_def: \"ab' = \\<langle>a, b'\\<rangle>\" and b': \"b' \\<in>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  ab' \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>ab' = \\<langle>a, b'\\<rangle>;\n         b' \\<in>\\<^sub>\\<circ> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  ab' = \\<langle>a, b'\\<rangle>\n  b' \\<in>\\<^sub>\\<circ> B\n\ngoal (2 subgoals):\n 1. vsv (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n {a} \\<times>\\<^sub>\\<circ>\nB;\n        y \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B;\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems(3) b b'"], ["proof (chain)\npicking this:\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n  b \\<in>\\<^sub>\\<circ> B\n  b' \\<in>\\<^sub>\\<circ> B", "have \"b = b'\""], ["proof (prove)\nusing this:\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>ab\\<rparr> =\n  vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>ab'\\<rparr>\n  b \\<in>\\<^sub>\\<circ> B\n  b' \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. b = b'", "unfolding ab_def ab'_def"], ["proof (prove)\nusing this:\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b'\\<rangle>\\<rparr>\n  b \\<in>\\<^sub>\\<circ> B\n  b' \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. b = b'", "by (cs_prems cs_simp: cat_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  b = b'\n\ngoal (2 subgoals):\n 1. vsv (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n {a} \\<times>\\<^sub>\\<circ>\nB;\n        y \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B;\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n        vsnd_arrow (ZFC_in_HOL.set {a})\n         B\\<lparr>ArrVal\\<rparr>\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  b = b'", "show \"ab = ab'\""], ["proof (prove)\nusing this:\n  b = b'\n\ngoal (1 subgoal):\n 1. ab = ab'", "unfolding ab_def ab'_def"], ["proof (prove)\nusing this:\n  b = b'\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle> = \\<langle>a, b'\\<rangle>", "by simp"], ["proof (state)\nthis:\n  ab = ab'\n\ngoal (1 subgoal):\n 1. vsv (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)", "qed (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  v11 (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n\ngoal (3 subgoals):\n 1. ZFC_in_HOL.set {a} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 2. ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B =\n    ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B\n 3. \\<R>\\<^sub>\\<circ>\n     (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>) =\n    B", "show \"\\<R>\\<^sub>\\<circ> (vsnd_arrow (set {a}) B\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>) =\n    B", "proof(intro vsubset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<R>\\<^sub>\\<circ>\n     (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> B\n 2. B \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                                 (vsnd_arrow (ZFC_in_HOL.set {a})\n                                   B\\<lparr>ArrVal\\<rparr>)", "show \"B \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vsnd_arrow (set {a}) B\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                                 (vsnd_arrow (ZFC_in_HOL.set {a})\n                                   B\\<lparr>ArrVal\\<rparr>)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vsnd_arrow (ZFC_in_HOL.set {a})\n                                B\\<lparr>ArrVal\\<rparr>)", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vsnd_arrow (ZFC_in_HOL.set {a})\n                                B\\<lparr>ArrVal\\<rparr>)", "assume b: \"b \\<in>\\<^sub>\\<circ> B\""], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vsnd_arrow (ZFC_in_HOL.set {a})\n                                B\\<lparr>ArrVal\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> B", "have b_def: \"b = vsnd_arrow (set {a}) B\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr>\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> B\n\ngoal (1 subgoal):\n 1. b =\n    vsnd_arrow (ZFC_in_HOL.set {a})\n     B\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  b =\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B\\<lparr>ArrVal\\<rparr>\\<lparr>\\<langle>a, b\\<rangle>\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> B \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (vsnd_arrow (ZFC_in_HOL.set {a})\n                                B\\<lparr>ArrVal\\<rparr>)", "from b assms"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> B\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (vsnd_arrow (set {a}) B\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> B\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                           (vsnd_arrow (ZFC_in_HOL.set {a})\n                             B\\<lparr>ArrVal\\<rparr>)", "by (subst b_def, use nothing in \\<open>intro vsv.vsv_vimageI2\\<close>) \n          (auto simp: cat_cs_simps cat_cs_intros)"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (vsnd_arrow (ZFC_in_HOL.set {a})\n                           B\\<lparr>ArrVal\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                               (vsnd_arrow (ZFC_in_HOL.set {a})\n                                 B\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> B", "qed (rule vsnd_arrow_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (vsnd_arrow (ZFC_in_HOL.set {a}) B\\<lparr>ArrVal\\<rparr>) =\n  B\n\ngoal (2 subgoals):\n 1. ZFC_in_HOL.set {a} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 2. ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B =\n    ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ> B", "qed (use assms in auto)"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr_isomorphism:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "unfolding cat_Set_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by (rule vsnd_arrow_is_cat_Set_arr_isomorphism_Vset)"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Set_arr_isomorphism'[cat_rel_par_Set_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = set {a} \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"vsnd_arrow (set {a}) B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B", "using assms(1-2)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B", "by (rule vsnd_arrow_is_cat_Set_arr_isomorphism)"], ["", "lemmas [cat_rel_par_Set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Set_arr_isomorphism'"], ["", "subsubsection\\<open>Projection arrows are isomorphisms in the category \\<open>Par\\<close>\\<close>"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Par_arr_isomorphism:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "interpret Set_Par: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "show \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "by \n      (\n        rule Set_Par.wr_subcat_is_arr_isomorphism_is_arr_isomorphism\n          [\n            THEN iffD1, \n            OF vfst_arrow_is_cat_Set_arr_isomorphism_Vset[\n              OF assms[unfolded cat_Par_components]\n              ]\n          ]\n      )"], ["proof (state)\nthis:\n  vfst_arrow A\n   (ZFC_in_HOL.set\n     {b}) : A \\<times>\\<^sub>\\<circ>\n            ZFC_in_HOL.set\n             {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Par_arr_isomorphism'[cat_rel_Par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"b \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> set {b}\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Par \\<alpha>\"\n  shows \"vfst_arrow A (set {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "by (rule vfst_arrow_is_cat_Par_arr_isomorphism)"], ["", "lemmas [cat_rel_Par_set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Par_arr_isomorphism'"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Par_arr_isomorphism:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "interpret Set_Par: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "show \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by \n      (\n        rule Set_Par.wr_subcat_is_arr_isomorphism_is_arr_isomorphism\n          [\n            THEN iffD1, \n            OF vsnd_arrow_is_cat_Set_arr_isomorphism_Vset[\n              OF assms[unfolded cat_Par_components]\n              ]\n          ]\n      )"], ["proof (state)\nthis:\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n       B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Par_arr_isomorphism'[cat_rel_Par_set_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = set {a} \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Par \\<alpha>\"\n  shows \"vsnd_arrow (set {a}) B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B", "using assms(1-2)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by (rule vsnd_arrow_is_cat_Par_arr_isomorphism)"], ["", "lemmas [cat_rel_Par_set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Par_arr_isomorphism'"], ["", "subsubsection\\<open>Projection arrows are isomorphisms in the category \\<open>Rel\\<close>\\<close>"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Rel_arr_isomorphism:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vfst_arrow A (set {b}) : A \\<times>\\<^sub>\\<circ> set {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "interpret Set_Par: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "interpret Par_Rel: wide_replete_subcategory \\<alpha> \\<open>cat_Par \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Par_cat_Rel)"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "interpret Set_Rel: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                   \\<alpha>", "by \n      ( \n        rule wr_subcat_trans\n          [\n            OF \n              Set_Par.wide_replete_subcategory_axioms \n              Par_Rel.wide_replete_subcategory_axioms\n          ]\n      )"], ["proof (state)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "by \n      (\n        rule Set_Rel.wr_subcat_is_arr_isomorphism_is_arr_isomorphism\n          [\n            THEN iffD1, \n            OF vfst_arrow_is_cat_Set_arr_isomorphism_Vset[\n              OF assms[unfolded cat_Rel_components]\n              ]\n          ]\n      )"], ["proof (state)\nthis:\n  vfst_arrow A\n   (ZFC_in_HOL.set\n     {b}) : A \\<times>\\<^sub>\\<circ>\n            ZFC_in_HOL.set\n             {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) vfst_arrow_is_cat_Rel_arr_isomorphism'[cat_Rel_par_set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"b \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = A \\<times>\\<^sub>\\<circ> set {b}\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"vfst_arrow A (set {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A", "using assms(1-2)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> A", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vfst_arrow A\n     (ZFC_in_HOL.set\n       {b}) : A \\<times>\\<^sub>\\<circ>\n              ZFC_in_HOL.set\n               {b} \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> A", "by (rule vfst_arrow_is_cat_Rel_arr_isomorphism)"], ["", "lemmas [cat_Rel_par_set_cs_intros] = \\<Z>.vfst_arrow_is_cat_Rel_arr_isomorphism'"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Rel_arr_isomorphism:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"vsnd_arrow (set {a}) B : set {a} \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "interpret Set_Par: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Par\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Set_cat_Par)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "interpret Par_Rel: wide_replete_subcategory \\<alpha> \\<open>cat_Par \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                   \\<alpha>", "by (rule wide_replete_subcategory_cat_Par_cat_Rel)"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "interpret Set_Rel: wide_replete_subcategory \\<alpha> \\<open>cat_Set \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                   \\<alpha>", "by \n      ( \n        rule wr_subcat_trans\n          [\n            OF \n              Set_Par.wide_replete_subcategory_axioms \n              Par_Rel.wide_replete_subcategory_axioms\n          ]\n      )"], ["proof (state)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by \n      (\n        rule Set_Rel.wr_subcat_is_arr_isomorphism_is_arr_isomorphism\n          [\n            THEN iffD1, \n            OF vsnd_arrow_is_cat_Set_arr_isomorphism_Vset[\n              OF assms[unfolded cat_Rel_components]\n              ]\n          ]\n      )"], ["proof (state)\nthis:\n  vsnd_arrow (ZFC_in_HOL.set {a})\n   B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n       B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) vsnd_arrow_is_cat_Rel_arr_isomorphism'[cat_Rel_par_set_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n    and \"AB = set {a} \\<times>\\<^sub>\\<circ> B\"\n    and \"A' = A\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"vsnd_arrow (set {a}) B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B", "using assms(1-2)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : AB \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> B", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsnd_arrow (ZFC_in_HOL.set {a})\n     B : ZFC_in_HOL.set {a} \\<times>\\<^sub>\\<circ>\n         B \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (rule vsnd_arrow_is_cat_Rel_arr_isomorphism)"], ["", "lemmas [cat_Rel_par_set_cs_intros] = \\<Z>.vsnd_arrow_is_cat_Rel_arr_isomorphism'"], ["", "subsection\\<open>Projection arrow for \\<open>vproduct\\<close>\\<close>"], ["", "definition vprojection_arrow :: \"V \\<Rightarrow> (V \\<Rightarrow> V) \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"vprojection_arrow I A i = [vprojection I A i, (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. A i), A i]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma vprojection_arrow_components:\n  shows \"vprojection_arrow I A i\\<lparr>ArrVal\\<rparr> = vprojection I A i\"\n    and \"vprojection_arrow I A i\\<lparr>ArrDom\\<rparr> = (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. A i)\"\n    and \"vprojection_arrow I A i\\<lparr>ArrCod\\<rparr> = A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vprojection_arrow I A i\\<lparr>ArrVal\\<rparr> = vprojection I A i &&&\n    vprojection_arrow I A i\\<lparr>ArrDom\\<rparr> = vproduct I A &&&\n    vprojection_arrow I A i\\<lparr>ArrCod\\<rparr> = A i", "unfolding vprojection_arrow_def arr_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [vprojection I A i, vproduct I A,\n     A i]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n    vprojection I A i &&&\n    [vprojection I A i, vproduct I A,\n     A i]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n    vproduct I A &&&\n    [vprojection I A i, vproduct I A,\n     A i]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    A i", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Projection arrow value\\<close>"], ["", "mk_VLambda vprojection_arrow_components(1)[unfolded vprojection_def]\n  |vsv vprojection_arrow_vsv[cat_Set_cs_intros]|\n  |vdomain vprojection_arrow_vdomain[cat_Set_cs_simps]|\n  |app vprojection_arrow_app[cat_Set_cs_simps]|"], ["", "subsubsection\\<open>Projection arrow is an arrow in the category \\<open>Set\\<close>\\<close>"], ["", "lemma (in \\<Z>) arr_Set_vprojection_arrow:\n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"VLambda I A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"arr_Set \\<alpha> (vprojection_arrow I A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (vprojection_arrow I A i)", "proof(intro arr_SetI)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (vprojection_arrow I A i)\n 3. vsv (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>)\n 4. vcard (vprojection_arrow I A i) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>) =\n    vprojection_arrow I A i\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n 7. vprojection_arrow I A i\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"vfsequence (vprojection_arrow I A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (vprojection_arrow I A i)", "unfolding vprojection_arrow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence [vprojection I A i, vproduct I A, A i]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (vprojection_arrow I A i)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>)\n 3. vcard (vprojection_arrow I A i) = 3\\<^sub>\\<nat>\n 4. \\<D>\\<^sub>\\<circ> (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>) =\n    vprojection_arrow I A i\\<lparr>ArrDom\\<rparr>\n 5. \\<R>\\<^sub>\\<circ> (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n 6. vprojection_arrow I A i\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"vcard (vprojection_arrow I A i) = 3\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (vprojection_arrow I A i) = 3\\<^sub>\\<nat>", "unfolding vprojection_arrow_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard [vprojection I A i, vproduct I A, A i]\\<^sub>\\<circ> =\n    3\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (vprojection_arrow I A i) = 3\\<^sub>\\<nat>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>) =\n    vprojection_arrow I A i\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n 5. vprojection_arrow I A i\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"vprojection_arrow I A i\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding vprojection_arrow_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from assms(1)"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I", "have \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. i \\<in>\\<^sub>\\<circ> I", "by simp"], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I", "have \"A i \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (VLambda I A)\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. A i \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (VLambda I A)", "by auto"], ["proof (state)\nthis:\n  A i \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (VLambda I A)\n\ngoal (1 subgoal):\n 1. A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "moreover"], ["proof (state)\nthis:\n  A i \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (VLambda I A)\n\ngoal (1 subgoal):\n 1. A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from assms(2)"], ["proof (chain)\npicking this:\n  VLambda I A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have \"\\<R>\\<^sub>\\<circ> (VLambda I A) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  VLambda I A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (VLambda I A) \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (meson vrange_in_VsetI)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (VLambda I A) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "ultimately"], ["proof (chain)\npicking this:\n  A i \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (VLambda I A)\n  \\<R>\\<^sub>\\<circ> (VLambda I A) \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  A i \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (VLambda I A)\n  \\<R>\\<^sub>\\<circ> (VLambda I A) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by auto"], ["proof (state)\nthis:\n  A i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>) =\n    vprojection_arrow I A i\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (vprojection_arrow I A i\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> vprojection_arrow I A i\\<lparr>ArrCod\\<rparr>\n 5. vprojection_arrow I A i\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "qed \n  (\n    auto \n      simp: vprojection_arrow_components \n      intro!: \n        assms \n        vprojection_vrange_vsubset \n        Limit_vproduct_in_Vset_if_VLambda_in_VsetI\n  )"], ["", "lemma (in \\<Z>) vprojection_arrow_is_arr:\n  assumes \"i \\<in>\\<^sub>\\<circ> I\" and \"VLambda I A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vprojection_arrow I A i : (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. A i) \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vprojection_arrow I A\n     i : vproduct I A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A i", "proof(intro cat_Set_is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. arr_Set \\<alpha> (vprojection_arrow I A i)\n 2. vprojection_arrow I A i\\<lparr>ArrDom\\<rparr> = vproduct I A\n 3. vprojection_arrow I A i\\<lparr>ArrCod\\<rparr> = A i", "from assms"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I\n  VLambda I A \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"arr_Set \\<alpha> (vprojection_arrow I A i)\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n  VLambda I A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (vprojection_arrow I A i)", "by (rule arr_Set_vprojection_arrow)"], ["proof (state)\nthis:\n  arr_Set \\<alpha> (vprojection_arrow I A i)\n\ngoal (2 subgoals):\n 1. vprojection_arrow I A i\\<lparr>ArrDom\\<rparr> = vproduct I A\n 2. vprojection_arrow I A i\\<lparr>ArrCod\\<rparr> = A i", "qed (simp_all add: vprojection_arrow_components)"], ["", "subsection\\<open>Product arrow value for \\<open>Rel\\<close>\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition prod_2_Rel_ArrVal :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"prod_2_Rel_ArrVal S T =\n    set {\\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle> | a b c d. \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and> \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}\""], ["", "lemma small_prod_2_Rel_ArrVal[simp]:\n  \"small {\\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle> | a b c d. \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and> \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}\"\n  (is \\<open>small ?S\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {\\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle> |a b c d.\n      \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and>\n      \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {\\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle> |a b c d.\n     \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and>\n     \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}\n    \\<subseteq> elts ?x", "show \"?S \\<subseteq> elts ((\\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T) \\<times>\\<^sub>\\<circ> (\\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle> |a b c d.\n     \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and>\n     \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}\n    \\<subseteq> elts\n                 ((\\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                   \\<D>\\<^sub>\\<circ> T) \\<times>\\<^sub>\\<circ>\n                  \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                  \\<R>\\<^sub>\\<circ> T)", "by auto"], ["proof (state)\nthis:\n  {\\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle> |a b c d.\n   \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and>\n   \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}\n  \\<subseteq> elts\n               ((\\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                 \\<D>\\<^sub>\\<circ> T) \\<times>\\<^sub>\\<circ>\n                \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                \\<R>\\<^sub>\\<circ> T)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma prod_2_Rel_ArrValI:\n  assumes \"ab_cd = \\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle>\"\n    and \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\"\n    and \"\\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\"\n  shows \"ab_cd \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ab_cd \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T", "using assms"], ["proof (prove)\nusing this:\n  ab_cd = \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. ab_cd \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T", "unfolding prod_2_Rel_ArrVal_def"], ["proof (prove)\nusing this:\n  ab_cd = \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. ab_cd\n    \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {\\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle> |a\n                          b c d.\n                          \\<langle>a, c\\<rangle>\n                          \\<in>\\<^sub>\\<circ> S \\<and>\n                          \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}", "by simp"], ["", "lemma prod_2_Rel_ArrValD[dest]:\n  assumes \"\\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\"\n  shows \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\" and \"\\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S &&&\n    \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T", "using assms"], ["proof (prove)\nusing this:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S &&&\n    \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T", "unfolding prod_2_Rel_ArrVal_def"], ["proof (prove)\nusing this:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                       {\\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle> |a b\n                        c d.\n                        \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and>\n                        \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}\n\ngoal (1 subgoal):\n 1. \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S &&&\n    \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T", "by auto"], ["", "lemma prod_2_Rel_ArrValE[elim]:\n  assumes \"ab_cd \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\"\n  obtains a b c d where \"ab_cd = \\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle>\" \n    and \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\"\n    and \"\\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>ab_cd = \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>;\n         \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S;\n         \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ab_cd \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>ab_cd = \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>;\n         \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S;\n         \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding prod_2_Rel_ArrVal_def"], ["proof (prove)\nusing this:\n  ab_cd\n  \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                       {\\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle> |a b\n                        c d.\n                        \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S \\<and>\n                        \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T}\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>ab_cd = \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>;\n         \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S;\n         \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "text\\<open>Elementary properties\\<close>"], ["", "lemma prod_2_Rel_ArrVal_vsubset_vprod:\n  \"prod_2_Rel_ArrVal S T \\<subseteq>\\<^sub>\\<circ> ((\\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T) \\<times>\\<^sub>\\<circ> (\\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal S T\n    \\<subseteq>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                               \\<D>\\<^sub>\\<circ> T) \\<times>\\<^sub>\\<circ>\n                              \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                              \\<R>\\<^sub>\\<circ> T", "by auto"], ["", "lemma prod_2_Rel_ArrVal_vbrelation: \"vbrelation (prod_2_Rel_ArrVal S T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (prod_2_Rel_ArrVal S T)", "using prod_2_Rel_ArrVal_vsubset_vprod"], ["proof (prove)\nusing this:\n  prod_2_Rel_ArrVal ?S ?T\n  \\<subseteq>\\<^sub>\\<circ> (\\<D>\\<^sub>\\<circ> ?S \\<times>\\<^sub>\\<circ>\n                             \\<D>\\<^sub>\\<circ> ?T) \\<times>\\<^sub>\\<circ>\n                            \\<R>\\<^sub>\\<circ> ?S \\<times>\\<^sub>\\<circ>\n                            \\<R>\\<^sub>\\<circ> ?T\n\ngoal (1 subgoal):\n 1. vbrelation (prod_2_Rel_ArrVal S T)", "by auto"], ["", "lemma prod_2_Rel_ArrVal_vdomain: \"\\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T) = \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T) =\n    \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T", "proof(intro vsubset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> T\n 2. \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "show \"\\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<D>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "fix ab"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<D>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "assume \"ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\""], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<D>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "then"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> T", "obtain a b\n      where ab_def: \"ab = \\<langle>a, b\\<rangle>\" \n        and \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S\"\n        and \"b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = \\<langle>a, b\\<rangle>;\n         a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S;\n         b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<D>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "then"], ["proof (chain)\npicking this:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T", "obtain c d where \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\" and \"\\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\""], ["proof (prove)\nusing this:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        \\<lbrakk>\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S;\n         \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<D>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T", "have \"\\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\""], ["proof (prove)\nusing this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n    \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T", "by (intro prod_2_Rel_ArrValI) auto"], ["proof (state)\nthis:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<D>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "then"], ["proof (chain)\npicking this:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T", "show \"ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\""], ["proof (prove)\nusing this:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "unfolding ab_def"], ["proof (prove)\nusing this:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. \\<langle>a, b\\<rangle>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "by auto"], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> T\n  \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\n    \\<subseteq>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> T", "qed (use prod_2_Rel_ArrVal_vsubset_vprod in blast)"], ["", "lemma prod_2_Rel_ArrVal_vrange: \"\\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T) = \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T) =\n    \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T", "proof(intro vsubset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                              \\<R>\\<^sub>\\<circ> T\n 2. \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "show \"\\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<R>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "fix cd"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<R>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "assume \"cd \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\""], ["proof (state)\nthis:\n  cd \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                         \\<R>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<R>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "then"], ["proof (chain)\npicking this:\n  cd \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                         \\<R>\\<^sub>\\<circ> T", "obtain c d\n      where cd_def: \"cd = \\<langle>c, d\\<rangle>\" \n        and \"c \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S\"\n        and \"d \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\""], ["proof (prove)\nusing this:\n  cd \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                         \\<R>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        \\<lbrakk>cd = \\<langle>c, d\\<rangle>;\n         c \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S;\n         d \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  cd = \\<langle>c, d\\<rangle>\n  c \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S\n  d \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<R>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "then"], ["proof (chain)\npicking this:\n  cd = \\<langle>c, d\\<rangle>\n  c \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S\n  d \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T", "obtain a b where \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\" and \"\\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\""], ["proof (prove)\nusing this:\n  cd = \\<langle>c, d\\<rangle>\n  c \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S\n  d \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S;\n         \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<R>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "then"], ["proof (chain)\npicking this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T", "have \"\\<langle>\\<langle>a, b\\<rangle>, \\<langle>c, d\\<rangle>\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\""], ["proof (prove)\nusing this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n    \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T", "by (intro prod_2_Rel_ArrValI) auto"], ["proof (state)\nthis:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                             \\<R>\\<^sub>\\<circ> T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "then"], ["proof (chain)\npicking this:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T", "show \"cd \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\""], ["proof (prove)\nusing this:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. cd \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "unfolding cd_def"], ["proof (prove)\nusing this:\n  \\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle>\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. \\<langle>c, d\\<rangle>\n    \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)", "by auto"], ["proof (state)\nthis:\n  cd \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> T\n  \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal S T)\n    \\<subseteq>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> S \\<times>\\<^sub>\\<circ>\n                              \\<R>\\<^sub>\\<circ> T", "qed (use prod_2_Rel_ArrVal_vsubset_vprod in blast)"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma \n  assumes \"vsv g\" and \"vsv f\"\n  shows prod_2_Rel_ArrVal_vsv: \"vsv (prod_2_Rel_ArrVal g f)\"\n    and prod_2_Rel_ArrVal_app: \n      \"\\<And>a b. \\<lbrakk> a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g; b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f \\<rbrakk> \\<Longrightarrow> \n        prod_2_Rel_ArrVal g f\\<lparr>\\<langle>a,b\\<rangle>\\<rparr> = \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (prod_2_Rel_ArrVal g f) &&&\n    (\\<And>a b.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n         b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n        \\<Longrightarrow> prod_2_Rel_ArrVal g\n                           f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n                          \\<langle>g\\<lparr>a\\<rparr>,\n                                   f\\<lparr>b\\<rparr>\\<rangle>)", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (prod_2_Rel_ArrVal g f)\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n        b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n       \\<Longrightarrow> prod_2_Rel_ArrVal g\n                          f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n                         \\<langle>g\\<lparr>a\\<rparr>,\n                                  f\\<lparr>b\\<rparr>\\<rangle>", "interpret g: vsv g"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv g", "by (rule assms(1))"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (prod_2_Rel_ArrVal g f)\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n        b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n       \\<Longrightarrow> prod_2_Rel_ArrVal g\n                          f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n                         \\<langle>g\\<lparr>a\\<rparr>,\n                                  f\\<lparr>b\\<rparr>\\<rangle>", "interpret f: vsv f"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv f", "by (rule assms(2))"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (prod_2_Rel_ArrVal g f)\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n        b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n       \\<Longrightarrow> prod_2_Rel_ArrVal g\n                          f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n                         \\<langle>g\\<lparr>a\\<rparr>,\n                                  f\\<lparr>b\\<rparr>\\<rangle>", "show vsv_gf: \"vsv (prod_2_Rel_ArrVal g f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (prod_2_Rel_ArrVal g f)", "by (intro vsvI; (elim prod_2_Rel_ArrValE)?; (unfold prod_2_Rel_ArrVal_def)?)\n      (auto simp: g.vsv f.vsv)"], ["proof (state)\nthis:\n  vsv (prod_2_Rel_ArrVal g f)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n        b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n       \\<Longrightarrow> prod_2_Rel_ArrVal g\n                          f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n                         \\<langle>g\\<lparr>a\\<rparr>,\n                                  f\\<lparr>b\\<rparr>\\<rangle>", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n        b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n       \\<Longrightarrow> prod_2_Rel_ArrVal g\n                          f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n                         \\<langle>g\\<lparr>a\\<rparr>,\n                                  f\\<lparr>b\\<rparr>\\<rangle>", "assume \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\" \"b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n        b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n       \\<Longrightarrow> prod_2_Rel_ArrVal g\n                          f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n                         \\<langle>g\\<lparr>a\\<rparr>,\n                                  f\\<lparr>b\\<rparr>\\<rangle>", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f", "have a_ga: \"\\<langle>a, g\\<lparr>a\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> g\" and b_fb: \"\\<langle>b, f\\<lparr>b\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> f\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. \\<langle>a, g\\<lparr>a\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> g &&&\n    \\<langle>b, f\\<lparr>b\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> f", "by auto"], ["proof (state)\nthis:\n  \\<langle>a, g\\<lparr>a\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> g\n  \\<langle>b, f\\<lparr>b\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n        b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n       \\<Longrightarrow> prod_2_Rel_ArrVal g\n                          f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n                         \\<langle>g\\<lparr>a\\<rparr>,\n                                  f\\<lparr>b\\<rparr>\\<rangle>", "from a_ga b_fb"], ["proof (chain)\npicking this:\n  \\<langle>a, g\\<lparr>a\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> g\n  \\<langle>b, f\\<lparr>b\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> f", "show \"prod_2_Rel_ArrVal g f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> = \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>a, g\\<lparr>a\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> g\n  \\<langle>b, f\\<lparr>b\\<rparr>\\<rangle> \\<in>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal g f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n    \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle>", "by (cs_concl cs_simp: vsv.vsv_appI[OF vsv_gf] cs_intro: prod_2_Rel_ArrValI)"], ["proof (state)\nthis:\n  prod_2_Rel_ArrVal g f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n  \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_2_Rel_ArrVal_v11:\n  assumes \"v11 g\" and \"v11 f\"\n  shows \"v11 (prod_2_Rel_ArrVal g f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (prod_2_Rel_ArrVal g f)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. v11 (prod_2_Rel_ArrVal g f)", "interpret g: v11 g"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 g", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. v11 (prod_2_Rel_ArrVal g f)", "interpret f: v11 f"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 f", "by (rule assms(2))"], ["proof (state)\ngoal (1 subgoal):\n 1. v11 (prod_2_Rel_ArrVal g f)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (prod_2_Rel_ArrVal g f)", "proof\n    (\n      intro vsv.vsv_valeq_v11I prod_2_Rel_ArrVal_vsv g.vsv_axioms f.vsv_axioms, \n      unfold prod_2_Rel_ArrVal_vdomain\n    )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n g \\<times>\\<^sub>\\<circ>\n\\<D>\\<^sub>\\<circ> f;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> f;\n        prod_2_Rel_ArrVal g f\\<lparr>x\\<rparr> =\n        prod_2_Rel_ArrVal g f\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix ab cd"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n g \\<times>\\<^sub>\\<circ>\n\\<D>\\<^sub>\\<circ> f;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> f;\n        prod_2_Rel_ArrVal g f\\<lparr>x\\<rparr> =\n        prod_2_Rel_ArrVal g f\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume prems:\n      \"ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\"  \n      \"cd \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\"\n      \"prod_2_Rel_ArrVal g f\\<lparr>ab\\<rparr> = prod_2_Rel_ArrVal g f\\<lparr>cd\\<rparr>\""], ["proof (state)\nthis:\n  ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> f\n  cd \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> f\n  prod_2_Rel_ArrVal g f\\<lparr>ab\\<rparr> =\n  prod_2_Rel_ArrVal g f\\<lparr>cd\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n g \\<times>\\<^sub>\\<circ>\n\\<D>\\<^sub>\\<circ> f;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> f;\n        prod_2_Rel_ArrVal g f\\<lparr>x\\<rparr> =\n        prod_2_Rel_ArrVal g f\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems(1)"], ["proof (chain)\npicking this:\n  ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> f", "obtain a b\n      where ab_def: \"ab = \\<langle>a, b\\<rangle>\" and a: \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\" and b: \"b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\""], ["proof (prove)\nusing this:\n  ab \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>ab = \\<langle>a, b\\<rangle>;\n         a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n         b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ab = \\<langle>a, b\\<rangle>\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n g \\<times>\\<^sub>\\<circ>\n\\<D>\\<^sub>\\<circ> f;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> f;\n        prod_2_Rel_ArrVal g f\\<lparr>x\\<rparr> =\n        prod_2_Rel_ArrVal g f\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems(2)"], ["proof (chain)\npicking this:\n  cd \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> f", "obtain c d\n      where cd_def: \"cd = \\<langle>c, d\\<rangle>\" and c: \"c \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\" and d: \"d \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\""], ["proof (prove)\nusing this:\n  cd \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                         \\<D>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        \\<lbrakk>cd = \\<langle>c, d\\<rangle>;\n         c \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g;\n         d \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  cd = \\<langle>c, d\\<rangle>\n  c \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  d \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n g \\<times>\\<^sub>\\<circ>\n\\<D>\\<^sub>\\<circ> f;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> f;\n        prod_2_Rel_ArrVal g f\\<lparr>x\\<rparr> =\n        prod_2_Rel_ArrVal g f\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "from prems(3) a b c d"], ["proof (chain)\npicking this:\n  prod_2_Rel_ArrVal g f\\<lparr>ab\\<rparr> =\n  prod_2_Rel_ArrVal g f\\<lparr>cd\\<rparr>\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n  c \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  d \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f", "have \"\\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle> = \\<langle>g\\<lparr>c\\<rparr>, f\\<lparr>d\\<rparr>\\<rangle>\""], ["proof (prove)\nusing this:\n  prod_2_Rel_ArrVal g f\\<lparr>ab\\<rparr> =\n  prod_2_Rel_ArrVal g f\\<lparr>cd\\<rparr>\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n  c \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  d \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle> =\n    \\<langle>g\\<lparr>c\\<rparr>, f\\<lparr>d\\<rparr>\\<rangle>", "unfolding ab_def cd_def"], ["proof (prove)\nusing this:\n  prod_2_Rel_ArrVal g f\\<lparr>\\<langle>a, b\\<rangle>\\<rparr> =\n  prod_2_Rel_ArrVal g f\\<lparr>\\<langle>c, d\\<rangle>\\<rparr>\n  a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n  c \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g\n  d \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> f\n\ngoal (1 subgoal):\n 1. \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle> =\n    \\<langle>g\\<lparr>c\\<rparr>, f\\<lparr>d\\<rparr>\\<rangle>", "by (cs_prems cs_simp: prod_2_Rel_ArrVal_app cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle> =\n  \\<langle>g\\<lparr>c\\<rparr>, f\\<lparr>d\\<rparr>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n g \\<times>\\<^sub>\\<circ>\n\\<D>\\<^sub>\\<circ> f;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> f;\n        prod_2_Rel_ArrVal g f\\<lparr>x\\<rparr> =\n        prod_2_Rel_ArrVal g f\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle> =\n  \\<langle>g\\<lparr>c\\<rparr>, f\\<lparr>d\\<rparr>\\<rangle>", "have \"g\\<lparr>a\\<rparr> = g\\<lparr>c\\<rparr>\" and \"f\\<lparr>b\\<rparr> = f\\<lparr>d\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<langle>g\\<lparr>a\\<rparr>, f\\<lparr>b\\<rparr>\\<rangle> =\n  \\<langle>g\\<lparr>c\\<rparr>, f\\<lparr>d\\<rparr>\\<rangle>\n\ngoal (1 subgoal):\n 1. g\\<lparr>a\\<rparr> = g\\<lparr>c\\<rparr> &&&\n    f\\<lparr>b\\<rparr> = f\\<lparr>d\\<rparr>", "by simp_all"], ["proof (state)\nthis:\n  g\\<lparr>a\\<rparr> = g\\<lparr>c\\<rparr>\n  f\\<lparr>b\\<rparr> = f\\<lparr>d\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n g \\<times>\\<^sub>\\<circ>\n\\<D>\\<^sub>\\<circ> f;\n        y \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> g \\<times>\\<^sub>\\<circ>\n                              \\<D>\\<^sub>\\<circ> f;\n        prod_2_Rel_ArrVal g f\\<lparr>x\\<rparr> =\n        prod_2_Rel_ArrVal g f\\<lparr>y\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  g\\<lparr>a\\<rparr> = g\\<lparr>c\\<rparr>\n  f\\<lparr>b\\<rparr> = f\\<lparr>d\\<rparr>", "show \"ab = cd\""], ["proof (prove)\nusing this:\n  g\\<lparr>a\\<rparr> = g\\<lparr>c\\<rparr>\n  f\\<lparr>b\\<rparr> = f\\<lparr>d\\<rparr>\n\ngoal (1 subgoal):\n 1. ab = cd", "by (auto simp: ab_def cd_def a b c d f.v11_injective g.v11_injective)"], ["proof (state)\nthis:\n  ab = cd\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v11 (prod_2_Rel_ArrVal g f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_2_Rel_ArrVal_vcomp:\n  \"prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n    prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S) (T' \\<circ>\\<^sub>\\<circ> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n    prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n     (T' \\<circ>\\<^sub>\\<circ> T)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n    prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n     (T' \\<circ>\\<^sub>\\<circ> T)", "interpret ST': vbrelation \\<open>prod_2_Rel_ArrVal S' T'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (prod_2_Rel_ArrVal S' T')", "by (rule prod_2_Rel_ArrVal_vbrelation)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n    prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n     (T' \\<circ>\\<^sub>\\<circ> T)", "interpret ST: vbrelation \\<open>prod_2_Rel_ArrVal S T\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vbrelation (prod_2_Rel_ArrVal S T)", "by (rule prod_2_Rel_ArrVal_vbrelation)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n    prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n     (T' \\<circ>\\<^sub>\\<circ> T)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n    prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n     (T' \\<circ>\\<^sub>\\<circ> T)", "(*TODO: simplify proof*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n    prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n     (T' \\<circ>\\<^sub>\\<circ> T)", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "fix aa'_cc'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "assume \n      \"aa'_cc' \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\""], ["proof (state)\nthis:\n  aa'_cc'\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                      prod_2_Rel_ArrVal S T\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "then"], ["proof (chain)\npicking this:\n  aa'_cc'\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                      prod_2_Rel_ArrVal S T", "obtain aa' bb' cc' where ac_def: \"aa'_cc' = \\<langle>aa', cc'\\<rangle>\" \n      and bc: \"\\<langle>bb', cc'\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T'\"\n      and ab: \"\\<langle>aa', bb'\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\""], ["proof (prove)\nusing this:\n  aa'_cc'\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                      prod_2_Rel_ArrVal S T\n\ngoal (1 subgoal):\n 1. (\\<And>aa' cc' bb'.\n        \\<lbrakk>aa'_cc' = \\<langle>aa', cc'\\<rangle>;\n         \\<langle>bb', cc'\\<rangle>\n         \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T';\n         \\<langle>aa', bb'\\<rangle>\n         \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  aa'_cc' = \\<langle>aa', cc'\\<rangle>\n  \\<langle>bb', cc'\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T'\n  \\<langle>aa', bb'\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "from bc"], ["proof (chain)\npicking this:\n  \\<langle>bb', cc'\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T'", "obtain b b' c c' \n      where bb'_cc'_def: \"\\<langle>bb', cc'\\<rangle> = \\<langle>\\<langle>b, b'\\<rangle>, \\<langle>c, c'\\<rangle>\\<rangle>\"\n        and bc: \"\\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\"\n        and bc': \"\\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\""], ["proof (prove)\nusing this:\n  \\<langle>bb', cc'\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T'\n\ngoal (1 subgoal):\n 1. (\\<And>b b' c c'.\n        \\<lbrakk>\\<langle>bb', cc'\\<rangle> =\n                 \\<langle>\\<langle>b, b'\\<rangle>, c, c'\\<rangle>;\n         \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S';\n         \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<langle>bb', cc'\\<rangle> =\n  \\<langle>\\<langle>b, b'\\<rangle>, c, c'\\<rangle>\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "with ab"], ["proof (chain)\npicking this:\n  \\<langle>aa', bb'\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n  \\<langle>bb', cc'\\<rangle> =\n  \\<langle>\\<langle>b, b'\\<rangle>, c, c'\\<rangle>\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'", "obtain a a' \n      where aa'_bb'_def: \"\\<langle>aa', bb'\\<rangle> = \\<langle>\\<langle>a, a'\\<rangle>, \\<langle>b, b'\\<rangle>\\<rangle>\"\n        and ab: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\"\n        and ab': \"\\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\""], ["proof (prove)\nusing this:\n  \\<langle>aa', bb'\\<rangle> \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\n  \\<langle>bb', cc'\\<rangle> =\n  \\<langle>\\<langle>b, b'\\<rangle>, c, c'\\<rangle>\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\n\ngoal (1 subgoal):\n 1. (\\<And>a a'.\n        \\<lbrakk>\\<langle>aa', bb'\\<rangle> =\n                 \\<langle>\\<langle>a, a'\\<rangle>, b, b'\\<rangle>;\n         \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S;\n         \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<langle>aa', bb'\\<rangle> =\n  \\<langle>\\<langle>a, a'\\<rangle>, b, b'\\<rangle>\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "from bb'_cc'_def"], ["proof (chain)\npicking this:\n  \\<langle>bb', cc'\\<rangle> =\n  \\<langle>\\<langle>b, b'\\<rangle>, c, c'\\<rangle>", "have bb'_def: \"bb' = \\<langle>b, b'\\<rangle>\" and cc'_def: \"cc' = \\<langle>c, c'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>bb', cc'\\<rangle> =\n  \\<langle>\\<langle>b, b'\\<rangle>, c, c'\\<rangle>\n\ngoal (1 subgoal):\n 1. bb' = \\<langle>b, b'\\<rangle> &&& cc' = \\<langle>c, c'\\<rangle>", "by simp_all"], ["proof (state)\nthis:\n  bb' = \\<langle>b, b'\\<rangle>\n  cc' = \\<langle>c, c'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "from aa'_bb'_def"], ["proof (chain)\npicking this:\n  \\<langle>aa', bb'\\<rangle> =\n  \\<langle>\\<langle>a, a'\\<rangle>, b, b'\\<rangle>", "have aa'_def: \"aa' = \\<langle>a, a'\\<rangle>\" and bb'_def: \"bb' = \\<langle>b, b'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>aa', bb'\\<rangle> =\n  \\<langle>\\<langle>a, a'\\<rangle>, b, b'\\<rangle>\n\ngoal (1 subgoal):\n 1. aa' = \\<langle>a, a'\\<rangle> &&& bb' = \\<langle>b, b'\\<rangle>", "by simp_all"], ["proof (state)\nthis:\n  aa' = \\<langle>a, a'\\<rangle>\n  bb' = \\<langle>b, b'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "from bc bc' ab ab'"], ["proof (chain)\npicking this:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T", "show \"aa'_cc' \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S) (T' \\<circ>\\<^sub>\\<circ> T)\""], ["proof (prove)\nusing this:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. aa'_cc'\n    \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                         (T' \\<circ>\\<^sub>\\<circ> T)", "unfolding ac_def aa'_def cc'_def"], ["proof (prove)\nusing this:\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<langle>\\<langle>a, a'\\<rangle>, c, c'\\<rangle>\n    \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                         (T' \\<circ>\\<^sub>\\<circ> T)", "by (intro prod_2_Rel_ArrValI)\n        (cs_concl cs_intro: prod_2_Rel_ArrValI vcompI)+"], ["proof (state)\nthis:\n  aa'_cc'\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                       (T' \\<circ>\\<^sub>\\<circ> T)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "fix aa'_cc'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "assume \"aa'_cc' \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S) (T' \\<circ>\\<^sub>\\<circ> T)\""], ["proof (state)\nthis:\n  aa'_cc'\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                       (T' \\<circ>\\<^sub>\\<circ> T)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "then"], ["proof (chain)\npicking this:\n  aa'_cc'\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                       (T' \\<circ>\\<^sub>\\<circ> T)", "obtain a a' c c'\n      where aa'_cc'_def: \"aa'_cc' = \\<langle>\\<langle>a, a'\\<rangle>, \\<langle>c, c'\\<rangle>\\<rangle>\"\n        and ac: \"\\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S' \\<circ>\\<^sub>\\<circ> S\"\n        and ac': \"\\<langle>a', c'\\<rangle> \\<in>\\<^sub>\\<circ> T' \\<circ>\\<^sub>\\<circ> T\""], ["proof (prove)\nusing this:\n  aa'_cc'\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                       (T' \\<circ>\\<^sub>\\<circ> T)\n\ngoal (1 subgoal):\n 1. (\\<And>a a' c c'.\n        \\<lbrakk>aa'_cc' = \\<langle>\\<langle>a, a'\\<rangle>, c, c'\\<rangle>;\n         \\<langle>a, c\\<rangle>\n         \\<in>\\<^sub>\\<circ> S' \\<circ>\\<^sub>\\<circ> S;\n         \\<langle>a', c'\\<rangle>\n         \\<in>\\<^sub>\\<circ> T' \\<circ>\\<^sub>\\<circ> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  aa'_cc' = \\<langle>\\<langle>a, a'\\<rangle>, c, c'\\<rangle>\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S' \\<circ>\\<^sub>\\<circ> S\n  \\<langle>a', c'\\<rangle> \\<in>\\<^sub>\\<circ> T' \\<circ>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "from ac"], ["proof (chain)\npicking this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S' \\<circ>\\<^sub>\\<circ> S", "obtain b where ab: \"\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\" and bc: \"\\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\""], ["proof (prove)\nusing this:\n  \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> S' \\<circ>\\<^sub>\\<circ> S\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>\\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S;\n         \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "from ac'"], ["proof (chain)\npicking this:\n  \\<langle>a', c'\\<rangle> \\<in>\\<^sub>\\<circ> T' \\<circ>\\<^sub>\\<circ> T", "obtain b' where ab': \"\\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\" and bc': \"\\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\""], ["proof (prove)\nusing this:\n  \\<langle>a', c'\\<rangle> \\<in>\\<^sub>\\<circ> T' \\<circ>\\<^sub>\\<circ> T\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>\\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T;\n         \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n                              (T' \\<circ>\\<^sub>\\<circ> T) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                             prod_2_Rel_ArrVal S T", "from ab bc ab' bc'"], ["proof (chain)\npicking this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'", "show \n      \"aa'_cc' \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T\""], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\n\ngoal (1 subgoal):\n 1. aa'_cc'\n    \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                        prod_2_Rel_ArrVal S T", "unfolding aa'_cc'_def"], ["proof (prove)\nusing this:\n  \\<langle>a, b\\<rangle> \\<in>\\<^sub>\\<circ> S\n  \\<langle>b, c\\<rangle> \\<in>\\<^sub>\\<circ> S'\n  \\<langle>a', b'\\<rangle> \\<in>\\<^sub>\\<circ> T\n  \\<langle>b', c'\\<rangle> \\<in>\\<^sub>\\<circ> T'\n\ngoal (1 subgoal):\n 1. \\<langle>\\<langle>a, a'\\<rangle>, c, c'\\<rangle>\n    \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                        prod_2_Rel_ArrVal S T", "by (cs_concl cs_intro: vcompI prod_2_Rel_ArrValI)"], ["proof (state)\nthis:\n  aa'_cc'\n  \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ>\n                      prod_2_Rel_ArrVal S T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prod_2_Rel_ArrVal S' T' \\<circ>\\<^sub>\\<circ> prod_2_Rel_ArrVal S T =\n  prod_2_Rel_ArrVal (S' \\<circ>\\<^sub>\\<circ> S)\n   (T' \\<circ>\\<^sub>\\<circ> T)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_2_Rel_ArrVal_vid_on[cat_cs_simps]:\n  \"prod_2_Rel_ArrVal (vid_on A) (vid_on B) = vid_on (A \\<times>\\<^sub>\\<circ> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal (vid_on A) (vid_on B) =\n    vid_on (A \\<times>\\<^sub>\\<circ> B)", "unfolding prod_2_Rel_ArrVal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {\\<langle>\\<langle>a, b\\<rangle>, c, d\\<rangle> |a b c d.\n      \\<langle>a, c\\<rangle> \\<in>\\<^sub>\\<circ> vid_on A \\<and>\n      \\<langle>b, d\\<rangle> \\<in>\\<^sub>\\<circ> vid_on B} =\n    vid_on (A \\<times>\\<^sub>\\<circ> B)", "by auto"], ["", "subsection\\<open>Product arrow for \\<open>Rel\\<close>\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition prod_2_Rel :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"prod_2_Rel S T =\n    [\n      prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>),\n      S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>,\n      S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrCod\\<rparr>\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma prod_2_Rel_components: \n  shows \"prod_2_Rel S T\\<lparr>ArrVal\\<rparr> = prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>)\"\n    and [cat_cs_simps]: \"prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>\"\n    and [cat_cs_simps]: \"prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrVal\\<rparr> =\n    prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n     (T\\<lparr>ArrVal\\<rparr>) &&&\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr> =\n    S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ>\n    T\\<lparr>ArrDom\\<rparr> &&&\n    prod_2_Rel S T\\<lparr>ArrCod\\<rparr> =\n    S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrCod\\<rparr>", "unfolding prod_2_Rel_def arr_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [prod_2_Rel_ArrVal (S\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n      (T\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n     S\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<times>\\<^sub>\\<circ>\n     T\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     S\\<lparr>2\\<^sub>\\<nat>\\<rparr> \\<times>\\<^sub>\\<circ>\n     T\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n    prod_2_Rel_ArrVal (S\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n     (T\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) &&&\n    [prod_2_Rel_ArrVal (S\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n      (T\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n     S\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<times>\\<^sub>\\<circ>\n     T\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     S\\<lparr>2\\<^sub>\\<nat>\\<rparr> \\<times>\\<^sub>\\<circ>\n     T\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n    S\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<times>\\<^sub>\\<circ>\n    T\\<lparr>1\\<^sub>\\<nat>\\<rparr> &&&\n    [prod_2_Rel_ArrVal (S\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n      (T\\<lparr>[]\\<^sub>\\<circ>\\<rparr>),\n     S\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<times>\\<^sub>\\<circ>\n     T\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     S\\<lparr>2\\<^sub>\\<nat>\\<rparr> \\<times>\\<^sub>\\<circ>\n     T\\<lparr>2\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    S\\<lparr>2\\<^sub>\\<nat>\\<rparr> \\<times>\\<^sub>\\<circ>\n    T\\<lparr>2\\<^sub>\\<nat>\\<rparr>", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Product arrow for \\<open>Rel\\<close> is an arrow in \\<open>Rel\\<close>\\<close>"], ["", "lemma prod_2_Rel_is_cat_Rel_arr:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\" and \"T : C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\"    \n  shows \"prod_2_Rel S T : A \\<times>\\<^sub>\\<circ> C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "note S = cat_Rel_is_arrD[OF assms(1)]"], ["proof (state)\nthis:\n  arr_Rel \\<alpha> S\n  S\\<lparr>ArrDom\\<rparr> = A\n  S\\<lparr>ArrCod\\<rparr> = B\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "note T = cat_Rel_is_arrD[OF assms(2)]"], ["proof (state)\nthis:\n  arr_Rel \\<alpha> T\n  T\\<lparr>ArrDom\\<rparr> = C\n  T\\<lparr>ArrCod\\<rparr> = D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "interpret S: arr_Rel \\<alpha> S \n    rewrites [simp]: \"S\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"S\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = A &&& S\\<lparr>ArrCod\\<rparr> = B", "by (simp_all add: S)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "interpret T: arr_Rel \\<alpha> T \n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = C\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = C &&& T\\<lparr>ArrCod\\<rparr> = D", "by (simp_all add: T)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "proof(intro cat_Rel_is_arrI arr_RelI)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (prod_2_Rel S T)\n 3. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 4. vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 7. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 9. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 10. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "show \"vfsequence (prod_2_Rel S T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (prod_2_Rel S T)", "unfolding prod_2_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>),\n      S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ>\n      T\\<lparr>ArrDom\\<rparr>,\n      S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ>\n      T\\<lparr>ArrCod\\<rparr>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (prod_2_Rel S T)\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>\n 4. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 5. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 6. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 9. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "show \"vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>", "unfolding prod_2_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>),\n      S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ>\n      T\\<lparr>ArrDom\\<rparr>,\n      S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ>\n      T\\<lparr>ArrCod\\<rparr>]\\<^sub>\\<circ> =\n    3\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 5. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 8. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "from S"], ["proof (chain)\npicking this:\n  arr_Rel \\<alpha> S\n  S\\<lparr>ArrDom\\<rparr> = A\n  S\\<lparr>ArrCod\\<rparr> = B", "have \"\\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\" and \"\\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> S\n  S\\<lparr>ArrDom\\<rparr> = A\n  S\\<lparr>ArrCod\\<rparr> = B\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A &&&\n    \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 5. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 8. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "moreover"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 5. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 8. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "from T"], ["proof (chain)\npicking this:\n  arr_Rel \\<alpha> T\n  T\\<lparr>ArrDom\\<rparr> = C\n  T\\<lparr>ArrCod\\<rparr> = D", "have \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> C\" and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> D\""], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> T\n  T\\<lparr>ArrDom\\<rparr> = C\n  T\\<lparr>ArrCod\\<rparr> = D\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> C &&&\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> D", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> C\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> D\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 5. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 8. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "ultimately"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> C\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> D", "have \n      \"\\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> C\"\n      \"\\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B \\<times>\\<^sub>\\<circ> D\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> A\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> C\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> D\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> C &&&\n    \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> B \\<times>\\<^sub>\\<circ> D", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> C\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> B \\<times>\\<^sub>\\<circ> D\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 5. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 8. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "then"], ["proof (chain)\npicking this:\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> C\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> B \\<times>\\<^sub>\\<circ> D", "show \n      \"\\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\"\n      \"\\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> C\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> B \\<times>\\<^sub>\\<circ> D\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr> &&&\n    \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>", "unfolding \n        prod_2_Rel_components prod_2_Rel_ArrVal_vdomain prod_2_Rel_ArrVal_vrange"], ["proof (prove)\nusing this:\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> A \\<times>\\<^sub>\\<circ> C\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> B \\<times>\\<^sub>\\<circ> D\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ>\n                              T\\<lparr>ArrDom\\<rparr> &&&\n    \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ>\n                              T\\<lparr>ArrCod\\<rparr>", "by (force simp: prod_2_Rel_components)+"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n  \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 6. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "from \n      S.arr_Rel_ArrDom_in_Vset T.arr_Rel_ArrDom_in_Vset\n      S.arr_Rel_ArrCod_in_Vset T.arr_Rel_ArrCod_in_Vset"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  D \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \"prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  D \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding prod_2_Rel_components"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  D \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha> &&&\n    S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ> T\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (all\\<open>intro Limit_vtimes_in_VsetI\\<close>) auto"], ["proof (state)\nthis:\n  prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vbrelation (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 4. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "qed (auto simp: prod_2_Rel_components intro: prod_2_Rel_ArrVal_vbrelation)"], ["proof (state)\nthis:\n  prod_2_Rel S\n   T : A \\<times>\\<^sub>\\<circ>\n       C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n             D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_2_Rel_is_cat_Rel_arr'[cat_Rel_par_set_cs_intros]:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\"\n    and \"T : C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\"\n    and \"A' = A \\<times>\\<^sub>\\<circ> C\"\n    and \"B' = B \\<times>\\<^sub>\\<circ> D\"\n    and \"\\<CC>' = cat_Rel \\<alpha>\"\n  shows \"prod_2_Rel S T : A' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S T : A' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'", "using assms(1,2)"], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T : A' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> B'", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "by (rule prod_2_Rel_is_cat_Rel_arr)"], ["", "subsubsection\\<open>Product arrow for \\<open>Rel\\<close> is an arrow in \\<open>Set\\<close>\\<close>"], ["", "lemma prod_2_Rel_app[cat_rel_par_Set_cs_simps]:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" \n    and \"T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"    \n    and \"a \\<in>\\<^sub>\\<circ> A\"\n    and \"c \\<in>\\<^sub>\\<circ> C\"\n    and \"ac = \\<langle>a, c\\<rangle>\"\n  shows \"prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> = \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>, T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> =\n    \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n             T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> =\n    \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n             T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>", "note S = cat_Set_is_arrD[OF assms(1)]"], ["proof (state)\nthis:\n  arr_Set \\<alpha> S\n  S\\<lparr>ArrDom\\<rparr> = A\n  S\\<lparr>ArrCod\\<rparr> = B\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> =\n    \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n             T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>", "note T = cat_Set_is_arrD[OF assms(2)]"], ["proof (state)\nthis:\n  arr_Set \\<alpha> T\n  T\\<lparr>ArrDom\\<rparr> = C\n  T\\<lparr>ArrCod\\<rparr> = D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> =\n    \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n             T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>", "interpret S: arr_Set \\<alpha> S \n    rewrites [simp]: \"S\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"S\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = A &&& S\\<lparr>ArrCod\\<rparr> = B", "by (simp_all add: S)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> =\n    \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n             T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>", "interpret T: arr_Set \\<alpha> T \n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = C\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = C &&& T\\<lparr>ArrCod\\<rparr> = D", "by (simp_all add: T)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> =\n    \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n             T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>", "from assms(3,4)"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> A\n  c \\<in>\\<^sub>\\<circ> C", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  c \\<in>\\<^sub>\\<circ> C\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> =\n    \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n             T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>", "unfolding prod_2_Rel_components(1) assms(5)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  c \\<in>\\<^sub>\\<circ> C\n\ngoal (1 subgoal):\n 1. prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n     (T\\<lparr>ArrVal\\<rparr>)\\<lparr>\\<langle>a, c\\<rangle>\\<rparr> =\n    \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n             T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>", "by \n      (\n        cs_concl \n          cs_simp: \n            S.arr_Set_ArrVal_vdomain \n            T.arr_Set_ArrVal_vdomain \n            prod_2_Rel_ArrVal_app \n          cs_intro: V_cs_intros\n      )"], ["proof (state)\nthis:\n  prod_2_Rel S T\\<lparr>ArrVal\\<rparr>\\<lparr>ac\\<rparr> =\n  \\<langle>S\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n           T\\<lparr>ArrVal\\<rparr>\\<lparr>c\\<rparr>\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_2_Rel_is_cat_Set_arr:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" and \"T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"    \n  shows \"prod_2_Rel S T : A \\<times>\\<^sub>\\<circ> C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "note S = cat_Set_is_arrD[OF assms(1)]"], ["proof (state)\nthis:\n  arr_Set \\<alpha> S\n  S\\<lparr>ArrDom\\<rparr> = A\n  S\\<lparr>ArrCod\\<rparr> = B\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "note T = cat_Set_is_arrD[OF assms(2)]"], ["proof (state)\nthis:\n  arr_Set \\<alpha> T\n  T\\<lparr>ArrDom\\<rparr> = C\n  T\\<lparr>ArrCod\\<rparr> = D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "interpret S: arr_Set \\<alpha> S \n    rewrites [simp]: \"S\\<lparr>ArrDom\\<rparr> = A\" and [simp]: \"S\\<lparr>ArrCod\\<rparr> = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> S &&&\n    S\\<lparr>ArrDom\\<rparr> = A &&& S\\<lparr>ArrCod\\<rparr> = B", "by (simp_all add: S)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "interpret T: arr_Set \\<alpha> T \n    rewrites [simp]: \"T\\<lparr>ArrDom\\<rparr> = C\" and [simp]: \"T\\<lparr>ArrCod\\<rparr> = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> T &&&\n    T\\<lparr>ArrDom\\<rparr> = C &&& T\\<lparr>ArrCod\\<rparr> = D", "by (simp_all add: T)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "proof(intro cat_Set_is_arrI arr_SetI)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (prod_2_Rel S T)\n 3. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 4. vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 7. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 9. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 10. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "show \"vfsequence (prod_2_Rel S T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (prod_2_Rel S T)", "unfolding prod_2_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>),\n      S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ>\n      T\\<lparr>ArrDom\\<rparr>,\n      S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ>\n      T\\<lparr>ArrCod\\<rparr>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (prod_2_Rel S T)\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>\n 4. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 5. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 6. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 9. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "show \"vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>", "unfolding prod_2_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>),\n      S\\<lparr>ArrDom\\<rparr> \\<times>\\<^sub>\\<circ>\n      T\\<lparr>ArrDom\\<rparr>,\n      S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ>\n      T\\<lparr>ArrCod\\<rparr>]\\<^sub>\\<circ> =\n    3\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (prod_2_Rel S T) = 3\\<^sub>\\<nat>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n 5. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 8. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "from S.arr_Set_ArrVal_vrange T.arr_Set_ArrVal_vrange"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> D", "show \n      \"\\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> D\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>", "unfolding \n        prod_2_Rel_components prod_2_Rel_ArrVal_vdomain prod_2_Rel_ArrVal_vrange"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> B\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> D\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> S\\<lparr>ArrCod\\<rparr> \\<times>\\<^sub>\\<circ>\n                              T\\<lparr>ArrCod\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> prod_2_Rel S T\\<lparr>ArrCod\\<rparr>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 7. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "from assms S.arr_Par_ArrDom_in_Vset T.arr_Par_ArrDom_in_Vset"], ["proof (chain)\npicking this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \n      \"prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  C \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  prod_2_Rel S T\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 6. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "from assms S.arr_Par_ArrCod_in_Vset T.arr_Par_ArrCod_in_Vset"], ["proof (chain)\npicking this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  D \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \n      \"prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  D \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  prod_2_Rel S T\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n 5. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "from assms"], ["proof (chain)\npicking this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D", "show \"prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\""], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  prod_2_Rel S T\\<lparr>ArrDom\\<rparr> = A \\<times>\\<^sub>\\<circ> C\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>\n 4. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "from assms"], ["proof (chain)\npicking this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D", "show \"prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D\""], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  prod_2_Rel S T\\<lparr>ArrCod\\<rparr> = B \\<times>\\<^sub>\\<circ> D\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>", "show \"vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)", "unfolding prod_2_Rel_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n          (T\\<lparr>ArrVal\\<rparr>))", "by (intro prod_2_Rel_ArrVal_vsv S.ArrVal.vsv_axioms T.ArrVal.vsv_axioms)"], ["proof (state)\nthis:\n  vsv (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<D>\\<^sub>\\<circ> (prod_2_Rel S T\\<lparr>ArrVal\\<rparr>) =\n    prod_2_Rel S T\\<lparr>ArrDom\\<rparr>", "qed \n    (\n      auto simp: \n        cat_cs_simps cat_Set_cs_simps \n        prod_2_Rel_ArrVal_vdomain prod_2_Rel_components(1)\n    )"], ["proof (state)\nthis:\n  prod_2_Rel S\n   T : A \\<times>\\<^sub>\\<circ>\n       C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n             D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_2_Rel_is_cat_Set_arr'[cat_rel_par_Set_cs_intros]:\n  assumes \"S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" \n    and \"T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"\n    and \"AC = A \\<times>\\<^sub>\\<circ> C\"\n    and \"BD = B \\<times>\\<^sub>\\<circ> D\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"prod_2_Rel S T : AC \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> BD\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S T : AC \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> BD", "using assms(1,2)"], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S T : AC \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> BD", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n               D", "by (rule prod_2_Rel_is_cat_Set_arr)"], ["", "subsubsection\\<open>Product arrow for \\<open>Rel\\<close> is an isomorphism in \\<open>Set\\<close>\\<close>"], ["", "lemma prod_2_Rel_is_cat_Set_arr_isomorphism:\n  assumes \"S : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" and \"T : C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"    \n  shows \"prod_2_Rel S T : A \\<times>\\<^sub>\\<circ> C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n D", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n D", "note S = cat_Set_is_arr_isomorphismD[OF assms(1)]"], ["proof (state)\nthis:\n  S : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  v11 (S\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n D", "note T = cat_Set_is_arr_isomorphismD[OF assms(2)]"], ["proof (state)\nthis:\n  T : C \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = C\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n D", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n D", "proof\n    (\n      intro cat_Set_is_arr_isomorphismI prod_2_Rel_is_cat_Set_arr[OF S(1) T(1)], \n      unfold prod_2_Rel_components\n    )"], ["proof (state)\ngoal (3 subgoals):\n 1. v11 (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n          (T\\<lparr>ArrVal\\<rparr>))\n 2. \\<D>\\<^sub>\\<circ>\n     (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n       (T\\<lparr>ArrVal\\<rparr>)) =\n    A \\<times>\\<^sub>\\<circ> C\n 3. \\<R>\\<^sub>\\<circ>\n     (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n       (T\\<lparr>ArrVal\\<rparr>)) =\n    B \\<times>\\<^sub>\\<circ> D", "show \"\\<D>\\<^sub>\\<circ> (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>)) = A \\<times>\\<^sub>\\<circ> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n       (T\\<lparr>ArrVal\\<rparr>)) =\n    A \\<times>\\<^sub>\\<circ> C", "unfolding prod_2_Rel_ArrVal_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) =\n    A \\<times>\\<^sub>\\<circ> C", "by (cs_concl cs_simp: S(3) T(3) cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>)) =\n  A \\<times>\\<^sub>\\<circ> C\n\ngoal (2 subgoals):\n 1. v11 (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n          (T\\<lparr>ArrVal\\<rparr>))\n 2. \\<R>\\<^sub>\\<circ>\n     (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n       (T\\<lparr>ArrVal\\<rparr>)) =\n    B \\<times>\\<^sub>\\<circ> D", "show \"\\<R>\\<^sub>\\<circ> (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>)) = B \\<times>\\<^sub>\\<circ> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n       (T\\<lparr>ArrVal\\<rparr>)) =\n    B \\<times>\\<^sub>\\<circ> D", "unfolding prod_2_Rel_ArrVal_vrange"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (S\\<lparr>ArrVal\\<rparr>) \\<times>\\<^sub>\\<circ>\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) =\n    B \\<times>\\<^sub>\\<circ> D", "by (cs_concl cs_simp: S(4) T(4) cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>) (T\\<lparr>ArrVal\\<rparr>)) =\n  B \\<times>\\<^sub>\\<circ> D\n\ngoal (1 subgoal):\n 1. v11 (prod_2_Rel_ArrVal (S\\<lparr>ArrVal\\<rparr>)\n          (T\\<lparr>ArrVal\\<rparr>))", "qed (use S(2) T(2) in \\<open>cs_concl cs_intro: prod_2_Rel_ArrVal_v11\\<close>)"], ["proof (state)\nthis:\n  prod_2_Rel S\n   T : A \\<times>\\<^sub>\\<circ>\n       C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n                                     D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_2_Rel_is_cat_Set_arr_isomorphism'[cat_rel_par_Set_cs_intros]:\n  assumes \"S : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\" \n    and \"T : C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> D\"    \n    and \"AC = A \\<times>\\<^sub>\\<circ> C\"\n    and \"BD = B \\<times>\\<^sub>\\<circ> D\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"prod_2_Rel S T : AC \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> BD\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : AC \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> BD", "using assms(1,2)"], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : AC \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<CC>'\\<^esub> BD", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  S : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B\n  T : C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. prod_2_Rel S\n     T : A \\<times>\\<^sub>\\<circ>\n         C \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Set \\<alpha>\\<^esub> B \\<times>\\<^sub>\\<circ>\n D", "by (rule prod_2_Rel_is_cat_Set_arr_isomorphism)"], ["", "subsubsection\\<open>Further elementary properties\\<close>"], ["", "lemma prod_2_Rel_Comp:\n  assumes \"G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\" \n    and \"F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\" \n    and \"G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\"\n    and \"F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\"\n  shows\n    \"prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> prod_2_Rel G F =\n      prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G) (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)", "from cat_Rel_is_arrD(1)[OF assms(1)]"], ["proof (chain)\npicking this:\n  arr_Rel \\<alpha> G'", "interpret \\<Z> \\<alpha>"], ["proof (prove)\nusing this:\n  arr_Rel \\<alpha> G'\n\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)", "note (*prefer cat_Rel*)[cat_cs_simps] = cat_Rel_is_arrD(2,3)"], ["proof (state)\nthis:\n  ?S : ?A \\<mapsto>\\<^bsub>cat_Rel ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrDom\\<rparr> = ?A\n  ?S : ?A \\<mapsto>\\<^bsub>cat_Rel ?\\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  ?S\\<lparr>ArrCod\\<rparr> = ?B\n\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)", "from assms"], ["proof (chain)\npicking this:\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'", "have GF'_GF: \n    \"prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> prod_2_Rel G F :\n      B \\<times>\\<^sub>\\<circ> A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ> A''\""], ["proof (prove)\nusing this:\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G\n     F : B \\<times>\\<^sub>\\<circ>\n         A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ>\n               A''", "by (cs_concl cs_intro: cat_Rel_par_set_cs_intros cat_cs_intros)"], ["proof (state)\nthis:\n  prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  prod_2_Rel G\n   F : B \\<times>\\<^sub>\\<circ>\n       A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ>\n             A''\n\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)", "from assms Rel.category_axioms"], ["proof (chain)\npicking this:\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  category \\<alpha> (cat_Rel \\<alpha>)", "have GG'_FF':\n    \"prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G) (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F) : \n      B \\<times>\\<^sub>\\<circ> A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ> A''\""], ["proof (prove)\nusing this:\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  category \\<alpha> (cat_Rel \\<alpha>)\n\ngoal (1 subgoal):\n 1. prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F) : B \\<times>\\<^sub>\\<circ>\n           A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ>\n                 A''", "by (cs_concl cs_intro: cat_Rel_par_set_cs_intros cat_cs_intros)"], ["proof (state)\nthis:\n  prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n   (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    F) : B \\<times>\\<^sub>\\<circ>\n         A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ>\n               A''\n\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)", "proof(rule arr_Rel_eqI[of \\<alpha>])"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Rel \\<alpha>\n     (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      prod_2_Rel G F)\n 2. arr_Rel \\<alpha>\n     (prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n       (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F))\n 3. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrVal\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrVal\\<rparr>\n 4. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrDom\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrDom\\<rparr>\n 5. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrCod\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrCod\\<rparr>", "from GF'_GF"], ["proof (chain)\npicking this:\n  prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  prod_2_Rel G\n   F : B \\<times>\\<^sub>\\<circ>\n       A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ>\n             A''", "show arr_Rel_GF'_GF:\n      \"arr_Rel \\<alpha> (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> prod_2_Rel G F)\""], ["proof (prove)\nusing this:\n  prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  prod_2_Rel G\n   F : B \\<times>\\<^sub>\\<circ>\n       A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ>\n             A''\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha>\n     (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      prod_2_Rel G F)", "by (auto dest: cat_Rel_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Rel \\<alpha>\n   (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    prod_2_Rel G F)\n\ngoal (4 subgoals):\n 1. arr_Rel \\<alpha>\n     (prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n       (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F))\n 2. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrVal\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrVal\\<rparr>\n 3. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrDom\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrDom\\<rparr>\n 4. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrCod\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrCod\\<rparr>", "from GG'_FF'"], ["proof (chain)\npicking this:\n  prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n   (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    F) : B \\<times>\\<^sub>\\<circ>\n         A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ>\n               A''", "show arr_Rel_GG'_FF':\n      \"arr_Rel \\<alpha> (prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G) (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F))\""], ["proof (prove)\nusing this:\n  prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n   (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    F) : B \\<times>\\<^sub>\\<circ>\n         A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'' \\<times>\\<^sub>\\<circ>\n               A''\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha>\n     (prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n       (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F))", "by (auto dest: cat_Rel_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Rel \\<alpha>\n   (prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F))\n\ngoal (3 subgoals):\n 1. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrVal\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrVal\\<rparr>\n 2. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrDom\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrDom\\<rparr>\n 3. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrCod\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrCod\\<rparr>", "show \"(prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> prod_2_Rel G F)\\<lparr>ArrVal\\<rparr> = \n      prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G) (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrVal\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrVal\\<rparr>", "proof(intro vsubset_antisym vsubsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr>\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "fix R"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr>\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "assume\n        \"R \\<in>\\<^sub>\\<circ> (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>\""], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                          F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                         prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr>\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "from this assms"], ["proof (chain)\npicking this:\n  R \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                          F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                         prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'", "have \"R \\<in>\\<^sub>\\<circ>\n        prod_2_Rel_ArrVal (G'\\<lparr>ArrVal\\<rparr>) (F'\\<lparr>ArrVal\\<rparr>) \\<circ>\\<^sub>\\<circ>\n        prod_2_Rel_ArrVal (G\\<lparr>ArrVal\\<rparr>) (F\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  R \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                          F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                         prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n\ngoal (1 subgoal):\n 1. R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (G'\\<lparr>ArrVal\\<rparr>)\n                           (F'\\<lparr>ArrVal\\<rparr>) \\<circ>\\<^sub>\\<circ>\n                          prod_2_Rel_ArrVal (G\\<lparr>ArrVal\\<rparr>)\n                           (F\\<lparr>ArrVal\\<rparr>)", "by \n          (\n            cs_prems \n              cs_simp: \n                prod_2_Rel_components(1) \n                comp_Rel_components(1)\n                cat_Rel_cs_simps \n              cs_intro: cat_Rel_par_set_cs_intros\n          )"], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (G'\\<lparr>ArrVal\\<rparr>)\n                         (F'\\<lparr>ArrVal\\<rparr>) \\<circ>\\<^sub>\\<circ>\n                        prod_2_Rel_ArrVal (G\\<lparr>ArrVal\\<rparr>)\n                         (F\\<lparr>ArrVal\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr>\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "from this[unfolded prod_2_Rel_ArrVal_vcomp] assms"], ["proof (chain)\npicking this:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal\n                         (G'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                          G\\<lparr>ArrVal\\<rparr>)\n                         (F'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                          F\\<lparr>ArrVal\\<rparr>)\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'", "show \n        \"R \\<in>\\<^sub>\\<circ> prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G) (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal\n                         (G'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                          G\\<lparr>ArrVal\\<rparr>)\n                         (F'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                          F\\<lparr>ArrVal\\<rparr>)\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n\ngoal (1 subgoal):\n 1. R \\<in>\\<^sub>\\<circ> prod_2_Rel\n                           (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                            G)\n                           (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                            F)\\<lparr>ArrVal\\<rparr>", "by \n          (\n            cs_concl cs_simp: \n              prod_2_Rel_components comp_Rel_components(1) cat_Rel_cs_simps \n          )"], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel\n                         (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          G)\n                         (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          F)\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "fix R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "assume\n        \"R \\<in>\\<^sub>\\<circ> prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G) (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)\\<lparr>ArrVal\\<rparr>\""], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel\n                         (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          G)\n                         (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          F)\\<lparr>ArrVal\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "from this assms"], ["proof (chain)\npicking this:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel\n                         (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          G)\n                         (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          F)\\<lparr>ArrVal\\<rparr>\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'", "have \n        \"R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (G'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> G\\<lparr>ArrVal\\<rparr>) (F'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ> F\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel\n                         (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          G)\n                         (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          F)\\<lparr>ArrVal\\<rparr>\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n\ngoal (1 subgoal):\n 1. R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal\n                           (G'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                            G\\<lparr>ArrVal\\<rparr>)\n                           (F'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                            F\\<lparr>ArrVal\\<rparr>)", "by \n          (\n            cs_prems cs_simp:\n              comp_Rel_components prod_2_Rel_components cat_Rel_cs_simps\n          )"], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal\n                         (G'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                          G\\<lparr>ArrVal\\<rparr>)\n                         (F'\\<lparr>ArrVal\\<rparr> \\<circ>\\<^sub>\\<circ>\n                          F\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> prod_2_Rel\n                              (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               G)\n                              (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                               F)\\<lparr>ArrVal\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                               F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                              prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "from this[folded prod_2_Rel_ArrVal_vcomp] assms"], ["proof (chain)\npicking this:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (G'\\<lparr>ArrVal\\<rparr>)\n                         (F'\\<lparr>ArrVal\\<rparr>) \\<circ>\\<^sub>\\<circ>\n                        prod_2_Rel_ArrVal (G\\<lparr>ArrVal\\<rparr>)\n                         (F\\<lparr>ArrVal\\<rparr>)\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'", "show\n        \"R \\<in>\\<^sub>\\<circ> (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  R \\<in>\\<^sub>\\<circ> prod_2_Rel_ArrVal (G'\\<lparr>ArrVal\\<rparr>)\n                         (F'\\<lparr>ArrVal\\<rparr>) \\<circ>\\<^sub>\\<circ>\n                        prod_2_Rel_ArrVal (G\\<lparr>ArrVal\\<rparr>)\n                         (F\\<lparr>ArrVal\\<rparr>)\n  G' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n  F' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  G : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n\ngoal (1 subgoal):\n 1. R \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                            F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                           prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>", "by\n          (\n            cs_concl \n              cs_simp:\n                prod_2_Rel_components comp_Rel_components(1) cat_Rel_cs_simps \n              cs_intro: cat_Rel_par_set_cs_intros\n          )"], ["proof (state)\nthis:\n  R \\<in>\\<^sub>\\<circ> (prod_2_Rel G'\n                          F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                         prod_2_Rel G F)\\<lparr>ArrVal\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n   prod_2_Rel G F)\\<lparr>ArrVal\\<rparr> =\n  prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n   (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    F)\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrDom\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrDom\\<rparr>\n 2. (prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n     prod_2_Rel G F)\\<lparr>ArrCod\\<rparr> =\n    prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n     (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      F)\\<lparr>ArrCod\\<rparr>", "qed\n    (\n      use GF'_GF assms in (*slow*)\n        \\<open>\n          cs_concl\n            cs_simp: cat_cs_simps\n            cs_intro: cat_cs_intros cat_Rel_cs_intros\n        \\<close>\n    )+"], ["proof (state)\nthis:\n  prod_2_Rel G' F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  prod_2_Rel G F =\n  prod_2_Rel (G' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> G)\n   (F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub> F)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) prod_2_Rel_CId[cat_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" and \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \n    \"prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>) (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["proof (state)\ngoal (1 subgoal):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "have A_B: \n    \"prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>) (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) :\n      A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) : A \\<times>\\<^sub>\\<circ>\n                 B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ>\n                       B", "by (cs_concl cs_intro: cat_Rel_par_set_cs_intros cat_cs_intros)"], ["proof (state)\nthis:\n  prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n   (cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) : A \\<times>\\<^sub>\\<circ>\n               B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ>\n                     B\n\ngoal (1 subgoal):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>", "from assms Rel.category_axioms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  category \\<alpha> (cat_Rel \\<alpha>)", "have AB:\n    \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr> : A \\<times>\\<^sub>\\<circ> B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ> B\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  category \\<alpha> (cat_Rel \\<alpha>)\n\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr> : A \\<times>\\<^sub>\\<circ>\n              B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ>\n                    B", "by \n      (\n        cs_concl \n          cs_simp: cat_Rel_components(1) cs_intro: V_cs_intros cat_cs_intros\n      )"], ["proof (state)\nthis:\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\nB\\<rparr> : A \\<times>\\<^sub>\\<circ>\n            B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ>\n                  B\n\ngoal (1 subgoal):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>", "proof(rule arr_Rel_eqI)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Rel ?\\<alpha>\n     (prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n       (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>))\n 2. arr_Rel ?\\<alpha>\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n    B\\<rparr>)\n 3. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrVal\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrVal\\<rparr>\n 4. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrDom\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrDom\\<rparr>\n 5. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrCod\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrCod\\<rparr>", "from A_B"], ["proof (chain)\npicking this:\n  prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n   (cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) : A \\<times>\\<^sub>\\<circ>\n               B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ>\n                     B", "show arr_Rel_GF'_GF:\n      \"arr_Rel \\<alpha> (prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>) (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>))\""], ["proof (prove)\nusing this:\n  prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n   (cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) : A \\<times>\\<^sub>\\<circ>\n               B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ>\n                     B\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha>\n     (prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n       (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>))", "by (auto dest: cat_Rel_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Rel \\<alpha>\n   (prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>))\n\ngoal (4 subgoals):\n 1. arr_Rel \\<alpha>\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n    B\\<rparr>)\n 2. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrVal\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrVal\\<rparr>\n 3. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrDom\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrDom\\<rparr>\n 4. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrCod\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrCod\\<rparr>", "from AB"], ["proof (chain)\npicking this:\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\nB\\<rparr> : A \\<times>\\<^sub>\\<circ>\n            B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ>\n                  B", "show arr_Rel_GG'_FF': \"arr_Rel \\<alpha> (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>)\""], ["proof (prove)\nusing this:\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\nB\\<rparr> : A \\<times>\\<^sub>\\<circ>\n            B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A \\<times>\\<^sub>\\<circ>\n                  B\n\ngoal (1 subgoal):\n 1. arr_Rel \\<alpha>\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n    B\\<rparr>)", "by (auto dest: cat_Rel_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Rel \\<alpha>\n   (cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>)\n\ngoal (3 subgoals):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrVal\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrVal\\<rparr>\n 2. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrDom\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrDom\\<rparr>\n 3. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrCod\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrCod\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "show \n      \"prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>) (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrVal\\<rparr> =\n        cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrVal\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrVal\\<rparr>", "by\n        (\n          cs_concl\n            cs_simp:\n              id_Rel_components prod_2_Rel_components\n              cat_cs_simps cat_Rel_cs_simps \n            cs_intro: V_cs_intros  cat_cs_intros \n        )"], ["proof (state)\nthis:\n  prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n   (cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrVal\\<rparr> =\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\nB\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrDom\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrDom\\<rparr>\n 2. prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n     (cat_Rel\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>)\\<lparr>ArrCod\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ>\n  B\\<rparr>\\<lparr>ArrCod\\<rparr>", "qed \n    (\n      use A_B assms in \n        \\<open>\n          cs_concl\n            cs_simp: prod_2_Rel_components cat_Rel_cs_simps \n            cs_intro: cat_cs_intros \n        \\<close>\n    )+"], ["proof (state)\nthis:\n  prod_2_Rel (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>)\n   (cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr>) =\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<times>\\<^sub>\\<circ> B\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Product functor for \\<open>Rel\\<close>\\<close>"], ["", "definition cf_prod_2_Rel :: \"V \\<Rightarrow> V\"\n  where \"cf_prod_2_Rel \\<AA> =\n    [\n      (\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Obj\\<rparr>. AB\\<lparr>0\\<rparr> \\<times>\\<^sub>\\<circ> AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Arr\\<rparr>. prod_2_Rel (ST\\<lparr>0\\<rparr>) (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)),\n      \\<AA> \\<times>\\<^sub>C \\<AA>,\n      \\<AA>\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cf_prod_2_Rel_components: \n  shows \"cf_prod_2_Rel \\<AA>\\<lparr>ObjMap\\<rparr> = (\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Obj\\<rparr>. AB\\<lparr>0\\<rparr> \\<times>\\<^sub>\\<circ> AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cf_prod_2_Rel \\<AA>\\<lparr>ArrMap\\<rparr> =\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Arr\\<rparr>. prod_2_Rel (ST\\<lparr>0\\<rparr>) (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\"\n    and [cat_cs_simps]: \"cf_prod_2_Rel \\<AA>\\<lparr>HomDom\\<rparr> = \\<AA> \\<times>\\<^sub>C \\<AA>\"\n    and [cat_cs_simps]: \"cf_prod_2_Rel \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cf_prod_2_Rel \\<AA>\\<lparr>ObjMap\\<rparr> =\n     (\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                     \\<AA>)\\<lparr>Obj\\<rparr>.\n         AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n         AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n     cf_prod_2_Rel \\<AA>\\<lparr>ArrMap\\<rparr> =\n     (\\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                     \\<AA>)\\<lparr>Arr\\<rparr>.\n         prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>))) &&&\n    cf_prod_2_Rel \\<AA>\\<lparr>HomDom\\<rparr> =\n    \\<AA> \\<times>\\<^sub>C \\<AA> &&&\n    cf_prod_2_Rel \\<AA>\\<lparr>HomCod\\<rparr> = \\<AA>", "unfolding cf_prod_2_Rel_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                     \\<AA>)\\<lparr>Obj\\<rparr>.\n         AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n         AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                     \\<AA>)\\<lparr>Arr\\<rparr>.\n         prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      \\<AA> \\<times>\\<^sub>C \\<AA>,\n      \\<AA>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                     \\<AA>)\\<lparr>Obj\\<rparr>.\n         AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n         AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n     [\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                     \\<AA>)\\<lparr>Obj\\<rparr>.\n         AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n         AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                     \\<AA>)\\<lparr>Arr\\<rparr>.\n         prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      \\<AA> \\<times>\\<^sub>C \\<AA>,\n      \\<AA>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                     \\<AA>)\\<lparr>Arr\\<rparr>.\n         prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>))) &&&\n    [\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                    \\<AA>)\\<lparr>Obj\\<rparr>.\n        AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n        AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                    \\<AA>)\\<lparr>Arr\\<rparr>.\n        prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n         (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n     \\<AA> \\<times>\\<^sub>C \\<AA>,\n     \\<AA>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    \\<AA> \\<times>\\<^sub>C \\<AA> &&&\n    [\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                    \\<AA>)\\<lparr>Obj\\<rparr>.\n        AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n        AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                    \\<AA>)\\<lparr>Arr\\<rparr>.\n        prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n         (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n     \\<AA> \\<times>\\<^sub>C \\<AA>,\n     \\<AA>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    \\<AA>", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Object map\\<close>"], ["", "mk_VLambda cf_prod_2_Rel_components(1)\n  |vsv cf_prod_2_Rel_ObjMap_vsv[cat_cs_intros]|\n  |vdomain cf_prod_2_Rel_ObjMap_vdomain[cat_cs_simps]|"], ["", "lemma cf_prod_2_Rel_ObjMap_app[cat_cs_simps]: \n  assumes \"AB = [A, B]\\<^sub>\\<circ>\" and \"AB \\<in>\\<^sub>\\<circ> (\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Obj\\<rparr>\"\n  shows \"A \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_prod_2_Rel \\<AA>\\<^esub> B = A \\<times>\\<^sub>\\<circ> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_prod_2_Rel \\<AA>\\<^esub>\n    B =\n    A \\<times>\\<^sub>\\<circ> B", "using assms(2)"], ["proof (prove)\nusing this:\n  AB \\<in>\\<^sub>\\<circ> (\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. A \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_prod_2_Rel \\<AA>\\<^esub>\n    B =\n    A \\<times>\\<^sub>\\<circ> B", "unfolding assms(1) cf_prod_2_Rel_components"], ["proof (prove)\nusing this:\n  [A, B]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>AB\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                    \\<AA>)\\<lparr>Obj\\<rparr>.\n        AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n        AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>) \\<lparr>A,\n            B\\<rparr>\\<^sub>\\<bullet> =\n    A \\<times>\\<^sub>\\<circ> B", "by (simp add: nat_omega_simps)"], ["", "lemma (in \\<Z>) cf_prod_2_Rel_ObjMap_vrange: \n  \"\\<R>\\<^sub>\\<circ> (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (cs_concl cs_intro: cat_cs_intros cat_Rel_cs_intros)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "proof(rule vsv.vsv_vrange_vsubset, unfold cat_cs_simps)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                              cat_Rel\n                               \\<alpha>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cf_prod_2_Rel\n        (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "fix AB"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                              cat_Rel\n                               \\<alpha>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cf_prod_2_Rel\n        (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "assume prems: \"AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                          cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                              cat_Rel\n                               \\<alpha>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cf_prod_2_Rel\n        (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "with Rel.category_axioms"], ["proof (chain)\npicking this:\n  category \\<alpha> (cat_Rel \\<alpha>)\n  AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                          cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>", "obtain A B where AB_def: \"AB = [A, B]\\<^sub>\\<circ>\"\n      and A: \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n      and B: \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> (cat_Rel \\<alpha>)\n  AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                          cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>A B.\n        \\<lbrakk>AB = [A, B]\\<^sub>\\<circ>;\n         A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>;\n         B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_ObjE[rotated 2])"], ["proof (state)\nthis:\n  AB = [A, B]\\<^sub>\\<circ>\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                              cat_Rel\n                               \\<alpha>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cf_prod_2_Rel\n        (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "from prems A B"], ["proof (chain)\npicking this:\n  AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                          cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "show \"cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr> \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                          cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr>\n    \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "unfolding AB_def cat_Rel_components(1)"], ["proof (prove)\nusing this:\n  [A, B]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                       cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. A \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_prod_2_Rel (cat_Rel \\<alpha>)\\<^esub>\n    B\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (cs_concl cs_simp: cat_cs_simps cat_Rel_cs_simps cs_intro: V_cs_intros)"], ["proof (state)\nthis:\n  cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)", "qed (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "mk_VLambda cf_prod_2_Rel_components(2)\n  |vsv cf_prod_2_Rel_ArrMap_vsv[cat_cs_intros]|\n  |vdomain cf_prod_2_Rel_ArrMap_vdomain[cat_cs_simps]|"], ["", "lemma cf_prod_2_Rel_ArrMap_app[cat_cs_simps]: \n  assumes \"GF = [G, F]\\<^sub>\\<circ>\" and \"GF \\<in>\\<^sub>\\<circ> (\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Arr\\<rparr>\"\n  shows \"G \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_prod_2_Rel \\<AA>\\<^esub> F = prod_2_Rel G F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_prod_2_Rel \\<AA>\\<^esub>\n    F =\n    prod_2_Rel G F", "using assms(2)"], ["proof (prove)\nusing this:\n  GF \\<in>\\<^sub>\\<circ> (\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. G \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_prod_2_Rel \\<AA>\\<^esub>\n    F =\n    prod_2_Rel G F", "unfolding assms(1) cf_prod_2_Rel_components"], ["proof (prove)\nusing this:\n  [G, F]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (\\<AA> \\<times>\\<^sub>C \\<AA>)\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>ST\\<in>\\<^sub>\\<circ>(\\<AA> \\<times>\\<^sub>C\n                                    \\<AA>)\\<lparr>Arr\\<rparr>.\n        prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n         (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)) \\<lparr>G,\n               F\\<rparr>\\<^sub>\\<bullet> =\n    prod_2_Rel G F", "by (simp add: nat_omega_simps)"], ["", "subsubsection\\<open>Product functor for \\<open>Rel\\<close> is a functor\\<close>"], ["", "lemma (in \\<Z>) cf_prod_2_Rel_is_functor:\n  \"cf_prod_2_Rel (cat_Rel \\<alpha>) : cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel (cat_Rel \\<alpha>) :\n    cat_Rel \\<alpha> \\<times>\\<^sub>C\n    cat_Rel\n     \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                            \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel (cat_Rel \\<alpha>) :\n    cat_Rel \\<alpha> \\<times>\\<^sub>C\n    cat_Rel\n     \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                            \\<alpha>", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (cs_concl cs_intro: cat_cs_intros cat_Rel_cs_intros)"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel (cat_Rel \\<alpha>) :\n    cat_Rel \\<alpha> \\<times>\\<^sub>C\n    cat_Rel\n     \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                            \\<alpha>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel (cat_Rel \\<alpha>) :\n    cat_Rel \\<alpha> \\<times>\\<^sub>C\n    cat_Rel\n     \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                            \\<alpha>", "proof(rule is_functorI')"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cf_prod_2_Rel (cat_Rel \\<alpha>))\n 3. category \\<alpha> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\n 4. category \\<alpha> (cat_Rel \\<alpha>)\n 5. vcard (cf_prod_2_Rel (cat_Rel \\<alpha>)) = 4\\<^sub>\\<nat>\n 6. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomDom\\<rparr> =\n    cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\n 7. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomCod\\<rparr> =\n    cat_Rel \\<alpha>\n 8. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 9. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>)\n 10. \\<D>\\<^sub>\\<circ>\n      (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) =\n     (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\nA total of 15 subgoals...", "show \"vfsequence (cf_prod_2_Rel (cat_Rel \\<alpha>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cf_prod_2_Rel (cat_Rel \\<alpha>))", "unfolding cf_prod_2_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>AB\\<in>\\<^sub>\\<circ>(cat_Rel \\<alpha> \\<times>\\<^sub>C\n                                     cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>.\n         AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n         AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>(cat_Rel \\<alpha> \\<times>\\<^sub>C\n                                     cat_Rel \\<alpha>)\\<lparr>Arr\\<rparr>.\n         prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>,\n      cat_Rel \\<alpha>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (cf_prod_2_Rel (cat_Rel \\<alpha>))\n\ngoal (14 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. vcard (cf_prod_2_Rel (cat_Rel \\<alpha>)) = 4\\<^sub>\\<nat>\n 5. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomDom\\<rparr> =\n    cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\n 6. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomCod\\<rparr> =\n    cat_Rel \\<alpha>\n 7. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 8. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>)\n 9. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n 10. \\<R>\\<^sub>\\<circ>\n      (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\nA total of 14 subgoals...", "show \"vcard (cf_prod_2_Rel (cat_Rel \\<alpha>)) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cf_prod_2_Rel (cat_Rel \\<alpha>)) = 4\\<^sub>\\<nat>", "unfolding cf_prod_2_Rel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>AB\\<in>\\<^sub>\\<circ>(cat_Rel \\<alpha> \\<times>\\<^sub>C\n                                     cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>.\n         AB\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<times>\\<^sub>\\<circ>\n         AB\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>(cat_Rel \\<alpha> \\<times>\\<^sub>C\n                                     cat_Rel \\<alpha>)\\<lparr>Arr\\<rparr>.\n         prod_2_Rel (ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>,\n      cat_Rel \\<alpha>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cf_prod_2_Rel (cat_Rel \\<alpha>)) = 4\\<^sub>\\<nat>\n\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomDom\\<rparr> =\n    cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\n 5. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomCod\\<rparr> =\n    cat_Rel \\<alpha>\n 6. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 7. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>) =\n     (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Arr\\<rparr>\nA total of 13 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "by (rule cf_prod_2_Rel_ObjMap_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomDom\\<rparr> =\n    cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\n 5. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomCod\\<rparr> =\n    cat_Rel \\<alpha>\n 6. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 7. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Arr\\<rparr>\n 10. \\<And>a b f.\n        f : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> b \\<Longrightarrow>\n        cf_prod_2_Rel\n         (cat_Rel\n           \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : cf_prod_2_Rel\n                         (cat_Rel\n                           \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> cf_prod_2_Rel\n     (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\nA total of 12 subgoals...", "show \"cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr> :\n      cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n      cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>CD\\<rparr>\"\n      if \"GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> CD\" for AB CD GF"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr> : cf_prod_2_Rel\n                      (cat_Rel\n                        \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>CD\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr> : cf_prod_2_Rel\n                      (cat_Rel\n                        \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>CD\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> CD", "obtain G F A B C D\n        where GF_def: \"GF = [G, F]\\<^sub>\\<circ>\"\n          and AB_def: \"AB = [A, B]\\<^sub>\\<circ>\"\n          and CD_def: \"CD = [C, D]\\<^sub>\\<circ>\"\n          and G: \"G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\"\n          and F: \"F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\""], ["proof (prove)\nusing this:\n  GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> CD\n\ngoal (1 subgoal):\n 1. (\\<And>G F A B C D.\n        \\<lbrakk>GF = [G, F]\\<^sub>\\<circ>; AB = [A, B]\\<^sub>\\<circ>;\n         CD = [C, D]\\<^sub>\\<circ>;\n         G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C;\n         F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_is_arrE[OF Rel.category_axioms Rel.category_axioms])"], ["proof (state)\nthis:\n  GF = [G, F]\\<^sub>\\<circ>\n  AB = [A, B]\\<^sub>\\<circ>\n  CD = [C, D]\\<^sub>\\<circ>\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr> : cf_prod_2_Rel\n                      (cat_Rel\n                        \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>CD\\<rparr>", "from that G F"], ["proof (chain)\npicking this:\n  GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> CD\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D", "show ?thesis"], ["proof (prove)\nusing this:\n  GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> CD\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr> : cf_prod_2_Rel\n                      (cat_Rel\n                        \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>CD\\<rparr>", "unfolding GF_def AB_def CD_def"], ["proof (prove)\nusing this:\n  [G, F]\\<^sub>\\<circ> : [A, B]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> [C,\n         D]\\<^sub>\\<circ>\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> D\n\ngoal (1 subgoal):\n 1. G \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_prod_2_Rel (cat_Rel \\<alpha>)\\<^esub>\n    F : A \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_prod_2_Rel (cat_Rel \\<alpha>)\\<^esub>\n        B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> C \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_prod_2_Rel (cat_Rel \\<alpha>)\\<^esub>\n              D", "by\n          (\n            cs_concl\n              cs_simp: cat_cs_simps \n              cs_intro: \n                cat_Rel_par_set_cs_intros cat_cs_intros cat_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  cf_prod_2_Rel\n   (cat_Rel\n     \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr> : cf_prod_2_Rel\n                    (cat_Rel\n                      \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> cf_prod_2_Rel\n (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>CD\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?GF : ?AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> ?CD \\<Longrightarrow>\n  cf_prod_2_Rel\n   (cat_Rel\n     \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>?GF\\<rparr> : cf_prod_2_Rel\n                     (cat_Rel\n                       \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>?AB\\<rparr> \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>?CD\\<rparr>\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomDom\\<rparr> =\n    cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\n 5. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomCod\\<rparr> =\n    cat_Rel \\<alpha>\n 6. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 7. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Arr\\<rparr>\n 10. \\<And>b c g a f.\n        \\<lbrakk>g : b \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> cf_prod_2_Rel\n                           (cat_Rel\n                             \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n                              f\\<rparr> =\n                          cf_prod_2_Rel\n                           (cat_Rel\n                             \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                          cf_prod_2_Rel\n                           (cat_Rel\n                             \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\nA total of 11 subgoals...", "show \n      \"cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> GF\\<rparr> =\n        cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n          cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr>\"\n      if \"GF' : AB' \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB''\"\n        and \"GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB'\"\n      for AB' AB'' GF' AB GF"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n        GF\\<rparr> =\n    cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n        GF\\<rparr> =\n    cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr>", "from that(2)"], ["proof (chain)\npicking this:\n  GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB'", "obtain G F A A' B B' \n        where GF_def: \"GF = [G, F]\\<^sub>\\<circ>\"\n          and AB_def: \"AB = [A, B]\\<^sub>\\<circ>\"\n          and AB'_def: \"AB' = [A', B']\\<^sub>\\<circ>\"\n          and G: \"G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\"\n          and F: \"F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\""], ["proof (prove)\nusing this:\n  GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB'\n\ngoal (1 subgoal):\n 1. (\\<And>G F A B A' B'.\n        \\<lbrakk>GF = [G, F]\\<^sub>\\<circ>; AB = [A, B]\\<^sub>\\<circ>;\n         AB' = [A', B']\\<^sub>\\<circ>;\n         G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A';\n         F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_is_arrE[OF Rel.category_axioms Rel.category_axioms])"], ["proof (state)\nthis:\n  GF = [G, F]\\<^sub>\\<circ>\n  AB = [A, B]\\<^sub>\\<circ>\n  AB' = [A', B']\\<^sub>\\<circ>\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n        GF\\<rparr> =\n    cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr>", "with that(1)"], ["proof (chain)\npicking this:\n  GF' : AB' \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB''\n  GF = [G, F]\\<^sub>\\<circ>\n  AB = [A, B]\\<^sub>\\<circ>\n  AB' = [A', B']\\<^sub>\\<circ>\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'", "obtain G' F' A'' B''\n        where GF'_def: \"GF' = [G', F']\\<^sub>\\<circ>\"\n          and AB''_def: \"AB'' = [A'', B'']\\<^sub>\\<circ>\"\n          and G': \"G' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\"\n          and F': \"F' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\""], ["proof (prove)\nusing this:\n  GF' : AB' \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB''\n  GF = [G, F]\\<^sub>\\<circ>\n  AB = [A, B]\\<^sub>\\<circ>\n  AB' = [A', B']\\<^sub>\\<circ>\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n\ngoal (1 subgoal):\n 1. (\\<And>G' F' A'' B''.\n        \\<lbrakk>GF' = [G', F']\\<^sub>\\<circ>;\n         AB'' = [A'', B'']\\<^sub>\\<circ>;\n         G' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'';\n         F' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by \n          (\n            auto elim: \n              cat_prod_2_is_arrE[OF Rel.category_axioms Rel.category_axioms]\n          )"], ["proof (state)\nthis:\n  GF' = [G', F']\\<^sub>\\<circ>\n  AB'' = [A'', B'']\\<^sub>\\<circ>\n  G' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  F' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n        GF\\<rparr> =\n    cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr>", "from that G F G' F'"], ["proof (chain)\npicking this:\n  GF' : AB' \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB''\n  GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB'\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  G' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  F' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''", "show ?thesis"], ["proof (prove)\nusing this:\n  GF' : AB' \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB''\n  GF : AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> AB'\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  G' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  F' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n        GF\\<rparr> =\n    cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr>", "unfolding GF_def AB_def AB'_def GF'_def AB''_def"], ["proof (prove)\nusing this:\n  [G',\n   F']\\<^sub>\\<circ> : [A',\n                        B']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> [A'',\n     B'']\\<^sub>\\<circ>\n  [G, F]\\<^sub>\\<circ> : [A, B]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> [A',\n         B']\\<^sub>\\<circ>\n  G : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A'\n  F : B \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B'\n  G' : A' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> A''\n  F' : B' \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B''\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>[G',\n         F']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n        [G, F]\\<^sub>\\<circ>\\<rparr> =\n    G' \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_prod_2_Rel (cat_Rel \\<alpha>)\\<^esub>\n    F' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n    (G \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_prod_2_Rel (cat_Rel \\<alpha>)\\<^esub>\n     F)", "by\n          (\n            cs_concl\n              cs_simp: cat_cs_simps cat_prod_cs_simps prod_2_Rel_Comp\n              cs_intro: cat_cs_intros cat_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  cf_prod_2_Rel\n   (cat_Rel\n     \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n      GF\\<rparr> =\n  cf_prod_2_Rel\n   (cat_Rel\n     \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n  cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>GF\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?GF' : ?AB' \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> ?AB'';\n   ?GF : ?AB \\<mapsto>\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub> ?AB'\\<rbrakk>\n  \\<Longrightarrow> cf_prod_2_Rel\n                     (cat_Rel\n                       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>?GF' \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\\<^esub>\n                        ?GF\\<rparr> =\n                    cf_prod_2_Rel\n                     (cat_Rel\n                       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>?GF'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n                    cf_prod_2_Rel\n                     (cat_Rel\n                       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>?GF\\<rparr>\n\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomDom\\<rparr> =\n    cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\n 5. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomCod\\<rparr> =\n    cat_Rel \\<alpha>\n 6. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 7. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Arr\\<rparr>\n 10. \\<And>c.\n        c \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                               cat_Rel\n                                \\<alpha>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        cf_prod_2_Rel\n         (cat_Rel\n           \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel\n              \\<alpha> \\<times>\\<^sub>C\n             cat_Rel \\<alpha>)\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n        cat_Rel\n         \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>cf_prod_2_Rel\n       (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \n      \"cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>CId\\<rparr>\\<lparr>AB\\<rparr>\\<rparr> =\n        cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr>\\<rparr>\"\n      if \"AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\" for AB"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel\n          \\<alpha> \\<times>\\<^sub>C\n         cat_Rel \\<alpha>)\\<lparr>CId\\<rparr>\\<lparr>AB\\<rparr>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel\n          \\<alpha> \\<times>\\<^sub>C\n         cat_Rel \\<alpha>)\\<lparr>CId\\<rparr>\\<lparr>AB\\<rparr>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr>\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                          cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>", "obtain A B \n        where AB_def: \"AB = [A, B]\\<^sub>\\<circ>\"\n          and A: \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n          and B: \"B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  AB \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                          cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>A B.\n        \\<lbrakk>AB = [A, B]\\<^sub>\\<circ>;\n         A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>;\n         B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_ObjE[OF Rel.category_axioms Rel.category_axioms])"], ["proof (state)\nthis:\n  AB = [A, B]\\<^sub>\\<circ>\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel\n          \\<alpha> \\<times>\\<^sub>C\n         cat_Rel \\<alpha>)\\<lparr>CId\\<rparr>\\<lparr>AB\\<rparr>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr>\\<rparr>", "from A B"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel\n          \\<alpha> \\<times>\\<^sub>C\n         cat_Rel \\<alpha>)\\<lparr>CId\\<rparr>\\<lparr>AB\\<rparr>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>cf_prod_2_Rel\n   (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr>\\<rparr>", "unfolding AB_def"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n  B \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_prod_2_Rel\n     (cat_Rel\n       \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel\n          \\<alpha> \\<times>\\<^sub>C\n         cat_Rel\n          \\<alpha>)\\<lparr>CId\\<rparr> \\<lparr>A,\n         B\\<rparr>\\<^sub>\\<bullet>\\<rparr> =\n    cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_prod_2_Rel (cat_Rel \\<alpha>)\\<^esub>\n  B\\<rparr>", "by\n          (\n            cs_concl\n              cs_simp:\n                cf_prod_2_Rel_ObjMap_app cf_prod_2_Rel_ArrMap_app\n                cat_cs_simps cat_prod_cs_simps\n              cs_intro:\n                V_cs_intros cat_cs_intros cat_Rel_cs_intros cat_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  cf_prod_2_Rel\n   (cat_Rel\n     \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel\n        \\<alpha> \\<times>\\<^sub>C\n       cat_Rel \\<alpha>)\\<lparr>CId\\<rparr>\\<lparr>AB\\<rparr>\\<rparr> =\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>cf_prod_2_Rel\n (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>AB\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?AB\n  \\<in>\\<^sub>\\<circ> (cat_Rel \\<alpha> \\<times>\\<^sub>C\n                       cat_Rel\n                        \\<alpha>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  cf_prod_2_Rel\n   (cat_Rel\n     \\<alpha>)\\<lparr>ArrMap\\<rparr>\\<lparr>(cat_Rel\n        \\<alpha> \\<times>\\<^sub>C\n       cat_Rel \\<alpha>)\\<lparr>CId\\<rparr>\\<lparr>?AB\\<rparr>\\<rparr> =\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>cf_prod_2_Rel\n (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>\\<lparr>?AB\\<rparr>\\<rparr>\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\n 3. category \\<alpha> (cat_Rel \\<alpha>)\n 4. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomDom\\<rparr> =\n    cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\n 5. cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>HomCod\\<rparr> =\n    cat_Rel \\<alpha>\n 6. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>)\n 7. vsv (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ObjMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ>\n     (cf_prod_2_Rel (cat_Rel \\<alpha>)\\<lparr>ArrMap\\<rparr>) =\n    (cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>)\\<lparr>Arr\\<rparr>", "qed\n    (\n      cs_concl\n        cs_simp: cat_cs_simps \n        cs_intro: cat_cs_intros cat_cs_intros cat_Rel_cs_intros\n    )+"], ["proof (state)\nthis:\n  cf_prod_2_Rel (cat_Rel \\<alpha>) :\n  cat_Rel \\<alpha> \\<times>\\<^sub>C\n  cat_Rel\n   \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                          \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) cf_prod_2_Rel_is_functor'[cat_cs_intros]:\n  assumes \"\\<AA>' = cat_Rel \\<alpha> \\<times>\\<^sub>C cat_Rel \\<alpha>\"\n    and \"\\<BB>' = cat_Rel \\<alpha>\"\n    and \"\\<alpha>' = \\<alpha>\"\n  shows \"cf_prod_2_Rel (cat_Rel \\<alpha>) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel (cat_Rel \\<alpha>) :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>'\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_prod_2_Rel (cat_Rel \\<alpha>) :\n    cat_Rel \\<alpha> \\<times>\\<^sub>C\n    cat_Rel\n     \\<alpha> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                            \\<alpha>", "by (rule cf_prod_2_Rel_is_functor)"], ["", "lemmas [cat_cs_intros] = \\<Z>.cf_prod_2_Rel_is_functor'"], ["", "subsection\\<open>Product universal property arrow for \\<open>Set\\<close>\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition cat_Set_obj_prod_up :: \"V \\<Rightarrow> (V \\<Rightarrow> V) \\<Rightarrow> V \\<Rightarrow> (V \\<Rightarrow> V) \\<Rightarrow> V\"\n  where \"cat_Set_obj_prod_up I F A \\<phi> =\n    [(\\<lambda>a\\<in>\\<^sub>\\<circ>A. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)), A, (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cat_Set_obj_prod_up_components: \n  shows \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr> = \n    (\\<lambda>a\\<in>\\<^sub>\\<circ>A. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>))\"\n    and [cat_Set_cs_simps]: \n      \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr> = A\"\n    and [cat_Set_cs_simps]: \n      \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> = (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr> =\n    (\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) &&&\n    cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr> = A &&&\n    cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> = vproduct I F", "unfolding cat_Set_obj_prod_up_def arr_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n     A, vproduct I F]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n    (\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>) &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n     A, vproduct I F]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n    A &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n        \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>a\\<rparr>,\n     A, vproduct I F]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    vproduct I F", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Arrow value.\\<close>"], ["", "mk_VLambda cat_Set_obj_prod_up_components(1)\n  |vsv cat_Set_obj_prod_up_ArrVal_vsv[cat_Set_cs_intros]|\n  |vdomain cat_Set_obj_prod_up_ArrVal_vdomain[cat_Set_cs_simps]|\n  |app cat_Set_obj_prod_up_ArrVal_app|"], ["", "lemma cat_Set_obj_prod_up_ArrVal_vrange: \n  assumes \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\"\n  shows \"\\<R>\\<^sub>\\<circ> (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> vproduct I F", "unfolding cat_Set_obj_prod_up_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> vproduct I F", "proof(intro vrange_VLambda_vsubset vproductI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n               \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<D>\\<^sub>\\<circ>\n        (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>) =\n       I\n 3. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<forall>i\\<in>elts I.\n          (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<phi>\n               i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>)\\<lparr>i\\<rparr>\n          \\<in>\\<^sub>\\<circ> F i", "fix a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n               \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<D>\\<^sub>\\<circ>\n        (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>) =\n       I\n 3. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<forall>i\\<in>elts I.\n          (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<phi>\n               i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>)\\<lparr>i\\<rparr>\n          \\<in>\\<^sub>\\<circ> F i", "assume prems: \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n               \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<D>\\<^sub>\\<circ>\n        (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>) =\n       I\n 3. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<forall>i\\<in>elts I.\n          (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n              \\<phi>\n               i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>)\\<lparr>i\\<rparr>\n          \\<in>\\<^sub>\\<circ> F i", "show \"\\<forall>i\\<in>\\<^sub>\\<circ>I. (\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> F i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>elts I.\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> F i", "proof(intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> F i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> F i", "assume \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n       (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n           \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr>\n       \\<in>\\<^sub>\\<circ> F i", "with assms prems"], ["proof (chain)\npicking this:\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  \\<phi> ?i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F ?i\n  a \\<in>\\<^sub>\\<circ> A\n  i \\<in>\\<^sub>\\<circ> I", "show \"(\\<lambda>i\\<in>\\<^sub>\\<circ>I. \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> F i\""], ["proof (prove)\nusing this:\n  ?i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n  \\<phi> ?i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F ?i\n  a \\<in>\\<^sub>\\<circ> A\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n        \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr>\n    \\<in>\\<^sub>\\<circ> F i", "by (cs_concl cs_simp: V_cs_simps cs_intro: cat_Set_cs_intros)"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n      \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr>\n  \\<in>\\<^sub>\\<circ> F i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>elts I.\n     (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n         \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\\<lparr>i\\<rparr>\n     \\<in>\\<^sub>\\<circ> F i\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       vsv (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n               \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<D>\\<^sub>\\<circ>\n        (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>) =\n       I", "qed auto"], ["", "lemma cat_Set_obj_prod_up_ArrVal_app_vdomain[cat_Set_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"\\<D>\\<^sub>\\<circ> (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A\n       \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) =\n    I", "unfolding cat_Set_obj_prod_up_ArrVal_app[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>i\\<in>\\<^sub>\\<circ>I.\n         \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) =\n    I", "by simp"], ["", "lemma cat_Set_obj_prod_up_ArrVal_app_component[cat_Set_cs_simps]: \n  assumes \"a \\<in>\\<^sub>\\<circ> A\" and \"i \\<in>\\<^sub>\\<circ> I\"\n  shows \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr> = \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set_obj_prod_up I F A\n     \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr> =\n    \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. cat_Set_obj_prod_up I F A\n     \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr> =\n    \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "by (cs_concl cs_simp: cat_Set_obj_prod_up_ArrVal_app V_cs_simps)"], ["", "lemma cat_Set_obj_prod_up_ArrVal_app_vrange: \n  assumes \"a \\<in>\\<^sub>\\<circ> A\" and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\"\n  shows \"\\<R>\\<^sub>\\<circ> (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A\n       \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               (VLambda I F `\\<^sub>\\<circ> I)", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_Set_obj_prod_up I F A\n                                \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (VLambda I F `\\<^sub>\\<circ> I)", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_Set_obj_prod_up I F A\n                                \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (VLambda I F `\\<^sub>\\<circ> I)", "assume prems: \"b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\""], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cat_Set_obj_prod_up I F A\n                           \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_Set_obj_prod_up I F A\n                                \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (VLambda I F `\\<^sub>\\<circ> I)", "from assms(1)"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> A", "have \"vsv (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. vsv (cat_Set_obj_prod_up I F A\n          \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)", "by (auto simp: cat_Set_obj_prod_up_components)"], ["proof (state)\nthis:\n  vsv (cat_Set_obj_prod_up I F A\n        \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_Set_obj_prod_up I F A\n                                \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (VLambda I F `\\<^sub>\\<circ> I)", "with prems"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cat_Set_obj_prod_up I F A\n                           \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\n  vsv (cat_Set_obj_prod_up I F A\n        \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)", "obtain i \n    where b_def: \"b = cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr>\" \n      and i: \"i \\<in>\\<^sub>\\<circ> I\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cat_Set_obj_prod_up I F A\n                           \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\n  vsv (cat_Set_obj_prod_up I F A\n        \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>b =\n                 cat_Set_obj_prod_up I F A\n                  \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr>;\n         i \\<in>\\<^sub>\\<circ> I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by \n      ( \n        auto \n          elim: vsv.vrange_atE \n          simp: cat_Set_obj_prod_up_ArrVal_app[OF assms(1)]\n      )"], ["proof (state)\nthis:\n  b =\n  cat_Set_obj_prod_up I F A\n   \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr>\n  i \\<in>\\<^sub>\\<circ> I\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_Set_obj_prod_up I F A\n                                \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (VLambda I F `\\<^sub>\\<circ> I)", "from cat_Set_obj_prod_up_ArrVal_app_component[OF assms(1) i] b_def"], ["proof (chain)\npicking this:\n  cat_Set_obj_prod_up I ?F A\n   ?\\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr> =\n  ?\\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\n  b =\n  cat_Set_obj_prod_up I F A\n   \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr>", "have b_def':\n    \"b = \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  cat_Set_obj_prod_up I ?F A\n   ?\\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr> =\n  ?\\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\n  b =\n  cat_Set_obj_prod_up I F A\n   \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\\<lparr>i\\<rparr>\n\ngoal (1 subgoal):\n 1. b = \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "by simp"], ["proof (state)\nthis:\n  b = \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_Set_obj_prod_up I F A\n                                \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (VLambda I F `\\<^sub>\\<circ> I)", "from assms(1) assms(2)[OF i]"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> A\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i", "have \"b \\<in>\\<^sub>\\<circ> F i\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> F i", "unfolding b_def'"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (1 subgoal):\n 1. \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> \\<in>\\<^sub>\\<circ> F i", "by (cs_concl cs_intro: cat_Set_cs_intros)"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> F i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_Set_obj_prod_up I F A\n                                \\<phi>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (VLambda I F `\\<^sub>\\<circ> I)", "with i"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I\n  b \\<in>\\<^sub>\\<circ> F i", "show \"b \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n  b \\<in>\\<^sub>\\<circ> F i\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                           (VLambda I F `\\<^sub>\\<circ> I)", "by force"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         (VLambda I F `\\<^sub>\\<circ> I)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Product universal property arrow for \\<open>Set\\<close> is an arrow in \\<open>Set\\<close>\\<close>"], ["", "lemma (in \\<Z>) cat_Set_obj_prod_up_cat_Set_is_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    and \"VLambda I F \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\"\n  shows \"cat_Set_obj_prod_up I F A \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set_obj_prod_up I F A\n     \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F", "proof(intro cat_Set_is_arrI arr_SetI)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_Set_obj_prod_up I F A \\<phi>)\n 3. vsv (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n 4. vcard (cat_Set_obj_prod_up I F A \\<phi>) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>) =\n    cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set_obj_prod_up I F A\n                               \\<phi>\\<lparr>ArrCod\\<rparr>\n 7. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 9. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr> = A\n 10. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> = vproduct I F", "show \"vfsequence (cat_Set_obj_prod_up I F A \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cat_Set_obj_prod_up I F A \\<phi>)", "unfolding cat_Set_obj_prod_up_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n      A, vproduct I F]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vfsequence (cat_Set_obj_prod_up I F A \\<phi>)\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n 3. vcard (cat_Set_obj_prod_up I F A \\<phi>) = 3\\<^sub>\\<nat>\n 4. \\<D>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>) =\n    cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n 5. \\<R>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set_obj_prod_up I F A\n                               \\<phi>\\<lparr>ArrCod\\<rparr>\n 6. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr> = A\n 9. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> = vproduct I F", "show \"vcard (cat_Set_obj_prod_up I F A \\<phi>) = 3\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cat_Set_obj_prod_up I F A \\<phi>) = 3\\<^sub>\\<nat>", "unfolding cat_Set_obj_prod_up_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>A.\n         \\<lambda>i\\<in>\\<^sub>\\<circ>I.\n            \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>,\n      A, vproduct I F]\\<^sub>\\<circ> =\n    3\\<^sub>\\<nat>", "by (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cat_Set_obj_prod_up I F A \\<phi>) = 3\\<^sub>\\<nat>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>) =\n    cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set_obj_prod_up I F A\n                               \\<phi>\\<lparr>ArrCod\\<rparr>\n 5. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr> = A\n 8. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> = vproduct I F", "show \n    \"\\<R>\\<^sub>\\<circ> (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ>\n      cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set_obj_prod_up I F A\n                               \\<phi>\\<lparr>ArrCod\\<rparr>", "unfolding cat_Set_obj_prod_up_components(3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> vproduct I F", "by (rule cat_Set_obj_prod_up_ArrVal_vrange[OF assms(3)])"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_Set_obj_prod_up I F A\n                             \\<phi>\\<lparr>ArrCod\\<rparr>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>) =\n    cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n 4. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr> = A\n 7. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> = vproduct I F", "show \"cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding cat_Set_cs_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. vproduct I F \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule Limit_vproduct_in_Vset_if_VLambda_in_VsetI)\n      (simp_all add: cat_Set_cs_simps assms)"], ["proof (state)\nthis:\n  cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr>\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ>\n     (cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrVal\\<rparr>) =\n    cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n 4. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr>\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrDom\\<rparr> = A\n 6. cat_Set_obj_prod_up I F A \\<phi>\\<lparr>ArrCod\\<rparr> = vproduct I F", "qed (auto simp: assms cat_Set_cs_simps intro: cat_Set_cs_intros)"], ["", "lemma (in \\<Z>) pdg_dghm_comp_dghm_proj_dghm_up: \n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" \n    and \"VLambda I F \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n    and \"\\<And>i. i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow> \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\" \n    and \"i \\<in>\\<^sub>\\<circ> I\"\n  shows \n    \"\\<phi> i = vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cat_Set_obj_prod_up I F A \\<phi>\"\n    (is \\<open>\\<phi> i = ?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> i =\n    vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cat_Set_obj_prod_up I F A \\<phi>", "proof(rule arr_Set_eqI[of \\<alpha>])"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> (\\<phi> i)\n 2. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)\n 3. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 4. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 5. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "note \\<phi>i = assms(3)[OF assms(4)]"], ["proof (state)\nthis:\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> (\\<phi> i)\n 2. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)\n 3. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 4. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 5. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "note \\<phi>i = cat_Set_is_arrD[OF \\<phi>i] \\<phi>i"], ["proof (state)\nthis:\n  arr_Set \\<alpha> (\\<phi> i)\n  \\<phi> i\\<lparr>ArrDom\\<rparr> = A\n  \\<phi> i\\<lparr>ArrCod\\<rparr> = F i\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> (\\<phi> i)\n 2. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)\n 3. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 4. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 5. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "have Fi: \"?Fi : (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i) \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vprojection_arrow I F\n     i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i", "by (rule vprojection_arrow_is_arr[OF assms(4,2)])"], ["proof (state)\nthis:\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> (\\<phi> i)\n 2. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)\n 3. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 4. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 5. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "from cat_Set_obj_prod_up_cat_Set_is_arr[OF assms(1,2,3)]"], ["proof (chain)\npicking this:\n  (\\<And>i.\n      i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n      i \\<in>\\<^sub>\\<circ> I) \\<Longrightarrow>\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F", "have \\<phi>:\n    \"cat_Set_obj_prod_up I F A \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>I. F i)\""], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in>\\<^sub>\\<circ> I \\<Longrightarrow>\n      i \\<in>\\<^sub>\\<circ> I) \\<Longrightarrow>\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F\n\ngoal (1 subgoal):\n 1. cat_Set_obj_prod_up I F A\n     \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F", "by simp"], ["proof (state)\nthis:\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F\n\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> (\\<phi> i)\n 2. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)\n 3. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 4. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 5. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "show \"arr_Set \\<alpha> (\\<phi> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (\\<phi> i)", "by (rule \\<phi>i(1))"], ["proof (state)\nthis:\n  arr_Set \\<alpha> (\\<phi> i)\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)\n 2. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 3. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 4. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "interpret \\<phi>i: arr_Set \\<alpha> \\<open>\\<phi> i\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (\\<phi> i)", "by (rule \\<phi>i(1))"], ["proof (state)\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)\n 2. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 3. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 4. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "from Fi \\<phi>"], ["proof (chain)\npicking this:\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F", "have Fi_\\<phi>: \"?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\""], ["proof (prove)\nusing this:\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F\n\ngoal (1 subgoal):\n 1. vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cat_Set_obj_prod_up I F A\n     \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i", "by (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)\n 2. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 3. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 4. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "then"], ["proof (chain)\npicking this:\n  vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i", "show arr_Set_Fi_\\<phi>: \"arr_Set \\<alpha> (?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>)\""], ["proof (prove)\nusing this:\n  vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)", "by (auto simp: cat_Set_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cat_Set_obj_prod_up I F A \\<phi>)\n\ngoal (3 subgoals):\n 1. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 2. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 3. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "interpret arr_Set \\<alpha> \\<open>?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (vprojection_arrow I F\n       i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cat_Set_obj_prod_up I F A \\<phi>)", "by (rule arr_Set_Fi_\\<phi>)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 2. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 3. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "from \\<phi>i"], ["proof (chain)\npicking this:\n  arr_Set \\<alpha> (\\<phi> i)\n  \\<phi> i\\<lparr>ArrDom\\<rparr> = A\n  \\<phi> i\\<lparr>ArrCod\\<rparr> = F i\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (\\<phi> i\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\nusing this:\n  arr_Set \\<alpha> (\\<phi> i)\n  \\<phi> i\\<lparr>ArrDom\\<rparr> = A\n  \\<phi> i\\<lparr>ArrCod\\<rparr> = F i\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (\\<phi> i\\<lparr>ArrVal\\<rparr>) = A", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (\\<phi> i\\<lparr>ArrVal\\<rparr>) = A\n\ngoal (3 subgoals):\n 1. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 2. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 3. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "from Fi_\\<phi>"], ["proof (chain)\npicking this:\n  vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> ((?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>)\\<lparr>ArrVal\\<rparr>) = A\""], ["proof (prove)\nusing this:\n  vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((vprojection_arrow I F\n        i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>) =\n    A", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>) =\n  A\n\ngoal (3 subgoals):\n 1. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n 2. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 3. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "show \"\\<phi> i\\<lparr>ArrVal\\<rparr> = (?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>)\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> i\\<lparr>ArrVal\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<phi> i\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((vprojection_arrow I F\n           i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>)\n 3. A = A\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (vprojection_arrow I F\n         i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        cat_Set_obj_prod_up I F A\n         \\<phi>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (\\<phi> i\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((vprojection_arrow I F\n           i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>)\n 3. A = A\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (vprojection_arrow I F\n         i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        cat_Set_obj_prod_up I F A\n         \\<phi>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "assume prems: \"a \\<in>\\<^sub>\\<circ> A\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A\n\ngoal (4 subgoals):\n 1. vsv (\\<phi> i\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((vprojection_arrow I F\n           i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>)\n 3. A = A\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> A \\<Longrightarrow>\n       \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (vprojection_arrow I F\n         i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        cat_Set_obj_prod_up I F A\n         \\<phi>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "from assms(4) prems \\<phi>i(4) \\<phi> Fi"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> I\n  a \\<in>\\<^sub>\\<circ> A\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i", "show \n      \"\\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = (?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> I\n  a \\<in>\\<^sub>\\<circ> A\n  \\<phi> i : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n\ngoal (1 subgoal):\n 1. \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A\n      \\<phi>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "by \n        ( \n          cs_concl \n            cs_simp: cat_Set_cs_simps cat_cs_simps \n            cs_intro: cat_Set_cs_intros cat_cs_intros\n        )"], ["proof (state)\nthis:\n  \\<phi> i\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n  (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (\\<phi> i\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((vprojection_arrow I F\n           i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>)\n 3. A = A", "qed auto"], ["proof (state)\nthis:\n  \\<phi> i\\<lparr>ArrVal\\<rparr> =\n  (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n 2. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "from Fi \\<phi>"], ["proof (chain)\npicking this:\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F", "show \"\\<phi> i\\<lparr>ArrDom\\<rparr> = (?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>)\\<lparr>ArrDom\\<rparr>\""], ["proof (prove)\nusing this:\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F\n\ngoal (1 subgoal):\n 1. \\<phi> i\\<lparr>ArrDom\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cat_Set_cs_simps \\<phi>i(2))"], ["proof (state)\nthis:\n  \\<phi> i\\<lparr>ArrDom\\<rparr> =\n  (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrDom\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "from Fi \\<phi>"], ["proof (chain)\npicking this:\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F", "show \"\\<phi> i\\<lparr>ArrCod\\<rparr> = (?Fi \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?\\<phi>)\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\nusing this:\n  vprojection_arrow I F\n   i : vproduct I F \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> F i\n  cat_Set_obj_prod_up I F A\n   \\<phi> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> vproduct I F\n\ngoal (1 subgoal):\n 1. \\<phi> i\\<lparr>ArrCod\\<rparr> =\n    (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cat_Set_cs_simps \\<phi>i(3))"], ["proof (state)\nthis:\n  \\<phi> i\\<lparr>ArrCod\\<rparr> =\n  (vprojection_arrow I F i \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   cat_Set_obj_prod_up I F A \\<phi>)\\<lparr>ArrCod\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Equalizer object for the category \\<open>Set\\<close>\\<close>"], ["", "text\\<open>\nThe definition of the (non-categorical concept of an) equalizer can be \nfound in \\cite{noauthor_wikipedia_2001}\\footnote{\n\\url{https://en.wikipedia.org/wiki/Equaliser_(mathematics)}\n}\\<close>"], ["", "definition vequalizer :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"vequalizer X f g = set {x. x \\<in>\\<^sub>\\<circ> X \\<and> f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>}\""], ["", "lemma small_vequalizer[simp]: \n  \"small {x. x \\<in>\\<^sub>\\<circ> X \\<and> f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {x. x \\<in>\\<^sub>\\<circ> X \\<and>\n         f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n         g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>}", "by auto"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma vequalizerI:\n  assumes \"x \\<in>\\<^sub>\\<circ> X\" and \"f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\"\n  shows \"x \\<in>\\<^sub>\\<circ> vequalizer X f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> vequalizer X f g", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> X\n  f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n  g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> vequalizer X f g", "unfolding vequalizer_def"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> X\n  f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n  g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {x. x \\<in>\\<^sub>\\<circ> X \\<and>\n                               f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n                               g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>}", "by auto"], ["", "lemma vequalizerD[dest]:\n  assumes \"x \\<in>\\<^sub>\\<circ> vequalizer X f g\"\n  shows \"x \\<in>\\<^sub>\\<circ> X\" and \"f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> X &&&\n    f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n    g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> vequalizer X f g\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> X &&&\n    f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n    g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>", "unfolding vequalizer_def"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {x. x \\<in>\\<^sub>\\<circ> X \\<and>\n                             f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n                             g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>}\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> X &&&\n    f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n    g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>", "by auto"], ["", "lemma vequalizerE[elim]:\n  assumes \"x \\<in>\\<^sub>\\<circ> vequalizer X f g\"\n  obtains \"x \\<in>\\<^sub>\\<circ> X\" and \"f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> = g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>x \\<in>\\<^sub>\\<circ> X;\n      f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n      g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> vequalizer X f g\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>x \\<in>\\<^sub>\\<circ> X;\n      f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n      g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding vequalizer_def"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {x. x \\<in>\\<^sub>\\<circ> X \\<and>\n                             f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n                             g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>}\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>x \\<in>\\<^sub>\\<circ> X;\n      f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n      g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "text\\<open>Elementary results.\\<close>"], ["", "lemma vequalizer_vsubset_vdomain[cat_Set_cs_intros]: \"vequalizer a g f \\<subseteq>\\<^sub>\\<circ> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vequalizer a g f \\<subseteq>\\<^sub>\\<circ> a", "by auto"], ["", "lemma Limit_vequalizer_in_Vset[cat_Set_cs_intros]:\n  assumes \"Limit \\<alpha>\" and \"a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"vequalizer a g f \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vequalizer a g f \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "using assms"], ["proof (prove)\nusing this:\n  Limit \\<alpha>\n  a \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. vequalizer a g f \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by auto"], ["", "lemma vequalizer_flip: \"vequalizer a f g = vequalizer a g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vequalizer a f g = vequalizer a g f", "unfolding vequalizer_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {x. x \\<in>\\<^sub>\\<circ> a \\<and>\n         f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n         g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>} =\n    ZFC_in_HOL.set\n     {x. x \\<in>\\<^sub>\\<circ> a \\<and>\n         g\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr> =\n         f\\<lparr>ArrVal\\<rparr>\\<lparr>x\\<rparr>}", "by auto"], ["", "lemma (in \\<Z>) cat_Set_incl_Set_commute:\n  assumes \"\\<gg> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\" and \"\\<ff> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\" \n  shows \n    \"\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> incl_Set (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n      \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> incl_Set (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>\"\n  (is \\<open>\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl = \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "note \\<gg> = cat_Set_is_arrD[OF assms(1)]"], ["proof (state)\nthis:\n  arr_Set \\<alpha> \\<gg>\n  \\<gg>\\<lparr>ArrDom\\<rparr> = \\<aa>\n  \\<gg>\\<lparr>ArrCod\\<rparr> = \\<bb>\n\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "interpret \\<gg>: arr_Set \\<alpha> \\<gg> \n    rewrites \"\\<gg>\\<lparr>ArrDom\\<rparr> = \\<aa>\" and \"\\<gg>\\<lparr>ArrCod\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> \\<gg> &&&\n    \\<gg>\\<lparr>ArrDom\\<rparr> = \\<aa> &&&\n    \\<gg>\\<lparr>ArrCod\\<rparr> = \\<bb>", "by (rule \\<gg>(1)) (simp_all add: \\<gg>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "note \\<ff> = cat_Set_is_arrD[OF assms(2)]"], ["proof (state)\nthis:\n  arr_Set \\<alpha> \\<ff>\n  \\<ff>\\<lparr>ArrDom\\<rparr> = \\<aa>\n  \\<ff>\\<lparr>ArrCod\\<rparr> = \\<bb>\n\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "interpret \\<ff>: arr_Set \\<alpha> \\<ff> \n    rewrites \"\\<ff>\\<lparr>ArrDom\\<rparr> = \\<aa>\" and \"\\<ff>\\<lparr>ArrCod\\<rparr> = \\<bb>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> \\<ff> &&&\n    \\<ff>\\<lparr>ArrDom\\<rparr> = \\<aa> &&&\n    \\<ff>\\<lparr>ArrCod\\<rparr> = \\<bb>", "by (rule \\<ff>(1)) (simp_all add: \\<ff>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "note [cat_Set_cs_intros] = \\<gg>.arr_Set_ArrDom_in_Vset \\<ff>.arr_Set_ArrCod_in_Vset"], ["proof (state)\nthis:\n  \\<aa> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n  \\<bb> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "from assms"], ["proof (chain)\npicking this:\n  \\<gg> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n  \\<ff> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>", "have \\<gg>_incl: \n    \"\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl : vequalizer \\<aa> \\<ff> \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\""], ["proof (prove)\nusing this:\n  \\<gg> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n  \\<ff> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n     \\<aa> : vequalizer \\<aa> \\<ff>\n              \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>", "by (cs_concl cs_intro: V_cs_intros cat_Set_cs_intros cat_cs_intros)"], ["proof (state)\nthis:\n  \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "then"], ["proof (chain)\npicking this:\n  \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> ((\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl)\\<lparr>ArrVal\\<rparr>) = vequalizer \\<aa> \\<ff> \\<gg>\""], ["proof (prove)\nusing this:\n  \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n        \\<aa>)\\<lparr>ArrVal\\<rparr>) =\n    vequalizer \\<aa> \\<ff> \\<gg>", "by (cs_concl cs_simp: cat_cs_simps)+"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>) =\n  vequalizer \\<aa> \\<ff> \\<gg>\n\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "from assms"], ["proof (chain)\npicking this:\n  \\<gg> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n  \\<ff> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>", "have \\<ff>_incl: \n    \"\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl : vequalizer \\<aa> \\<ff> \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\""], ["proof (prove)\nusing this:\n  \\<gg> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n  \\<ff> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n\ngoal (1 subgoal):\n 1. \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n     \\<aa> : vequalizer \\<aa> \\<ff>\n              \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>", "by (cs_concl cs_intro: V_cs_intros cat_Set_cs_intros cat_cs_intros)"], ["proof (state)\nthis:\n  \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "then"], ["proof (chain)\npicking this:\n  \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> ((\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl)\\<lparr>ArrVal\\<rparr>) = vequalizer \\<aa> \\<ff> \\<gg>\""], ["proof (prove)\nusing this:\n  \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n        \\<aa>)\\<lparr>ArrVal\\<rparr>) =\n    vequalizer \\<aa> \\<ff> \\<gg>", "by (cs_concl cs_simp: cat_cs_simps)+"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>) =\n  vequalizer \\<aa> \\<ff> \\<gg>\n\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n    \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>", "proof(rule arr_Set_eqI)"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set ?\\<alpha>\n     (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\n 2. arr_Set ?\\<alpha>\n     (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\n 3. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>\n 4. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr>\n 5. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr>", "from \\<gg>_incl"], ["proof (chain)\npicking this:\n  \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>", "show arr_Set_\\<gg>_incl: \"arr_Set \\<alpha> (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl)\""], ["proof (prove)\nusing this:\n  \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)", "by (auto dest: cat_Set_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\n 2. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>\n 3. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr>\n 4. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr>", "interpret arr_Set_\\<gg>_incl: arr_Set \\<alpha> \\<open>\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)", "by (rule arr_Set_\\<gg>_incl)"], ["proof (state)\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\n 2. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>\n 3. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr>\n 4. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr>", "from \\<ff>_incl"], ["proof (chain)\npicking this:\n  \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>", "show arr_Set_\\<ff>_incl: \"arr_Set \\<alpha> (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl)\""], ["proof (prove)\nusing this:\n  \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n   \\<aa> : vequalizer \\<aa> \\<ff>\n            \\<gg> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)", "by (auto dest: cat_Set_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\n\ngoal (3 subgoals):\n 1. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>\n 2. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr>\n 3. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr>", "interpret arr_Set_\\<ff>_incl: arr_Set \\<alpha> \\<open>\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)", "by (rule arr_Set_\\<ff>_incl)"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>\n 2. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr>\n 3. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr>", "show \"(\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl)\\<lparr>ArrVal\\<rparr> = (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl)\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv ((\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n           \\<aa>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n           \\<aa>)\\<lparr>ArrVal\\<rparr>)\n 3. vequalizer \\<aa> \\<ff> \\<gg> = vequalizer \\<aa> \\<ff> \\<gg>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> vequalizer \\<aa> \\<ff> \\<gg> \\<Longrightarrow>\n       (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n         \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n         \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv ((\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n           \\<aa>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n           \\<aa>)\\<lparr>ArrVal\\<rparr>)\n 3. vequalizer \\<aa> \\<ff> \\<gg> = vequalizer \\<aa> \\<ff> \\<gg>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> vequalizer \\<aa> \\<ff> \\<gg> \\<Longrightarrow>\n       (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n         \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n         \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "assume \"a \\<in>\\<^sub>\\<circ> vequalizer \\<aa> \\<ff> \\<gg>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> vequalizer \\<aa> \\<ff> \\<gg>\n\ngoal (4 subgoals):\n 1. vsv ((\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n           \\<aa>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n           \\<aa>)\\<lparr>ArrVal\\<rparr>)\n 3. vequalizer \\<aa> \\<ff> \\<gg> = vequalizer \\<aa> \\<ff> \\<gg>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> vequalizer \\<aa> \\<ff> \\<gg> \\<Longrightarrow>\n       (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n         \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n         \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "with assms"], ["proof (chain)\npicking this:\n  \\<gg> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n  \\<ff> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n  a \\<in>\\<^sub>\\<circ> vequalizer \\<aa> \\<ff> \\<gg>", "show \n        \"(\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> ?incl)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  \\<gg> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n  \\<ff> : \\<aa> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> \\<bb>\n  a \\<in>\\<^sub>\\<circ> vequalizer \\<aa> \\<ff> \\<gg>\n\ngoal (1 subgoal):\n 1. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n      \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n      \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "by\n          (\n            cs_concl\n              cs_simp: vequalizerD(2) cat_Set_cs_simps cat_cs_simps\n              cs_intro: V_cs_intros cat_Set_cs_intros cat_cs_intros\n          )"], ["proof (state)\nthis:\n  (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n    \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n  (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n    \\<aa>)\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv ((\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n           \\<aa>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv ((\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>)\n           \\<aa>)\\<lparr>ArrVal\\<rparr>)\n 3. vequalizer \\<aa> \\<ff> \\<gg> = vequalizer \\<aa> \\<ff> \\<gg>", "qed auto"], ["proof (state)\nthis:\n  (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr> =\n  (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrDom\\<rparr>\n 2. (\\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr> =\n    (\\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>)\\<lparr>ArrCod\\<rparr>", "qed (use \\<gg>_incl \\<ff>_incl in \\<open>cs_concl cs_simp: cat_cs_simps\\<close>)+"], ["proof (state)\nthis:\n  \\<gg> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa> =\n  \\<ff> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  incl_Rel (vequalizer \\<aa> \\<ff> \\<gg>) \\<aa>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Auxiliary\\<close>"], ["", "text\\<open>\nThis subsection is reserved for insignificant helper lemmas \nand rules that are used in applied formalization elsewhere.\n\\<close>"], ["", "lemma (in \\<Z>) cat_Rel_CId_is_cat_Set_arr:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\"\n  shows \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "from assms"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "unfolding cat_Rel_components cat_Set_components(6)[symmetric]"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "by (cs_concl cs_simp: cat_Set_components(1) cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  cat_Rel\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) cat_Rel_CId_is_cat_Set_arr'[cat_rel_par_Set_cs_intros]:\n  assumes \"A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\" \n    and \"B' = A\"\n    and \"C' = A\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : B' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : B' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> C'", "using assms(1)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : B' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> C'", "unfolding assms(2-4)"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Rel \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Rel\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> A", "by (rule cat_Rel_CId_is_cat_Set_arr)"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}