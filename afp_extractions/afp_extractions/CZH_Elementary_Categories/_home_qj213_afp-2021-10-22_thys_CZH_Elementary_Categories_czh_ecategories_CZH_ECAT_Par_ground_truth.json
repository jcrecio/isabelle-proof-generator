{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_Par.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemmas (in arr_Rel) [cat_Par_cs_simps] = \n  dg_Rel_shared_cs_simps", "lemmas [cat_Par_cs_simps] = \n  dg_Rel_shared_cs_simps\n  arr_Par.arr_Par_length\n  arr_Par_comp_Par_id_Par_left\n  arr_Par_comp_Par_id_Par_right", "lemmas [cat_Par_cs_intros] = \n  arr_Par_comp_Par", "lemma cat_Par_components:\n  shows \"cat_Par \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"cat_Par \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Par \\<alpha> T}\"\n    and \"cat_Par \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"cat_Par \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"cat_Par \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>P\\<^sub>a\\<^sub>r ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_Par \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Par\"", "lemma cat_smc_cat_Par: \"cat_smc (cat_Par \\<alpha>) = smc_Par \\<alpha>\"", "lemmas_with [folded cat_smc_cat_Par, unfolded slicing_simps]:\n  cat_Par_Obj_iff = smc_Par_Obj_iff\n  and cat_Par_Arr_iff[cat_Par_cs_simps] = smc_Par_Arr_iff\n  and cat_Par_Dom_vsv[cat_Par_cs_intros] = smc_Par_Dom_vsv\n  and cat_Par_Dom_vdomain[cat_Par_cs_simps] = smc_Par_Dom_vdomain\n  and cat_Par_Dom_vrange = smc_Par_Dom_vrange\n  and cat_Par_Dom_app[cat_Par_cs_simps] = smc_Par_Dom_app\n  and cat_Par_Cod_vsv[cat_Par_cs_intros] = smc_Par_Cod_vsv\n  and cat_Par_Cod_vdomain[cat_Par_cs_simps] = smc_Par_Cod_vdomain\n  and cat_Par_Cod_vrange = smc_Par_Cod_vrange\n  and cat_Par_Cod_app[cat_Par_cs_simps] = smc_Par_Cod_app\n  and cat_Par_is_arrI = smc_Par_is_arrI\n  and cat_Par_is_arrD = smc_Par_is_arrD\n  and cat_Par_is_arrE = smc_Par_is_arrE", "lemmas_with [folded cat_smc_cat_Par, unfolded slicing_simps]: \n  cat_Par_composable_arrs_dg_Par = smc_Par_composable_arrs_dg_Par\n  and cat_Par_Comp = smc_Par_Comp\n  and cat_Par_Comp_app[cat_Par_cs_simps] = smc_Par_Comp_app\n  and cat_Par_Comp_vdomain[cat_Par_cs_simps] = smc_Par_Comp_vdomain", "lemmas [cat_cs_simps] = cat_Par_is_arrD(2,3)", "lemmas [cat_Par_cs_intros] = cat_Par_is_arrI", "lemmas_with (in \\<Z>) [folded cat_smc_cat_Par, unfolded slicing_simps]:\n  cat_Par_Hom_vifunion_in_Vset = smc_Par_Hom_vifunion_in_Vset\n  and cat_Par_incl_Par_is_arr = smc_Par_incl_Par_is_arr\n  and cat_Par_incl_Par_is_arr'[cat_Par_cs_intros] = smc_Par_incl_Par_is_arr'\n  and cat_Par_Comp_vrange = smc_Par_Comp_vrange\n  and cat_Par_is_monic_arrI = smc_Par_is_monic_arrI\n  and cat_Par_is_monic_arr = smc_Par_is_monic_arr\n  and cat_Par_is_epic_arrI = smc_Par_is_epic_arrI\n  and cat_Par_is_epic_arrD = smc_Par_is_epic_arrD\n  and cat_Par_is_epic_arr = smc_Par_is_epic_arr\n  and cat_Par_obj_terminal = smc_Par_obj_terminal\n  and cat_Par_obj_initial = smc_Par_obj_initial\n  and cat_Par_obj_terminal_obj_initial = smc_Par_obj_terminal_obj_initial\n  and cat_Par_obj_null = smc_Par_obj_null\n  and cat_Par_is_zero_arr = smc_Par_is_zero_arr", "lemmas [cat_Par_cs_intros] = \\<Z>.cat_Par_incl_Par_is_arr'", "lemma cat_Par_CId_app[cat_Par_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = id_Par A\"", "lemma id_Par_CId_app_app[cat_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = a\"", "lemma (in \\<Z>) category_cat_Par: \"category \\<alpha> (cat_Par \\<alpha>)\"", "lemma (in \\<Z>) wide_replete_subcategory_cat_Par_cat_Rel: \n  \"cat_Par \\<alpha> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\"", "lemma (in \\<Z>) cat_Par_is_arr_isomorphismI[intro]:\n  assumes \"T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\" \n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"", "lemma (in \\<Z>) cat_Par_is_arr_isomorphismD[dest]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"\n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma (in \\<Z>) cat_Par_is_arr_isomorphism:\n  \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B \\<longleftrightarrow>\n    T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B \\<and>\n    v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and>\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"", "lemma (in \\<Z>) cat_Par_the_inverse:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"\n  shows \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>P\\<^sub>a\\<^sub>r\"", "lemmas [cat_Par_cs_simps] = \\<Z>.cat_Par_the_inverse"], "translations": [["", "lemmas (in arr_Rel) [cat_Par_cs_simps] = \n  dg_Rel_shared_cs_simps"], ["", "lemmas [cat_Par_cs_simps] = \n  dg_Rel_shared_cs_simps\n  arr_Par.arr_Par_length\n  arr_Par_comp_Par_id_Par_left\n  arr_Par_comp_Par_id_Par_right"], ["", "lemmas [cat_Par_cs_intros] = \n  arr_Par_comp_Par"], ["", "subsection\\<open>\\<open>Par\\<close> as a category\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition cat_Par :: \"V \\<Rightarrow> V\"\n  where \"cat_Par \\<alpha> =\n    [\n      Vset \\<alpha>,\n      set {T. arr_Par \\<alpha> T},\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>),\n      (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>),\n      (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      VLambda (Vset \\<alpha>) id_Par \n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cat_Par_components:\n  shows \"cat_Par \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha>\"\n    and \"cat_Par \\<alpha>\\<lparr>Arr\\<rparr> = set {T. arr_Par \\<alpha> T}\"\n    and \"cat_Par \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrDom\\<rparr>)\"\n    and \"cat_Par \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>T\\<in>\\<^sub>\\<circ>set {T. arr_Par \\<alpha> T}. T\\<lparr>ArrCod\\<rparr>)\"\n    and \"cat_Par \\<alpha>\\<lparr>Comp\\<rparr> = (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>). ST\\<lparr>0\\<rparr> \\<circ>\\<^sub>P\\<^sub>a\\<^sub>r ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_Par \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Par\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cat_Par \\<alpha>\\<lparr>Obj\\<rparr> = Vset \\<alpha> &&&\n     cat_Par \\<alpha>\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Par \\<alpha> T} &&&\n     cat_Par \\<alpha>\\<lparr>Dom\\<rparr> =\n     (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Par \\<alpha> T}.\n         T\\<lparr>ArrDom\\<rparr>)) &&&\n    cat_Par \\<alpha>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Par \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    cat_Par \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    cat_Par \\<alpha>\\<lparr>CId\\<rparr> = VLambda (Vset \\<alpha>) id_Rel", "unfolding cat_Par_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     Vset \\<alpha> &&&\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set {T. arr_Par \\<alpha> T} &&&\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>)\n       id_Rel]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Par \\<alpha> T}.\n         T\\<lparr>ArrDom\\<rparr>)) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set {T. arr_Par \\<alpha> T}.\n        T\\<lparr>ArrCod\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>,\n     \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Par \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>,\n     \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n        ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n        ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (Vset \\<alpha>)\n      id_Rel]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    VLambda (Vset \\<alpha>) id_Rel", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma cat_smc_cat_Par: \"cat_smc (cat_Par \\<alpha>) = smc_Par \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc (cat_Par \\<alpha>) = smc_Par \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_Par \\<alpha>))\n 2. vsv (smc_Par \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Par \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Par \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Par \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) = 5\\<^sub>\\<nat>", "unfolding cat_smc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [cat_Par \\<alpha>\\<lparr>Obj\\<rparr>,\n      cat_Par \\<alpha>\\<lparr>Arr\\<rparr>,\n      cat_Par \\<alpha>\\<lparr>Dom\\<rparr>,\n      cat_Par \\<alpha>\\<lparr>Cod\\<rparr>,\n      cat_Par \\<alpha>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) = 5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_Par \\<alpha>))\n 2. vsv (smc_Par \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Par \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Par \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Par \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>) = 5\\<^sub>\\<nat>", "unfolding smc_Par_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>) = 5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_Par \\<alpha>))\n 2. vsv (smc_Par \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Par \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Par \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Par \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) = \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 5\\<^sub>\\<nat> = 5\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ> (smc_Par \\<alpha>)\n\ngoal (3 subgoals):\n 1. vsv (cat_smc (cat_Par \\<alpha>))\n 2. vsv (smc_Par \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc (cat_Par \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_Par \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_Par \\<alpha>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cat_smc (cat_Par \\<alpha>)) \\<Longrightarrow> cat_smc (cat_Par \\<alpha>)\\<lparr>a\\<rparr> = smc_Par \\<alpha>\\<lparr>a\\<rparr>\"\n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (cat_smc (cat_Par \\<alpha>)) \\<Longrightarrow>\n    cat_smc (cat_Par \\<alpha>)\\<lparr>a\\<rparr> =\n    smc_Par \\<alpha>\\<lparr>a\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral,\n        unfold cat_smc_def dg_field_simps cat_Par_def smc_Par_def\n      )\n      (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cat_smc (cat_Par \\<alpha>)) \\<Longrightarrow>\n  cat_smc (cat_Par \\<alpha>)\\<lparr>?a\\<rparr> =\n  smc_Par \\<alpha>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (cat_smc (cat_Par \\<alpha>))\n 2. vsv (smc_Par \\<alpha>)", "qed (auto simp: cat_smc_def smc_Par_def)"], ["", "lemmas_with [folded cat_smc_cat_Par, unfolded slicing_simps]:\n  cat_Par_Obj_iff = smc_Par_Obj_iff\n  and cat_Par_Arr_iff[cat_Par_cs_simps] = smc_Par_Arr_iff\n  and cat_Par_Dom_vsv[cat_Par_cs_intros] = smc_Par_Dom_vsv\n  and cat_Par_Dom_vdomain[cat_Par_cs_simps] = smc_Par_Dom_vdomain\n  and cat_Par_Dom_vrange = smc_Par_Dom_vrange\n  and cat_Par_Dom_app[cat_Par_cs_simps] = smc_Par_Dom_app\n  and cat_Par_Cod_vsv[cat_Par_cs_intros] = smc_Par_Cod_vsv\n  and cat_Par_Cod_vdomain[cat_Par_cs_simps] = smc_Par_Cod_vdomain\n  and cat_Par_Cod_vrange = smc_Par_Cod_vrange\n  and cat_Par_Cod_app[cat_Par_cs_simps] = smc_Par_Cod_app\n  and cat_Par_is_arrI = smc_Par_is_arrI\n  and cat_Par_is_arrD = smc_Par_is_arrD\n  and cat_Par_is_arrE = smc_Par_is_arrE"], ["", "lemmas_with [folded cat_smc_cat_Par, unfolded slicing_simps]: \n  cat_Par_composable_arrs_dg_Par = smc_Par_composable_arrs_dg_Par\n  and cat_Par_Comp = smc_Par_Comp\n  and cat_Par_Comp_app[cat_Par_cs_simps] = smc_Par_Comp_app\n  and cat_Par_Comp_vdomain[cat_Par_cs_simps] = smc_Par_Comp_vdomain"], ["", "lemmas [cat_cs_simps] = cat_Par_is_arrD(2,3)"], ["", "lemmas [cat_Par_cs_intros] = cat_Par_is_arrI"], ["", "lemmas_with (in \\<Z>) [folded cat_smc_cat_Par, unfolded slicing_simps]:\n  cat_Par_Hom_vifunion_in_Vset = smc_Par_Hom_vifunion_in_Vset\n  and cat_Par_incl_Par_is_arr = smc_Par_incl_Par_is_arr\n  and cat_Par_incl_Par_is_arr'[cat_Par_cs_intros] = smc_Par_incl_Par_is_arr'\n  and cat_Par_Comp_vrange = smc_Par_Comp_vrange\n  and cat_Par_is_monic_arrI = smc_Par_is_monic_arrI\n  and cat_Par_is_monic_arr = smc_Par_is_monic_arr\n  and cat_Par_is_epic_arrI = smc_Par_is_epic_arrI\n  and cat_Par_is_epic_arrD = smc_Par_is_epic_arrD\n  and cat_Par_is_epic_arr = smc_Par_is_epic_arr\n  and cat_Par_obj_terminal = smc_Par_obj_terminal\n  and cat_Par_obj_initial = smc_Par_obj_initial\n  and cat_Par_obj_terminal_obj_initial = smc_Par_obj_terminal_obj_initial\n  and cat_Par_obj_null = smc_Par_obj_null\n  and cat_Par_is_zero_arr = smc_Par_is_zero_arr"], ["", "lemmas [cat_Par_cs_intros] = \\<Z>.cat_Par_incl_Par_is_arr'"], ["", "subsubsection\\<open>Identity\\<close>"], ["", "lemma cat_Par_CId_app[cat_Par_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n  shows \"cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = id_Par A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = id_Rel A", "using assms"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = id_Rel A", "unfolding cat_Par_components"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. VLambda (Vset \\<alpha>) id_Rel\\<lparr>A\\<rparr> = id_Rel A", "by simp"], ["", "lemma id_Par_CId_app_app[cat_cs_simps]:\n  assumes \"A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\" and \"a \\<in>\\<^sub>\\<circ> A\"\n  shows \"cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n    a", "unfolding cat_Par_CId_app[OF assms(1)] id_Rel_ArrVal_app[OF assms(2)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = a", "by simp"], ["", "subsubsection\\<open>\\<open>Par\\<close> is a category\\<close>"], ["", "lemma (in \\<Z>) category_cat_Par: \"category \\<alpha> (cat_Par \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Par \\<alpha>)", "proof(intro categoryI, unfold cat_smc_cat_Rel cat_smc_cat_Par cat_op_simps)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_Par \\<alpha>)\n 3. vsv (cat_Par \\<alpha>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_Par \\<alpha>) = 6\\<^sub>\\<nat>\n 5. semicategory \\<alpha> (smc_Par \\<alpha>)\n 6. \\<D>\\<^sub>\\<circ> (cat_Par \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Par\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "interpret Par: semicategory \\<alpha> \\<open>cat_smc (cat_Par \\<alpha>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (cat_smc (cat_Par \\<alpha>))", "unfolding cat_smc_cat_Par"], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> (smc_Par \\<alpha>)", "by (simp add: semicategory_smc_Par)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_Par \\<alpha>)\n 3. vsv (cat_Par \\<alpha>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_Par \\<alpha>) = 6\\<^sub>\\<nat>\n 5. semicategory \\<alpha> (smc_Par \\<alpha>)\n 6. \\<D>\\<^sub>\\<circ> (cat_Par \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Par\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vfsequence (cat_Par \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cat_Par \\<alpha>)", "unfolding cat_Par_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>) id_Rel]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (cat_Par \\<alpha>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Par \\<alpha>\\<lparr>CId\\<rparr>)\n 3. vcard (cat_Par \\<alpha>) = 6\\<^sub>\\<nat>\n 4. semicategory \\<alpha> (smc_Par \\<alpha>)\n 5. \\<D>\\<^sub>\\<circ> (cat_Par \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n 6. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Par\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> a\n 7. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       f =\n       f\n 8. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vcard (cat_Par \\<alpha>) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cat_Par \\<alpha>) = 6\\<^sub>\\<nat>", "unfolding cat_Par_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [Vset \\<alpha>, ZFC_in_HOL.set (Collect (arr_Par \\<alpha>)),\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrDom\\<rparr>,\n      \\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    (Collect (arr_Par \\<alpha>)).\n         T\\<lparr>ArrCod\\<rparr>,\n      \\<lambda>ST\\<in>\\<^sub>\\<circ>composable_arrs (dg_Par \\<alpha>).\n         ST\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>R\\<^sub>e\\<^sub>l\n         ST\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (Vset \\<alpha>) id_Rel]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cat_Par \\<alpha>) = 6\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Par \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Par \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Par \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Par\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> a\n 6. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       f =\n       f\n 7. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A\" if \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "using that"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Par\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "unfolding cat_Par_Obj_iff"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Par\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> A", "by \n      (\n        cs_concl \n          cs_simp: cat_Par_cs_simps cs_intro: cat_Par_cs_intros arr_Par_id_ParI\n      )"], ["proof (state)\nthis:\n  ?A \\<in>\\<^sub>\\<circ> cat_Par\n                          \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  cat_Par\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?A\\<rparr> : ?A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> ?A\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Par \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Par \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Par \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_Par\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       f =\n       f\n 6. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub> F = F\"\n    if \"F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\" for F A B"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n    F =\n    F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_Par\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n    F =\n    F", "from that"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "have \"arr_Par \\<alpha> F\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> F &&& B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto elim: cat_Par_is_arrE simp: cat_Par_cs_simps)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Par\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n    F =\n    F", "with that \\<Z>_axioms"], ["proof (chain)\npicking this:\n  F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  \\<Z> \\<alpha>\n  arr_Par \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  \\<Z> \\<alpha>\n  arr_Par \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Par\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n    F =\n    F", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_Par_cs_simps\n            cs_intro: cat_Par_cs_intros arr_Par_id_ParI\n        )"], ["proof (state)\nthis:\n  cat_Par\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n  F =\n  F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F : ?A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> ?B \\<Longrightarrow>\n  cat_Par\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?B\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n  ?F =\n  ?F\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Par \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Par \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Par \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"F \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub> cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> = F\"\n    if \"F : B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> C\" for F B C"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n    cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n    cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "from that"], ["proof (chain)\npicking this:\n  F : B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> C", "have \"arr_Par \\<alpha> F\" \"B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  F : B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> C\n\ngoal (1 subgoal):\n 1. arr_Par \\<alpha> F &&& B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto elim: cat_Par_is_arrE simp: cat_Par_cs_simps)"], ["proof (state)\nthis:\n  arr_Par \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n    cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "with that"], ["proof (chain)\npicking this:\n  F : B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> C\n  arr_Par \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  F : B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> C\n  arr_Par \\<alpha> F\n  B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. F \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n    cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n    F", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_Par_cs_simps\n            cs_intro: cat_Par_cs_intros arr_Par_id_ParI\n        )"], ["proof (state)\nthis:\n  F \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n  cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>B\\<rparr> =\n  F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?F : ?B \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> ?C \\<Longrightarrow>\n  ?F \\<circ>\\<^sub>A\\<^bsub>cat_Par \\<alpha>\\<^esub>\n  cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?B\\<rparr> =\n  ?F\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_Par \\<alpha>\\<lparr>CId\\<rparr>)\n 3. semicategory \\<alpha> (smc_Par \\<alpha>)\n 4. \\<D>\\<^sub>\\<circ> (cat_Par \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_Par \\<alpha>\\<lparr>Obj\\<rparr>", "qed (auto simp: semicategory_smc_Par cat_Par_components)"], ["", "subsubsection\\<open>\\<open>Par\\<close> is a wide replete subcategory of \\<open>Rel\\<close>\\<close>"], ["", "lemma (in \\<Z>) wide_replete_subcategory_cat_Par_cat_Rel: \n  \"cat_Par \\<alpha> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                   \\<alpha>", "proof(intro wide_replete_subcategoryI)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n             \\<alpha>\n 2. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n     \\<alpha>", "show wide_subcategory_cat_Par_cat_Rel: \"cat_Par \\<alpha> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n             \\<alpha>", "proof(intro wide_subcategoryI, unfold cat_smc_cat_Rel cat_smc_cat_Par)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\n 2. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "interpret Rel: category \\<alpha> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Rel \\<alpha>)", "by (rule category_cat_Rel)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\n 2. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "interpret Par: category \\<alpha> \\<open>cat_Par \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Par \\<alpha>)", "by (rule category_cat_Par)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\n 2. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "interpret wide_subsemicategory \\<alpha> \\<open>smc_Par \\<alpha>\\<close> \\<open>smc_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "by (simp add: wide_subsemicategory_smc_Par_smc_Rel)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\n 2. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "show \"cat_Par \\<alpha> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>", "proof(intro subcategoryI, unfold cat_smc_cat_Rel cat_smc_cat_Par)"], ["proof (state)\ngoal (4 subgoals):\n 1. category \\<alpha> (cat_Par \\<alpha>)\n 2. category \\<alpha> (cat_Rel \\<alpha>)\n 3. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                           \\<alpha>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Par\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "show \"smc_Par \\<alpha> \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                           \\<alpha>", "by (simp add: subsemicategory_axioms)"], ["proof (state)\nthis:\n  smc_Par \\<alpha>\n  \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                         \\<alpha>\n\ngoal (3 subgoals):\n 1. category \\<alpha> (cat_Par \\<alpha>)\n 2. category \\<alpha> (cat_Rel \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Par\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "fix A"], ["proof (state)\ngoal (3 subgoals):\n 1. category \\<alpha> (cat_Par \\<alpha>)\n 2. category \\<alpha> (cat_Rel \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Par\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "assume \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (3 subgoals):\n 1. category \\<alpha> (cat_Par \\<alpha>)\n 2. category \\<alpha> (cat_Rel \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_Par\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>", "show \"cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> = cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\""], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> =\n    cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>", "unfolding cat_Par_components cat_Rel_components"], ["proof (prove)\nusing this:\n  A \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. VLambda (Vset \\<alpha>) id_Rel\\<lparr>A\\<rparr> =\n    VLambda (Vset \\<alpha>) id_Rel\\<lparr>A\\<rparr>", "by simp"], ["proof (state)\nthis:\n  cat_Par \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr> =\n  cat_Rel \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>A\\<rparr>\n\ngoal (2 subgoals):\n 1. category \\<alpha> (cat_Par \\<alpha>)\n 2. category \\<alpha> (cat_Rel \\<alpha>)", "qed \n      (\n        auto simp: \n          subsemicategory_axioms Rel.category_axioms Par.category_axioms\n      )"], ["proof (state)\nthis:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\n\ngoal (1 subgoal):\n 1. smc_Par \\<alpha>\n    \\<subseteq>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> smc_Rel\n                             \\<alpha>", "qed (rule wide_subsemicategory_smc_Par_smc_Rel)"], ["proof (state)\nthis:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n           \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n     \\<alpha>", "show \"cat_Par \\<alpha> \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n     \\<alpha>", "proof(intro replete_subcategoryI)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\n 2. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b", "interpret wide_subcategory \\<alpha> \\<open>cat_Par \\<alpha>\\<close> \\<open>cat_Rel \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>i\\<^sub>d\\<^sub>e\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n             \\<alpha>", "by (rule wide_subcategory_cat_Par_cat_Rel)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\n 2. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b", "show \"cat_Par \\<alpha> \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_Par \\<alpha>\n    \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>", "by (rule subcategory_axioms)"], ["proof (state)\nthis:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Rel \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b", "fix A B F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b", "assume prems: \"A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\" \"F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (state)\nthis:\n  A \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>\n  F : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b", "note arr_Rel = cat_Rel_is_arr_isomorphismD[OF prems(2)]"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (F\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. \\<And>a b f.\n       \\<lbrakk>a \\<in>\\<^sub>\\<circ> cat_Par \\<alpha>\\<lparr>Obj\\<rparr>;\n        f : a \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> f : a \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> b", "from arr_Rel(2)"], ["proof (chain)\npicking this:\n  v11 (F\\<lparr>ArrVal\\<rparr>)", "show \"F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  v11 (F\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by (intro cat_Par_is_arrI arr_Par_arr_RelI cat_Rel_is_arrD[OF arr_Rel(1)])\n        auto"], ["proof (state)\nthis:\n  F : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>r\\<^sub>e\\<^sub>p\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n   \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Isomorphism\\<close>"], ["", "lemma (in \\<Z>) cat_Par_is_arr_isomorphismI[intro]:\n  assumes \"T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\" \n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\"\n  shows \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "note [cat_cs_intros] = cat_Rel_is_arr_isomorphismI"], ["proof (state)\nthis:\n  \\<lbrakk>?T : ?A \\<mapsto>\\<^bsub>cat_Rel \\<alpha>\\<^esub> ?B;\n   v11 (?T\\<lparr>ArrVal\\<rparr>);\n   \\<D>\\<^sub>\\<circ> (?T\\<lparr>ArrVal\\<rparr>) = ?A;\n   \\<R>\\<^sub>\\<circ> (?T\\<lparr>ArrVal\\<rparr>) = ?B\\<rbrakk>\n  \\<Longrightarrow> ?T : ?A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> ?B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "from wide_replete_subcategory_cat_Par_cat_Rel assms"], ["proof (chain)\npicking this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "have \n    \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (cs_concl cs_intro: cat_cs_intros cat_sub_cs_intros cat_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "with wide_replete_subcategory_cat_Par_cat_Rel assms"], ["proof (chain)\npicking this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "show \n    \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "by (cs_concl cs_simp: cat_sub_bw_cs_simps)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in \\<Z>) cat_Par_is_arr_isomorphismD[dest]:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"\n  shows \"T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"\n    and \"v11 (T\\<lparr>ArrVal\\<rparr>)\"\n    and \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\"\n    and \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B &&&\n     v11 (T\\<lparr>ArrVal\\<rparr>)) &&&\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A &&&\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "proof-"], ["proof (state)\ngoal (4 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 4. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "from wide_replete_subcategory_cat_Par_cat_Rel assms"], ["proof (chain)\npicking this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "have T: \n    \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (cs_concl cs_intro: cat_sub_cs_intros cat_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (4 subgoals):\n 1. T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n 2. v11 (T\\<lparr>ArrVal\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n 4. \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "show \"v11 (T\\<lparr>ArrVal\\<rparr>)\" \"\\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\" \"\\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v11 (T\\<lparr>ArrVal\\<rparr>) &&&\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A &&&\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B", "by (intro cat_Rel_is_arr_isomorphismD[OF T])+"], ["proof (state)\nthis:\n  v11 (T\\<lparr>ArrVal\\<rparr>)\n  \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A\n  \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "qed (rule is_arr_isomorphismD(1)[OF assms])"], ["", "lemma (in \\<Z>) cat_Par_is_arr_isomorphism:\n  \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B \\<longleftrightarrow>\n    T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B \\<and>\n    v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n    \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and>\n    \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B =\n    (T : A \\<mapsto>\\<^bsub>cat_Par \\<alpha>\\<^esub> B \\<and>\n     v11 (T\\<lparr>ArrVal\\<rparr>) \\<and>\n     \\<D>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = A \\<and>\n     \\<R>\\<^sub>\\<circ> (T\\<lparr>ArrVal\\<rparr>) = B)", "by auto"], ["", "subsection\\<open>The inverse arrow\\<close>"], ["", "abbreviation (input) converse_Par :: \"V \\<Rightarrow> V\" (\"(_\\<inverse>\\<^sub>P\\<^sub>a\\<^sub>r)\" [1000] 999)\n  where \"a\\<inverse>\\<^sub>P\\<^sub>a\\<^sub>r \\<equiv> a\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\""], ["", "lemma (in \\<Z>) cat_Par_the_inverse:\n  assumes \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\"\n  shows \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>P\\<^sub>a\\<^sub>r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from wide_replete_subcategory_cat_Par_cat_Rel assms"], ["proof (chain)\npicking this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "have T:\n    \"T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\""], ["proof (prove)\nusing this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "by (cs_concl cs_intro: cat_sub_cs_intros cat_sub_fw_cs_intros)"], ["proof (state)\nthis:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from wide_replete_subcategory_cat_Par_cat_Rel assms"], ["proof (chain)\npicking this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B", "have [cat_cs_simps]:\n    \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>C\\<^bsub>cat_Rel \\<alpha>\\<^esub>\""], ["proof (prove)\nusing this:\n  cat_Par \\<alpha>\n  \\<subseteq>\\<^sub>C\\<^sub>.\\<^sub>w\\<^sub>r\\<^bsub>\\<alpha>\\<^esub> cat_Rel\n                                 \\<alpha>\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Par \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>C\\<^bsub>cat_Rel \\<alpha>\\<^esub>", "by (cs_concl cs_full cs_simp: cat_sub_bw_cs_simps cs_intro: cat_sub_cs_intros)"], ["proof (state)\nthis:\n  T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> =\n  T\\<inverse>\\<^sub>C\\<^bsub>cat_Rel \\<alpha>\\<^esub>\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "from T"], ["proof (chain)\npicking this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B", "show \"T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> = T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\""], ["proof (prove)\nusing this:\n  T : A \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_Rel \\<alpha>\\<^esub> B\n\ngoal (1 subgoal):\n 1. T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> =\n    T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l", "by (cs_concl cs_simp: cat_Rel_cs_simps cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  T\\<inverse>\\<^sub>C\\<^bsub>cat_Par \\<alpha>\\<^esub> =\n  T\\<inverse>\\<^sub>R\\<^sub>e\\<^sub>l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_Par_cs_simps] = \\<Z>.cat_Par_the_inverse"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}