{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_Hom.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma cf_hom_components:\n  shows \"cf_hom \\<CC> f\\<lparr>ArrVal\\<rparr> = \n      (\n        \\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC> (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>vpfst f\\<rparr>) (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>vpsnd f\\<rparr>). \n          vpsnd f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> vpfst f\n      )\"\n    and \"cf_hom \\<CC> f\\<lparr>ArrDom\\<rparr> = Hom \\<CC> (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>vpfst f\\<rparr>) (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>vpsnd f\\<rparr>)\"\n    and \"cf_hom \\<CC> f\\<lparr>ArrCod\\<rparr> = Hom \\<CC> (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>vpfst f\\<rparr>) (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>vpsnd f\\<rparr>)\"", "lemma cf_hom_ArrVal_vdomain[cat_cs_simps]:\n  assumes \"g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\" and \"f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \"\\<D>\\<^sub>\\<circ> (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) = Hom \\<CC> a a'\"", "lemma cf_hom_ArrVal_app[cat_cs_simps]:\n  assumes \"g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\" and \"q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\" and \"f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\"\n  shows \"cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> = f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\"", "lemma (in category) cf_hom_ArrVal_vrange:\n  assumes \"g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\" and \"f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \"\\<R>\\<^sub>\\<circ> (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> Hom \\<CC> b b'\"", "lemma (in category) cf_hom_ArrDom:\n  assumes \"gf : [c, c']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'\"\n  shows \"cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> = Hom \\<CC> c c'\"", "lemmas [cat_cs_simps] = category.cf_hom_ArrDom", "lemma (in category) cf_hom_ArrCod:\n  assumes \"gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [d, d']\\<^sub>\\<circ>\"\n  shows \"cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> = Hom \\<CC> d d'\"", "lemmas [cat_cs_simps] = category.cf_hom_ArrCod", "lemma (in category) cat_cf_hom_ArrRel:\n  assumes \"gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'\"\n  shows \"arr_Set \\<alpha> (cf_hom \\<CC> gf)\"", "lemmas [cat_cs_intros] = category.cat_cf_hom_ArrRel", "lemma (in category) cat_cf_hom_cat_Set_is_arr:\n  assumes \"gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c, d]\\<^sub>\\<circ>\"\n  shows \"cf_hom \\<CC> gf : Hom \\<CC> a b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c d\"", "lemma (in category) cat_cf_hom_cat_Set_is_arr':\n  assumes \"gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c, d]\\<^sub>\\<circ>\"\n    and \"\\<AA>' = Hom \\<CC> a b\"\n    and \"\\<BB>' = Hom \\<CC> c d\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"cf_hom \\<CC> gf : \\<AA>' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> \\<BB>'\"", "lemmas [cat_cs_intros] = category.cat_cf_hom_cat_Set_is_arr'", "lemma (in category) cat_cf_hom_Comp: \n  assumes \"g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\" \n    and \"g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\" \n    and \"f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\"\n    and \"f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \n    \"cf_hom \\<CC> [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n      cf_hom \\<CC> [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>\"", "lemmas [cat_cs_simps] = category.cat_cf_hom_Comp", "lemma (in category) cat_cf_hom_CId:\n  assumes \"[c, c']\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\"\n  shows \"cf_hom \\<CC> [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> = cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>\"", "lemmas [cat_cs_simps] = category.cat_cf_hom_CId", "lemma (in category) cat_op_cat_cf_hom:\n  assumes \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and \"g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\"\n  shows \"cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ> = cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\"", "lemmas [cat_cs_simps] = category.cat_op_cat_cf_hom", "lemma cf_Hom_components:\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr> = \n    (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>. Hom \\<CC> (vpfst a) (vpsnd a))\"\n    and \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr> = (\\<lambda>f\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>. cf_hom \\<CC> f)\"\n    and \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\"\n    and \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\"", "lemma cf_Hom_ObjMap_vdomain[cat_cs_simps]:  \n  \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>) = (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\"", "lemma cf_Hom_ObjMap_app[cat_cs_simps]: \n  assumes \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet> = Hom \\<CC> a b\"", "lemma (in category) cf_Hom_ObjMap_vrange: \n  \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"", "lemma (in category) cat_Hom_is_functor:\n  \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) : op_cat \\<CC> \\<times>\\<^sub>C \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\"", "lemma (in category) cat_Hom_is_functor':\n  assumes \"\\<beta> = \\<alpha>\" and \"\\<AA>' = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\" and \"\\<BB>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'\"", "lemmas [cat_cs_intros] = category.cat_Hom_is_functor'", "lemma cf_bcomp_Hom_ObjMap_vsv: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>)\"", "lemma cf_bcomp_Hom_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) = (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>\"", "lemma cf_bcomp_Hom_ObjMap_app[cat_cs_simps]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet> = \n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>, \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\\<rparr>\\<^sub>\\<bullet>\"", "lemma (in category) cf_bcomp_Hom_ObjMap_vrange:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"", "lemma cf_bcomp_Hom_ArrMap_vsv: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>)\"", "lemma cf_bcomp_Hom_ArrMap_vdomain[cat_cs_simps]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) = (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>\"", "lemma cf_bcomp_Hom_ArrMap_app[cat_cs_simps]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"[f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>\"\n  shows \n    \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>\\<lparr>f, g\\<rparr>\\<^sub>\\<bullet> = \n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>, \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>\\<rparr>\\<^sub>\\<bullet>\"", "lemma (in category) cf_bcomp_Hom_ArrMap_vrange:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\"", "lemma (in category) cat_cf_bcomp_Hom_is_functor:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-) : op_cat \\<AA> \\<times>\\<^sub>C \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\"", "lemma (in category) cat_cf_bcomp_Hom_is_functor':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<beta> = \\<alpha>\"\n    and \"\\<AA>' = op_cat \\<AA> \\<times>\\<^sub>C \\<BB>\"\n    and \"\\<BB>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'\"", "lemmas [cat_cs_intros] = category.cat_cf_bcomp_Hom_is_functor'", "lemma cf_lcomp_Hom_ObjMap_vsv[cat_cs_intros]: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ObjMap\\<rparr>)\"", "lemma cf_rcomp_Hom_ObjMap_vsv[cat_cs_intros]: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>)\"", "lemma cf_lcomp_Hom_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"category \\<alpha> \\<CC>\" and \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ObjMap\\<rparr>) = (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\"", "lemma cf_rcomp_Hom_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) = (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>\"", "lemma cf_lcomp_Hom_ObjMap_app[cat_cs_simps]:\n  assumes \"category \\<alpha> \\<CC>\"\n    and \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"b \\<in>\\<^sub>\\<circ> op_cat \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b, c\\<rparr>\\<^sub>\\<bullet> = \n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>, c\\<rparr>\\<^sub>\\<bullet>\"", "lemma cf_rcomp_Hom_ObjMap_app[cat_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>\\<lparr>c, b\\<rparr>\\<^sub>\\<bullet> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>c, \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\\<rparr>\\<^sub>\\<bullet>\"", "lemma (in category) cat_cf_lcomp_Hom_ObjMap_vrange: \n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"", "lemma (in category) cat_cf_rcomp_Hom_ObjMap_vrange: \n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\"", "lemma cf_lcomp_Hom_ArrMap_vsv[cat_cs_intros]: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ArrMap\\<rparr>)\"", "lemma cf_rcomp_Hom_ArrMap_vsv[cat_cs_intros]: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>)\"", "lemma cf_lcomp_Hom_ArrMap_vdomain[cat_cs_simps]:  \n  assumes \"category \\<alpha> \\<CC>\" and \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ArrMap\\<rparr>) = (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\"", "lemma cf_rcomp_Hom_ArrMap_vdomain[cat_cs_simps]:  \n  assumes \"category \\<alpha> \\<CC>\" and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) = (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>\"", "lemma cf_lcomp_Hom_ArrMap_app[cat_cs_simps]:\n  assumes \"category \\<alpha> \\<CC>\" \n    and \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"g : a \\<mapsto>\\<^bsub>op_cat \\<BB>\\<^esub> b\"\n    and \"f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>g, f\\<rparr>\\<^sub>\\<bullet> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>, f\\<rparr>\\<^sub>\\<bullet>\"", "lemma cf_rcomp_Hom_ArrMap_app[cat_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\"\n    and \"f : a' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>\\<lparr>g, f\\<rparr>\\<^sub>\\<bullet> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>g, \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>\\<^sub>\\<bullet>\"", "lemma (in category) cf_lcomp_Hom_ArrMap_vrange: \n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\"", "lemma (in category) cf_rcomp_Hom_ArrMap_vrange: \n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\"", "lemma cf_bcomp_Hom_cf_lcomp_Hom[cat_cs_simps]:\n  \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,cf_id \\<CC>-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\"", "lemma cf_bcomp_Hom_cf_rcomp_Hom[cat_cs_simps]:\n  \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(cf_id \\<CC>-,\\<GG>-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\"", "lemma (in category) cat_cf_lcomp_Hom_is_functor:\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) : op_cat \\<BB> \\<times>\\<^sub>C \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\"", "lemma (in category) cat_cf_lcomp_Hom_is_functor':\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<beta> = \\<alpha>\" \n    and \"\\<AA>' = op_cat \\<BB> \\<times>\\<^sub>C \\<CC>\" \n    and \"\\<BB>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'\"", "lemmas [cat_cs_intros] = category.cat_cf_lcomp_Hom_is_functor'", "lemma (in category) cat_cf_rcomp_Hom_is_functor:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) : op_cat \\<CC> \\<times>\\<^sub>C \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\"", "lemma (in category) cat_cf_rcomp_Hom_is_functor':\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<beta> = \\<alpha>\" \n    and \"\\<AA>' = op_cat \\<CC> \\<times>\\<^sub>C \\<BB>\" \n    and \"\\<BB>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'\"", "lemmas [cat_cs_intros] = category.cat_cf_rcomp_Hom_is_functor'", "lemma (in category) cat_bifunctor_flip_cf_rcomp_Hom:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \n    \"bifunctor_flip (op_cat \\<CC>) \\<BB> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)) =\n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\"", "lemmas [cat_cs_simps] = category.cat_bifunctor_flip_cf_rcomp_Hom", "lemma (in category) cat_bifunctor_flip_cf_lcomp_Hom:\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \n    \"bifunctor_flip (op_cat \\<BB>) \\<CC> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)) =\n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,op_cf \\<FF>-)\"", "lemmas [cat_cs_simps] = category.cat_bifunctor_flip_cf_lcomp_Hom", "lemma (in category) cat_cf_Hom_snd_is_functor:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\"", "lemma (in category) cat_cf_Hom_snd_is_functor':\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<beta> = \\<alpha>\" and \"\\<CC>' = \\<CC>\" and \"\\<DD>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<DD>'\"", "lemmas [cat_cs_intros] = category.cat_cf_Hom_snd_is_functor'", "lemma (in category) cat_cf_Hom_fst_is_functor:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) : op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\"", "lemma (in category) cat_cf_Hom_fst_is_functor':\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<beta> = \\<alpha>\" and \"\\<CC>' = op_cat \\<CC>\" and \"\\<DD>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<DD>'\"", "lemmas [cat_cs_intros] = category.cat_cf_Hom_fst_is_functor'", "lemma (in category) cat_cf_Hom_snd_ObjMap_vsv[cat_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ObjMap\\<rparr>)\"", "lemmas [cat_cs_intros] = category.cat_cf_Hom_snd_ObjMap_vsv", "lemma (in category) cat_cf_Hom_fst_ObjMap_vsv[cat_cs_intros]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ObjMap\\<rparr>)\"", "lemmas [cat_cs_intros] = category.cat_cf_Hom_fst_ObjMap_vsv", "lemma (in category) cat_cf_Hom_snd_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ObjMap\\<rparr>) = \\<CC>\\<lparr>Obj\\<rparr>\"", "lemmas [cat_cs_simps] = category.cat_cf_Hom_snd_ObjMap_vdomain", "lemma (in category) cat_cf_Hom_fst_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ObjMap\\<rparr>) = op_cat \\<CC>\\<lparr>Obj\\<rparr>\"", "lemmas [cat_cs_simps] = category.cat_cf_Hom_fst_ObjMap_vdomain", "lemma (in category) cat_cf_Hom_snd_ObjMap_app[cat_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom \\<CC> a b\"", "lemmas [cat_cs_simps] = category.cat_cf_Hom_snd_ObjMap_app", "lemma (in category) cat_cf_Hom_fst_ObjMap_app[cat_cs_simps]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = Hom \\<CC> a b\"", "lemmas [cat_cs_simps] = category.cat_cf_Hom_fst_ObjMap_app", "lemma (in category) cat_cf_Hom_snd_ArrMap_vsv[cat_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ArrMap\\<rparr>)\"", "lemmas [cat_cs_intros] = category.cat_cf_Hom_snd_ArrMap_vsv", "lemma (in category) cat_cf_Hom_fst_ArrMap_vsv[cat_cs_intros]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ArrMap\\<rparr>)\"", "lemmas [cat_cs_intros] = category.cat_cf_Hom_fst_ArrMap_vsv", "lemma (in category) cat_cf_Hom_snd_ArrMap_vdomain[cat_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ArrMap\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\"", "lemmas [cat_cs_simps] = category.cat_cf_Hom_snd_ArrMap_vdomain", "lemma (in category) cat_cf_Hom_fst_ArrMap_vdomain[cat_cs_simps]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ArrMap\\<rparr>) = op_cat \\<CC>\\<lparr>Arr\\<rparr>\"", "lemmas [cat_cs_simps] = category.cat_cf_Hom_fst_ArrMap_vdomain", "lemma (in category) cat_cf_Hom_snd_ArrMap_app[cat_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" and \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = cf_hom \\<CC> [op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, f]\\<^sub>\\<circ>\"", "lemmas [cat_cs_simps] = category.cat_cf_Hom_snd_ArrMap_app", "lemma (in category) cat_cf_Hom_fst_ArrMap_app[cat_cs_simps]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> a'\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = cf_hom \\<CC> [f, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>]\\<^sub>\\<circ>\"", "lemmas [cat_cs_simps] = category.cat_cf_Hom_fst_ArrMap_app", "lemma (in category) cat_op_cat_cf_Hom_snd:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\"", "lemmas [cat_op_simps] = category.cat_op_cat_cf_Hom_snd", "lemma (in category) cat_op_cat_cf_Hom_fst:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\"", "lemmas [cat_op_simps] = category.cat_op_cat_cf_Hom_fst", "lemma (in category) cat_cf_Hom_snd_inj:\n  assumes \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-)\" \n    and \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"a = b\"", "lemma (in category) cat_cf_Hom_fst_inj:\n  assumes \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\" and \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"a = b\"", "lemma (in category) cat_cf_Hom_is_cf_array:\n  \\<comment>\\<open>See Chapter II-3 in \\cite{mac_lane_categories_2010}.\\<close>\n  \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>) (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)\"", "lemma (in category) cat_cf_rcomp_Hom_cf_Hom_snd:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(a,-)\\<^sub>C\\<^sub>F = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) \\<circ>\\<^sub>C\\<^sub>F \\<GG>\"", "lemmas [cat_cs_simps] = category.cat_cf_rcomp_Hom_cf_Hom_snd", "lemma (in category) cat_cf_lcomp_Hom_cf_Hom_snd:\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<^bsub>op_cat \\<BB>,\\<CC>\\<^esub>(b,-)\\<^sub>C\\<^sub>F = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>,-)\"", "lemmas [cat_cs_simps] = category.cat_cf_lcomp_Hom_cf_Hom_snd", "lemma (in category) cat_cf_rcomp_Hom_cf_Hom_fst:\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\"", "lemmas [cat_cs_simps] = category.cat_cf_rcomp_Hom_cf_Hom_fst"], "translations": [["", "lemma cf_hom_components:\n  shows \"cf_hom \\<CC> f\\<lparr>ArrVal\\<rparr> = \n      (\n        \\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC> (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>vpfst f\\<rparr>) (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>vpsnd f\\<rparr>). \n          vpsnd f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> vpfst f\n      )\"\n    and \"cf_hom \\<CC> f\\<lparr>ArrDom\\<rparr> = Hom \\<CC> (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>vpfst f\\<rparr>) (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>vpsnd f\\<rparr>)\"\n    and \"cf_hom \\<CC> f\\<lparr>ArrCod\\<rparr> = Hom \\<CC> (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>vpfst f\\<rparr>) (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>vpsnd f\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC> f\\<lparr>ArrVal\\<rparr> =\n    (\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                   (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                   (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n        f\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) &&&\n    cf_hom \\<CC> f\\<lparr>ArrDom\\<rparr> =\n    Hom \\<CC>\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>) &&&\n    cf_hom \\<CC> f\\<lparr>ArrCod\\<rparr> =\n    Hom \\<CC>\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)", "unfolding cf_hom_def arr_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. [\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                   (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                   (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n        f\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     Hom \\<CC>\n      (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n      (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>),\n     Hom \\<CC>\n      (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n      (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n    (\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                   (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                   (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n        f\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) &&&\n    [\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                   (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                   (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n        f\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     Hom \\<CC>\n      (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n      (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>),\n     Hom \\<CC>\n      (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n      (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n    Hom \\<CC>\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>) &&&\n    [\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                   (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                   (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n        f\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n     Hom \\<CC>\n      (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n      (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>),\n     Hom \\<CC>\n      (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n      (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    Hom \\<CC>\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Arrow value\\<close>"], ["", "mk_VLambda cf_hom_components(1)\n  |vsv cf_hom_ArrVal_vsv[cat_cs_intros]|"], ["", "lemma cf_hom_ArrVal_vdomain[cat_cs_simps]:\n  assumes \"g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\" and \"f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \"\\<D>\\<^sub>\\<circ> (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) = Hom \\<CC> a a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n    Hom \\<CC> a a'", "using assms"], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n    Hom \\<CC> a a'", "unfolding cf_hom_components"], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                    (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>[g,\n                                f]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                    (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>[g,\n                                f]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n         [g, f]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         [g, f]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) =\n    Hom \\<CC> a a'", "by (simp_all add: nat_omega_simps cat_op_simps cat_cs_simps)"], ["", "lemma cf_hom_ArrVal_app[cat_cs_simps]:\n  assumes \"g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\" and \"q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\" and \"f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\"\n  shows \"cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> = f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    g", "using assms"], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    g", "unfolding cf_hom_components"], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. (\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                   (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>[g,\n                               f]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                   (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>[g,\n                               f]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n        [g, f]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        [g, f]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\\<lparr>q\\<rparr> =\n    f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    g", "by (simp_all add: nat_omega_simps cat_op_simps cat_cs_simps)"], ["", "lemma (in category) cf_hom_ArrVal_vrange:\n  assumes \"g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\" and \"f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \"\\<R>\\<^sub>\\<circ> (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> Hom \\<CC> b b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> Hom \\<CC> b b'", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'", "interpret gf: vsv \\<open>cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)", "unfolding cf_hom_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>[g, f]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>[g, f]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n            [g, f]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n            q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n            [g, f]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cf_hom \\<CC>\n                           [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cf_hom \\<CC>\n                           [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)", "obtain q where y_def: \"y = cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\"\n    and \"q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cf_hom \\<CC>\n                           [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>y =\n                 cf_hom \\<CC>\n                  [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>;\n         q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (cf_hom \\<CC>\n                                  [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis gf.vrange_atD)"], ["proof (state)\nthis:\n  y =\n  cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\n  q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (cf_hom \\<CC>\n                           [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'", "then"], ["proof (chain)\npicking this:\n  y =\n  cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\n  q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (cf_hom \\<CC>\n                           [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)", "have q: \"q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\""], ["proof (prove)\nusing this:\n  y =\n  cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\n  q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (cf_hom \\<CC>\n                           [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'", "unfolding cf_hom_ArrVal_vdomain[OF assms]"], ["proof (prove)\nusing this:\n  y =\n  cf_hom \\<CC> [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\n  q \\<in>\\<^sub>\\<circ> Hom \\<CC> a a'\n\ngoal (1 subgoal):\n 1. q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'", "by simp"], ["proof (state)\nthis:\n  q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                [g, f]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'", "from assms q"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'", "show \"y \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'", "unfolding y_def cf_hom_ArrVal_app[OF assms(1) q assms(2)] cat_op_simps"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    g\n    \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> Hom \\<CC> b b'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow domain\\<close>"], ["", "lemma (in category) cf_hom_ArrDom:\n  assumes \"gf : [c, c']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'\"\n  shows \"cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> = Hom \\<CC> c c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> = Hom \\<CC> c c'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> = Hom \\<CC> c c'", "from assms"], ["proof (chain)\npicking this:\n  gf : [c, c']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'", "obtain g f d d' \n    where \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\" and \"f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\""], ["proof (prove)\nusing this:\n  gf : [c, c']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'\n\ngoal (1 subgoal):\n 1. (\\<And>g f d d'.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d;\n         f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cf_hom_components"], ["proof (prove)\nusing this:\n  gf : [c, c']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'\n\ngoal (1 subgoal):\n 1. (\\<And>g f d d'.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d;\n         f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_is_arrE[rotated 2]) (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> = Hom \\<CC> c c'", "then"], ["proof (chain)\npicking this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'", "show ?thesis"], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> = Hom \\<CC> c c'", "unfolding cf_hom_components"], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. Hom \\<CC>\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>) =\n    Hom \\<CC> c c'", "by (simp_all add: nat_omega_simps cat_op_simps cat_cs_simps)"], ["proof (state)\nthis:\n  cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> = Hom \\<CC> c c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cf_hom_ArrDom"], ["", "subsubsection\\<open>Arrow codomain\\<close>"], ["", "lemma (in category) cf_hom_ArrCod:\n  assumes \"gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [d, d']\\<^sub>\\<circ>\"\n  shows \"cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> = Hom \\<CC> d d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> = Hom \\<CC> d d'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> = Hom \\<CC> d d'", "from assms"], ["proof (chain)\npicking this:\n  gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [d,\n                                   d']\\<^sub>\\<circ>", "obtain g f c c' \n    where \"gf = [g, f]\\<^sub>\\<circ>\" and \"g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\" and \"f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\""], ["proof (prove)\nusing this:\n  gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [d,\n                                   d']\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>g f c c'.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d;\n         f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cf_hom_components"], ["proof (prove)\nusing this:\n  gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [d,\n                                   d']\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. (\\<And>g f c c'.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d;\n         f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_is_arrE[rotated 2]) (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> = Hom \\<CC> d d'", "then"], ["proof (chain)\npicking this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'", "show ?thesis"], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> = Hom \\<CC> d d'", "unfolding cf_hom_components"], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. Hom \\<CC>\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>) =\n    Hom \\<CC> d d'", "by (simp_all add: nat_omega_simps cat_op_simps cat_cs_simps)"], ["proof (state)\nthis:\n  cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> = Hom \\<CC> d d'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cf_hom_ArrCod"], ["", "subsubsection\\<open>\\<open>hom\\<close>-function is an arrow in the category \\<open>Set\\<close>\\<close>"], ["", "lemma (in category) cat_cf_hom_ArrRel:\n  assumes \"gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'\"\n  shows \"arr_Set \\<alpha> (cf_hom \\<CC> gf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (cf_hom \\<CC> gf)", "proof(intro arr_SetI)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cf_hom \\<CC> gf)\n 3. vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n 4. vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 7. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from assms"], ["proof (chain)\npicking this:\n  gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'", "obtain g f c c' d d'\n    where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\"\n      and cc'_def: \"cc' = [c, c']\\<^sub>\\<circ>\"\n      and dd'_def: \"dd' = [d, d']\\<^sub>\\<circ>\"\n      and op_g: \"g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\" \n      and f: \"f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\""], ["proof (prove)\nusing this:\n  gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'\n\ngoal (1 subgoal):\n 1. (\\<And>g f c c' d d'.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>; cc' = [c, c']\\<^sub>\\<circ>;\n         dd' = [d, d']\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d;\n         f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cf_hom_components"], ["proof (prove)\nusing this:\n  gf : cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> dd'\n\ngoal (1 subgoal):\n 1. (\\<And>g f c c' d d'.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>; cc' = [c, c']\\<^sub>\\<circ>;\n         dd' = [d, d']\\<^sub>\\<circ>;\n         g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d;\n         f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_is_arrE[rotated 2]) (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  dd' = [d, d']\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cf_hom \\<CC> gf)\n 3. vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n 4. vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 7. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from op_g"], ["proof (chain)\npicking this:\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d", "have g: \"g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\""], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "by simp"], ["proof (state)\nthis:\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cf_hom \\<CC> gf)\n 3. vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n 4. vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 7. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c", "have [simp]: \"\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = d\" \"\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>g\\<rparr> = c\" \n    and d: \"d \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and c: \"c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n\ngoal (1 subgoal):\n 1. (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = d &&&\n     \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>g\\<rparr> = c) &&&\n    d \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> &&&\n    c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>g\\<rparr> = d\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>g\\<rparr> = c\n  d \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cf_hom \\<CC> gf)\n 3. vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n 4. vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 7. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from f"], ["proof (chain)\npicking this:\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'", "have [simp]: \"\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = c'\" \"\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = d'\" \n    and c': \"c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and d': \"d' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = c' &&&\n     \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = d') &&&\n    c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> &&&\n    d' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  \\<CC>\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = c'\n  \\<CC>\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = d'\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  d' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cf_hom \\<CC> gf)\n 3. vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n 4. vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\n 5. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n 6. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 7. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 8. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"vfsequence (cf_hom \\<CC> gf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cf_hom \\<CC> gf)", "unfolding cf_hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                    (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                    (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n         gf\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      Hom \\<CC>\n       (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n       (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>),\n      Hom \\<CC>\n       (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n       (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (cf_hom \\<CC> gf)\n\ngoal (7 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n 3. vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\n 4. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n 5. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 6. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 7. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show vsv_hom_fg: \"vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)", "unfolding cf_hom_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n            gf\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n            q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n            gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n\ngoal (6 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\n 3. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n 4. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 5. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 6. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>", "unfolding cf_hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                    (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                    (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n         gf\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n      Hom \\<CC>\n       (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n       (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>),\n      Hom \\<CC>\n       (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n       (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)]\\<^sub>\\<circ> =\n    3\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cf_hom \\<CC> gf) = 3\\<^sub>\\<nat>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n 3. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 4. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 5. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show [simp]: \"\\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) = cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n    cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>", "unfolding cf_hom_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>q\\<in>\\<^sub>\\<circ>Hom \\<CC>\n                                    (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n                                    (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>).\n         gf\\<lparr>1\\<^sub>\\<nat>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>) =\n    Hom \\<CC>\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) =\n  cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr>\n\ngoal (4 subgoals):\n 1. \\<Z> \\<alpha>\n 2. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n 3. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"\\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "proof(rule vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                gf\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "interpret hom_fg: vsv \\<open>cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)", "by (simp add: vsv_hom_fg)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                gf\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                gf\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                gf\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)", "obtain q where y_def: \"y = cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\" \n      and q: \"q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>y = cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>;\n         q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (cf_hom \\<CC>\n                                  gf\\<lparr>ArrVal\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest: hom_fg.vrange_atD)"], ["proof (state)\nthis:\n  y = cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\n  q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                gf\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "from q"], ["proof (chain)\npicking this:\n  q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)", "have q: \"q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\""], ["proof (prove)\nusing this:\n  q \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n\ngoal (1 subgoal):\n 1. q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'", "by (simp add: cf_hom_ArrDom[OF assms[unfolded cc'_def]])"], ["proof (state)\nthis:\n  q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                gf\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "with g f"], ["proof (chain)\npicking this:\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n  q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'", "have \"f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\""], ["proof (prove)\nusing this:\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c\n  f : c' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n  q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cf_hom \\<CC>\n                                gf\\<lparr>ArrVal\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'", "show \"y \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\nusing this:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>", "unfolding cf_hom_ArrCod[OF assms[unfolded dd'_def]]"], ["proof (prove)\nusing this:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> Hom \\<CC> d d'", "unfolding y_def gf_def cf_hom_ArrVal_app[OF op_g q f]"], ["proof (prove)\nusing this:\n  f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n  g : d \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d'\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    q \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    g\n    \\<in>\\<^sub>\\<circ> Hom \\<CC> d d'", "by auto"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (cf_hom \\<CC> gf\\<lparr>ArrVal\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<Z> \\<alpha>\n 2. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from c c'"], ["proof (chain)\npicking this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show \"cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding cf_hom_components gf_def"], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom \\<CC>\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>[g,\n f]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>[g,\n f]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto simp: nat_omega_simps intro: cat_cs_intros)"], ["proof (state)\nthis:\n  cf_hom \\<CC> gf\\<lparr>ArrDom\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<Z> \\<alpha>\n 2. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from d d'"], ["proof (chain)\npicking this:\n  d \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  d' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show \"cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  d \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  d' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding cf_hom_components gf_def"], ["proof (prove)\nusing this:\n  d \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  d' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom \\<CC>\n     (\\<CC>\\<lparr>Dom\\<rparr>\\<lparr>[g,\n f]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<rparr>)\n     (\\<CC>\\<lparr>Cod\\<rparr>\\<lparr>[g,\n f]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<rparr>)\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto simp: nat_omega_simps intro: cat_cs_intros)"], ["proof (state)\nthis:\n  cf_hom \\<CC> gf\\<lparr>ArrCod\\<rparr> \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Z> \\<alpha>", "qed auto"], ["", "lemmas [cat_cs_intros] = category.cat_cf_hom_ArrRel"], ["", "lemma (in category) cat_cf_hom_cat_Set_is_arr:\n  assumes \"gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c, d]\\<^sub>\\<circ>\"\n  shows \"cf_hom \\<CC> gf : Hom \\<CC> a b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     gf : Hom \\<CC> a\n           b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c d", "proof(intro is_arrI)"], ["proof (state)\ngoal (3 subgoals):\n 1. cf_hom \\<CC> gf \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\n 2. cat_Set \\<alpha>\\<lparr>Dom\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n    Hom \\<CC> a b\n 3. cat_Set \\<alpha>\\<lparr>Cod\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n    Hom \\<CC> c d", "from assms cat_cf_hom_ArrRel"], ["proof (chain)\npicking this:\n  gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n              d]\\<^sub>\\<circ>\n  ?gf : ?cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> ?dd' \\<Longrightarrow>\n  arr_Set \\<alpha> (cf_hom \\<CC> ?gf)", "show \"cf_hom \\<CC> gf \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n              d]\\<^sub>\\<circ>\n  ?gf : ?cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> ?dd' \\<Longrightarrow>\n  arr_Set \\<alpha> (cf_hom \\<CC> ?gf)\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "unfolding cat_Set_components"], ["proof (prove)\nusing this:\n  gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n              d]\\<^sub>\\<circ>\n  ?gf : ?cc' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> ?dd' \\<Longrightarrow>\n  arr_Set \\<alpha> (cf_hom \\<CC> ?gf)\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf\n    \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set (Collect (arr_Set \\<alpha>))", "by auto"], ["proof (state)\nthis:\n  cf_hom \\<CC> gf \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\n\ngoal (2 subgoals):\n 1. cat_Set \\<alpha>\\<lparr>Dom\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n    Hom \\<CC> a b\n 2. cat_Set \\<alpha>\\<lparr>Cod\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n    Hom \\<CC> c d", "with assms"], ["proof (chain)\npicking this:\n  gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n              d]\\<^sub>\\<circ>\n  cf_hom \\<CC> gf \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "show \n    \"cat_Set \\<alpha>\\<lparr>Dom\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> = Hom \\<CC> a b\"\n    \"cat_Set \\<alpha>\\<lparr>Cod\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> = Hom \\<CC> c d\""], ["proof (prove)\nusing this:\n  gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n              d]\\<^sub>\\<circ>\n  cf_hom \\<CC> gf \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_Set \\<alpha>\\<lparr>Dom\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n    Hom \\<CC> a b &&&\n    cat_Set \\<alpha>\\<lparr>Cod\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n    Hom \\<CC> c d", "unfolding cat_Set_components"], ["proof (prove)\nusing this:\n  gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n              d]\\<^sub>\\<circ>\n  cf_hom \\<CC> gf\n  \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set (Collect (arr_Set \\<alpha>))\n\ngoal (1 subgoal):\n 1. (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrDom\\<rparr>)\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n    Hom \\<CC> a b &&&\n    (\\<lambda>T\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   (Collect (arr_Set \\<alpha>)).\n        T\\<lparr>ArrCod\\<rparr>)\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n    Hom \\<CC> c d", "by (simp_all add: cf_hom_ArrDom[OF assms] cf_hom_ArrCod[OF assms])"], ["proof (state)\nthis:\n  cat_Set \\<alpha>\\<lparr>Dom\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n  Hom \\<CC> a b\n  cat_Set \\<alpha>\\<lparr>Cod\\<rparr>\\<lparr>cf_hom \\<CC> gf\\<rparr> =\n  Hom \\<CC> c d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in category) cat_cf_hom_cat_Set_is_arr':\n  assumes \"gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c, d]\\<^sub>\\<circ>\"\n    and \"\\<AA>' = Hom \\<CC> a b\"\n    and \"\\<BB>' = Hom \\<CC> c d\"\n    and \"\\<CC>' = cat_Set \\<alpha>\"\n  shows \"cf_hom \\<CC> gf : \\<AA>' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf : \\<AA>' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> \\<BB>'", "using assms(1)"], ["proof (prove)\nusing this:\n  gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n              d]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> gf : \\<AA>' \\<mapsto>\\<^bsub>\\<CC>'\\<^esub> \\<BB>'", "unfolding assms(2-4)"], ["proof (prove)\nusing this:\n  gf : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n              d]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     gf : Hom \\<CC> a\n           b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c d", "by (rule cat_cf_hom_cat_Set_is_arr)"], ["", "lemmas [cat_cs_intros] = category.cat_cf_hom_cat_Set_is_arr'"], ["", "subsubsection\\<open>Composition\\<close>"], ["", "lemma (in category) cat_cf_hom_Comp: \n  assumes \"g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\" \n    and \"g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\" \n    and \"f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\"\n    and \"f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \n    \"cf_hom \\<CC> [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n      cf_hom \\<CC> [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "interpret Set: category \\<alpha> \\<open>cat_Set \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Set \\<alpha>)", "by (rule category_cat_Set)"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "from assms(1,3)"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b", "have g: \"g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and f: \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b &&&\n    f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b &&&\n    f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "by simp_all"], ["proof (state)\nthis:\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "from assms(2,4) g f Set.category_axioms category_axioms"], ["proof (chain)\npicking this:\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  category \\<alpha> (cat_Set \\<alpha>)\n  category \\<alpha> \\<CC>", "have gg'_ff': \n    \"cf_hom \\<CC> [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cf_hom \\<CC> [f, f']\\<^sub>\\<circ> :\n      Hom \\<CC> a a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'\""], ["proof (prove)\nusing this:\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  category \\<alpha> (cat_Set \\<alpha>)\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC>\n     [f, f']\\<^sub>\\<circ> : Hom \\<CC> a\n                              a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n\\<CC> c c'", "by (cs_concl cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros)"], ["proof (state)\nthis:\n  cf_hom \\<CC>\n   [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cf_hom \\<CC>\n   [f, f']\\<^sub>\\<circ> : Hom \\<CC> a\n                            a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                    \\<CC> c c'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  cf_hom \\<CC>\n   [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cf_hom \\<CC>\n   [f, f']\\<^sub>\\<circ> : Hom \\<CC> a\n                            a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                    \\<CC> c c'", "have dom_lhs: \n    \"\\<D>\\<^sub>\\<circ> ((cf_hom \\<CC> [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>) = \n      Hom \\<CC> a a'\""], ["proof (prove)\nusing this:\n  cf_hom \\<CC>\n   [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cf_hom \\<CC>\n   [f, f']\\<^sub>\\<circ> : Hom \\<CC> a\n                            a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                    \\<CC> c c'\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((cf_hom \\<CC>\n        [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n       cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>) =\n    Hom \\<CC> a a'", "by (cs_concl cs_simp: cat_cs_simps)+"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>) =\n  Hom \\<CC> a a'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "from assms(2,4) g f Set.category_axioms category_axioms"], ["proof (chain)\npicking this:\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  category \\<alpha> (cat_Set \\<alpha>)\n  category \\<alpha> \\<CC>", "have gf_g'f':\n    \"cf_hom \\<CC> [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ> : \n      Hom \\<CC> a a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'\""], ["proof (prove)\nusing this:\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  category \\<alpha> (cat_Set \\<alpha>)\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ> : Hom \\<CC> a\n                           a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                   \\<CC> c c'", "by (cs_concl cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros)"], ["proof (state)\nthis:\n  cf_hom \\<CC>\n   [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n    g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f']\\<^sub>\\<circ> : Hom \\<CC> a\n                         a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                 \\<CC> c c'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "then"], ["proof (chain)\npicking this:\n  cf_hom \\<CC>\n   [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n    g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f']\\<^sub>\\<circ> : Hom \\<CC> a\n                         a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                 \\<CC> c c'", "have dom_rhs: \n    \"\\<D>\\<^sub>\\<circ> (cf_hom \\<CC> [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) = Hom \\<CC> a a'\""], ["proof (prove)\nusing this:\n  cf_hom \\<CC>\n   [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n    g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f']\\<^sub>\\<circ> : Hom \\<CC> a\n                         a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                 \\<CC> c c'\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_hom \\<CC>\n       [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n        f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n    Hom \\<CC> a a'", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n  Hom \\<CC> a a'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>", "proof(rule arr_Set_eqI[of \\<alpha>])"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set \\<alpha>\n     (cf_hom \\<CC>\n       [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\n 2. arr_Set \\<alpha>\n     (cf_hom \\<CC>\n       [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>)\n 3. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n 4. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 5. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "from gg'_ff'"], ["proof (chain)\npicking this:\n  cf_hom \\<CC>\n   [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cf_hom \\<CC>\n   [f, f']\\<^sub>\\<circ> : Hom \\<CC> a\n                            a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                    \\<CC> c c'", "show arr_Set_gg'_ff':\n      \"arr_Set \\<alpha> (cf_hom \\<CC> [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\""], ["proof (prove)\nusing this:\n  cf_hom \\<CC>\n   [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cf_hom \\<CC>\n   [f, f']\\<^sub>\\<circ> : Hom \\<CC> a\n                            a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                    \\<CC> c c'\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (cf_hom \\<CC>\n       [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n      cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)", "by (auto dest: cat_Set_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   (cf_hom \\<CC>\n     [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     (cf_hom \\<CC>\n       [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>)\n 2. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n 3. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 4. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "from gf_g'f'"], ["proof (chain)\npicking this:\n  cf_hom \\<CC>\n   [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n    g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f']\\<^sub>\\<circ> : Hom \\<CC> a\n                         a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                 \\<CC> c c'", "show arr_Set_gf_g'f':\n      \"arr_Set \\<alpha> (cf_hom \\<CC> [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>)\""], ["proof (prove)\nusing this:\n  cf_hom \\<CC>\n   [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n    g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f']\\<^sub>\\<circ> : Hom \\<CC> a\n                         a' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                 \\<CC> c c'\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (cf_hom \\<CC>\n       [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n        g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>)", "by (auto dest: cat_Set_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   (cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>)\n\ngoal (3 subgoals):\n 1. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n 2. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 3. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "show \"(cf_hom \\<CC> [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr> = \n      cf_hom \\<CC> [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv ((cf_hom \\<CC>\n           [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC>\n          [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n           g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n           f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a a' = Hom \\<CC> a a'\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> Hom \\<CC> a a' \\<Longrightarrow>\n       (cf_hom \\<CC>\n         [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        cf_hom \\<CC>\n         [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr> =\n       cf_hom \\<CC>\n        [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr>", "fix q"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv ((cf_hom \\<CC>\n           [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC>\n          [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n           g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n           f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a a' = Hom \\<CC> a a'\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> Hom \\<CC> a a' \\<Longrightarrow>\n       (cf_hom \\<CC>\n         [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        cf_hom \\<CC>\n         [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr> =\n       cf_hom \\<CC>\n        [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr>", "assume \"q \\<in>\\<^sub>\\<circ> Hom \\<CC> a a'\""], ["proof (state)\nthis:\n  q \\<in>\\<^sub>\\<circ> Hom \\<CC> a a'\n\ngoal (4 subgoals):\n 1. vsv ((cf_hom \\<CC>\n           [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC>\n          [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n           g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n           f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a a' = Hom \\<CC> a a'\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> Hom \\<CC> a a' \\<Longrightarrow>\n       (cf_hom \\<CC>\n         [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        cf_hom \\<CC>\n         [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr> =\n       cf_hom \\<CC>\n        [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr>", "then"], ["proof (chain)\npicking this:\n  q \\<in>\\<^sub>\\<circ> Hom \\<CC> a a'", "have q: \"q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\""], ["proof (prove)\nusing this:\n  q \\<in>\\<^sub>\\<circ> Hom \\<CC> a a'\n\ngoal (1 subgoal):\n 1. q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'", "by auto"], ["proof (state)\nthis:\n  q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n\ngoal (4 subgoals):\n 1. vsv ((cf_hom \\<CC>\n           [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC>\n          [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n           g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n           f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a a' = Hom \\<CC> a a'\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> Hom \\<CC> a a' \\<Longrightarrow>\n       (cf_hom \\<CC>\n         [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n        cf_hom \\<CC>\n         [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr> =\n       cf_hom \\<CC>\n        [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n         g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n         f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr>", "from category_axioms g f assms(2,4) q Set.category_axioms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n  category \\<alpha> (cat_Set \\<alpha>)", "show \n        \"(cf_hom \\<CC> [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> = \n          cf_hom \\<CC> [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f, g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  q : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n  category \\<alpha> (cat_Set \\<alpha>)\n\ngoal (1 subgoal):\n 1. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC>\n      [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>", "by \n          (\n            cs_concl \n              cs_intro: cat_op_intros cat_cs_intros cat_prod_cs_intros \n              cs_simp: cat_op_simps cat_cs_simps   \n         )"], ["proof (state)\nthis:\n  (cf_hom \\<CC>\n    [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   cf_hom \\<CC>\n    [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> =\n  cf_hom \\<CC>\n   [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n    g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv ((cf_hom \\<CC>\n           [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n          cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC>\n          [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n           g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n           f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a a' = Hom \\<CC> a a'", "qed (use arr_Set_gg'_ff' arr_Set_gf_g'f' in auto)"], ["proof (state)\nthis:\n  (cf_hom \\<CC>\n    [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n   cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrVal\\<rparr> =\n  cf_hom \\<CC>\n   [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n    g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n    f']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 2. (cf_hom \\<CC>\n      [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n     cf_hom \\<CC> [f, f']\\<^sub>\\<circ>)\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC>\n     [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n      g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub>\n      f']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "qed (use gg'_ff' gf_g'f' in \\<open>cs_concl cs_simp: cat_cs_simps\\<close>)+"], ["proof (state)\nthis:\n  cf_hom \\<CC>\n   [g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n  cf_hom \\<CC>\n   [g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC>\\<^esub> f,\n    g' \\<circ>\\<^sub>A\\<^bsub>\\<CC>\\<^esub> f']\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_cf_hom_Comp"], ["", "subsubsection\\<open>Identity\\<close>"], ["", "lemma (in category) cat_cf_hom_CId:\n  assumes \"[c, c']\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\"\n  shows \"cf_hom \\<CC> [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> = cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "interpret Set: category \\<alpha> \\<open>cat_Set \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Set \\<alpha>)", "by (rule category_cat_Set)"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "interpret op_\\<CC>: category \\<alpha> \\<open>op_cat \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat \\<CC>)", "by (rule category_op)"], ["proof (state)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  [c, c']\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>", "have op_c: \"c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" and c': \"c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  [c, c']\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr> &&&\n    c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by (auto elim: cat_prod_2_ObjE[rotated 2] intro: cat_cs_intros)"], ["proof (state)\nthis:\n  c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "then"], ["proof (chain)\npicking this:\n  c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "have c: \"c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by simp"], ["proof (state)\nthis:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "from c c' category_axioms Set.category_axioms"], ["proof (chain)\npicking this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)", "have cf_hom_cc': \n    \"cf_hom \\<CC> [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> : Hom \\<CC> c c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'\""], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> : Hom \\<CC>\n                             c c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n \\<CC> c c'", "by \n      (\n        cs_concl \n          cs_simp: cat_cs_simps cat_op_simps \n          cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n      )"], ["proof (state)\nthis:\n  cf_hom \\<CC>\n   [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> : Hom \\<CC> c\n                           c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                   \\<CC> c c'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "then"], ["proof (chain)\npicking this:\n  cf_hom \\<CC>\n   [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> : Hom \\<CC> c\n                           c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                   \\<CC> c c'", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (cf_hom \\<CC> [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) = Hom \\<CC> c c'\""], ["proof (prove)\nusing this:\n  cf_hom \\<CC>\n   [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> : Hom \\<CC> c\n                           c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                   \\<CC> c c'\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_hom \\<CC>\n       [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n        \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n    Hom \\<CC> c c'", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n  Hom \\<CC> c c'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "from c c' category_axioms Set.category_axioms"], ["proof (chain)\npicking this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)", "have CId_cc':\n    \"cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr> : Hom \\<CC> c c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'\""], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)\n\ngoal (1 subgoal):\n 1. cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr> : Hom \\<CC> c\n                 c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'", "by \n      (\n        cs_concl \n          cs_simp: cat_Set_cs_simps cat_Set_components(1) \n          cs_intro: cat_cs_intros cat_prod_cs_intros\n      )"], ["proof (state)\nthis:\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n c'\\<rparr> : Hom \\<CC> c\n               c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "then"], ["proof (chain)\npicking this:\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n c'\\<rparr> : Hom \\<CC> c\n               c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>\\<lparr>ArrVal\\<rparr>) = Hom \\<CC> c c'\""], ["proof (prove)\nusing this:\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n c'\\<rparr> : Hom \\<CC> c\n               c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cat_Set\n       \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n     c'\\<rparr>\\<lparr>ArrVal\\<rparr>) =\n    Hom \\<CC> c c'", "by (cs_concl cs_simp: cat_cs_simps )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrVal\\<rparr>) =\n  Hom \\<CC> c c'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n    cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>", "proof(rule arr_Set_eqI[of \\<alpha>])"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set \\<alpha>\n     (cf_hom \\<CC>\n       [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n        \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>)\n 2. arr_Set \\<alpha>\n     (cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>)\n 3. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrVal\\<rparr>\n 4. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrDom\\<rparr>\n 5. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrCod\\<rparr>", "from cf_hom_cc'"], ["proof (chain)\npicking this:\n  cf_hom \\<CC>\n   [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> : Hom \\<CC> c\n                           c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                   \\<CC> c c'", "show arr_Set_CId_cc': \n      \"arr_Set \\<alpha> (cf_hom \\<CC> [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>)\""], ["proof (prove)\nusing this:\n  cf_hom \\<CC>\n   [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> : Hom \\<CC> c\n                           c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\n                                   \\<CC> c c'\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (cf_hom \\<CC>\n       [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n        \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>)", "by (auto dest: cat_Set_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   (cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>)\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha>\n     (cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>)\n 2. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrVal\\<rparr>\n 3. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrDom\\<rparr>\n 4. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrCod\\<rparr>", "from CId_cc'"], ["proof (chain)\npicking this:\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n c'\\<rparr> : Hom \\<CC> c\n               c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'", "show arr_Set_Hom_cc': \n      \"arr_Set \\<alpha> (cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>)\""], ["proof (prove)\nusing this:\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n c'\\<rparr> : Hom \\<CC> c\n               c' \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom \\<CC> c c'\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha>\n     (cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>)", "by (auto simp: cat_Set_is_arrD(1))"], ["proof (state)\nthis:\n  arr_Set \\<alpha>\n   (cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>)\n\ngoal (3 subgoals):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrVal\\<rparr>\n 2. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrDom\\<rparr>\n 3. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrCod\\<rparr>", "show \"cf_hom \\<CC> [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n      cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrVal\\<rparr>", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs in_Hom_iff)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cf_hom \\<CC>\n          [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n           \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cat_Set\n          \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n        c'\\<rparr>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> c c' = Hom \\<CC> c c'\n 4. \\<And>a.\n       a : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c' \\<Longrightarrow>\n       cf_hom \\<CC>\n        [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n         \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n      c'\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "fix q"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cf_hom \\<CC>\n          [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n           \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cat_Set\n          \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n        c'\\<rparr>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> c c' = Hom \\<CC> c c'\n 4. \\<And>a.\n       a : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c' \\<Longrightarrow>\n       cf_hom \\<CC>\n        [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n         \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n      c'\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "assume \"q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\""], ["proof (state)\nthis:\n  q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n\ngoal (4 subgoals):\n 1. vsv (cf_hom \\<CC>\n          [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n           \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cat_Set\n          \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n        c'\\<rparr>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> c c' = Hom \\<CC> c c'\n 4. \\<And>a.\n       a : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c' \\<Longrightarrow>\n       cf_hom \\<CC>\n        [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n         \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr> =\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n      c'\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>a\\<rparr>", "with category_axioms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'", "show\n        \"cf_hom \\<CC> [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> = \n          cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  q : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>", "by (*slow*)\n          (\n            cs_concl\n              cs_simp: cat_cs_simps cat_op_simps cat_Set_cs_simps\n              cs_intro: cat_cs_intros\n         )"], ["proof (state)\nthis:\n  cf_hom \\<CC>\n   [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr> =\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n c'\\<rparr>\\<lparr>ArrVal\\<rparr>\\<lparr>q\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (cf_hom \\<CC>\n          [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n           \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cat_Set\n          \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n        c'\\<rparr>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> c c' = Hom \\<CC> c c'", "qed (use arr_Set_CId_cc' arr_Set_Hom_cc' in auto)"], ["proof (state)\nthis:\n  cf_hom \\<CC>\n   [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n c'\\<rparr>\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrDom\\<rparr>\n 2. cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n      \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c\n   c'\\<rparr>\\<lparr>ArrCod\\<rparr>", "qed (use cf_hom_cc' CId_cc' in \\<open>cs_concl cs_simp: cat_cs_simps\\<close>)+"], ["proof (state)\nthis:\n  cf_hom \\<CC>\n   [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>,\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>c'\\<rparr>]\\<^sub>\\<circ> =\n  cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom \\<CC> c c'\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_cf_hom_CId"], ["", "subsubsection\\<open>Opposite \\<open>hom\\<close>-function\\<close>"], ["", "lemma (in category) cat_op_cat_cf_hom:\n  assumes \"g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\" and \"g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\"\n  shows \"cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ> = cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>", "proof(rule arr_Set_eqI[of \\<alpha>])"], ["proof (state)\ngoal (5 subgoals):\n 1. arr_Set \\<alpha> (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>)\n 2. arr_Set \\<alpha> (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>)\n 3. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n 4. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 5. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'", "show \"arr_Set \\<alpha> (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>)\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>)", "by \n      ( \n        cs_concl \n          cs_simp: cat_op_simps cs_intro: cat_cs_intros cat_prod_cs_intros\n      )"], ["proof (state)\nthis:\n  arr_Set \\<alpha> (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>)\n\ngoal (4 subgoals):\n 1. arr_Set \\<alpha> (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>)\n 2. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n 3. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 4. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'", "show \"arr_Set \\<alpha> (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>)\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. arr_Set \\<alpha> (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>)", "by \n      ( \n        cs_concl \n          cs_simp: cat_op_simps \n          cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n      )"], ["proof (state)\nthis:\n  arr_Set \\<alpha> (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>)\n\ngoal (3 subgoals):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n 2. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 3. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'", "have dom_lhs:\n    \"\\<D>\\<^sub>\\<circ> (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) = Hom \\<CC> a' a\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n    Hom \\<CC> a' a", "by (cs_concl cs_simp: cat_cs_simps cat_op_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n  Hom \\<CC> a' a\n\ngoal (3 subgoals):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n 2. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 3. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) = Hom \\<CC> a' a\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n    Hom \\<CC> a' a", "by (cs_concl cs_simp: cat_cs_simps cat_op_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>) =\n  Hom \\<CC> a' a\n\ngoal (3 subgoals):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n 2. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 3. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "show \"cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> = cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>", "proof(rule vsv_eqI, unfold dom_lhs dom_rhs in_Hom_iff)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a' a = Hom \\<CC> a' a\n 4. \\<And>aa.\n       aa : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n       cf_hom (op_cat \\<CC>)\n        [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr> =\n       cf_hom \\<CC>\n        [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr>", "fix f"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a' a = Hom \\<CC> a' a\n 4. \\<And>aa.\n       aa : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n       cf_hom (op_cat \\<CC>)\n        [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr> =\n       cf_hom \\<CC>\n        [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr>", "assume \"f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (state)\nthis:\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (4 subgoals):\n 1. vsv (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a' a = Hom \\<CC> a' a\n 4. \\<And>aa.\n       aa : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a \\<Longrightarrow>\n       cf_hom (op_cat \\<CC>)\n        [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr> =\n       cf_hom \\<CC>\n        [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>aa\\<rparr>", "with assms"], ["proof (chain)\npicking this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "show \n      \"cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> = cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. cf_hom (op_cat \\<CC>)\n     [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a'\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. cf_hom (op_cat \\<CC>)\n     [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cat_op_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  cf_hom (op_cat \\<CC>)\n   [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr> =\n  cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 2. vsv (cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>)\n 3. Hom \\<CC> a' a = Hom \\<CC> a' a", "qed (simp_all add: cf_hom_components)"], ["proof (state)\nthis:\n  cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr> =\n  cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrVal\\<rparr>\n\ngoal (2 subgoals):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n 2. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'", "show \n    \"cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> = cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>", "by \n      (\n        cs_concl \n          cs_simp: category.cf_hom_ArrDom cat_op_simps \n          cs_intro: cat_op_intros cat_prod_cs_intros\n      )"], ["proof (state)\nthis:\n  cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr> =\n  cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrDom\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'", "show \n    \"cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> = cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g' : a' \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n    cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>", "by \n      (\n        cs_concl \n          cs_simp: category.cf_hom_ArrCod cat_op_simps \n          cs_intro: cat_op_intros cat_prod_cs_intros\n      )"], ["proof (state)\nthis:\n  cf_hom (op_cat \\<CC>) [g, g']\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr> =\n  cf_hom \\<CC> [g', g]\\<^sub>\\<circ>\\<lparr>ArrCod\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_op_cat_cf_hom"], ["", "subsection\\<open>\\<open>Hom\\<close>-functor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>\nSee \\cite{noauthor_nlab_nodate}\\footnote{\\url{\nhttps://ncatlab.org/nlab/show/hom-functor\n}}.\n\\<close>"], ["", "definition cf_Hom :: \"V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<index>_'(/-,-/')\\<close>)\n  where \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) = \n    [\n      (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>. Hom \\<CC> (vpfst a) (vpsnd a)),\n      (\\<lambda>f\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>. cf_hom \\<CC> f),\n      op_cat \\<CC> \\<times>\\<^sub>C \\<CC>,\n      cat_Set \\<alpha>\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cf_Hom_components:\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr> = \n    (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>. Hom \\<CC> (vpfst a) (vpsnd a))\"\n    and \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr> = (\\<lambda>f\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>. cf_hom \\<CC> f)\"\n    and \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\"\n    and \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n     )\\<lparr>ObjMap\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>Obj\\<rparr>.\n         Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>)) &&&\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n     )\\<lparr>ArrMap\\<rparr> =\n     VLambda ((op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>)\n      (cf_hom \\<CC>)) &&&\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC> &&&\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>", "unfolding cf_Hom_def dghm_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>Obj\\<rparr>.\n         Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      VLambda ((op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>)\n       (cf_hom \\<CC>),\n      op_cat \\<CC> \\<times>\\<^sub>C \\<CC>,\n      cat_Set \\<alpha>]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>Obj\\<rparr>.\n         Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>)) &&&\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>Obj\\<rparr>.\n         Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      VLambda ((op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>)\n       (cf_hom \\<CC>),\n      op_cat \\<CC> \\<times>\\<^sub>C \\<CC>,\n      cat_Set \\<alpha>]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     VLambda ((op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>)\n      (cf_hom \\<CC>)) &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                   \\<CC>)\\<lparr>Obj\\<rparr>.\n        Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n         (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n     VLambda ((op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>)\n      (cf_hom \\<CC>),\n     op_cat \\<CC> \\<times>\\<^sub>C \\<CC>,\n     cat_Set \\<alpha>]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n    op_cat \\<CC> \\<times>\\<^sub>C \\<CC> &&&\n    [\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                   \\<CC>)\\<lparr>Obj\\<rparr>.\n        Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n         (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n     VLambda ((op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>)\n      (cf_hom \\<CC>),\n     op_cat \\<CC> \\<times>\\<^sub>C \\<CC>,\n     cat_Set \\<alpha>]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    cat_Set \\<alpha>", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Object map\\<close>"], ["", "mk_VLambda cf_Hom_components(1)\n  |vsv cf_Hom_ObjMap_vsv|"], ["", "lemma cf_Hom_ObjMap_vdomain[cat_cs_simps]:  \n  \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>) = (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>", "unfolding cf_Hom_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>Obj\\<rparr>.\n         Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>)) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>", "by simp"], ["", "lemma cf_Hom_ObjMap_app[cat_cs_simps]: \n  assumes \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet> = Hom \\<CC> a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    b =\n    Hom \\<CC> a b", "using assms"], ["proof (prove)\nusing this:\n  [a, b]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    b =\n    Hom \\<CC> a b", "unfolding cf_Hom_components"], ["proof (prove)\nusing this:\n  [a, b]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                   \\<CC>)\\<lparr>Obj\\<rparr>.\n        Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n         (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>)) \\<lparr>a,\n              b\\<rparr>\\<^sub>\\<bullet> =\n    Hom \\<CC> a b", "by (simp add: nat_omega_simps)"], ["", "lemma (in category) cf_Hom_ObjMap_vrange: \n  \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                               -,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "interpret op_\\<CC>: category \\<alpha> \\<open>op_cat \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat \\<CC>)", "by (simp add: category_op)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                               -,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                               -,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "assume \"y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>)\""], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                          -,-)\\<lparr>ObjMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                               -,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                          -,-)\\<lparr>ObjMap\\<rparr>)", "obtain x where y_def: \"y = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\" \n    and x: \"x \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                          -,-)\\<lparr>ObjMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>y =\n                 Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                 -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>;\n         x \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                                \\<CC>)\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cf_Hom_components"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                         (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat\n                   \\<CC> \\<times>\\<^sub>C\n                  \\<CC>)\\<lparr>Obj\\<rparr>.\n                             Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n                              (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>y =\n                 (\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat\n           \\<CC> \\<times>\\<^sub>C\n          \\<CC>)\\<lparr>Obj\\<rparr>.\n                     Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n                      (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>))\\<lparr>x\\<rparr>;\n         x \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                                \\<CC>)\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n  x \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                         \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                               -,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  y = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n  x \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                         \\<CC>)\\<lparr>Obj\\<rparr>", "obtain a b where x_def: \"x = [a, b]\\<^sub>\\<circ>\" \n    and a: \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" \n    and b: \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  y = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>x\\<rparr>\n  x \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                         \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>x = [a, b]\\<^sub>\\<circ>;\n         a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>;\n         b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_ObjE[OF op_\\<CC>.category_axioms category_axioms x])"], ["proof (state)\nthis:\n  x = [a, b]\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                               -,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "from a"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>", "have a: \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by simp"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                               -,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "from a b"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show \"y \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. y \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "unfolding \n      y_def x_def cf_Hom_ObjMap_app[OF x[unfolded x_def]] cat_Set_components"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom \\<CC> a b \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (auto simp: cat_cs_intros)"], ["proof (state)\nthis:\n  y \\<in>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "mk_VLambda cf_Hom_components(2)\n  |vsv cf_Hom_ArrMap_vsv|\n  |vdomain cf_Hom_ArrMap_vdomain[cat_cs_simps]|\n  |app cf_Hom_ArrMap_app[cat_cs_simps]|"], ["", "subsubsection\\<open>\\<open>Hom\\<close>-functor is a functor\\<close>"], ["", "lemma (in category) cat_Hom_is_functor:\n  \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) : op_cat \\<CC> \\<times>\\<^sub>C \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "interpret Set: category \\<alpha> \\<open>cat_Set \\<alpha>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Set \\<alpha>)", "by (rule category_cat_Set)"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "interpret \\<CC>\\<CC>: category \\<alpha> \\<open>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)", "by (simp add: category_axioms category_cat_prod_2 category_op)"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "interpret op_\\<CC>: category \\<alpha> \\<open>op_cat \\<CC>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat \\<CC>)", "by (rule category_op)"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "proof(intro is_functorI')"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n 3. category \\<alpha> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\n 4. category \\<alpha> (cat_Set \\<alpha>)\n 5. vcard Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) =\n    4\\<^sub>\\<nat>\n 6. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 7. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\n 8. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 9. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 10. \\<D>\\<^sub>\\<circ>\n      (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ObjMap\\<rparr>) =\n     (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\nA total of 15 subgoals...", "show \"vfsequence Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)", "unfolding cf_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>Obj\\<rparr>.\n         Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      VLambda ((op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>)\n       (cf_hom \\<CC>),\n      op_cat \\<CC> \\<times>\\<^sub>C \\<CC>, cat_Set \\<alpha>]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n\ngoal (14 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\n 3. category \\<alpha> (cat_Set \\<alpha>)\n 4. vcard Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) =\n    4\\<^sub>\\<nat>\n 5. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 6. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\n 7. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 8. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 9. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 10. \\<R>\\<^sub>\\<circ>\n      (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ObjMap\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\nA total of 14 subgoals...", "show op_\\<CC>_\\<CC>: \"category \\<alpha> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)", "by (auto simp: cat_cs_intros)"], ["proof (state)\nthis:\n  category \\<alpha> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\n\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Set \\<alpha>)\n 3. vcard Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) =\n    4\\<^sub>\\<nat>\n 4. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 5. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\n 6. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 7. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 9. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ>\n      (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ArrMap\\<rparr>) =\n     (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\nA total of 13 subgoals...", "show \"vcard Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) = 4\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) =\n    4\\<^sub>\\<nat>", "unfolding cf_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [\\<lambda>a\\<in>\\<^sub>\\<circ>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>Obj\\<rparr>.\n         Hom \\<CC> (a\\<lparr>[]\\<^sub>\\<circ>\\<rparr>)\n          (a\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      VLambda ((op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>)\n       (cf_hom \\<CC>),\n      op_cat \\<CC> \\<times>\\<^sub>C \\<CC>, cat_Set \\<alpha>]\\<^sub>\\<circ> =\n    4\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) =\n  4\\<^sub>\\<nat>\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Set \\<alpha>)\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 4. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\n 5. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 6. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 7. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 8. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 10. \\<And>a b f.\n        f : a \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> b \\<Longrightarrow>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n        )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n        -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n        -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\nA total of 12 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "by (simp add: cf_Hom_ObjMap_vrange)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Set \\<alpha>)\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 4. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\n 5. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 6. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 7. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 9. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> b \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n 10. \\<And>b c g a f.\n        \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                          -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                      f\\<rparr> =\n                          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                          -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                          -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\nA total of 11 subgoals...", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> :\n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>\"\n      if gf: \"gf : ab \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> cd\" for gf ab cd"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>", "unfolding slicing_simps cat_smc_cat_Set[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>", "obtain g f a b c d where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\"\n        and ab_def: \"ab = [a, b]\\<^sub>\\<circ>\"\n        and cd_def: \"cd = [c, d]\\<^sub>\\<circ>\"   \n        and \"g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\"  \n        and f: \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g f a b c d.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>; ab = [a, b]\\<^sub>\\<circ>;\n         cd = [c, d]\\<^sub>\\<circ>;\n         g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c;\n         f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_is_arrE[OF category_op category_axioms gf])"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  ab = [a, b]\\<^sub>\\<circ>\n  cd = [c, d]\\<^sub>\\<circ>\n  g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gf = [g, f]\\<^sub>\\<circ>\n  ab = [a, b]\\<^sub>\\<circ>\n  cd = [c, d]\\<^sub>\\<circ>\n  g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d", "have g: \"g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\""], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  ab = [a, b]\\<^sub>\\<circ>\n  cd = [c, d]\\<^sub>\\<circ>\n  g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  ab = [a, b]\\<^sub>\\<circ>\n  cd = [c, d]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a", "by simp"], ["proof (state)\nthis:\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>", "from category_axioms that g f"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  gf : ab \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> cd\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> :\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  gf : ab \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> cd\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>", "unfolding gf_def ab_def cd_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  [g, f]\\<^sub>\\<circ> : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n                                d]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    f : a \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n        b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n              d", "(*slow*)"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  [g, f]\\<^sub>\\<circ> : [a, b]\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n                                d]\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    f : a \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n        b \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> c \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n              d", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cd\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?gf : ?ab \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> ?cd \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>?gf\\<rparr> : Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>?ab\\<rparr> \\<mapsto>\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>?cd\\<rparr>\n\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Set \\<alpha>)\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 4. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\n 5. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 6. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 7. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                         -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>g \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                     f\\<rparr> =\n                         Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                         -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                         Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                         -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n 10. \\<And>c.\n        c \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                               \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n        )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n        cat_Set\n         \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n        -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> ff'\\<rparr> = \n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>\"\n      if gg': \"gg' : bb' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> cc'\" \n        and ff': \"ff' : aa' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> bb'\" \n      for gg' bb' cc' ff' aa'"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                   ff'\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                   ff'\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>", "obtain g g' b b' c c' \n        where gg'_def: \"gg' = [g, g']\\<^sub>\\<circ>\"\n          and bb'_def: \"bb' = [b, b']\\<^sub>\\<circ>\"\n          and cc'_def: \"cc' = [c, c']\\<^sub>\\<circ>\"   \n          and \"g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\"  \n          and g': \"g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g g' b b' c c'.\n        \\<lbrakk>gg' = [g, g']\\<^sub>\\<circ>; bb' = [b, b']\\<^sub>\\<circ>;\n         cc' = [c, c']\\<^sub>\\<circ>;\n         g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c;\n         g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_is_arrE[OF category_op category_axioms gg'])"], ["proof (state)\nthis:\n  gg' = [g, g']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                   ff'\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>", "moreover"], ["proof (state)\nthis:\n  gg' = [g, g']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                   ff'\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>", "obtain f f' a a' b'' b''' \n        where ff'_def: \"ff' = [f, f']\\<^sub>\\<circ>\"\n          and aa'_def: \"aa' = [a, a']\\<^sub>\\<circ>\"\n          and \"bb' = [b'', b''']\\<^sub>\\<circ>\"   \n          and \"f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b''\"  \n          and \"f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f f' a a' b'' b'''.\n        \\<lbrakk>ff' = [f, f']\\<^sub>\\<circ>; aa' = [a, a']\\<^sub>\\<circ>;\n         bb' = [b'', b''']\\<^sub>\\<circ>;\n         f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'';\n         f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_is_arrE[OF category_op category_axioms ff'])"], ["proof (state)\nthis:\n  ff' = [f, f']\\<^sub>\\<circ>\n  aa' = [a, a']\\<^sub>\\<circ>\n  bb' = [b'', b''']\\<^sub>\\<circ>\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b''\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'''\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                   ff'\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>", "ultimately"], ["proof (chain)\npicking this:\n  gg' = [g, g']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  ff' = [f, f']\\<^sub>\\<circ>\n  aa' = [a, a']\\<^sub>\\<circ>\n  bb' = [b'', b''']\\<^sub>\\<circ>\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b''\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'''", "have f: \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\" \n        and f': \"f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\" \n        and g: \"g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  gg' = [g, g']\\<^sub>\\<circ>\n  bb' = [b, b']\\<^sub>\\<circ>\n  cc' = [c, c']\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> c\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  ff' = [f, f']\\<^sub>\\<circ>\n  aa' = [a, a']\\<^sub>\\<circ>\n  bb' = [b'', b''']\\<^sub>\\<circ>\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b''\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'''\n\ngoal (1 subgoal):\n 1. f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a &&&\n    f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b' &&&\n    g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "by (auto simp: cat_op_simps)"], ["proof (state)\nthis:\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                   ff'\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>", "from category_axioms that g f  g' f'"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  gg' : bb' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> bb'\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'", "show ?thesis"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  gg' : bb' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> cc'\n  ff' : aa' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> bb'\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                   ff'\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>", "unfolding \n          slicing_simps cat_smc_cat_Set[symmetric] \n          gg'_def bb'_def cc'_def ff'_def aa'_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  [g, g']\\<^sub>\\<circ> : [b, b']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [c,\n                                  c']\\<^sub>\\<circ>\n  [f, f']\\<^sub>\\<circ> : [a, a']\\<^sub>\\<circ> \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> [b,\n                                  b']\\<^sub>\\<circ>\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  g' : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>[g, g']\\<^sub>\\<circ> \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                   [f, f']\\<^sub>\\<circ>\\<rparr> =\n    g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    g' \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    (f \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n     f')", "by (*slow*)\n          (\n            cs_concl\n              cs_simp: cat_cs_simps cat_op_simps cat_prod_cs_simps\n              cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                                 ff'\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?gg' : ?bb' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> ?cc';\n   ?ff' : ?aa' \\<mapsto>\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub> ?bb'\\<rbrakk>\n  \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>?gg' \\<circ>\\<^sub>A\\<^bsub>op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\\<^esub>\n                ?ff'\\<rparr> =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>?gg'\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,-)\\<lparr>ArrMap\\<rparr>\\<lparr>?ff'\\<rparr>\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Set \\<alpha>)\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 4. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\n 5. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 6. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 7. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 9. \\<And>c.\n       c \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>c\\<rparr>\\<rparr> =\n       cat_Set\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr>\\<rparr>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr> = \n      cat_Set \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr>\"\n      if \"cc' \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\" for cc'"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  cc'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>", "obtain c c' \n        where cc'_def: \"cc' = [c, c']\\<^sub>\\<circ>\" \n          and c: \"c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n          and c': \"c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  cc'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>c c'.\n        \\<lbrakk>cc' = [c, c']\\<^sub>\\<circ>;\n         c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>;\n         c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_ObjE[rotated 2]) (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  cc' = [c, c']\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr>", "then"], ["proof (chain)\npicking this:\n  cc' = [c, c']\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "have c: \"c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  cc' = [c, c']\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  cc' = [c, c']\\<^sub>\\<circ>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by simp"], ["proof (state)\nthis:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr>", "with c' category_axioms Set.category_axioms that"], ["proof (chain)\npicking this:\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)\n  cc'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)\n  cc'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr>", "unfolding cc'_def"], ["proof (prove)\nusing this:\n  c' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)\n  [c, c']\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n                                    \\<CC>)\\<lparr>CId\\<rparr> \\<lparr>c,\n                                c'\\<rparr>\\<^sub>\\<bullet>\\<rparr> =\n    cat_Set\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>c \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n  c'\\<rparr>", "by\n          (\n            cs_concl \n              cs_simp: cat_cs_simps cat_op_simps cat_prod_cs_simps\n              cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n                                  \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr> =\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>cc'\\<rparr>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?cc'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>(op_cat \\<CC> \\<times>\\<^sub>C\n                                  \\<CC>)\\<lparr>CId\\<rparr>\\<lparr>?cc'\\<rparr>\\<rparr> =\n  cat_Set\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,-)\\<lparr>ObjMap\\<rparr>\\<lparr>?cc'\\<rparr>\\<rparr>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. category \\<alpha> (cat_Set \\<alpha>)\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomDom\\<rparr> = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 4. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>HomCod\\<rparr> = cat_Set \\<alpha>\n 5. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 6. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 7. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>", "qed (auto simp: cf_Hom_components cat_cs_intros)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in category) cat_Hom_is_functor':\n  assumes \"\\<beta> = \\<alpha>\" and \"\\<AA>' = op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\" and \"\\<BB>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule cat_Hom_is_functor)"], ["", "lemmas [cat_cs_intros] = category.cat_Hom_is_functor'"], ["", "subsection\\<open>Composition of a \\<open>Hom\\<close>-functor and two functors\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition cf_bcomp_Hom :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<index>_'(/_-,_-/')\\<close>)\n  \\<comment>\\<open>The following definition may seem redundant, but it will help to avoid\n  proof duplication later.\\<close>\n  where \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-) = cf_cn_cov_bcomp (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)) \\<FF> \\<GG>\""], ["", "subsubsection\\<open>Object map\\<close>"], ["", "lemma cf_bcomp_Hom_ObjMap_vsv: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n         \\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>)", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_cn_cov_bcomp\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n          \\<FF> \\<GG>\\<lparr>ObjMap\\<rparr>)", "by (rule cf_cn_cov_bcomp_ObjMap_vsv)"], ["", "lemma cf_bcomp_Hom_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) = (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_cn_cov_bcomp\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\n       \\<GG>\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>", "by (rule cf_cn_cov_bcomp_ObjMap_vdomain)"], ["", "lemma cf_bcomp_Hom_ObjMap_app[cat_cs_simps]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>\\<lparr>a, b\\<rparr>\\<^sub>\\<bullet> = \n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>, \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\\<rparr>\\<^sub>\\<bullet>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<^esub>\n    b =\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  [a, b]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<AA> \\<times>\\<^sub>C\n                       \\<BB>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<^esub>\n    b =\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  [a, b]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<AA> \\<times>\\<^sub>C\n                       \\<BB>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_cn_cov_bcomp Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF> \\<GG>\\<^esub>\n    b =\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by (rule cf_cn_cov_bcomp_ObjMap_app)"], ["", "lemma (in category) cf_bcomp_Hom_ObjMap_vrange:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "using category_axioms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_cn_cov_bcomp\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\n       \\<GG>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "by (intro cf_cn_cov_bcomp_ObjMap_vrange[OF assms])\n    (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "lemma cf_bcomp_Hom_ArrMap_vsv: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n         \\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>)", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_cn_cov_bcomp\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n          \\<FF> \\<GG>\\<lparr>ArrMap\\<rparr>)", "by (rule cf_cn_cov_bcomp_ArrMap_vsv)"], ["", "lemma cf_bcomp_Hom_ArrMap_vdomain[cat_cs_simps]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) = (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_cn_cov_bcomp\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\n       \\<GG>\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>", "by (rule cf_cn_cov_bcomp_ArrMap_vdomain)"], ["", "lemma cf_bcomp_Hom_ArrMap_app[cat_cs_simps]:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"[f, g]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<AA> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>\"\n  shows \n    \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>\\<lparr>f, g\\<rparr>\\<^sub>\\<bullet> = \n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>, \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>\\<rparr>\\<^sub>\\<bullet>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<^esub>\n    g =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  [f, g]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<AA> \\<times>\\<^sub>C\n                       \\<BB>)\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. f \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<^esub>\n    g =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  [f, g]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<AA> \\<times>\\<^sub>C\n                       \\<BB>)\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. f \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_cn_cov_bcomp Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF> \\<GG>\\<^esub>\n    g =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>", "by (rule cf_cn_cov_bcomp_ArrMap_app)"], ["", "lemma (in category) cf_bcomp_Hom_ArrMap_vrange:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n      )\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "using category_axioms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n      )\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_cn_cov_bcomp\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\n       \\<GG>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "by (intro cf_cn_cov_bcomp_ArrMap_vrange[OF assms])\n    (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["", "subsubsection\\<open>Composition of a \\<open>Hom\\<close>-functor and two functors is a functor\\<close>"], ["", "lemma (in category) cat_cf_bcomp_Hom_is_functor:\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-) : op_cat \\<AA> \\<times>\\<^sub>C \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n    ) :\n    op_cat \\<AA> \\<times>\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "using assms category_axioms"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n    ) :\n    op_cat \\<AA> \\<times>\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "unfolding cf_bcomp_Hom_def"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. cf_cn_cov_bcomp\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\n     \\<GG> :\n    op_cat \\<AA> \\<times>\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["", "lemma (in category) cat_cf_bcomp_Hom_is_functor':\n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"\\<beta> = \\<alpha>\"\n    and \"\\<AA>' = op_cat \\<AA> \\<times>\\<^sub>C \\<BB>\"\n    and \"\\<BB>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n    ) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'", "using assms(1,2)"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n    ) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'", "unfolding assms(3-5)"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,\\<GG>-\n    ) :\n    op_cat \\<AA> \\<times>\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule cat_cf_bcomp_Hom_is_functor)"], ["", "lemmas [cat_cs_intros] = category.cat_cf_bcomp_Hom_is_functor'"], ["", "subsection\\<open>Composition of a \\<open>Hom\\<close>-functor and a functor\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "text\\<open>See subsection 1.15 in \\cite{bodo_categories_1970}.\\<close>"], ["", "definition cf_lcomp_Hom :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<index>_'(/_-,-/')\\<close>)\n  where \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) = cf_cn_cov_lcomp \\<CC> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)) \\<FF>\""], ["", "definition cf_rcomp_Hom :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<index>_'(/-,_-/')\\<close>)\n  where \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) = cf_cn_cov_rcomp \\<CC> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)) \\<GG>\""], ["", "subsubsection\\<open>Object map\\<close>"], ["", "lemma cf_lcomp_Hom_ObjMap_vsv[cat_cs_intros]: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n         )\\<lparr>ObjMap\\<rparr>)", "unfolding cf_lcomp_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_cn_cov_lcomp \\<CC>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n          \\<FF>\\<lparr>ObjMap\\<rparr>)", "by (rule cf_cn_cov_lcomp_ObjMap_vsv)"], ["", "lemma cf_rcomp_Hom_ObjMap_vsv[cat_cs_intros]: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n         )\\<lparr>ObjMap\\<rparr>)", "unfolding cf_rcomp_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_cn_cov_rcomp \\<CC>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n          \\<GG>\\<lparr>ObjMap\\<rparr>)", "by (rule cf_cn_cov_rcomp_ObjMap_vsv)"], ["", "lemma cf_lcomp_Hom_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"category \\<alpha> \\<CC>\" and \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ObjMap\\<rparr>) = (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cf_lcomp_Hom_def cs_intro: cat_cs_intros)"], ["", "lemma cf_rcomp_Hom_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) = (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n      )\\<lparr>ObjMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Obj\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cf_rcomp_Hom_def cs_intro: cat_cs_intros)"], ["", "lemma cf_lcomp_Hom_ObjMap_app[cat_cs_simps]:\n  assumes \"category \\<alpha> \\<CC>\"\n    and \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"b \\<in>\\<^sub>\\<circ> op_cat \\<BB>\\<lparr>Obj\\<rparr>\"\n    and \"c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b, c\\<rparr>\\<^sub>\\<bullet> = \n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>, c\\<rparr>\\<^sub>\\<bullet>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<^esub>\n    c =\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    c", "using assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> op_cat \\<BB>\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. b \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<^esub>\n    c =\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    c", "unfolding cf_lcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> op_cat \\<BB>\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. b \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_cn_cov_lcomp \\<CC> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\\<^esub>\n    c =\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    c", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_prod_cs_intros)"], ["", "lemma cf_rcomp_Hom_ObjMap_app[cat_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>\\<lparr>c, b\\<rparr>\\<^sub>\\<bullet> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>c, \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\\<rparr>\\<^sub>\\<bullet>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<^esub>\n    b =\n    c \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. c \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<^esub>\n    b =\n    c \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by \n    (\n      cs_concl\n        cs_simp: cat_cs_simps cf_rcomp_Hom_def\n        cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n    )"], ["", "lemma (in category) cat_cf_lcomp_Hom_ObjMap_vrange: \n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "unfolding cf_lcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_cn_cov_lcomp \\<CC>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n       \\<FF>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "by (intro cf_cn_cov_lcomp_ObjMap_vrange) \n    (cs_concl cs_intro: cat_cs_intros)"], ["", "lemma (in category) cat_cf_rcomp_Hom_ObjMap_vrange: \n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n      )\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "unfolding cf_rcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_cn_cov_rcomp \\<CC>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n       \\<GG>\\<lparr>ObjMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Obj\\<rparr>", "by (intro cf_cn_cov_rcomp_ObjMap_vrange) \n    (cs_concl cs_intro: cat_cs_intros)"], ["", "subsubsection\\<open>Arrow map\\<close>"], ["", "lemma cf_lcomp_Hom_ArrMap_vsv[cat_cs_intros]: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n         )\\<lparr>ArrMap\\<rparr>)", "unfolding cf_lcomp_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_cn_cov_lcomp \\<CC>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n          \\<FF>\\<lparr>ArrMap\\<rparr>)", "by (rule cf_cn_cov_lcomp_ArrMap_vsv)"], ["", "lemma cf_rcomp_Hom_ArrMap_vsv[cat_cs_intros]: \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n         )\\<lparr>ArrMap\\<rparr>)", "unfolding cf_rcomp_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (cf_cn_cov_rcomp \\<CC>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n          \\<GG>\\<lparr>ArrMap\\<rparr>)", "by (rule cf_cn_cov_rcomp_ArrMap_vsv)"], ["", "lemma cf_lcomp_Hom_ArrMap_vdomain[cat_cs_simps]:  \n  assumes \"category \\<alpha> \\<CC>\" and \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ArrMap\\<rparr>) = (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>", "unfolding cf_lcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_cn_cov_lcomp \\<CC>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n       \\<FF>\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<BB> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["", "lemma cf_rcomp_Hom_ArrMap_vdomain[cat_cs_simps]:  \n  assumes \"category \\<alpha> \\<CC>\" and \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) = (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n      )\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>", "unfolding cf_rcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (cf_cn_cov_rcomp \\<CC>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n       \\<GG>\\<lparr>ArrMap\\<rparr>) =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<BB>)\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps)"], ["", "lemma cf_lcomp_Hom_ArrMap_app[cat_cs_simps]:\n  assumes \"category \\<alpha> \\<CC>\" \n    and \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"g : a \\<mapsto>\\<^bsub>op_cat \\<BB>\\<^esub> b\"\n    and \"f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>g, f\\<rparr>\\<^sub>\\<bullet> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>\\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>, f\\<rparr>\\<^sub>\\<bullet>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<^esub>\n    f =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    f", "using assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : a \\<mapsto>\\<^bsub>op_cat \\<BB>\\<^esub> b\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<^esub>\n    f =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    f", "unfolding cf_lcomp_Hom_def cat_op_simps"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : b \\<mapsto>\\<^bsub>\\<BB>\\<^esub> a\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_cn_cov_lcomp \\<CC> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\\<^esub>\n    f =\n    \\<FF>\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    f", "by \n    (\n      cs_concl \n        cs_simp: cat_cs_simps cat_op_simps \n        cs_intro: cat_cs_intros cat_prod_cs_intros\n    )"], ["", "lemma cf_rcomp_Hom_ArrMap_app[cat_cs_simps]:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n    and \"g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\"\n    and \"f : a' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>\\<lparr>g, f\\<rparr>\\<^sub>\\<bullet> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>g, \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\\<rparr>\\<^sub>\\<bullet>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<^esub>\n    f =\n    g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n  f : a' \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<^esub>\n    f =\n    g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<GG>\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by\n    (\n      cs_concl\n        cs_simp: cat_cs_simps cf_rcomp_Hom_def\n        cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n    )"], ["", "lemma (in category) cf_lcomp_Hom_ArrMap_vrange: \n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n      )\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n      )\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "unfolding cf_lcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_cn_cov_lcomp \\<CC>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n       \\<FF>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "by (intro cf_cn_cov_lcomp_ArrMap_vrange)\n    (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["", "lemma (in category) cf_rcomp_Hom_ArrMap_vrange: \n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"\\<R>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n      )\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n      )\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "unfolding cf_rcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ>\n     (cf_cn_cov_rcomp \\<CC>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n       \\<GG>\\<lparr>ArrMap\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_Set \\<alpha>\\<lparr>Arr\\<rparr>", "by (intro cf_cn_cov_rcomp_ArrMap_vrange)\n    (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["", "subsubsection\\<open>Further properties\\<close>"], ["", "lemma cf_bcomp_Hom_cf_lcomp_Hom[cat_cs_simps]:\n  \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,cf_id \\<CC>-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    \\<FF>-,dghm_id \\<CC>-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)", "unfolding cf_lcomp_Hom_def cf_cn_cov_lcomp_def cf_bcomp_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_cn_cov_bcomp\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\n     (dghm_id \\<CC>) =\n    cf_cn_cov_bcomp\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF>\n     (dghm_id \\<CC>)", ".."], ["", "lemma cf_bcomp_Hom_cf_rcomp_Hom[cat_cs_simps]:\n  \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(cf_id \\<CC>-,\\<GG>-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    dghm_id \\<CC>-,\\<GG>-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)", "unfolding cf_rcomp_Hom_def cf_cn_cov_rcomp_def cf_bcomp_Hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cf_cn_cov_bcomp\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n     (dghm_id \\<CC>) \\<GG> =\n    cf_cn_cov_bcomp\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n     (dghm_id \\<CC>) \\<GG>", ".."], ["", "subsubsection\\<open>Composition of a \\<open>Hom\\<close>-functor and a functor is a functor\\<close>"], ["", "lemma (in category) cat_cf_lcomp_Hom_is_functor:\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) : op_cat \\<BB> \\<times>\\<^sub>C \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) :\n    op_cat \\<BB> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) :\n    op_cat \\<BB> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "unfolding cf_lcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. cf_cn_cov_lcomp \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<FF> :\n    op_cat \\<BB> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (intro cf_cn_cov_lcomp_is_functor) \n    (cs_concl cs_intro: cat_cs_intros)"], ["", "lemma (in category) cat_cf_lcomp_Hom_is_functor':\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" \n    and \"\\<beta> = \\<alpha>\" \n    and \"\\<AA>' = op_cat \\<BB> \\<times>\\<^sub>C \\<CC>\" \n    and \"\\<BB>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'", "unfolding assms(2-4)"], ["proof (prove)\nusing this:\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) :\n    op_cat \\<BB> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule cat_cf_lcomp_Hom_is_functor)"], ["", "lemmas [cat_cs_intros] = category.cat_cf_lcomp_Hom_is_functor'"], ["", "lemma (in category) cat_cf_rcomp_Hom_is_functor:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) : op_cat \\<CC> \\<times>\\<^sub>C \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "unfolding cf_rcomp_Hom_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. cf_cn_cov_rcomp \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) \\<GG> :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (intro cf_cn_cov_rcomp_is_functor) \n    (cs_concl cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemma (in category) cat_cf_rcomp_Hom_is_functor':\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"\\<beta> = \\<alpha>\" \n    and \"\\<AA>' = op_cat \\<CC> \\<times>\\<^sub>C \\<BB>\" \n    and \"\\<BB>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) : \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n    \\<AA>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<BB>'", "unfolding assms(2-4)"], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule cat_cf_rcomp_Hom_is_functor)"], ["", "lemmas [cat_cs_intros] = category.cat_cf_rcomp_Hom_is_functor'"], ["", "subsubsection\\<open>Flip of a projections of a \\<open>Hom\\<close>-functor\\<close>"], ["", "lemma (in category) cat_bifunctor_flip_cf_rcomp_Hom:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \n    \"bifunctor_flip (op_cat \\<CC>) \\<BB> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)) =\n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)", "proof(rule cf_eqI)"], ["proof (state)\ngoal (6 subgoals):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n 4. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "interpret \\<GG>: is_functor \\<alpha> \\<BB> \\<CC> \\<GG>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms)"], ["proof (state)\ngoal (6 subgoals):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<DD>\n 3. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n 4. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show bf_Hom:\n    \"bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n      \\<BB> \\<times>\\<^sub>C op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n    \\<BB> \\<times>\\<^sub>C\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (5 subgoals):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n 3. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 4. \\<BB> \\<times>\\<^sub>C op_cat \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show op_Hom:\n    \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-) : \\<BB> \\<times>\\<^sub>C op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-) :\n    \\<BB> \\<times>\\<^sub>C\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by (cs_concl cs_simp: cat_op_simps cs_intro: cat_cs_intros cat_op_intros)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (4 subgoals):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n 2. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 3. \\<BB> \\<times>\\<^sub>C op_cat \\<CC> =\n    \\<BB> \\<times>\\<^sub>C op_cat \\<CC>\n 4. cat_Set \\<alpha> = cat_Set \\<alpha>", "from bf_Hom"], ["proof (chain)\npicking this:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>", "have ObjMap_dom_lhs:\n    \"\\<D>\\<^sub>\\<circ> (bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>) = \n      (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (bifunctor_flip (op_cat \\<CC>) \\<BB>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n       )\\<lparr>ObjMap\\<rparr>) =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr>) =\n  (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n 2. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 3. \\<BB> \\<times>\\<^sub>C op_cat \\<CC> =\n    \\<BB> \\<times>\\<^sub>C op_cat \\<CC>\n 4. cat_Set \\<alpha> = cat_Set \\<alpha>", "from op_Hom"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>", "have ObjMap_dom_rhs:\n    \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>) = (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n      op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>) =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>) =\n  (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n 2. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 3. \\<BB> \\<times>\\<^sub>C op_cat \\<CC> =\n    \\<BB> \\<times>\\<^sub>C op_cat \\<CC>\n 4. cat_Set \\<alpha> = cat_Set \\<alpha>", "from bf_Hom"], ["proof (chain)\npicking this:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>", "have ArrMap_dom_lhs:\n    \"\\<D>\\<^sub>\\<circ> (bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>) = \n      (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (bifunctor_flip (op_cat \\<CC>) \\<BB>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n       )\\<lparr>ArrMap\\<rparr>) =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr>) =\n  (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n\ngoal (4 subgoals):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n 2. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 3. \\<BB> \\<times>\\<^sub>C op_cat \\<CC> =\n    \\<BB> \\<times>\\<^sub>C op_cat \\<CC>\n 4. cat_Set \\<alpha> = cat_Set \\<alpha>", "from op_Hom"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>", "have ArrMap_dom_rhs:\n    \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>) = (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-) :\n  \\<BB> \\<times>\\<^sub>C\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n      op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>) =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>) =\n  (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n\ngoal (4 subgoals):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n 2. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 3. \\<BB> \\<times>\\<^sub>C op_cat \\<CC> =\n    \\<BB> \\<times>\\<^sub>C op_cat \\<CC>\n 4. cat_Set \\<alpha> = cat_Set \\<alpha>", "show \n    \"bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr> =\n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>", "proof(rule vsv_eqI, unfold ObjMap_dom_lhs ObjMap_dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "fix bc"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"bc \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  bc \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                          op_cat \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  bc \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                          op_cat \\<CC>)\\<lparr>Obj\\<rparr>", "obtain b c \n      where bc_def: \"bc = [b, c]\\<^sub>\\<circ>\" and b: \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\" and c: \"c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  bc \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                          op_cat \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>b c.\n        \\<lbrakk>bc = [b, c]\\<^sub>\\<circ>;\n         b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>;\n         c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by \n        (\n          auto \n            elim: cat_prod_2_ObjE[OF \\<GG>.HomDom.category_axioms category_op] \n            simp: cat_op_simps\n        )"], ["proof (state)\nthis:\n  bc = [b, c]\\<^sub>\\<circ>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "from category_axioms assms b c"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show \n      \"bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ObjMap\\<rparr>\\<lparr>bc\\<rparr> =\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>bc\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ObjMap\\<rparr>\\<lparr>bc\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>bc\\<rparr>", "unfolding bc_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. b \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<^esub>\n    c =\n    b \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\\<^esub>\n    c", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_op_simps \n            cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n        )"], ["proof (state)\nthis:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n   )\\<lparr>ObjMap\\<rparr>\\<lparr>bc\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>bc\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Obj\\<rparr>", "qed (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n   )\\<lparr>ObjMap\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-)\\<lparr>ObjMap\\<rparr>\n\ngoal (3 subgoals):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n 2. \\<BB> \\<times>\\<^sub>C op_cat \\<CC> =\n    \\<BB> \\<times>\\<^sub>C op_cat \\<CC>\n 3. cat_Set \\<alpha> = cat_Set \\<alpha>", "show \n    \"bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr> =\n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>", "proof(rule vsv_eqI, unfold ArrMap_dom_lhs ArrMap_dom_rhs)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "fix gf"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"gf \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                          op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                          op_cat \\<CC>)\\<lparr>Arr\\<rparr>", "obtain g f \n      where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" and \"g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\" and \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                          op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>g f.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>;\n         f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by \n        (\n          auto \n            elim: cat_prod_2_ArrE[OF \\<GG>.HomDom.category_axioms category_op] \n            simp: cat_op_simps\n        )"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "obtain a b c d where g: \"g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\" and f: \"f : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\""], ["proof (prove)\nusing this:\n  gf = [g, f]\\<^sub>\\<circ>\n  g \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Arr\\<rparr>\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b c d.\n        \\<lbrakk>g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b;\n         f : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto intro!: is_arrI)"], ["proof (state)\nthis:\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (4 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (\\<BB> \\<times>\\<^sub>C\n                              op_cat\n                               \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       bifunctor_flip (op_cat \\<CC>) \\<BB>\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n        )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n       op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "from category_axioms assms g f"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d", "show \n      \"bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> =\n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<CC>) \\<BB>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n     )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr>", "unfolding gf_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  g : a \\<mapsto>\\<^bsub>\\<BB>\\<^esub> b\n  f : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> d\n\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>bifunctor_flip (op_cat \\<CC>) \\<BB> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<^esub>\n    f =\n    g \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(op_cf \\<GG>-,-)\\<^esub>\n    f", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_op_simps\n            cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n        )"], ["proof (state)\nthis:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n   )\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\\<lparr>gf\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (bifunctor_flip (op_cat \\<CC>) \\<BB>\n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n          )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n         op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>)\n 3. (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr> =\n    (\\<BB> \\<times>\\<^sub>C op_cat \\<CC>)\\<lparr>Arr\\<rparr>", "qed (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  bifunctor_flip (op_cat \\<CC>) \\<BB>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n   )\\<lparr>ArrMap\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  op_cf \\<GG>-,-)\\<lparr>ArrMap\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<BB> \\<times>\\<^sub>C op_cat \\<CC> =\n    \\<BB> \\<times>\\<^sub>C op_cat \\<CC>\n 2. cat_Set \\<alpha> = cat_Set \\<alpha>", "qed (auto intro: cat_cs_intros simp: cat_op_simps)"], ["", "lemmas [cat_cs_simps] = category.cat_bifunctor_flip_cf_rcomp_Hom"], ["", "lemma (in category) cat_bifunctor_flip_cf_lcomp_Hom:\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\"\n  shows \n    \"bifunctor_flip (op_cat \\<BB>) \\<CC> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)) =\n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,op_cf \\<FF>-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<BB>) \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    -,op_cf \\<FF>-)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<BB>) \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    -,op_cf \\<FF>-)", "interpret \\<FF>: is_functor \\<alpha> \\<BB> \\<CC> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<BB>) \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    -,op_cf \\<FF>-)", "note Hom_\\<FF> = \n    category.cat_bifunctor_flip_cf_rcomp_Hom\n      [\n        OF category_op is_functor_op[OF assms], \n        unfolded cat_op_simps, \n        symmetric\n      ]"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<BB> = op_cat \\<BB>; op_cat \\<CC> = op_cat \\<CC>\\<rbrakk>\n  \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    \\<FF>-,-) =\n                    bifunctor_flip \\<CC> ?\\<BB>\n                     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n                                   \\<CC>(\n                     -,op_cf \\<FF>-)\n\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<BB>) \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    -,op_cf \\<FF>-)", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>", "show ?thesis"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. bifunctor_flip (op_cat \\<BB>) \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    -,op_cf \\<FF>-)", "by (subst Hom_\\<FF>)\n      (\n        cs_concl \n          cs_simp: cat_cs_simps cat_op_simps \n          cs_intro: cat_cs_intros cat_op_intros\n      )+"], ["proof (state)\nthis:\n  bifunctor_flip (op_cat \\<BB>) \\<CC>\n   Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n  -,op_cf \\<FF>-)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_bifunctor_flip_cf_lcomp_Hom"], ["", "subsection\\<open>Projections of the \\<open>Hom\\<close>-functor\\<close>"], ["", "text\\<open>\nThe projections of the \\<open>Hom\\<close>-functor coincide with the definitions\nof the \\<open>Hom\\<close>-functor given in Chapter II-2 in \\cite{mac_lane_categories_2010}.\nThey are also exposed in the aforementioned article in \nnLab \\cite{noauthor_nlab_nodate}\\footnote{\\url{\nhttps://ncatlab.org/nlab/show/hom-functor\n}}.\n\\<close>"], ["", "subsubsection\\<open>Definitions and elementary properties\\<close>"], ["", "definition cf_Hom_snd :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<index>_'(/_,-/')\\<close>)\n  where \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\\<^sub>C\\<^sub>F\""], ["", "definition cf_Hom_fst :: \"V \\<Rightarrow> V \\<Rightarrow> V \\<Rightarrow> V\" (\\<open>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<index>_'(/-,_/')\\<close>)\n  where \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(-,b)\\<^sub>C\\<^sub>F\""], ["", "subsubsection\\<open>Projections of the \\<open>Hom\\<close>-functor are functors\\<close>"], ["", "lemma (in category) cat_cf_Hom_snd_is_functor:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "from assms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "have a: \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by simp"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "have op_\\<CC>: \"category \\<alpha> (op_cat \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat \\<CC>)", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  category \\<alpha> (op_cat \\<CC>)\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "from op_\\<CC> category_axioms cat_Hom_is_functor a"], ["proof (chain)\npicking this:\n  category \\<alpha> (op_cat \\<CC>)\n  category \\<alpha> \\<CC>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  category \\<alpha> (op_cat \\<CC>)\n  category \\<alpha> \\<CC>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "unfolding cf_Hom_snd_def"], ["proof (prove)\nusing this:\n  category \\<alpha> (op_cat \\<CC>)\n  category \\<alpha> \\<CC>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\\<^sub>C\\<^sub>F :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule bifunctor_proj_snd_is_functor)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in category) cat_cf_Hom_snd_is_functor':\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<beta> = \\<alpha>\" and \"\\<CC>' = \\<CC>\" and \"\\<DD>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<DD>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<DD>'", "using assms(1)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<DD>'", "unfolding assms(2-4)"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule cat_cf_Hom_snd_is_functor)"], ["", "lemmas [cat_cs_intros] = category.cat_cf_Hom_snd_is_functor'"], ["", "lemma (in category) cat_cf_Hom_fst_is_functor:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) : op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "have op_\\<CC>: \"category \\<alpha> (op_cat \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat \\<CC>)", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  category \\<alpha> (op_cat \\<CC>)\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "from op_\\<CC> category_axioms cat_Hom_is_functor assms"], ["proof (chain)\npicking this:\n  category \\<alpha> (op_cat \\<CC>)\n  category \\<alpha> \\<CC>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  category \\<alpha> (op_cat \\<CC>)\n  category \\<alpha> \\<CC>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "unfolding cf_Hom_fst_def"], ["proof (prove)\nusing this:\n  category \\<alpha> (op_cat \\<CC>)\n  category \\<alpha> \\<CC>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(-,b)\\<^sub>C\\<^sub>F :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by (rule bifunctor_proj_fst_is_functor)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) :\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in category) cat_cf_Hom_fst_is_functor':\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"\\<beta> = \\<alpha>\" and \"\\<CC>' = op_cat \\<CC>\" and \"\\<DD>' = cat_Set \\<alpha>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) : \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<DD>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<DD>'", "using assms(1)"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) :\n    \\<CC>' \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<beta>\\<^esub> \\<DD>'", "unfolding assms(2-4)"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by (rule cat_cf_Hom_fst_is_functor)"], ["", "lemmas [cat_cs_intros] = category.cat_cf_Hom_fst_is_functor'"], ["", "subsubsection\\<open>Object maps\\<close>"], ["", "lemma (in category) cat_cf_Hom_snd_ObjMap_vsv[cat_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n         )\\<lparr>ObjMap\\<rparr>)", "unfolding cf_Hom_snd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n          )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\n          \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>)", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n          )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\n          \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>)", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemmas [cat_cs_intros] = category.cat_cf_Hom_snd_ObjMap_vsv"], ["", "lemma (in category) cat_cf_Hom_fst_ObjMap_vsv[cat_cs_intros]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n         )\\<lparr>ObjMap\\<rparr>)", "unfolding cf_Hom_fst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n          )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(-,b)\n          \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>)", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n          )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(-,b)\n          \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>)", "by\n    (\n      cs_concl \n        cs_simp: cat_prod_cs_simps cat_cs_simps\n        cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n    )"], ["", "lemmas [cat_cs_intros] = category.cat_cf_Hom_fst_ObjMap_vsv"], ["", "lemma (in category) cat_cf_Hom_snd_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ObjMap\\<rparr>) = \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    \\<CC>\\<lparr>Obj\\<rparr>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    \\<CC>\\<lparr>Obj\\<rparr>", "unfolding cf_Hom_snd_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\n       \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>) =\n    \\<CC>\\<lparr>Obj\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemmas [cat_cs_simps] = category.cat_cf_Hom_snd_ObjMap_vdomain"], ["", "lemma (in category) cat_cf_Hom_fst_ObjMap_vdomain[cat_cs_simps]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ObjMap\\<rparr>) = op_cat \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n      )\\<lparr>ObjMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Obj\\<rparr>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n      )\\<lparr>ObjMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Obj\\<rparr>", "unfolding cf_Hom_fst_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(-,b)\n       \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Obj\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemmas [cat_cs_simps] = category.cat_cf_Hom_fst_ObjMap_vdomain"], ["", "lemma (in category) cat_cf_Hom_snd_ObjMap_app[cat_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom \\<CC> a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom \\<CC> a b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom \\<CC> a b", "from assms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "have ab: \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                         \\<CC>)\\<lparr>Obj\\<rparr>", "by (intro cat_prod_2_ObjI) (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  [a, b]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom \\<CC> a b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom \\<CC> a b", "unfolding \n      cf_Hom_snd_def\n      bifunctor_proj_snd_ObjMap_app[OF category_op category_axioms ab]\n      cf_Hom_ObjMap_app[OF ab]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom \\<CC> a b = Hom \\<CC> a b", ".."], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom \\<CC> a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_cf_Hom_snd_ObjMap_app"], ["", "lemma (in category) cat_cf_Hom_fst_ObjMap_app[cat_cs_simps]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = Hom \\<CC> a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = Hom \\<CC> a b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = Hom \\<CC> a b", "from assms"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>", "have ab: \"[a, b]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. [a, b]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                         \\<CC>)\\<lparr>Obj\\<rparr>", "by (intro cat_prod_2_ObjI) (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  [a, b]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = Hom \\<CC> a b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = Hom \\<CC> a b", "unfolding \n      cf_Hom_fst_def\n      bifunctor_proj_fst_ObjMap_app[OF category_op category_axioms ab]\n      cf_Hom_ObjMap_app[OF ab]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom \\<CC> a b = Hom \\<CC> a b", ".."], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = Hom \\<CC> a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_cf_Hom_fst_ObjMap_app"], ["", "subsubsection\\<open>Arrow maps\\<close>"], ["", "lemma (in category) cat_cf_Hom_snd_ArrMap_vsv[cat_cs_intros]:\n  assumes \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n         )\\<lparr>ArrMap\\<rparr>)", "unfolding cf_Hom_snd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n          )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\n          \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>)", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n          )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\n          \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>)", "by\n    (\n      cs_concl \n        cs_simp: cat_cs_simps \n        cs_intro: bifunctor_proj_snd_ArrMap_vsv cat_cs_intros cat_op_intros\n    )"], ["", "lemmas [cat_cs_intros] = category.cat_cf_Hom_snd_ArrMap_vsv"], ["", "lemma (in category) cat_cf_Hom_fst_ArrMap_vsv[cat_cs_intros]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n         )\\<lparr>ArrMap\\<rparr>)", "unfolding cf_Hom_fst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n          )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(-,b)\n          \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>)", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n          )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(-,b)\n          \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>)", "by\n    (\n      cs_concl \n        cs_simp: cat_cs_simps\n        cs_intro: bifunctor_proj_fst_ArrMap_vsv cat_cs_intros cat_op_intros\n    )"], ["", "lemmas [cat_cs_intros] = category.cat_cf_Hom_fst_ArrMap_vsv"], ["", "lemma (in category) cat_cf_Hom_snd_ArrMap_vdomain[cat_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ArrMap\\<rparr>) = \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    \\<CC>\\<lparr>Arr\\<rparr>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    \\<CC>\\<lparr>Arr\\<rparr>", "unfolding cf_Hom_snd_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\n       \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>) =\n    \\<CC>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemmas [cat_cs_simps] = category.cat_cf_Hom_snd_ArrMap_vdomain"], ["", "lemma (in category) cat_cf_Hom_fst_ArrMap_vdomain[cat_cs_simps]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ArrMap\\<rparr>) = op_cat \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n      )\\<lparr>ArrMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Arr\\<rparr>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n      )\\<lparr>ArrMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Arr\\<rparr>", "unfolding cf_Hom_fst_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(-,b)\n       \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemmas [cat_cs_simps] = category.cat_cf_Hom_fst_ArrMap_vdomain"], ["", "lemma (in category) cat_cf_Hom_snd_ArrMap_app[cat_cs_simps]:\n  assumes \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" and \"f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = cf_hom \\<CC> [op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, f]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, f]\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, f]\\<^sub>\\<circ>", "from assms(2)"], ["proof (chain)\npicking this:\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'", "have f: \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by (simp add: cat_cs_intros)"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, f]\\<^sub>\\<circ>", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'", "show ?thesis"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, f]\\<^sub>\\<circ>", "unfolding \n      cf_Hom_snd_def\n      bifunctor_proj_snd_ArrMap_app[OF category_op category_axioms assms(1) f]\n      cat_op_simps"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    f =\n    cf_hom \\<CC>\n     [\\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, f]\\<^sub>\\<circ>", "by \n      (\n        cs_concl \n          cs_simp: cat_cs_simps \n          cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n      )"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  cf_hom \\<CC>\n   [op_cat \\<CC>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr>, f]\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_cf_Hom_snd_ArrMap_app"], ["", "lemma (in category) cat_cf_Hom_fst_ArrMap_app[cat_cs_simps]:\n  assumes \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> a'\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = cf_hom \\<CC> [f, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>]\\<^sub>\\<circ>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [f, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>]\\<^sub>\\<circ>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [f, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>]\\<^sub>\\<circ>", "from assms(2)"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> a'", "have f: \"f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> a'\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>", "by (simp add: cat_cs_intros)"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [f, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>]\\<^sub>\\<circ>", "with category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> a'\n  f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> a'\n  f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    cf_hom \\<CC>\n     [f, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>]\\<^sub>\\<circ>", "unfolding \n      cf_Hom_fst_def\n      bifunctor_proj_fst_ArrMap_app[OF category_op category_axioms assms(1) f]"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> a'\n  f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. f \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n    cf_hom \\<CC>\n     [f, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>]\\<^sub>\\<circ>", "by \n      (\n        cs_concl \n          cs_simp: cat_cs_simps \n          cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n      )"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  cf_hom \\<CC> [f, \\<CC>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr>]\\<^sub>\\<circ>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_cf_Hom_fst_ArrMap_app"], ["", "subsubsection\\<open>Opposite \\<open>Hom\\<close>-functor projections\\<close>"], ["", "lemma (in category) cat_op_cat_cf_Hom_snd:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)", "proof(rule cf_eqI[of \\<alpha>])"], ["proof (state)\ngoal (6 subgoals):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-) :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>\n 4. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "from assms category_axioms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>", "show \n    \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-) : op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by\n      (\n        cs_concl \n          cs_simp: cat_cs_simps cat_op_simps   \n          cs_intro: cat_cs_intros cat_op_intros\n      )"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-) :\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (5 subgoals):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "from assms category_axioms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>", "show \n    \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) : op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by\n      (\n        cs_concl \n          cs_simp: cat_cs_simps cat_op_simps   \n          cs_intro: cat_cs_intros cat_op_intros\n      )"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) :\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (4 subgoals):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\n 3. op_cat \\<CC> = op_cat \\<CC>\n 4. cat_Set \\<alpha> = cat_Set \\<alpha>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ObjMap\\<rparr> = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n         )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n         )\\<lparr>ObjMap\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n      )\\<lparr>ObjMap\\<rparr>)\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n        \\<CC>(\n                                a,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>aa\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>aa\\<rparr>", "from assms category_axioms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>", "show \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n         )\\<lparr>ObjMap\\<rparr>)", "by (intro is_functor.cf_ObjMap_vsv)\n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_op_simps \n            cs_intro: cat_cs_intros cat_op_intros\n        )"], ["proof (state)\nthis:\n  vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ObjMap\\<rparr>)\n\ngoal (3 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n         )\\<lparr>ObjMap\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n      )\\<lparr>ObjMap\\<rparr>)\n 3. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n        \\<CC>(\n                                a,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>aa\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>aa\\<rparr>", "from assms category_axioms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>", "show \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n         )\\<lparr>ObjMap\\<rparr>)", "by (intro is_functor.cf_ObjMap_vsv)\n        (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ObjMap\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n      )\\<lparr>ObjMap\\<rparr>)\n 2. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n        \\<CC>(\n                                a,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>aa\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>aa\\<rparr>", "from assms category_axioms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>", "show \n      \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ObjMap\\<rparr>) = \\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n      )\\<lparr>ObjMap\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n      )\\<lparr>ObjMap\\<rparr>)", "by\n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_op_simps   \n            cs_intro: cat_cs_intros cat_op_intros\n        )"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>) =\n  \\<D>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n        \\<CC>(\n                                a,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>aa\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>aa\\<rparr>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n      if \"b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ObjMap\\<rparr>)\" for b"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n  \\<CC>(\n                          a,-)\\<lparr>ObjMap\\<rparr>)", "have \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n  \\<CC>(\n                          a,-)\\<lparr>ObjMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "by \n          (\n            simp add: \n              category.cat_cf_Hom_snd_ObjMap_vdomain[\n                OF category_op, unfolded cat_op_simps, OF assms\n                ]\n          )"], ["proof (state)\nthis:\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "from category_axioms assms this"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show ?thesis"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cat_op_simps cs_intro: cat_op_intros)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?b \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n   \\<CC>(\n                           a,-)\\<lparr>ObjMap\\<rparr>) \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n  )\\<lparr>ObjMap\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ObjMap\\<rparr>\n\ngoal (3 subgoals):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\n 2. op_cat \\<CC> = op_cat \\<CC>\n 3. cat_Set \\<alpha> = cat_Set \\<alpha>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ArrMap\\<rparr> = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n         )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n         )\\<lparr>ArrMap\\<rparr>)\n 3. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n      )\\<lparr>ArrMap\\<rparr>)\n 4. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n        \\<CC>(\n                                a,-)\\<lparr>ArrMap\\<rparr>) \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>aa\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>aa\\<rparr>", "from assms category_axioms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>", "show \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n         )\\<lparr>ArrMap\\<rparr>)", "by (intro is_functor.cf_ArrMap_vsv)\n        (cs_concl cs_intro: cat_cs_intros cat_op_intros)"], ["proof (state)\nthis:\n  vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ArrMap\\<rparr>)\n\ngoal (3 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n         )\\<lparr>ArrMap\\<rparr>)\n 2. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n      )\\<lparr>ArrMap\\<rparr>)\n 3. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n        \\<CC>(\n                                a,-)\\<lparr>ArrMap\\<rparr>) \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>aa\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>aa\\<rparr>", "from assms category_axioms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>", "show \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n         )\\<lparr>ArrMap\\<rparr>)", "by (intro is_functor.cf_ArrMap_vsv)\n        (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ArrMap\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n      )\\<lparr>ArrMap\\<rparr>)\n 2. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n        \\<CC>(\n                                a,-)\\<lparr>ArrMap\\<rparr>) \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>aa\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>aa\\<rparr>", "from assms category_axioms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>", "show \n      \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ArrMap\\<rparr>) = \\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n      )\\<lparr>ArrMap\\<rparr>) =\n    \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n      )\\<lparr>ArrMap\\<rparr>)", "by (cs_concl cs_simp: cat_cs_simps cat_op_simps cs_intro: cat_op_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>) =\n  \\<D>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                               (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n        \\<CC>(\n                                a,-)\\<lparr>ArrMap\\<rparr>) \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>aa\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>aa\\<rparr>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\"\n      if \"f \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-)\\<lparr>ArrMap\\<rparr>)\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from that"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n  \\<CC>(\n                          a,-)\\<lparr>ArrMap\\<rparr>)", "have \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n  \\<CC>(\n                          a,-)\\<lparr>ArrMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "by \n          (\n            simp add: \n              category.cat_cf_Hom_snd_ArrMap_vdomain[\n                OF category_op, unfolded cat_op_simps, OF assms\n                ]\n          )"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "obtain a b where \"f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "from category_axioms assms this"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b", "show ?thesis"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  f : a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by \n          (\n            cs_concl\n              cs_simp: cat_cs_simps cat_op_simps \n              cs_intro: cat_cs_intros cat_op_intros\n          )"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n   \\<CC>(\n                           a,-)\\<lparr>ArrMap\\<rparr>) \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(a,-\n  )\\<lparr>ArrMap\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ArrMap\\<rparr>\n\ngoal (2 subgoals):\n 1. op_cat \\<CC> = op_cat \\<CC>\n 2. cat_Set \\<alpha> = cat_Set \\<alpha>", "qed simp_all"], ["", "lemmas [cat_op_simps] = category.cat_op_cat_cf_Hom_snd"], ["", "lemma (in category) cat_op_cat_cf_Hom_fst:\n  assumes \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)", "from assms"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "have a: \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "."], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)", "have \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat (op_cat \\<CC>)(a,-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n                  (op_cat \\<CC>)(\n    a,-)", "unfolding cat_op_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)", ".."], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat (op_cat \\<CC>)(\n  a,-)\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)", "also"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat (op_cat \\<CC>)(\n  a,-)\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)", "have \"\\<dots> = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>(op_cat \\<CC>)(-,a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat\n                  (op_cat \\<CC>)(\n    a,-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(\n    -,a)", "unfolding category.cat_op_cat_cf_Hom_snd[OF category_op a]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a)", "by simp"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat (op_cat \\<CC>)(\n  a,-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a\n  )\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)", "finally"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a)", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>(op_cat \\<CC>)(-,a) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\""], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a)\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)", "by simp"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>op_cat \\<CC>(-,a) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_op_simps] = category.cat_op_cat_cf_Hom_fst"], ["", "subsubsection\\<open>\\<open>Hom\\<close>-functors are injections on objects\\<close>"], ["", "lemma (in category) cat_cf_Hom_snd_inj:\n  assumes \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-)\" \n    and \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n    and \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "assume prems: \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "from assms(1)"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-)", "have \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\""], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-)\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by simp"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "have \"Hom \\<CC> a b = Hom \\<CC> b b\""], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom \\<CC> a b = Hom \\<CC> b b", "unfolding \n      cat_cf_Hom_snd_ObjMap_app[unfolded cat_op_simps, OF assms(2,3)]\n      cat_cf_Hom_snd_ObjMap_app[unfolded cat_op_simps, OF assms(3,3)]"], ["proof (prove)\nusing this:\n  Hom \\<CC> a b = Hom \\<CC> b b\n\ngoal (1 subgoal):\n 1. Hom \\<CC> a b = Hom \\<CC> b b", "by simp"], ["proof (state)\nthis:\n  Hom \\<CC> a b = Hom \\<CC> b b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "with assms prems"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-)\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  a \\<noteq> b\n  Hom \\<CC> a b = Hom \\<CC> b b", "show False"], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-)\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  a \\<noteq> b\n  Hom \\<CC> a b = Hom \\<CC> b b\n\ngoal (1 subgoal):\n 1. False", "by (force intro: cat_cs_intros)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in category) cat_cf_Hom_fst_inj:\n  assumes \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\" and \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" and \"b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "assume prems: \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "from assms(1)"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)", "have \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\""], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by simp"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "have \"Hom \\<CC> b a = Hom \\<CC> b b\""], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom \\<CC> b a = Hom \\<CC> b b", "unfolding \n      cat_cf_Hom_fst_ObjMap_app[unfolded cat_op_simps, OF assms(2,3)]\n      cat_cf_Hom_fst_ObjMap_app[unfolded cat_op_simps, OF assms(3,3)]"], ["proof (prove)\nusing this:\n  Hom \\<CC> b a = Hom \\<CC> b b\n\ngoal (1 subgoal):\n 1. Hom \\<CC> b a = Hom \\<CC> b b", "by simp"], ["proof (state)\nthis:\n  Hom \\<CC> b a = Hom \\<CC> b b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "with assms prems"], ["proof (chain)\npicking this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  a \\<noteq> b\n  Hom \\<CC> b a = Hom \\<CC> b b", "show False"], ["proof (prove)\nusing this:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a) =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,b)\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  a \\<noteq> b\n  Hom \\<CC> b a = Hom \\<CC> b b\n\ngoal (1 subgoal):\n 1. False", "by (force intro: cat_cs_intros)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>\\<open>Hom\\<close>-functor is an array bifunctor\\<close>"], ["", "lemma (in category) cat_cf_Hom_is_cf_array:\n  \\<comment>\\<open>See Chapter II-3 in \\cite{mac_lane_categories_2010}.\\<close>\n  \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>) (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)", "proof(rule cf_eqI[of \\<alpha>])"], ["proof (state)\ngoal (6 subgoals):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<BB>\n 2. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 4. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 5. ?\\<AA> = ?\\<CC>\n 6. ?\\<BB> = ?\\<DD>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) : op_cat \\<CC> \\<times>\\<^sub>C \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule cat_Hom_is_functor)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "have c1: \"category \\<alpha> (op_cat \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (op_cat \\<CC>)", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  category \\<alpha> (op_cat \\<CC>)\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "have c2: \"category \\<alpha> \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> \\<CC>", "by (auto intro: cat_cs_intros)"], ["proof (state)\nthis:\n  category \\<alpha> \\<CC>\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "have c3: \"category \\<alpha> (cat_Set \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_Set \\<alpha>)", "by (simp add: category_cat_Set)"], ["proof (state)\nthis:\n  category \\<alpha> (cat_Set \\<alpha>)\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "have c4: \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c) : op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\"\n    if \"c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" for c"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "using that"], ["proof (prove)\nusing this:\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by (rule cat_cf_Hom_fst_is_functor)"], ["proof (state)\nthis:\n  ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,?c) :\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "have c5: \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-) : \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\"\n    if \"b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" for b"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "using that"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-) :\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule cat_cf_Hom_snd_is_functor)"], ["proof (state)\nthis:\n  ?b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(?b,-) :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "have c6: \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-)\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr> = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c)\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\"\n    if \"b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" and \"c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\" for b c"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "using that category_axioms"], ["proof (prove)\nusing this:\n  b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>c\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<lbrakk>?b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>;\n   ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b,-)\\<lparr>ObjMap\\<rparr>\\<lparr>?c\\<rparr> =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c)\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "have c7: \n    \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b',-)\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n      Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c' )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,- )\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>\"\n    if \"f : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\" and \"g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\" for b c  b'  c' f g"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b',-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c'\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>", "using that category_axioms"], ["proof (prove)\nusing this:\n  f : b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b'\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b',-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c'\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>", "unfolding cat_op_simps"], ["proof (prove)\nusing this:\n  f : b' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b\n  g : c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> c'\n  category \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b',-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,c'\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(b,-\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>g\\<rparr>", "by \n      (\n        cs_concl \n          cs_simp: cat_cs_simps cat_op_simps \n          cs_intro: cat_cs_intros cat_op_intros\n      )"], ["proof (state)\nthis:\n  \\<lbrakk>?f : ?b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> ?b';\n   ?g : ?c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c'\\<rbrakk>\n  \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b',-\n                    )\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c)\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c'\n                    )\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b,-)\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr>\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "let ?cfa =\n    \\<open>cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>) (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)\\<close>"], ["proof (state)\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "note cf_array_specification = \n    cf_array_specification[OF c1 c2 c3 c4 c5 c6 c7, simplified]"], ["proof (state)\nthis:\n  cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n   (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  \\<lbrakk>?b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>;\n   ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?b \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>) (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)\\<^esub>\n                    ?c =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c)\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n  \\<lbrakk>?b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>;\n   ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?b \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>) (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)\\<^esub>\n                    ?c =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b,-)\\<lparr>ObjMap\\<rparr>\\<lparr>?c\\<rparr>\n  \\<lbrakk>?f : ?a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> ?b;\n   ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?f \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>) (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)\\<^esub>\n                    \\<CC>\\<lparr>CId\\<rparr>\\<lparr>?c\\<rparr> =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c)\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr>\n  \\<lbrakk>?g : ?a \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?b;\n   ?c \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> op_cat\n                     \\<CC>\\<lparr>CId\\<rparr>\\<lparr>?c\\<rparr> \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>) (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)\\<^esub>\n                    ?g =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?c,-)\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr>\n\ngoal (5 subgoals):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> ?\\<DD>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 3. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 4. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> = ?\\<CC>\n 5. cat_Set \\<alpha> = ?\\<DD>", "from c1 c2 c3 c4 c5 c6 c7"], ["proof (chain)\npicking this:\n  category \\<alpha> (op_cat \\<CC>)\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)\n  ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,?c) :\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  ?b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(?b,-) :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  \\<lbrakk>?b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>;\n   ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b,-)\\<lparr>ObjMap\\<rparr>\\<lparr>?c\\<rparr> =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c)\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n  \\<lbrakk>?f : ?b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> ?b';\n   ?g : ?c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c'\\<rbrakk>\n  \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b',-\n                    )\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c)\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c'\n                    )\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b,-)\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr>", "show \"?cfa : op_cat \\<CC> \\<times>\\<^sub>C \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\nusing this:\n  category \\<alpha> (op_cat \\<CC>)\n  category \\<alpha> \\<CC>\n  category \\<alpha> (cat_Set \\<alpha>)\n  ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,?c) :\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  ?b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(?b,-) :\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n  \\<lbrakk>?b \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>;\n   ?c \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b,-)\\<lparr>ObjMap\\<rparr>\\<lparr>?c\\<rparr> =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c)\\<lparr>ObjMap\\<rparr>\\<lparr>?b\\<rparr>\n  \\<lbrakk>?f : ?b \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> ?b';\n   ?g : ?c \\<mapsto>\\<^bsub>\\<CC>\\<^esub> ?c'\\<rbrakk>\n  \\<Longrightarrow> Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b',-\n                    )\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c)\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> =\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    -,?c'\n                    )\\<lparr>ArrMap\\<rparr>\\<lparr>?f\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_Set \\<alpha>\\<^esub>\n                    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n                    ?b,-)\\<lparr>ArrMap\\<rparr>\\<lparr>?g\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n    op_cat \\<CC> \\<times>\\<^sub>C\n    \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                        \\<alpha>", "by (rule cf_array_is_functor)"], ["proof (state)\nthis:\n  cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n   (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>) :\n  op_cat \\<CC> \\<times>\\<^sub>C\n  \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (4 subgoals):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n 2. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 3. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> =\n    op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 4. cat_Set \\<alpha> = cat_Set \\<alpha>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr> = ?cfa\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>", "proof(rule vsv_eqI, unfold cat_cs_simps)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "fix aa'"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"aa' \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  aa'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  aa'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>", "obtain a a' \n      where aa'_def: \"aa' = [a, a']\\<^sub>\\<circ>\" \n        and a: \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\" \n        and a': \"a' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  aa'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a a'.\n        \\<lbrakk>aa' = [a, a']\\<^sub>\\<circ>;\n         a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>;\n         a' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_ObjE[OF c1 c2])"], ["proof (state)\nthis:\n  aa' = [a, a']\\<^sub>\\<circ>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  a' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "from category_axioms a a'"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  a' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>", "show \n      \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ObjMap\\<rparr>\\<lparr>aa'\\<rparr> = ?cfa\\<lparr>ObjMap\\<rparr>\\<lparr>aa'\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n  a' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>aa'\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\\<lparr>aa'\\<rparr>", "unfolding aa'_def cf_array_specification(2)[OF a a'] cat_op_simps"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n  a' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>O\\<^bsub>Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<^esub>\n    a' =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,a'\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cs_intro: cat_op_intros cat_prod_cs_intros\n        )"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>aa'\\<rparr> =\n  cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n   (cf_Hom_fst \\<alpha> \\<CC>)\n   (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\\<lparr>aa'\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ObjMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Obj\\<rparr>", "qed (auto simp: cf_array_ObjMap_vsv cf_Hom_ObjMap_vsv cat_cs_simps)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ObjMap\\<rparr> =\n  cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n   (cf_Hom_fst \\<alpha> \\<CC>)\n   (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ObjMap\\<rparr>\n\ngoal (3 subgoals):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n 2. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> =\n    op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 3. cat_Set \\<alpha> = cat_Set \\<alpha>", "show \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\\<lparr>ArrMap\\<rparr> = ?cfa\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<lparr>ArrMap\\<rparr> =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>", "proof(rule vsv_eqI, unfold cat_cs_simps)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cf_hom \\<CC> a =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "fix ff'"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cf_hom \\<CC> a =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"ff' \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  ff'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Arr\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cf_hom \\<CC> a =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  ff'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Arr\\<rparr>", "obtain f f' \n      where ff'_def: \"ff' = [f, f']\\<^sub>\\<circ>\" \n        and f: \"f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>\" \n        and f': \"f' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  ff'\n  \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                       \\<CC>)\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>f f'.\n        \\<lbrakk>ff' = [f, f']\\<^sub>\\<circ>;\n         f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>;\n         f' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_prod_2_ArrE[OF c1 c2])"], ["proof (state)\nthis:\n  ff' = [f, f']\\<^sub>\\<circ>\n  f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>\n  f' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cf_hom \\<CC> a =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  ff' = [f, f']\\<^sub>\\<circ>\n  f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>\n  f' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "obtain a b a' b' \n      where f: \"f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\" and f': \"f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\""], ["proof (prove)\nusing this:\n  ff' = [f, f']\\<^sub>\\<circ>\n  f \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Arr\\<rparr>\n  f' \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a b a' b'.\n        \\<lbrakk>f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b;\n         f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast intro: is_arrI)"], ["proof (state)\nthis:\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (4 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> (op_cat \\<CC> \\<times>\\<^sub>C\n                              \\<CC>)\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cf_hom \\<CC> a =\n       cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n        (cf_Hom_fst \\<alpha> \\<CC>)\n        (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "from category_axioms f f'"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'", "show \"cf_hom \\<CC> ff' = ?cfa\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  f : a \\<mapsto>\\<^bsub>op_cat \\<CC>\\<^esub> b\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> ff' =\n    cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n     (cf_Hom_fst \\<alpha> \\<CC>)\n     (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>", "unfolding ff'_def cat_op_simps"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  f : b \\<mapsto>\\<^bsub>\\<CC>\\<^esub> a\n  f' : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. cf_hom \\<CC> [f, f']\\<^sub>\\<circ> =\n    f \\<otimes>\\<^sub>H\\<^sub>M\\<^sub>.\\<^sub>A\\<^bsub>cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>) (cf_Hom_fst \\<alpha> \\<CC>) (cf_Hom_snd \\<alpha> \\<CC>)\\<^esub>\n    f'", "by \n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_op_simps \n            cs_intro: cat_cs_intros cat_op_intros\n        )"], ["proof (state)\nthis:\n  cf_hom \\<CC> ff' =\n  cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n   (cf_Hom_fst \\<alpha> \\<CC>)\n   (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\\<lparr>ff'\\<rparr>\n\ngoal (3 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n         )\\<lparr>ArrMap\\<rparr>)\n 2. vsv (cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n          (cf_Hom_fst \\<alpha> \\<CC>)\n          (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>)\n 3. (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr> =\n    (op_cat \\<CC> \\<times>\\<^sub>C \\<CC>)\\<lparr>Arr\\<rparr>", "qed (auto simp: cf_array_ArrMap_vsv cf_Hom_ArrMap_vsv cat_cs_simps)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n  )\\<lparr>ArrMap\\<rparr> =\n  cf_array (op_cat \\<CC>) \\<CC> (cat_Set \\<alpha>)\n   (cf_Hom_fst \\<alpha> \\<CC>)\n   (cf_Hom_snd \\<alpha> \\<CC>)\\<lparr>ArrMap\\<rparr>\n\ngoal (2 subgoals):\n 1. op_cat \\<CC> \\<times>\\<^sub>C \\<CC> =\n    op_cat \\<CC> \\<times>\\<^sub>C \\<CC>\n 2. cat_Set \\<alpha> = cat_Set \\<alpha>", "qed simp_all"], ["", "subsubsection\\<open>\nProjections of the compositions of a \\<open>Hom\\<close>-functor and a functor are\nprojections of the \\<open>Hom\\<close>-functor\n\\<close>"], ["", "lemma (in category) cat_cf_rcomp_Hom_cf_Hom_snd:\n  assumes \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(a,-)\\<^sub>C\\<^sub>F = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-) \\<circ>\\<^sub>C\\<^sub>F \\<GG>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(a,-)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    ) \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG>", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<GG>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(a,-)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(a,-\n    ) \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG>", "unfolding cf_rcomp_Hom_def cf_Hom_snd_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_cn_cov_rcomp \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n     \\<GG>\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>\n    (a,-)\\<^sub>C\\<^sub>F =\n    (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n     )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(a,-)\n     \\<^sub>C\\<^sub>F) \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n    \\<GG>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemmas [cat_cs_simps] = category.cat_cf_rcomp_Hom_cf_Hom_snd"], ["", "lemma (in category) cat_cf_lcomp_Hom_cf_Hom_snd:\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-)\\<^bsub>op_cat \\<BB>,\\<CC>\\<^esub>(b,-)\\<^sub>C\\<^sub>F = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>,-)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n    )\\<^bsub>op_cat \\<BB>,\\<CC>\\<^esub>(b,-)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>,-)", "using category_axioms assms"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\\<FF>-,-\n    )\\<^bsub>op_cat \\<BB>,\\<CC>\\<^esub>(b,-)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>,-)", "unfolding cf_lcomp_Hom_def cf_Hom_snd_def"], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cf_cn_cov_lcomp \\<CC>\n     Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-)\n     \\<FF>\\<^bsub>op_cat \\<BB>,\\<CC>\\<^esub>\n    (b,-)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,-\n    )\\<^bsub>op_cat \\<CC>,\\<CC>\\<^esub>(\n    \\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>,-)\\<^sub>C\\<^sub>F", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)"], ["", "lemmas [cat_cs_simps] = category.cat_cf_lcomp_Hom_cf_Hom_snd"], ["", "lemma (in category) cat_cf_rcomp_Hom_cf_Hom_fst:\n  assumes \"\\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\" and \"b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\"\n  shows \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F = Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have H\\<FF>b:\n    \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F : op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n  )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F :\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have H\\<FF>b':\n    \"Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>) : op_cat \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>) :\n    op_cat\n     \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set\n                         \\<alpha>", "by (cs_concl cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>) :\n  op_cat\n   \\<CC> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_Set \\<alpha>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have [cat_cs_simps]:\n    \"\\<D>\\<^sub>\\<circ> ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>) = op_cat \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n       )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n       \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Obj\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)+"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>) =\n  op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have [cat_cs_simps]:\n    \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>) = op_cat \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n      -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n      )\\<lparr>ObjMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Obj\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>) =\n  op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have [cat_cs_simps]:\n    \"\\<D>\\<^sub>\\<circ> ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>) = op_cat \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n       )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n       \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros cat_op_intros)+"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>) =\n  op_cat \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "have [cat_cs_simps]:\n    \"\\<D>\\<^sub>\\<circ> (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>) = op_cat \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n      -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n      )\\<lparr>ArrMap\\<rparr>) =\n    op_cat \\<CC>\\<lparr>Arr\\<rparr>", "by (cs_concl cs_simp: cat_cs_simps cs_intro: cat_cs_intros)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ>\n   (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>) =\n  op_cat \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n    )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)", "proof(rule cf_eqI[OF H\\<FF>b H\\<FF>b'])"], ["proof (state)\ngoal (4 subgoals):\n 1. (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>\n 2. (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 3. op_cat \\<CC> = op_cat \\<CC>\n 4. cat_Set \\<alpha> = cat_Set \\<alpha>", "show \n      \"(Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr> = \n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>", "proof(rule vsv_eqI, unfold cat_cs_simps)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n          )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n          \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n         -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n         )\\<lparr>ObjMap\\<rparr>)\n 3. op_cat \\<CC>\\<lparr>Obj\\<rparr> = op_cat \\<CC>\\<lparr>Obj\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> op_cat\n                              \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "show \n        \"vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n          )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n          \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>)", "by (intro bifunctor_proj_fst_ObjMap_vsv[of \\<alpha>]) \n          (cs_concl cs_intro: cat_cs_intros)+"], ["proof (state)\nthis:\n  vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>)\n\ngoal (3 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n         -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n         )\\<lparr>ObjMap\\<rparr>)\n 2. op_cat \\<CC>\\<lparr>Obj\\<rparr> = op_cat \\<CC>\\<lparr>Obj\\<rparr>\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> op_cat\n                              \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "show \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n         -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n         )\\<lparr>ObjMap\\<rparr>)", "by (intro cat_cf_Hom_fst_ObjMap_vsv)\n          (cs_concl cs_intro: cat_cs_intros)+"], ["proof (state)\nthis:\n  vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ObjMap\\<rparr>)\n\ngoal (2 subgoals):\n 1. op_cat \\<CC>\\<lparr>Obj\\<rparr> = op_cat \\<CC>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> op_cat\n                              \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. op_cat \\<CC>\\<lparr>Obj\\<rparr> = op_cat \\<CC>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> op_cat\n                              \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "assume prems: \"a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (2 subgoals):\n 1. op_cat \\<CC>\\<lparr>Obj\\<rparr> = op_cat \\<CC>\\<lparr>Obj\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> op_cat\n                              \\<CC>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "with category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>", "show \n        \"(Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> = \n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  a \\<in>\\<^sub>\\<circ> op_cat \\<CC>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n    )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>", "by \n          (\n            cs_concl \n              cs_simp: cat_cs_simps \n              cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n   )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n   \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n  )\\<lparr>ObjMap\\<rparr>\\<lparr>a\\<rparr>\n\ngoal (1 subgoal):\n 1. op_cat \\<CC>\\<lparr>Obj\\<rparr> = op_cat \\<CC>\\<lparr>Obj\\<rparr>", "qed simp"], ["proof (state)\nthis:\n  (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n   )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n   \\<^sub>C\\<^sub>F)\\<lparr>ObjMap\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ObjMap\\<rparr>\n\ngoal (3 subgoals):\n 1. (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>\n 2. op_cat \\<CC> = op_cat \\<CC>\n 3. cat_Set \\<alpha> = cat_Set \\<alpha>", "show \n      \"(Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr> = \n        Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>", "proof(rule vsv_eqI, unfold cat_cs_simps cat_op_simps)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n          )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n          \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>)\n 2. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n         -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n         )\\<lparr>ArrMap\\<rparr>)\n 3. \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "from category_axioms assms"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "show \n        \"vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n          )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n          \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>)", "by (intro bifunctor_proj_fst_ArrMap_vsv[of \\<alpha>]) \n          (cs_concl cs_intro: cat_cs_intros)+"], ["proof (state)\nthis:\n  vsv ((Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>)\n\ngoal (3 subgoals):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n         -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n         )\\<lparr>ArrMap\\<rparr>)\n 2. \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>", "show \"vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n         -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n         )\\<lparr>ArrMap\\<rparr>)", "by (intro cat_cf_Hom_fst_ArrMap_vsv)\n          (cs_concl cs_intro: cat_cs_intros)+"], ["proof (state)\nthis:\n  vsv (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ArrMap\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "assume \"f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>", "obtain a' b' where \"f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>a' b'.\n        f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: cat_op_simps)"], ["proof (state)\nthis:\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (2 subgoals):\n 1. \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>\n 2. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<CC>\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n        )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n        \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr> =\n       Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n       -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n       )\\<lparr>ArrMap\\<rparr>\\<lparr>a\\<rparr>", "from category_axioms assms this"], ["proof (chain)\npicking this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'", "show \n        \"(Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-)\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> = \n          Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\""], ["proof (prove)\nusing this:\n  category \\<alpha> \\<CC>\n  \\<FF> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n  b \\<in>\\<^sub>\\<circ> \\<BB>\\<lparr>Obj\\<rparr>\n  f : a' \\<mapsto>\\<^bsub>\\<CC>\\<^esub> b'\n\ngoal (1 subgoal):\n 1. (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n     )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n     \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n    Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n    -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n    )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>", "by \n          (\n            cs_concl \n              cs_simp: cat_cs_simps cat_op_simps \n              cs_intro: cat_cs_intros cat_op_intros cat_prod_cs_intros\n          )"], ["proof (state)\nthis:\n  (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n   )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n   \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>\n  )\\<lparr>ArrMap\\<rparr>\\<lparr>f\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<CC>\\<lparr>Arr\\<rparr> = \\<CC>\\<lparr>Arr\\<rparr>", "qed simp"], ["proof (state)\nthis:\n  (Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n   )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\n   \\<^sub>C\\<^sub>F)\\<lparr>ArrMap\\<rparr> =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\\<lparr>ArrMap\\<rparr>\n\ngoal (2 subgoals):\n 1. op_cat \\<CC> = op_cat \\<CC>\n 2. cat_Set \\<alpha> = cat_Set \\<alpha>", "qed simp_all"], ["proof (state)\nthis:\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(-,\\<FF>-\n  )\\<^bsub>op_cat \\<CC>,\\<BB>\\<^esub>(-,b)\\<^sub>C\\<^sub>F =\n  Hom\\<^sub>O\\<^sub>.\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\\<CC>(\n  -,\\<FF>\\<lparr>ObjMap\\<rparr>\\<lparr>b\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [cat_cs_simps] = category.cat_cf_rcomp_Hom_cf_Hom_fst"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}