{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_SemiCAT.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma cat_SemiCAT_components:\n  shows \"cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr> = set {\\<CC>. semicategory \\<alpha> \\<CC>}\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr> = all_smcfs \\<alpha>\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>. \\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>. \\<FF>\\<lparr>HomCod\\<rparr>)\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> = \n      (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (dg_SemiCAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr> = (\\<lambda>\\<CC>\\<in>\\<^sub>\\<circ>set {\\<CC>. semicategory \\<alpha> \\<CC>}. smcf_id \\<CC>)\"", "lemma cat_smc_SemiCAT: \"cat_smc (cat_SemiCAT \\<alpha>) = smc_SemiCAT \\<alpha>\"", "lemmas_with [folded cat_smc_SemiCAT, unfolded slicing_simps]: \n  \\<comment>\\<open>Digraph\\<close>\n  cat_SemiCAT_ObjI = smc_SemiCAT_ObjI\n  and cat_SemiCAT_ObjD = smc_SemiCAT_ObjD\n  and cat_SemiCAT_ObjE = smc_SemiCAT_ObjE\n  and cat_SemiCAT_Obj_iff[cat_SemiCAT_simps] = smc_SemiCAT_Obj_iff  \n  and cat_SemiCAT_Dom_app[cat_SemiCAT_simps] = smc_SemiCAT_Dom_app\n  and cat_SemiCAT_Cod_app[cat_SemiCAT_simps] = smc_SemiCAT_Cod_app\n  and cat_SemiCAT_is_arrI = smc_SemiCAT_is_arrI\n  and cat_SemiCAT_is_arrD = smc_SemiCAT_is_arrD\n  and cat_SemiCAT_is_arrE = smc_SemiCAT_is_arrE\n  and cat_SemiCAT_is_arr_iff[cat_SemiCAT_simps] = smc_SemiCAT_is_arr_iff", "lemmas_with [\n    folded cat_smc_SemiCAT, unfolded slicing_simps, unfolded cat_smc_SemiCAT\n    ]: \n  \\<comment>\\<open>Semicategory\\<close>\n  cat_SemiCAT_Comp_vdomain = smc_SemiCAT_Comp_vdomain\n  and cat_SemiCAT_composable_arrs_dg_SemiCAT = \n    smc_SemiCAT_composable_arrs_dg_SemiCAT\n  and cat_SemiCAT_Comp = smc_SemiCAT_Comp\n  and cat_SemiCAT_Comp_app[cat_SemiCAT_simps] = smc_SemiCAT_Comp_app\n  and cat_SemiCAT_Comp_vrange = smc_SemiCAT_Comp_vrange", "lemmas_with (in \\<Z>) [folded cat_smc_SemiCAT, unfolded slicing_simps]: \n  \\<comment>\\<open>Semicategory\\<close>\n  cat_SemiCAT_obj_initialI = smc_SemiCAT_obj_initialI\n  and cat_SemiCAT_obj_initialD = smc_SemiCAT_obj_initialD\n  and cat_SemiCAT_obj_initialE = smc_SemiCAT_obj_initialE\n  and cat_SemiCAT_obj_initial_iff[cat_SemiCAT_simps] = \n    smc_SemiCAT_obj_initial_iff\n  and cat_SemiCAT_obj_terminalI = smc_SemiCAT_obj_terminalI\n  and cat_SemiCAT_obj_terminalE = smc_SemiCAT_obj_terminalE", "lemma cat_SemiCAT_CId_app[cat_SemiCAT_simps]: \n  assumes \"semicategory \\<alpha> \\<CC>\"\n  shows \"cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<CC>\\<rparr> = smcf_id \\<CC>\"", "lemma cat_SemiCAT_CId_vdomain[cat_SemiCAT_simps]: \n  \"\\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) = set {\\<CC>. semicategory \\<alpha> \\<CC>}\"", "lemma cat_SemiCAT_CId_vrange: \"\\<R>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) \\<subseteq>\\<^sub>\\<circ> all_smcfs \\<alpha>\"", "lemma (in \\<Z>) tiny_category_cat_SemiCAT: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_category \\<beta> (cat_SemiCAT \\<alpha>)\"", "lemma cat_SemiCAT_is_arr_isomorphismI: \n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"", "lemma cat_SemiCAT_is_arr_isomorphismD: \n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma cat_SemiCAT_is_arr_isomorphismE: \n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma cat_SemiCAT_is_arr_isomorphism_iff[cat_SemiCAT_simps]: \n  \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> \\<longleftrightarrow> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma cat_SemiCAT_obj_isoI: \n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<AA> \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"", "lemma cat_SemiCAT_obj_isoD: \n  assumes \"\\<AA> \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma cat_SemiCAT_obj_isoE: \n  assumes \"\\<AA> \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"", "lemma cat_SemiCAT_obj_iso_iff[cat_SemiCAT_simps]: \n  \"\\<AA> \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> \\<longleftrightarrow> \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], "translations": [["", "lemma cat_SemiCAT_components:\n  shows \"cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr> = set {\\<CC>. semicategory \\<alpha> \\<CC>}\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr> = all_smcfs \\<alpha>\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>. \\<FF>\\<lparr>HomDom\\<rparr>)\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr> = (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>. \\<FF>\\<lparr>HomCod\\<rparr>)\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> = \n      (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs (dg_SemiCAT \\<alpha>). \\<GG>\\<FF>\\<lparr>0\\<rparr> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr> = (\\<lambda>\\<CC>\\<in>\\<^sub>\\<circ>set {\\<CC>. semicategory \\<alpha> \\<CC>}. smcf_id \\<CC>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr> =\n     ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>} &&&\n     cat_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr> = all_smcfs \\<alpha> &&&\n     cat_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr> =\n     (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>)) &&&\n    cat_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>) &&&\n    cat_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr> =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr> =\n    VLambda (ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}) dghm_id", "unfolding cat_SemiCAT_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n       dghm_id]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>} &&&\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n       dghm_id]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     all_smcfs \\<alpha> &&&\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n       dghm_id]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>)) &&&\n    [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n      dghm_id]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>) &&&\n    [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n      dghm_id]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomDom\\<rparr>,\n     \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n        \\<FF>\\<lparr>HomCod\\<rparr>,\n     \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n      (dg_SemiCAT \\<alpha>).\n        \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n      dghm_id]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    VLambda (ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}) dghm_id", "by (simp_all add: nat_omega_simps)"], ["", "text\\<open>Slicing.\\<close>"], ["", "lemma cat_smc_SemiCAT: \"cat_smc (cat_SemiCAT \\<alpha>) = smc_SemiCAT \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_smc (cat_SemiCAT \\<alpha>) = smc_SemiCAT \\<alpha>", "proof(rule vsv_eqI)"], ["proof (state)\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_SemiCAT \\<alpha>))\n 2. vsv (smc_SemiCAT \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc\n                                (cat_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "have dom_lhs: \"\\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) = 5\\<^sub>\\<nat>", "unfolding cat_smc_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>,\n      cat_SemiCAT \\<alpha>\\<lparr>Arr\\<rparr>,\n      cat_SemiCAT \\<alpha>\\<lparr>Dom\\<rparr>,\n      cat_SemiCAT \\<alpha>\\<lparr>Cod\\<rparr>,\n      cat_SemiCAT \\<alpha>\\<lparr>Comp\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) = 5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_SemiCAT \\<alpha>))\n 2. vsv (smc_SemiCAT \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc\n                                (cat_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "have dom_rhs: \"\\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>) = 5\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>) = 5\\<^sub>\\<nat>", "unfolding smc_SemiCAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ> =\n    5\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>) = 5\\<^sub>\\<nat>\n\ngoal (4 subgoals):\n 1. vsv (cat_smc (cat_SemiCAT \\<alpha>))\n 2. vsv (smc_SemiCAT \\<alpha>)\n 3. \\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>)\n 4. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc\n                                (cat_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "show \"\\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) = \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) =\n    \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>)", "unfolding dom_lhs dom_rhs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 5\\<^sub>\\<nat> = 5\\<^sub>\\<nat>", "by simp"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) =\n  \\<D>\\<^sub>\\<circ> (smc_SemiCAT \\<alpha>)\n\ngoal (3 subgoals):\n 1. vsv (cat_smc (cat_SemiCAT \\<alpha>))\n 2. vsv (smc_SemiCAT \\<alpha>)\n 3. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_smc\n                                (cat_SemiCAT \\<alpha>)) \\<Longrightarrow>\n       cat_smc (cat_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n       smc_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "show \"a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cat_smc (cat_SemiCAT \\<alpha>)) \\<Longrightarrow> \n    cat_smc (cat_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> = smc_SemiCAT \\<alpha>\\<lparr>a\\<rparr>\"\n    for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                           (cat_smc\n                             (cat_SemiCAT \\<alpha>)) \\<Longrightarrow>\n    cat_smc (cat_SemiCAT \\<alpha>)\\<lparr>a\\<rparr> =\n    smc_SemiCAT \\<alpha>\\<lparr>a\\<rparr>", "by \n      (\n        unfold dom_lhs, \n        elim_in_numeral, \n        unfold cat_smc_def dg_field_simps cat_SemiCAT_def smc_SemiCAT_def\n      )\n      (auto simp: nat_omega_simps)"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cat_smc (cat_SemiCAT \\<alpha>)) \\<Longrightarrow>\n  cat_smc (cat_SemiCAT \\<alpha>)\\<lparr>?a\\<rparr> =\n  smc_SemiCAT \\<alpha>\\<lparr>?a\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (cat_smc (cat_SemiCAT \\<alpha>))\n 2. vsv (smc_SemiCAT \\<alpha>)", "qed (auto simp: cat_smc_def smc_SemiCAT_def)"], ["", "lemmas_with [folded cat_smc_SemiCAT, unfolded slicing_simps]: \n  \\<comment>\\<open>Digraph\\<close>\n  cat_SemiCAT_ObjI = smc_SemiCAT_ObjI\n  and cat_SemiCAT_ObjD = smc_SemiCAT_ObjD\n  and cat_SemiCAT_ObjE = smc_SemiCAT_ObjE\n  and cat_SemiCAT_Obj_iff[cat_SemiCAT_simps] = smc_SemiCAT_Obj_iff  \n  and cat_SemiCAT_Dom_app[cat_SemiCAT_simps] = smc_SemiCAT_Dom_app\n  and cat_SemiCAT_Cod_app[cat_SemiCAT_simps] = smc_SemiCAT_Cod_app\n  and cat_SemiCAT_is_arrI = smc_SemiCAT_is_arrI\n  and cat_SemiCAT_is_arrD = smc_SemiCAT_is_arrD\n  and cat_SemiCAT_is_arrE = smc_SemiCAT_is_arrE\n  and cat_SemiCAT_is_arr_iff[cat_SemiCAT_simps] = smc_SemiCAT_is_arr_iff"], ["", "lemmas_with [\n    folded cat_smc_SemiCAT, unfolded slicing_simps, unfolded cat_smc_SemiCAT\n    ]: \n  \\<comment>\\<open>Semicategory\\<close>\n  cat_SemiCAT_Comp_vdomain = smc_SemiCAT_Comp_vdomain\n  and cat_SemiCAT_composable_arrs_dg_SemiCAT = \n    smc_SemiCAT_composable_arrs_dg_SemiCAT\n  and cat_SemiCAT_Comp = smc_SemiCAT_Comp\n  and cat_SemiCAT_Comp_app[cat_SemiCAT_simps] = smc_SemiCAT_Comp_app\n  and cat_SemiCAT_Comp_vrange = smc_SemiCAT_Comp_vrange"], ["", "lemmas_with (in \\<Z>) [folded cat_smc_SemiCAT, unfolded slicing_simps]: \n  \\<comment>\\<open>Semicategory\\<close>\n  cat_SemiCAT_obj_initialI = smc_SemiCAT_obj_initialI\n  and cat_SemiCAT_obj_initialD = smc_SemiCAT_obj_initialD\n  and cat_SemiCAT_obj_initialE = smc_SemiCAT_obj_initialE\n  and cat_SemiCAT_obj_initial_iff[cat_SemiCAT_simps] = \n    smc_SemiCAT_obj_initial_iff\n  and cat_SemiCAT_obj_terminalI = smc_SemiCAT_obj_terminalI\n  and cat_SemiCAT_obj_terminalE = smc_SemiCAT_obj_terminalE"], ["", "subsection\\<open>Identity\\<close>"], ["", "lemma cat_SemiCAT_CId_app[cat_SemiCAT_simps]: \n  assumes \"semicategory \\<alpha> \\<CC>\"\n  shows \"cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<CC>\\<rparr> = smcf_id \\<CC>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<CC>\\<rparr> =\n    dghm_id \\<CC>", "using assms"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<CC>\\<rparr> =\n    dghm_id \\<CC>", "unfolding cat_SemiCAT_components"], ["proof (prove)\nusing this:\n  semicategory \\<alpha> \\<CC>\n\ngoal (1 subgoal):\n 1. VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n     dghm_id\\<lparr>\\<CC>\\<rparr> =\n    dghm_id \\<CC>", "by simp"], ["", "lemma cat_SemiCAT_CId_vdomain[cat_SemiCAT_simps]: \n  \"\\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) = set {\\<CC>. semicategory \\<alpha> \\<CC>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) =\n    ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}", "unfolding cat_SemiCAT_components"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ>\n     (VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>))) dghm_id) =\n    ZFC_in_HOL.set {\\<CC>. semicategory \\<alpha> \\<CC>}", "by auto"], ["", "lemma cat_SemiCAT_CId_vrange: \"\\<R>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) \\<subseteq>\\<^sub>\\<circ> all_smcfs \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> all_smcfs \\<alpha>", "proof(rule vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_SemiCAT\n                                \\<alpha>\\<lparr>CId\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "fix \\<HH>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_SemiCAT\n                                \\<alpha>\\<lparr>CId\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "assume \"\\<HH> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\""], ["proof (state)\nthis:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_SemiCAT\n                                \\<alpha>\\<lparr>CId\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)", "obtain \\<AA> \n    where \\<HH>_def: \"\\<HH> = cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>\" \n      and \\<AA>: \"\\<AA> \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA>.\n        \\<lbrakk>\\<HH> =\n                 cat_SemiCAT\n                  \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>;\n         \\<AA>\n         \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (cat_SemiCAT\n                                \\<alpha>\\<lparr>CId\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cat_SemiCAT_components"], ["proof (prove)\nusing this:\n  \\<HH>\n  \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                       (VLambda\n                         (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n                         dghm_id)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<AA>.\n        \\<lbrakk>\\<HH> =\n                 VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n                  dghm_id\\<lparr>\\<AA>\\<rparr>;\n         \\<AA>\n         \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                              (VLambda\n                                (ZFC_in_HOL.set\n                                  (Collect (semicategory \\<alpha>)))\n                                dghm_id)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<HH> = cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>\n  \\<AA>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_SemiCAT\n                                \\<alpha>\\<lparr>CId\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "from \\<AA>"], ["proof (chain)\npicking this:\n  \\<AA>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)", "have \\<HH>_def': \"\\<HH> = smcf_id \\<AA>\""], ["proof (prove)\nusing this:\n  \\<AA>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<HH> = dghm_id \\<AA>", "unfolding \\<HH>_def cat_SemiCAT_CId_vdomain"], ["proof (prove)\nusing this:\n  \\<AA> \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set (Collect (semicategory \\<alpha>))\n\ngoal (1 subgoal):\n 1. cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr> =\n    dghm_id \\<AA>", "by (auto simp: cat_SemiCAT_CId_app)"], ["proof (state)\nthis:\n  \\<HH> = dghm_id \\<AA>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                              (cat_SemiCAT\n                                \\<alpha>\\<lparr>CId\\<rparr>) \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "from \\<AA> semicategory.smc_smcf_id_is_semifunctor"], ["proof (chain)\npicking this:\n  \\<AA>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n  semicategory ?\\<alpha> ?\\<CC> \\<Longrightarrow>\n  dghm_id ?\\<CC> :\n  ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<CC>", "show \"\\<HH> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<AA>\n  \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                       (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n  semicategory ?\\<alpha> ?\\<CC> \\<Longrightarrow>\n  dghm_id ?\\<CC> :\n  ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<CC>\n\ngoal (1 subgoal):\n 1. \\<HH> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "unfolding \\<HH>_def' cat_SemiCAT_CId_vdomain"], ["proof (prove)\nusing this:\n  \\<AA> \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set (Collect (semicategory \\<alpha>))\n  semicategory ?\\<alpha> ?\\<CC> \\<Longrightarrow>\n  dghm_id ?\\<CC> :\n  ?\\<CC> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<CC>\n\ngoal (1 subgoal):\n 1. dghm_id \\<AA> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>", "by force"], ["proof (state)\nthis:\n  \\<HH> \\<in>\\<^sub>\\<circ> all_smcfs \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>\\<open>SemiCAT\\<close> is a category\\<close>"], ["", "lemma (in \\<Z>) tiny_category_cat_SemiCAT: \n  assumes \"\\<Z> \\<beta>\" and \"\\<alpha> \\<in>\\<^sub>\\<circ> \\<beta>\"\n  shows \"tiny_category \\<beta> (cat_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tiny_category \\<beta> (cat_SemiCAT \\<alpha>)", "proof(intro tiny_categoryI)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence (cat_SemiCAT \\<alpha>)\n 3. vsv (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_SemiCAT \\<alpha>) = 6\\<^sub>\\<nat>\n 5. tiny_semicategory \\<beta> (cat_smc (cat_SemiCAT \\<alpha>))\n 6. \\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_SemiCAT\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "interpret \\<beta>: \\<Z> \\<beta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> \\<beta>", "by (rule assms(1))"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<Z> \\<beta>\n 2. vfsequence (cat_SemiCAT \\<alpha>)\n 3. vsv (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n 4. vcard (cat_SemiCAT \\<alpha>) = 6\\<^sub>\\<nat>\n 5. tiny_semicategory \\<beta> (cat_smc (cat_SemiCAT \\<alpha>))\n 6. \\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>\n 7. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_SemiCAT\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> a\n 8. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       f =\n       f\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vfsequence (cat_SemiCAT \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cat_SemiCAT \\<alpha>)", "unfolding cat_SemiCAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n       dghm_id]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (cat_SemiCAT \\<alpha>)\n\ngoal (8 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n 3. vcard (cat_SemiCAT \\<alpha>) = 6\\<^sub>\\<nat>\n 4. tiny_semicategory \\<beta> (cat_smc (cat_SemiCAT \\<alpha>))\n 5. \\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>\n 6. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_SemiCAT\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> a\n 7. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       f =\n       f\n 8. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"vcard (cat_SemiCAT \\<alpha>) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cat_SemiCAT \\<alpha>) = 6\\<^sub>\\<nat>", "unfolding cat_SemiCAT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [ZFC_in_HOL.set (Collect (semicategory \\<alpha>)), all_smcfs \\<alpha>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomDom\\<rparr>,\n      \\<lambda>\\<FF>\\<in>\\<^sub>\\<circ>all_smcfs \\<alpha>.\n         \\<FF>\\<lparr>HomCod\\<rparr>,\n      \\<lambda>\\<GG>\\<FF>\\<in>\\<^sub>\\<circ>composable_arrs\n       (dg_SemiCAT \\<alpha>).\n         \\<GG>\\<FF>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         \\<GG>\\<FF>\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set (Collect (semicategory \\<alpha>)))\n       dghm_id]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cat_SemiCAT \\<alpha>) = 6\\<^sub>\\<nat>\n\ngoal (7 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n 3. tiny_semicategory \\<beta> (cat_smc (cat_SemiCAT \\<alpha>))\n 4. \\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_SemiCAT\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> a\n 6. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> b \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       f =\n       f\n 7. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> = \\<FF>\"\n    if \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\" for \\<FF> \\<AA> \\<BB>"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_SemiCAT\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    \\<FF> =\n    \\<FF>", "using that"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. cat_SemiCAT\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    \\<FF> =\n    \\<FF>", "unfolding cat_SemiCAT_is_arr_iff"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. cat_SemiCAT\n     \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    \\<FF> =\n    \\<FF>", "by (cs_concl cs_simp: smc_cs_simps cat_SemiCAT_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?\\<BB> \\<Longrightarrow>\n  cat_SemiCAT\n   \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?\\<BB>\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n  ?\\<FF> =\n  ?\\<FF>\n\ngoal (6 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n 3. tiny_semicategory \\<beta> (cat_smc (cat_SemiCAT \\<alpha>))\n 4. \\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_SemiCAT\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> a\n 6. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n       cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f", "show \"\\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr> = \\<FF>\"\n    if \"\\<FF> : \\<BB> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<CC>\" for \\<FF> \\<BB> \\<CC>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr> =\n    \\<FF>", "using that"], ["proof (prove)\nusing this:\n  \\<FF> : \\<BB> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr> =\n    \\<FF>", "unfolding cat_SemiCAT_is_arr_iff"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<CC>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr> =\n    \\<FF>", "by (cs_concl cs_simp: smc_cs_simps cat_SemiCAT_simps cs_intro: smc_cs_intros)"], ["proof (state)\nthis:\n  ?\\<FF> : ?\\<BB> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?\\<CC> \\<Longrightarrow>\n  ?\\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?\\<BB>\\<rparr> =\n  ?\\<FF>\n\ngoal (5 subgoals):\n 1. \\<Z> \\<beta>\n 2. vsv (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>)\n 3. tiny_semicategory \\<beta> (cat_smc (cat_SemiCAT \\<alpha>))\n 4. \\<D>\\<^sub>\\<circ> (cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>) =\n    cat_SemiCAT \\<alpha>\\<lparr>Obj\\<rparr>\n 5. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_SemiCAT\n                              \\<alpha>\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_SemiCAT\n        \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> a", "qed \n  (\n    simp_all add: \n      assms\n      cat_smc_SemiCAT\n      cat_SemiCAT_components\n      cat_SemiCAT_is_arr_iff\n      tiny_semicategory_smc_SemiCAT\n      semicategory.smc_smcf_id_is_semifunctor\n  )"], ["", "subsection\\<open>Isomorphism\\<close>"], ["", "lemma cat_SemiCAT_is_arr_isomorphismI: \n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "proof(intro is_arr_isomorphismI is_inverseI)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n 2. ?g : ?b1 \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?a1\n 3. \\<FF> : ?a1 \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?b1\n 4. ?g \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?a1\\<rparr>\n 5. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?g =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?b1\\<rparr>", "interpret is_iso_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule assms)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n 2. ?g : ?b1 \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?a1\n 3. \\<FF> : ?a1 \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?b1\n 4. ?g \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?a1\\<rparr>\n 5. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?g =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?b1\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \\<FF>: \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "unfolding cat_SemiCAT_is_arr_iff"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by auto"], ["proof (state)\nthis:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (4 subgoals):\n 1. ?g : ?b1 \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?a1\n 2. \\<FF> : ?a1 \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?b1\n 3. ?g \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?a1\\<rparr>\n 4. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?g =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?b1\\<rparr>", "note iso_thms = is_iso_semifunctor_is_arr_isomorphism[OF assms]"], ["proof (state)\nthis:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n  dghm_id \\<AA>\n  \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n  dghm_id \\<BB>\n\ngoal (4 subgoals):\n 1. ?g : ?b1 \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?a1\n 2. \\<FF> : ?a1 \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?b1\n 3. ?g \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?a1\\<rparr>\n 4. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> ?g =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>?b1\\<rparr>", "from iso_thms(1)"], ["proof (chain)\npicking this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "show inv_\\<FF>: \"inv_smcf \\<FF> : \\<BB> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\nusing this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. inv_dghm\n     \\<FF> : \\<BB> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<AA>", "unfolding cat_SemiCAT_is_arr_iff"], ["proof (prove)\nusing this:\n  inv_dghm \\<FF> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. inv_dghm \\<FF> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by auto"], ["proof (state)\nthis:\n  inv_dghm \\<FF> : \\<BB> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<AA>\n\ngoal (3 subgoals):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n 2. inv_dghm \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>\n 3. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    inv_dghm \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "unfolding cat_SemiCAT_is_arr_iff"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by auto"], ["proof (state)\nthis:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (2 subgoals):\n 1. inv_dghm \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>\n 2. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    inv_dghm \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr>", "from assms"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \\<AA>: \"semicategory \\<alpha> \\<AA>\" and \\<BB>: \"semicategory \\<alpha> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA> &&& semicategory \\<alpha> \\<BB>", "by auto"], ["proof (state)\nthis:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n\ngoal (2 subgoals):\n 1. inv_dghm \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>\n 2. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    inv_dghm \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr>", "show \"inv_smcf \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> = cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_dghm \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>", "unfolding cat_SemiCAT_CId_app[OF \\<AA>] cat_SemiCAT_Comp_app[OF inv_\\<FF> \\<FF>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_dghm \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> =\n    dghm_id \\<AA>", "by (rule iso_thms(2))"], ["proof (state)\nthis:\n  inv_dghm \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    inv_dghm \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr>", "show \"\\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> inv_smcf \\<FF> = cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub>\n    inv_dghm \\<FF> =\n    cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr>", "unfolding cat_SemiCAT_CId_app[OF \\<BB>] cat_SemiCAT_Comp_app[OF \\<FF> inv_\\<FF>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M inv_dghm \\<FF> =\n    dghm_id \\<BB>", "by (rule iso_thms(3))"], ["proof (state)\nthis:\n  \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> inv_dghm \\<FF> =\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_SemiCAT_is_arr_isomorphismD: \n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "from is_arr_isomorphismD[OF assms]"], ["proof (chain)\npicking this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n  \\<exists>g. is_inverse (cat_SemiCAT \\<alpha>) g \\<FF>", "have \\<FF>: \"\\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\" \n    and \"(\\<exists>\\<GG>. is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>)\""], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n  \\<exists>g. is_inverse (cat_SemiCAT \\<alpha>) g \\<FF>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> &&&\n    \\<exists>\\<GG>. is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>", "by simp_all"], ["proof (state)\nthis:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n  \\<exists>\\<GG>. is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n  \\<exists>\\<GG>. is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>", "obtain \\<GG> where \\<GG>\\<FF>: \"is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>\""], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n  \\<exists>\\<GG>. is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<GG>.\n        is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "then"], ["proof (chain)\npicking this:\n  is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>", "obtain \\<AA>' \\<BB>' where \\<GG>': \"\\<GG> : \\<BB>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<AA>'\"\n    and \\<FF>': \"\\<FF> : \\<AA>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>'\"\n    and \\<GG>\\<FF>: \"\\<GG> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> = cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>'\\<rparr>\"\n    and \\<FF>\\<GG>: \"\\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<GG> = cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>'\\<rparr>\""], ["proof (prove)\nusing this:\n  is_inverse (cat_SemiCAT \\<alpha>) \\<GG> \\<FF>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<BB>' \\<AA>'.\n        \\<lbrakk>\\<GG> : \\<BB>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<AA>';\n         \\<FF> : \\<AA>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>';\n         \\<GG> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n         cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>'\\<rparr>;\n         \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<GG> =\n         cat_SemiCAT\n          \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>'\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<GG> : \\<BB>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<AA>'\n  \\<FF> : \\<AA>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>'\n  \\<GG> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>'\\<rparr>\n  \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<GG> =\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>'\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "from \\<FF> \\<FF>'"], ["proof (chain)\npicking this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n  \\<FF> : \\<AA>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>'", "have \\<AA>': \"\\<AA>' = \\<AA>\" and \\<BB>': \"\\<BB>' = \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n  \\<FF> : \\<AA>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>'\n\ngoal (1 subgoal):\n 1. \\<AA>' = \\<AA> &&& \\<BB>' = \\<BB>", "by auto"], ["proof (state)\nthis:\n  \\<AA>' = \\<AA>\n  \\<BB>' = \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "from \\<FF>"], ["proof (chain)\npicking this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "have \\<FF>: \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "unfolding cat_SemiCAT_is_arr_iff"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by simp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "interpret is_semifunctor \\<alpha> \\<AA> \\<BB> \\<FF>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule \\<FF>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "have \\<AA>: \"semicategory \\<alpha> \\<AA>\" and \\<BB>: \"semicategory \\<alpha> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semicategory \\<alpha> \\<AA> &&& semicategory \\<alpha> \\<BB>", "by (cs_concl cs_intro: smc_cs_intros)+"], ["proof (state)\nthis:\n  semicategory \\<alpha> \\<AA>\n  semicategory \\<alpha> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "from \\<GG>'"], ["proof (chain)\npicking this:\n  \\<GG> : \\<BB>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<AA>'", "have \\<GG>: \"\\<GG> : \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\""], ["proof (prove)\nusing this:\n  \\<GG> : \\<BB>' \\<mapsto>\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<AA>'\n\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "unfolding \\<AA>' \\<BB>' cat_SemiCAT_is_arr_iff"], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<GG> :\n    \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>", "by simp"], ["proof (state)\nthis:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "moreover"], ["proof (state)\nthis:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "from \\<GG>\\<FF>"], ["proof (chain)\npicking this:\n  \\<GG> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>'\\<rparr>", "have \"\\<GG> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<FF> = smcf_id \\<AA>\""], ["proof (prove)\nusing this:\n  \\<GG> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<FF> =\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<AA>'\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = dghm_id \\<AA>", "unfolding \\<AA>' cat_SemiCAT_Comp_app[OF \\<GG>' \\<FF>'] cat_SemiCAT_CId_app[OF \\<AA>]"], ["proof (prove)\nusing this:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = dghm_id \\<AA>\n\ngoal (1 subgoal):\n 1. \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = dghm_id \\<AA>", "by simp"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = dghm_id \\<AA>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "moreover"], ["proof (state)\nthis:\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = dghm_id \\<AA>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "from \\<FF>\\<GG>"], ["proof (chain)\npicking this:\n  \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<GG> =\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>'\\<rparr>", "have \"\\<FF> \\<circ>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>F \\<GG> = smcf_id \\<BB>\""], ["proof (prove)\nusing this:\n  \\<FF> \\<circ>\\<^sub>A\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<GG> =\n  cat_SemiCAT \\<alpha>\\<lparr>CId\\<rparr>\\<lparr>\\<BB>'\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> = dghm_id \\<BB>", "unfolding \\<BB>' cat_SemiCAT_Comp_app[OF \\<FF>' \\<GG>'] cat_SemiCAT_CId_app[OF \\<BB>]"], ["proof (prove)\nusing this:\n  \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> = dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> = dghm_id \\<BB>", "by simp"], ["proof (state)\nthis:\n  \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> = dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "ultimately"], ["proof (chain)\npicking this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = dghm_id \\<AA>\n  \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> = dghm_id \\<BB>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = dghm_id \\<AA>\n  \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> = dghm_id \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using \\<FF>"], ["proof (prove)\nusing this:\n  \\<GG> :\n  \\<BB> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<AA>\n  \\<GG> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<FF> = dghm_id \\<AA>\n  \\<FF> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M \\<GG> = dghm_id \\<BB>\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (elim is_arr_isomorphism_is_iso_semifunctor)"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_SemiCAT_is_arr_isomorphismE: \n  assumes \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n     thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n     thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: cat_SemiCAT_is_arr_isomorphismD)"], ["", "lemma cat_SemiCAT_is_arr_isomorphism_iff[cat_SemiCAT_simps]: \n  \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> \\<longleftrightarrow> \\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> =\n    \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "using cat_SemiCAT_is_arr_isomorphismI cat_SemiCAT_is_arr_isomorphismD"], ["proof (prove)\nusing this:\n  ?\\<FF> :\n  ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB> \\<Longrightarrow>\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT ?\\<alpha>\\<^esub> ?\\<BB>\n  ?\\<FF> : ?\\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT ?\\<alpha>\\<^esub> ?\\<BB> \\<Longrightarrow>\n  ?\\<FF> :\n  ?\\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n\ngoal (1 subgoal):\n 1. \\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> =\n    \\<FF> :\n    \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by auto"], ["", "subsection\\<open>Isomorphic objects\\<close>"], ["", "lemma cat_SemiCAT_obj_isoI: \n  assumes \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<AA> \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "from iso_semicategoryD[OF assms]"], ["proof (chain)\npicking this:\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "obtain \\<FF> where \"\\<FF> : \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<FF>.\n     \\<FF> :\n     \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<FF> :\n        \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "from cat_SemiCAT_is_arr_isomorphismI[OF this]"], ["proof (chain)\npicking this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "by (rule obj_isoI)"], ["proof (state)\nthis:\n  \\<AA>\n  \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_SemiCAT_obj_isoD: \n  assumes \"\\<AA> \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  shows \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "from obj_isoD[OF assms]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     f : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>", "obtain \\<FF> where \"\\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<FF>.\n        \\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  \\<FF> : \\<AA> \\<mapsto>\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "from cat_SemiCAT_is_arr_isomorphismD[OF this]"], ["proof (chain)\npicking this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<FF> :\n  \\<AA> \\<mapsto>\\<mapsto>\\<^sub>S\\<^sub>M\\<^sub>C\\<^sub>.\\<^sub>i\\<^sub>s\\<^sub>o\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>", "by (rule iso_semicategoryI)"], ["proof (state)\nthis:\n  \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_SemiCAT_obj_isoE: \n  assumes \"\\<AA> \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\"\n  obtains \"\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\n     \\<BB> \\<Longrightarrow>\n     thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<AA>\n  \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB>\n\ngoal (1 subgoal):\n 1. (\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub>\n     \\<BB> \\<Longrightarrow>\n     thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: cat_SemiCAT_obj_isoD)"], ["", "lemma cat_SemiCAT_obj_iso_iff[cat_SemiCAT_simps]: \n  \"\\<AA> \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> \\<longleftrightarrow> \\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> =\n    (\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)", "using cat_SemiCAT_obj_isoI cat_SemiCAT_obj_isoD"], ["proof (prove)\nusing this:\n  ?\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub>\n  ?\\<BB> \\<Longrightarrow>\n  ?\\<AA>\n  \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT ?\\<alpha>\\<^esub> ?\\<BB>\n  ?\\<AA>\n  \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT ?\\<alpha>\\<^esub> ?\\<BB> \\<Longrightarrow>\n  ?\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>?\\<alpha>\\<^esub> ?\\<BB>\n\ngoal (1 subgoal):\n 1. \\<AA>\n    \\<approx>\\<^sub>o\\<^sub>b\\<^sub>j\\<^bsub>cat_SemiCAT \\<alpha>\\<^esub> \\<BB> =\n    (\\<AA> \\<approx>\\<^sub>S\\<^sub>M\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> \\<BB>)", "by (intro iffI) auto"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}