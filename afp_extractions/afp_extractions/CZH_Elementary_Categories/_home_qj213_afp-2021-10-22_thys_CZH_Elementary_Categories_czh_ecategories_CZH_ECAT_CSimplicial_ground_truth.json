{"file_name": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories/czh_ecategories/CZH_ECAT_CSimplicial.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CZH_Elementary_Categories", "problem_names": ["lemma small_composable_cat_simplicial[simp]:\n  \"small\n    {\n      [g, f]\\<^sub>\\<circ> | g f. \\<exists>m n p.\n        g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p \\<and>\n        f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and>\n        m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A \\<and> p \\<in>\\<^sub>\\<circ> A\n    }\"\n  (is \\<open>small ?S\\<close>)", "lemma composable_cat_simplicialI:\n  assumes \"g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\"\n    and \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n    and \"p \\<in>\\<^sub>\\<circ> A\"\n    and \"gf = [g, f]\\<^sub>\\<circ>\"\n  shows \"gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\"", "lemma composable_cat_simplicialE[elim]:\n  assumes \"gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\"\n  obtains g f m n p where \"gf = [g, f]\\<^sub>\\<circ>\" \n    and \"g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\"\n    and \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n    and \"p \\<in>\\<^sub>\\<circ> A\"", "lemma cat_simplicial_components:\n  shows \"cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> = set {cat_ordinal m | m. m \\<in>\\<^sub>\\<circ> A}\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr> = \n      set {f. \\<exists>m n. f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>set\n          {\n            f. \\<exists>m n.\n              f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A\n          }. f\\<lparr>HomDom\\<rparr>\n      )\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>set\n          {\n            f. \\<exists>m n.\n              f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A\n          }. f\\<lparr>HomCod\\<rparr>\n      )\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr> =\n      (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A. gf\\<lparr>0\\<rparr> \\<circ>\\<^sub>C\\<^sub>F gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr> =\n      (\\<lambda>m\\<in>\\<^sub>\\<circ>set {cat_ordinal m | m. m \\<in>\\<^sub>\\<circ> A}. cf_id m)\"", "lemma cat_simplicial_ObjI[cat_simplicial_cs_intros]:\n  assumes \"m \\<in>\\<^sub>\\<circ> A\" and \"a = cat_ordinal m\"\n  shows \"a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> \"", "lemma cat_simplicial_ObjD:\n  assumes \"cat_ordinal m \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> \"\n  shows \"m \\<in>\\<^sub>\\<circ> A\"", "lemma cat_simplicial_ObjE:\n  assumes \"M \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> \"\n  obtains m where \"M = cat_ordinal m\" and \"m \\<in>\\<^sub>\\<circ> A\"", "lemma small_cat_simplicial_Arr[simp]: \n  \"small {f. \\<exists>m n. f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}\"\n  (is \\<open>small ?S\\<close>)", "lemma cat_simplicial_ArrI[cat_simplicial_cs_intros]:\n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" and \"m \\<in>\\<^sub>\\<circ> A\" and \"n \\<in>\\<^sub>\\<circ> A\" \n  shows \"f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\"", "lemma cat_simplicial_ArrE:\n  assumes \"f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\"\n  obtains m n \n    where \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" and \"m \\<in>\\<^sub>\\<circ> A\" and \"n \\<in>\\<^sub>\\<circ> A\"", "lemma cat_simplicial_Dom_app'[cat_simplicial_cs_simps]:\n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" and \"m \\<in>\\<^sub>\\<circ> A\" and \"n \\<in>\\<^sub>\\<circ> A\" \n  shows \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal m\"", "lemma cat_simplicial_Cod_app'[cat_simplicial_cs_simps]:\n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" and \"m \\<in>\\<^sub>\\<circ> A\" and \"n \\<in>\\<^sub>\\<circ> A\" \n  shows \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal n\"", "lemma cat_simplicial_is_arrI: \n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n  shows \"f : cat_ordinal m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n\"", "lemma cat_simplicial_is_arrI'[cat_simplicial_cs_intros]: \n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n    and \"a = cat_ordinal m\"\n    and \"b = cat_ordinal n\"\n  shows \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\"", "lemma cat_simplicial_is_arrD[dest]: \n  assumes \"f : cat_ordinal m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n  shows \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"", "lemma cat_simplicial_is_arrE[elim]: \n  assumes \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\"\n  obtains m n where \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n    and \"a = cat_ordinal m\"\n    and \"b = cat_ordinal n\"", "lemma cat_simplicial_Comp_app[cat_simplicial_cs_simps]:\n  assumes \"g : cat_ordinal n \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal p\"\n    and \"f : cat_ordinal m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\" \n    and \"p \\<in>\\<^sub>\\<circ> A\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f = g \\<circ>\\<^sub>C\\<^sub>F f\"", "lemmas cat_simplicial_CId_vdomain[cat_simplicial_cs_simps] = \n  cat_simplicial_CId_vdomain'", "lemmas cat_simplicial_CId_app[cat_simplicial_cs_simps] = \n  cat_simplicial_CId_app'", "lemma (in \\<Z>) category_simplicial:\n  assumes \"Ord A\" and \"A \\<subseteq>\\<^sub>\\<circ> \\<alpha>\"\n  shows \"category \\<alpha> (cat_simplicial \\<alpha> A)\""], "translations": [["", "lemma small_composable_cat_simplicial[simp]:\n  \"small\n    {\n      [g, f]\\<^sub>\\<circ> | g f. \\<exists>m n p.\n        g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p \\<and>\n        f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and>\n        m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A \\<and> p \\<in>\\<^sub>\\<circ> A\n    }\"\n  (is \\<open>small ?S\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {[g, f]\\<^sub>\\<circ> |g f.\n      \\<exists>m n p.\n         g :\n         cat_ordinal\n          n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       p \\<and>\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n \\<and>\n         m \\<in>\\<^sub>\\<circ> A \\<and>\n         n \\<in>\\<^sub>\\<circ> A \\<and> p \\<in>\\<^sub>\\<circ> A}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {[g, f]\\<^sub>\\<circ> |g f.\n     \\<exists>m n p.\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p \\<and>\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n \\<and>\n        m \\<in>\\<^sub>\\<circ> A \\<and>\n        n \\<in>\\<^sub>\\<circ> A \\<and> p \\<in>\\<^sub>\\<circ> A}\n    \\<subseteq> elts ?x", "show \"?S \\<subseteq> elts (all_cfs \\<alpha> \\<times>\\<^sub>\\<bullet> all_cfs \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {[g, f]\\<^sub>\\<circ> |g f.\n     \\<exists>m n p.\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p \\<and>\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n \\<and>\n        m \\<in>\\<^sub>\\<circ> A \\<and>\n        n \\<in>\\<^sub>\\<circ> A \\<and> p \\<in>\\<^sub>\\<circ> A}\n    \\<subseteq> elts\n                 (all_cfs \\<alpha> \\<times>\\<^sub>\\<bullet>\n                  all_cfs \\<alpha>)", "proof\n    (\n      intro subsetI, \n      unfold mem_Collect_eq, elim exE conjE; simp only:; intro ftimesI2\n    )"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> g \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\n 2. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "fix m n p g f"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> g \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\n 2. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "assume prems: \n      \"m \\<in>\\<^sub>\\<circ> A\"\n      \"n \\<in>\\<^sub>\\<circ> A\"\n      \"p \\<in>\\<^sub>\\<circ> A\"\n      \"g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\"\n      \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\""], ["proof (state)\nthis:\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n\ngoal (2 subgoals):\n 1. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> g \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\n 2. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "interpret g: is_preorder_functor \\<alpha> \\<open>cat_ordinal n\\<close> \\<open>cat_ordinal p\\<close> g"], ["proof (prove)\ngoal (1 subgoal):\n 1. g :\n    cat_ordinal\n     n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  p", "by (rule prems(4))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> g \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\n 2. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "interpret f: is_preorder_functor \\<alpha> \\<open>cat_ordinal m\\<close> \\<open>cat_ordinal n\\<close> f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "by (rule prems(5))"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> g \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\n 2. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "from g.is_functor_axioms"], ["proof (chain)\npicking this:\n  g :\n  cat_ordinal\n   n \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p", "show \"g \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\""], ["proof (prove)\nusing this:\n  g :\n  cat_ordinal\n   n \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\n\ngoal (1 subgoal):\n 1. g \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "by auto"], ["proof (state)\nthis:\n  g \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>x g f m n p.\n       \\<lbrakk>x = [g, f]\\<^sub>\\<circ>;\n        g :\n        cat_ordinal\n         n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      p;\n        f :\n        cat_ordinal\n         m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n      n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "from f.is_functor_axioms"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n", "show \"f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<mapsto>\\<mapsto>\\<^sub>C\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>", "by auto"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> all_cfs \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {[g, f]\\<^sub>\\<circ> |g f.\n   \\<exists>m n p.\n      g :\n      cat_ordinal\n       n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n    p \\<and>\n      f :\n      cat_ordinal\n       m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n    n \\<and>\n      m \\<in>\\<^sub>\\<circ> A \\<and>\n      n \\<in>\\<^sub>\\<circ> A \\<and> p \\<in>\\<^sub>\\<circ> A}\n  \\<subseteq> elts\n               (all_cfs \\<alpha> \\<times>\\<^sub>\\<bullet> all_cfs \\<alpha>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Rules.\\<close>"], ["", "lemma composable_cat_simplicialI:\n  assumes \"g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\"\n    and \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n    and \"p \\<in>\\<^sub>\\<circ> A\"\n    and \"gf = [g, f]\\<^sub>\\<circ>\"\n  shows \"gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "using assms"], ["proof (prove)\nusing this:\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A\n  gf = [g, f]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "unfolding composable_cat_simplicial_def"], ["proof (prove)\nusing this:\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A\n  gf = [g, f]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                            {[g, f]\\<^sub>\\<circ> |g f.\n                             \\<exists>m n p.\n                                g :\n                                cat_ordinal\n                                 n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n                              p \\<and>\n                                f :\n                                cat_ordinal\n                                 m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n                              n \\<and>\n                                m \\<in>\\<^sub>\\<circ> A \\<and>\n                                n \\<in>\\<^sub>\\<circ> A \\<and>\n                                p \\<in>\\<^sub>\\<circ> A}", "by (intro in_small_setI small_composable_cat_simplicial) auto"], ["", "lemma composable_cat_simplicialE[elim]:\n  assumes \"gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\"\n  obtains g f m n p where \"gf = [g, f]\\<^sub>\\<circ>\" \n    and \"g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\"\n    and \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n    and \"p \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g f n p m.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g :\n         cat_ordinal\n          n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       p;\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g f n p m.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g :\n         cat_ordinal\n          n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       p;\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "obtain g f m n p where \n    \"gf = [g, f]\\<^sub>\\<circ>\"\n    \"g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\"\n    \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    \"m \\<in>\\<^sub>\\<circ> A\" \n    \"n \\<in>\\<^sub>\\<circ> A\" \n    \"p \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\n\ngoal (1 subgoal):\n 1. (\\<And>g f n p m.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g :\n         cat_ordinal\n          n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       p;\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding composable_cat_simplicial_def"], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                          {[g, f]\\<^sub>\\<circ> |g f.\n                           \\<exists>m n p.\n                              g :\n                              cat_ordinal\n                               n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n                            p \\<and>\n                              f :\n                              cat_ordinal\n                               m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n                            n \\<and>\n                              m \\<in>\\<^sub>\\<circ> A \\<and>\n                              n \\<in>\\<^sub>\\<circ> A \\<and>\n                              p \\<in>\\<^sub>\\<circ> A}\n\ngoal (1 subgoal):\n 1. (\\<And>g f n p m.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g :\n         cat_ordinal\n          n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       p;\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim in_small_setE, intro small_composable_cat_simplicial) auto"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (\\<And>g f n p m.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g :\n         cat_ordinal\n          n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       p;\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>gf = [?g, ?f]\\<^sub>\\<circ>;\n   ?g :\n   cat_ordinal\n    ?n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  ?p;\n   ?f :\n   cat_ordinal\n    ?m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  ?n;\n   ?m \\<in>\\<^sub>\\<circ> A; ?n \\<in>\\<^sub>\\<circ> A;\n   ?p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n  gf = [g, f]\\<^sub>\\<circ>\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>gf = [?g, ?f]\\<^sub>\\<circ>;\n   ?g :\n   cat_ordinal\n    ?n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  ?p;\n   ?f :\n   cat_ordinal\n    ?m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  ?n;\n   ?m \\<in>\\<^sub>\\<circ> A; ?n \\<in>\\<^sub>\\<circ> A;\n   ?p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n  gf = [g, f]\\<^sub>\\<circ>\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Simplicial category\\<close>"], ["", "subsubsection\\<open>Definition and elementary properties\\<close>"], ["", "definition cat_simplicial :: \"V \\<Rightarrow> V \\<Rightarrow> V\"\n  where \"cat_simplicial \\<alpha> A =\n    [\n      set {cat_ordinal m | m. m \\<in>\\<^sub>\\<circ> A},\n      set\n        {\n          f. \\<exists>m n.\n            f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A\n        },\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ> set\n          {\n            f. \\<exists>m n.\n              f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A\n          }. f\\<lparr>HomDom\\<rparr>\n      ),\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ> set\n          {\n            f. \\<exists>m n.\n              f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A\n          }. f\\<lparr>HomCod\\<rparr>\n      ),\n      (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A. gf\\<lparr>0\\<rparr> \\<circ>\\<^sub>C\\<^sub>F gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>),\n      (\\<lambda>m\\<in>\\<^sub>\\<circ>set {cat_ordinal m | m. m \\<in>\\<^sub>\\<circ> A}. cf_id m)\n    ]\\<^sub>\\<circ>\""], ["", "text\\<open>Components.\\<close>"], ["", "lemma cat_simplicial_components:\n  shows \"cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> = set {cat_ordinal m | m. m \\<in>\\<^sub>\\<circ> A}\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr> = \n      set {f. \\<exists>m n. f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>set\n          {\n            f. \\<exists>m n.\n              f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A\n          }. f\\<lparr>HomDom\\<rparr>\n      )\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr> =\n      (\n        \\<lambda>f\\<in>\\<^sub>\\<circ>set\n          {\n            f. \\<exists>m n.\n              f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A\n          }. f\\<lparr>HomCod\\<rparr>\n      )\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr> =\n      (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A. gf\\<lparr>0\\<rparr> \\<circ>\\<^sub>C\\<^sub>F gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\"\n    and \"cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr> =\n      (\\<lambda>m\\<in>\\<^sub>\\<circ>set {cat_ordinal m | m. m \\<in>\\<^sub>\\<circ> A}. cf_id m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> =\n     ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A} &&&\n     cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr> =\n     ZFC_in_HOL.set\n      {f. \\<exists>m n.\n             f :\n             cat_ordinal\n              m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n           n \\<and>\n             m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A} &&&\n     cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomDom\\<rparr>)) &&&\n    cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr> =\n    (\\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {f. \\<exists>m n.\n    f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n \\<and>\n    m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n        f\\<lparr>HomCod\\<rparr>) &&&\n    cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n        gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr> =\n    VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n     dghm_id", "unfolding cat_simplicial_def dg_field_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. ([ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A},\n      ZFC_in_HOL.set\n       {f. \\<exists>m n.\n              f :\n              cat_ordinal\n               m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n            n \\<and>\n              m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomDom\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomCod\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n         gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n       dghm_id]\\<^sub>\\<circ>\\<lparr>[]\\<^sub>\\<circ>\\<rparr> =\n     ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A} &&&\n     [ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A},\n      ZFC_in_HOL.set\n       {f. \\<exists>m n.\n              f :\n              cat_ordinal\n               m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n            n \\<and>\n              m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomDom\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomCod\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n         gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n       dghm_id]\\<^sub>\\<circ>\\<lparr>1\\<^sub>\\<nat>\\<rparr> =\n     ZFC_in_HOL.set\n      {f. \\<exists>m n.\n             f :\n             cat_ordinal\n              m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n           n \\<and>\n             m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A} &&&\n     [ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A},\n      ZFC_in_HOL.set\n       {f. \\<exists>m n.\n              f :\n              cat_ordinal\n               m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n            n \\<and>\n              m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomDom\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomCod\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n         gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n       dghm_id]\\<^sub>\\<circ>\\<lparr>2\\<^sub>\\<nat>\\<rparr> =\n     (\\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomDom\\<rparr>)) &&&\n    [ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A},\n     ZFC_in_HOL.set\n      {f. \\<exists>m n.\n             f :\n             cat_ordinal\n              m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n           n \\<and>\n             m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A},\n     \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {f. \\<exists>m n.\n    f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n \\<and>\n    m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n        f\\<lparr>HomDom\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {f. \\<exists>m n.\n    f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n \\<and>\n    m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n        f\\<lparr>HomCod\\<rparr>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n        gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n      dghm_id]\\<^sub>\\<circ>\\<lparr>3\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {f. \\<exists>m n.\n    f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n \\<and>\n    m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n        f\\<lparr>HomCod\\<rparr>) &&&\n    [ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A},\n     ZFC_in_HOL.set\n      {f. \\<exists>m n.\n             f :\n             cat_ordinal\n              m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n           n \\<and>\n             m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A},\n     \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {f. \\<exists>m n.\n    f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n \\<and>\n    m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n        f\\<lparr>HomDom\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {f. \\<exists>m n.\n    f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n \\<and>\n    m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n        f\\<lparr>HomCod\\<rparr>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n        gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n      dghm_id]\\<^sub>\\<circ>\\<lparr>4\\<^sub>\\<nat>\\<rparr> =\n    (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n        gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>) &&&\n    [ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A},\n     ZFC_in_HOL.set\n      {f. \\<exists>m n.\n             f :\n             cat_ordinal\n              m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n           n \\<and>\n             m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A},\n     \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {f. \\<exists>m n.\n    f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n \\<and>\n    m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n        f\\<lparr>HomDom\\<rparr>,\n     \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                   {f. \\<exists>m n.\n    f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n \\<and>\n    m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n        f\\<lparr>HomCod\\<rparr>,\n     \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n        gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n     VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n      dghm_id]\\<^sub>\\<circ>\\<lparr>5\\<^sub>\\<nat>\\<rparr> =\n    VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n     dghm_id", "by (simp_all add: nat_omega_simps)"], ["", "subsubsection\\<open>Objects\\<close>"], ["", "lemma cat_simplicial_ObjI[cat_simplicial_cs_intros]:\n  assumes \"m \\<in>\\<^sub>\\<circ> A\" and \"a = cat_ordinal m\"\n  shows \"a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n  a = cat_ordinal m\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n  a = cat_ordinal m\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A}", "by auto"], ["", "lemma cat_simplicial_ObjD:\n  assumes \"cat_ordinal m \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> \"\n  shows \"m \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in>\\<^sub>\\<circ> A", "using assms cat_ordinal_inj"], ["proof (prove)\nusing this:\n  cat_ordinal m\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. m \\<in>\\<^sub>\\<circ> A", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  cat_ordinal m\n  \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                       {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A}\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. m \\<in>\\<^sub>\\<circ> A", "by auto"], ["", "lemma cat_simplicial_ObjE:\n  assumes \"M \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> \"\n  obtains m where \"M = cat_ordinal m\" and \"m \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>M = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms cat_ordinal_inj that"], ["proof (prove)\nusing this:\n  M \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n\n  \\<lbrakk>M = cat_ordinal ?m; ?m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>M = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  M \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A}\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n\n  \\<lbrakk>M = cat_ordinal ?m; ?m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>M = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["", "subsubsection\\<open>Arrows\\<close>"], ["", "lemma small_cat_simplicial_Arr[simp]: \n  \"small {f. \\<exists>m n. f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n \\<and> m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}\"\n  (is \\<open>small ?S\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. small\n     {f. \\<exists>m n.\n            f :\n            cat_ordinal\n             m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n          n \\<and>\n            m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}", "proof(rule down)"], ["proof (state)\ngoal (1 subgoal):\n 1. {f. \\<exists>m n.\n           f :\n           cat_ordinal\n            m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n         n \\<and>\n           m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}\n    \\<subseteq> elts ?x", "show \"?S \\<subseteq> elts (all_cfs \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. \\<exists>m n.\n           f :\n           cat_ordinal\n            m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n         n \\<and>\n           m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}\n    \\<subseteq> elts (all_cfs \\<alpha>)", "by auto"], ["proof (state)\nthis:\n  {f. \\<exists>m n.\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n \\<and>\n         m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}\n  \\<subseteq> elts (all_cfs \\<alpha>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_simplicial_ArrI[cat_simplicial_cs_intros]:\n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" and \"m \\<in>\\<^sub>\\<circ> A\" and \"n \\<in>\\<^sub>\\<circ> A\" \n  shows \"f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                           {f. \\<exists>m n.\n                                  f :\n                                  cat_ordinal\n                                   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n                                n \\<and>\n                                  m \\<in>\\<^sub>\\<circ> A \\<and>\n                                  n \\<in>\\<^sub>\\<circ> A}", "by (intro in_small_setI small_cat_simplicial_Arr) auto"], ["", "lemma cat_simplicial_ArrE:\n  assumes \"f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\"\n  obtains m n \n    where \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" and \"m \\<in>\\<^sub>\\<circ> A\" and \"n \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms cat_ordinal_inj"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n", "obtain m n \n    where \"m \\<in>\\<^sub>\\<circ> A\" \"n \\<in>\\<^sub>\\<circ> A\" \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {f. \\<exists>m n.\n                                f :\n                                cat_ordinal\n                                 m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n                              n \\<and>\n                                m \\<in>\\<^sub>\\<circ> A \\<and>\n                                n \\<in>\\<^sub>\\<circ> A}\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim in_small_setE, intro small_cat_simplicial_Arr) auto"], ["proof (state)\nthis:\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that"], ["proof (chain)\npicking this:\n  \\<lbrakk>f :\n           cat_ordinal\n            ?m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n          ?n;\n   ?m \\<in>\\<^sub>\\<circ> A; ?n \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>f :\n           cat_ordinal\n            ?m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n          ?n;\n   ?m \\<in>\\<^sub>\\<circ> A; ?n \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n  \\<Longrightarrow> thesis\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Domain\\<close>"], ["", "mk_VLambda cat_simplicial_components(3)\n  |vsv cat_simplicial_Dom_vsv[cat_simplicial_cs_intros]|\n  |vdomain \n    cat_simplicial_Dom_vdomain[\n      folded cat_simplicial_components, cat_simplicial_cs_simps\n    ]\n  |\n  |app cat_simplicial_Dom_app[folded cat_simplicial_components]|"], ["", "lemma cat_simplicial_Dom_app'[cat_simplicial_cs_simps]:\n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" and \"m \\<in>\\<^sub>\\<circ> A\" and \"n \\<in>\\<^sub>\\<circ> A\" \n  shows \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal m", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal m", "interpret f: is_preorder_functor \\<alpha> \\<open>cat_ordinal m\\<close> \\<open>cat_ordinal n\\<close> f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal m", "from assms"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A", "show \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal m\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal m", "by \n      (\n        cs_concl \n          cs_simp: cat_cs_simps cat_simplicial_Dom_app \n          cs_intro: cat_simplicial_cs_intros\n      )"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Codomain\\<close>"], ["", "mk_VLambda cat_simplicial_components(4)\n  |vsv cat_simplicial_Cod_vsv[cat_simplicial_cs_intros]|\n  |vdomain \n    cat_simplicial_Cod_vdomain[\n      folded cat_simplicial_components, cat_simplicial_cs_simps\n    ]\n  |\n  |app cat_simplicial_Cod_app[folded cat_simplicial_components]|"], ["", "lemma cat_simplicial_Cod_app'[cat_simplicial_cs_simps]:\n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" and \"m \\<in>\\<^sub>\\<circ> A\" and \"n \\<in>\\<^sub>\\<circ> A\" \n  shows \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal n", "interpret f: is_preorder_functor \\<alpha> \\<open>cat_ordinal m\\<close> \\<open>cat_ordinal n\\<close> f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "by (rule assms(1))"], ["proof (state)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal n", "from assms"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A", "show \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal n\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal n", "by \n      (\n        cs_concl\n          cs_simp: cat_cs_simps cat_simplicial_Cod_app \n          cs_intro: cat_simplicial_cs_intros\n      )"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Arrow with a domain and a codomain\\<close>"], ["", "lemma cat_simplicial_is_arrI: \n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n  shows \"f : cat_ordinal m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : cat_ordinal\n         m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n", "proof(intro is_arrI cat_simplicial_ArrI, rule assms; (intro assms(2,3))?)"], ["proof (state)\ngoal (2 subgoals):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal m\n 2. cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal n", "from assms"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A", "show \n    \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal m\"\n    \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal n\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal m &&&\n    cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal n", "by (cs_concl cs_simp: cat_simplicial_cs_simps)+"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_simplicial_is_arrI'[cat_simplicial_cs_intros]: \n  assumes \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n    and \"a = cat_ordinal m\"\n    and \"b = cat_ordinal n\"\n  shows \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b", "using assms(1-3)"], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b", "unfolding assms(4-5)"], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. f : cat_ordinal\n         m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n", "by (rule cat_simplicial_is_arrI)"], ["", "lemma cat_simplicial_is_arrD[dest]: \n  assumes \"f : cat_ordinal m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n  shows \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "note f = is_arrD[OF assms(1)]"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "from f(1)"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>", "obtain m' n' \n    where f_is_preorder_functor: \"f : cat_ordinal m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n'\" \n      and \"m' \\<in>\\<^sub>\\<circ> A\"\n      and \"n' \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>m' n'.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n                n';\n         m' \\<in>\\<^sub>\\<circ> A; n' \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_simplicial_ArrE)"], ["proof (state)\nthis:\n  f :\n  cat_ordinal\n   m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n n'\n  m' \\<in>\\<^sub>\\<circ> A\n  n' \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "then"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n n'\n  m' \\<in>\\<^sub>\\<circ> A\n  n' \\<in>\\<^sub>\\<circ> A", "have \n    \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal m'\"\n    \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal n'\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n n'\n  m' \\<in>\\<^sub>\\<circ> A\n  n' \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal m' &&&\n    cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal n'", "by (cs_concl cs_simp: cat_simplicial_cs_simps)+"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m'\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n'\n\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "with f(2,3)"], ["proof (chain)\npicking this:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m'\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n'", "have \n    \"cat_ordinal m' = cat_ordinal m\" \"cat_ordinal n' = cat_ordinal n\""], ["proof (prove)\nusing this:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m'\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n'\n\ngoal (1 subgoal):\n 1. cat_ordinal m' = cat_ordinal m &&& cat_ordinal n' = cat_ordinal n", "by auto"], ["proof (state)\nthis:\n  cat_ordinal m' = cat_ordinal m\n  cat_ordinal n' = cat_ordinal n\n\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "with f(2,3) cat_ordinal_inj"], ["proof (chain)\npicking this:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n\n  cat_ordinal m' = cat_ordinal m\n  cat_ordinal n' = cat_ordinal n", "have [simp]: \"m' = m\" \"n' = n\""], ["proof (prove)\nusing this:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n  cat_ordinal ?m = cat_ordinal ?n \\<Longrightarrow> ?m = ?n\n  cat_ordinal m' = cat_ordinal m\n  cat_ordinal n' = cat_ordinal n\n\ngoal (1 subgoal):\n 1. m' = m &&& n' = n", "by auto"], ["proof (state)\nthis:\n  m' = m\n  n' = n\n\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "from f_is_preorder_functor"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n n'", "show ?thesis"], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n n'\n\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "by simp"], ["proof (state)\nthis:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cat_simplicial_is_arrE[elim]: \n  assumes \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\"\n  obtains m n where \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\"\n    and \"a = cat_ordinal m\"\n    and \"b = cat_ordinal n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         a = cat_ordinal m; b = cat_ordinal n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         a = cat_ordinal m; b = cat_ordinal n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note f = is_arrD[OF assms(1)]"], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = b\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         a = cat_ordinal m; b = cat_ordinal n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from f(1)"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>", "obtain m n\n    where f_is_preorder_functor: \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" \n      and m: \"m \\<in>\\<^sub>\\<circ> A\"\n      and n: \"n \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_simplicial_ArrE)"], ["proof (state)\nthis:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         a = cat_ordinal m; b = cat_ordinal n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A", "have \n    \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal m\"\n    \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = cat_ordinal n\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal m &&&\n    cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n    cat_ordinal n", "by (cs_concl cs_simp: cat_simplicial_cs_simps)+"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         a = cat_ordinal m; b = cat_ordinal n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with f(2,3)"], ["proof (chain)\npicking this:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = b\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n", "have \"cat_ordinal m = a\" \"cat_ordinal n = b\""], ["proof (prove)\nusing this:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> = a\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> = b\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal m\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> =\n  cat_ordinal n\n\ngoal (1 subgoal):\n 1. cat_ordinal m = a &&& cat_ordinal n = b", "by auto"], ["proof (state)\nthis:\n  cat_ordinal m = a\n  cat_ordinal n = b\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         a = cat_ordinal m; b = cat_ordinal n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with f_is_preorder_functor m n that"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  \\<lbrakk>f :\n           cat_ordinal\n            ?m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n          ?n;\n   ?m \\<in>\\<^sub>\\<circ> A; ?n \\<in>\\<^sub>\\<circ> A; a = cat_ordinal ?m;\n   b = cat_ordinal ?n\\<rbrakk>\n  \\<Longrightarrow> thesis\n  cat_ordinal m = a\n  cat_ordinal n = b", "show ?thesis"], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  \\<lbrakk>f :\n           cat_ordinal\n            ?m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n          ?n;\n   ?m \\<in>\\<^sub>\\<circ> A; ?n \\<in>\\<^sub>\\<circ> A; a = cat_ordinal ?m;\n   b = cat_ordinal ?n\\<rbrakk>\n  \\<Longrightarrow> thesis\n  cat_ordinal m = a\n  cat_ordinal n = b\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Composition\\<close>"], ["", "mk_VLambda cat_simplicial_components(5)\n  |vsv cat_simplicial_Comp_vsv[cat_simplicial_cs_intros]|\n  |vdomain cat_simplicial_Comp_vdomain[cat_simplicial_cs_simps]|"], ["", "lemma cat_simplicial_Comp_app[cat_simplicial_cs_simps]:\n  assumes \"g : cat_ordinal n \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal p\"\n    and \"f : cat_ordinal m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n\"\n    and \"m \\<in>\\<^sub>\\<circ> A\" \n    and \"n \\<in>\\<^sub>\\<circ> A\" \n    and \"p \\<in>\\<^sub>\\<circ> A\"\n  shows \"g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f = g \\<circ>\\<^sub>C\\<^sub>F f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "note g = cat_simplicial_is_arrD[OF assms(1,4,5)]"], ["proof (state)\nthis:\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "note f = cat_simplicial_is_arrD[OF assms(2,3,4)]"], ["proof (state)\nthis:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "interpret g: is_preorder_functor \\<alpha> \\<open>cat_ordinal n\\<close> \\<open>cat_ordinal p\\<close> g"], ["proof (prove)\ngoal (1 subgoal):\n 1. g :\n    cat_ordinal\n     n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  p", "by (rule g)"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "interpret f: is_preorder_functor \\<alpha> \\<open>cat_ordinal m\\<close> \\<open>cat_ordinal n\\<close> f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "by (rule f)"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "have \"[g, f]\\<^sub>\\<circ> \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "by \n      (\n        intro composable_cat_simplicialI, rule g, rule f; \n        (intro assms refl)?\n      )"], ["proof (state)\nthis:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "then"], ["proof (chain)\npicking this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "show \"g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f = g \\<circ>\\<^sub>C\\<^sub>F f\""], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  [g, f]\\<^sub>\\<circ>\n  \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n        gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n        gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>) \\<lparr>g,\n            f\\<rparr>\\<^sub>\\<bullet> =\n    g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n  g \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Identity\\<close>"], ["", "context\n  fixes \\<alpha> A :: V\nbegin"], ["", "mk_VLambda cat_simplicial_components(6)[where \\<alpha>=\\<alpha> and A=A]\n  |vsv cat_simplicial_CId_vsv[cat_simplicial_cs_intros]|\n  |vdomain \n    cat_simplicial_CId_vdomain'[\n      folded cat_simplicial_components(1)[where \\<alpha>=\\<alpha> and A=A]\n    ]\n  |\n  |app cat_simplicial_CId_app'[\n    folded cat_simplicial_components(1)[where \\<alpha>=\\<alpha> and A=A]\n    ]\n  |"], ["", "lemmas cat_simplicial_CId_vdomain[cat_simplicial_cs_simps] = \n  cat_simplicial_CId_vdomain'"], ["", "lemmas cat_simplicial_CId_app[cat_simplicial_cs_simps] = \n  cat_simplicial_CId_app'"], ["", "end"], ["", "subsubsection\\<open>Simplicial category is a category\\<close>"], ["", "lemma (in \\<Z>) category_simplicial:\n  assumes \"Ord A\" and \"A \\<subseteq>\\<^sub>\\<circ> \\<alpha>\"\n  shows \"category \\<alpha> (cat_simplicial \\<alpha> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_simplicial \\<alpha> A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_simplicial \\<alpha> A)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. category \\<alpha> (cat_simplicial \\<alpha> A)", "proof(intro categoryI')"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vfsequence (cat_simplicial \\<alpha> A)\n 3. vcard (cat_simplicial \\<alpha> A) = 6\\<^sub>\\<nat>\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 6. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 7. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 10. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n     cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\nA total of 20 subgoals...", "show \"vfsequence (cat_simplicial \\<alpha> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence (cat_simplicial \\<alpha> A)", "unfolding cat_simplicial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vfsequence\n     [ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A},\n      ZFC_in_HOL.set\n       {f. \\<exists>m n.\n              f :\n              cat_ordinal\n               m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n            n \\<and>\n              m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomDom\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomCod\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n         gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n       dghm_id]\\<^sub>\\<circ>", "by simp"], ["proof (state)\nthis:\n  vfsequence (cat_simplicial \\<alpha> A)\n\ngoal (19 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vcard (cat_simplicial \\<alpha> A) = 6\\<^sub>\\<nat>\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 6. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 10. \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n     \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\nA total of 19 subgoals...", "show \"vcard (cat_simplicial \\<alpha> A) = 6\\<^sub>\\<nat>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard (cat_simplicial \\<alpha> A) = 6\\<^sub>\\<nat>", "unfolding cat_simplicial_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vcard\n     [ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A},\n      ZFC_in_HOL.set\n       {f. \\<exists>m n.\n              f :\n              cat_ordinal\n               m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n            n \\<and>\n              m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A},\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomDom\\<rparr>,\n      \\<lambda>f\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                    {f. \\<exists>m n.\n     f :\n     cat_ordinal\n      m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n   n \\<and>\n     m \\<in>\\<^sub>\\<circ> A \\<and> n \\<in>\\<^sub>\\<circ> A}.\n         f\\<lparr>HomCod\\<rparr>,\n      \\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial \\<alpha> A.\n         gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n         gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n      VLambda (ZFC_in_HOL.set {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A})\n       dghm_id]\\<^sub>\\<circ> =\n    6\\<^sub>\\<nat>", "by (simp add: nat_omega_simps)"], ["proof (state)\nthis:\n  vcard (cat_simplicial \\<alpha> A) = 6\\<^sub>\\<nat>\n\ngoal (18 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 9. \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 10. \\<And>gf.\n        (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                 (cat_simplicial \\<alpha>\n                                   A\\<lparr>Comp\\<rparr>)) =\n        (\\<exists>g f b c a.\n            gf = [g, f]\\<^sub>\\<circ> \\<and>\n            g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n            f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b)\nA total of 18 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "proof(rule vsv.vsv_vrange_vsubset, unfold cat_simplicial_cs_simps)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "assume \"f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>", "obtain m n \n        where \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" \n          and \"m \\<in>\\<^sub>\\<circ> A\" \n          and \"n \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_simplicial_ArrE)"], ["proof (state)\nthis:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A", "show \"cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "by (auto simp: cat_simplicial_Dom_app' intro: cat_simplicial_ObjI)"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>\\<lparr>f\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)", "qed (auto simp: cat_simplicial_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (17 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (cat_simplicial \\<alpha>\n                                  A\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b)\n 10. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n     cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\nA total of 17 subgoals...", "show \"\\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n    \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "proof(rule vsv.vsv_vrange_vsubset, unfold cat_simplicial_cs_simps)"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "assume \"f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\""], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n\ngoal (2 subgoals):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>", "obtain m n \n        where \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\" \n          and \"m \\<in>\\<^sub>\\<circ> A\" \n          and \"n \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim cat_simplicial_ArrE)"], ["proof (state)\nthis:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 2. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Arr\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>x\\<rparr>\n       \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "then"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A", "show \"cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr> \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n    \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "by (auto simp: cat_simplicial_Cod_app' intro: cat_simplicial_ObjI)"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>\\<lparr>f\\<rparr>\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)", "qed (auto simp: cat_simplicial_components)"], ["proof (state)\nthis:\n  \\<R>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (16 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<And>gf.\n       (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                                (cat_simplicial \\<alpha>\n                                  A\\<lparr>Comp\\<rparr>)) =\n       (\\<exists>g f b c a.\n           gf = [g, f]\\<^sub>\\<circ> \\<and>\n           g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n           f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b)\n 9. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 10. \\<And>b c g a f.\n        \\<lbrakk>g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                          f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\nA total of 16 subgoals...", "show \"(gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)) \\<longleftrightarrow>\n      (\n        \\<exists>g f b c a.\n          gf = [g, f]\\<^sub>\\<circ> \\<and>\n          g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n          f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n      )\"\n      for gf"], ["proof (prove)\ngoal (1 subgoal):\n 1. (gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                             (cat_simplicial \\<alpha>\n                               A\\<lparr>Comp\\<rparr>)) =\n    (\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b)", "proof(intro iffI; (elim exE conjE)?)"], ["proof (state)\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (cat_simplicial \\<alpha>\n                              A\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n 2. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "assume \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\""], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (cat_simplicial \\<alpha>\n                              A\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n 2. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "have \"gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (\\<lambda>gf\\<in>\\<^sub>\\<circ>composable_cat_simplicial\n                    \\<alpha> A.\n                              gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr> \\<circ>\\<^sub>D\\<^sub>G\\<^sub>H\\<^sub>M\n                              gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>)\n\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "by simp"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (cat_simplicial \\<alpha>\n                              A\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n 2. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "obtain g f m n p \n        where gf_def: \"gf = [g, f]\\<^sub>\\<circ>\" \n          and g: \"g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\"\n          and f: \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n          and m: \"m \\<in>\\<^sub>\\<circ> A\" \n          and n: \"n \\<in>\\<^sub>\\<circ> A\"\n          and p: \"p \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  gf \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A\n\ngoal (1 subgoal):\n 1. (\\<And>g f n p m.\n        \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n         g :\n         cat_ordinal\n          n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       p;\n         f :\n         cat_ordinal\n          m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         p \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A\n\ngoal (2 subgoals):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (cat_simplicial \\<alpha>\n                              A\\<lparr>Comp\\<rparr>) \\<Longrightarrow>\n    \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n 2. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "show \"\\<exists>g f b c a.\n        gf = [g, f]\\<^sub>\\<circ> \\<and>\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g f b c a.\n       gf = [g, f]\\<^sub>\\<circ> \\<and>\n       g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n       f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b", "proof(intro exI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. gf = [?g, ?f1]\\<^sub>\\<circ>\n 2. ?g : ?b2 \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?c3\n 3. ?f1 : ?a4 \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?b2", "from g n p"], ["proof (chain)\npicking this:\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A", "show \"g : cat_ordinal n \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal p\""], ["proof (prove)\nusing this:\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. g : cat_ordinal\n         n \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal p", "by (intro cat_simplicial_is_arrI) simp_all"], ["proof (state)\nthis:\n  g : cat_ordinal\n       n \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal p\n\ngoal (2 subgoals):\n 1. gf = [g, ?f1]\\<^sub>\\<circ>\n 2. ?f1 : ?a4 \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                            n", "from f m n"], ["proof (chain)\npicking this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A", "show \"f : cat_ordinal m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n\""], ["proof (prove)\nusing this:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. f : cat_ordinal\n         m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n", "by (intro cat_simplicial_is_arrI) simp_all"], ["proof (state)\nthis:\n  f : cat_ordinal\n       m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal n\n\ngoal (1 subgoal):\n 1. gf = [g, f]\\<^sub>\\<circ>", "qed (simp add: gf_def)"], ["proof (state)\nthis:\n  \\<exists>g f b c a.\n     gf = [g, f]\\<^sub>\\<circ> \\<and>\n     g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n     f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "fix g f a b c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "assume prems:\n        \"gf = [g, f]\\<^sub>\\<circ>\" \n        \"g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\"\n        \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\""], ["proof (state)\nthis:\n  gf = [g, f]\\<^sub>\\<circ>\n  g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "from prems(2)"], ["proof (chain)\npicking this:\n  g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c", "obtain n p \n        where g: \"g : cat_ordinal n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal p\"\n          and n: \"n \\<in>\\<^sub>\\<circ> A\" \n          and p: \"p \\<in>\\<^sub>\\<circ> A\"\n          and b_def: \"b = cat_ordinal n\" \n          and \"c = cat_ordinal p\""], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\n\ngoal (1 subgoal):\n 1. (\\<And>n p.\n        \\<lbrakk>g :\n                 cat_ordinal\n                  n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               p;\n         n \\<in>\\<^sub>\\<circ> A; p \\<in>\\<^sub>\\<circ> A;\n         b = cat_ordinal n; c = cat_ordinal p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g :\n  cat_ordinal\n   n \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\np\n  n \\<in>\\<^sub>\\<circ> A\n  p \\<in>\\<^sub>\\<circ> A\n  b = cat_ordinal n\n  c = cat_ordinal p\n\ngoal (1 subgoal):\n 1. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "from prems(3)"], ["proof (chain)\npicking this:\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b", "obtain m n'\n        where f: \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n'\"\n          and m: \"m \\<in>\\<^sub>\\<circ> A\" \n          and n': \"n' \\<in>\\<^sub>\\<circ> A\"\n          and a_def: \"a = cat_ordinal m\" \n          and b_def': \"b = cat_ordinal n'\""], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>m n'.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n';\n         m \\<in>\\<^sub>\\<circ> A; n' \\<in>\\<^sub>\\<circ> A;\n         a = cat_ordinal m; b = cat_ordinal n'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn'\n  m \\<in>\\<^sub>\\<circ> A\n  n' \\<in>\\<^sub>\\<circ> A\n  a = cat_ordinal m\n  b = cat_ordinal n'\n\ngoal (1 subgoal):\n 1. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "from b_def b_def'"], ["proof (chain)\npicking this:\n  b = cat_ordinal n\n  b = cat_ordinal n'", "have n'n: \"n' = n\""], ["proof (prove)\nusing this:\n  b = cat_ordinal n\n  b = cat_ordinal n'\n\ngoal (1 subgoal):\n 1. n' = n", "by (auto simp: cat_ordinal_inj)"], ["proof (state)\nthis:\n  n' = n\n\ngoal (1 subgoal):\n 1. \\<And>g f b c a.\n       \\<lbrakk>gf = [g, f]\\<^sub>\\<circ>;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n           (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "show \"gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                            (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)", "unfolding prems(1) cat_simplicial_Comp_vdomain"], ["proof (prove)\ngoal (1 subgoal):\n 1. [g, f]\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> composable_cat_simplicial \\<alpha> A", "by (intro composable_cat_simplicialI, rule g, rule f[unfolded n'n])\n          (simp_all add:  m n p)"], ["proof (state)\nthis:\n  gf \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                          (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (?gf\n   \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                        (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)) =\n  (\\<exists>g f b c a.\n      ?gf = [g, f]\\<^sub>\\<circ> \\<and>\n      g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<and>\n      f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b)\n\ngoal (15 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. \\<And>b c g a f.\n       \\<lbrakk>g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                         f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\n 10. \\<And>c d h b g a f.\n        \\<lbrakk>h : c \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> d;\n         g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n         f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                          g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                          f =\n                          h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                          (g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                           f)\nA total of 15 subgoals...", "show \"g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\"\n      if \"g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\" and \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\"\n      for b c g a f"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c", "using that"], ["proof (prove)\nusing this:\n  g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n\ngoal (1 subgoal):\n 1. g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c", "by (elim cat_simplicial_is_arrE; simp only: cat_ordinal_inj)\n        (\n          cs_concl \n            cs_simp: cat_simplicial_cs_simps \n            cs_intro: cat_order_cs_intros cat_simplicial_cs_intros\n        )"], ["proof (state)\nthis:\n  \\<lbrakk>?g : ?b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                    ?f : ?a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?c\n\ngoal (14 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. \\<And>c d h b g a f.\n       \\<lbrakk>h : c \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> d;\n        g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c;\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                          f)\n 10. \\<And>a.\n        a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                               A\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n        cat_simplicial \\<alpha>\n         A\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> a\nA total of 14 subgoals...", "show \"h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f =\n      h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> (g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f)\"\n      if \"h : c \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> d\"\n        and \"g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\"\n        and \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\"\n      for c d h b g a f"], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f)", "using that"], ["proof (prove)\nusing this:\n  h : c \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> d\n  g : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n\ngoal (1 subgoal):\n 1. h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    f =\n    h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    (g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f)", "apply(elim cat_simplicial_is_arrE; simp only:)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m n ma na mb nb.\n       \\<lbrakk>h :\n                cat_ordinal\n                 m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n              n;\n        m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal na = cat_ordinal m; d = cat_ordinal n;\n        g :\n        cat_ordinal\n         ma \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       m;\n        ma \\<in>\\<^sub>\\<circ> A; na \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal nb = cat_ordinal ma; c = cat_ordinal m;\n        f :\n        cat_ordinal\n         mb \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n       ma;\n        mb \\<in>\\<^sub>\\<circ> A; nb \\<in>\\<^sub>\\<circ> A;\n        a = cat_ordinal mb; b = cat_ordinal ma;\n        h : cat_ordinal\n             m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                             n;\n        g : cat_ordinal\n             ma \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                              m;\n        f : cat_ordinal\n             mb \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                              ma\\<rbrakk>\n       \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                         g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                         f =\n                         h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                         (g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                          f)", "subgoal for m n m' n' m'' n''"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h :\n             cat_ordinal\n              m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n           n;\n     m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n     cat_ordinal n' = cat_ordinal m; d = cat_ordinal n;\n     g :\n     cat_ordinal\n      m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n    m;\n     m' \\<in>\\<^sub>\\<circ> A; n' \\<in>\\<^sub>\\<circ> A;\n     cat_ordinal n'' = cat_ordinal m'; c = cat_ordinal m;\n     f :\n     cat_ordinal\n      m'' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n     m';\n     m'' \\<in>\\<^sub>\\<circ> A; n'' \\<in>\\<^sub>\\<circ> A;\n     a = cat_ordinal m''; b = cat_ordinal m';\n     h : cat_ordinal\n          m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                          n;\n     g : cat_ordinal\n          m' \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                           m;\n     f : cat_ordinal\n          m'' \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                            m'\\<rbrakk>\n    \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                      g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                      f =\n                      h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                      (g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                       f)", "(*FIXME: investigate comp_no_flatten*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h :\n             cat_ordinal\n              m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n           n;\n     m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n     cat_ordinal n' = cat_ordinal m; d = cat_ordinal n;\n     g :\n     cat_ordinal\n      m' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n    m;\n     m' \\<in>\\<^sub>\\<circ> A; n' \\<in>\\<^sub>\\<circ> A;\n     cat_ordinal n'' = cat_ordinal m'; c = cat_ordinal m;\n     f :\n     cat_ordinal\n      m'' \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n     m';\n     m'' \\<in>\\<^sub>\\<circ> A; n'' \\<in>\\<^sub>\\<circ> A;\n     a = cat_ordinal m''; b = cat_ordinal m';\n     h : cat_ordinal\n          m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                          n;\n     g : cat_ordinal\n          m' \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                           m;\n     f : cat_ordinal\n          m'' \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n                            m'\\<rbrakk>\n    \\<Longrightarrow> h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                      g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                      f =\n                      h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                      (g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                       f)", "by \n          (\n            cs_concl \n              cs_simp: cat_cs_simps cat_simplicial_cs_simps \n              cs_intro: cat_order_cs_intros cat_simplicial_cs_intros\n          )+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>?h : ?c \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?d;\n   ?g : ?b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?c;\n   ?f : ?a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?b\\<rbrakk>\n  \\<Longrightarrow> ?h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                    ?g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                    ?f =\n                    ?h \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                    (?g \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n                     ?f)\n\ngoal (13 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. \\<And>a.\n       a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                              A\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n       cat_simplicial \\<alpha>\n        A\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> a\n 10. \\<And>a b f.\n        f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b \\<Longrightarrow>\n        cat_simplicial \\<alpha>\n         A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n        f =\n        f\nA total of 13 subgoals...", "show \"cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> a\"\n      if \"a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha>\n     A\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> a", "using that"], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha>\n     A\\<lparr>CId\\<rparr>\\<lparr>a\\<rparr> : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> a", "proof(elim cat_simplicial_ObjE; simp only:)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>a = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal m\n        \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                             A\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> cat_simplicial \\<alpha>\n                          A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                 m\\<rparr> : cat_ordinal\n                              m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n        m", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>a = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal m\n        \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                             A\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> cat_simplicial \\<alpha>\n                          A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                 m\\<rparr> : cat_ordinal\n                              m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n        m", "assume prems: \"m \\<in>\\<^sub>\\<circ> A\" \"cat_ordinal m \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\""], ["proof (state)\nthis:\n  m \\<in>\\<^sub>\\<circ> A\n  cat_ordinal m\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>a = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal m\n        \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                             A\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> cat_simplicial \\<alpha>\n                          A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                 m\\<rparr> : cat_ordinal\n                              m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n        m", "moreover"], ["proof (state)\nthis:\n  m \\<in>\\<^sub>\\<circ> A\n  cat_ordinal m\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>a = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal m\n        \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                             A\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> cat_simplicial \\<alpha>\n                          A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                 m\\<rparr> : cat_ordinal\n                              m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n        m", "from prems(1) assms(1)"], ["proof (chain)\npicking this:\n  m \\<in>\\<^sub>\\<circ> A\n  Ord A", "have \"Ord m\""], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n  Ord A\n\ngoal (1 subgoal):\n 1. Ord m", "by auto"], ["proof (state)\nthis:\n  Ord m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>a = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal m\n        \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                             A\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> cat_simplicial \\<alpha>\n                          A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                 m\\<rparr> : cat_ordinal\n                              m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n        m", "moreover"], ["proof (state)\nthis:\n  Ord m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>a = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal m\n        \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                             A\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> cat_simplicial \\<alpha>\n                          A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                 m\\<rparr> : cat_ordinal\n                              m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n        m", "from prems assms"], ["proof (chain)\npicking this:\n  m \\<in>\\<^sub>\\<circ> A\n  cat_ordinal m\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n  Ord A\n  A \\<subseteq>\\<^sub>\\<circ> \\<alpha>", "have \"m \\<subseteq>\\<^sub>\\<circ> \\<alpha>\""], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n  cat_ordinal m\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n  Ord A\n  A \\<subseteq>\\<^sub>\\<circ> \\<alpha>\n\ngoal (1 subgoal):\n 1. m \\<subseteq>\\<^sub>\\<circ> \\<alpha>", "by (meson Ord_trans vsubsetI rev_vsubsetD)"], ["proof (state)\nthis:\n  m \\<subseteq>\\<^sub>\\<circ> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>a = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A;\n        cat_ordinal m\n        \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                             A\\<lparr>Obj\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> cat_simplicial \\<alpha>\n                          A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                 m\\<rparr> : cat_ordinal\n                              m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal\n        m", "ultimately"], ["proof (chain)\npicking this:\n  m \\<in>\\<^sub>\\<circ> A\n  cat_ordinal m\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n  Ord m\n  m \\<subseteq>\\<^sub>\\<circ> \\<alpha>", "show \"cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal m\\<rparr> :\n        cat_ordinal m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal m\""], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n  cat_ordinal m\n  \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n  Ord m\n  m \\<subseteq>\\<^sub>\\<circ> \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha>\n     A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                                  m\\<rparr> : cat_ordinal\n         m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal m", "by \n          (\n            cs_concl \n              cs_simp: cat_simplicial_cs_simps \n              cs_intro: \n                cat_ordinal_cs_intros \n                cat_order_cs_intros\n                cat_simplicial_cs_intros\n          )"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha>\n   A\\<lparr>CId\\<rparr>\\<lparr>cat_ordinal\n                                m\\<rparr> : cat_ordinal\n       m \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_ordinal m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                          A\\<lparr>Obj\\<rparr> \\<Longrightarrow>\n  cat_simplicial \\<alpha>\n   A\\<lparr>CId\\<rparr>\\<lparr>?a\\<rparr> : ?a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?a\n\ngoal (12 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. \\<And>a b f.\n       f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b \\<Longrightarrow>\n       cat_simplicial \\<alpha>\n        A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n       f =\n       f\n 10. \\<And>b c f.\n        f : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<Longrightarrow>\n        f \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n        cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n        f\nA total of 12 subgoals...", "show \"cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> f = f\"\n      if \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\" for a b f"], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha>\n     A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    f =\n    f", "using that"], ["proof (prove)\nusing this:\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha>\n     A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    f =\n    f", "by (elim cat_simplicial_is_arrE; simp only:)\n        (\n          cs_concl \n            cs_simp: cat_cs_simps cat_simplicial_cs_simps\n            cs_intro: cat_order_cs_intros cat_simplicial_cs_intros\n        )"], ["proof (state)\nthis:\n  ?f : ?a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?b \\<Longrightarrow>\n  cat_simplicial \\<alpha>\n   A\\<lparr>CId\\<rparr>\\<lparr>?b\\<rparr> \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n  ?f =\n  ?f\n\ngoal (11 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. \\<And>b c f.\n       f : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c \\<Longrightarrow>\n       f \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n       cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n       f\n 10. cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n     \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\nA total of 11 subgoals...", "show \"f \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> = f\"\n      if \"f : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\" for b c f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n    f", "using that"], ["proof (prove)\nusing this:\n  f : b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> c\n\ngoal (1 subgoal):\n 1. f \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n    cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>b\\<rparr> =\n    f", "by (elim cat_simplicial_is_arrE; simp only:)\n        (\n          cs_concl\n            cs_simp: cat_cs_simps cat_simplicial_cs_simps\n            cs_intro: cat_order_cs_intros cat_simplicial_cs_intros\n        )"], ["proof (state)\nthis:\n  ?f : ?b \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> ?c \\<Longrightarrow>\n  ?f \\<circ>\\<^sub>A\\<^bsub>cat_simplicial \\<alpha> A\\<^esub>\n  cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>\\<lparr>?b\\<rparr> =\n  ?f\n\ngoal (10 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n 10. \\<And>Aa B.\n        \\<lbrakk>Aa \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n         A\\<lparr>Obj\\<rparr>;\n         B \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha>\nA\\<lparr>Obj\\<rparr>;\n         Aa \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n         B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>Aa.\n                                \\<Union>\\<^sub>\\<circ>\n                                 (VLambda B\n                                   (Hom (cat_simplicial \\<alpha> A)\n                                     a) `\\<^sub>\\<circ>\n                                  B)) `\\<^sub>\\<circ>\n                            Aa)\n                          \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr> \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>", "proof(intro vsubsetI, elim cat_simplicial_ObjE; simp only:)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "assume prems: \"m \\<in>\\<^sub>\\<circ> A\""], ["proof (state)\nthis:\n  m \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  m \\<in>\\<^sub>\\<circ> A", "have \"Ord m\""], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. Ord m", "using assms(1)"], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n  Ord A\n\ngoal (1 subgoal):\n 1. Ord m", "by auto"], ["proof (state)\nthis:\n  Ord m\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "moreover"], ["proof (state)\nthis:\n  Ord m\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "from prems"], ["proof (chain)\npicking this:\n  m \\<in>\\<^sub>\\<circ> A", "have \"m \\<in>\\<^sub>\\<circ> \\<alpha>\""], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. m \\<in>\\<^sub>\\<circ> \\<alpha>", "using assms(2)"], ["proof (prove)\nusing this:\n  m \\<in>\\<^sub>\\<circ> A\n  A \\<subseteq>\\<^sub>\\<circ> \\<alpha>\n\ngoal (1 subgoal):\n 1. m \\<in>\\<^sub>\\<circ> \\<alpha>", "by auto"], ["proof (state)\nthis:\n  m \\<in>\\<^sub>\\<circ> \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "ultimately"], ["proof (chain)\npicking this:\n  Ord m\n  m \\<in>\\<^sub>\\<circ> \\<alpha>", "interpret m: cat_tiny_linear_order \\<alpha> \\<open>cat_ordinal m\\<close>"], ["proof (prove)\nusing this:\n  Ord m\n  m \\<in>\\<^sub>\\<circ> \\<alpha>\n\ngoal (1 subgoal):\n 1. cat_tiny_linear_order \\<alpha> (cat_ordinal m)", "by (intro cat_tiny_linear_order_cat_ordinal)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n       \\<Longrightarrow> cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (rule m.tiny_cat_in_Vset)"], ["proof (state)\nthis:\n  cat_ordinal m \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n  \\<subseteq>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (9 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n 9. \\<And>Aa B.\n       \\<lbrakk>Aa \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n        A\\<lparr>Obj\\<rparr>;\n        B \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha>\n                                     A\\<lparr>Obj\\<rparr>;\n        Aa \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n        B \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n       \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>Aa.\n                               \\<Union>\\<^sub>\\<circ>\n                                (VLambda B\n                                  (Hom (cat_simplicial \\<alpha> A)\n                                    a) `\\<^sub>\\<circ>\n                                 B)) `\\<^sub>\\<circ>\n                           Aa)\n                         \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show \"(\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A'. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B'. Hom (cat_simplicial \\<alpha> A) a b) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n      if \"A' \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\"\n        and \"B' \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\"\n        and \"A' \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n        and \"B' \\<in>\\<^sub>\\<circ> Vset \\<alpha>\"\n      for A' B'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "define Q where \"Q i =\n        (\n          if i = 0 \\<Rightarrow> VPow ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>b'\\<in>\\<^sub>\\<circ>B'. b'\\<lparr>Obj\\<rparr>))\n           | i = 1\\<^sub>\\<nat> \\<Rightarrow> VPow \n              (((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>)) \\<times>\\<^sub>\\<circ>\n              ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>)))\n           | i = 2\\<^sub>\\<nat> \\<Rightarrow> A'\n           | i = 3\\<^sub>\\<nat> \\<Rightarrow> B'\n           | otherwise \\<Rightarrow> 0\n        )\"\n        for i"], ["proof (state)\nthis:\n  Q ?i =\n  (if ?i = []\\<^sub>\\<circ> \\<Rightarrow>\n        VPow\n         (\\<Union>\\<^sub>\\<circ>\n           ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n            A') \\<times>\\<^sub>\\<circ>\n          \\<Union>\\<^sub>\\<circ>\n           ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n            B')) \n    | ?i = 1\\<^sub>\\<nat> \\<Rightarrow>\n        VPow\n         ((\\<Union>\\<^sub>\\<circ>\n            ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                 a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n             A') \\<times>\\<^sub>\\<bullet>\n           \\<Union>\\<^sub>\\<circ>\n            ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                 a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n             A')) \\<times>\\<^sub>\\<circ>\n          \\<Union>\\<^sub>\\<circ>\n           ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n            B') \\<times>\\<^sub>\\<bullet>\n          \\<Union>\\<^sub>\\<circ>\n           ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n            B')) \n    | ?i = 2\\<^sub>\\<nat> \\<Rightarrow> A' \n    | ?i = 3\\<^sub>\\<nat> \\<Rightarrow> B' \n    | otherwise \\<Rightarrow> []\\<^sub>\\<circ>)\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "let ?Q = \n        \\<open>{\n          [fo, fa, a, b]\\<^sub>\\<circ> | fo fa a b.\n            fo \\<subseteq>\\<^sub>\\<circ> ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>b'\\<in>\\<^sub>\\<circ>B'. b'\\<lparr>Obj\\<rparr>)) \\<and>\n            fa \\<subseteq>\\<^sub>\\<circ>\n              ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>)) \\<times>\\<^sub>\\<circ>\n              ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>)) \\<and>\n            a \\<in>\\<^sub>\\<circ> A' \\<and>\n            b \\<in>\\<^sub>\\<circ> B'\n         }\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have QQ: \"?Q \\<subseteq> elts (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set {0, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}. Q i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n     fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A') \\<times>\\<^sub>\\<circ>\n                                  \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    B') \\<and>\n     fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     A') \\<times>\\<^sub>\\<bullet>\n                                   \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     A')) \\<times>\\<^sub>\\<circ>\n                                  \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    B') \\<times>\\<^sub>\\<bullet>\n                                  \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    B') \\<and>\n     a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n    \\<subseteq> elts\n                 (vproduct\n                   (ZFC_in_HOL.set\n                     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                      3\\<^sub>\\<nat>})\n                   Q)", "proof(intro subsetI, unfold mem_Collect_eq, elim exE conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x fo fa a b.\n       \\<lbrakk>x = [fo, fa, a, b]\\<^sub>\\<circ>;\n        fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n A') \\<times>\\<^sub>\\<circ>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B');\n        fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n  A') \\<times>\\<^sub>\\<bullet>\n\\<Union>\\<^sub>\\<circ>\n ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n  A')) \\<times>\\<^sub>\\<circ>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B') \\<times>\\<^sub>\\<bullet>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B');\n        a \\<in>\\<^sub>\\<circ> A'; b \\<in>\\<^sub>\\<circ> B'\\<rbrakk>\n       \\<Longrightarrow> x \\<in>\\<^sub>\\<circ> vproduct\n          (ZFC_in_HOL.set\n            {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n             3\\<^sub>\\<nat>})\n          Q", "fix x fo fa a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x fo fa a b.\n       \\<lbrakk>x = [fo, fa, a, b]\\<^sub>\\<circ>;\n        fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n A') \\<times>\\<^sub>\\<circ>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B');\n        fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n  A') \\<times>\\<^sub>\\<bullet>\n\\<Union>\\<^sub>\\<circ>\n ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n  A')) \\<times>\\<^sub>\\<circ>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B') \\<times>\\<^sub>\\<bullet>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B');\n        a \\<in>\\<^sub>\\<circ> A'; b \\<in>\\<^sub>\\<circ> B'\\<rbrakk>\n       \\<Longrightarrow> x \\<in>\\<^sub>\\<circ> vproduct\n          (ZFC_in_HOL.set\n            {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n             3\\<^sub>\\<nat>})\n          Q", "assume prems: \n          \"x = [fo, fa, a, b]\\<^sub>\\<circ>\"\n          \"fo \\<subseteq>\\<^sub>\\<circ> ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>b'\\<in>\\<^sub>\\<circ>B'. b'\\<lparr>Obj\\<rparr>))\"\n          \"fa \\<subseteq>\\<^sub>\\<circ>\n            ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>)) \\<times>\\<^sub>\\<circ>\n            ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>))\"\n          \"a \\<in>\\<^sub>\\<circ> A'\"\n          \"b \\<in>\\<^sub>\\<circ> B'\""], ["proof (state)\nthis:\n  x = [fo, fa, a, b]\\<^sub>\\<circ>\n  fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 A') \\<times>\\<^sub>\\<circ>\n                               \\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 B')\n  fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  A') \\<times>\\<^sub>\\<bullet>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  A')) \\<times>\\<^sub>\\<circ>\n                               \\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 B') \\<times>\\<^sub>\\<bullet>\n                               \\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 B')\n  a \\<in>\\<^sub>\\<circ> A'\n  b \\<in>\\<^sub>\\<circ> B'\n\ngoal (1 subgoal):\n 1. \\<And>x fo fa a b.\n       \\<lbrakk>x = [fo, fa, a, b]\\<^sub>\\<circ>;\n        fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n A') \\<times>\\<^sub>\\<circ>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B');\n        fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n  A') \\<times>\\<^sub>\\<bullet>\n\\<Union>\\<^sub>\\<circ>\n ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n  A')) \\<times>\\<^sub>\\<circ>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B') \\<times>\\<^sub>\\<bullet>\n                                     \\<Union>\\<^sub>\\<circ>\n((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n B');\n        a \\<in>\\<^sub>\\<circ> A'; b \\<in>\\<^sub>\\<circ> B'\\<rbrakk>\n       \\<Longrightarrow> x \\<in>\\<^sub>\\<circ> vproduct\n          (ZFC_in_HOL.set\n            {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n             3\\<^sub>\\<nat>})\n          Q", "show \"x \\<in>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set {0, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}. Q i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> vproduct\n                           (ZFC_in_HOL.set\n                             {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                              2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n                           Q", "proof(intro vproductI, unfold Ball_def; (intro allI impI)?)"], ["proof (state)\ngoal (3 subgoals):\n 1. vsv x\n 2. \\<D>\\<^sub>\\<circ> x =\n    ZFC_in_HOL.set\n     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}\n 3. \\<And>xa.\n       xa \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>,\n                                3\\<^sub>\\<nat>} \\<Longrightarrow>\n       x\\<lparr>xa\\<rparr> \\<in>\\<^sub>\\<circ> Q xa", "show \"\\<D>\\<^sub>\\<circ> x = set {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> x =\n    ZFC_in_HOL.set\n     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}", "unfolding prems(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D>\\<^sub>\\<circ> [fo, fa, a, b]\\<^sub>\\<circ> =\n    ZFC_in_HOL.set\n     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}", "by (force simp: nat_omega_simps)"], ["proof (state)\nthis:\n  \\<D>\\<^sub>\\<circ> x =\n  ZFC_in_HOL.set\n   {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}\n\ngoal (2 subgoals):\n 1. vsv x\n 2. \\<And>xa.\n       xa \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>,\n                                3\\<^sub>\\<nat>} \\<Longrightarrow>\n       x\\<lparr>xa\\<rparr> \\<in>\\<^sub>\\<circ> Q xa", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. vsv x\n 2. \\<And>xa.\n       xa \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>,\n                                3\\<^sub>\\<nat>} \\<Longrightarrow>\n       x\\<lparr>xa\\<rparr> \\<in>\\<^sub>\\<circ> Q xa", "assume \"i \\<in>\\<^sub>\\<circ> set {0, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                          3\\<^sub>\\<nat>}\n\ngoal (2 subgoals):\n 1. vsv x\n 2. \\<And>xa.\n       xa \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>,\n                                3\\<^sub>\\<nat>} \\<Longrightarrow>\n       x\\<lparr>xa\\<rparr> \\<in>\\<^sub>\\<circ> Q xa", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                          3\\<^sub>\\<nat>}", "consider \\<open>i = 0\\<close> | \\<open>i = 1\\<^sub>\\<nat>\\<close> | \\<open>i = 2\\<^sub>\\<nat>\\<close> | \\<open>i = 3\\<^sub>\\<nat>\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                          3\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> thesis;\n     i = 1\\<^sub>\\<nat> \\<Longrightarrow> thesis;\n     i = 2\\<^sub>\\<nat> \\<Longrightarrow> thesis;\n     i = 3\\<^sub>\\<nat> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 3\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. vsv x\n 2. \\<And>xa.\n       xa \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>,\n                                3\\<^sub>\\<nat>} \\<Longrightarrow>\n       x\\<lparr>xa\\<rparr> \\<in>\\<^sub>\\<circ> Q xa", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 3\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"x\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> Q i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 3\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> Q i", "by cases (auto simp: Q_def prems nat_omega_simps)"], ["proof (state)\nthis:\n  x\\<lparr>i\\<rparr> \\<in>\\<^sub>\\<circ> Q i\n\ngoal (1 subgoal):\n 1. vsv x", "qed (auto simp: prems)"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> vproduct\n                         (ZFC_in_HOL.set\n                           {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                            2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n                         Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n   fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  A') \\<times>\\<^sub>\\<circ>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<and>\n   fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A') \\<times>\\<^sub>\\<bullet>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A')) \\<times>\\<^sub>\\<circ>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<times>\\<^sub>\\<bullet>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<and>\n   a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n  \\<subseteq> elts\n               (vproduct\n                 (ZFC_in_HOL.set\n                   {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                    3\\<^sub>\\<nat>})\n                 Q)\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "then"], ["proof (chain)\npicking this:\n  {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n   fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  A') \\<times>\\<^sub>\\<circ>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<and>\n   fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A') \\<times>\\<^sub>\\<bullet>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A')) \\<times>\\<^sub>\\<circ>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<times>\\<^sub>\\<bullet>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<and>\n   a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n  \\<subseteq> elts\n               (vproduct\n                 (ZFC_in_HOL.set\n                   {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                    3\\<^sub>\\<nat>})\n                 Q)", "have small_Q[simp]: \"small ?Q\""], ["proof (prove)\nusing this:\n  {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n   fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  A') \\<times>\\<^sub>\\<circ>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<and>\n   fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A') \\<times>\\<^sub>\\<bullet>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A')) \\<times>\\<^sub>\\<circ>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<times>\\<^sub>\\<bullet>\n                                \\<Union>\\<^sub>\\<circ>\n                                 ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\na\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                  B') \\<and>\n   a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n  \\<subseteq> elts\n               (vproduct\n                 (ZFC_in_HOL.set\n                   {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                    3\\<^sub>\\<nat>})\n                 Q)\n\ngoal (1 subgoal):\n 1. small\n     {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n      fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     A') \\<times>\\<^sub>\\<circ>\n                                   \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     B') \\<and>\n      fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\nA') \\<times>\\<^sub>\\<bullet>\n                                    \\<Union>\\<^sub>\\<circ>\n                                     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\nA')) \\<times>\\<^sub>\\<circ>\n                                   \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     B') \\<times>\\<^sub>\\<bullet>\n                                   \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     B') \\<and>\n      a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}", "by (intro down)"], ["proof (state)\nthis:\n  small\n   {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n    fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A') \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A') \\<times>\\<^sub>\\<bullet>\n                                  \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A')) \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<times>\\<^sub>\\<bullet>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have \"(\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A'. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B'. Hom (cat_simplicial \\<alpha> A) a b) \\<subseteq>\\<^sub>\\<circ> set ?Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                               {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                                fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                         A') \\<times>\\<^sub>\\<circ>\n                       \\<Union>\\<^sub>\\<circ>\n                        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                         B') \\<and>\n                                fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          A') \\<times>\\<^sub>\\<bullet>\n                        \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          A')) \\<times>\\<^sub>\\<circ>\n                       \\<Union>\\<^sub>\\<circ>\n                        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                         B') \\<times>\\<^sub>\\<bullet>\n                       \\<Union>\\<^sub>\\<circ>\n                        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                         B') \\<and>\n                                a \\<in>\\<^sub>\\<circ> A' \\<and>\n                                b \\<in>\\<^sub>\\<circ> B'}", "proof(intro vsubsetI in_small_setI small_Q)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   \\<Union>\\<^sub>\\<circ>\n                                    (VLambda B'\n(Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n                                     B')) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in> {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         A') \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A') \\<times>\\<^sub>\\<bullet>\n        \\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A')) \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<times>\\<^sub>\\<bullet>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   \\<Union>\\<^sub>\\<circ>\n                                    (VLambda B'\n(Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n                                     B')) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in> {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         A') \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A') \\<times>\\<^sub>\\<bullet>\n        \\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A')) \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<times>\\<^sub>\\<bullet>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}", "assume \"f \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>a\\<in>\\<^sub>\\<circ>A'. \\<Union>\\<^sub>\\<circ>b\\<in>\\<^sub>\\<circ>B'. Hom (cat_simplicial \\<alpha> A) a b)\""], ["proof (state)\nthis:\n  f \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              \\<Union>\\<^sub>\\<circ>\n                               (VLambda B'\n                                 (Hom (cat_simplicial \\<alpha> A)\n                                   a) `\\<^sub>\\<circ>\n                                B')) `\\<^sub>\\<circ>\n                          A')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   \\<Union>\\<^sub>\\<circ>\n                                    (VLambda B'\n(Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n                                     B')) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in> {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         A') \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A') \\<times>\\<^sub>\\<bullet>\n        \\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A')) \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<times>\\<^sub>\\<bullet>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}", "then"], ["proof (chain)\npicking this:\n  f \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              \\<Union>\\<^sub>\\<circ>\n                               (VLambda B'\n                                 (Hom (cat_simplicial \\<alpha> A)\n                                   a) `\\<^sub>\\<circ>\n                                B')) `\\<^sub>\\<circ>\n                          A')", "obtain a b \n          where a: \"a \\<in>\\<^sub>\\<circ> A'\" \n            and b: \"b \\<in>\\<^sub>\\<circ> B'\" \n            and \"f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\""], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              \\<Union>\\<^sub>\\<circ>\n                               (VLambda B'\n                                 (Hom (cat_simplicial \\<alpha> A)\n                                   a) `\\<^sub>\\<circ>\n                                B')) `\\<^sub>\\<circ>\n                          A')\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in>\\<^sub>\\<circ> A'; b \\<in>\\<^sub>\\<circ> B';\n         f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in>\\<^sub>\\<circ> A'\n  b \\<in>\\<^sub>\\<circ> B'\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   \\<Union>\\<^sub>\\<circ>\n                                    (VLambda B'\n(Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n                                     B')) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in> {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         A') \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A') \\<times>\\<^sub>\\<bullet>\n        \\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A')) \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<times>\\<^sub>\\<bullet>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}", "then"], ["proof (chain)\npicking this:\n  a \\<in>\\<^sub>\\<circ> A'\n  b \\<in>\\<^sub>\\<circ> B'\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b", "obtain m n \n          where f: \"f : cat_ordinal m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal n\"\n            and m: \"m \\<in>\\<^sub>\\<circ> A\" \n            and n: \"n \\<in>\\<^sub>\\<circ> A\" \n            and a_def: \"a = cat_ordinal m\" \n            and b_def: \"b = cat_ordinal n\""], ["proof (prove)\nusing this:\n  a \\<in>\\<^sub>\\<circ> A'\n  b \\<in>\\<^sub>\\<circ> B'\n  f : a \\<mapsto>\\<^bsub>cat_simplicial \\<alpha> A\\<^esub> b\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>f :\n                 cat_ordinal\n                  m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n               n;\n         m \\<in>\\<^sub>\\<circ> A; n \\<in>\\<^sub>\\<circ> A;\n         a = cat_ordinal m; b = cat_ordinal n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f :\n  cat_ordinal\n   m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\nn\n  m \\<in>\\<^sub>\\<circ> A\n  n \\<in>\\<^sub>\\<circ> A\n  a = cat_ordinal m\n  b = cat_ordinal n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   \\<Union>\\<^sub>\\<circ>\n                                    (VLambda B'\n(Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n                                     B')) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in> {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         A') \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A') \\<times>\\<^sub>\\<bullet>\n        \\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A')) \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<times>\\<^sub>\\<bullet>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}", "interpret f: is_preorder_functor \\<alpha> \\<open>cat_ordinal m\\<close> \\<open>cat_ordinal n\\<close> f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f :\n    cat_ordinal\n     m \\<le>\\<^sub>C\\<^sub>.\\<^sub>P\\<^sub>E\\<^sub>O\\<^bsub>\\<alpha>\\<^esub> cat_ordinal\n  n", "by (rule f)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   \\<Union>\\<^sub>\\<circ>\n                                    (VLambda B'\n(Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n                                     B')) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in> {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         A') \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A') \\<times>\\<^sub>\\<bullet>\n        \\<Union>\\<^sub>\\<circ>\n         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n          A')) \\<times>\\<^sub>\\<circ>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<times>\\<^sub>\\<bullet>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         B') \\<and>\n                a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}", "show \"f \\<in> ?Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n             fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      A') \\<times>\\<^sub>\\<circ>\n    \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B') \\<and>\n             fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n      ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n       A') \\<times>\\<^sub>\\<bullet>\n     \\<Union>\\<^sub>\\<circ>\n      ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n       A')) \\<times>\\<^sub>\\<circ>\n    \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B') \\<times>\\<^sub>\\<bullet>\n    \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B') \\<and>\n             a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}", "proof(unfold mem_Collect_eq, intro exI conjI)"], ["proof (state)\ngoal (5 subgoals):\n 1. f = [?fo, ?fa1, ?a2, ?b3]\\<^sub>\\<circ>\n 2. ?fo\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<circ>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                B')\n 3. ?fa1\n    \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 A') \\<times>\\<^sub>\\<bullet>\n                               \\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 A')) \\<times>\\<^sub>\\<circ>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                B') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                B')\n 4. ?a2 \\<in>\\<^sub>\\<circ> A'\n 5. ?b3 \\<in>\\<^sub>\\<circ> B'", "show \"f\\<lparr>ObjMap\\<rparr> \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>b'\\<in>\\<^sub>\\<circ>B'. b'\\<lparr>Obj\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<lparr>ObjMap\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<circ>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                B')", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ObjMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ObjMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "assume prems: \"x \\<in>\\<^sub>\\<circ> f\\<lparr>ObjMap\\<rparr>\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> f\\<lparr>ObjMap\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ObjMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "obtain xl xr \n              where x_def: \"x = \\<langle>xl, xr\\<rangle>\" \n                and xl: \"xl \\<in>\\<^sub>\\<circ> cat_ordinal m\\<lparr>Obj\\<rparr>\" \n                and xr: \"xr \\<in>\\<^sub>\\<circ> (\\<R>\\<^sub>\\<circ> (f\\<lparr>ObjMap\\<rparr>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xl xr.\n        \\<lbrakk>x = \\<langle>xl, xr\\<rangle>;\n         xl \\<in>\\<^sub>\\<circ> cat_ordinal m\\<lparr>Obj\\<rparr>;\n         xr \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                                 (f\\<lparr>ObjMap\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim f.ObjMap.vbrelation_vinE[OF prems, unfolded cat_cs_simps])"], ["proof (state)\nthis:\n  x = \\<langle>xl, xr\\<rangle>\n  xl \\<in>\\<^sub>\\<circ> cat_ordinal m\\<lparr>Obj\\<rparr>\n  xr \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ObjMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ObjMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "show \"x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>b'\\<in>\\<^sub>\\<circ>B'. b'\\<lparr>Obj\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                            A') \\<times>\\<^sub>\\<circ>\n                          \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                            B')", "unfolding x_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>xl, xr\\<rangle>\n    \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          A') \\<times>\\<^sub>\\<circ>\n                        \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B')", "proof(standard; (intro vifunionI))"], ["proof (state)\ngoal (4 subgoals):\n 1. ?i9 \\<in>\\<^sub>\\<circ> A'\n 2. xl \\<in>\\<^sub>\\<circ> ?i9\\<lparr>Obj\\<rparr>\n 3. ?i6 \\<in>\\<^sub>\\<circ> B'\n 4. xr \\<in>\\<^sub>\\<circ> ?i6\\<lparr>Obj\\<rparr>", "from xr f.cf_ObjMap_vrange"], ["proof (chain)\npicking this:\n  xr \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ObjMap\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (f\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Obj\\<rparr>", "show \"xr \\<in>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  xr \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ObjMap\\<rparr>)\n  \\<R>\\<^sub>\\<circ> (f\\<lparr>ObjMap\\<rparr>)\n  \\<subseteq>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. xr \\<in>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  xr \\<in>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Obj\\<rparr>\n\ngoal (3 subgoals):\n 1. ?i9 \\<in>\\<^sub>\\<circ> A'\n 2. xl \\<in>\\<^sub>\\<circ> ?i9\\<lparr>Obj\\<rparr>\n 3. cat_ordinal n \\<in>\\<^sub>\\<circ> B'", "qed (use a b in \\<open>auto intro: xl simp: a_def b_def\\<close>)"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          A') \\<times>\\<^sub>\\<circ>\n                        \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f\\<lparr>ObjMap\\<rparr>\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                              A') \\<times>\\<^sub>\\<circ>\n                            \\<Union>\\<^sub>\\<circ>\n                             ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                              B')\n\ngoal (4 subgoals):\n 1. f = [f\\<lparr>ObjMap\\<rparr>, ?fa1, ?a2, ?b3]\\<^sub>\\<circ>\n 2. ?fa1\n    \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 A') \\<times>\\<^sub>\\<bullet>\n                               \\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 A')) \\<times>\\<^sub>\\<circ>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                B') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                B')\n 3. ?a2 \\<in>\\<^sub>\\<circ> A'\n 4. ?b3 \\<in>\\<^sub>\\<circ> B'", "show \"f\\<lparr>ArrMap\\<rparr> \\<subseteq>\\<^sub>\\<circ>\n            ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>)) \\<times>\\<^sub>\\<circ>\n            ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f\\<lparr>ArrMap\\<rparr>\n    \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 A') \\<times>\\<^sub>\\<bullet>\n                               \\<Union>\\<^sub>\\<circ>\n                                ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                     a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                 A')) \\<times>\\<^sub>\\<circ>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                B') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                B')", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A')) \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<times>\\<^sub>\\<bullet>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A')) \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<times>\\<^sub>\\<bullet>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "assume prems: \"x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr>\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A')) \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<times>\\<^sub>\\<bullet>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "obtain xl xr \n              where x_def: \"x = \\<langle>xl, xr\\<rangle>\" \n                and xl: \"xl \\<in>\\<^sub>\\<circ> cat_ordinal m\\<lparr>Arr\\<rparr>\" \n                and xr: \"xr \\<in>\\<^sub>\\<circ> (\\<R>\\<^sub>\\<circ> (f\\<lparr>ArrMap\\<rparr>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xl xr.\n        \\<lbrakk>x = \\<langle>xl, xr\\<rangle>;\n         xl \\<in>\\<^sub>\\<circ> cat_ordinal m\\<lparr>Arr\\<rparr>;\n         xr \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ>\n                                 (f\\<lparr>ArrMap\\<rparr>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim f.ArrMap.vbrelation_vinE[OF prems, unfolded cat_cs_simps])"], ["proof (state)\nthis:\n  x = \\<langle>xl, xr\\<rangle>\n  xl \\<in>\\<^sub>\\<circ> cat_ordinal m\\<lparr>Arr\\<rparr>\n  xr \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ArrMap\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A')) \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<times>\\<^sub>\\<bullet>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "from xr vsubsetD"], ["proof (chain)\npicking this:\n  xr \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ArrMap\\<rparr>)\n  \\<lbrakk>?A \\<subseteq>\\<^sub>\\<circ> ?B;\n   ?x \\<in>\\<^sub>\\<circ> ?A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in>\\<^sub>\\<circ> ?B", "have xr: \"xr \\<in>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Arr\\<rparr>\""], ["proof (prove)\nusing this:\n  xr \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> (f\\<lparr>ArrMap\\<rparr>)\n  \\<lbrakk>?A \\<subseteq>\\<^sub>\\<circ> ?B;\n   ?x \\<in>\\<^sub>\\<circ> ?A\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in>\\<^sub>\\<circ> ?B\n\ngoal (1 subgoal):\n 1. xr \\<in>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Arr\\<rparr>", "by (auto intro: f.cf_ArrMap_vrange)"], ["proof (state)\nthis:\n  xr \\<in>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A')) \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<times>\\<^sub>\\<bullet>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "from xl"], ["proof (chain)\npicking this:\n  xl \\<in>\\<^sub>\\<circ> cat_ordinal m\\<lparr>Arr\\<rparr>", "obtain xll xlr where xl_def: \"xl = [xll, xlr]\\<^sub>\\<circ>\" \n              and xll_m: \"xll \\<in>\\<^sub>\\<circ> m\" \n              and xlr_m: \"xlr \\<in>\\<^sub>\\<circ> m\" \n              and \"xll \\<subseteq>\\<^sub>\\<circ> xlr\""], ["proof (prove)\nusing this:\n  xl \\<in>\\<^sub>\\<circ> cat_ordinal m\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>xll xlr.\n        \\<lbrakk>xl = [xll, xlr]\\<^sub>\\<circ>; xll \\<in>\\<^sub>\\<circ> m;\n         xlr \\<in>\\<^sub>\\<circ> m;\n         xll \\<subseteq>\\<^sub>\\<circ> xlr\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ordinal_arrs_def cat_ordinal_components"], ["proof (prove)\nusing this:\n  xl \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                          {[a, b]\\<^sub>\\<circ> |a b.\n                           a \\<in>\\<^sub>\\<circ> m \\<and>\n                           b \\<in>\\<^sub>\\<circ> m \\<and>\n                           a \\<subseteq>\\<^sub>\\<circ> b}\n\ngoal (1 subgoal):\n 1. (\\<And>xll xlr.\n        \\<lbrakk>xl = [xll, xlr]\\<^sub>\\<circ>; xll \\<in>\\<^sub>\\<circ> m;\n         xlr \\<in>\\<^sub>\\<circ> m;\n         xll \\<subseteq>\\<^sub>\\<circ> xlr\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  xl = [xll, xlr]\\<^sub>\\<circ>\n  xll \\<in>\\<^sub>\\<circ> m\n  xlr \\<in>\\<^sub>\\<circ> m\n  xll \\<subseteq>\\<^sub>\\<circ> xlr\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A')) \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<times>\\<^sub>\\<bullet>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "from xr"], ["proof (chain)\npicking this:\n  xr \\<in>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Arr\\<rparr>", "obtain xrl xrr where xr_def: \"xr = [xrl, xrr]\\<^sub>\\<circ>\" \n              and xrl_n: \"xrl \\<in>\\<^sub>\\<circ> n\"\n              and xrr_n:\"xrr \\<in>\\<^sub>\\<circ> n\"\n              and \"xrl \\<subseteq>\\<^sub>\\<circ> xrr\""], ["proof (prove)\nusing this:\n  xr \\<in>\\<^sub>\\<circ> cat_ordinal n\\<lparr>Arr\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>xrl xrr.\n        \\<lbrakk>xr = [xrl, xrr]\\<^sub>\\<circ>; xrl \\<in>\\<^sub>\\<circ> n;\n         xrr \\<in>\\<^sub>\\<circ> n;\n         xrl \\<subseteq>\\<^sub>\\<circ> xrr\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ordinal_arrs_def cat_ordinal_components"], ["proof (prove)\nusing this:\n  xr \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                          {[a, b]\\<^sub>\\<circ> |a b.\n                           a \\<in>\\<^sub>\\<circ> n \\<and>\n                           b \\<in>\\<^sub>\\<circ> n \\<and>\n                           a \\<subseteq>\\<^sub>\\<circ> b}\n\ngoal (1 subgoal):\n 1. (\\<And>xrl xrr.\n        \\<lbrakk>xr = [xrl, xrr]\\<^sub>\\<circ>; xrl \\<in>\\<^sub>\\<circ> n;\n         xrr \\<in>\\<^sub>\\<circ> n;\n         xrl \\<subseteq>\\<^sub>\\<circ> xrr\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  xr = [xrl, xrr]\\<^sub>\\<circ>\n  xrl \\<in>\\<^sub>\\<circ> n\n  xrr \\<in>\\<^sub>\\<circ> n\n  xrl \\<subseteq>\\<^sub>\\<circ> xrr\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> f\\<lparr>ArrMap\\<rparr> \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A') \\<times>\\<^sub>\\<bullet>\n                              \\<Union>\\<^sub>\\<circ>\n                               ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                A')) \\<times>\\<^sub>\\<circ>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<times>\\<^sub>\\<bullet>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B')", "show \"x \\<in>\\<^sub>\\<circ>\n              ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>)) \\<times>\\<^sub>\\<circ>\n              ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                            ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                 a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                             A') \\<times>\\<^sub>\\<bullet>\n                           \\<Union>\\<^sub>\\<circ>\n                            ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                 a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                             A')) \\<times>\\<^sub>\\<circ>\n                          \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                            B') \\<times>\\<^sub>\\<bullet>\n                          \\<Union>\\<^sub>\\<circ>\n                           ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                            B')", "unfolding x_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>xl, xr\\<rangle>\n    \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                               a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                           A') \\<times>\\<^sub>\\<bullet>\n                         \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                               a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                           A')) \\<times>\\<^sub>\\<circ>\n                        \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B') \\<times>\\<^sub>\\<bullet>\n                        \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B')", "by (standard; (intro vifunionI ftimesI1)?)\n                (\n                  use a b in \\<open>\n                    auto\n                      simp: xl_def xr_def a_def b_def cat_ordinal_components\n                      intro: xrr_n xrl_n xlr_m xll_m\n                    \\<close>\n                )"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                               a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                           A') \\<times>\\<^sub>\\<bullet>\n                         \\<Union>\\<^sub>\\<circ>\n                          ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                               a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                           A')) \\<times>\\<^sub>\\<circ>\n                        \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B') \\<times>\\<^sub>\\<bullet>\n                        \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f\\<lparr>ArrMap\\<rparr>\n  \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<times>\\<^sub>\\<bullet>\n                             \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A')) \\<times>\\<^sub>\\<circ>\n                            \\<Union>\\<^sub>\\<circ>\n                             ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                              B') \\<times>\\<^sub>\\<bullet>\n                            \\<Union>\\<^sub>\\<circ>\n                             ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                              B')\n\ngoal (3 subgoals):\n 1. f =\n    [f\\<lparr>ObjMap\\<rparr>, f\\<lparr>ArrMap\\<rparr>, ?a2,\n     ?b3]\\<^sub>\\<circ>\n 2. ?a2 \\<in>\\<^sub>\\<circ> A'\n 3. ?b3 \\<in>\\<^sub>\\<circ> B'", "qed \n          (\n            auto \n              simp: cat_cs_simps \n              intro: a[unfolded a_def] b[unfolded b_def] f.cf_def\n          )"], ["proof (state)\nthis:\n  f \\<in> {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n           fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    A') \\<times>\\<^sub>\\<circ>\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    B') \\<and>\n           fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n    ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n     A') \\<times>\\<^sub>\\<bullet>\n   \\<Union>\\<^sub>\\<circ>\n    ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n     A')) \\<times>\\<^sub>\\<circ>\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    B') \\<times>\\<^sub>\\<bullet>\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    B') \\<and>\n           a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n          B')) `\\<^sub>\\<circ>\n    A')\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                              fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       A') \\<times>\\<^sub>\\<circ>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<and>\n                              fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                        A') \\<times>\\<^sub>\\<bullet>\n                      \\<Union>\\<^sub>\\<circ>\n                       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                        A')) \\<times>\\<^sub>\\<circ>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<times>\\<^sub>\\<bullet>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<and>\n                              a \\<in>\\<^sub>\\<circ> A' \\<and>\n                              b \\<in>\\<^sub>\\<circ> B'}\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "moreover"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n          B')) `\\<^sub>\\<circ>\n    A')\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                              fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       A') \\<times>\\<^sub>\\<circ>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<and>\n                              fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                        A') \\<times>\\<^sub>\\<bullet>\n                      \\<Union>\\<^sub>\\<circ>\n                       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                        A')) \\<times>\\<^sub>\\<circ>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<times>\\<^sub>\\<bullet>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<and>\n                              a \\<in>\\<^sub>\\<circ> A' \\<and>\n                              b \\<in>\\<^sub>\\<circ> B'}\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have \"set ?Q \\<subseteq>\\<^sub>\\<circ> (\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set {0, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}. Q i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n      fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     A') \\<times>\\<^sub>\\<circ>\n                                   \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     B') \\<and>\n      fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\nA') \\<times>\\<^sub>\\<bullet>\n                                    \\<Union>\\<^sub>\\<circ>\n                                     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n    a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\nA')) \\<times>\\<^sub>\\<circ>\n                                   \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     B') \\<times>\\<^sub>\\<bullet>\n                                   \\<Union>\\<^sub>\\<circ>\n                                    ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                     B') \\<and>\n      a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n    \\<subseteq>\\<^sub>\\<circ> vproduct\n                               (ZFC_in_HOL.set\n                                 {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                  2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n                               Q", "by \n          (\n            intro vsubset_if_subset, \n            unfold small_elts_of_set[OF small_Q], \n            intro QQ\n          )"], ["proof (state)\nthis:\n  ZFC_in_HOL.set\n   {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n    fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A') \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A') \\<times>\\<^sub>\\<bullet>\n                                  \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A')) \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<times>\\<^sub>\\<bullet>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n  \\<subseteq>\\<^sub>\\<circ> vproduct\n                             (ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n                             Q\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "moreover"], ["proof (state)\nthis:\n  ZFC_in_HOL.set\n   {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n    fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A') \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A') \\<times>\\<^sub>\\<bullet>\n                                  \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A')) \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<times>\\<^sub>\\<bullet>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n  \\<subseteq>\\<^sub>\\<circ> vproduct\n                             (ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n                             Q\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have \"(\\<Prod>\\<^sub>\\<circ>i\\<in>\\<^sub>\\<circ>set {0, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}. Q i) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vproduct\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n     Q\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "proof(intro Limit_vproduct_in_VsetI)"], ["proof (state)\ngoal (4 subgoals):\n 1. Limit \\<alpha>\n 2. ZFC_in_HOL.set\n     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 4. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "show \"set {0, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>} \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZFC_in_HOL.set\n     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "unfolding four[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4\\<^sub>\\<nat> \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by simp"], ["proof (state)\nthis:\n  ZFC_in_HOL.set\n   {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "have \"(\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>(\\<Union>\\<^sub>\\<circ>r\\<in>\\<^sub>\\<circ>A'. \\<R>\\<^sub>\\<circ> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      A')\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               (\\<Union>\\<^sub>\\<circ>\n                                 (VLambda A'\n                                   \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                  A'))", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda A'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 A'))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda A'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 A'))", "assume \"x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>)\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          A')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda A'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 A'))", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          A')", "obtain a' where a': \"a' \\<in>\\<^sub>\\<circ> A'\" and x: \"x \\<in>\\<^sub>\\<circ> a'\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          A')\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>a' \\<in>\\<^sub>\\<circ> A';\n         x \\<in>\\<^sub>\\<circ> a'\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a' \\<in>\\<^sub>\\<circ> A'\n  x \\<in>\\<^sub>\\<circ> a'\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda A'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 A'))", "from a' that(1)"], ["proof (chain)\npicking this:\n  a' \\<in>\\<^sub>\\<circ> A'\n  A' \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "have \"a' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  a' \\<in>\\<^sub>\\<circ> A'\n  A' \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. a' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  a' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda A'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 A'))", "then"], ["proof (chain)\npicking this:\n  a' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "obtain m where a'_def: \"a' = cat_ordinal m\" and m: \"m \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  a' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>a' = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  a' \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                          {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>a' = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  a' = cat_ordinal m\n  m \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               A') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda A'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 A'))", "show \"x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>(\\<Union>\\<^sub>\\<circ>r\\<in>\\<^sub>\\<circ>A'. \\<R>\\<^sub>\\<circ> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                           (\\<Union>\\<^sub>\\<circ>\n                             (VLambda A' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                              A'))", "proof(rule VUnionI, rule vifunionI)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?i3 \\<in>\\<^sub>\\<circ> A'\n 2. ?x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> ?i3\n 3. x \\<in>\\<^sub>\\<circ> ?x", "from a'_def"], ["proof (chain)\npicking this:\n  a' = cat_ordinal m", "have \"vsv a'\" and \"Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> a'\""], ["proof (prove)\nusing this:\n  a' = cat_ordinal m\n\ngoal (1 subgoal):\n 1. vsv a' &&& Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> a'", "unfolding a'_def cat_ordinal_def Obj_def"], ["proof (prove)\nusing this:\n  [m, ordinal_arrs m,\n   \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n      f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n   \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n      f\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n   \\<lambda>gf\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                  {[[b, c]\\<^sub>\\<circ>,\n                                    [a, b]\\<^sub>\\<circ>]\\<^sub>\\<circ> |\n                                   a b c.\n                                   a \\<in>\\<^sub>\\<circ> m \\<and>\n                                   b \\<in>\\<^sub>\\<circ> m \\<and>\n                                   c \\<in>\\<^sub>\\<circ> m \\<and>\n                                   a \\<subseteq>\\<^sub>\\<circ> b \\<and>\n                                   b \\<subseteq>\\<^sub>\\<circ> c}.\n      [gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n   \\<lambda>x\\<in>\\<^sub>\\<circ>m. [x, x]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n  [m, ordinal_arrs m,\n   \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n      f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n   \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n      f\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n   \\<lambda>gf\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                  {[[b, c]\\<^sub>\\<circ>,\n                                    [a, b]\\<^sub>\\<circ>]\\<^sub>\\<circ> |\n                                   a b c.\n                                   a \\<in>\\<^sub>\\<circ> m \\<and>\n                                   b \\<in>\\<^sub>\\<circ> m \\<and>\n                                   c \\<in>\\<^sub>\\<circ> m \\<and>\n                                   a \\<subseteq>\\<^sub>\\<circ> b \\<and>\n                                   b \\<subseteq>\\<^sub>\\<circ> c}.\n      [gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n   \\<lambda>x\\<in>\\<^sub>\\<circ>m. [x, x]\\<^sub>\\<circ>]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. vsv [m, ordinal_arrs m,\n         \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n            f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n         \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n            f\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n         \\<lambda>gf\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n  {[[b, c]\\<^sub>\\<circ>, [a, b]\\<^sub>\\<circ>]\\<^sub>\\<circ> |a b c.\n   a \\<in>\\<^sub>\\<circ> m \\<and>\n   b \\<in>\\<^sub>\\<circ> m \\<and>\n   c \\<in>\\<^sub>\\<circ> m \\<and>\n   a \\<subseteq>\\<^sub>\\<circ> b \\<and> b \\<subseteq>\\<^sub>\\<circ> c}.\n            [gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n         \\<lambda>x\\<in>\\<^sub>\\<circ>m.\n            [x, x]\\<^sub>\\<circ>]\\<^sub>\\<circ> &&&\n    []\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         [m, ordinal_arrs m,\n                          \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n                             f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                          \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n                             f\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                          \\<lambda>gf\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                   {[[b, c]\\<^sub>\\<circ>,\n                     [a, b]\\<^sub>\\<circ>]\\<^sub>\\<circ> |\n                    a b c.\n                    a \\<in>\\<^sub>\\<circ> m \\<and>\n                    b \\<in>\\<^sub>\\<circ> m \\<and>\n                    c \\<in>\\<^sub>\\<circ> m \\<and>\n                    a \\<subseteq>\\<^sub>\\<circ> b \\<and>\n                    b \\<subseteq>\\<^sub>\\<circ> c}.\n                             [gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                              gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n                          \\<lambda>x\\<in>\\<^sub>\\<circ>m.\n                             [x, x]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vsv a'\n  Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> a'\n\ngoal (3 subgoals):\n 1. ?i3 \\<in>\\<^sub>\\<circ> A'\n 2. ?x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> ?i3\n 3. x \\<in>\\<^sub>\\<circ> ?x", "then"], ["proof (chain)\npicking this:\n  vsv a'\n  Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> a'", "show \"a'\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> a'\""], ["proof (prove)\nusing this:\n  vsv a'\n  Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> a'\n\ngoal (1 subgoal):\n 1. a'\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> a'", "by auto"], ["proof (state)\nthis:\n  a'\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> a'\n\ngoal (2 subgoals):\n 1. a' \\<in>\\<^sub>\\<circ> A'\n 2. x \\<in>\\<^sub>\\<circ> a'\\<lparr>Obj\\<rparr>", "qed (auto simp: x a')"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         (\\<Union>\\<^sub>\\<circ>\n                           (VLambda A' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                            A'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    A')\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (\\<Union>\\<^sub>\\<circ>\n                               (VLambda A'\n                                 \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                A'))\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "moreover"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    A')\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (\\<Union>\\<^sub>\\<circ>\n                               (VLambda A'\n                                 \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                A'))\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "have \"(\\<Union>\\<^sub>\\<circ>r\\<in>\\<^sub>\\<circ>A'. \\<R>\\<^sub>\\<circ> r) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     (VLambda A' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ> A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (intro Limit_VUnion_vrange_in_VsetI[OF Limit_\\<alpha>] that)"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ> (VLambda A' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ> A')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "ultimately"], ["proof (chain)\npicking this:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    A')\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (\\<Union>\\<^sub>\\<circ>\n                               (VLambda A'\n                                 \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                A'))\n  \\<Union>\\<^sub>\\<circ> (VLambda A' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ> A')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have UA': \"(\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    A')\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (\\<Union>\\<^sub>\\<circ>\n                               (VLambda A'\n                                 \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                A'))\n  \\<Union>\\<^sub>\\<circ> (VLambda A' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ> A')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    A')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "have B': \"(\\<Union>\\<^sub>\\<circ>b'\\<in>\\<^sub>\\<circ>B'. b'\\<lparr>Obj\\<rparr>) \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>(\\<Union>\\<^sub>\\<circ>r\\<in>\\<^sub>\\<circ>B'. \\<R>\\<^sub>\\<circ> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B')\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               (\\<Union>\\<^sub>\\<circ>\n                                 (VLambda B'\n                                   \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                  B'))", "(*FIXME: code duplication*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B')\n    \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                               (\\<Union>\\<^sub>\\<circ>\n                                 (VLambda B'\n                                   \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                  B'))", "proof(intro vsubsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda B'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 B'))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda B'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 B'))", "assume \"x \\<in>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>b'\\<in>\\<^sub>\\<circ>B'. b'\\<lparr>Obj\\<rparr>)\""], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda B'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 B'))", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B')", "obtain b' where b': \"b' \\<in>\\<^sub>\\<circ> B'\" and x: \"x \\<in>\\<^sub>\\<circ> b'\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                              a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                          B')\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>b' \\<in>\\<^sub>\\<circ> B';\n         x \\<in>\\<^sub>\\<circ> b'\\<lparr>Obj\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b' \\<in>\\<^sub>\\<circ> B'\n  x \\<in>\\<^sub>\\<circ> b'\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda B'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 B'))", "from b' that(2)"], ["proof (chain)\npicking this:\n  b' \\<in>\\<^sub>\\<circ> B'\n  B' \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "have \"b' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\""], ["proof (prove)\nusing this:\n  b' \\<in>\\<^sub>\\<circ> B'\n  B' \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. b' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "by auto"], ["proof (state)\nthis:\n  b' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda B'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 B'))", "then"], ["proof (chain)\npicking this:\n  b' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "obtain m where b'_def: \"b' = cat_ordinal m\" and m: \"m \\<in>\\<^sub>\\<circ> A\""], ["proof (prove)\nusing this:\n  b' \\<in>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>b' = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding cat_simplicial_components"], ["proof (prove)\nusing this:\n  b' \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                          {cat_ordinal m |m. m \\<in>\\<^sub>\\<circ> A}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>b' = cat_ordinal m; m \\<in>\\<^sub>\\<circ> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  b' = cat_ordinal m\n  m \\<in>\\<^sub>\\<circ> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                                   a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                               B') \\<Longrightarrow>\n       x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                              (\\<Union>\\<^sub>\\<circ>\n                                (VLambda B'\n                                  \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                 B'))", "show \"x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>(\\<Union>\\<^sub>\\<circ>r\\<in>\\<^sub>\\<circ>B'. \\<R>\\<^sub>\\<circ> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                           (\\<Union>\\<^sub>\\<circ>\n                             (VLambda B' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                              B'))", "proof(rule VUnionI, rule vifunionI)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?i3 \\<in>\\<^sub>\\<circ> B'\n 2. ?x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> ?i3\n 3. x \\<in>\\<^sub>\\<circ> ?x", "from b'_def"], ["proof (chain)\npicking this:\n  b' = cat_ordinal m", "have \"vsv b'\" and \"Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> b'\""], ["proof (prove)\nusing this:\n  b' = cat_ordinal m\n\ngoal (1 subgoal):\n 1. vsv b' &&& Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> b'", "unfolding b'_def cat_ordinal_def Obj_def"], ["proof (prove)\nusing this:\n  [m, ordinal_arrs m,\n   \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n      f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n   \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n      f\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n   \\<lambda>gf\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                  {[[b, c]\\<^sub>\\<circ>,\n                                    [a, b]\\<^sub>\\<circ>]\\<^sub>\\<circ> |\n                                   a b c.\n                                   a \\<in>\\<^sub>\\<circ> m \\<and>\n                                   b \\<in>\\<^sub>\\<circ> m \\<and>\n                                   c \\<in>\\<^sub>\\<circ> m \\<and>\n                                   a \\<subseteq>\\<^sub>\\<circ> b \\<and>\n                                   b \\<subseteq>\\<^sub>\\<circ> c}.\n      [gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n   \\<lambda>x\\<in>\\<^sub>\\<circ>m. [x, x]\\<^sub>\\<circ>]\\<^sub>\\<circ> =\n  [m, ordinal_arrs m,\n   \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n      f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n   \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n      f\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n   \\<lambda>gf\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                                  {[[b, c]\\<^sub>\\<circ>,\n                                    [a, b]\\<^sub>\\<circ>]\\<^sub>\\<circ> |\n                                   a b c.\n                                   a \\<in>\\<^sub>\\<circ> m \\<and>\n                                   b \\<in>\\<^sub>\\<circ> m \\<and>\n                                   c \\<in>\\<^sub>\\<circ> m \\<and>\n                                   a \\<subseteq>\\<^sub>\\<circ> b \\<and>\n                                   b \\<subseteq>\\<^sub>\\<circ> c}.\n      [gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n       gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n   \\<lambda>x\\<in>\\<^sub>\\<circ>m. [x, x]\\<^sub>\\<circ>]\\<^sub>\\<circ>\n\ngoal (1 subgoal):\n 1. vsv [m, ordinal_arrs m,\n         \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n            f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n         \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n            f\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n         \\<lambda>gf\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n  {[[b, c]\\<^sub>\\<circ>, [a, b]\\<^sub>\\<circ>]\\<^sub>\\<circ> |a b c.\n   a \\<in>\\<^sub>\\<circ> m \\<and>\n   b \\<in>\\<^sub>\\<circ> m \\<and>\n   c \\<in>\\<^sub>\\<circ> m \\<and>\n   a \\<subseteq>\\<^sub>\\<circ> b \\<and> b \\<subseteq>\\<^sub>\\<circ> c}.\n            [gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n             gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n         \\<lambda>x\\<in>\\<^sub>\\<circ>m.\n            [x, x]\\<^sub>\\<circ>]\\<^sub>\\<circ> &&&\n    []\\<^sub>\\<circ>\n    \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ>\n                         [m, ordinal_arrs m,\n                          \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n                             f\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                          \\<lambda>f\\<in>\\<^sub>\\<circ>ordinal_arrs m.\n                             f\\<lparr>1\\<^sub>\\<nat>\\<rparr>,\n                          \\<lambda>gf\\<in>\\<^sub>\\<circ>ZFC_in_HOL.set\n                   {[[b, c]\\<^sub>\\<circ>,\n                     [a, b]\\<^sub>\\<circ>]\\<^sub>\\<circ> |\n                    a b c.\n                    a \\<in>\\<^sub>\\<circ> m \\<and>\n                    b \\<in>\\<^sub>\\<circ> m \\<and>\n                    c \\<in>\\<^sub>\\<circ> m \\<and>\n                    a \\<subseteq>\\<^sub>\\<circ> b \\<and>\n                    b \\<subseteq>\\<^sub>\\<circ> c}.\n                             [gf\\<lparr>1\\<^sub>\\<nat>\\<rparr>\\<lparr>[]\\<^sub>\\<circ>\\<rparr>,\n                              gf\\<lparr>[]\\<^sub>\\<circ>\\<rparr>\\<lparr>1\\<^sub>\\<nat>\\<rparr>]\\<^sub>\\<circ>,\n                          \\<lambda>x\\<in>\\<^sub>\\<circ>m.\n                             [x, x]\\<^sub>\\<circ>]\\<^sub>\\<circ>", "by auto"], ["proof (state)\nthis:\n  vsv b'\n  Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> b'\n\ngoal (3 subgoals):\n 1. ?i3 \\<in>\\<^sub>\\<circ> B'\n 2. ?x \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> ?i3\n 3. x \\<in>\\<^sub>\\<circ> ?x", "then"], ["proof (chain)\npicking this:\n  vsv b'\n  Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> b'", "show \"b'\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> b'\""], ["proof (prove)\nusing this:\n  vsv b'\n  Obj \\<in>\\<^sub>\\<circ> \\<D>\\<^sub>\\<circ> b'\n\ngoal (1 subgoal):\n 1. b'\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> b'", "by auto"], ["proof (state)\nthis:\n  b'\\<lparr>Obj\\<rparr> \\<in>\\<^sub>\\<circ> \\<R>\\<^sub>\\<circ> b'\n\ngoal (2 subgoals):\n 1. b' \\<in>\\<^sub>\\<circ> B'\n 2. x \\<in>\\<^sub>\\<circ> b'\\<lparr>Obj\\<rparr>", "qed (auto simp: x b')"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                         (\\<Union>\\<^sub>\\<circ>\n                           (VLambda B' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                            B'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    B')\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (\\<Union>\\<^sub>\\<circ>\n                               (VLambda B'\n                                 \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                B'))\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "moreover"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    B')\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (\\<Union>\\<^sub>\\<circ>\n                               (VLambda B'\n                                 \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                B'))\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "have \"(\\<Union>\\<^sub>\\<circ>r\\<in>\\<^sub>\\<circ>B'. \\<R>\\<^sub>\\<circ> r) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     (VLambda B' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ> B')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (intro Limit_VUnion_vrange_in_VsetI[OF Limit_\\<alpha>] that)"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ> (VLambda B' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ> B')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "ultimately"], ["proof (chain)\npicking this:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    B')\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (\\<Union>\\<^sub>\\<circ>\n                               (VLambda B'\n                                 \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                B'))\n  \\<Union>\\<^sub>\\<circ> (VLambda B' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ> B')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "have UB': \"(\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    B')\n  \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                             (\\<Union>\\<^sub>\\<circ>\n                               (VLambda B'\n                                 \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ>\n                                B'))\n  \\<Union>\\<^sub>\\<circ> (VLambda B' \\<R>\\<^sub>\\<circ> `\\<^sub>\\<circ> B')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by blast"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'. a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n    B')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "have [simp]: \n          \"VPow ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>b'\\<in>\\<^sub>\\<circ>B'. b'\\<lparr>Obj\\<rparr>)) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. VPow\n     (\\<Union>\\<^sub>\\<circ>\n       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n        A') \\<times>\\<^sub>\\<circ>\n      \\<Union>\\<^sub>\\<circ>\n       ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n        B'))\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (intro Limit_VPow_in_VsetI Limit_vtimes_in_VsetI UA' UB') auto"], ["proof (state)\nthis:\n  VPow\n   (\\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      A') \\<times>\\<^sub>\\<circ>\n    \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B'))\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "have [simp]:\n          \"VPow\n            (\n              ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>A'. a'\\<lparr>Obj\\<rparr>)) \\<times>\\<^sub>\\<circ>\n              ((\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>) \\<times>\\<^sub>\\<bullet> (\\<Union>\\<^sub>\\<circ>a'\\<in>\\<^sub>\\<circ>B'. a'\\<lparr>Obj\\<rparr>))\n            ) \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. VPow\n     ((\\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         A') \\<times>\\<^sub>\\<bullet>\n       \\<Union>\\<^sub>\\<circ>\n        ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n             a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n         A')) \\<times>\\<^sub>\\<circ>\n      \\<Union>\\<^sub>\\<circ>\n       ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n        B') \\<times>\\<^sub>\\<bullet>\n      \\<Union>\\<^sub>\\<circ>\n       ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n        B'))\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by \n            (\n              intro \n                Limit_VPow_in_VsetI \n                Limit_vtimes_in_VsetI \n                Limit_ftimes_in_VsetI  \n                UA' UB'\n            )\n            auto"], ["proof (state)\nthis:\n  VPow\n   ((\\<Union>\\<^sub>\\<circ>\n      ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n       A') \\<times>\\<^sub>\\<bullet>\n     \\<Union>\\<^sub>\\<circ>\n      ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n       A')) \\<times>\\<^sub>\\<circ>\n    \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B') \\<times>\\<^sub>\\<bullet>\n    \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n          a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n      B'))\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "fix i"], ["proof (state)\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "assume \"i \\<in>\\<^sub>\\<circ> set {0, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>}\""], ["proof (state)\nthis:\n  i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                          3\\<^sub>\\<nat>}\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "then"], ["proof (chain)\npicking this:\n  i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                          3\\<^sub>\\<nat>}", "consider \\<open>i = 0\\<close> | \\<open>i = 1\\<^sub>\\<nat>\\<close> | \\<open>i = 2\\<^sub>\\<nat>\\<close> | \\<open>i = 3\\<^sub>\\<nat>\\<close>"], ["proof (prove)\nusing this:\n  i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                         {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>,\n                          3\\<^sub>\\<nat>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> thesis;\n     i = 1\\<^sub>\\<nat> \\<Longrightarrow> thesis;\n     i = 2\\<^sub>\\<nat> \\<Longrightarrow> thesis;\n     i = 3\\<^sub>\\<nat> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 3\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (3 subgoals):\n 1. Limit \\<alpha>\n 2. \\<And>i.\n       i \\<in>\\<^sub>\\<circ> ZFC_in_HOL.set\n                              {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                               2\\<^sub>\\<nat>,\n                               3\\<^sub>\\<nat>} \\<Longrightarrow>\n       Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n 3. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 3\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i = []\\<^sub>\\<circ> \\<Longrightarrow> ?thesis;\n   i = 1\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 2\\<^sub>\\<nat> \\<Longrightarrow> ?thesis;\n   i = 3\\<^sub>\\<nat> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by cases (simp_all add: Q_def that nat_omega_simps)"], ["proof (state)\nthis:\n  Q i \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (2 subgoals):\n 1. Limit \\<alpha>\n 2. vfinite\n     (ZFC_in_HOL.set\n       {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})", "qed auto"], ["proof (state)\nthis:\n  vproduct\n   (ZFC_in_HOL.set\n     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n   Q\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "ultimately"], ["proof (chain)\npicking this:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n          B')) `\\<^sub>\\<circ>\n    A')\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                              fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       A') \\<times>\\<^sub>\\<circ>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<and>\n                              fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                        A') \\<times>\\<^sub>\\<bullet>\n                      \\<Union>\\<^sub>\\<circ>\n                       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                        A')) \\<times>\\<^sub>\\<circ>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<times>\\<^sub>\\<bullet>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<and>\n                              a \\<in>\\<^sub>\\<circ> A' \\<and>\n                              b \\<in>\\<^sub>\\<circ> B'}\n  ZFC_in_HOL.set\n   {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n    fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A') \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A') \\<times>\\<^sub>\\<bullet>\n                                  \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A')) \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<times>\\<^sub>\\<bullet>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n  \\<subseteq>\\<^sub>\\<circ> vproduct\n                             (ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n                             Q\n  vproduct\n   (ZFC_in_HOL.set\n     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n   Q\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n          B')) `\\<^sub>\\<circ>\n    A')\n  \\<subseteq>\\<^sub>\\<circ> ZFC_in_HOL.set\n                             {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n                              fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       A') \\<times>\\<^sub>\\<circ>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<and>\n                              fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                        A') \\<times>\\<^sub>\\<bullet>\n                      \\<Union>\\<^sub>\\<circ>\n                       ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n                            a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                        A')) \\<times>\\<^sub>\\<circ>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<times>\\<^sub>\\<bullet>\n                     \\<Union>\\<^sub>\\<circ>\n                      ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n                           a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                       B') \\<and>\n                              a \\<in>\\<^sub>\\<circ> A' \\<and>\n                              b \\<in>\\<^sub>\\<circ> B'}\n  ZFC_in_HOL.set\n   {[fo, fa, a, b]\\<^sub>\\<circ> |fo fa a b.\n    fo \\<subseteq>\\<^sub>\\<circ> \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   A') \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    fa \\<subseteq>\\<^sub>\\<circ> (\\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A') \\<times>\\<^sub>\\<bullet>\n                                  \\<Union>\\<^sub>\\<circ>\n                                   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n  a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                    A')) \\<times>\\<^sub>\\<circ>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<times>\\<^sub>\\<bullet>\n                                 \\<Union>\\<^sub>\\<circ>\n                                  ((\\<lambda>a\\<in>\\<^sub>\\<circ>B'.\n a\\<lparr>Obj\\<rparr>) `\\<^sub>\\<circ>\n                                   B') \\<and>\n    a \\<in>\\<^sub>\\<circ> A' \\<and> b \\<in>\\<^sub>\\<circ> B'}\n  \\<subseteq>\\<^sub>\\<circ> vproduct\n                             (ZFC_in_HOL.set\n                               {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>,\n                                2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n                             Q\n  vproduct\n   (ZFC_in_HOL.set\n     {[]\\<^sub>\\<circ>, 1\\<^sub>\\<nat>, 2\\<^sub>\\<nat>, 3\\<^sub>\\<nat>})\n   Q\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Union>\\<^sub>\\<circ>\n     ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n          \\<Union>\\<^sub>\\<circ>\n           (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n            B')) `\\<^sub>\\<circ>\n      A')\n    \\<in>\\<^sub>\\<circ> Vset \\<alpha>", "by (simp add: vsubset_in_VsetI)"], ["proof (state)\nthis:\n  \\<Union>\\<^sub>\\<circ>\n   ((\\<lambda>a\\<in>\\<^sub>\\<circ>A'.\n        \\<Union>\\<^sub>\\<circ>\n         (VLambda B' (Hom (cat_simplicial \\<alpha> A) a) `\\<^sub>\\<circ>\n          B')) `\\<^sub>\\<circ>\n    A')\n  \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?A'\n           \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha>\nA\\<lparr>Obj\\<rparr>;\n   ?B'\n   \\<subseteq>\\<^sub>\\<circ> cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>;\n   ?A' \\<in>\\<^sub>\\<circ> Vset \\<alpha>;\n   ?B' \\<in>\\<^sub>\\<circ> Vset \\<alpha>\\<rbrakk>\n  \\<Longrightarrow> \\<Union>\\<^sub>\\<circ>\n                     ((\\<lambda>a\\<in>\\<^sub>\\<circ>?A'.\n                          \\<Union>\\<^sub>\\<circ>\n                           (VLambda ?B'\n                             (Hom (cat_simplicial \\<alpha> A)\n                               a) `\\<^sub>\\<circ>\n                            ?B')) `\\<^sub>\\<circ>\n                      ?A')\n                    \\<in>\\<^sub>\\<circ> Vset \\<alpha>\n\ngoal (8 subgoals):\n 1. \\<Z> \\<alpha>\n 2. vsv (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>)\n 3. vsv (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>)\n 4. vsv (cat_simplicial \\<alpha> A\\<lparr>Comp\\<rparr>)\n 5. vsv (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>)\n 6. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Dom\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 7. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>Cod\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Arr\\<rparr>\n 8. \\<D>\\<^sub>\\<circ> (cat_simplicial \\<alpha> A\\<lparr>CId\\<rparr>) =\n    cat_simplicial \\<alpha> A\\<lparr>Obj\\<rparr>", "qed (auto simp: cat_simplicial_components)"], ["proof (state)\nthis:\n  category \\<alpha> (cat_simplicial \\<alpha> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\\newpage\\<close>"], ["", "end"]]}