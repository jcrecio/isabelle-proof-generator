{"file_name": "/home/qj213/afp-2021-10-22/thys/IMAP-CRDT/IMAP-proof-independent.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/IMAP-CRDT", "problem_names": ["lemma (in imap) Broadcast_Expunge_Deliver_prefix_closed:\n  assumes \"xs @ [Broadcast (i, Expunge e mo i)] prefix of j\"\n  shows \"Deliver (mo, Append mo e) \\<in> set xs \\<or> \n    (\\<exists> mo2 . Deliver (mo, Store e mo2 mo) \\<in> set xs)\"", "lemma (in imap) Broadcast_Store_Deliver_prefix_closed:\n  assumes \"xs @ [Broadcast (i, Store e mo i)] prefix of j\"\n  shows \"Deliver (mo, Append mo e) \\<in> set xs \\<or> \n    (\\<exists> mo2 . Deliver (mo, Store e mo2 mo) \\<in> set xs)\"", "lemma (in imap) Deliver_added_ids:\n  assumes \"xs prefix of j\"\n    and \"i \\<in> set (added_ids xs e)\"\n  shows \"Deliver (i, Create i e) \\<in> set xs \\<or> \n    (\\<exists> mo . Deliver (i, Expunge e mo i) \\<in> set xs)\"", "lemma (in imap) Broadcast_Deliver_prefix_closed:\n  assumes \"xs @ [Broadcast (r, Delete ix e)] prefix of j\"\n    and \"i \\<in> ix\"\n  shows \"Deliver (i, Create i e) \\<in> set xs \\<or> \n    Deliver (i, Append i e) \\<in> set xs \\<or> \n    (\\<exists> mo . Deliver (i, Expunge e mo i) \\<in> set xs) \\<or> \n    (\\<exists> mo . Deliver (i, Store e mo i) \\<in> set xs)\"", "lemma (in imap) concurrent_create_delete_independent_technical:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Create i e) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Create i e) (ir, Delete is e)\"", "lemma (in imap) concurrent_store_expunge_independent_technical:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e i r) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Store e mo i) (r, Expunge e i r)\"", "lemma (in imap) concurrent_store_expunge_independent_technical2:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e1 mo2 i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"mo2 \\<noteq> r\"", "lemma (in imap) concurrent_store_delete_independent_technical:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Store e mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Store e mo i) (ir, Delete is e)\"", "lemma (in imap) concurrent_append_delete_independent_technical:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Append i e) (ir, Delete is e)\"", "lemma (in imap) concurrent_append_expunge_independent_technical:\n  assumes \"i = mo\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Append i e) (r, Expunge e mo r)\"", "lemma (in imap) concurrent_append_store_independent_technical:\n  assumes \"i = mo\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Store e mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Append i e) (r, Store e mo r)\"", "lemma (in imap) concurrent_expunge_delete_independent_technical:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Expunge e mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Expunge e mo i) (ir, Delete is e)\"", "lemma (in imap) concurrent_store_store_independent_technical:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Store e i r) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Store e mo i) (r, Store e i r)\"", "lemma (in imap) expunge_delete_tag_causality:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\" \n    and \"pre@[Broadcast (ir, Delete is e2)] prefix of k\"\n  shows \"Deliver (i, Expunge e2 mo i) \\<in> set (history k)\"", "lemma (in imap) expunge_delete_ids_imply_messages_same:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\"", "lemma (in imap) store_delete_ids_imply_messages_same:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\"", "lemma (in imap) create_delete_ids_imply_messages_same:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Create i e1) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\"", "lemma (in imap) append_delete_ids_imply_messages_same:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e1) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\"", "lemma (in imap) append_expunge_ids_imply_messages_same:\n  assumes \"i = mo\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e1) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e2 mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\"", "lemma (in imap) append_store_ids_imply_messages_same:\n  assumes \"i = mo\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e1) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Store e2 mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\"", "lemma (in imap) expunge_store_ids_imply_messages_same:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e2 i r) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\"", "lemma (in imap) store_store_ids_imply_messages_same:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Store e2 i r) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], "translations": [["", "lemma (in imap) Broadcast_Expunge_Deliver_prefix_closed:\n  assumes \"xs @ [Broadcast (i, Expunge e mo i)] prefix of j\"\n  shows \"Deliver (mo, Append mo e) \\<in> set xs \\<or> \n    (\\<exists> mo2 . Deliver (mo, Store e mo2 mo) \\<in> set xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "obtain y where \"apply_operations xs = Some y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        apply_operations xs = Some y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms broadcast_only_valid_msgs"], ["proof (prove)\nusing this:\n  xs @ [Broadcast (i, Expunge e mo i)] prefix of j\n  ?pre @ [Broadcast ?m] prefix of ?i \\<Longrightarrow>\n  \\<exists>state.\n     apply_operations ?pre = Some state \\<and> valid_behaviours state ?m\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        apply_operations xs = Some y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "moreover"], ["proof (state)\nthis:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "hence \"mo \\<in> snd (y e)\""], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. mo \\<in> snd (y e)", "using broadcast_only_valid_msgs[of xs \"(i, Expunge e mo i)\" j] \n      valid_behaviours_def[of y \"(i, Expunge e mo i)\"] assms"], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n  xs @ [Broadcast (i, Expunge e mo i)] prefix of j \\<Longrightarrow>\n  \\<exists>state.\n     apply_operations xs = Some state \\<and>\n     valid_behaviours state (i, Expunge e mo i)\n  valid_behaviours y (i, Expunge e mo i) \\<equiv>\n  case (i, Expunge e mo i) of (i, Create j e) \\<Rightarrow> i = j\n  | (i, Delete is e) \\<Rightarrow> is = fst (y e) \\<union> snd (y e)\n  | (i, Append j e) \\<Rightarrow> i = j\n  | (i, Expunge e mo j) \\<Rightarrow> i = j \\<and> mo \\<in> snd (y e)\n  | (i, Store e mo j) \\<Rightarrow> i = j \\<and> mo \\<in> snd (y e)\n  xs @ [Broadcast (i, Expunge e mo i)] prefix of j\n\ngoal (1 subgoal):\n 1. mo \\<in> snd (y e)", "by auto"], ["proof (state)\nthis:\n  mo \\<in> snd (y e)\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "ultimately"], ["proof (chain)\npicking this:\n  apply_operations xs = Some y\n  mo \\<in> snd (y e)", "show ?thesis"], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n  mo \\<in> snd (y e)\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "using assms Deliver_added_files apply_operations_added_files"], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n  mo \\<in> snd (y e)\n  xs @ [Broadcast (i, Expunge e mo i)] prefix of j\n  \\<lbrakk>?xs prefix of ?j; ?i \\<in> set (added_files ?xs ?e)\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Append ?i ?e) \\<in> set ?xs \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Store ?e mo ?i) \\<in> set ?xs)\n  \\<lbrakk>?es prefix of ?j; apply_operations ?es = Some ?f\\<rbrakk>\n  \\<Longrightarrow> snd (?f ?x) \\<subseteq> set (added_files ?es ?x)\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "by blast"], ["proof (state)\nthis:\n  Deliver (mo, Append mo e) \\<in> set xs \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) Broadcast_Store_Deliver_prefix_closed:\n  assumes \"xs @ [Broadcast (i, Store e mo i)] prefix of j\"\n  shows \"Deliver (mo, Append mo e) \\<in> set xs \\<or> \n    (\\<exists> mo2 . Deliver (mo, Store e mo2 mo) \\<in> set xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "obtain y where \"apply_operations xs = Some y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        apply_operations xs = Some y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms broadcast_only_valid_msgs"], ["proof (prove)\nusing this:\n  xs @ [Broadcast (i, Store e mo i)] prefix of j\n  ?pre @ [Broadcast ?m] prefix of ?i \\<Longrightarrow>\n  \\<exists>state.\n     apply_operations ?pre = Some state \\<and> valid_behaviours state ?m\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        apply_operations xs = Some y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "moreover"], ["proof (state)\nthis:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "hence \"mo \\<in> snd (y e)\""], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. mo \\<in> snd (y e)", "using broadcast_only_valid_msgs[of xs \"(i, Store e mo i)\" j] \n      valid_behaviours_def[of y \"(i, Store e mo i)\"] assms"], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n  xs @ [Broadcast (i, Store e mo i)] prefix of j \\<Longrightarrow>\n  \\<exists>state.\n     apply_operations xs = Some state \\<and>\n     valid_behaviours state (i, Store e mo i)\n  valid_behaviours y (i, Store e mo i) \\<equiv>\n  case (i, Store e mo i) of (i, Create j e) \\<Rightarrow> i = j\n  | (i, Delete is e) \\<Rightarrow> is = fst (y e) \\<union> snd (y e)\n  | (i, Append j e) \\<Rightarrow> i = j\n  | (i, Expunge e mo j) \\<Rightarrow> i = j \\<and> mo \\<in> snd (y e)\n  | (i, Store e mo j) \\<Rightarrow> i = j \\<and> mo \\<in> snd (y e)\n  xs @ [Broadcast (i, Store e mo i)] prefix of j\n\ngoal (1 subgoal):\n 1. mo \\<in> snd (y e)", "by auto"], ["proof (state)\nthis:\n  mo \\<in> snd (y e)\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "ultimately"], ["proof (chain)\npicking this:\n  apply_operations xs = Some y\n  mo \\<in> snd (y e)", "show ?thesis"], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n  mo \\<in> snd (y e)\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "using assms Deliver_added_files apply_operations_added_files"], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n  mo \\<in> snd (y e)\n  xs @ [Broadcast (i, Store e mo i)] prefix of j\n  \\<lbrakk>?xs prefix of ?j; ?i \\<in> set (added_files ?xs ?e)\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Append ?i ?e) \\<in> set ?xs \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Store ?e mo ?i) \\<in> set ?xs)\n  \\<lbrakk>?es prefix of ?j; apply_operations ?es = Some ?f\\<rbrakk>\n  \\<Longrightarrow> snd (?f ?x) \\<subseteq> set (added_files ?es ?x)\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set xs \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)", "by blast"], ["proof (state)\nthis:\n  Deliver (mo, Append mo e) \\<in> set xs \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) Deliver_added_ids:\n  assumes \"xs prefix of j\"\n    and \"i \\<in> set (added_ids xs e)\"\n  shows \"Deliver (i, Create i e) \\<in> set xs \\<or> \n    (\\<exists> mo . Deliver (i, Expunge e mo i) \\<in> set xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs)", "using assms"], ["proof (prove)\nusing this:\n  xs prefix of j\n  i \\<in> set (added_ids xs e)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs)", "proof (induct xs rule: rev_induct, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [x] prefix of j; i \\<in> set (added_ids (xs @ [x]) e)\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n                         (\\<exists>mo.\n                             Deliver (i, Expunge e mo i)\n                             \\<in> set (xs @ [x]))", "case (snoc x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n  \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs)\n  xs @ [x] prefix of j\n  i \\<in> set (added_ids (xs @ [x]) e)\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [x] prefix of j; i \\<in> set (added_ids (xs @ [x]) e)\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n                         (\\<exists>mo.\n                             Deliver (i, Expunge e mo i)\n                             \\<in> set (xs @ [x]))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n  \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs)\n  xs @ [x] prefix of j\n  i \\<in> set (added_ids (xs @ [x]) e)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set (xs @ [x]))", "proof (cases x, force)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [x] prefix of j; i \\<in> set (added_ids (xs @ [x]) e);\n        x = Deliver x2\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n                         (\\<exists>mo.\n                             Deliver (i, Expunge e mo i)\n                             \\<in> set (xs @ [x]))", "case X: (Deliver e')"], ["proof (state)\nthis:\n  x = Deliver e'\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [x] prefix of j; i \\<in> set (added_ids (xs @ [x]) e);\n        x = Deliver x2\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n                         (\\<exists>mo.\n                             Deliver (i, Expunge e mo i)\n                             \\<in> set (xs @ [x]))", "moreover"], ["proof (state)\nthis:\n  x = Deliver e'\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [x] prefix of j; i \\<in> set (added_ids (xs @ [x]) e);\n        x = Deliver x2\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n                         (\\<exists>mo.\n                             Deliver (i, Expunge e mo i)\n                             \\<in> set (xs @ [x]))", "obtain a b where \"e' = (a, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b. e' = (a, b) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  e' = (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [x] prefix of j; i \\<in> set (added_ids (xs @ [x]) e);\n        x = Deliver x2\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n                         (\\<exists>mo.\n                             Deliver (i, Expunge e mo i)\n                             \\<in> set (xs @ [x]))", "ultimately"], ["proof (chain)\npicking this:\n  x = Deliver e'\n  e' = (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  x = Deliver e'\n  e' = (a, b)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set (xs @ [x]))", "using snoc"], ["proof (prove)\nusing this:\n  x = Deliver e'\n  e' = (a, b)\n  \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n  \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs)\n  xs @ [x] prefix of j\n  i \\<in> set (added_ids (xs @ [x]) e)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set (xs @ [x]))", "apply (case_tac b; clarify)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x11 x12.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Create x11 x12)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Create x11 x12)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Create x11 x12)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Create x11 x12)]) e);\n        x = Deliver (a, Create x11 x12); e' = (a, Create x11 x12);\n        b = Create x11 x12;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Create x11 x12)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Create x11 x12)])\n 2. \\<And>x21 x22.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Delete x21 x22)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Delete x21 x22)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Delete x21 x22)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Delete x21 x22)]) e);\n        x = Deliver (a, Delete x21 x22); e' = (a, Delete x21 x22);\n        b = Delete x21 x22;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Delete x21 x22)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Delete x21 x22)])\n 3. \\<And>x31 x32.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Append x31 x32)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Append x31 x32)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Append x31 x32)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Append x31 x32)]) e);\n        x = Deliver (a, Append x31 x32); e' = (a, Append x31 x32);\n        b = Append x31 x32;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Append x31 x32)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Append x31 x32)])\n 4. \\<And>x41 x42 x43.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Expunge x41 x42 x43)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Expunge x41 x42 x43)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Expunge x41 x42 x43)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Expunge x41 x42 x43)]) e);\n        x = Deliver (a, Expunge x41 x42 x43); e' = (a, Expunge x41 x42 x43);\n        b = Expunge x41 x42 x43;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Expunge x41 x42 x43)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Expunge x41 x42 x43)])\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Store x51 x52 x53)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Store x51 x52 x53)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Store x51 x52 x53)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Store x51 x52 x53)]) e);\n        x = Deliver (a, Store x51 x52 x53); e' = (a, Store x51 x52 x53);\n        b = Store x51 x52 x53;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Store x51 x52 x53)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Store x51 x52 x53)])", "apply (simp, metis added_ids_Deliver_Create_diff_collapse \n          added_ids_Deliver_Create_same_collapse empty_iff list.set(1) set_ConsD create_id_valid \n          in_set_conv_decomp prefix_of_appendD, force)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Append x31 x32)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Append x31 x32)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Append x31 x32)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Append x31 x32)]) e);\n        x = Deliver (a, Append x31 x32); e' = (a, Append x31 x32);\n        b = Append x31 x32;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Append x31 x32)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Append x31 x32)])\n 2. \\<And>x41 x42 x43.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Expunge x41 x42 x43)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Expunge x41 x42 x43)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Expunge x41 x42 x43)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Expunge x41 x42 x43)]) e);\n        x = Deliver (a, Expunge x41 x42 x43); e' = (a, Expunge x41 x42 x43);\n        b = Expunge x41 x42 x43;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Expunge x41 x42 x43)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Expunge x41 x42 x43)])\n 3. \\<And>x51 x52 x53.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Store x51 x52 x53)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Store x51 x52 x53)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Store x51 x52 x53)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Store x51 x52 x53)]) e);\n        x = Deliver (a, Store x51 x52 x53); e' = (a, Store x51 x52 x53);\n        b = Store x51 x52 x53;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Store x51 x52 x53)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Store x51 x52 x53)])", "using append_id_valid"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xs prefix of ?j;\n   Deliver (?i1.0, Append ?i2.0 ?e) \\<in> set ?xs\\<rbrakk>\n  \\<Longrightarrow> ?i1.0 = ?i2.0\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Append x31 x32)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Append x31 x32)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Append x31 x32)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Append x31 x32)]) e);\n        x = Deliver (a, Append x31 x32); e' = (a, Append x31 x32);\n        b = Append x31 x32;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Append x31 x32)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Append x31 x32)])\n 2. \\<And>x41 x42 x43.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Expunge x41 x42 x43)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Expunge x41 x42 x43)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Expunge x41 x42 x43)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Expunge x41 x42 x43)]) e);\n        x = Deliver (a, Expunge x41 x42 x43); e' = (a, Expunge x41 x42 x43);\n        b = Expunge x41 x42 x43;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Expunge x41 x42 x43)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Expunge x41 x42 x43)])\n 3. \\<And>x51 x52 x53.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Store x51 x52 x53)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Store x51 x52 x53)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Store x51 x52 x53)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Store x51 x52 x53)]) e);\n        x = Deliver (a, Store x51 x52 x53); e' = (a, Store x51 x52 x53);\n        b = Store x51 x52 x53;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Store x51 x52 x53)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Store x51 x52 x53)])", "apply (simp, metis (no_types, lifting)  prefix_of_appendD, simp, metis \n          Un_iff added_ids_Deliver_Expunge_diff_collapse added_ids_Deliver_Expunge_same_collapse \n          empty_iff expunge_id_valid list.set(1) list.set_intros(1) prefix_of_appendD set_ConsD \n          set_append)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x51 x52 x53.\n       \\<lbrakk>\\<lbrakk>xs prefix of j;\n                 i \\<in> set (added_ids xs e)\\<rbrakk>\n                \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                                  (\\<exists>mo.\nDeliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Store x51 x52 x53)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Store x51 x52 x53)]) e);\n        \\<lbrakk>xs prefix of j; i \\<in> set (added_ids xs e)\\<rbrakk>\n        \\<Longrightarrow> Deliver (i, Create i e) \\<in> set xs \\<or>\n                          (\\<exists>mo.\n                              Deliver (i, Expunge e mo i) \\<in> set xs);\n        xs @ [Deliver (a, Store x51 x52 x53)] prefix of j;\n        i \\<in> set (added_ids (xs @ [Deliver (a, Store x51 x52 x53)]) e);\n        x = Deliver (a, Store x51 x52 x53); e' = (a, Store x51 x52 x53);\n        b = Store x51 x52 x53;\n        \\<nexists>mo.\n           Deliver (i, Expunge e mo i)\n           \\<in> set (xs @ [Deliver (a, Store x51 x52 x53)])\\<rbrakk>\n       \\<Longrightarrow> Deliver (i, Create i e)\n                         \\<in> set (xs @ [Deliver (a, Store x51 x52 x53)])", "by (simp, blast)"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set (xs @ [x]))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<in> set (xs @ [x]) \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set (xs @ [x]))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) Broadcast_Deliver_prefix_closed:\n  assumes \"xs @ [Broadcast (r, Delete ix e)] prefix of j\"\n    and \"i \\<in> ix\"\n  shows \"Deliver (i, Create i e) \\<in> set xs \\<or> \n    Deliver (i, Append i e) \\<in> set xs \\<or> \n    (\\<exists> mo . Deliver (i, Expunge e mo i) \\<in> set xs) \\<or> \n    (\\<exists> mo . Deliver (i, Store e mo i) \\<in> set xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    Deliver (i, Append i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    Deliver (i, Append i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set xs)", "obtain y where \"apply_operations xs = Some y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        apply_operations xs = Some y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms broadcast_only_valid_msgs"], ["proof (prove)\nusing this:\n  xs @ [Broadcast (r, Delete ix e)] prefix of j\n  i \\<in> ix\n  ?pre @ [Broadcast ?m] prefix of ?i \\<Longrightarrow>\n  \\<exists>state.\n     apply_operations ?pre = Some state \\<and> valid_behaviours state ?m\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        apply_operations xs = Some y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    Deliver (i, Append i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set xs)", "moreover"], ["proof (state)\nthis:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    Deliver (i, Append i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set xs)", "hence \"ix = fst (y e) \\<union> snd (y e)\""], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n\ngoal (1 subgoal):\n 1. ix = fst (y e) \\<union> snd (y e)", "by (metis (mono_tags, lifting) assms(1) broadcast_only_valid_msgs operation.case(2)\n        option.simps(1) valid_behaviours_def case_prodD)"], ["proof (state)\nthis:\n  ix = fst (y e) \\<union> snd (y e)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    Deliver (i, Append i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set xs)", "ultimately"], ["proof (chain)\npicking this:\n  apply_operations xs = Some y\n  ix = fst (y e) \\<union> snd (y e)", "show ?thesis"], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n  ix = fst (y e) \\<union> snd (y e)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    Deliver (i, Append i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set xs)", "using assms Deliver_added_ids apply_operations_added_ids"], ["proof (prove)\nusing this:\n  apply_operations xs = Some y\n  ix = fst (y e) \\<union> snd (y e)\n  xs @ [Broadcast (r, Delete ix e)] prefix of j\n  i \\<in> ix\n  \\<lbrakk>?xs prefix of ?j; ?i \\<in> set (added_ids ?xs ?e)\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Create ?i ?e) \\<in> set ?xs \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Expunge ?e mo ?i) \\<in> set ?xs)\n  \\<lbrakk>?es prefix of ?j; apply_operations ?es = Some ?f\\<rbrakk>\n  \\<Longrightarrow> fst (?f ?x) \\<subseteq> set (added_ids ?es ?x)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set xs \\<or>\n    Deliver (i, Append i e) \\<in> set xs \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set xs)", "by (metis Deliver_added_files Un_iff apply_operations_added_files le_iff_sup prefix_of_appendD)"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<in> set xs \\<or>\n  Deliver (i, Append i e) \\<in> set xs \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set xs) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_create_delete_independent_technical:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Create i e) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Create i e) (ir, Delete is e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "have f1: \"Deliver (i, Create i e) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set (history j)", "using assms prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Create i e) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set (history j)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "obtain pre k where P: \"pre@[Broadcast (ir, Delete is e)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Create i e) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "hence f2: \"Deliver (i, Create i e) \\<in> set pre \\<or> \n                  Deliver (i, Append i e) \\<in> set pre \\<or> \n                  (\\<exists> mo . Deliver (i, Expunge e mo i) \\<in> set pre) \\<or> \n                  (\\<exists> mo . Deliver (i, Store e mo i) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set pre \\<or>\n    Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)", "using Broadcast_Deliver_prefix_closed assms"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  \\<lbrakk>?xs @ [Broadcast (?r, Delete ?ix ?e)] prefix of ?j;\n   ?i \\<in> ?ix\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Create ?i ?e) \\<in> set ?xs \\<or>\n                    Deliver (?i, Append ?i ?e) \\<in> set ?xs \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Expunge ?e mo ?i) \\<in> set ?xs) \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Store ?e mo ?i) \\<in> set ?xs)\n  i \\<in> is\n  xs prefix of j\n  (i, Create i e) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set pre \\<or>\n    Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "have f3: \"Deliver (i, Append i e) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<notin> set pre", "using f1 P"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e) \\<in> set (history j)\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<notin> set pre", "by (metis (full_types) Pair_inject fst_conv network.delivery_has_a_cause network.msg_id_unique \n        network_axioms operation.simps(9) prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  Deliver (i, Append i e) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "have f4: \"\\<forall> mo . Deliver (i, Expunge e mo i) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre", "using f1 P"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e) \\<in> set (history j)\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre", "by (metis delivery_has_a_cause fst_conv msg_id_unique old.prod.inject operation.simps(11)\n        prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "have \"\\<forall> mo . Deliver (i, Store e mo i) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Store e mo i) \\<notin> set pre", "using f1 P"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e) \\<in> set (history j)\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Store e mo i) \\<notin> set pre", "by (metis delivery_has_a_cause fst_conv msg_id_unique old.prod.inject operation.simps(13)\n        prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Store e mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Store e mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "using f2 f3 f4  P events_in_local_order hb_deliver"], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Store e mo i) \\<notin> set pre\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n  Deliver (i, Append i e) \\<notin> set pre\n  \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  \\<lbrakk>?pre @ [?e2.0] prefix of ?i; ?e1.0 \\<in> set ?pre\\<rbrakk>\n  \\<Longrightarrow> ?e1.0 \\<sqsubset>\\<^sup>?i ?e2.0\n  Deliver ?m1.0 \\<sqsubset>\\<^sup>?i Broadcast ?m2.0 \\<Longrightarrow>\n  hb ?m1.0 ?m2.0\n\ngoal (1 subgoal):\n 1. hb (i, Create i e) (ir, Delete is e)", "by blast"], ["proof (state)\nthis:\n  hb (i, Create i e) (ir, Delete is e)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_store_expunge_independent_technical:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e i r) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Store e mo i) (r, Expunge e i r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "obtain pre k where P: \"pre@[Broadcast (r, Expunge e i r)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Expunge e i r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Store e mo i) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e i r) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Expunge e i r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Expunge e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "moreover"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Expunge e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "hence f1: \"Deliver (i, Append i e) \\<in> set pre \\<or> \n  (\\<exists> mo2 . Deliver (i, Store e mo2 i) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)", "using Broadcast_Expunge_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e i r)] prefix of k\n  ?xs @ [Broadcast (?i, Expunge ?e ?mo ?i)] prefix of ?j \\<Longrightarrow>\n  Deliver (?mo, Append ?mo ?e) \\<in> set ?xs \\<or>\n  (\\<exists>mo2. Deliver (?mo, Store ?e mo2 ?mo) \\<in> set ?xs)\n  xs prefix of j\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "hence f2: \"Deliver (i, Append i e) \\<notin> set (history k)\""], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<notin> set (history k)", "by (metis Pair_inject assms(1) assms(2) fst_conv msg_id_unique network.delivery_has_a_cause \n        network_axioms operation.distinct(17) prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Append i e) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "from f1"], ["proof (chain)\npicking this:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)", "obtain mo2 :: 'a where\n    \"Deliver (i, Store e mo2 i) \\<in> set (history k)\""], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. (\\<And>mo2.\n        Deliver (i, Store e mo2 i) \\<in> set (history k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using f2"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n  Deliver (i, Append i e) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. (\\<And>mo2.\n        Deliver (i, Store e mo2 i) \\<in> set (history k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using P prefix_elem_to_carriers"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n  Deliver (i, Append i e) \\<notin> set (history k)\n  pre @ [Broadcast (r, Expunge e i r)] prefix of k\n  \\<lbrakk>?xs prefix of ?i; ?x \\<in> set ?xs\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>mo2.\n        Deliver (i, Store e mo2 i) \\<in> set (history k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Store e mo2 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "hence \"Deliver (i, Store e mo i) \\<in> set (history k)\""], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo2 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e mo i) \\<in> set (history k)", "using assms f1 f2 P"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo2 i) \\<in> set (history k)\n  xs prefix of j\n  (i, Store e mo i) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e i r) \\<in> set (node_deliver_messages xs)\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n  Deliver (i, Append i e) \\<notin> set (history k)\n  pre @ [Broadcast (r, Expunge e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e mo i) \\<in> set (history k)", "by (metis fst_conv msg_id_unique network.delivery_has_a_cause network_axioms \n        prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Store e mo i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Store e mo i) \\<in> set (history k)", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "using hb.intros(2) events_in_local_order f1 f2 P"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set (history k)\n  Deliver ?m1.0 \\<sqsubset>\\<^sup>?i Broadcast ?m2.0 \\<Longrightarrow>\n  hb ?m1.0 ?m2.0\n  \\<lbrakk>?pre @ [?e2.0] prefix of ?i; ?e1.0 \\<in> set ?pre\\<rbrakk>\n  \\<Longrightarrow> ?e1.0 \\<sqsubset>\\<^sup>?i ?e2.0\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n  Deliver (i, Append i e) \\<notin> set (history k)\n  pre @ [Broadcast (r, Expunge e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Expunge e i r)", "by (metis delivery_has_a_cause fst_conv msg_id_unique node_histories.prefix_of_appendD \n        node_histories_axioms prefix_elem_to_carriers)"], ["proof (state)\nthis:\n  hb (i, Store e mo i) (r, Expunge e i r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_store_expunge_independent_technical2:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e1 mo2 i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"mo2 \\<noteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "obtain oid :: \"'a \\<times> ('a, 'b) operation \\<Rightarrow> nat\" where\n    oid: \"\\<forall>p n. Deliver p \\<notin> set (history n) \\<or> Broadcast p \\<in> set (history (oid p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>oid.\n        \\<forall>p n.\n           Deliver p \\<notin> set (history n) \\<or>\n           Broadcast p \\<in> set (history (oid p)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types) delivery_has_a_cause)"], ["proof (state)\nthis:\n  \\<forall>p n.\n     Deliver p \\<notin> set (history n) \\<or>\n     Broadcast p \\<in> set (history (oid p))\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "hence f1: \"Broadcast (r, Expunge e mo r) \\<in> set (history (oid (r, Expunge e mo r)))\""], ["proof (prove)\nusing this:\n  \\<forall>p n.\n     Deliver p \\<notin> set (history n) \\<or>\n     Broadcast p \\<in> set (history (oid p))\n\ngoal (1 subgoal):\n 1. Broadcast (r, Expunge e mo r)\n    \\<in> set (history (oid (r, Expunge e mo r)))", "using assms(1) assms(3) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  \\<forall>p n.\n     Deliver p \\<notin> set (history n) \\<or>\n     Broadcast p \\<in> set (history (oid p))\n  xs prefix of j\n  (r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Broadcast (r, Expunge e mo r)\n    \\<in> set (history (oid (r, Expunge e mo r)))", "by blast"], ["proof (state)\nthis:\n  Broadcast (r, Expunge e mo r)\n  \\<in> set (history (oid (r, Expunge e mo r)))\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "obtain k :: \"'a \\<Rightarrow> 'b \\<Rightarrow> ('a \\<times> ('a, 'b) operation) event list \\<Rightarrow> 'a\" where k: \n    \"\\<forall>i e pre. (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre) = \n    (Deliver (i, Store e (k i e pre) i) \\<in> set pre)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>i e pre.\n           (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre) =\n           (Deliver (i, Store e (k i e pre) i)\n            \\<in> set pre) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>i e pre.\n     (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre) =\n     (Deliver (i, Store e (k i e pre) i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "obtain pre :: \"nat \\<Rightarrow> ('a \\<times> ('a, 'b) operation) event \\<Rightarrow> ('a \\<times> ('a, 'b) operation) event list\" \n    where pre: \"\\<forall>k op1. (\\<exists>op2. op2 @ [op1] prefix of k) = (pre k op1 @ [op1] prefix of k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre.\n        \\<forall>k op1.\n           (\\<exists>op2. op2 @ [op1] prefix of k) =\n           (pre k op1 @ [op1] prefix of k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>k op1.\n     (\\<exists>op2. op2 @ [op1] prefix of k) =\n     (pre k op1 @ [op1] prefix of k)\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "hence f2: \"\\<forall>e n. e \\<notin> set (history n) \\<or> pre n e @ [e] prefix of n\""], ["proof (prove)\nusing this:\n  \\<forall>k op1.\n     (\\<exists>op2. op2 @ [op1] prefix of k) =\n     (pre k op1 @ [op1] prefix of k)\n\ngoal (1 subgoal):\n 1. \\<forall>e n. e \\<notin> set (history n) \\<or> pre n e @ [e] prefix of n", "using events_before_exist"], ["proof (prove)\nusing this:\n  \\<forall>k op1.\n     (\\<exists>op2. op2 @ [op1] prefix of k) =\n     (pre k op1 @ [op1] prefix of k)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n\ngoal (1 subgoal):\n 1. \\<forall>e n. e \\<notin> set (history n) \\<or> pre n e @ [e] prefix of n", "by simp"], ["proof (state)\nthis:\n  \\<forall>e n. e \\<notin> set (history n) \\<or> pre n e @ [e] prefix of n\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "hence f3: \"pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i))\n  prefix of oid (i, Store e1 mo2 i)\""], ["proof (prove)\nusing this:\n  \\<forall>e n. e \\<notin> set (history n) \\<or> pre n e @ [e] prefix of n\n\ngoal (1 subgoal):\n 1. pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i)) prefix of\n    oid (i, Store e1 mo2 i)", "using oid  assms(1) assms(2) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  \\<forall>e n. e \\<notin> set (history n) \\<or> pre n e @ [e] prefix of n\n  \\<forall>p n.\n     Deliver p \\<notin> set (history n) \\<or>\n     Broadcast p \\<in> set (history (oid p))\n  xs prefix of j\n  (i, Store e1 mo2 i) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i)) prefix of\n    oid (i, Store e1 mo2 i)", "by blast"], ["proof (state)\nthis:\n  pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i)) prefix of\n  oid (i, Store e1 mo2 i)\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "have f4: \"Deliver (r, Append r e1) \\<notin> set (history (oid (i, Store e1 mo2 i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (r, Append r e1)\n    \\<notin> set (history (oid (i, Store e1 mo2 i)))", "by (metis (no_types) oid f1 fst_conv msg_id_unique old.prod.inject operation.distinct(15))"], ["proof (state)\nthis:\n  Deliver (r, Append r e1) \\<notin> set (history (oid (i, Store e1 mo2 i)))\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "have \"Deliver (r, Store e1 (k r e1 (pre (oid (i, Store e1 mo2 i)) \n  (Broadcast (i, Store e1 mo2 i)))) r) \\<notin> set (history (oid (i, Store e1 mo2 i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver\n     (r, Store e1\n          (k r e1\n            (pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i))))\n          r)\n    \\<notin> set (history (oid (i, Store e1 mo2 i)))", "by (metis (no_types) oid f1 fst_conv msg_id_unique old.prod.inject operation.distinct(19))"], ["proof (state)\nthis:\n  Deliver\n   (r, Store e1\n        (k r e1\n          (pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i))))\n        r)\n  \\<notin> set (history (oid (i, Store e1 mo2 i)))\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "thus ?thesis"], ["proof (prove)\nusing this:\n  Deliver\n   (r, Store e1\n        (k r e1\n          (pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i))))\n        r)\n  \\<notin> set (history (oid (i, Store e1 mo2 i)))\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "using oid k f2 f3 f4 assms"], ["proof (prove)\nusing this:\n  Deliver\n   (r, Store e1\n        (k r e1\n          (pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i))))\n        r)\n  \\<notin> set (history (oid (i, Store e1 mo2 i)))\n  \\<forall>p n.\n     Deliver p \\<notin> set (history n) \\<or>\n     Broadcast p \\<in> set (history (oid p))\n  \\<forall>i e pre.\n     (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre) =\n     (Deliver (i, Store e (k i e pre) i) \\<in> set pre)\n  \\<forall>e n. e \\<notin> set (history n) \\<or> pre n e @ [e] prefix of n\n  pre (oid (i, Store e1 mo2 i)) (Broadcast (i, Store e1 mo2 i)) prefix of\n  oid (i, Store e1 mo2 i)\n  Deliver (r, Append r e1) \\<notin> set (history (oid (i, Store e1 mo2 i)))\n  xs prefix of j\n  (i, Store e1 mo2 i) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. mo2 \\<noteq> r", "by (metis (no_types, lifting) Broadcast_Store_Deliver_prefix_closed \n        network.prefix_msg_in_history network_axioms prefix_elem_to_carriers)"], ["proof (state)\nthis:\n  mo2 \\<noteq> r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_store_delete_independent_technical:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Store e mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Store e mo i) (ir, Delete is e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "have f1: \"Deliver (i, Store e mo i) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Store e mo i) \\<in> set (history j)", "using assms prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Store e mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e mo i) \\<in> set (history j)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Store e mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "obtain pre k where P: \"pre@[Broadcast (ir, Delete is e)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Store e mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "hence f2: \"Deliver (i, Create i e) \\<in> set pre \\<or> \n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists> mo . Deliver (i, Expunge e mo i) \\<in> set pre) \\<or> \n  (\\<exists> mo . Deliver (i, Store e mo i) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set pre \\<or>\n    Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)", "using Broadcast_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  \\<lbrakk>?xs @ [Broadcast (?r, Delete ?ix ?e)] prefix of ?j;\n   ?i \\<in> ?ix\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Create ?i ?e) \\<in> set ?xs \\<or>\n                    Deliver (?i, Append ?i ?e) \\<in> set ?xs \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Expunge ?e mo ?i) \\<in> set ?xs) \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Store ?e mo ?i) \\<in> set ?xs)\n  i \\<in> is\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set pre \\<or>\n    Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "have f3: \"Deliver (i, Create i e) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<notin> set pre", "using f1 P"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set (history j)\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<notin> set pre", "by (metis Pair_inject delivery_has_a_cause fst_conv msg_id_unique operation.distinct(7) \n        prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "have f4: \"Deliver (i, Append i e) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<notin> set pre", "using f1 P"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set (history j)\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<notin> set pre", "by (metis delivery_has_a_cause fst_conv msg_id_unique operation.distinct(17) \n        prefix_elem_to_carriers prefix_of_appendD prod.inject)"], ["proof (state)\nthis:\n  Deliver (i, Append i e) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "have \"\\<forall> mo . Deliver (i, Expunge e mo i) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre", "using f1 P"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set (history j)\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre", "by (metis Pair_inject delivery_has_a_cause fst_conv msg_id_unique operation.simps(25) \n        prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "hence \"Deliver (i, Store e mo i) \\<in> set pre\""], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e mo i) \\<in> set pre", "using f1 f2 f3 f4 P"], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Expunge e mo i) \\<notin> set pre\n  Deliver (i, Store e mo i) \\<in> set (history j)\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n  Deliver (i, Create i e) \\<notin> set pre\n  Deliver (i, Append i e) \\<notin> set pre\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e mo i) \\<in> set pre", "by (metis delivery_has_a_cause fst_conv msg_id_unique node_histories.prefix_of_appendD \n        node_histories_axioms prefix_elem_to_carriers)"], ["proof (state)\nthis:\n  Deliver (i, Store e mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "using P events_in_local_order hb_deliver"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set pre\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  \\<lbrakk>?pre @ [?e2.0] prefix of ?i; ?e1.0 \\<in> set ?pre\\<rbrakk>\n  \\<Longrightarrow> ?e1.0 \\<sqsubset>\\<^sup>?i ?e2.0\n  Deliver ?m1.0 \\<sqsubset>\\<^sup>?i Broadcast ?m2.0 \\<Longrightarrow>\n  hb ?m1.0 ?m2.0\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (ir, Delete is e)", "by blast"], ["proof (state)\nthis:\n  hb (i, Store e mo i) (ir, Delete is e)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_append_delete_independent_technical:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Append i e) (ir, Delete is e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hb (i, Append i e) (ir, Delete is e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hb (i, Append i e) (ir, Delete is e)", "obtain pre k where P: \"pre@[Broadcast (ir, Delete is e)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Append i e) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (ir, Delete is e)", "hence f1: \"Deliver (i, Create i e) \\<in> set pre \\<or> \n  Deliver (i, Append i e) \\<in> set pre \\<or> \n  (\\<exists> mo . Deliver (i, Expunge e mo i) \\<in> set pre) \\<or> \n  (\\<exists> mo . Deliver (i, Store e mo i) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set pre \\<or>\n    Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)", "using Broadcast_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  \\<lbrakk>?xs @ [Broadcast (?r, Delete ?ix ?e)] prefix of ?j;\n   ?i \\<in> ?ix\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Create ?i ?e) \\<in> set ?xs \\<or>\n                    Deliver (?i, Append ?i ?e) \\<in> set ?xs \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Expunge ?e mo ?i) \\<in> set ?xs) \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Store ?e mo ?i) \\<in> set ?xs)\n  i \\<in> is\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set pre \\<or>\n    Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (ir, Delete is e)", "hence \"Deliver (i, Append i e) \\<in> set pre\""], ["proof (prove)\nusing this:\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<in> set pre", "using assms P f1"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n  i \\<in> is\n  xs prefix of j\n  (i, Append i e) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<in> set pre", "by (metis (no_types, hide_lams) delivery_has_a_cause events_in_local_order fst_conv \n        hb_broadcast_exists1 hb_deliver msg_id_unique prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Append i e) \\<in> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (ir, Delete is e)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (ir, Delete is e)", "using P events_in_local_order hb_deliver"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set pre\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  \\<lbrakk>?pre @ [?e2.0] prefix of ?i; ?e1.0 \\<in> set ?pre\\<rbrakk>\n  \\<Longrightarrow> ?e1.0 \\<sqsubset>\\<^sup>?i ?e2.0\n  Deliver ?m1.0 \\<sqsubset>\\<^sup>?i Broadcast ?m2.0 \\<Longrightarrow>\n  hb ?m1.0 ?m2.0\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (ir, Delete is e)", "by blast"], ["proof (state)\nthis:\n  hb (i, Append i e) (ir, Delete is e)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_append_expunge_independent_technical:\n  assumes \"i = mo\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Append i e) (r, Expunge e mo r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Expunge e mo r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Expunge e mo r)", "obtain pre k where P: \"pre@[Broadcast (r, Expunge e mo r)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Expunge e mo r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i = mo\n  xs prefix of j\n  (i, Append i e) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Expunge e mo r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Expunge e mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Expunge e mo r)", "hence f1: \"Deliver (mo, Append mo e) \\<in> set pre \\<or> \n  (\\<exists> mo2 . Deliver (mo, Store e mo2 mo) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)", "using Broadcast_Expunge_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e mo r)] prefix of k\n  ?xs @ [Broadcast (?i, Expunge ?e ?mo ?i)] prefix of ?j \\<Longrightarrow>\n  Deliver (?mo, Append ?mo ?e) \\<in> set ?xs \\<or>\n  (\\<exists>mo2. Deliver (?mo, Store ?e mo2 ?mo) \\<in> set ?xs)\n  i = mo\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)", "by auto"], ["proof (state)\nthis:\n  Deliver (mo, Append mo e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Expunge e mo r)", "hence \"(\\<forall> mo2 . Deliver (mo, Store e mo2 mo) \\<notin> set pre)\""], ["proof (prove)\nusing this:\n  Deliver (mo, Append mo e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. \\<forall>mo2. Deliver (mo, Store e mo2 mo) \\<notin> set pre", "using P assms"], ["proof (prove)\nusing this:\n  Deliver (mo, Append mo e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)\n  pre @ [Broadcast (r, Expunge e mo r)] prefix of k\n  i = mo\n  xs prefix of j\n  (i, Append i e) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. \\<forall>mo2. Deliver (mo, Store e mo2 mo) \\<notin> set pre", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Deliver (mo, Append mo e) \\<in> set pre \\<or>\n             (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre);\n     pre @ [Broadcast (r, Expunge e mo r)] prefix of k; i = mo;\n     xs prefix of j; (i, Append i e) \\<in> set (node_deliver_messages xs);\n     (r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mo2.\n                         Deliver (mo, Store e mo2 mo) \\<notin> set pre", "have \"Deliver (mo, Append mo e) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set (history j)", "using assms(1) assms(2) assms(3) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i = mo\n  xs prefix of j\n  (i, Append i e) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set (history j)", "by blast"], ["proof (state)\nthis:\n  Deliver (mo, Append mo e) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Deliver (mo, Append mo e) \\<in> set pre \\<or>\n             (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre);\n     pre @ [Broadcast (r, Expunge e mo r)] prefix of k; i = mo;\n     xs prefix of j; (i, Append i e) \\<in> set (node_deliver_messages xs);\n     (r, Expunge e mo r) \\<in> set (node_deliver_messages xs)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mo2.\n                         Deliver (mo, Store e mo2 mo) \\<notin> set pre", "thus ?thesis"], ["proof (prove)\nusing this:\n  Deliver (mo, Append mo e) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. \\<forall>mo2. Deliver (mo, Store e mo2 mo) \\<notin> set pre", "by (metis (no_types) P Pair_inject delivery_has_a_cause fst_conv msg_id_unique \n          operation.simps(23) prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  \\<forall>mo2. Deliver (mo, Store e mo2 mo) \\<notin> set pre\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>mo2. Deliver (mo, Store e mo2 mo) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Expunge e mo r)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>mo2. Deliver (mo, Store e mo2 mo) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Expunge e mo r)", "using hb.intros(2) events_in_local_order assms(1) P f1"], ["proof (prove)\nusing this:\n  \\<forall>mo2. Deliver (mo, Store e mo2 mo) \\<notin> set pre\n  Deliver ?m1.0 \\<sqsubset>\\<^sup>?i Broadcast ?m2.0 \\<Longrightarrow>\n  hb ?m1.0 ?m2.0\n  \\<lbrakk>?pre @ [?e2.0] prefix of ?i; ?e1.0 \\<in> set ?pre\\<rbrakk>\n  \\<Longrightarrow> ?e1.0 \\<sqsubset>\\<^sup>?i ?e2.0\n  i = mo\n  pre @ [Broadcast (r, Expunge e mo r)] prefix of k\n  Deliver (mo, Append mo e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Expunge e mo r)", "by blast"], ["proof (state)\nthis:\n  hb (i, Append i e) (r, Expunge e mo r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_append_store_independent_technical:\n  assumes \"i = mo\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Store e mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Append i e) (r, Store e mo r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Store e mo r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Store e mo r)", "obtain pre k where pre: \"pre@[Broadcast (r, Store e mo r)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Store e mo r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i = mo\n  xs prefix of j\n  (i, Append i e) \\<in> set (node_deliver_messages xs)\n  (r, Store e mo r) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Store e mo r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Store e mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Store e mo r)", "moreover"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Store e mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Store e mo r)", "hence f1: \"Deliver (mo, Append mo e) \\<in> set pre \\<or> \n  (\\<exists> mo2 . Deliver (mo, Store e mo2 mo) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)", "using Broadcast_Store_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e mo r)] prefix of k\n  ?xs @ [Broadcast (?i, Store ?e ?mo ?i)] prefix of ?j \\<Longrightarrow>\n  Deliver (?mo, Append ?mo ?e) \\<in> set ?xs \\<or>\n  (\\<exists>mo2. Deliver (?mo, Store ?e mo2 ?mo) \\<in> set ?xs)\n  i = mo\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)", "by auto"], ["proof (state)\nthis:\n  Deliver (mo, Append mo e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Store e mo r)", "have f2: \"Deliver (i, Append i e) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<in> set (history j)", "by (meson assms network.prefix_msg_in_history network_axioms)"], ["proof (state)\nthis:\n  Deliver (i, Append i e) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Store e mo r)", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Append i e) \\<in> set (history j)", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Store e mo r)", "using assms f1"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set (history j)\n  i = mo\n  xs prefix of j\n  (i, Append i e) \\<in> set (node_deliver_messages xs)\n  (r, Store e mo r) \\<in> set (node_deliver_messages xs)\n  Deliver (mo, Append mo e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Append i e) (r, Store e mo r)", "by (metis  pre delivery_has_a_cause events_in_local_order fst_conv hb_deliver \n        msg_id_unique node_histories.prefix_of_appendD node_histories_axioms \n        prefix_elem_to_carriers)"], ["proof (state)\nthis:\n  hb (i, Append i e) (r, Store e mo r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_expunge_delete_independent_technical:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Expunge e mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Expunge e mo i) (ir, Delete is e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hb (i, Expunge e mo i) (ir, Delete is e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hb (i, Expunge e mo i) (ir, Delete is e)", "obtain pre k where pre: \"pre@[Broadcast (ir, Delete is e)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Expunge e mo i) (ir, Delete is e)", "moreover"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Expunge e mo i) (ir, Delete is e)", "hence A: \"Deliver (i, Create i e) \\<in> set pre \\<or> \n  Deliver (i, Append i e) \\<in> set pre \\<or> \n  (\\<exists> mo . Deliver (i, Expunge e mo i) \\<in> set pre) \\<or> \n  (\\<exists> mo . Deliver (i, Store e mo i) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set pre \\<or>\n    Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)", "using Broadcast_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  \\<lbrakk>?xs @ [Broadcast (?r, Delete ?ix ?e)] prefix of ?j;\n   ?i \\<in> ?ix\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Create ?i ?e) \\<in> set ?xs \\<or>\n                    Deliver (?i, Append ?i ?e) \\<in> set ?xs \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Expunge ?e mo ?i) \\<in> set ?xs) \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Store ?e mo ?i) \\<in> set ?xs)\n  i \\<in> is\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e) \\<in> set pre \\<or>\n    Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n    (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Expunge e mo i) (ir, Delete is e)", "hence \"Deliver (i, Expunge e mo i) \\<in> set pre\""], ["proof (prove)\nusing this:\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e mo i) \\<in> set pre", "using assms"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e mo i) \\<in> set pre", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Deliver (i, Create i e) \\<in> set pre \\<or>\n             Deliver (i, Append i e) \\<in> set pre \\<or>\n             (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n             (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre);\n     i \\<in> is; xs prefix of j;\n     (i, Expunge e mo i) \\<in> set (node_deliver_messages xs);\n     (ir, Delete is e) \\<in> set (node_deliver_messages xs)\\<rbrakk>\n    \\<Longrightarrow> Deliver (i, Expunge e mo i) \\<in> set pre", "have f1: \"\\<And>e. e \\<notin> set pre \\<or> e \\<in> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e. e \\<notin> set pre \\<or> e \\<in> set (history k)", "using pre prefix_elem_to_carriers"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  \\<lbrakk>?xs prefix of ?i; ?x \\<in> set ?xs\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. \\<And>e. e \\<notin> set pre \\<or> e \\<in> set (history k)", "by blast"], ["proof (state)\nthis:\n  ?e3 \\<notin> set pre \\<or> ?e3 \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Deliver (i, Create i e) \\<in> set pre \\<or>\n             Deliver (i, Append i e) \\<in> set pre \\<or>\n             (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n             (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre);\n     i \\<in> is; xs prefix of j;\n     (i, Expunge e mo i) \\<in> set (node_deliver_messages xs);\n     (ir, Delete is e) \\<in> set (node_deliver_messages xs)\\<rbrakk>\n    \\<Longrightarrow> Deliver (i, Expunge e mo i) \\<in> set pre", "have f2: \"Deliver (i, Expunge e mo i) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e mo i) \\<in> set (history j)", "by (meson assms network.prefix_msg_in_history network_axioms)"], ["proof (state)\nthis:\n  Deliver (i, Expunge e mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Deliver (i, Create i e) \\<in> set pre \\<or>\n             Deliver (i, Append i e) \\<in> set pre \\<or>\n             (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n             (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre);\n     i \\<in> is; xs prefix of j;\n     (i, Expunge e mo i) \\<in> set (node_deliver_messages xs);\n     (ir, Delete is e) \\<in> set (node_deliver_messages xs)\\<rbrakk>\n    \\<Longrightarrow> Deliver (i, Expunge e mo i) \\<in> set pre", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Expunge e mo i) \\<in> set (history j)", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Expunge e mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e mo i) \\<in> set pre", "using f1 A"], ["proof (prove)\nusing this:\n  Deliver (i, Expunge e mo i) \\<in> set (history j)\n  ?e3 \\<notin> set pre \\<or> ?e3 \\<in> set (history k)\n  Deliver (i, Create i e) \\<in> set pre \\<or>\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo. Deliver (i, Expunge e mo i) \\<in> set pre) \\<or>\n  (\\<exists>mo. Deliver (i, Store e mo i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e mo i) \\<in> set pre", "by (metis (no_types, lifting) fst_conv msg_id_unique network.delivery_has_a_cause \n          network_axioms)"], ["proof (state)\nthis:\n  Deliver (i, Expunge e mo i) \\<in> set pre\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Deliver (i, Expunge e mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Expunge e mo i) (ir, Delete is e)", "ultimately"], ["proof (chain)\npicking this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  Deliver (i, Expunge e mo i) \\<in> set pre", "show ?thesis"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  Deliver (i, Expunge e mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Expunge e mo i) (ir, Delete is e)", "using hb.intros(2) events_in_local_order"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e)] prefix of k\n  Deliver (i, Expunge e mo i) \\<in> set pre\n  Deliver ?m1.0 \\<sqsubset>\\<^sup>?i Broadcast ?m2.0 \\<Longrightarrow>\n  hb ?m1.0 ?m2.0\n  \\<lbrakk>?pre @ [?e2.0] prefix of ?i; ?e1.0 \\<in> set ?pre\\<rbrakk>\n  \\<Longrightarrow> ?e1.0 \\<sqsubset>\\<^sup>?i ?e2.0\n\ngoal (1 subgoal):\n 1. hb (i, Expunge e mo i) (ir, Delete is e)", "by blast"], ["proof (state)\nthis:\n  hb (i, Expunge e mo i) (ir, Delete is e)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) concurrent_store_store_independent_technical:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Store e i r) \\<in> set (node_deliver_messages xs)\"\n  shows \"hb (i, Store e mo i) (r, Store e i r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Store e i r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Store e i r)", "obtain pre k where P: \"pre@[Broadcast (r, Store e i r)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Store e i r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Store e mo i) \\<in> set (node_deliver_messages xs)\n  (r, Store e i r) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Store e i r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Store e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Store e i r)", "hence f1: \"\\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. \\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)", "using prefix_elem_to_carriers"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e i r)] prefix of k\n  \\<lbrakk>?xs prefix of ?i; ?x \\<in> set ?xs\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. \\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)", "by blast"], ["proof (state)\nthis:\n  \\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Store e i r)", "have f2: \"Deliver (i, Append i e) \\<in> set pre \\<or> (\\<exists> mo2 . Deliver (i, Store e mo2 i) \\<in> set pre)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)", "using Broadcast_Store_Deliver_prefix_closed assms(1) P"], ["proof (prove)\nusing this:\n  ?xs @ [Broadcast (?i, Store ?e ?mo ?i)] prefix of ?j \\<Longrightarrow>\n  Deliver (?mo, Append ?mo ?e) \\<in> set ?xs \\<or>\n  (\\<exists>mo2. Deliver (?mo, Store ?e mo2 ?mo) \\<in> set ?xs)\n  xs prefix of j\n  pre @ [Broadcast (r, Store e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Store e i r)", "hence \"Deliver (i, Store e mo i) \\<in> set pre\""], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e mo i) \\<in> set pre", "using assms f1"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e mo2 i) \\<in> set pre)\n  xs prefix of j\n  (i, Store e mo i) \\<in> set (node_deliver_messages xs)\n  (r, Store e i r) \\<in> set (node_deliver_messages xs)\n  \\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e mo i) \\<in> set pre", "by (metis delivery_has_a_cause fst_conv msg_id_unique prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Store e mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Store e i r)", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Store e mo i) \\<in> set pre", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Store e i r)", "using hb.intros(2) events_in_local_order P"], ["proof (prove)\nusing this:\n  Deliver (i, Store e mo i) \\<in> set pre\n  Deliver ?m1.0 \\<sqsubset>\\<^sup>?i Broadcast ?m2.0 \\<Longrightarrow>\n  hb ?m1.0 ?m2.0\n  \\<lbrakk>?pre @ [?e2.0] prefix of ?i; ?e1.0 \\<in> set ?pre\\<rbrakk>\n  \\<Longrightarrow> ?e1.0 \\<sqsubset>\\<^sup>?i ?e2.0\n  pre @ [Broadcast (r, Store e i r)] prefix of k\n\ngoal (1 subgoal):\n 1. hb (i, Store e mo i) (r, Store e i r)", "by blast"], ["proof (state)\nthis:\n  hb (i, Store e mo i) (r, Store e i r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) expunge_delete_tag_causality:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\" \n    and \"pre@[Broadcast (ir, Delete is e2)] prefix of k\"\n  shows \"Deliver (i, Expunge e2 mo i) \\<in> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "have f1: \"Deliver (i, Append i e2) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<notin> set (history k)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<notin> set (history k)", "by (metis fst_conv msg_id_unique network.delivery_has_a_cause network_axioms old.prod.inject \n        operation.distinct(15) prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "have f2: \"Deliver (i, Create i e2) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Create i e2) \\<notin> set (history k)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e2) \\<notin> set (history k)", "by (metis fst_conv msg_id_unique network.delivery_has_a_cause network_axioms old.prod.inject \n        operation.distinct(5) prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Create i e2) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "have f3: \"\\<forall> mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)", "by (metis Pair_inject fst_conv msg_id_unique network.delivery_has_a_cause network_axioms \n        operation.simps(25) prefix_msg_in_history)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "hence \"\\<exists> mo1. Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)\""], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. \\<exists>mo1. Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)", "using assms f1 f2"], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  Deliver (i, Append i e2) \\<notin> set (history k)\n  Deliver (i, Create i e2) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. \\<exists>mo1. Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)", "by (meson imap.Broadcast_Deliver_prefix_closed imap_axioms node_histories.prefix_of_appendD \n        node_histories_axioms prefix_elem_to_carriers)"], ["proof (state)\nthis:\n  \\<exists>mo1. Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "then"], ["proof (chain)\npicking this:\n  \\<exists>mo1. Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)", "obtain mo1 :: 'a where\n    \"Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)\""], ["proof (prove)\nusing this:\n  \\<exists>mo1. Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. (\\<And>mo1.\n        Deliver (i, Expunge e2 mo1 i)\n        \\<in> set (history k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "using assms f1 f2 f3"], ["proof (prove)\nusing this:\n  Deliver (i, Expunge e2 mo1 i) \\<in> set (history k)\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  Deliver (i, Append i e2) \\<notin> set (history k)\n  Deliver (i, Create i e2) \\<notin> set (history k)\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "by (metis fst_conv msg_id_unique network.delivery_has_a_cause network_axioms old.prod.inject \n        operation.inject(4) prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Expunge e2 mo i) \\<in> set (history k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) expunge_delete_ids_imply_messages_same:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 = e2", "obtain pre k where P: \"pre@[Broadcast (ir, Delete is e2)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e2)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e2)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"Deliver (i, Expunge e2 mo i) \\<in> set (history k)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "using assms expunge_delete_tag_causality"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?i \\<in> ?is; ?xs prefix of ?j;\n   (?i, Expunge ?e1.0 ?mo ?i) \\<in> set (node_deliver_messages ?xs);\n   (?ir, Delete ?is ?e2.0) \\<in> set (node_deliver_messages ?xs);\n   ?pre @ [Broadcast (?ir, Delete ?is ?e2.0)] prefix of ?k\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Expunge ?e2.0 ?mo ?i)\n                    \\<in> set (history ?k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Expunge e2 mo i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Expunge e2 mo i) \\<in> set (history k)", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Expunge e2 mo i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "using assms"], ["proof (prove)\nusing this:\n  Deliver (i, Expunge e2 mo i) \\<in> set (history k)\n  i \\<in> is\n  xs prefix of j\n  (i, Expunge e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (metis delivery_has_a_cause fst_conv network.msg_id_unique network_axioms \n        operation.inject(4) prefix_msg_in_history prod.inject)"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) store_delete_ids_imply_messages_same:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 = e2", "obtain pre k where P: \"pre@[Broadcast (ir, Delete is e2)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e2)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e2)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "have f1: \"Deliver (i, Append i e2) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<notin> set (history k)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<notin> set (history k)", "by (metis fst_conv msg_id_unique network.delivery_has_a_cause network_axioms old.prod.inject \n        operation.distinct(17) prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "have f2: \"\\<forall> mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)", "by (metis Pair_inject fst_conv msg_id_unique network.delivery_has_a_cause network_axioms \n        operation.distinct(19) prefix_msg_in_history)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "have f3: \"Deliver (i, Create i e2) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Create i e2) \\<notin> set (history k)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e2) \\<notin> set (history k)", "by (metis fst_conv msg_id_unique network.delivery_has_a_cause network_axioms old.prod.inject \n        operation.distinct(8) prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Create i e2) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"(\\<exists> mo1. Deliver (i, Store e2 mo1 i) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  Deliver (i, Create i e2) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. \\<exists>mo1. Deliver (i, Store e2 mo1 i) \\<in> set pre", "using assms P f1 f2 imap_axioms"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e2) \\<notin> set (history k)\n  i \\<in> is\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  Deliver (i, Append i e2) \\<notin> set (history k)\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)\n  imap history\n\ngoal (1 subgoal):\n 1. \\<exists>mo1. Deliver (i, Store e2 mo1 i) \\<in> set pre", "by (meson imap.Broadcast_Deliver_prefix_closed prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  \\<exists>mo1. Deliver (i, Store e2 mo1 i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "then"], ["proof (chain)\npicking this:\n  \\<exists>mo1. Deliver (i, Store e2 mo1 i) \\<in> set pre", "obtain mo1 :: 'a where\n    f3: \"Deliver (i, Store e2 mo1 i) \\<in> set pre\""], ["proof (prove)\nusing this:\n  \\<exists>mo1. Deliver (i, Store e2 mo1 i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. (\\<And>mo1.\n        Deliver (i, Store e2 mo1 i) \\<in> set pre \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo1 i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Store e2 mo1 i) \\<in> set pre", "have f4: \"Deliver (i, Store e2 mo1 i) \\<in> set (history k)\""], ["proof (prove)\nusing this:\n  Deliver (i, Store e2 mo1 i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo1 i) \\<in> set (history k)", "using P prefix_elem_to_carriers"], ["proof (prove)\nusing this:\n  Deliver (i, Store e2 mo1 i) \\<in> set pre\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  \\<lbrakk>?xs prefix of ?i; ?x \\<in> set ?xs\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo1 i) \\<in> set (history k)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo1 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"Deliver (i, Store e2 mo i) \\<in> set pre\""], ["proof (prove)\nusing this:\n  Deliver (i, Store e2 mo1 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo i) \\<in> set pre", "using f2 f3 assms"], ["proof (prove)\nusing this:\n  Deliver (i, Store e2 mo1 i) \\<in> set (history k)\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)\n  Deliver (i, Store e2 mo1 i) \\<in> set pre\n  i \\<in> is\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo i) \\<in> set pre", "by (metis fst_conv msg_id_unique network.delivery_has_a_cause network_axioms old.prod.inject \n        operation.inject(5) prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "have \"Deliver(i, Store e1 mo i) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Store e1 mo i) \\<in> set (history j)", "using assms(2) assms(3) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e1 mo i) \\<in> set (history j)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "ultimately"], ["proof (chain)\npicking this:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "using f4"], ["proof (prove)\nusing this:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n  Deliver (i, Store e2 mo1 i) \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (metis delivery_has_a_cause fst_conv msg_id_unique old.prod.inject operation.inject(5))"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) create_delete_ids_imply_messages_same:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Create i e1) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 = e2", "obtain pre k where P: \"pre@[Broadcast (ir, Delete is e2)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e2)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Create i e1) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e2)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "have f1: \"Deliver (i, Append i e2) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<notin> set (history k)", "by (metis assms(2) assms(3) delivery_has_a_cause fst_conv network.msg_id_unique \n        network.prefix_msg_in_history network_axioms operation.distinct(3) prod.inject)"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "have f2: \"\\<forall> mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)", "by (metis assms(2) assms(3) fst_conv msg_id_unique network.delivery_has_a_cause network_axioms \n        old.prod.inject operation.distinct(5) prefix_msg_in_history)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "have f3: \"\\<forall> mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)", "by (metis Pair_inject assms(2) assms(3) delivery_has_a_cause fst_conv msg_id_unique \n        operation.distinct(7) prefix_msg_in_history)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"Deliver (i, Create i e2) \\<in> set pre\""], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e2) \\<in> set pre", "using assms P f2 f1 imap_axioms"], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\n  i \\<in> is\n  xs prefix of j\n  (i, Create i e1) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)\n  Deliver (i, Append i e2) \\<notin> set (history k)\n  imap history\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e2) \\<in> set pre", "by (meson imap.Broadcast_Deliver_prefix_closed  prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  Deliver (i, Create i e2) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Create i e2) \\<in> set pre", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e2) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "using f1 f2 f3"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e2) \\<in> set pre\n  Deliver (i, Append i e2) \\<notin> set (history k)\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set (history k)\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (metis (no_types, lifting) P assms(2) assms(3) delivery_has_a_cause fst_conv msg_id_unique \n        node_histories.prefix_of_appendD node_histories_axioms old.prod.inject operation.inject(1) \n        prefix_elem_to_carriers prefix_msg_in_history)"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) append_delete_ids_imply_messages_same:\n  assumes \"i \\<in> is\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e1) \\<in> set (node_deliver_messages xs)\" \n    and \"(ir, Delete is e2) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 = e2", "obtain pre k where P: \"pre@[Broadcast (ir, Delete is e2)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e2)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i \\<in> is\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (ir, Delete is e2)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence f1: \"\\<And>e. e \\<in> set pre \\<Longrightarrow> e \\<in> set (history k)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n\ngoal (1 subgoal):\n 1. \\<And>e. e \\<in> set pre \\<Longrightarrow> e \\<in> set (history k)", "using prefix_elem_to_carriers"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  \\<lbrakk>?xs prefix of ?i; ?x \\<in> set ?xs\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. \\<And>e. e \\<in> set pre \\<Longrightarrow> e \\<in> set (history k)", "by blast"], ["proof (state)\nthis:\n  ?e3 \\<in> set pre \\<Longrightarrow> ?e3 \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "have f2: \"Deliver (i, Create i e2) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Create i e2) \\<notin> set pre", "using P f1"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  ?e3 \\<in> set pre \\<Longrightarrow> ?e3 \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Create i e2) \\<notin> set pre", "by (metis assms(2) assms(3) fst_conv msg_id_unique network.delivery_has_a_cause network_axioms \n        old.prod.inject operation.distinct(3) prefix_msg_in_history)"], ["proof (state)\nthis:\n  Deliver (i, Create i e2) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  Deliver (i, Create i e2) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "have D1: \"\\<forall> mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre", "using P f1"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  ?e3 \\<in> set pre \\<Longrightarrow> ?e3 \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre", "by (metis Pair_inject assms(2) assms(3) fst_conv msg_id_unique network.delivery_has_a_cause \n        network_axioms operation.distinct(15) prefix_msg_in_history)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "have D2: \"\\<forall> mo. Deliver (i, Store e2 mo i) \\<notin> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre", "using P f1"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  ?e3 \\<in> set pre \\<Longrightarrow> ?e3 \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre", "by (metis Pair_inject assms(2) assms(3) fst_conv msg_id_unique network.delivery_has_a_cause \n        network_axioms operation.simps(23) prefix_msg_in_history)"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"Deliver (i, Append i e2) \\<in> set pre\""], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre", "using P D1 D2 f2 assms(1) Broadcast_Deliver_prefix_closed"], ["proof (prove)\nusing this:\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre\n  pre @ [Broadcast (ir, Delete is e2)] prefix of k\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre\n  Deliver (i, Create i e2) \\<notin> set pre\n  i \\<in> is\n  \\<lbrakk>?xs @ [Broadcast (?r, Delete ?ix ?e)] prefix of ?j;\n   ?i \\<in> ?ix\\<rbrakk>\n  \\<Longrightarrow> Deliver (?i, Create ?i ?e) \\<in> set ?xs \\<or>\n                    Deliver (?i, Append ?i ?e) \\<in> set ?xs \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Expunge ?e mo ?i) \\<in> set ?xs) \\<or>\n                    (\\<exists>mo.\n                        Deliver (?i, Store ?e mo ?i) \\<in> set ?xs)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "have \"Deliver (i, Append i e1) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e1) \\<in> set (history j)", "using assms(2) assms(3) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e1) \\<in> set (history j)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Append i e1) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "ultimately"], ["proof (chain)\npicking this:\n  Deliver (i, Create i e2) \\<notin> set pre\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre\n  Deliver (i, Append i e2) \\<in> set pre\n  Deliver (i, Append i e1) \\<in> set (history j)", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e2) \\<notin> set pre\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre\n  Deliver (i, Append i e2) \\<in> set pre\n  Deliver (i, Append i e1) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "using assms"], ["proof (prove)\nusing this:\n  Deliver (i, Create i e2) \\<notin> set pre\n  \\<forall>mo. Deliver (i, Expunge e2 mo i) \\<notin> set pre\n  \\<forall>mo. Deliver (i, Store e2 mo i) \\<notin> set pre\n  Deliver (i, Append i e2) \\<in> set pre\n  Deliver (i, Append i e1) \\<in> set (history j)\n  i \\<in> is\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  (ir, Delete is e2) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (metis f1 msg_id_unique network.delivery_has_a_cause network_axioms old.prod.inject \n        operation.inject(3) prod.sel(1))"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) append_expunge_ids_imply_messages_same:\n  assumes \"i = mo\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e1) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e2 mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 = e2", "obtain pre k where pre: \"pre@[Broadcast (r, Expunge e2 mo r)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Expunge e2 mo r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i = mo\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e2 mo r) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Expunge e2 mo r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Expunge e2 mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Expunge e2 mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"Deliver (mo, Append mo e2) \\<in> set pre \\<or> \n  (\\<exists> mo2 . Deliver (mo, Store e2 mo2 mo) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e2 mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)", "using Broadcast_Expunge_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e2 mo r)] prefix of k\n  ?xs @ [Broadcast (?i, Expunge ?e ?mo ?i)] prefix of ?j \\<Longrightarrow>\n  Deliver (?mo, Append ?mo ?e) \\<in> set ?xs \\<or>\n  (\\<exists>mo2. Deliver (?mo, Store ?e mo2 ?mo) \\<in> set ?xs)\n  i = mo\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)", "by (meson imap.Broadcast_Deliver_prefix_closed imap_axioms)"], ["proof (state)\nthis:\n  Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"Deliver (i, Append i e2) \\<in> set pre\""], ["proof (prove)\nusing this:\n  Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre", "using assms"], ["proof (prove)\nusing this:\n  Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)\n  i = mo\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e2 mo r) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre", "by (metis (no_types, lifting) pre delivery_has_a_cause fst_conv hb_broadcast_exists1 \n        msg_id_unique network.hb_deliver network.prefix_msg_in_history network_axioms \n        node_histories.events_in_local_order node_histories_axioms operation.distinct(17) \n        prod.inject)"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "have \"Deliver (i, Append i e1) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e1) \\<in> set (history j)", "using assms(2) assms(3) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e1) \\<in> set (history j)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Append i e1) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "ultimately"], ["proof (chain)\npicking this:\n  pre @ [Broadcast (r, Expunge e2 mo r)] prefix of k\n  Deliver (i, Append i e2) \\<in> set pre\n  Deliver (i, Append i e1) \\<in> set (history j)", "show ?thesis"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e2 mo r)] prefix of k\n  Deliver (i, Append i e2) \\<in> set pre\n  Deliver (i, Append i e1) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (metis (no_types, lifting) fst_conv network.delivery_has_a_cause network.msg_id_unique \n        network_axioms operation.inject(3) prefix_elem_to_carriers prefix_of_appendD prod.inject)"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) append_store_ids_imply_messages_same:\n  assumes \"i = mo\"\n    and \"xs prefix of j\"\n    and \"(i, Append i e1) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Store e2 mo r) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 = e2", "obtain pre k where P: \"pre@[Broadcast (r, Store e2 mo r)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Store e2 mo r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  i = mo\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  (r, Store e2 mo r) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Store e2 mo r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Store e2 mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Store e2 mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence A: \"Deliver (mo, Append mo e2) \\<in> set pre \\<or> \n  (\\<exists> mo2 . Deliver (mo, Store e2 mo2 mo) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e2 mo r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)", "using Broadcast_Store_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e2 mo r)] prefix of k\n  ?xs @ [Broadcast (?i, Store ?e ?mo ?i)] prefix of ?j \\<Longrightarrow>\n  Deliver (?mo, Append ?mo ?e) \\<in> set ?xs \\<or>\n  (\\<exists>mo2. Deliver (?mo, Store ?e mo2 ?mo) \\<in> set ?xs)\n  i = mo\n\ngoal (1 subgoal):\n 1. Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)", "by (meson imap.Broadcast_Deliver_prefix_closed imap_axioms)"], ["proof (state)\nthis:\n  Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. e1 = e2", "have f1: \"Deliver (i, Append i e1) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e1) \\<in> set (history j)", "using assms(2) assms(3) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e1) \\<in> set (history j)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Append i e1) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"Deliver (i, Append i e2) \\<in> set pre\""], ["proof (prove)\nusing this:\n  Deliver (i, Append i e1) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre", "using assms P A"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e1) \\<in> set (history j)\n  i = mo\n  xs prefix of j\n  (i, Append i e1) \\<in> set (node_deliver_messages xs)\n  (r, Store e2 mo r) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (r, Store e2 mo r)] prefix of k\n  Deliver (mo, Append mo e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (mo, Store e2 mo2 mo) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre", "by (metis Pair_inject assms(1) P delivery_has_a_cause fst_conv msg_id_unique \n        operation.simps(23) prefix_elem_to_carriers prefix_of_appendD)"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "then"], ["proof (chain)\npicking this:\n  Deliver (i, Append i e2) \\<in> set pre", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e2) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "using f1"], ["proof (prove)\nusing this:\n  Deliver (i, Append i e2) \\<in> set pre\n  Deliver (i, Append i e1) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (metis P delivery_has_a_cause fst_conv msg_id_unique \n        node_histories.prefix_of_appendD node_histories_axioms operation.inject(3) \n        prefix_elem_to_carriers prod.inject)"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) expunge_store_ids_imply_messages_same:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Expunge e2 i r) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 = e2", "obtain pre k where P: \"pre@[Broadcast (r, Expunge e2 i r)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Expunge e2 i r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e2 i r) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Expunge e2 i r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence pprefix: \"pre prefix of k\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. pre prefix of k", "using P"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\n  pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. pre prefix of k", "by blast"], ["proof (state)\nthis:\n  pre prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "have A: \"Deliver (i, Append i e2) \\<in> set pre \\<or> \n  (\\<exists> mo2 . Deliver (i, Store e2 mo2 i) \\<in> set pre)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre)", "using Broadcast_Expunge_Deliver_prefix_closed assms(1) P"], ["proof (prove)\nusing this:\n  ?xs @ [Broadcast (?i, Expunge ?e ?mo ?i)] prefix of ?j \\<Longrightarrow>\n  Deliver (?mo, Append ?mo ?e) \\<in> set ?xs \\<or>\n  (\\<exists>mo2. Deliver (?mo, Store ?e mo2 ?mo) \\<in> set ?xs)\n  xs prefix of j\n  pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. e1 = e2", "have \"Deliver (i, Store e2 mo i) \\<in> set pre\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo i) \\<in> set pre", "using assms A P"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e2 i r) \\<in> set (node_deliver_messages xs)\n  Deliver (i, Append i e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre)\n  pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo i) \\<in> set pre", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs prefix of j;\n     (i, Store e1 mo i) \\<in> set (node_deliver_messages xs);\n     (r, Expunge e2 i r) \\<in> set (node_deliver_messages xs);\n     Deliver (i, Append i e2) \\<in> set pre \\<or>\n     (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre);\n     pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\\<rbrakk>\n    \\<Longrightarrow> Deliver (i, Store e2 mo i) \\<in> set pre", "obtain op1 :: \"'a \\<times> ('a, 'b) operation \\<Rightarrow> nat\" where\n      f1: \"Broadcast (i, Store e1 mo i) \\<in> set (history (op1 (i, Store e1 mo i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>op1.\n        Broadcast (i, Store e1 mo i)\n        \\<in> set (history (op1 (i, Store e1 mo i))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson assms(1) assms(2) delivery_has_a_cause prefix_msg_in_history)"], ["proof (state)\nthis:\n  Broadcast (i, Store e1 mo i) \\<in> set (history (op1 (i, Store e1 mo i)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs prefix of j;\n     (i, Store e1 mo i) \\<in> set (node_deliver_messages xs);\n     (r, Expunge e2 i r) \\<in> set (node_deliver_messages xs);\n     Deliver (i, Append i e2) \\<in> set pre \\<or>\n     (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre);\n     pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\\<rbrakk>\n    \\<Longrightarrow> Deliver (i, Store e2 mo i) \\<in> set pre", "then"], ["proof (chain)\npicking this:\n  Broadcast (i, Store e1 mo i) \\<in> set (history (op1 (i, Store e1 mo i)))", "show ?thesis"], ["proof (prove)\nusing this:\n  Broadcast (i, Store e1 mo i) \\<in> set (history (op1 (i, Store e1 mo i)))\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo i) \\<in> set pre", "using f1 A pprefix delivery_has_a_cause network.msg_id_unique network_axioms \n        node_histories.prefix_to_carriers node_histories_axioms"], ["proof (prove)\nusing this:\n  Broadcast (i, Store e1 mo i) \\<in> set (history (op1 (i, Store e1 mo i)))\n  Broadcast (i, Store e1 mo i) \\<in> set (history (op1 (i, Store e1 mo i)))\n  Deliver (i, Append i e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre)\n  pre prefix of k\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  \\<lbrakk>network ?history ?msg_id;\n   Broadcast ?m1.0 \\<in> set (?history ?i);\n   Broadcast ?m2.0 \\<in> set (?history ?j);\n   ?msg_id ?m1.0 = ?msg_id ?m2.0\\<rbrakk>\n  \\<Longrightarrow> ?i = ?j \\<and> ?m1.0 = ?m2.0\n  network history fst\n  \\<lbrakk>node_histories ?history;\n   node_histories.prefix_of_node_history ?history ?xs ?i\\<rbrakk>\n  \\<Longrightarrow> set ?xs \\<subseteq> set (?history ?i)\n  node_histories history\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo i) \\<in> set pre", "by fastforce"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "have \"Deliver (i, Store e1 mo i) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Store e1 mo i) \\<in> set (history j)", "using assms(1) assms(2) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e1 mo i) \\<in> set (history j)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "ultimately"], ["proof (chain)\npicking this:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)", "show ?thesis"], ["proof (prove)\nusing this:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "using assms P"], ["proof (prove)\nusing this:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (r, Expunge e2 i r) \\<in> set (node_deliver_messages xs)\n  pre @ [Broadcast (r, Expunge e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (metis delivery_has_a_cause fst_conv msg_id_unique operation.inject(5) \n        prefix_elem_to_carriers prefix_of_appendD prod.inject)"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in imap) store_store_ids_imply_messages_same:\n  assumes \"xs prefix of j\"\n    and \"(i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\" \n    and \"(r, Store e2 i r) \\<in> set (node_deliver_messages xs)\"\n  shows \"e1 = e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e1 = e2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e1 = e2", "obtain pre k where P: \"pre@[Broadcast (r, Store e2 i r)] prefix of k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Store e2 i r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms delivery_has_a_cause events_before_exist prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (r, Store e2 i r) \\<in> set (node_deliver_messages xs)\n  Deliver ?m \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>j. Broadcast ?m \\<in> set (history j)\n  ?x \\<in> set (history ?i) \\<Longrightarrow>\n  \\<exists>pre. pre @ [?x] prefix of ?i\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. (\\<And>pre k.\n        pre @ [Broadcast (r, Store e2 i r)] prefix of k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Store e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  pre @ [Broadcast (r, Store e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence A: \"Deliver (i, Append i e2) \\<in> set pre \\<or>\n    (\\<exists> mo2 . Deliver (i, Store e2 mo2 i) \\<in> set pre)\""], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e2 i r)] prefix of k\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre)", "using Broadcast_Store_Deliver_prefix_closed assms(1)"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e2 i r)] prefix of k\n  ?xs @ [Broadcast (?i, Store ?e ?mo ?i)] prefix of ?j \\<Longrightarrow>\n  Deliver (?mo, Append ?mo ?e) \\<in> set ?xs \\<or>\n  (\\<exists>mo2. Deliver (?mo, Store ?e mo2 ?mo) \\<in> set ?xs)\n  xs prefix of j\n\ngoal (1 subgoal):\n 1. Deliver (i, Append i e2) \\<in> set pre \\<or>\n    (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre)", "by blast"], ["proof (state)\nthis:\n  Deliver (i, Append i e2) \\<in> set pre \\<or>\n  (\\<exists>mo2. Deliver (i, Store e2 mo2 i) \\<in> set pre)\n\ngoal (1 subgoal):\n 1. e1 = e2", "have \"\\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)", "using P prefix_elem_to_carriers"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e2 i r)] prefix of k\n  \\<lbrakk>?xs prefix of ?i; ?x \\<in> set ?xs\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. \\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)", "by auto"], ["proof (state)\nthis:\n  \\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. e1 = e2", "hence \"Deliver (i, Store e2 mo i) \\<in> set pre\""], ["proof (prove)\nusing this:\n  \\<forall>e. e \\<notin> set pre \\<or> e \\<in> set (history k)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e2 mo i) \\<in> set pre", "by (metis A assms(1) assms(2) delivery_has_a_cause fst_conv msg_id_unique \n        operation.distinct(17) operation.inject(5) prefix_msg_in_history prod.inject)"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "moreover"], ["proof (state)\nthis:\n  Deliver (i, Store e2 mo i) \\<in> set pre\n\ngoal (1 subgoal):\n 1. e1 = e2", "have \"Deliver (i, Store e1 mo i) \\<in> set (history j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Deliver (i, Store e1 mo i) \\<in> set (history j)", "using assms(1) assms(2) prefix_msg_in_history"], ["proof (prove)\nusing this:\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  \\<lbrakk>?es prefix of ?i;\n   ?m \\<in> set (node_deliver_messages ?es)\\<rbrakk>\n  \\<Longrightarrow> Deliver ?m \\<in> set (history ?i)\n\ngoal (1 subgoal):\n 1. Deliver (i, Store e1 mo i) \\<in> set (history j)", "by auto"], ["proof (state)\nthis:\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "ultimately"], ["proof (chain)\npicking this:\n  pre @ [Broadcast (r, Store e2 i r)] prefix of k\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)", "show ?thesis"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e2 i r)] prefix of k\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n\ngoal (1 subgoal):\n 1. e1 = e2", "using assms"], ["proof (prove)\nusing this:\n  pre @ [Broadcast (r, Store e2 i r)] prefix of k\n  Deliver (i, Store e2 mo i) \\<in> set pre\n  Deliver (i, Store e1 mo i) \\<in> set (history j)\n  xs prefix of j\n  (i, Store e1 mo i) \\<in> set (node_deliver_messages xs)\n  (r, Store e2 i r) \\<in> set (node_deliver_messages xs)\n\ngoal (1 subgoal):\n 1. e1 = e2", "by (metis Pair_inject delivery_has_a_cause msg_id_unique operation.simps(5) \n        prefix_elem_to_carriers prefix_of_appendD prod.sel(1))"], ["proof (state)\nthis:\n  e1 = e2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}